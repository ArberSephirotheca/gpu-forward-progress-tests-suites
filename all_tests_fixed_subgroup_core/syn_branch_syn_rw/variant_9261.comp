#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = _GLF_IDENTITY((0 ^ _GLF_IDENTITY(1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) | (ivec2(0, 0)))))) | (_GLF_IDENTITY(0, ~ (~ (0))))) | (1))), int(ivec4((0 ^ _GLF_IDENTITY(1, 0 | (1))), 0, 1, 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (0 ^ (0 << _GLF_IDENTITY(int(0), int(0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false)))))), bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false)))))), true, true)))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), ~ (~ (_GLF_IDENTITY(int(1), int(1)))))) >> _GLF_IDENTITY(int(1), int(1)))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) ^ 0))
      {
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), bool(bvec4(false, _GLF_IDENTITY(true, true && (true)), false, true))), (false) && true)), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))), false, _GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(48994u, 122558u, 66494u)) : _GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), clamp(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups))))))), min(gl_NumWorkGroups, gl_NumWorkGroups)).x;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true));
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true))))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(~ (1), ~ (1))))) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), clamp(_GLF_IDENTITY(int(5), (int(5)) | 0), int(5), _GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), clamp(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), int(ivec3(_GLF_IDENTITY(int(5), int(5)), 0, 0))))))); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
                  barrier();
                }
               barrier();
              }
            }
          }
         else
          {
          }
         do
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))));
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                      {
                       barrier();
                      }
                    }
                   barrier();
                  }
                }
              }
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 | 0) ^ 0)); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(injectionSwitch, injectionSwitch)).x, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(injectionSwitch, injectionSwitch)).x, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, sin(0.0), sqrt(sqrt(1.0)), 0.0, 1.0, 0.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(injectionSwitch, injectionSwitch)).x, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, sin(0.0), sqrt(sqrt(1.0)), 0.0, 1.0, 0.0, 0.0))))) > injectionSwitch.y))));
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), false)), true && (bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), false))))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)) > 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               barrier();
              }
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true)))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) * vec2(1.0, 1.0)), vec2(vec3(injectionSwitch, log(1.0)))).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))), _GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) / (1u & 1u)) >> 0u)) | _GLF_IDENTITY(((gl_WorkGroupID)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(((gl_WorkGroupID)))), ~ (~ (uvec3(uvec3(((gl_WorkGroupID))))))), ~ (~ (uvec3(uvec3(((gl_WorkGroupID)))))))))) ^ uvec3(0u, 0u, 0u)) << uvec3(0u, _GLF_IDENTITY(0u, (0u) << (41378u & 0u)), 0u))) | (gl_WorkGroupID)).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) - 0u)) * (0u ^ 1u)), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) - 0u)) * (0u ^ 1u))) * 1u), _GLF_IDENTITY((0u), ((0u)) / (1u & 1u)) >> 0u)) | _GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(uvec3(((_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))))))), ~ (~ (uvec3(uvec3(((gl_WorkGroupID)))))))))) ^ uvec3(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(_GLF_IDENTITY(~ (0u), 0u | (~ _GLF_IDENTITY((0u), _GLF_IDENTITY(uint(uint((0u))), uint(uvec3(uint(uint((0u))), 0u, 0u)))))), ~ (0u))))), 0u)), (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u ^ (_GLF_IDENTITY((0u), 0u ^ ((0u))))) + 0u)) - 0u)) * (0u ^ 1u)), _GLF_IDENTITY((0u), ((0u)) / (_GLF_IDENTITY(1u & 1u, (_GLF_IDENTITY(1u & 1u, 0u ^ (_GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED((subgroup_size ^ subgroup_size)))) & 1u))) + 0u))) >> 0u)) | _GLF_IDENTITY(((gl_WorkGroupID)), _GLF_IDENTITY(uvec3(uvec3(((gl_WorkGroupID)))), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((uvec3(uvec3(((gl_WorkGroupID))))), _GLF_IDENTITY(uvec3(uvec3((uvec3(uvec3(((gl_WorkGroupID))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(uvec3((uvec3(uvec3(((gl_WorkGroupID))))))), (uvec3(uvec3((uvec3(uvec3(((gl_WorkGroupID)))))))) ^ uvec3(0u, 0u, 0u))), (~ (_GLF_IDENTITY(uvec3(uvec3((uvec3(uvec3(((gl_WorkGroupID))))))), (uvec3(uvec3((uvec3(uvec3(((gl_WorkGroupID)))))))) ^ uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY((uvec3(uvec3(((gl_WorkGroupID))))), _GLF_IDENTITY(uvec3(uvec3((uvec3(uvec3(((gl_WorkGroupID))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(uvec3((uvec3(uvec3(((gl_WorkGroupID))))))), (uvec3(uvec3((uvec3(uvec3(((gl_WorkGroupID)))))))) ^ uvec3(0u, 0u, 0u))), (~ (_GLF_IDENTITY(uvec3(uvec3((uvec3(uvec3(((gl_WorkGroupID))))))), (uvec3(uvec3((uvec3(uvec3(((gl_WorkGroupID)))))))) ^ uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u))))), uvec3(uvec4(_GLF_IDENTITY((uvec3(uvec3(((gl_WorkGroupID))))), _GLF_IDENTITY(uvec3(uvec3((uvec3(uvec3(((gl_WorkGroupID))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(uvec3((uvec3(uvec3(((gl_WorkGroupID))))))), (uvec3(uvec3((uvec3(uvec3(((gl_WorkGroupID)))))))) ^ uvec3(0u, 0u, 0u))), (~ (_GLF_IDENTITY(uvec3(uvec3((uvec3(uvec3(((gl_WorkGroupID))))))), (uvec3(uvec3((uvec3(uvec3(((gl_WorkGroupID)))))))) ^ uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u))))), 1u)))) << (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))))))))) ^ uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) - 0u)) * (0u ^ 1u)), _GLF_IDENTITY((0u), _GLF_IDENTITY(((0u)) / (1u & 1u), (((0u)) / (1u & 1u)) | 0u)) >> 0u)) | _GLF_IDENTITY(((gl_WorkGroupID)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(((gl_WorkGroupID)))), (false ? _GLF_FUZZED(uvec3(104308u, 96477u, 59073u)) : uvec3(uvec3(((gl_WorkGroupID)))))), ~ (~ (uvec3(uvec3(((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))))))))))) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) - _GLF_IDENTITY(0u, 0u | (0u)))) * (0u ^ 1u)), _GLF_IDENTITY((0u), ((0u)) / (_GLF_IDENTITY(1u, (1u) | 0u) & 1u)) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) - 0u)) * (0u ^ 1u)), _GLF_IDENTITY((0u), ((0u)) / (1u & 1u)) >> 0u)) - 0u)) | _GLF_IDENTITY(((gl_WorkGroupID)), _GLF_IDENTITY(uvec3(uvec3(((gl_WorkGroupID)))), ~ (~ (uvec3(uvec3(((gl_WorkGroupID)))))))))) ^ uvec3(0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, min(0u, 0u)))), 0u))) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(51079u, 3077u, 145428u)) : uvec3(0u, 0u, 0u)))), _GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) - 0u)) * (0u ^ 1u)), _GLF_IDENTITY(_GLF_IDENTITY((0u), ((0u)) / (1u & 1u)) >> 0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((0u), ((0u)) / (1u & 1u)) >> 0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((0u), ((0u)) / _GLF_IDENTITY((1u & 1u), ((1u & 1u)) - 0u)) >> 0u, 0u, (0u << _GLF_IDENTITY(uint(7u), uint(7u))))), uint(uvec2(uint(uvec3(_GLF_IDENTITY((0u), ((0u)) / (1u & 1u)) >> 0u, 0u, (0u << _GLF_IDENTITY(uint(7u), uint(7u))))), 1u)))), 1u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((0u), ((0u)) / (1u & 1u)) >> 0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((0u), ((0u)) / (1u & 1u)) >> 0u, 0u, (0u << _GLF_IDENTITY(uint(7u), uint(7u))))), _GLF_IDENTITY(uint(uvec2(uint(uvec3(_GLF_IDENTITY((0u), ((0u)) / (1u & 1u)) >> 0u, 0u, (0u << _GLF_IDENTITY(uint(7u), uint(7u))))), 1u)), 0u ^ (uint(uvec2(uint(uvec3(_GLF_IDENTITY((0u), ((0u)) / (1u & 1u)) >> 0u, 0u, (0u << _GLF_IDENTITY(uint(7u), uint(7u))))), 1u)))))), 1u)), (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((0u), ((0u)) / (1u & 1u)) >> 0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((0u), ((0u)) / (1u & 1u)) >> 0u, 0u, (0u << _GLF_IDENTITY(uint(7u), uint(7u))))), _GLF_IDENTITY(uint(uvec2(uint(uvec3(_GLF_IDENTITY((0u), ((0u)) / (1u & 1u)) >> 0u, 0u, (0u << _GLF_IDENTITY(uint(7u), uint(7u))))), 1u)), 0u ^ (uint(uvec2(uint(uvec3(_GLF_IDENTITY((0u), ((0u)) / (1u & 1u)) >> 0u, 0u, (0u << _GLF_IDENTITY(uint(7u), uint(7u))))), 1u)))))), 1u))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) * _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))), uint(_GLF_IDENTITY(uvec2(~ (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))), 0u), ~ (~ (uvec2(~ (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))), 0u)))))))))))) | _GLF_IDENTITY(((gl_WorkGroupID)), _GLF_IDENTITY(uvec3(uvec3(((gl_WorkGroupID)))), ~ (~ (uvec3(uvec3(((gl_WorkGroupID)))))))))) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY((gl_WorkGroupID), _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) - 0u), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (0u) + 0u), 0u), (uvec2(_GLF_IDENTITY(0u, (0u) + 0u), 0u)) - uvec2(0u, 0u))))) - 0u)))) * (0u ^ 1u)), _GLF_IDENTITY((0u), _GLF_IDENTITY(((0u)), max(((0u)), ((0u)))) / _GLF_IDENTITY((1u & 1u), 0u + ((_GLF_IDENTITY(1u & 1u, uint(uvec4(1u & 1u, (1u ^ 0u), 1u, 0u))))))) >> 0u)), _GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | (_GLF_IDENTITY(0u, (0u) - 0u))), (_GLF_IDENTITY(0u, (0u) + 0u)) - 0u)) * (0u ^ 1u)), _GLF_IDENTITY((0u), ((0u)) / _GLF_IDENTITY((1u & 1u), 0u + ((1u & 1u)))) >> 0u))), (_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | (_GLF_IDENTITY(0u, (0u) - 0u))), (_GLF_IDENTITY(0u, (0u) + 0u)) - 0u)) * (0u ^ 1u)), _GLF_IDENTITY((0u), ((0u)) / _GLF_IDENTITY((1u & 1u), 0u + ((1u & 1u)))) >> 0u))), max((uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | (_GLF_IDENTITY(0u, (0u) - 0u))), (_GLF_IDENTITY(0u, (0u) + 0u)) - 0u)) * (0u ^ 1u)), _GLF_IDENTITY((0u), ((0u)) / _GLF_IDENTITY((1u & 1u), 0u + ((1u & 1u)))) >> 0u))), (uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | (_GLF_IDENTITY(0u, (0u) - 0u))), (_GLF_IDENTITY(0u, (0u) + 0u)) - 0u)) * (0u ^ 1u)), _GLF_IDENTITY((0u), ((0u)) / _GLF_IDENTITY((1u & 1u), 0u + ((1u & 1u)))) >> 0u)))))) >> uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u)) | _GLF_IDENTITY(((gl_WorkGroupID)), _GLF_IDENTITY(uvec3(uvec3(((gl_WorkGroupID)))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(((gl_WorkGroupID)), clamp(_GLF_IDENTITY(((gl_WorkGroupID)), min(((gl_WorkGroupID)), ((gl_WorkGroupID)))), ((gl_WorkGroupID)), ((gl_WorkGroupID)))))), uvec3(uvec3(uvec3(uvec3(_GLF_IDENTITY(((gl_WorkGroupID)), clamp(_GLF_IDENTITY(((gl_WorkGroupID)), min(((gl_WorkGroupID)), ((gl_WorkGroupID)))), ((gl_WorkGroupID)), ((gl_WorkGroupID))))))))))), ((~ (_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(((gl_WorkGroupID)), clamp(_GLF_IDENTITY(((gl_WorkGroupID)), min(((gl_WorkGroupID)), ((gl_WorkGroupID)))), ((gl_WorkGroupID)), ((gl_WorkGroupID)))))), uvec3(uvec3(uvec3(uvec3(_GLF_IDENTITY(((gl_WorkGroupID)), clamp(_GLF_IDENTITY(((gl_WorkGroupID)), min(((gl_WorkGroupID)), ((gl_WorkGroupID)))), ((gl_WorkGroupID)), ((gl_WorkGroupID)))))))))))) - (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), uvec3(1u, 1u, 1u) * (uvec3(6u)))))))))) ^ uvec3(0u, 0u, 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), (gl_WorkGroupID))), uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) - 0u)) * (0u ^ 1u)), _GLF_IDENTITY(_GLF_IDENTITY((0u), ((0u)) / (1u & 1u)), (_GLF_IDENTITY((0u), ((0u)) / (1u & 1u))) / 1u) >> 0u)) | _GLF_IDENTITY(((gl_WorkGroupID)), _GLF_IDENTITY(uvec3(uvec3(((gl_WorkGroupID)))), ~ (~ (uvec3(uvec3(((gl_WorkGroupID)))))))))) ^ uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) - 0u)) * (0u ^ 1u)), _GLF_IDENTITY((0u), ((0u)) / (1u & 1u)) >> 0u)) | _GLF_IDENTITY(((gl_WorkGroupID)), _GLF_IDENTITY(uvec3(uvec3(((gl_WorkGroupID)))), ~ (~ (uvec3(uvec3(((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])))))))))))) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u))), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u)))) << uvec3(0u, 0u, 0u)) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u))) * (gl_WorkGroupID))) / uvec3(1u, 1u, 1u))), (true ? (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u))) * (gl_WorkGroupID))) / uvec3(1u, 1u, 1u))) : _GLF_FUZZED(uvec3(67233u, 17179u, 15390u)))), (_GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) - 0u)) * (0u ^ 1u)), _GLF_IDENTITY((0u), ((0u)) / (1u & 1u)) >> 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) - 0u)) * (0u ^ 1u)), _GLF_IDENTITY((0u), ((0u)) / (1u & 1u)) >> 0u)), 1u * (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) - 0u)) * (0u ^ 1u)), _GLF_IDENTITY((0u), ((0u)) / (1u & 1u)) >> 0u))))))) | _GLF_IDENTITY(((gl_WorkGroupID)), _GLF_IDENTITY(uvec3(uvec3(((gl_WorkGroupID)))), ~ (~ (uvec3(uvec3(((gl_WorkGroupID)))))))))) ^ uvec3(0u, 0u, 0u)))))) << uvec3(0u, _GLF_IDENTITY(0u, (0u) << (41378u & 0u)), 0u))) | _GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), (gl_WorkGroupID)))) >> uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u))).x, (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) + 0u)), _GLF_IDENTITY(((_GLF_IDENTITY(0u, (0u) + 0u))) - 0u, 0u + (_GLF_IDENTITY(((_GLF_IDENTITY(0u, (0u) + 0u))) - 0u, (((_GLF_IDENTITY(0u, (0u) + 0u))) - 0u) ^ 0u)))) - 0u, (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) + 0u)), ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), clamp((0u), _GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (0u), (0u))), (0u))) + 0u))) - 0u) - 0u) << 0u))), ((_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) + 0u)), _GLF_IDENTITY(((_GLF_IDENTITY(0u, (0u) + 0u))) - 0u, 0u + (_GLF_IDENTITY(((_GLF_IDENTITY(0u, (0u) + 0u))) - 0u, (((_GLF_IDENTITY(0u, (0u) + 0u))) - 0u) ^ 0u)))) - 0u, (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) + 0u)), ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), clamp((0u), _GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (0u), (0u))), (0u))) + 0u))) - 0u) - 0u) << 0u)))) | ((_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) + 0u)), _GLF_IDENTITY(((_GLF_IDENTITY(0u, (0u) + 0u))) - 0u, 0u + (_GLF_IDENTITY(((_GLF_IDENTITY(0u, (0u) + 0u))) - 0u, (((_GLF_IDENTITY(0u, (0u) + 0u))) - 0u) ^ 0u)))) - 0u, (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) + 0u)), ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), clamp((0u), _GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (0u), (0u))), (0u))) + 0u))) - 0u) - 0u) << 0u))))) * (0u ^ 1u)), _GLF_IDENTITY((0u), ((0u)) / (1u & _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 0u))))), 1u)))) >> 0u)) | _GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u))), _GLF_IDENTITY(uvec3(uvec3(((gl_WorkGroupID)))), ~ (~ (uvec3(uvec3(((gl_WorkGroupID)))))))))) ^ uvec3(0u, 0u, 0u)) << uvec3(0u, _GLF_IDENTITY(0u, (0u) << (_GLF_IDENTITY(41378u, _GLF_IDENTITY((41378u) ^ (0u << _GLF_IDENTITY(uint(5u), uint(5u))), min((41378u) ^ (0u << _GLF_IDENTITY(uint(5u), uint(5u))), (41378u) ^ (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))) & _GLF_IDENTITY(0u, max(0u, 0u)))), 0u))) | (gl_WorkGroupID)).x) ^ 0u)) - (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), max(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u))), uint(_GLF_IDENTITY(7u, (7u) / 1u)))))));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).y))))
      {
       barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(188.377)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false), ! (! (_GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false))))))))), false, _GLF_IDENTITY(true, true && (true)), true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false, true && (false)), false))) || false)))))), false, true, true))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bvec2(! ((injectionSwitch.x < injectionSwitch.y)), false))))), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7741.0191), _GLF_FUZZED(-1.0)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), false, true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(36.50, -0.8)) : mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))))) + vec2(0.0, 0.0)).y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(36.50, -0.8)) : mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))))) + vec2(0.0, 0.0)).y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), false, true), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(36.50, -0.8)) : mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))))) + vec2(0.0, 0.0)).y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), false, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(36.50, -0.8)) : mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))))) + vec2(0.0, 0.0)).y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), false, true), false))))), true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(36.50, -0.8)) : mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))))) + vec2(0.0, 0.0)).y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(36.50, -0.8)) : mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))))) + vec2(0.0, 0.0)).y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), false, true), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(36.50, -0.8)) : mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))))) + vec2(0.0, 0.0)).y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), false, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(36.50, -0.8)) : mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))))) + vec2(0.0, 0.0)).y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), false, true), false))))), true))))), true)))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), false, true))), false))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), ! (! (true && (false))))) || false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(35.95)), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(normalize(-89.90)))), 1.0, 0.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0)))), false, false))) || false)))))), false, _GLF_IDENTITY(true, true && (true)), true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), bvec3(bvec3(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))))), true)))))), _GLF_IDENTITY((bool(bvec3((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false, true && (false)), false))), false || ((bool(bvec3((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false, true && (false)), false))))) || false)))))), false, true, true))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))) && true)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, _GLF_IDENTITY(false, ! (! (false))))), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), false, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))))), true && (! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))))))))))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bvec3(bool(bool(true)), true, false)))))))))))), false, true))), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))))), true && (! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))))))))))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bvec3(bool(bool(true)), true, false)))))))))))), false, true))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))))), true && (! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))))))))))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bvec3(bool(bool(true)), true, false)))))))))))), false, true))), false)))), true))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true), bvec3(bvec4(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)), ! (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)), false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))) || false)))), false, false))) || false)))))), false, _GLF_IDENTITY(true, true && (true)), true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false, true && (false)), false))) || false)))))), false, true, true))), false, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && true)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), true))), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))))))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y), false, false))) || false)))))), _GLF_IDENTITY(false, true && (false)), true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), false, true))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), false, true))), false))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), false, true))), false))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), false, true))), false))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), false, true))), false))))), true))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), false, false), bvec3(bvec4(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), false, false), true))))) || false)))))), false, _GLF_IDENTITY(true, true && (true)), true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false, true && (false)), false))) || _GLF_IDENTITY(false, ! (! (false))))))))), false, true, true))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), true && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), ! (! (! (_GLF_IDENTITY(true, true && (true))))))))))))), false, true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, _GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false))))), ! (! (bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false))))))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), false, true))), false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true), bvec3(bvec4(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, _GLF_IDENTITY(true, true && (true)), true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), false, false), bvec3(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))))), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false, true && (false)), false))) || false)))))), false, true, true))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, _GLF_IDENTITY(true, ! (! (true))), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), false, true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), bool(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), true)))))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bool(_GLF_IDENTITY(bool(true), (bool(true)) || false)))))) && (true)))))))), false, true))), false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), false, false), bvec3(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))))), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false, true && (false)), false))) || false)))))), false, true, true))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, _GLF_IDENTITY(true, ! (! (true))), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), false, true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), bool(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), true)))))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bool(_GLF_IDENTITY(bool(true), (bool(true)) || false)))))) && (true)))))))), false, true))), false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), false, false), bvec3(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))))), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false, true && (false)), false))) || false)))))), false, true, true))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, _GLF_IDENTITY(true, ! (! (true))), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), false, true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), bool(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), true)))))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bool(_GLF_IDENTITY(bool(true), (bool(true)) || false)))))) && (true)))))))), false, true))), false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), true), true)))), false, false))))))))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9784.9833), _GLF_FUZZED(1.2)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true))) ? (injectionSwitch) : _GLF_FUZZED(cosh(vec2(1.2, 1126.9270)))))[1]), bvec2(true, true)))))).y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           for(int _injected_loop_counter = (1 & 1); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(805.229)), bool(false))) < injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (0 | int(_GLF_ONE(1.0, injectionSwitch.y))), true && (_GLF_IDENTITY(_injected_loop_counter != (0 | int(_GLF_ONE(1.0, injectionSwitch.y))), true && (_injected_loop_counter != (0 | int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))))))); _injected_loop_counter ++)
              {
               for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, (0.0) - 0.0)), (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(98.42)))) * 1.0), injectionSwitch.y), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), (true ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED(47.72)))) - 0.0), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-967.359)), bvec2(true, false))).y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.3)), vec2(_GLF_FUZZED(3.8), (injectionSwitch)[1]), bvec2(false, true))).y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(4.6)), bool(false))))))) - 0.0)))), _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), (_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) - 0.0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), ((0)) | (0 | 0)))); _injected_loop_counter --)
                {
                 do
                  {
                   do
                    {
                     if(_GLF_DEAD(false))
                      {
                       for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           do
                            {
                             barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                        }
                       barrier();
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bool(false)))), (true && (_GLF_IDENTITY(false, bool(bool(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) / 1)); _injected_loop_counter --)
                          {
                           barrier();
                          }
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0, 0.0))))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0))))), min(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((- -1.9))), float(0.0), bool(true))))), 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), mix(float(_GLF_FUZZED(1492.9241)), float(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0)))))), bool(true)))))), float(_GLF_FUZZED(65.81)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8884.7385) : _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0))))), injectionSwitch.y)), 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sin(0.0), 1.0, 1.0, 0.0))), 1.0, 0.0))))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) * 1.0), injectionSwitch.y)), 0.0, 0.0, _GLF_IDENTITY(exp(0.0), (false ? _GLF_FUZZED(7125.1347) : exp(0.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), min(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 0.0 + (0.0))) * cos(0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, sin(0.0), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), clamp(float(mat3(0.0, sin(0.0), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(mat3(0.0, sin(0.0), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(mat3(0.0, sin(0.0), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))))), 1.0, _GLF_IDENTITY(1.0, tan(0.0) + (1.0)), 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(194.876)), bool(false))), 1.0)), 1.0, 0.0))))), mix(float(_GLF_FUZZED(1492.9241)), float(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5.8)), bool(false))))), exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(false))), float(1.0), bool(true))), 0.0)))))), bool(true)))))), float(_GLF_FUZZED(65.81)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6366.7045)), bool(false))))))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))) && _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, _GLF_IDENTITY(0.0, (0.0) / abs(1.0)), 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(true))), float(0.0), bool(true))), 1.0, 1.0, 0.0)))))))), ((! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 0.0, 1.0, sqrt(_GLF_ONE(1.0, injectionSwitch.y)), 1.0))), 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, _GLF_IDENTITY(0.0, (0.0) / abs(1.0)), 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(true))), float(0.0), bool(true))), 1.0, 1.0, 0.0))))))))) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), bool(bvec2(_GLF_IDENTITY((true), ! (! ((true)))), true)))) && true), true && (! (true)))), ((_GLF_IDENTITY(! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), bool(bvec2(_GLF_IDENTITY((true), ! (! ((true)))), true)))) && true), true && (! (true))))) && true)) && _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(28.73)), bool(false))), 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-523.368), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5644.2818)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / abs(1.0)), max(_GLF_IDENTITY(0.0, (0.0) / abs(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / abs(1.0)), (_GLF_IDENTITY(0.0, (0.0) / abs(1.0))) - 0.0))), 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(true))), float(0.0), bool(true))), 1.0, 1.0, 0.0)))))))), ((! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), max(injectionSwitch.y, injectionSwitch.y)), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 0.0, 1.0, sqrt(_GLF_ONE(1.0, injectionSwitch.y)), 1.0))), 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, _GLF_IDENTITY(0.0, (0.0) / abs(1.0)), 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(true))), float(0.0), bool(true))), 1.0, 1.0, 0.0))))))))) || false))) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))))), (true && (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, log(1.0)))).y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0))))))), exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))))), (true && (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, log(1.0)))).y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0))))))), exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))))), (true && (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, log(1.0)))).y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0))))))), exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) || false)), ! (! (bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (true ? min(injectionSwitch, injectionSwitch) : _GLF_FUZZED(vec2(0.9, 4406.9858))))).y, max(injectionSwitch.y, injectionSwitch.y)), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(abs(-430.514))))), mat3x4(mat3x4(mat3x4(injectionSwitch.y, _GLF_IDENTITY(0.0, (0.0) / abs(1.0)), 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(true))), float(0.0), bool(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0, 1.0, 0.0)))))))), ((! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, _GLF_IDENTITY(0.0, (0.0) / abs(1.0)), 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(true))), float(0.0), bool(true))), 1.0, 1.0, 0.0))))))))) || false))), (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) * 1.0)) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + log(determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (true ? 0.0 : _GLF_FUZZED(-856.452)))))))), max(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) * 1.0)) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + log(determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (true ? 0.0 : _GLF_FUZZED(-856.452)))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) * 1.0)) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + log(determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (true ? 0.0 : _GLF_FUZZED(-856.452)))))))), 0.0 + (float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) * 1.0)) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + log(determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (true ? 0.0 : _GLF_FUZZED(-856.452)))))))))))))))))) || false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(exp(_GLF_IDENTITY(0.0, min(0.0, 0.0))), (exp(0.0)) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-47.51)), float(0.0), bool(true)))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(4.1)), float(_GLF_IDENTITY(mat2x4((true ? 1.0 : _GLF_FUZZED(4.1)), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), log(exp(0.0)), 0.0), (true ? mat2x4((true ? 1.0 : _GLF_FUZZED(4.1)), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), log(exp(0.0)), 0.0) : _GLF_FUZZED(mat2x4(58.43))))))), _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, cos(0.0), abs(1.0), 0.0, 1.0))), 0.0))))), max(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(exp(_GLF_IDENTITY(0.0, min(0.0, 0.0))), (exp(0.0)) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-47.51)), float(0.0), bool(true)))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(4.1)), float(_GLF_IDENTITY(mat2x4((true ? 1.0 : _GLF_FUZZED(4.1)), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), log(exp(0.0)), 0.0), (true ? mat2x4((true ? 1.0 : _GLF_FUZZED(4.1)), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), log(exp(0.0)), 0.0) : _GLF_FUZZED(mat2x4(58.43))))))), _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, cos(0.0), abs(1.0), 0.0, 1.0))), 0.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(exp(_GLF_IDENTITY(0.0, min(0.0, 0.0))), (exp(0.0)) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-47.51)), float(0.0), bool(true)))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(4.1)), float(_GLF_IDENTITY(mat2x4((true ? 1.0 : _GLF_FUZZED(4.1)), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), log(exp(0.0)), 0.0), (true ? mat2x4((true ? 1.0 : _GLF_FUZZED(4.1)), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), log(exp(0.0)), 0.0) : _GLF_FUZZED(mat2x4(58.43))))))), _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, cos(0.0), abs(1.0), 0.0, 1.0))), 0.0))))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(exp(_GLF_IDENTITY(0.0, min(0.0, 0.0))), (exp(0.0)) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-47.51)), float(0.0), bool(true)))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(4.1)), float(_GLF_IDENTITY(mat2x4((true ? 1.0 : _GLF_FUZZED(4.1)), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), log(exp(0.0)), 0.0), (true ? mat2x4((true ? 1.0 : _GLF_FUZZED(4.1)), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), log(exp(0.0)), 0.0) : _GLF_FUZZED(mat2x4(58.43))))))), _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, cos(0.0), abs(1.0), 0.0, 1.0))), 0.0))))), (float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(exp(_GLF_IDENTITY(0.0, min(0.0, 0.0))), (exp(0.0)) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-47.51)), float(0.0), bool(true)))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(4.1)), float(_GLF_IDENTITY(mat2x4((true ? 1.0 : _GLF_FUZZED(4.1)), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), log(exp(0.0)), 0.0), (true ? mat2x4((true ? 1.0 : _GLF_FUZZED(4.1)), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), log(exp(0.0)), 0.0) : _GLF_FUZZED(mat2x4(58.43))))))), _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, cos(0.0), abs(1.0), 0.0, 1.0))), 0.0)))))) - 0.0), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(exp(_GLF_IDENTITY(0.0, min(0.0, 0.0))), (exp(0.0)) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-47.51)), float(0.0), bool(true)))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(4.1)), float(_GLF_IDENTITY(mat2x4((true ? 1.0 : _GLF_FUZZED(4.1)), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), log(exp(0.0)), 0.0), (true ? mat2x4((true ? 1.0 : _GLF_FUZZED(4.1)), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), log(exp(0.0)), 0.0) : _GLF_FUZZED(mat2x4(58.43))))))), _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, cos(0.0), abs(1.0), 0.0, 1.0))), 0.0))))), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(exp(_GLF_IDENTITY(0.0, min(0.0, 0.0))), (exp(0.0)) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-47.51)), float(0.0), bool(true)))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(4.1)), float(_GLF_IDENTITY(mat2x4((true ? 1.0 : _GLF_FUZZED(4.1)), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), log(exp(0.0)), 0.0), (true ? mat2x4((true ? 1.0 : _GLF_FUZZED(4.1)), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), log(exp(0.0)), 0.0) : _GLF_FUZZED(mat2x4(58.43))))))), _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, cos(0.0), abs(1.0), 0.0, 1.0))), 0.0)))))))))))), ! (! ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(exp(_GLF_IDENTITY(0.0, min(0.0, 0.0))), (exp(0.0)) - 0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4.1))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9438.5274) : 1.0)), 0.0))))))))))))), (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.6) : 1.0)))), (1.0) - 0.0)) * 1.0), 1.0, 0.0))))))))))) || false)), (bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0), _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-4074.9226)), float(injectionSwitch[1]), bool(true))), _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))).y), true && (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8.3, 7.3)) : injectionSwitch)).y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), exp(0.0), _GLF_IDENTITY(0.0, float(vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat4(tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-36.03)), bool(false))), 0.0))))))))))))) || false, ((! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(tan(0.0) + (injectionSwitch.y), clamp(tan(0.0) + (injectionSwitch.y), tan(0.0) + (injectionSwitch.y), tan(0.0) + (injectionSwitch.y)))), 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, float(vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat4(tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))))))) || false) || false)))) || false)) && true)), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 0.0), mix(vec4(_GLF_IDENTITY((vec4(injectionSwitch.y, 0.0, 0.0, 0.0))[0], (false ? _GLF_FUZZED(_GLF_IDENTITY(4.8, float(mat3x4(_GLF_IDENTITY(4.8, clamp(4.8, 4.8, 4.8)), 1.0, sqrt(1.0), 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)))) : (vec4(injectionSwitch.y, 0.0, 0.0, 0.0))[0])), (vec4(injectionSwitch.y, 0.0, 0.0, 0.0))[1], _GLF_FUZZED(-11.69), _GLF_FUZZED(-50.71)), vec4(_GLF_FUZZED(float(59388)), _GLF_FUZZED((6.3 - -8.2)), (vec4(injectionSwitch.y, 0.0, 0.0, 0.0))[2], (vec4(injectionSwitch.y, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0))[3]), bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))))), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))))), 0.0)))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).y), true && (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3.0) : injectionSwitch.y)), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))))))) || false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-7238.3790 * -801.188))), float(0.0), bool(true))))), 1.0, 1.0, 0.0)))))))))), (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))))))) || false)), (bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))), float(_GLF_FUZZED(6.2)), bool(false))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(float(false))), float(min(injectionSwitch.y, injectionSwitch.y)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(true, false || (true)) && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(_GLF_IDENTITY(0.0, (0.0) / 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))))))), (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))))))) || false))) || false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 0.0), mix(vec4(_GLF_IDENTITY((vec4(injectionSwitch.y, 0.0, 0.0, 0.0))[0], (false ? _GLF_FUZZED(4.8) : (vec4(injectionSwitch.y, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6734.4238) : 0.0))) / determinant(mat2(1.0, 1.0, 0.0, 1.0))), 0.0, 0.0))[0])), (vec4(injectionSwitch.y, 0.0, 0.0, 0.0))[1], _GLF_FUZZED(-11.69), _GLF_FUZZED(-50.71)), vec4(_GLF_FUZZED(float(59388)), _GLF_FUZZED((6.3 - -8.2)), (vec4(injectionSwitch.y, 0.0, 0.0, 0.0))[2], (vec4(injectionSwitch.y, 0.0, 0.0, 0.0))[3]), bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))))), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(754.974) : injectionSwitch.y))) - 0.0)), true && (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3.0) : injectionSwitch.y)), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))), bool(bool(! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3.0) : injectionSwitch.y)), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))))))))))) || false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3.6)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))) / round(length(normalize(1.0))))), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-7238.3790 * -801.188))), float(0.0), bool(true))))), 1.0, 1.0, 0.0)))))))))), (! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) + vec2(0.0, 0.0)).y), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))))))) || false)), (bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(true, false || (true)) && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), float(vec3(float(mat3x2(0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0)))), determinant(mat4(length(vec3(0.0, 0.0, 0.0)), 0.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), sqrt(0.0), 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, exp(0.0), abs(1.0), 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0)), 0.0, 0.0, 0.0, exp(0.0), 1.0)), min(float(mat4x3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), float(vec3(float(mat3x2(0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0)))), determinant(mat4(length(vec3(0.0, 0.0, 0.0)), 0.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), sqrt(0.0), 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, exp(0.0), abs(1.0), 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0)), 0.0, 0.0, 0.0, exp(0.0), 1.0)), float(mat4x3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), float(vec3(float(mat3x2(0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0)))), determinant(mat4(length(vec3(0.0, 0.0, 0.0)), 0.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), sqrt(0.0), 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, exp(0.0), abs(1.0), 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0)), 0.0, 0.0, 0.0, exp(0.0), 1.0)))))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), exp(_GLF_IDENTITY(0.0, (0.0) / 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))))))), (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))))))) || false))) || false)) && true)), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 0.0), mix(vec4(_GLF_IDENTITY((vec4(injectionSwitch.y, 0.0, 0.0, 0.0))[0], (false ? _GLF_FUZZED(4.8) : (vec4(injectionSwitch.y, 0.0, 0.0, 0.0))[0])), (vec4(injectionSwitch.y, 0.0, 0.0, 0.0))[1], _GLF_FUZZED(-11.69), _GLF_FUZZED(-50.71)), vec4(_GLF_FUZZED(float(59388)), _GLF_FUZZED((6.3 - -8.2)), (vec4(injectionSwitch.y, 0.0, 0.0, 0.0))[2], (vec4(injectionSwitch.y, 0.0, 0.0, 0.0))[3]), bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))))), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y), true && (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3.0) : injectionSwitch.y)), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))))))) || false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-7238.3790 * -801.188))), float(0.0), bool(true))))), 1.0, 1.0, 0.0)))))))))), (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))))))) || false)), (bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(true, false || (true)) && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(_GLF_IDENTITY(0.0, (0.0) / 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))))))), (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))))))) || false))) || false)) && true)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 0.0), mix(vec4(_GLF_IDENTITY((vec4(injectionSwitch.y, 0.0, 0.0, 0.0))[0], (false ? _GLF_FUZZED(4.8) : (vec4(injectionSwitch.y, 0.0, 0.0, 0.0))[0])), (vec4(injectionSwitch.y, 0.0, 0.0, 0.0))[1], _GLF_FUZZED(-11.69), _GLF_FUZZED(-50.71)), vec4(_GLF_FUZZED(float(59388)), _GLF_FUZZED((6.3 - -8.2)), (vec4(injectionSwitch.y, 0.0, 0.0, 0.0))[2], (vec4(injectionSwitch.y, 0.0, 0.0, 0.0))[3]), bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))))), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y), true && (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3.0) : injectionSwitch.y)), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))))))) || false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-7238.3790 * -801.188))), float(0.0), bool(true))))), 1.0, 1.0, 0.0)))))))))), (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))))))) || false)), (bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(true, false || (true)) && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(_GLF_IDENTITY(0.0, (0.0) / 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))))))), (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))))))) || false))) || false)) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0), mix(vec4(_GLF_IDENTITY((vec4(injectionSwitch.y, 0.0, 0.0, 0.0))[0], (false ? _GLF_IDENTITY(_GLF_FUZZED(4.8), clamp(_GLF_FUZZED(4.8), _GLF_FUZZED(4.8), _GLF_FUZZED(4.8))) : (vec4(injectionSwitch.y, 0.0, 0.0, 0.0))[0])), (vec4(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0)))))[1], _GLF_FUZZED(_GLF_IDENTITY(-11.69, mix(float(_GLF_FUZZED(852.217)), float(-11.69), bool(true)))), _GLF_FUZZED(-50.71)), vec4(_GLF_FUZZED(float(59388)), _GLF_FUZZED((6.3 - -8.2)), (vec4(injectionSwitch.y, 0.0, 0.0, 0.0))[2], (vec4(injectionSwitch.y, 0.0, 0.0, 0.0))[3]), bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))))), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), exp(0.0), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0 + (float(mat3x4(0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), mat2(1.0) * ((vec2(1.0, 1.0)) * mat2(1.0)))) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y), true && _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(-3.0), max(_GLF_FUZZED(-3.0), _GLF_FUZZED(-3.0))) : injectionSwitch.y)), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))))), ((! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(-3.0), max(_GLF_FUZZED(-3.0), _GLF_FUZZED(-3.0))) : injectionSwitch.y)), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))))) && true)))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0), mix(vec4(_GLF_IDENTITY((vec4(injectionSwitch.y, 0.0, 0.0, 0.0))[0], (false ? _GLF_IDENTITY(_GLF_FUZZED(4.8), clamp(_GLF_FUZZED(4.8), _GLF_FUZZED(4.8), _GLF_FUZZED(4.8))) : (vec4(injectionSwitch.y, 0.0, 0.0, 0.0))[0])), (vec4(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0)))))[1], _GLF_FUZZED(_GLF_IDENTITY(-11.69, mix(float(_GLF_FUZZED(852.217)), float(-11.69), bool(true)))), _GLF_FUZZED(-50.71)), vec4(_GLF_FUZZED(float(59388)), _GLF_FUZZED((6.3 - -8.2)), (vec4(injectionSwitch.y, 0.0, 0.0, 0.0))[2], (vec4(injectionSwitch.y, 0.0, 0.0, 0.0))[3]), bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))))), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), exp(0.0), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0 + (float(mat3x4(0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), mat2(1.0) * ((vec2(1.0, 1.0)) * mat2(1.0)))) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y), true && _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(-3.0), max(_GLF_FUZZED(-3.0), _GLF_FUZZED(-3.0))) : injectionSwitch.y)), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))))), ((! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(-3.0), max(_GLF_FUZZED(-3.0), _GLF_FUZZED(-3.0))) : injectionSwitch.y)), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))))) && true)))) || false)), (bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0), mix(vec4(_GLF_IDENTITY((vec4(injectionSwitch.y, 0.0, 0.0, 0.0))[0], (false ? _GLF_IDENTITY(_GLF_FUZZED(4.8), clamp(_GLF_FUZZED(4.8), _GLF_FUZZED(4.8), _GLF_FUZZED(4.8))) : (vec4(injectionSwitch.y, 0.0, 0.0, 0.0))[0])), (vec4(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0)))))[1], _GLF_FUZZED(_GLF_IDENTITY(-11.69, mix(float(_GLF_FUZZED(852.217)), float(-11.69), bool(true)))), _GLF_FUZZED(-50.71)), vec4(_GLF_FUZZED(float(59388)), _GLF_FUZZED((6.3 - -8.2)), (vec4(injectionSwitch.y, 0.0, 0.0, 0.0))[2], (vec4(injectionSwitch.y, 0.0, 0.0, 0.0))[3]), bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))))), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), exp(0.0), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0 + (float(mat3x4(0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), mat2(1.0) * ((vec2(1.0, 1.0)) * mat2(1.0)))) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y), true && _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(-3.0), max(_GLF_FUZZED(-3.0), _GLF_FUZZED(-3.0))) : injectionSwitch.y)), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))))), ((! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(-3.0), max(_GLF_FUZZED(-3.0), _GLF_FUZZED(-3.0))) : injectionSwitch.y)), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))))) && true)))) || false))) || false))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-7238.3790 * -801.188))), float(0.0), bool(true))))), 1.0, 1.0, 0.0)))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-7238.3790 * -801.188))), float(0.0), bool(true))))), 1.0, 1.0, 0.0)))))))))), bool(bvec4(! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-7238.3790 * -801.188))), float(0.0), bool(true))))), 1.0, 1.0, 0.0)))))))))), false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-7238.3790 * -801.188))), float(0.0), bool(true))))), 1.0, 1.0, 0.0)))))))))), bool(bvec4(! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-7238.3790 * -801.188))), float(0.0), bool(true))))), 1.0, 1.0, 0.0)))))))))), false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))))), (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))))))) || false)), (bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(true, false || (true)) && (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(_GLF_IDENTITY(0.0, (0.0) / 1.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) - 0.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 1.0, 0.0))))))), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(_GLF_IDENTITY(0.0, (0.0) / 1.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) - 0.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 1.0, 0.0))))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))), clamp(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))))) / 1.0)))))) || false))) || false)) && true))) && true)))), true, true, true))))))) && true)))))))
                        {
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
                              {
                               do
                                {
                                 barrier();
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                              }
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                }
                               else
                                {
                                 barrier();
                                }
                              }
                            }
                          }
                         do
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                      }
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (false) || false)))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                      }
                     else
                      {
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(dot(vec3(7338.9135, 3499.8648, 77.32), vec3(-190.073, -1032.3524, 4.5))))) > injectionSwitch.y))))
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), max(int(4), int(4))), _GLF_IDENTITY(int(4), int(ivec3(int(4), 1, 1)))))))); _injected_loop_counter --)
                      {
                       barrier();
                      }
                    }
                  }
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                 do
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     do
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                            }
                           else
                            {
                             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 | int(_GLF_ONE(1.0, injectionSwitch.y)))); _injected_loop_counter ++)
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                             barrier();
                            }
                          }
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-513.888), _GLF_FUZZED(99.89)), bvec2(false, false))))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
                  barrier();
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
            barrier();
          }
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), (true ? _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 1.0, 1.0, abs(1.0), 1.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(7.5)), float(float(mat4x2(injectionSwitch.x, 1.0, 1.0, 1.0, abs(1.0), 1.0, 1.0, 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) / 1.0) : _GLF_FUZZED(-5340.0147))))) > injectionSwitch.y)))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))) && true))))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               barrier();
              }
            }
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (int(4))), _GLF_IDENTITY(int(4), max(int(4), int(4)))), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(4))))), ((_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(4)))))) << 0)))); _injected_loop_counter ++)
            {
             barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, uint(uvec2(workgroup_id, 1u)))) | (workgroup_id)), (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, uint(uvec2(workgroup_id, 1u)))) | (workgroup_id)), max(workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, uint(uvec2(workgroup_id, 1u)))) | (workgroup_id)), workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, uint(uvec2(workgroup_id, 1u)))) | (workgroup_id))))) ^ 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) + 0.0)), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
          barrier();
        }
       barrier();
      }
    }
   else
    {
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)), true && (! (false))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), true && (! (false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), true && (! (false))), true), false, false)))))))))))), (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((+ 6.0))), vec2(_GLF_FUZZED(94.11), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), true)))), true && (false)), true))).y)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true))))))));
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), log(1.0), 1.0, 0.0, 0.0, sin(0.0)))), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), log(1.0), 1.0, 0.0, 0.0, sin(0.0)))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), log(1.0), 1.0, 0.0, 0.0, sin(0.0)))))))); _injected_loop_counter --)
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 barrier();
                }
              }
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       else
        {
        }
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0))))).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true), false))))))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))) || (_GLF_WRAPPED_IF_TRUE(true))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)) || (_GLF_WRAPPED_IF_TRUE(true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
          {
          }
         else
          {
           barrier();
          }
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     barrier();
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 for(int _injected_loop_counter = (_GLF_IDENTITY(0, (0) | (0)) ^ 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, bool(bvec4(_injected_loop_counter > 0, false, true, false)))); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && ((! (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(929.082))))).x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 1.0, length(0.0), 0.0), (mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 1.0, length(0.0), 0.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), ! (! (! ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.4), _GLF_FUZZED(2379.5156)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))))) - vec2(0.0, 0.0)).y))))))), bool(bool((_GLF_IDENTITY(! ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), ! (! (! ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))))))))))))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.7)), bool(false))) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0), min(injectionSwitch[1], injectionSwitch[1])))), injectionSwitch)).y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), false || ((! (injectionSwitch.x > injectionSwitch.y))))))))))), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), ! (_GLF_IDENTITY(! ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), min((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0)))).y))), ! (! (! ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))))))))))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(! (! (injectionSwitch.x > injectionSwitch.y))), (bool(! (! (injectionSwitch.x > injectionSwitch.y)))) && true)))))))))), _GLF_IDENTITY(true, (true) || false), false, false))) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, false || (true)))), ! (! (bool(bool(_GLF_IDENTITY(true, false || (true))))))), ! (! (bool(bool(_GLF_IDENTITY(true, false || (true))))))))))
    {
     for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, true, false)), ! (! (bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, true, false)))))))
            {
             barrier();
            }
           else
            {
            }
          }
         barrier();
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) / _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false)), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec3(false || (false), true, false))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(false, false || (false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(false, false || (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(false, false || (false))))))), false, false)))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(false, false || (false)))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false))) || false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mix(vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[0], (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1]), vec2(_GLF_FUZZED(851.817), _GLF_FUZZED(-1.5)), bvec2(false, false)))).y))))), false), false)))))) || false), (false) || false)) || false), false || (_GLF_IDENTITY(false, false || (false))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false))) || false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mix(vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[0], (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1]), vec2(_GLF_FUZZED(851.817), _GLF_FUZZED(-1.5)), bvec2(false, false)))).y))))), false), false)))))) || false), (false) || false)) || false), false || (_GLF_IDENTITY(false, false || (false))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false))) || false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mix(vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[0], (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1]), vec2(_GLF_FUZZED(851.817), _GLF_FUZZED(-1.5)), bvec2(false, false)))).y))))), false), false)))))) || false), (false) || false)) || false), false || (_GLF_IDENTITY(false, false || (false))))), false, false, false))), true, true)))) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(atan(9790.2991)))) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), (true ? injectionSwitch.x : _GLF_FUZZED(atan(9790.2991)))) > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (! (true))))), (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
          }
         else
          {
          }
         barrier();
        }
      }
     else
      {
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))));
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     do
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_TRUE(true), false), bvec2(bvec2(bvec2(_GLF_WRAPPED_IF_TRUE(true), false)))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true), false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))))), bool(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))), true))), true, false, true)))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                barrier();
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               barrier();
              }
            }
          }
         else
          {
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) * 1))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(7, 7, 7))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), 0 | (int(7))), clamp(int(7), int(7), int(7))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, length(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8284.2923)), vec2(_GLF_FUZZED(7750.3183), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, (true) || false)))).y, (false ? _GLF_FUZZED(3.0) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))).y)), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))).y)), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))).y)), float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))).y, determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5.1)), bool(false))), 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, 0.0, 1.0))) : _GLF_FUZZED(94.00))), 1.0 * (injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(8.8), 0.0 + (_GLF_FUZZED(8.8)))), float(1.0), bool(true))) * (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))));
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   int i = 0;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, 64, 64), clamp(clamp(64, 64, 64), _GLF_IDENTITY(_GLF_IDENTITY(clamp(64, 64, 64), 0 + (clamp(64, _GLF_IDENTITY(64, (64) * 1), 64))), int(ivec3(clamp(64, 64, 64), 0, 0))), clamp(64, 64, 64)))), 4);
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (false ? _GLF_IDENTITY(_GLF_FUZZED(91035), min(_GLF_IDENTITY(_GLF_FUZZED(91035), ~ (~ (_GLF_FUZZED(91035)))), _GLF_IDENTITY(_GLF_FUZZED(91035), _GLF_IDENTITY((_GLF_FUZZED(91035)) >> 0, ((_GLF_FUZZED(_GLF_IDENTITY(91035, 0 | (_GLF_IDENTITY(91035, (91035) | (_GLF_IDENTITY(91035, max(91035, 91035)))))))) >> 0) | ((_GLF_FUZZED(91035)) >> 0))))) : 4)), _GLF_IDENTITY(64, (64) >> 0), 4);
  }
 do
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = (99406 & (0 & _GLF_IDENTITY(-10402, (-10402) << 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (false) || false)) && _GLF_IDENTITY(true, (true) || false))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             barrier();
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), false), true, true)))))) || false)))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, false, true))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                  barrier();
                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                      {
                       barrier();
                      }
                    }
                  }
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
                barrier();
              }
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              {
               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((0 << _GLF_IDENTITY(int(2), int(2))), ((0 << _GLF_IDENTITY(int(2), int(2)))) ^ 0)); _injected_loop_counter --)
                {
                 barrier();
                }
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = ((1 ^ 1) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | (1))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 do
                  {
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                   barrier();
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || false))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                  }
                 else
                  {
                  }
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8.8, 6.2)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8.8, 6.2)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8.8, 6.2)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch))) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8.8, 6.2)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y, false, true, false))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y))), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec4((false) && true, true, false, false)))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), false), true))), true, false))))), (false) || false))))
        {
         do
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
}
