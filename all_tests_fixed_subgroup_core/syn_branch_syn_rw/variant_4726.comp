#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), true && (! (_GLF_IDENTITY(false, (false) && true)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((919.376 - -7.9)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-5.9 + -329.327))), bvec2(true, false))).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY((false), false || ((false))), false, false, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(! (false), false, false, false)), true, false)), bool(bvec2(bool(bvec3(bool(bvec4(! (false), false, false, false)), true, false)), true))))), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, false || (false)))), true, false))))), false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) || false))), ! (_GLF_IDENTITY(! (bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, false || (false)))), true, false))))), false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) || false)))), bool(bool(_GLF_IDENTITY(! (bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, false || (false)))), true, false))))), false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) || false)))), ! (! (! (bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, false || (false)))), true, false))))), false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) || false)))))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, false || (false)))), true, false))))), false, _GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))) || false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, false || (false)))), true, false))))), false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) || false)))), bool(bool(_GLF_IDENTITY(! (bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, false || (false)))), true, false))))), false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) || false)))), ! (! (! (bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, false || (false)))), true, false))))), false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) || false)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, false || (false)))), true, false))))), false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) || false)))), bool(bool(_GLF_IDENTITY(! (bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, false || (false)))), true, false))))), false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) || false)))), ! (! (! (bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, false || (false)))), true, false))))), false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) || false)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, false || (false)))), true, false))))), false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) || false)))), bool(bool(_GLF_IDENTITY(! (bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, false || (false)))), true, false))))), false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) || false)))), ! (! (! (bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, false || (false)))), true, false))))), false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) || false)))))))))), false || (_GLF_IDENTITY(! (bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, false || (false)))), true, false))))), false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), bool(bool(_GLF_IDENTITY(! (bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, false || (false)))), true, false))))), false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, true, false))), false)))) || false)))), ! (! (! (bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, false || (false)))), true, false))))), false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) || false)))))))))))))))))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, false || (false)))), true, false))))), false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) || false))), ! (_GLF_IDENTITY(! (bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false))), true, false))))), false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) || false)))), bool(bool(_GLF_IDENTITY(! (bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, false || (false)))), true, false))))), false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) || false)))), ! (! (! (bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(_GLF_IDENTITY(false, false || (false))))))), true, false))))), false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) || false)))))))))))), false)))))), _GLF_IDENTITY(bool(bvec3(bool(bvec4(! (false), false, false, false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), false, true)), (_GLF_IDENTITY(bool(bvec3(! (true), false, true)), bool(bvec4(bool(bvec3(! (true), false, true)), false, true, true)))) && true)))), false)), bool(bvec2(bool(bvec3(bool(bvec4(! (false), false, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, false)))) && true))))))), true, false)), true))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), (_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) - 0.0), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(9900.7648)), float(injectionSwitch.y), bool(true))))), injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)))).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec2(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 0.0, cos(0.0), 1.0), transpose(transpose(mat3(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec2(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 0.0, cos(0.0), 1.0))))), vec2(0.0, 0.0) + (vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec2(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 0.0, cos(0.0), 1.0), transpose(transpose(mat3(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec2(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 0.0, cos(0.0), 1.0))))))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED((-90.93 * -220.679)), _GLF_FUZZED(-182.862)), vec2(((injectionSwitch) / vec2(1.0, 1.0))[0], ((injectionSwitch) / vec2(1.0, 1.0))[1]), bvec2(true, true)))).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), ((injectionSwitch) / vec2(1.0, 1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(26.63)), float(injectionSwitch.y), bool(true)))) / 1.0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && ((false) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), bool(bvec2((false), false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false))))), true)))), bool(bvec2((false), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false))))), true)))), bool(bvec2((false), false))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false))))), true)))), bool(bvec2((false), false)))) || false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-32.19) : injectionSwitch.y))) / _GLF_ONE(1.0, injectionSwitch.y)))), false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))))), true, false, false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) - (0u | 0u)), 0u + (workgroup_base + subgroup_id * subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3163.2052)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 1u, 1u))))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(subgroup_size, 0u, 0u, (_GLF_IDENTITY(((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, uint(uvec2(_GLF_IDENTITY(7u, (7u) / 1u), 1u)))), uint(7u)), max(((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, uint(uvec2(_GLF_IDENTITY(7u, (7u) / 1u), 1u)))), uint(7u)), ((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, uint(uvec2(_GLF_IDENTITY(7u, (7u) / 1u), 1u)))), uint(7u))))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(subgroup_size, 0u, 0u, (((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, uint(uvec2(_GLF_IDENTITY(7u, (7u) / 1u), 1u)))), uint(7u))))), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec4(subgroup_size, 0u, 0u, (((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, uint(uvec2(_GLF_IDENTITY(7u, (7u) / 1u), 1u)))), uint(7u)))))))) - 0u, clamp((_GLF_IDENTITY(uint(uvec4(subgroup_size, 0u, 0u, (((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, uint(uvec2(_GLF_IDENTITY(7u, (7u) / 1u), 1u)))), uint(7u))))), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec4(subgroup_size, 0u, 0u, (((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, uint(uvec2(_GLF_IDENTITY(7u, (7u) / 1u), 1u)))), uint(7u)))))))) - 0u, _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(subgroup_size, 0u, 0u, (((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, uint(uvec2(_GLF_IDENTITY(7u, (7u) / 1u), 1u)))), uint(7u))))), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec4(subgroup_size, 0u, 0u, (((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, uint(uvec2(_GLF_IDENTITY(7u, (7u) / 1u), 1u)))), uint(7u)))))))) - 0u, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 0u, 0u, (((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, uint(uvec2(_GLF_IDENTITY(7u, (7u) / 1u), 1u)))), uint(7u))))), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec4(subgroup_size, 0u, 0u, (((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, uint(uvec2(_GLF_IDENTITY(7u, (7u) / 1u), 1u)))), uint(7u)))))))) - 0u)), (_GLF_IDENTITY(uint(uvec4(subgroup_size, 0u, 0u, (((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, uint(uvec2(_GLF_IDENTITY(7u, (7u) / 1u), 1u)))), uint(7u))))), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec4(subgroup_size, 0u, 0u, (((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, uint(uvec2(_GLF_IDENTITY(7u, (7u) / 1u), 1u)))), uint(7u)))))))) - 0u))), (uint(uvec4(subgroup_size, 0u, 0u, (((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, (7u) | (7u))) - 0u), _GLF_IDENTITY(1u, ~ (~ (1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), (true ? _GLF_IDENTITY(uvec4(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, (7u) | (7u))) - 0u), _GLF_IDENTITY(1u, ~ (~ (1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), (uvec4(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, (7u) | (7u))) - 0u), _GLF_IDENTITY(1u, ~ (~ (1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)) - uvec4(0u, 0u, 0u, 0u)) : _GLF_FUZZED(uvec4(149309u, 188480u, 69747u, 190080u))))), 0u | (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, (7u) | (7u))) - 0u), _GLF_IDENTITY(1u, ~ (~ (1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), (true ? _GLF_IDENTITY(uvec4(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, (7u) | (7u))) - 0u), _GLF_IDENTITY(1u, ~ (~ (1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), (uvec4(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, (7u) | (7u))) - 0u), _GLF_IDENTITY(1u, ~ (~ (1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)) - uvec4(0u, 0u, 0u, 0u)) : _GLF_FUZZED(uvec4(149309u, 188480u, 69747u, 190080u))))))))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, uint(uvec2(_GLF_IDENTITY(7u, (7u) / 1u), 1u)))), uint(7u)))))) | (uint(uvec4(subgroup_size, 0u, 0u, (((1u ^ 0u) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, uint(uvec2(_GLF_IDENTITY(7u, (7u) / 1u), 1u)))), uint(7u))))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(subgroup_size, 0u, 0u, ((_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (1u | 1u) * (0u)), 1u * (0u))) | (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(clamp(uint(2u), uint(2u), uint(2u)), (_GLF_IDENTITY(clamp(uint(2u), uint(2u), uint(2u)), ~ (_GLF_IDENTITY(~ (clamp(uint(2u), uint(2u), uint(2u))), uint(uvec3(~ (clamp(uint(2u), uint(2u), uint(2u))), 0u, 0u)))))) << 0u)))))), ((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) | _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))))), ~ (~ ((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))))))))))) * 1u) << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))), max(uint(uvec4(subgroup_size, 0u, 0u, (((1u ^ 0u) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(uint(uint(7u))), (uint(uint(uint(7u)))) / 1u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, 0u + (7u))), uint(7u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, 0u + (7u))), uint(7u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, 0u + (7u))), uint(7u))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, 0u + (7u))), uint(7u)), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, 0u + (7u))), uint(7u))))))))), uint(uvec4(subgroup_size, 0u, 0u, (((_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))) / 1u) : _GLF_FUZZED(subgroup_id)))))) ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))))) | (uint(uvec4(subgroup_size, 0u, 0u, ((_GLF_IDENTITY((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u)), min(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (0u) | 0u)) << _GLF_IDENTITY(uint(7u), uint(7u)), ~ (~ ((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u))))), _GLF_IDENTITY((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u)), min((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u)), ~ (~ ((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, min(7u, 7u)))))))))))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u)))))), ((_GLF_IDENTITY(uint(uvec4(subgroup_size, 0u, 0u, ((_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (1u | 1u) * (0u)), 1u * (0u))) | (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))), clamp(uint(2u), uint(2u), uint(2u))))))), ((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) | _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))))), ~ (~ ((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))))))))))) * 1u) << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))), max(uint(uvec4(subgroup_size, 0u, 0u, (((1u ^ 0u) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(uint(uint(7u))), (_GLF_IDENTITY(uint(uint(uint(7u))), clamp(uint(uint(uint(7u))), _GLF_IDENTITY(uint(uint(uint(7u))), (true ? uint(uint(uint(7u))) : _GLF_FUZZED(workgroup_size))), uint(uint(uint(7u)))))) / 1u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, 0u + (7u))), uint(7u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, 0u + (7u))), uint(7u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, 0u + (7u))), uint(7u))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, 0u + (7u))), uint(7u)), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, 0u + (7u))), uint(7u))))))))), uint(uvec4(subgroup_size, 0u, 0u, (((_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u) : _GLF_FUZZED(subgroup_id)))))) ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))))) | (uint(uvec4(subgroup_size, 0u, 0u, ((_GLF_IDENTITY((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u)), min(_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ _GLF_IDENTITY(0u, (0u) | 0u)) << _GLF_IDENTITY(uint(7u), uint(7u)), ~ (~ ((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u))))), _GLF_IDENTITY((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u)), min((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u)), ~ (~ ((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, min(7u, 7u)))))))))))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(subgroup_size, 0u, 0u, ((_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (1u | 1u) * (0u)), 1u * (0u))) | (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))))))), ((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) | _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))))), ~ (~ (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))))), (0u | 0u) | ((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))))))))))))) * 1u) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), _GLF_IDENTITY(uint(7u), uint(uint(_GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u)))))))))) >> _GLF_IDENTITY(uint(7u), uint(7u))))), max(uint(uvec4(subgroup_size, 0u, 0u, (((1u ^ 0u) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(uint(uint(7u))), (uint(uint(uint(7u)))) / 1u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, 0u + (7u))), uint(7u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, 0u + (7u))), uint(7u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, 0u + (7u))), uint(7u))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, 0u + (7u))), uint(7u)), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, 0u + (7u))), uint(7u))))))))), uint(uvec4(subgroup_size, 0u, 0u, (((_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u) : _GLF_FUZZED(subgroup_id)))))) ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))))) | (_GLF_IDENTITY(uint(uvec4(subgroup_size, 0u, 0u, ((_GLF_IDENTITY((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u)), min(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (0u) | 0u)) << _GLF_IDENTITY(uint(7u), uint(7u)), ~ (~ ((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u))))), _GLF_IDENTITY((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u)), min((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u)), ~ (~ ((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, min(7u, 7u)))))))))))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))))), (uint(uvec4(subgroup_size, 0u, 0u, ((_GLF_IDENTITY((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u)), min(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (0u) | 0u)) << _GLF_IDENTITY(uint(7u), uint(7u)), ~ (~ ((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u))))), _GLF_IDENTITY((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u)), min((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u)), ~ (~ ((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, min(7u, 7u)))))))))))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u)))))) * 1u)), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(uint(uvec4(subgroup_size, 0u, 0u, ((_GLF_IDENTITY(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (1u | 1u) * (0u)), 1u * (0u))) | (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))))))), ((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) | _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))))), ~ (~ ((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))))))))))) * 1u) << _GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (1u | 1u) * (0u)), 1u * (0u))) | (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))))))), ((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) | _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))))), ~ (~ ((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))))))))))) * 1u) << _GLF_IDENTITY(uint(7u), uint(7u)), (true ? _GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (1u | 1u) * (0u)), 1u * (0u))) | (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))))))), ((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) | _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))))), ~ (~ ((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))))))))))) * 1u) << _GLF_IDENTITY(uint(7u), uint(7u)) : _GLF_FUZZED(subgroup_local_id)))) ^ 0u)) >> _GLF_IDENTITY(uint(7u), uint(7u))))), max(uint(uvec4(subgroup_size, 0u, 0u, (_GLF_IDENTITY(((1u ^ 0u) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(uint(uint(7u))), (uint(uint(uint(7u)))) / 1u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, 0u + (7u))), uint(7u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, 0u + (7u))), uint(7u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, 0u + (7u))), uint(7u))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, 0u + (7u))), uint(7u)), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, 0u + (7u))), uint(7u)))))), (_GLF_IDENTITY(((1u ^ 0u) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(uint(uint(7u))), (uint(uint(uint(7u)))) / 1u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, 0u + (7u))), uint(7u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, 0u + (7u))), uint(7u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, 0u + (7u))), uint(7u))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, 0u + (7u))), uint(7u)), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, 0u + (7u))), uint(7u)))))), (1u & 1u) * (((1u ^ 0u) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(uint(uint(7u))), (uint(uint(uint(7u)))) / 1u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, 0u + (7u))), uint(7u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, 0u + (7u))), uint(7u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, 0u + (7u))), uint(7u))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, 0u + (7u))), uint(7u)), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, 0u + (7u))), uint(7u))))))))) << 0u)))), uint(uvec4(subgroup_size, 0u, 0u, ((_GLF_IDENTITY((_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u) : _GLF_FUZZED(subgroup_id)))))) ^ 0u), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u) : _GLF_FUZZED(subgroup_id)))))) ^ 0u), 1u, 1u, 0u)), 0u ^ (uint(uvec4((_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u) : _GLF_FUZZED(subgroup_id)))))) ^ 0u), 1u, 1u, 0u))))) << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))))) | (uint(uvec4(subgroup_size, 0u, 0u, ((_GLF_IDENTITY((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u)), min(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (0u) | 0u)) << _GLF_IDENTITY(uint(7u), uint(7u)), ~ (~ ((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u))))), _GLF_IDENTITY((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u)), min((1u ^ 0u) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) | (uint(7u)))), _GLF_IDENTITY((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u)), ~ (~ ((1u ^ 0u) << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, min(7u, 7u)))))))))))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))))))))))))) << (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, min(3u, 3u))), 0u + (_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, min(3u, 3u))), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(3u, (3u) << 0u), min(3u, 3u))), uint(_GLF_IDENTITY(3u, min(3u, 3u))))))), uint(uvec2(uint(_GLF_IDENTITY(3u, (3u) | 0u)), 0u)))))), uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u), (_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u), min(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u), uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u)))) | (uvec4(subgroup_id * subgroup_size, _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) | (1u))))), 0u, 0u))))) + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (1) | 0)) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_size, 1u, 1u, 0u)), clamp(uint(uvec4(subgroup_size, 1u, 1u, 0u)), uint(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) / uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(1u, (1u) - 0u), 1u, 0u)), uint(uvec4(subgroup_size, 1u, 1u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), min(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)))), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 1u, 0u))), _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))) - 0u)), (((subgroup_local_id + _GLF_IDENTITY(1, (1) | 0)) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_size, 1u, 1u, 0u)), clamp(uint(uvec4(subgroup_size, 1u, 1u, 0u)), uint(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) / uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(1u, (1u) - 0u), 1u, 0u)), uint(uvec4(subgroup_size, 1u, 1u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), min(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)))), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 1u, 0u))), _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))) - 0u))) << 0u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (0u)) & 16495u) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)))) + (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) >> 0), _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) | (1))))) + 0)))), ~ (~ ((subgroup_local_id + 1)))), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1))) + 0)))), ~ (~ ((subgroup_local_id + 1))))) | 0u)) | 0u) % subgroup_size)), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) / 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (0u)) & 16495u) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)))) + (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(ivec3(1, 1, 0))), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) + 0), clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) + 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) + 0), ~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) + 0)))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) + 0)))))), ~ (~ ((subgroup_local_id + 1)))), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (0 << _GLF_IDENTITY(int(8), int(8))))))) | (1))) + 0)), (clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1))) + _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, 0 ^ (0)), _GLF_IDENTITY(0, min(0, 0))))))) >> 0))), ~ (~ ((subgroup_local_id + 1))))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(ivec3(1, 1, 0))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) + 0)))), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(ivec3(1, 1, 0))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) + 0)))), ((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(ivec3(1, 1, 0))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) + 0))))) >> 0u)) + 0u), ~ (~ ((subgroup_local_id + 1)))), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1))) + 0)), (clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) | (1), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) | (1), (true ? (_GLF_IDENTITY(1, ~ (~ (1)))) | (1) : _GLF_FUZZED(15488))))))) + 0))) >> 0))), ~ (~ ((subgroup_local_id + 1))))) | 0u)) >> 0u)) | 0u) % subgroup_size)), uint(uvec4((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (0u)) & 16495u) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)))) + (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))), ((_GLF_IDENTITY(1, (1) | (1)))) | ((_GLF_IDENTITY(1, (1) | (1))))) + 0)))), ~ (~ ((subgroup_local_id + 1)))), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1))) + 0)))), ~ (~ ((subgroup_local_id + 1))))) | 0u)) | 0u) % subgroup_size)), 0u, 0u, 1u)))) / 1u) - 0u);
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), virtual_gid))], 4, 64, _GLF_IDENTITY(0, (0) >> 0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).y, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, vec2(_GLF_IDENTITY(mat3(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), transpose(transpose(mat3(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))))))), injectionSwitch)), injectionSwitch)).x > injectionSwitch.y, false)), false, false), bvec3(bvec3(bvec3(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-841.436)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true))))), false)), false, false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), false, false), false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_IDENTITY(bool(bvec3(! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true, true)), true && (bool(bvec3(! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true, true)))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), bool(bvec4(! (! (false)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_IDENTITY(bool(bvec3(! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true, true)), true && (bool(bvec3(! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true, true))))))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), false || (bool(bool(! (false)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), false || (bool(bool(! (false)))))))), (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) && true))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), _GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) && true) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((false), ((false)) || false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), false, true, true))), false, false, false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0), max((injectionSwitch) / vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0), (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))), injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false)))))))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   int i = _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(_GLF_IDENTITY(0, max(0, 0)))), (_GLF_IDENTITY(int(int(_GLF_IDENTITY(0, max(0, 0)))), ~ (~ (int(int(_GLF_IDENTITY(0, max(0, 0)))))))) | (int(int(_GLF_IDENTITY(0, max(0, 0)))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (false)) || _GLF_IDENTITY(false, ! (! (false)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false)))))))
    barrier();
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 + ((_GLF_IDENTITY(4, ~ (~ (4)))))) ^ 0), 64, _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) | 0) : _GLF_FUZZED(-91763)))) / 1))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
