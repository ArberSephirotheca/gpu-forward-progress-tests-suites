#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 mat2x4 _f0;
 uint read;
 int _f1;
} ;

struct _GLF_struct_1 {
 uvec4 _f0;
 bvec4 _f1;
 ivec4 _f2;
 _GLF_struct_0 _f3;
 float _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
 mat3x2 _f1;
 ivec2 _f2;
 _GLF_struct_1 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))).y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))).y, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 0.0)), (vec2(vec4(injectionSwitch, 1.0, 0.0))) * mat2(1.0))).y, 1.0, 1.0, 0.0, 0.0, 1.0, tan(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-3.2 - 1992.0968))), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 0.0)))), max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)), vec2(vec4(injectionSwitch, 1.0, 0.0))).y, float(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))).y, 1.0, 1.0, 0.0, 0.0, 1.0, tan(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-3.2 - 1992.0968))), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7786.4451) : 0.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))).y, float(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))).y, 1.0, 1.0, 0.0, 0.0, 1.0, tan(_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED((-3.2 - 1992.0968))), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(float(_GLF_FUZZED((_GLF_IDENTITY(-3.2 - 1992.0968, mix(float(-3.2 - 1992.0968), float(_GLF_FUZZED(-87.90)), bool(false)))))), (_GLF_IDENTITY(float(_GLF_FUZZED((-3.2 - 1992.0968))), mix(float(_GLF_FUZZED(92.54)), float(float(_GLF_FUZZED((-3.2 - _GLF_IDENTITY(1992.0968, clamp(1992.0968, _GLF_IDENTITY(1992.0968, max(1992.0968, 1992.0968)), 1992.0968)))))), bool(true)))) * abs(1.0)), 0.0, 0.0, 0.0), max(vec4(_GLF_IDENTITY(float(_GLF_FUZZED((-3.2 - 1992.0968))), (_GLF_IDENTITY(float(_GLF_FUZZED((-3.2 - 1992.0968))), mix(float(_GLF_FUZZED(92.54)), float(_GLF_IDENTITY(float(_GLF_FUZZED((-3.2 - 1992.0968))), (true ? _GLF_IDENTITY(float(_GLF_FUZZED((-3.2 - 1992.0968))), (float(_GLF_FUZZED((-3.2 - 1992.0968)))) - 0.0) : _GLF_FUZZED(550.499)))), bool(true)))) * abs(1.0)), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(float(_GLF_FUZZED((-3.2 - 1992.0968))), (_GLF_IDENTITY(float(_GLF_FUZZED((-3.2 - 1992.0968))), mix(float(_GLF_FUZZED(92.54)), float(float(_GLF_FUZZED((-3.2 - 1992.0968)))), bool(true)))) * abs(1.0)), 0.0, 0.0, 0.0))))), float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 0.0)))))) - 0.0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), ! (! (bool(bvec3(_GLF_DEAD(false), true, false)))))), true, false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.4)), float(injectionSwitch.y), bool(true)))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(7.4)), float(injectionSwitch.y), bool(true)), max(mix(float(_GLF_FUZZED(7.4)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(7.4)), float(injectionSwitch.y), bool(true)), (mix(float(_GLF_FUZZED(7.4)), float(injectionSwitch.y), bool(true))) * 1.0))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), (bool(bvec2(false, false))) || false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, false)))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(479.361))), 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), max(float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(479.361))), 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(479.361))), 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.2)), vec2(_GLF_FUZZED(-8.9), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch), vec2(vec4((injectionSwitch), _GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0))), log(1.0))))[1], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)))))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y) && true)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), vec2(_GLF_FUZZED(79.69), _GLF_FUZZED(-4.3)), bvec2(false, false))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0))) > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, true)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, ! (! (true))))))), (_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, ! (! (true))))))), clamp(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, ! (! (true))))))), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, ! (! (true))))))), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, ! (! (true)))))))))) + 0.0), float(_GLF_FUZZED((false ? -69.06 : -4.0))), bool(false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(false || _GLF_IDENTITY((false), ((false)) || false), true && (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || (false)))) && true))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(false || _GLF_IDENTITY((false), ((false)) || false), true && (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || (false)))) && true))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(false || _GLF_IDENTITY((false), ((false)) || false), true && (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || (false)))) && true))), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(false || _GLF_IDENTITY((false), ((false)) || false), true && (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || (false)))) && true))), true))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (bool((injectionSwitch.x > injectionSwitch.y)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) | (_GLF_FUZZED(subgroup_size))) : subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) * 1.0) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)))), true && (bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false))) ? workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u)) % subgroup_size) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ~ (~ ((workgroup_id)))) - 0u), workgroup_id), (_GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ~ (~ ((workgroup_id)))) - 0u), workgroup_id), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * (max(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ~ (~ ((workgroup_id)))) - 0u), workgroup_id)))) * 1u)), clamp(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ~ (~ ((workgroup_id)))) - 0u), workgroup_id), (_GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ~ (~ ((workgroup_id)))) - 0u), workgroup_id), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * (max(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ~ (~ ((workgroup_id)))) - 0u), workgroup_id)))) * 1u)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ~ (~ ((workgroup_id)))) - 0u), workgroup_id), (_GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) << (0u ^ 0u)), 0u, 0u)), (uint(uvec3(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) << (0u ^ 0u)), 0u, 0u))) / 1u)), ~ (~ ((workgroup_id)))) - 0u), workgroup_id), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * (max(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ~ (~ ((workgroup_id)))) - 0u), workgroup_id)))) * 1u)), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ~ (~ ((workgroup_id)))) - 0u), workgroup_id), (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) * 1u), _GLF_IDENTITY((workgroup_id), ~ (~ ((workgroup_id)))) - 0u), workgroup_id), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * (max(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ~ (~ ((_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(subgroup_id))))))) - 0u), workgroup_id)))) * 1u))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ~ (~ ((workgroup_id)))) - 0u), workgroup_id), (_GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ~ (~ ((workgroup_id)))) - 0u), workgroup_id), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * (max(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ~ (~ ((workgroup_id)))) - 0u), workgroup_id)))) * 1u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ~ (~ ((workgroup_id)))) - 0u), workgroup_id), (_GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), 0u ^ ((workgroup_id))), ~ (~ _GLF_IDENTITY(((workgroup_id)), (((workgroup_id))) | (_GLF_IDENTITY(((workgroup_id)), (((workgroup_id))) >> 0u))))) - 0u), workgroup_id), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * (max(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ~ (~ ((workgroup_id)))) - 0u), workgroup_id)))) * 1u)), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), ~ (~ ((workgroup_id)))), (_GLF_IDENTITY((workgroup_id), ~ (~ ((workgroup_id))))) << 0u) - 0u), workgroup_id), (_GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), ~ (~ ((workgroup_id)))), (_GLF_IDENTITY((workgroup_id), ~ (~ ((workgroup_id))))) / 1u) - 0u), workgroup_id), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * (max(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ~ (~ ((workgroup_id)))) - 0u), workgroup_id)))) * 1u))) << 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) >> _GLF_IDENTITY(0u, (0u | 0u) | (0u))), (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) >> 0u)))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) >> _GLF_IDENTITY(0u, (0u | 0u) | (0u))), (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) >> 0u)))))) | 0u)))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size))), (_GLF_IDENTITY(true, (true) || false) ? workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u), _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) - 0u))), (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)) | 0u)))), 0u, 0u)), 0u ^ (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) || false) ? workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), min(~ _GLF_IDENTITY((_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), min((_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), (~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))) >> 0u))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) << 0) : _GLF_FUZZED(-77455)))))), uint(subgroup_local_id + 1)))), min(~ (_GLF_IDENTITY(uint(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0)), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), (~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), min(~ (_GLF_IDENTITY(uint(subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0)))), min(uint(subgroup_local_id + 1), uint(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), (~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))) >> 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), min(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), (~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))) >> 0u))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), min(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), (~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))) >> 0u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + _GLF_IDENTITY(1, (1) * 1))))), min(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 ^ (~ (1)))))), uint(subgroup_local_id + 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), (~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))) >> 0u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(_GLF_IDENTITY(uint(subgroup_local_id + 1), clamp(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), 0u | (uint(subgroup_local_id + 1))), uint(subgroup_local_id + 1))), uint(subgroup_local_id + 1)))), min(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), (~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))) >> 0u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), (~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))) >> 0u)) - 0u)))))) | 0u), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), min(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), (~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))) >> 0u)))))))), clamp(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)))), uint(uint(subgroup_local_id + 1)), uint(uint(subgroup_local_id + 1)))))) % subgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), min(~ _GLF_IDENTITY((_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), min((_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))) + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))) >> 0u))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), clamp(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), (~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))) | 0u), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), (~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), max(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), ~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), (~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), min(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), (~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))) >> 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), min(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), (~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))) >> 0u))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), min(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), (~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))) >> 0u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), min(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), (~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))) >> 0u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), min(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 1u, 0u))), 1u, 0u, 0u)), 1u * (uint(uvec4(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 1u, 0u))), 1u, 0u, 0u))))) + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) / 1), 1, 1)))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), (~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))) >> 0u)))))) | 0u), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), min(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), (~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))) >> 0u)))))))), clamp(uint(uint(subgroup_local_id + 1)), uint(uint(subgroup_local_id + 1)), uint(uint(subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1)))))))))) % subgroup_size))) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u), workgroup_id), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? max(_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u), workgroup_id) : _GLF_FUZZED(workgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (false ? _GLF_FUZZED(num_workgroup) : ~ (workgroup_id))))), (workgroup_id) >> 0u)) | 0u)))), 0u, 0u), _GLF_IDENTITY(uvec3(uvec4(uvec3(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(true, (true) || false) ? workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), min(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), (~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))) >> 0u))))), 0u + (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, 0 | (1)) : _GLF_FUZZED(46123))))), (subgroup_local_id + 1) | (subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), min(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), (~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))) >> 0u)))))))), clamp(uint(uint(subgroup_local_id + 1)), uint(uint(subgroup_local_id + 1)), uint(uint(subgroup_local_id + 1)))))) % subgroup_size) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u), workgroup_id)), (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)) | 0u)))), 0u, 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (uvec3(uvec4(uvec3(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(true, (true) || false) ? workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), _GLF_IDENTITY(min(uint(subgroup_local_id + 1), uint(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))), ~ (~ (_GLF_IDENTITY(min(uint(subgroup_local_id + 1), uint(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))), (_GLF_IDENTITY(min(uint(subgroup_local_id + 1), uint(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))), clamp(min(uint(subgroup_local_id + 1), uint(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))), min(uint(subgroup_local_id + 1), uint(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))), min(uint(subgroup_local_id + 1), uint(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))))))) >> (0u << _GLF_IDENTITY(uint(1u), uint(1u))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), (~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 0u, 1u), uvec3(uvec3(uvec3(subgroup_local_id + 1, 0u, 1u))))))))))) / 1u), (~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(_GLF_IDENTITY(uint(subgroup_local_id + 1), (uint(subgroup_local_id + 1)) ^ 0u), uint(subgroup_local_id + 1)))), (~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))) | (~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ (uint(subgroup_local_id + 1)), (true ? ~ (uint(subgroup_local_id + 1)) : _GLF_FUZZED(workgroup_id))))), max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), 0u | (uint(subgroup_local_id + 1))))), uint(subgroup_local_id + 1)))))))), ~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))))), min(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) + 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), (~ (_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))) >> 0u)))))), clamp(uint(uint(subgroup_local_id + 1)), uint(uint(subgroup_local_id + 1)), uint(uint(subgroup_local_id + 1)))))) % subgroup_size) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u), workgroup_id)), (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)) | 0u)))), 0u, 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))));
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(mat3x2(1.0), mat3x2(1.0), ivec2(_GLF_IDENTITY(1, min(1, 1))), _GLF_struct_1(_GLF_IDENTITY(uvec4(1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(1u, (1u) >> _GLF_IDENTITY(0u, uint(uvec2(0u, 1u))))))), bvec4(true), ivec4(1), _GLF_struct_0(mat2x4(1.0), atomicLoad(buf[virtual_gid], 4, 64, 0), _GLF_IDENTITY(1, (1) - 0)), _GLF_IDENTITY(1.0, (1.0) * 1.0), uvec2(1u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-304.555) : injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)), subgroup_local_id)) + 1 < _GLF_IDENTITY(subgroup_size, (16274u & 0u) | (subgroup_size)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))) || false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), false))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false))), false))), false)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))), (bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))))) || false)), bool(bool(bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))))))))), ! (! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))), (bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))))) || false)), bool(bool(bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))))))))) || false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   int i = _GLF_IDENTITY(0, clamp(0, 0, 0));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), _GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), ((_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)) && (! (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)) || false, false || (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)) || false, ! (! (((injectionSwitch.x < injectionSwitch.y)) || false))))))) && (! (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-292.414) : injectionSwitch[1])))))).x < injectionSwitch.y)) && (! (injectionSwitch.x > injectionSwitch.y)))))))), true)), bool(bool(bool(bvec2(bool(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (injectionSwitch.x > injectionSwitch.y)))))))), true)))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)) && (! (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)) || false, false || (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)) || false, ! (! (((injectionSwitch.x < injectionSwitch.y)) || false))))))) && (! (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-292.414) : injectionSwitch[_GLF_IDENTITY(1, min(1, 1))])))))).x < injectionSwitch.y)) && (! (injectionSwitch.x > injectionSwitch.y)))))))), true)), bool(bool(bool(bvec2(bool(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (injectionSwitch.x > injectionSwitch.y)))))))), true)))))))))))) || false) || false)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false)) && true), (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))), (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) || false)))) && true), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))), ! (! (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))))) && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(6855.2514), max(_GLF_IDENTITY(_GLF_FUZZED(6855.2514), (_GLF_FUZZED(6855.2514)) * _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, exp(0.0), 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, sin(0.0), 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0)), determinant(mat4(abs(0.0), 1.0, _GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8.8) : 1.0)), 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)), max(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - sqrt(0.0)), 0.0, 1.0)), 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0))))), 1.0)))), _GLF_FUZZED(6855.2514)))))))))), false || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y)), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(6855.2514), max(_GLF_IDENTITY(_GLF_FUZZED(6855.2514), (_GLF_FUZZED(6855.2514)) * _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, exp(0.0), 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, sin(0.0), 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0)), determinant(mat4(abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(5710.6403)), float(abs(0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.4))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)), max(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)), dot(_GLF_IDENTITY(vec4(1.0, 0.0, _GLF_IDENTITY(1.0, float(float(1.0))), 0.0), min(_GLF_IDENTITY(vec4(1.0, 0.0, _GLF_IDENTITY(1.0, float(float(1.0))), 0.0), min(vec4(1.0, 0.0, _GLF_IDENTITY(1.0, float(float(1.0))), 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(1.0, float(float(1.0))), 0.0))), _GLF_IDENTITY(vec4(1.0, 0.0, _GLF_IDENTITY(1.0, float(float(1.0))), 0.0), clamp(vec4(1.0, 0.0, _GLF_IDENTITY(1.0, float(float(1.0))), 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(1.0, float(float(1.0))), 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(1.0, float(float(1.0))), 0.0))))), vec4(0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0))))), 1.0)))), _GLF_FUZZED(6855.2514))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(6855.2514), max(_GLF_IDENTITY(_GLF_FUZZED(6855.2514), (_GLF_FUZZED(6855.2514)) * _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, exp(0.0), 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, sin(0.0), 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0)), determinant(mat4(abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(faceforward(-9934.6967, 1.7, -9142.8125)) : 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)), max(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0))))), 1.0)))), _GLF_FUZZED(6855.2514))), min(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(6855.2514), max(_GLF_IDENTITY(_GLF_FUZZED(6855.2514), (_GLF_FUZZED(6855.2514)) * _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, exp(0.0), 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, sin(0.0), 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0)), determinant(mat4(abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(faceforward(-9934.6967, 1.7, -9142.8125)) : 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)), max(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0))))), 1.0)))), _GLF_FUZZED(6855.2514))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(6855.2514), max(_GLF_IDENTITY(_GLF_FUZZED(6855.2514), (_GLF_FUZZED(6855.2514)) * _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, exp(0.0), 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, sin(0.0), 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0)), determinant(mat4(abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(faceforward(-9934.6967, 1.7, -9142.8125)) : 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)), max(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0))))), 1.0)))), _GLF_FUZZED(6855.2514))), float(vec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(6855.2514), max(_GLF_IDENTITY(_GLF_FUZZED(6855.2514), (_GLF_FUZZED(6855.2514)) * _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, exp(0.0), 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, sin(0.0), 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0)), determinant(mat4(abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(faceforward(-9934.6967, 1.7, -9142.8125)) : 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)), max(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0))))), 1.0)))), _GLF_FUZZED(6855.2514))), 1.0, 1.0, 0.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(6855.2514), max(_GLF_IDENTITY(_GLF_FUZZED(6855.2514), (_GLF_FUZZED(6855.2514)) * _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, exp(0.0), 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, sin(0.0), 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0)), determinant(mat4(abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec4(0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)), max(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0))))), 1.0)))), _GLF_FUZZED(6855.2514))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(6855.2514), max(_GLF_IDENTITY(_GLF_FUZZED(6855.2514), (_GLF_FUZZED(6855.2514)) * _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, exp(0.0), 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, sin(0.0), 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0)), determinant(mat4(abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0), clamp(vec4(0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0), vec4(0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0), vec4(0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)), max(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0))))), 1.0)))), _GLF_FUZZED(6855.2514))))))))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), true, false)))), true, false))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false), true && (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false), ! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false)), true && (! (! ((_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), bool(bvec2(! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), true))))))))) || false)) || false)))))))), false || (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false), true && (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))) || false)), ! (! ((_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))) || false)))))))) || false, false || (_GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, ((bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))) || false) && true))))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! ((_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false), true && (! ((_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, ((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false) || _GLF_IDENTITY(false, true && (false))))) || false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false), true && (! (_GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, false || (_GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))) || false, ((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false) && true))))))), false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false), true && (! (_GLF_IDENTITY((bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))) || _GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, ((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false) && true))))))))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(checker[virtual_gid], _GLF_struct_replacement_2._f3._f3.read, 4, _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(int(64), min(int(64), int(64)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(64), min(_GLF_IDENTITY(int(64), ~ (~ (_GLF_IDENTITY(int(64), int(int(int(64))))))), int(64)))), (true ? int(_GLF_IDENTITY(_GLF_IDENTITY(int(64), min(int(64), int(64))), (_GLF_IDENTITY(_GLF_IDENTITY(int(64), min(int(64), int(64))), (false ? _GLF_FUZZED(bitfieldExtract(34206, max(-52243, 42044), 72862)) : _GLF_IDENTITY(int(64), min(int(64), int(64)))))) / 1)) : _GLF_FUZZED(14032)))) >> 0), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(64), min(int(64), int(64))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(64), min(int(64), int(64))), (_GLF_IDENTITY(_GLF_IDENTITY(int(64), min(int(64), int(64))), (true ? _GLF_IDENTITY(int(64), min(int(64), int(64))) : _GLF_FUZZED(i)))) - (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), int(ivec2(int(1), 0)))))))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(64), min(int(64), int(64)))), (true ? int(_GLF_IDENTITY(int(64), min(int(64), int(64)))) : _GLF_FUZZED(14032)))) >> 0), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(64), min(int(64), int(64))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(64), min(int(64), int(64))), (_GLF_IDENTITY(_GLF_IDENTITY(int(64), min(int(64), int(64))), (true ? _GLF_IDENTITY(int(64), min(int(64), int(64))) : _GLF_FUZZED(i)))) - (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), int(ivec2(int(1), 0)))))))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(64), min(int(64), int(64)))), (true ? int(_GLF_IDENTITY(int(64), min(int(64), int(64)))) : _GLF_FUZZED(14032)))) >> 0)) | (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(64), min(int(64), int(64))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(64), min(int(64), int(64))), (_GLF_IDENTITY(_GLF_IDENTITY(int(64), min(int(64), int(64))), (true ? _GLF_IDENTITY(int(64), _GLF_IDENTITY(min(int(64), int(64)), ~ (_GLF_IDENTITY(~ (min(int(64), int(64))), 0 | (~ (min(int(64), int(64)))))))) : _GLF_FUZZED(i)))) - (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), int(ivec2(int(1), 0)))))))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(64), min(int(64), int(64)))), (true ? int(_GLF_IDENTITY(int(64), min(int(64), int(64)))) : _GLF_FUZZED(14032)))) >> 0))))), (~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(64), min(int(64), int(64))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(64), min(int(64), int(64))), (_GLF_IDENTITY(_GLF_IDENTITY(int(64), min(int(64), int(64))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(64), (int(64)) / _GLF_IDENTITY(1, (1) ^ 0)), min(int(64), int(64))) : _GLF_FUZZED(i)))) - (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), int(ivec2(int(1), 0)))))))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(64), min(int(64), _GLF_IDENTITY(int(64), int(ivec2(int(64), 0)))))), (true ? int(_GLF_IDENTITY(int(64), min(int(64), int(64)))) : _GLF_FUZZED(14032)))) >> 0)))) | (~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(64, max(64, 64))), min(int(64), int(64))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(64), min(int(64), int(64))), (_GLF_IDENTITY(_GLF_IDENTITY(int(64), min(int(64), int(64))), (true ? _GLF_IDENTITY(int(64), min(_GLF_IDENTITY(int(64), (false ? _GLF_FUZZED(min(78293, -47415)) : _GLF_IDENTITY(int(64), 0 ^ (int(64))))), int(64))) : _GLF_FUZZED(i)))) - (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), int(ivec2(int(1), 0)))))))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(64), min(int(64), int(64)))), (true ? int(_GLF_IDENTITY(int(64), min(int(64), int(64)))) : _GLF_FUZZED(14032)))) >> 0)))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(64), min(int(64), int(64)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(64), min(int(64), int(64)))), (true ? int(_GLF_IDENTITY(int(64), min(int(64), int(64)))) : _GLF_FUZZED(14032)))) >> 0)) / 1)), 4);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0), (mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)) * mat3(1.0)))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(false)) && true, true), bvec2(bvec4(bvec2((_GLF_DEAD(false)) && true, true), true, true)))))))) || false), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, bool(bvec2((_GLF_DEAD(false)) && true, true)))))) || false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), bool(_GLF_IDENTITY(bool(! (! (false))), false || (bool(! (! (false))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)))) || false), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), true && (false)), true))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)), true, false)), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, false))) || false, false || ((bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, false))) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], _GLF_struct_replacement_2._f3._f3.read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
