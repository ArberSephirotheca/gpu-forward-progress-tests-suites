#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_23 {
 uint _f0;
 int _f1;
 mat2 _f2;
 ivec4 _f3;
 uvec3 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_22 {
 float _f0;
 ivec3 _GLF_SWITCH_1_3v;
 mat2x3 _f1;
 mat3x4 _f2;
 mat2 _f3;
 mat2x4 _f4;
 bvec4 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_21 {
 ivec3 _f0;
 uvec4 _f1;
 ivec3 _f2;
 bool _f3;
 mat3x4 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_24 {
 vec2 _f0;
 uvec2 _f1;
 _GLF_struct_21 _f2;
 _GLF_struct_22 _f3;
 _GLF_struct_23 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_25 {
 _GLF_struct_24 _f0;
 vec3 _f1;
 int _f2;
 int _f3;
 uvec3 _f4;
 int _f5;
} ;

struct _GLF_struct_20 {
 uvec2 _f0;
 uint workgroup_base;
 mat2 _f1;
} ;

struct _GLF_struct_17 {
 bvec2 _f0;
 bvec2 _f1;
 mat4 _f2;
 vec2 _f3;
 float _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_18 {
 _GLF_struct_17 _f0;
 float _f1;
} ;

struct _GLF_struct_15 {
 bvec3 _f0;
 bvec3 _f1;
 ivec2 _f2;
 uvec4 _f3;
 mat3 _f4;
 bvec2 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_16 {
 int _injected_loop_counter;
 vec4 _f0;
 int _f1;
 _GLF_struct_15 _f2;
} ;

struct _GLF_struct_19 {
 mat4 _f0;
 _GLF_struct_16 _f1;
 _GLF_struct_18 _f2;
} ;

struct _GLF_struct_12 {
 float _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_11 {
 bool _f0;
 uvec3 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_10 {
 mat3x4 _f0;
 ivec4 _f1;
 mat3x2 _f2;
 mat3 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_9 {
 mat3 _f0;
 bool _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_13 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
 _GLF_struct_11 _f2;
 uvec4 GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id;
 _GLF_struct_12 _f3;
} ;

struct _GLF_struct_14 {
 _GLF_struct_13 _f0;
} ;

struct _GLF_struct_6 {
 ivec3 _f0;
 vec3 _f1;
 ivec3 _f2;
 mat3x2 _f3;
 mat4x2 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_5 {
 mat3x4 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_4 {
 mat2 _f0;
 mat4x3 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_3 {
 vec2 _f0;
 vec3 _f1;
 ivec3 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_7 {
 vec3 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_5 _f3;
 vec2 _f4;
 _GLF_struct_6 _f5;
} ;

struct _GLF_struct_1 {
 float _f0;
 uvec3 _f1;
 mat4x2 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_0 {
 int _f0;
 mat4x2 _f1;
 vec2 _f2;
 bvec4 _f3;
 mat4 _f4;
 mat3 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 ivec2 _f1;
 _GLF_struct_1 _f2;
 mat3x4 _f3;
 uint _f4;
} ;

struct _GLF_struct_8 {
 _GLF_struct_2 _f0;
 _GLF_struct_7 _f1;
 bvec4 _GLF_SWITCH_0_0v;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_14 _GLF_struct_replacement_14;
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     _GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id.y = subgroup_local_id;
    }
  }
 else
  {
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)).x) | 0u)));
 for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   do
    {
     _GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id.w = workgroup_id;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(8.5, _GLF_IDENTITY(-8.3, clamp(-8.3, _GLF_IDENTITY(-8.3, min(-8.3, -8.3)), -8.3)))) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, _GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(-438.832)), float(_GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED((915.050))), float(exp(0.0)), bool(true)))), bool(true)))), (mat2(injectionSwitch, 0.0, exp(0.0))) * mat2(1.0))))), tan(vec2(0.0, 0.0)) + ((false ? _GLF_FUZZED(vec2(8.5, -8.3)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, exp(0.0)), (mat2(injectionSwitch, 0.0, exp(0.0))) * mat2(1.0)))))))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))));
  }
 _GLF_struct_20 _GLF_struct_replacement_20 = _GLF_struct_20(uvec2(1u), _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))))) * _GLF_IDENTITY(_GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id.w, (_GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id.w) | (_GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id.w)), mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))));
 _GLF_IDENTITY(_GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id.z = _GLF_struct_replacement_20.workgroup_base, (_GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id.z = _GLF_struct_replacement_20.workgroup_base) + 0u);
 uint virtual_gid = _GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id.z + subgroup_id * subgroup_size + _GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id.y;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id.z, max(_GLF_IDENTITY(_GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id.z, (_GLF_IDENTITY(_GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id.z, (_GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id.z) - 0u)) << 0u), _GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id.z)) + _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size + ((_GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id.y + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size);
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)], 4, 64, 0);
 _GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id.x = read;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.7, -8.4)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.7, -8.4)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))))))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id, max(_GLF_IDENTITY(_GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id, max(_GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id, _GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id)), _GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id)).y + 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id.y + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (1)), 1)), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false))))), (_GLF_IDENTITY(true, (true) || false)) || false) ? _GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id.y + 1 : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), max(_GLF_FUZZED(workgroup_id), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) / 1u), max(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), uint(uvec2(_GLF_FUZZED(workgroup_id), 0u)))) / 1u), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) / 1u))))))))))), (true ? (_GLF_IDENTITY(_GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id.y + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (1)), 1)), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false))))), (_GLF_IDENTITY(true, (true) || false)) || false) ? _GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id.y + 1 : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), max(_GLF_FUZZED(workgroup_id), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) / 1u), max(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), uint(uvec2(_GLF_FUZZED(workgroup_id), 0u)))) / 1u), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) / 1u))))))))))) : _GLF_FUZZED(read))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id, max(_GLF_IDENTITY(_GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id, max(_GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id, _GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id)), _GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id)).y + 1, (_GLF_IDENTITY(_GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id.y + 1, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false))))), (_GLF_IDENTITY(true, (true) || false)) || false) ? _GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id.y + 1 : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), max(_GLF_FUZZED(workgroup_id), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) / 1u), max(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) / 1u), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) / 1u))))))))))) ^ 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id, max(_GLF_IDENTITY(_GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id, max(_GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id, _GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id)), _GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id)).y + 1, (_GLF_IDENTITY(_GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id.y + 1, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false))))), (_GLF_IDENTITY(true, (true) || false)) || false) ? _GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id.y + 1 : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), max(_GLF_FUZZED(workgroup_id), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) / 1u), max(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ (0u ^ 0u))), (_GLF_FUZZED(workgroup_id)) / 1u), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) / 1u))))))))))) ^ 0u))) < subgroup_size)
          {
           int i = 0;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             atomicStore(checker[virtual_gid], _GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id.x, 4, 64, 4);
            }
          }
         else
          {
           for(_GLF_struct_19 _GLF_struct_replacement_19 = _GLF_struct_19(mat4(1.0), _GLF_struct_16((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), (true ? (injectionSwitch.y) : _GLF_FUZZED(7.7))), min(_GLF_IDENTITY((injectionSwitch.y), (true ? (injectionSwitch.y) : _GLF_FUZZED(7.7))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), (true ? (injectionSwitch.y) : _GLF_FUZZED(7.7))), (false ? _GLF_FUZZED(distance(vec3(6.0, -807.554, -62.01), vec3(-0.2, 7512.1787, -721.929))) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), (true ? (injectionSwitch.y) : _GLF_FUZZED(7.7))), 1.0 * (_GLF_IDENTITY((injectionSwitch.y), (true ? _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))) : _GLF_FUZZED(7.7))))))))) / 1.0))) & 1), vec4(1.0), 1, _GLF_struct_15(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(true))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(true))), true))))))), bvec3(true), ivec2(1), uvec4(1u), mat3(1.0), bvec2(true), vec3(1.0))), _GLF_struct_18(_GLF_struct_17(bvec2(true), bvec2(true), mat4(1.0), vec2(1.0), 1.0, uvec3(1u)), 1.0)); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_19._f1._injected_loop_counter != 0); _GLF_struct_replacement_19._f1._injected_loop_counter --)
            {
             switch(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_SWITCH(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(0, int(_GLF_ZERO(0.0, injectionSwitch.x))), (ivec2(0, int(_GLF_ZERO(0.0, injectionSwitch.x)))) >> ivec2(0, 0))))), _GLF_IDENTITY((_GLF_SWITCH(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(0, int(_GLF_ZERO(0.0, injectionSwitch.x))), (ivec2(0, int(_GLF_ZERO(0.0, injectionSwitch.x)))) >> ivec2(0, 0)))))), ((_GLF_SWITCH(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(0, int(_GLF_ZERO(0.0, injectionSwitch.x))), (ivec2(0, int(_GLF_ZERO(0.0, injectionSwitch.x)))) >> ivec2(0, 0))))))) + 0) << 0), ~ (_GLF_IDENTITY(~ (_GLF_SWITCH(0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_SWITCH(0)), (~ (_GLF_SWITCH(0))) / 1)), int(ivec4(~ (_GLF_IDENTITY(~ (_GLF_SWITCH(0)), (_GLF_IDENTITY(~ (_GLF_SWITCH(0)), min(~ (_GLF_SWITCH(0)), _GLF_IDENTITY(~ (_GLF_SWITCH(0)), (~ (_GLF_SWITCH(0))) | (~ (_GLF_SWITCH(0))))))) / 1)), 1, 0, 0))))))))
              {
               case 7:
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 for(int _injected_loop_counter = ((0 & -19183) | (0 << _GLF_IDENTITY(int(7), int(7)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   do
                    {
                     for(int _injected_loop_counter = (_GLF_IDENTITY(1, clamp(1, 1, 1)) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                      {
                       do
                        {
                         do
                          {
                           do
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               do
                                {
                                 for(                                 uvec4(_GLF_IDENTITY(41035u, ~ (_GLF_IDENTITY(~ (41035u), (~ (41035u)) * 1u))), 149824u, 188816u, 59570u);
 false; _GLF_IDENTITY(vec3(-866.981, 8.7, _GLF_IDENTITY(2.0, mix(float(_GLF_FUZZED(-1137.1914)), float(2.0), bool(true)))), clamp(_GLF_IDENTITY(vec3(-866.981, 8.7, 2.0), max(vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0))), vec3(-866.981, 8.7, 2.0), _GLF_IDENTITY(vec3(-866.981, 8.7, 2.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec3(-866.981, 8.7, 2.0), _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(vec3(-866.981, 8.7, 2.0), clamp(vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0), vec3(_GLF_IDENTITY(-866.981, min(-866.981, _GLF_IDENTITY(-866.981, 0.0 + (_GLF_IDENTITY(-866.981, min(-866.981, -866.981)))))), 8.7, 2.0))), vec3(-866.981, 8.7, 2.0)), clamp(max(_GLF_IDENTITY(vec3(-866.981, 8.7, 2.0), clamp(vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0), vec3(_GLF_IDENTITY(-866.981, min(-866.981, _GLF_IDENTITY(-866.981, 0.0 + (_GLF_IDENTITY(-866.981, min(-866.981, -866.981)))))), 8.7, 2.0))), vec3(-866.981, 8.7, 2.0)), max(_GLF_IDENTITY(vec3(-866.981, 8.7, 2.0), clamp(vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0), vec3(_GLF_IDENTITY(-866.981, min(-866.981, _GLF_IDENTITY(-866.981, 0.0 + (_GLF_IDENTITY(-866.981, min(-866.981, -866.981)))))), 8.7, 2.0))), vec3(-866.981, 8.7, 2.0)), max(_GLF_IDENTITY(vec3(-866.981, 8.7, 2.0), clamp(vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0), vec3(_GLF_IDENTITY(-866.981, min(-866.981, _GLF_IDENTITY(-866.981, 0.0 + (_GLF_IDENTITY(-866.981, min(-866.981, -866.981)))))), 8.7, 2.0))), vec3(-866.981, 8.7, 2.0)))), clamp(max(_GLF_IDENTITY(vec3(-866.981, 8.7, 2.0), clamp(vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0))), vec3(-866.981, 8.7, 2.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(vec3(-866.981, 8.7, 2.0), clamp(_GLF_IDENTITY(vec3(-866.981, 8.7, 2.0), max(vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0))), vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0))), vec3(-866.981, 8.7, 2.0)), (max(_GLF_IDENTITY(vec3(-866.981, 8.7, 2.0), clamp(vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0), _GLF_IDENTITY(vec3(-866.981, 8.7, 2.0), mix(vec3((vec3(-866.981, 8.7, 2.0))[0], _GLF_FUZZED(-85.04), _GLF_FUZZED(68.02)), vec3(_GLF_FUZZED(-0.8), (vec3(-866.981, 8.7, 2.0))[1], (vec3(-866.981, 8.7, 2.0))[2]), bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), vec3(-866.981, 8.7, 2.0))) / vec3(1.0, 1.0, 1.0)), max(_GLF_IDENTITY(vec3(-866.981, 8.7, 2.0), clamp(_GLF_IDENTITY(vec3(-866.981, 8.7, 2.0), (vec3(-866.981, 8.7, 2.0)) - vec3(0.0, 0.0, 0.0)), vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0))), vec3(-866.981, 8.7, 2.0))))), (true ? _GLF_IDENTITY(vec3(-866.981, 8.7, 2.0), _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(vec3(_GLF_IDENTITY(-866.981, max(_GLF_IDENTITY(-866.981, clamp(-866.981, -866.981, -866.981)), -866.981)), 8.7, 2.0), clamp(vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, _GLF_IDENTITY(2.0, (2.0) / 1.0)))), vec3(-866.981, 8.7, _GLF_IDENTITY(2.0, mix(float(2.0), float(_GLF_FUZZED(-519.424)), bool(false))))), clamp(max(_GLF_IDENTITY(vec3(-866.981, 8.7, 2.0), clamp(vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0))), vec3(-866.981, 8.7, 2.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(vec3(-866.981, 8.7, 2.0), clamp(vec3(_GLF_IDENTITY(-866.981, (-866.981) * 1.0), 8.7, 2.0), vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0))), vec3(-866.981, 8.7, 2.0)), (max(_GLF_IDENTITY(vec3(-866.981, 8.7, 2.0), clamp(vec3(-866.981, 8.7, 2.0), _GLF_IDENTITY(vec3(-866.981, 8.7, 2.0), mix(vec3((vec3(-866.981, 8.7, 2.0))[0], _GLF_FUZZED(vec2(3.6, 1.7).s), (vec3(-866.981, 8.7, 2.0))[2]), vec3(_GLF_FUZZED(298.174), (vec3(-866.981, 8.7, 2.0))[1], _GLF_FUZZED(6.9)), bvec3(false, true, false))), vec3(-866.981, 8.7, 2.0))), vec3(-866.981, 8.7, 2.0))) / vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(vec3(-866.981, 8.7, 2.0), clamp(vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0))), vec3(-866.981, 8.7, 2.0)), (max(_GLF_IDENTITY(vec3(-866.981, 8.7, 2.0), clamp(vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0))), vec3(-866.981, _GLF_IDENTITY(8.7, (_GLF_IDENTITY(8.7, min(8.7, _GLF_IDENTITY(8.7, (8.7) / 1.0)))) + 0.0), 2.0))) / vec3(1.0, 1.0, 1.0)))), mix(vec3(_GLF_FUZZED((-23.57)), (_GLF_IDENTITY(max(_GLF_IDENTITY(vec3(_GLF_IDENTITY(-866.981, max(_GLF_IDENTITY(-866.981, clamp(-866.981, -866.981, -866.981)), -866.981)), 8.7, 2.0), clamp(vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, _GLF_IDENTITY(2.0, (2.0) / 1.0)))), vec3(-866.981, 8.7, _GLF_IDENTITY(2.0, mix(float(2.0), float(_GLF_FUZZED(-519.424)), bool(false))))), clamp(max(_GLF_IDENTITY(vec3(-866.981, 8.7, 2.0), clamp(vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0))), vec3(-866.981, 8.7, 2.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(vec3(-866.981, 8.7, 2.0), clamp(vec3(_GLF_IDENTITY(-866.981, (-866.981) * 1.0), 8.7, 2.0), vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0))), vec3(-866.981, 8.7, 2.0)), (max(_GLF_IDENTITY(vec3(-866.981, 8.7, 2.0), clamp(vec3(-866.981, 8.7, 2.0), _GLF_IDENTITY(vec3(-866.981, 8.7, 2.0), mix(vec3((vec3(-866.981, 8.7, 2.0))[0], _GLF_FUZZED(vec2(3.6, 1.7).s), (vec3(-866.981, 8.7, 2.0))[2]), vec3(_GLF_FUZZED(298.174), (vec3(-866.981, 8.7, 2.0))[1], _GLF_FUZZED(6.9)), bvec3(false, true, false))), vec3(-866.981, 8.7, 2.0))), vec3(-866.981, 8.7, 2.0))) / vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(vec3(-866.981, 8.7, 2.0), clamp(vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0))), vec3(-866.981, 8.7, 2.0)), (max(_GLF_IDENTITY(vec3(-866.981, 8.7, 2.0), clamp(vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0))), vec3(-866.981, _GLF_IDENTITY(8.7, (_GLF_IDENTITY(8.7, min(8.7, _GLF_IDENTITY(8.7, (8.7) / 1.0)))) + 0.0), 2.0))) / vec3(1.0, 1.0, 1.0)))))[1], _GLF_FUZZED(vec4(9782.3396, 6.2, -3886.9027, 5.3).g)), vec3((_GLF_IDENTITY(max(_GLF_IDENTITY(vec3(_GLF_IDENTITY(-866.981, max(_GLF_IDENTITY(-866.981, clamp(-866.981, -866.981, -866.981)), -866.981)), 8.7, 2.0), clamp(vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, _GLF_IDENTITY(2.0, (2.0) / 1.0)))), vec3(-866.981, 8.7, _GLF_IDENTITY(2.0, mix(float(2.0), float(_GLF_FUZZED(-519.424)), bool(false))))), clamp(max(_GLF_IDENTITY(vec3(-866.981, 8.7, 2.0), clamp(vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0))), vec3(-866.981, 8.7, 2.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(vec3(-866.981, 8.7, 2.0), clamp(vec3(_GLF_IDENTITY(-866.981, (-866.981) * 1.0), 8.7, 2.0), vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0))), vec3(-866.981, 8.7, 2.0)), (max(_GLF_IDENTITY(vec3(-866.981, 8.7, 2.0), clamp(vec3(-866.981, 8.7, 2.0), _GLF_IDENTITY(vec3(-866.981, 8.7, 2.0), mix(vec3((vec3(-866.981, 8.7, 2.0))[0], _GLF_FUZZED(vec2(3.6, 1.7).s), (vec3(-866.981, 8.7, 2.0))[2]), vec3(_GLF_FUZZED(298.174), (vec3(-866.981, 8.7, 2.0))[1], _GLF_FUZZED(6.9)), bvec3(false, true, false))), vec3(-866.981, 8.7, 2.0))), vec3(-866.981, 8.7, 2.0))) / vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(vec3(-866.981, 8.7, 2.0), clamp(vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0))), vec3(-866.981, 8.7, 2.0)), (max(_GLF_IDENTITY(vec3(-866.981, 8.7, 2.0), clamp(vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0))), vec3(-866.981, _GLF_IDENTITY(8.7, (_GLF_IDENTITY(8.7, min(8.7, _GLF_IDENTITY(8.7, (8.7) / 1.0)))) + 0.0), 2.0))) / vec3(1.0, 1.0, 1.0)))))[0], _GLF_FUZZED(-0.7), (_GLF_IDENTITY(max(_GLF_IDENTITY(vec3(_GLF_IDENTITY(-866.981, max(_GLF_IDENTITY(-866.981, clamp(-866.981, -866.981, -866.981)), -866.981)), 8.7, 2.0), clamp(vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, _GLF_IDENTITY(2.0, (2.0) / 1.0)))), vec3(-866.981, 8.7, _GLF_IDENTITY(2.0, mix(float(2.0), float(_GLF_FUZZED(-519.424)), bool(false))))), clamp(max(_GLF_IDENTITY(vec3(-866.981, 8.7, 2.0), clamp(vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0))), vec3(-866.981, 8.7, 2.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(vec3(-866.981, 8.7, 2.0), clamp(vec3(_GLF_IDENTITY(-866.981, (-866.981) * 1.0), 8.7, 2.0), vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0))), vec3(-866.981, 8.7, 2.0)), (max(_GLF_IDENTITY(vec3(-866.981, 8.7, 2.0), clamp(vec3(-866.981, 8.7, 2.0), _GLF_IDENTITY(vec3(-866.981, 8.7, 2.0), mix(vec3((vec3(-866.981, 8.7, 2.0))[0], _GLF_FUZZED(vec2(3.6, 1.7).s), (vec3(-866.981, 8.7, 2.0))[2]), vec3(_GLF_FUZZED(298.174), (vec3(-866.981, 8.7, 2.0))[1], _GLF_FUZZED(6.9)), bvec3(false, true, false))), vec3(-866.981, 8.7, 2.0))), vec3(-866.981, 8.7, 2.0))) / vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(vec3(-866.981, 8.7, 2.0), clamp(vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0))), vec3(-866.981, 8.7, 2.0)), (max(_GLF_IDENTITY(vec3(-866.981, 8.7, 2.0), clamp(vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0), vec3(-866.981, 8.7, 2.0))), vec3(-866.981, _GLF_IDENTITY(8.7, (_GLF_IDENTITY(8.7, min(8.7, _GLF_IDENTITY(8.7, (8.7) / 1.0)))) + 0.0), 2.0))) / vec3(1.0, 1.0, 1.0)))))[2]), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) : _GLF_FUZZED(vec3(12.76, 7739.6120, 663.664)))), vec3(_GLF_IDENTITY(-866.981, (_GLF_IDENTITY(-866.981, min(-866.981, -866.981))) + 0.0), 8.7, 2.0), vec3(-866.981, 8.7, 2.0))))))
                                  {
                                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                    {
                                     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (! (! (_GLF_WRAPPED_IF_FALSE(false))))))))
                                      {
                                      }
                                     else
                                      {
                                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                        {
                                         ivec2(_GLF_IDENTITY(39418, min(39418, 39418)));
                                        }
                                      }
                                    }
                                   for(_GLF_struct_8 _GLF_struct_replacement_8; _GLF_IDENTITY(true, false || _GLF_IDENTITY((true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((true), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((true), true, false)), bvec3(bvec3(bvec3(bvec3((true), true, false)))))))), (bool(_GLF_IDENTITY(bvec3((true), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((true), true, false)), bvec3(bvec3(bvec3(bvec3((true), true, false))))))))) || false))); _GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id.w)
                                    {
                                     ivec3 _GLF_SWITCH_0_1v;
                                     _GLF_IDENTITY(ivec2(-80541, -12347), ivec2(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec4(82.04, 478.149, -2448.2672, -20.14).g)), float(_GLF_IDENTITY(0.0, (0.0) + 0.0)), bool(true))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(ivec2(-80541, -12347), max(ivec2(-80541, -12347), ivec2(-80541, -12347)))));
                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                      {
                                      }
                                     else
                                      {
                                       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter), min((_injected_loop_counter), (_injected_loop_counter))) | (0 & 18583)) != int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_IDENTITY(_injected_loop_counter ++, 0 + (_injected_loop_counter ++)))
                                        {
                                         ivec3(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(-83926, max(-83926, -83926)), 59884, 57221, _GLF_IDENTITY(-65269, max(_GLF_IDENTITY(_GLF_IDENTITY(-65269, ~ (~ _GLF_IDENTITY((-65269), ((-65269)) + (1 ^ 1)))), (-65269) | (-65269)), -65269))), (ivec4(-83926, 59884, 57221, -65269)) >> ivec4(0, 0, 0, 0)), min(_GLF_IDENTITY(ivec4(-83926, 59884, 57221, -65269), (ivec4(-83926, 59884, 57221, -65269)) >> ivec4(0, 0, 0, 0)), _GLF_IDENTITY(ivec4(-83926, 59884, 57221, -65269), (ivec4(-83926, 59884, 57221, -65269)) >> _GLF_IDENTITY(ivec4(0, 0, 0, 0), clamp(ivec4(0, 0, 0, 0), ivec4(0, 0, 0, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, 0 | (0)), 0, _GLF_IDENTITY(0, (0) << 0)))), ivec4(0, 0, 0, 0)))))));
                                        }
                                      }
                                     (mat3x4(-627.678, _GLF_IDENTITY(-562.949, float(mat3x4(-562.949, 0.0, 1.0, sqrt(sqrt(0.0)), 1.0, 1.0, 1.0, exp(0.0), 0.0, sin(0.0), sin(0.0), 0.0))), 676.139, 21.80, 7.0, -4867.3258, _GLF_IDENTITY(2.7, mix(float(2.7), float(_GLF_FUZZED(-6.7)), bool(false))), -4.0, -973.673, -998.641, -58.95, 8.9) == mat3x4(1.8, -41.92, -2.2, -9.5, -6720.1755, 9080.1622, -4.9, -2.9, -3327.1613, -4.1, -8.5, 11.30));
                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                      {
                                       _GLF_IDENTITY(mat3(_GLF_IDENTITY(-2638.6064, max(-2638.6064, -2638.6064)), -1.7, 73.74, 370.027, 6.9, 1525.1395, _GLF_IDENTITY(-8192.5304, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(-8192.5304, mix(float(_GLF_FUZZED(505.240)), float(-8192.5304), bool(true))), 1.0, abs(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0))), clamp(_GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(-8192.5304, mix(float(_GLF_FUZZED(505.240)), float(-8192.5304), bool(true))), 1.0, abs(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0))), (true ? float(mat3x2(_GLF_IDENTITY(-8192.5304, mix(float(_GLF_FUZZED(505.240)), float(-8192.5304), bool(true))), 1.0, abs(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0))) : _GLF_FUZZED(580.946))), float(mat3x2(_GLF_IDENTITY(-8192.5304, mix(float(_GLF_FUZZED(505.240)), float(-8192.5304), bool(true))), 1.0, abs(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0))), float(mat3x2(_GLF_IDENTITY(-8192.5304, mix(float(_GLF_FUZZED(505.240)), float(-8192.5304), bool(true))), 1.0, abs(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0)))))), 909.586, -6224.0748), (false ? _GLF_FUZZED(mat3(-4.6, 5139.8099, -8.6, -995.050, -2.6, -1.4, -977.250, 5.3, -3.2)) : mat3(_GLF_IDENTITY(-2638.6064, max(-2638.6064, -2638.6064)), -1.7, 73.74, _GLF_IDENTITY(370.027, clamp(370.027, 370.027, _GLF_IDENTITY(370.027, (true ? 370.027 : _GLF_FUZZED(983.318))))), 6.9, 1525.1395, -8192.5304, 909.586, _GLF_IDENTITY(-6224.0748, float(mat4x2(-6224.0748, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sqrt(round(length(normalize(1.0)))), 1.0, 1.0))))));
                                      }
                                     else
                                      {
                                      }
                                     uvec4(103320u, 23585u, 160833u, _GLF_IDENTITY(98775u, min(98775u, 98775u)));
                                     mat2(_GLF_IDENTITY(3896.3349, min(3896.3349, 3896.3349)), 654.367, -680.406, _GLF_IDENTITY(8614.1387, mix(float(_GLF_FUZZED(1358.1162)), float(8614.1387), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))));
                                     uvec3 _GLF_SWITCH_0_2v;
                                    }
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     (mat2x3(-17.41, -4.4, 2.2, -9353.1893, -4136.1822, -0.2) - vec4(-82.84, -230.617, -366.194, -9.0)[0]);
                                    }
                                   else
                                    {
                                    }
                                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) >> 0), 1)), 1, 0), clamp(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) >> 0), 1)), 1, 0), ivec3(0, 0, 0) + (ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) >> 0), 1)), 1, 0))), ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) >> 0), 1)), 1, 0), ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) >> 0), 1)), 1, 0)))), max(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) >> 0), 1)), 1, 0), clamp(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) >> 0), 1)), 1, 0), ivec3(0, 0, 0) + (ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) >> 0), 1)), 1, 0))), ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) >> 0), 1)), 1, 0), ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) >> 0), 1)), 1, 0)))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) >> 0), 1)), 1, 0), clamp(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) >> 0), 1)), 1, 0), ivec3(0, 0, 0) + (ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) >> 0), 1)), 1, 0))), ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) >> 0), 1)), 1, 0), ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) >> 0), 1)), 1, 0))))))) * (_injected_loop_counter)), 0, 1), (ivec3(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), 0, 1)) - ivec3(0, 0, 0)))) > (0 << _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
                                    {
                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                      {
                                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)); _injected_loop_counter ++)
                                        {
                                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7.6)))))) - length(vec2(0.0, 0.0))) > injectionSwitch.y))))
                                          {
                                          }
                                         else
                                          {
                                           if(_GLF_WRAPPED_IF_TRUE(true))
                                            {
                                             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                              {
                                              }
                                             else
                                              {
                                               if(_GLF_WRAPPED_IF_TRUE(true))
                                                {
                                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                                  {
                                                   for(mat3x4 _GLF_SWITCH_0_3v; (4433.4265 > distance(_GLF_IDENTITY(-4.9, max(_GLF_IDENTITY(-4.9, max(-4.9, -4.9)), -4.9)), -304.269)); bvec3(false, false, false))
                                                    {
                                                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                                      {
                                                       if(_GLF_WRAPPED_IF_FALSE(false))
                                                        {
                                                        }
                                                       else
                                                        {
                                                         if(_GLF_WRAPPED_IF_TRUE(true))
                                                          {
                                                           do
                                                            {
                                                             ;
                                                            }
                                                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                                          }
                                                         else
                                                          {
                                                          }
                                                        }
                                                      }
                                                     else
                                                      {
                                                      }
                                                     mat4x2(injectionSwitch, vec2(vec3(_GLF_IDENTITY(625.278, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(625.278, clamp(625.278, 625.278, _GLF_IDENTITY(_GLF_IDENTITY(625.278, (625.278) - 0.0), 0.0 + (_GLF_IDENTITY(625.278, (_GLF_IDENTITY(625.278, mix(float(_GLF_IDENTITY(625.278, mix(float(_GLF_FUZZED(-4626.9588)), float(625.278), bool(_GLF_IDENTITY(true, (true) || false))))), _GLF_IDENTITY(float(_GLF_FUZZED(685.915)), (true ? float(_GLF_FUZZED(685.915)) : _GLF_FUZZED(94.56))), bool(false)))) - 0.0)))))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(625.278, clamp(625.278, 625.278, _GLF_IDENTITY(_GLF_IDENTITY(625.278, (625.278) - 0.0), 0.0 + (_GLF_IDENTITY(625.278, (_GLF_IDENTITY(625.278, mix(float(_GLF_IDENTITY(625.278, mix(float(_GLF_FUZZED(-4626.9588)), float(625.278), bool(_GLF_IDENTITY(true, (true) || false))))), _GLF_IDENTITY(float(_GLF_FUZZED(685.915)), (true ? float(_GLF_FUZZED(685.915)) : _GLF_FUZZED(94.56))), bool(false)))) - 0.0)))))), min(float(_GLF_IDENTITY(625.278, clamp(625.278, 625.278, _GLF_IDENTITY(_GLF_IDENTITY(625.278, (625.278) - 0.0), 0.0 + (_GLF_IDENTITY(625.278, (_GLF_IDENTITY(625.278, mix(float(_GLF_IDENTITY(625.278, mix(float(_GLF_FUZZED(-4626.9588)), float(625.278), bool(_GLF_IDENTITY(true, (true) || false))))), _GLF_IDENTITY(float(_GLF_FUZZED(685.915)), (true ? float(_GLF_FUZZED(685.915)) : _GLF_FUZZED(94.56))), bool(false)))) - 0.0)))))), float(_GLF_IDENTITY(625.278, clamp(625.278, 625.278, _GLF_IDENTITY(_GLF_IDENTITY(625.278, (625.278) - 0.0), 0.0 + (_GLF_IDENTITY(625.278, (_GLF_IDENTITY(625.278, mix(float(_GLF_IDENTITY(625.278, mix(float(_GLF_FUZZED(-4626.9588)), float(625.278), bool(_GLF_IDENTITY(true, (true) || false))))), _GLF_IDENTITY(float(_GLF_FUZZED(685.915)), (true ? float(_GLF_FUZZED(685.915)) : _GLF_FUZZED(94.56))), bool(false)))) - 0.0))))))))), float(_GLF_FUZZED((56.08 * 5.5))), bool(false))), float(_GLF_FUZZED(vec3(-3221.0962, 6.1, 8755.2743).z)), bool(false))), 2.4, -3.1)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1388.9812, (1388.9812) - 0.0), 1.8), (_GLF_IDENTITY(vec2(1388.9812, 1.8), mix(vec2((vec2(_GLF_IDENTITY(1388.9812, float(float(1388.9812))), 1.8))[0], _GLF_FUZZED(_GLF_IDENTITY(-1.7, max(-1.7, -1.7)))), vec2(_GLF_FUZZED(-2.1), (vec2(_GLF_IDENTITY(1388.9812, (false ? _GLF_FUZZED(93.93) : 1388.9812)), _GLF_IDENTITY(1.8, clamp(1.8, _GLF_IDENTITY(1.8, max(1.8, 1.8)), 1.8))))[1]), bvec2(false, true)))) + vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8.9)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, (0.0) / 1.0))), injectionSwitch);
                                                     _GLF_IDENTITY(-26240, clamp(_GLF_IDENTITY(-26240, (-26240) | (-26240)), -26240, -26240));
                                                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                                      {
                                                       do
                                                        {
                                                         _GLF_IDENTITY(uvec4(subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_size), (true ? uvec4(subgroup_size) : _GLF_FUZZED(uvec4(52538u, 66111u, 177255u, 153833u))))) ^ uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), min((_GLF_IDENTITY(uvec4(subgroup_size), (true ? uvec4(subgroup_size) : _GLF_FUZZED(uvec4(52538u, 66111u, 177255u, 153833u))))) ^ uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, exp(0.0)))))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uvec4(subgroup_size), (true ? uvec4(subgroup_size) : _GLF_FUZZED(uvec4(52538u, 66111u, 177255u, 153833u))))) ^ uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))));
                                                        }
                                                       while(_GLF_WRAPPED_LOOP(false));
                                                      }
                                                     else
                                                      {
                                                      }
                                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                                      {
                                                       ;
                                                      }
                                                     else
                                                      {
                                                      }
                                                     mat2x4 _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v;
                                                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                                                      {
                                                       for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY((33395 & 0), ((33395 & 0)) / 1), int(ivec2((33395 & 0), 1))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, false || (_GLF_IDENTITY(_injected_loop_counter < 1, ! (! (_injected_loop_counter < 1)))))); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(false ? _GLF_FUZZED(-54553) : _injected_loop_counter ++, (true ? false ? _GLF_FUZZED(-54553) : _injected_loop_counter ++ : _GLF_FUZZED(_injected_loop_counter))))))
                                                        {
                                                         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
                                                          {
                                                          }
                                                         else
                                                          {
                                                           if(_GLF_WRAPPED_IF_FALSE(false))
                                                            {
                                                            }
                                                           else
                                                            {
                                                             for(int _injected_loop_counter = (0 & (-74424 % -74176)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                                                              {
                                                               (mat2x3(22.40, -5.5, -861.489, 72.26, _GLF_IDENTITY(405.968, float(vec3(405.968, sin(0.0), 1.0))), 8.4) / 5.8);
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                     else
                                                      {
                                                      }
                                                    }
                                                  }
                                                 else
                                                  {
                                                  }
                                                }
                                               else
                                                {
                                                }
                                              }
                                            }
                                           else
                                            {
                                            }
                                          }
                                        }
                                      }
                                     else
                                      {
                                      }
                                    }
                                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    {
                                    }
                                   else
                                    {
                                     do
                                      {
                                       bvec4(false, false, true, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true))));
                                      }
                                     while(_GLF_WRAPPED_LOOP(false));
                                    }
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                              }
                             else
                              {
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))));
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                 bvec4(false, true, false, false);
                 while(false)
                  {
                  }
                 for(                 (- (false ? mat2x4(-3.3, _GLF_IDENTITY(0.4, (false ? _GLF_FUZZED(atan(33.64, _GLF_IDENTITY(52.15, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(52.15, clamp(52.15, 52.15, 52.15))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(52.15, clamp(52.15, 52.15, 52.15))) : _GLF_FUZZED(63.35))), (_GLF_IDENTITY((_GLF_IDENTITY(52.15, clamp(52.15, 52.15, 52.15))), max((_GLF_IDENTITY(52.15, clamp(52.15, 52.15, 52.15))), _GLF_IDENTITY((_GLF_IDENTITY(52.15, clamp(52.15, 52.15, 52.15))), min((_GLF_IDENTITY(52.15, clamp(52.15, 52.15, 52.15))), (_GLF_IDENTITY(52.15, clamp(52.15, 52.15, 52.15)))))))) - 0.0) / exp(0.0)))) : _GLF_IDENTITY(0.4, 0.0 + (0.4)))), -2883.7977, -4.5, -9218.9684, -3064.6105, 7.8, 0.9) : mat2x4(269.230, 0.2, -6.1, -5.6, -6.0, 865.857, _GLF_IDENTITY(10.28, mix(float(10.28), float(_GLF_FUZZED(43.30)), bool(false))), -930.972)));
 true; mat4(mat2x4(56.80, _GLF_IDENTITY(-408.799, min(-408.799, -408.799)), -872.101, _GLF_IDENTITY(-5.5, _GLF_IDENTITY(mix(float(-5.5), float(_GLF_FUZZED(-9635.1296)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (true ? _GLF_IDENTITY(mix(float(-5.5), float(_GLF_FUZZED(-9635.1296)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (mix(float(_GLF_IDENTITY(-5.5, float(_GLF_IDENTITY(mat2x3(-5.5, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0), (mat2x3(-5.5, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))), float(_GLF_FUZZED(-9635.1296)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), 1.0, 1.0, abs(0.0), 1.0), transpose(transpose(mat2x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), 1.0, 1.0, abs(0.0), 1.0)))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / abs(1.0))))))) - tan(0.0)) : _GLF_FUZZED(determinant(mat4(993.992, -12.50, -9.9, -3750.9811, -53.20, -0.2, -184.865, -1.4, -81.71, 620.047, 7.0, -445.087, 1.0, -6.3, -542.852, -407.777)))))), _GLF_IDENTITY(-5.6, (-5.6) / 1.0), -85.86, -2.9, -62.74)))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     switch(_GLF_SWITCH(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0)))
                      {
                       case 88:
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           ;
                          }
                        }
                       case 87:
                       bvec3 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v;
                       case 0:
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if((30323 == -39581))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               -750.921;
                              }
                            }
                           uvec2 _GLF_SWITCH_0_6v[26];
                           int _GLF_SWITCH_0_7v, _GLF_SWITCH_0_8v, _GLF_SWITCH_0_9v;
                           vec2 _GLF_SWITCH_0_10v[54], _GLF_SWITCH_0_11v[31];
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (_injected_loop_counter) | (_injected_loop_counter)), min(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (_injected_loop_counter) | (_injected_loop_counter)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (_injected_loop_counter) | (_injected_loop_counter)), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (_injected_loop_counter) | (_injected_loop_counter))) | (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (_injected_loop_counter) | (_injected_loop_counter)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (_injected_loop_counter) | (_injected_loop_counter)), min(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (_injected_loop_counter) | (_injected_loop_counter)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (_injected_loop_counter) | (_injected_loop_counter)), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (_injected_loop_counter) | (_injected_loop_counter))) | (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (_injected_loop_counter) | (_injected_loop_counter)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (_injected_loop_counter) | (_injected_loop_counter)), min(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (_injected_loop_counter) | (_injected_loop_counter)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (_injected_loop_counter) | (_injected_loop_counter)), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (_injected_loop_counter) | (_injected_loop_counter))) | (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (_injected_loop_counter) | (_injected_loop_counter)))))))) != 0); _injected_loop_counter --)
                            {
                             vec4(429.699, 7.1, -872.753, -34.55);
                            }
                          }
                        }
                       else
                        {
                        }
                       case 77:
                       case 19:
                       case 14:
                       case 54:
                       do
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           sqrt(vec4(8.1, 4.1, -43.79, 10.13));
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       case 7:
                       do
                        {
                         bvec3(false, bvec2(false, true));
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                        }
                       else
                        {
                         for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                          {
                           (_GLF_IDENTITY(mat4(94.88, 9737.6558, -6699.6192, _GLF_IDENTITY(-86.12, clamp(-86.12, _GLF_IDENTITY(-86.12, max(-86.12, _GLF_IDENTITY(-86.12, min(-86.12, -86.12)))), _GLF_IDENTITY(_GLF_IDENTITY(-86.12, clamp(-86.12, _GLF_IDENTITY(-86.12, (false ? _GLF_FUZZED(_GLF_IDENTITY(0.1, mix(float(_GLF_IDENTITY(0.1, max(0.1, 0.1))), float(_GLF_FUZZED(3416.3501)), bool(false)))) : -86.12)), -86.12)), _GLF_IDENTITY(max(-86.12, -86.12), 1.0 * (_GLF_IDENTITY(max(-86.12, -86.12), (true ? max(-86.12, -86.12) : _GLF_FUZZED(-5853.8941)))))))), 91.40, -2763.3981, 5.7, -506.823, -8875.7763, 39.89, _GLF_IDENTITY(-0.3, float(mat3x4(-0.3, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(round(length(normalize(1.0))), 0.0, 1.0, abs(1.0), 0.0, 0.0), transpose(transpose(mat3x2(round(length(normalize(1.0))), 0.0, 1.0, abs(1.0), 0.0, 0.0))))), (float(_GLF_IDENTITY(mat3x2(round(length(normalize(1.0))), 0.0, 1.0, abs(1.0), 0.0, 0.0), transpose(transpose(mat3x2(round(length(normalize(1.0))), 0.0, 1.0, abs(1.0), 0.0, 0.0)))))) + 0.0)), _GLF_ZERO(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), cos(0.0), 1.0, 0.0))), injectionSwitch.x), 1.0, 1.0, 0.0))), -567.872, -26.60, 6629.4844, -3.0, -0.8), (mat4(94.88, 9737.6558, -6699.6192, _GLF_IDENTITY(-86.12, clamp(-86.12, _GLF_IDENTITY(-86.12, max(-86.12, _GLF_IDENTITY(-86.12, min(-86.12, -86.12)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-86.12, mix(float(-86.12), float(_GLF_FUZZED(vec2(_GLF_IDENTITY(725.833, min(725.833, 725.833)), _GLF_IDENTITY(-89.60, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8853.0478) : -89.60))).g)), bool(false))), _GLF_IDENTITY(clamp(-86.12, _GLF_IDENTITY(-86.12, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(0.1, mix(float(_GLF_IDENTITY(0.1, max(0.1, 0.1))), float(_GLF_FUZZED(3416.3501)), bool(false)))), (true ? _GLF_FUZZED(_GLF_IDENTITY(0.1, mix(float(_GLF_IDENTITY(0.1, max(0.1, 0.1))), float(_GLF_FUZZED(3416.3501)), bool(false)))) : _GLF_FUZZED((-6.8 + -4835.9260)))) : -86.12)), -86.12), (_GLF_IDENTITY(clamp(-86.12, _GLF_IDENTITY(-86.12, (false ? _GLF_FUZZED(_GLF_IDENTITY(0.1, mix(float(_GLF_IDENTITY(0.1, max(0.1, 0.1))), float(_GLF_FUZZED(3416.3501)), bool(false)))) : -86.12)), -86.12), clamp(clamp(-86.12, _GLF_IDENTITY(-86.12, (false ? _GLF_FUZZED(_GLF_IDENTITY(0.1, mix(float(_GLF_IDENTITY(0.1, max(0.1, 0.1))), _GLF_IDENTITY(float(_GLF_FUZZED(3416.3501)), clamp(float(_GLF_FUZZED(3416.3501)), float(_GLF_FUZZED(3416.3501)), float(_GLF_FUZZED(3416.3501)))), bool(false)))) : -86.12)), -86.12), clamp(-86.12, _GLF_IDENTITY(-86.12, (false ? _GLF_FUZZED(_GLF_IDENTITY(0.1, mix(float(_GLF_IDENTITY(0.1, max(0.1, 0.1))), float(_GLF_FUZZED(3416.3501)), bool(false)))) : -86.12)), -86.12), clamp(-86.12, _GLF_IDENTITY(-86.12, (false ? _GLF_FUZZED(_GLF_IDENTITY(0.1, mix(float(_GLF_IDENTITY(0.1, max(0.1, 0.1))), float(_GLF_FUZZED(3416.3501)), _GLF_IDENTITY(bool(false), bool(bool(bool(false))))))) : -86.12)), -86.12)))) / 1.0)), max(-86.12, -86.12)))), 91.40, -2763.3981, 5.7, -506.823, _GLF_IDENTITY(-8875.7763, clamp(-8875.7763, _GLF_IDENTITY(-8875.7763, mix(float(_GLF_FUZZED((-0.4 - -2663.1324))), float(-8875.7763), bool(true))), -8875.7763)), 39.89, _GLF_IDENTITY(-0.3, float(mat3x4(-0.3, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, round(length(normalize(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-7.7) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-39.35))), bool(false)))) / exp(0.0))))))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0))), -567.872, -26.60, 6629.4844, -3.0, -0.8)) * mat4(1.0)));
                          }
                        }
                       case 67:
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         do
                          {
                           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) ^ 0))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), max(int(2), int(2))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 ^ (0 << _GLF_IDENTITY(int(6), int(6))), clamp(0 ^ (0 << _GLF_IDENTITY(int(6), int(6))), 0 ^ (0 << _GLF_IDENTITY(int(6), int(6))), _GLF_IDENTITY(0 ^ (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | (_GLF_IDENTITY(int(6), (int(6)) - 0))), int(6))), int(ivec3(0 ^ (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, clamp(6, 6, 6))), int(6))), 1, ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, 0 | (6)), 6))), int(6))) >> _GLF_IDENTITY(int(6), int(6)))))))))); _injected_loop_counter --)
                            {
                             if(_GLF_IDENTITY(isnan(_GLF_IDENTITY(-6.1, float(mat2x4(-6.1, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(82.52))), 0.0, 0.0, 1.0, cos(0.0), 1.0)))), ! (! (_GLF_IDENTITY(isnan(_GLF_IDENTITY(-6.1, float(mat2x4(-6.1, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(82.52))), 0.0, 0.0, 1.0, cos(0.0), 1.0)))), (isnan(_GLF_IDENTITY(-6.1, float(mat2x4(-6.1, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(82.52))), 0.0, 0.0, 1.0, cos(0.0), 1.0))))) || false)))))
                              {
                               switch(_GLF_SWITCH(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, ~ (~ (0))), 0, 1, 0), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, ~ (~ (0))), 0, 1, 0), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (true ? _GLF_IDENTITY(0, ~ (~ (0))) : _GLF_FUZZED(_injected_loop_counter)))) * 1), 0, 1, 0)) >> ivec4(0, 0, 0, 0))) * _GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) + ivec4(0, 0, 0, 0)))))))
                                {
                                 case 1:
                                 do
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     vec4(474.985, -1.7, -5.3, -6592.4664);
                                    }
                                   else
                                    {
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                 case 87:
                                 bvec3 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v;
                                 case 0:
                                 case 73:
                                 case 45:
                                 case 21:
                                 case 70:
                                 case 39:
                                 case 58:
                                 mat2x4 _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v;
                                 do
                                  {
                                   round(vec2(-4194.8372, 2107.2112));
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                 case 88:
                                 case 31:
                                 case 15:
                                 int _GLF_SWITCH_0_14v, _GLF_SWITCH_0_15v[51], _GLF_SWITCH_0_16v;
                                 break;
                                 default:
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   1;
                                  }
                                 else
                                  {
                                  }
                                }
                              }
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                       case 61:
                       if((mat3(4.4, -81.73, 8.6, _GLF_IDENTITY(0.5, max(_GLF_IDENTITY(0.5, max(0.5, 0.5)), 0.5)), 514.674, -31.02, _GLF_IDENTITY(-3.6, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))) + (-3.6)), _GLF_IDENTITY(886.207, (886.207) / 1.0), -3.0) == mat3(-939.719)))
                        {
                        }
                       break;
                       case 59:
                       _GLF_struct_25 _GLF_struct_replacement_25;
                       default:
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | (int(1)))))); _injected_loop_counter --)
                        {
                         1;
                        }
                      }
                    }
                  }
                }
               case 46:
               mat3x4 _GLF_SWITCH_0_17v;
               case 0:
               case 91:
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true), ! (! (false)))))
                  {
                  }
                 else
                  {
                   atomicStore(checker[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id.x, (_GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id.x) + 0u), (_GLF_IDENTITY(_GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(floatBitsToUint(vec4(-261.695, 8954.9288, 732.891, 5.6))) : _GLF_struct_replacement_14._f0.GLF_merged4_0_1_4_1_1_17_2_1_14_3_1_12readsubgroup_local_idworkgroup_baseworkgroup_id)).x) / 1u), 4, 64, 4);
                  }
                }
               else
                {
                }
               break;
               case 92:
               ivec2 _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v, _GLF_SWITCH_0_20v;
               default:
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0))))))))
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(ivec3(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                      {
                       1;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
     else
      {
      }
    }
  }
}
