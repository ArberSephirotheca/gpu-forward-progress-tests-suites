#version 460
struct _GLF_struct_1 {
 mat4x3 _f0;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
 ivec2 _f1;
 bvec4 _f2;
 vec4 _f3;
 mat4 _f4;
 mat2x4 _f5;
 float _f6;
 uint virtual_gid;
} ;

struct _GLF_struct_2 {
 uvec2 _f0;
 bvec2 _f1;
 _GLF_struct_0 _f2;
 _GLF_struct_1 _f3;
} ;

struct _GLF_struct_3 {
 mat3x4 _f0;
 mat3x2 _f1;
 _GLF_struct_2 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_13num_workgroupreadsubgroup_local_idsubgroup_size;
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_13num_workgroupreadsubgroup_local_idsubgroup_size.w = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_13num_workgroupreadsubgroup_local_idsubgroup_size.z = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_13num_workgroupreadsubgroup_local_idsubgroup_size.x = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(mat3x4(1.0), mat3x2(1.0), _GLF_struct_2(uvec2(1u), bvec2(true), _GLF_struct_0(bvec4(true), ivec2(1), bvec4(true), vec4(1.0), mat4(1.0), mat2x4(1.0), 1.0, workgroup_base + subgroup_id * GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_13num_workgroupreadsubgroup_local_idsubgroup_size.w + GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_13num_workgroupreadsubgroup_local_idsubgroup_size.z), _GLF_struct_1(mat4x3(1.0))));
 uint next_virtual_gid = workgroup_base + subgroup_id * GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_13num_workgroupreadsubgroup_local_idsubgroup_size.w + ((GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_13num_workgroupreadsubgroup_local_idsubgroup_size.z + 1) % GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_13num_workgroupreadsubgroup_local_idsubgroup_size.w);
 uint read = atomicLoad(buf[_GLF_struct_replacement_3._f2._f2.virtual_gid], 4, 64, 0);
 GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_13num_workgroupreadsubgroup_local_idsubgroup_size.y = read;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_13num_workgroupreadsubgroup_local_idsubgroup_size.z + 1 < GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_13num_workgroupreadsubgroup_local_idsubgroup_size.w)
  {
   int i = 0;
   atomicStore(checker[_GLF_struct_replacement_3._f2._f2.virtual_gid], GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_13num_workgroupreadsubgroup_local_idsubgroup_size.y, 4, 64, 4);
  }
 else
  {
   atomicStore(checker[_GLF_struct_replacement_3._f2._f2.virtual_gid], GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_13num_workgroupreadsubgroup_local_idsubgroup_size.y, 4, 64, 4);
  }
}
