#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(distance(vec4(-358.157, 4.2, 90.58, 0.0), vec4(-60.03, 8138.5232, -691.709, -5.6))) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.4)), float(injectionSwitch.y), bool(true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))) || false)))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) * 1)))), ivec3(0, 0, 0) + (ivec3(1, 0, (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(94628) : _GLF_IDENTITY(int(0), int(0))))))))))]), vec2(_GLF_FUZZED(70.51), _GLF_FUZZED(float(false))), bvec2(false, false))).y))), _GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && (false))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, false))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && (false))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, false))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(11.11)), bool(false)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uvec2 GLF_merged2_0_1_4_1_1_13readsubgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.326)), float(injectionSwitch.y), bool(true)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false)))), false || (bool(_GLF_IDENTITY(bvec3(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))))))))), _GLF_IDENTITY(bool(bool(false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false)))), false || (bool(_GLF_IDENTITY(bvec3(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))))))))))), false || (bool(bool(false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false)))), false || (bool(_GLF_IDENTITY(bvec3(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false)))))))))))))))))), (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (! (false)), _GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.5), _GLF_FUZZED(-3.8)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) - 0)]), bvec2(true, true))).x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false)))), false || (bool(_GLF_IDENTITY(bvec3(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false)))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(false, false), false)))))), bvec2(bvec4(bvec2(false, false), true, true))))), false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), true && (bool(bvec3(false, true, true)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(98.81), _GLF_FUZZED(-65.26)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(log2(vec2(7.9, 703.814)))))).y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_4_1_1_13readsubgroup_size.y = subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (! (false)) && true)))))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))) || false)), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false))) && true), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false)), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.0)), bvec2(true, false))), injectionSwitch)).y) || false)) || false))) && true), false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))), bool(bvec3(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), false, false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y = workgroup_size, ~ (~ (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y = workgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(86543u, 41261u, _GLF_IDENTITY(39672u, (_GLF_IDENTITY(39672u, 0u ^ (39672u))) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))) : ~ (gl_WorkGroupID)))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(86543u, 41261u, 39672u)) : ~ (gl_WorkGroupID)))))), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])), gl_WorkGroupID))) - uvec3(0u, 0u, 0u))), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(86543u, 41261u, 39672u)), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(34403u, 41611u, _GLF_IDENTITY(77638u, ~ (_GLF_IDENTITY(~ (77638u), (true ? _GLF_IDENTITY(~ (77638u), (~ (77638u)) << _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u))) : _GLF_FUZZED(num_workgroup))))))), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) | _GLF_IDENTITY((_GLF_FUZZED(uvec3(34403u, 41611u, 77638u))), max(_GLF_IDENTITY((_GLF_FUZZED(uvec3(34403u, 41611u, 77638u))), ~ (~ ((_GLF_FUZZED(uvec3(34403u, 41611u, 77638u)))))), (_GLF_FUZZED(uvec3(34403u, 41611u, 77638u)))))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(86543u, 41261u, 39672u)), ~ (~ (_GLF_FUZZED(uvec3(86543u, 41261u, 39672u))))))) : ~ _GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) + uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY((gl_WorkGroupID), max(_GLF_IDENTITY((gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(125418u, 72219u, 97506u)) : (gl_WorkGroupID))), (gl_WorkGroupID)))))))))))))), uvec3(1u, 1u, 1u) * (~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((num_workgroup - uvec3(173017u, 146949u, 45473u))) : ~ (gl_WorkGroupID))), (false ? _GLF_FUZZED(uvec3(86543u, 41261u, _GLF_IDENTITY(39672u, (39672u) | (39672u)))) : ~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)))))))), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])), gl_WorkGroupID))) - uvec3(0u, 0u, 0u))), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(86543u, 41261u, 39672u)), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(_GLF_IDENTITY(34403u, 0u + (34403u)), 41611u, _GLF_IDENTITY(77638u, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (77638u), (~ (77638u)) << (0u | 0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(~ (77638u), clamp(~ (77638u), _GLF_IDENTITY(~ (77638u), (false ? _GLF_FUZZED(48459u) : ~ (77638u))), _GLF_IDENTITY(~ (77638u), uint(uvec3(~ (77638u), 0u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))), (~ (77638u)) << 0u) : _GLF_FUZZED(num_workgroup)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (77638u), (~ (77638u)) << (0u | 0u)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(~ (77638u), clamp(~ (77638u), _GLF_IDENTITY(~ (77638u), (false ? _GLF_FUZZED(48459u) : ~ (77638u))), _GLF_IDENTITY(~ (77638u), uint(uvec3(~ (77638u), 0u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))), (~ (77638u)) << 0u) : _GLF_FUZZED(num_workgroup), min(true ? _GLF_IDENTITY(_GLF_IDENTITY(~ (77638u), clamp(~ (77638u), _GLF_IDENTITY(~ (77638u), (false ? _GLF_FUZZED(48459u) : ~ (77638u))), _GLF_IDENTITY(~ (77638u), uint(uvec3(~ (77638u), 0u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))), (~ (77638u)) << 0u) : _GLF_FUZZED(num_workgroup), true ? _GLF_IDENTITY(_GLF_IDENTITY(~ (77638u), clamp(~ (77638u), _GLF_IDENTITY(~ (77638u), (false ? _GLF_FUZZED(48459u) : ~ (77638u))), _GLF_IDENTITY(~ (77638u), uint(uvec3(~ (77638u), 0u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))), (~ (77638u)) << 0u) : _GLF_FUZZED(num_workgroup))))))) / 1u)))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u), uvec3(_GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), 1.0)), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))) | (_GLF_FUZZED(uvec3(34403u, 41611u, _GLF_IDENTITY(77638u, (77638u) | (_GLF_IDENTITY(77638u, 0u ^ (77638u)))))))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(86543u, 41261u, 39672u)), ~ _GLF_IDENTITY((~ (_GLF_FUZZED(uvec3(86543u, 41261u, 39672u)))), (_GLF_IDENTITY((~ (_GLF_FUZZED(uvec3(_GLF_IDENTITY(86543u, max(86543u, 86543u)), 41261u, 39672u)))), ((~ (_GLF_FUZZED(uvec3(86543u, _GLF_IDENTITY(41261u, 0u ^ (41261u)), 39672u))))) << uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u))), uvec3(0u, 0u, 0u) ^ (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(_GLF_IDENTITY(34403u, 0u + (34403u)), 41611u, _GLF_IDENTITY(77638u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (77638u), (~ (77638u)) << (0u | 0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(~ (77638u), clamp(~ (77638u), _GLF_IDENTITY(~ (77638u), (false ? _GLF_FUZZED(48459u) : ~ (77638u))), _GLF_IDENTITY(~ (77638u), uint(uvec3(~ (77638u), 0u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))), (~ (77638u)) << 0u) : _GLF_FUZZED(num_workgroup))))))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u), uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))) | (_GLF_FUZZED(uvec3(34403u, 41611u, _GLF_IDENTITY(77638u, (77638u) | (_GLF_IDENTITY(77638u, 0u ^ (77638u)))))))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(86543u, 41261u, 39672u)), ~ _GLF_IDENTITY((~ (_GLF_FUZZED(uvec3(86543u, 41261u, 39672u)))), (_GLF_IDENTITY((~ (_GLF_FUZZED(uvec3(_GLF_IDENTITY(86543u, max(86543u, 86543u)), 41261u, 39672u)))), ((~ (_GLF_FUZZED(uvec3(86543u, _GLF_IDENTITY(41261u, 0u ^ (41261u)), 39672u))))) << uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u))))))) : _GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) + uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY((gl_WorkGroupID), max(_GLF_IDENTITY((gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(125418u, 72219u, 97506u)) : (gl_WorkGroupID))), (gl_WorkGroupID))))), (~ _GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) + uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY((gl_WorkGroupID), max(_GLF_IDENTITY((gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(125418u, (125418u) + 0u), 72219u, 97506u)) : (gl_WorkGroupID))), (gl_WorkGroupID)))))) ^ uvec3(0u, 0u, 0u)))))))))))))) | (gl_WorkGroupID)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).y, abs(1.0), 0.0)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size, uvec2(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[0], (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[0]) + 0u), GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[1])).y * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) - (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), uint(uvec3(_GLF_IDENTITY(uint(3u), uint(3u)), 1u, 1u))), _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))) ^ (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), (_GLF_IDENTITY(workgroup_id, (workgroup_id) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))) ^ 0u)), 0u ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), (_GLF_IDENTITY(workgroup_id, (workgroup_id) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))) ^ 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size, uvec2(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[0], (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[0]) + 0u), GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) / 1), 1))])).y * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), (_GLF_IDENTITY((workgroup_id) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ((workgroup_id) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) | ((workgroup_id) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))) ^ 0u)), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size, uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[0], (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[0]) + 0u), min(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[0], (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[0]) + 0u), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[0], (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[0]) + 0u))), GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[1])).y * _GLF_IDENTITY(workgroup_id, (workgroup_id) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size, uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[0], (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[0]) + 0u), min(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[0], (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[0]) + 0u), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[0], (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[0]) + 0u))), GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[1])).y * _GLF_IDENTITY(workgroup_id, (workgroup_id) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), ((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size, uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[0], (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[0]) + 0u), min(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[0], (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[0]) + 0u), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[0], (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[0]) + 0u))), GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[1])).y * _GLF_IDENTITY(workgroup_id, (workgroup_id) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))) << 0u)) ^ 0u) | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size, uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size, (true ? GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size : _GLF_FUZZED((subgroup_id * uvec2(100545u, 151154u)))))[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(92357) : 0))], (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size, min(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size, GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size))[0]) + 0u), GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[1])).y * _GLF_IDENTITY(workgroup_id, (workgroup_id) - (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(atomicMax(subgroup_id, subgroup_size)))) >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) ^ 0u)))))))) + 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))))) ? _GLF_FUZZED(workgroup_base) : subgroup_id)) * GLF_merged2_0_1_4_1_1_13readsubgroup_size.y, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(workgroup_base) : subgroup_id)) * GLF_merged2_0_1_4_1_1_13readsubgroup_size.y, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(workgroup_base) : subgroup_id)) * GLF_merged2_0_1_4_1_1_13readsubgroup_size.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)) | 0u), clamp(workgroup_base, workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false)))), (injectionSwitch.x < injectionSwitch.y)))), false || ((_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false)))), (injectionSwitch.x < injectionSwitch.y))))))) ? _GLF_FUZZED(workgroup_base) : subgroup_id)) * GLF_merged2_0_1_4_1_1_13readsubgroup_size.y, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_id, 0u, 0u, 0u))))))) * GLF_merged2_0_1_4_1_1_13readsubgroup_size.y), ((_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_id, 0u, 0u, 0u))))))) * GLF_merged2_0_1_4_1_1_13readsubgroup_size.y)) ^ 0u) | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(workgroup_base) : subgroup_id)) * GLF_merged2_0_1_4_1_1_13readsubgroup_size.y)))), min(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(workgroup_base) : subgroup_id)) * GLF_merged2_0_1_4_1_1_13readsubgroup_size.y, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(workgroup_base) : subgroup_id)) * GLF_merged2_0_1_4_1_1_13readsubgroup_size.y)) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-8.5, 2.9)) : injectionSwitch))))[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * GLF_merged2_0_1_4_1_1_13readsubgroup_size.y + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % GLF_merged2_0_1_4_1_1_13readsubgroup_size.y, clamp((subgroup_local_id + 1) % GLF_merged2_0_1_4_1_1_13readsubgroup_size.y, _GLF_IDENTITY((subgroup_local_id + 1) % GLF_merged2_0_1_4_1_1_13readsubgroup_size.y, (false ? _GLF_FUZZED(virtual_gid) : (subgroup_local_id + 1) % GLF_merged2_0_1_4_1_1_13readsubgroup_size.y)), (subgroup_local_id + 1) % GLF_merged2_0_1_4_1_1_13readsubgroup_size.y)), 0u + (_GLF_IDENTITY((subgroup_local_id + 1) % GLF_merged2_0_1_4_1_1_13readsubgroup_size.y, uint(uint((subgroup_local_id + 1) % GLF_merged2_0_1_4_1_1_13readsubgroup_size.y))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size, clamp(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size, _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size, uvec2(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[0], 0u + (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[0])), GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[1])), GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size)).x], 4, _GLF_IDENTITY(64, (64) << 0), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_4_1_1_13readsubgroup_size.x = read;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec3(bvec2(bool(false), true), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec3(bvec2(bool(false), true), true))))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, true, false))))))))), bool(bool(_GLF_DEAD(false))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true, false))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))))) && true))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))) || false)) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(abs(442.528)))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(abs(_GLF_IDENTITY(442.528, (false ? _GLF_FUZZED(0.9) : 442.528))))))) / 1.0) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_DEAD(false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_13readsubgroup_size, (GLF_merged2_0_1_4_1_1_13readsubgroup_size) | (GLF_merged2_0_1_4_1_1_13readsubgroup_size)).y, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_13readsubgroup_size, (GLF_merged2_0_1_4_1_1_13readsubgroup_size) | (GLF_merged2_0_1_4_1_1_13readsubgroup_size)).y), ((_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_13readsubgroup_size, (GLF_merged2_0_1_4_1_1_13readsubgroup_size) | (GLF_merged2_0_1_4_1_1_13readsubgroup_size)).y)) ^ (0u ^ 0u)), uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_13readsubgroup_size, (GLF_merged2_0_1_4_1_1_13readsubgroup_size) | (GLF_merged2_0_1_4_1_1_13readsubgroup_size)).y), ((_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_13readsubgroup_size, (GLF_merged2_0_1_4_1_1_13readsubgroup_size) | (GLF_merged2_0_1_4_1_1_13readsubgroup_size)).y)) ^ (0u ^ 0u)), 0u, 1u))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false)))), true && (_GLF_DEAD(false)))) || false), _GLF_IDENTITY(false, true && (false)), false)))) && true)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), true && (_GLF_DEAD(false)))) && true)))), _GLF_IDENTITY(bool(bool(! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), true && (_GLF_DEAD(false)))) && true)))))), bool(bvec4(bool(bool(! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) && true))))) && true)))))), false, false, true)))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true, true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true, bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true, true))))))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_DEAD(false)))) && true, true && ((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true)))), false || (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true, true && ((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))))))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))) && true))))))) && true)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)), ! _GLF_IDENTITY((! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)))), ((! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false))))) && true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, _GLF_IDENTITY(cos(0.0), mix(float(_GLF_IDENTITY(cos(0.0), min(_GLF_IDENTITY(cos(0.0), float(mat3x2(cos(0.0), 1.0, round(length(normalize(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.3) : 1.0)), 1.0)))), 1.0, 0.0, 1.0))), _GLF_IDENTITY(cos(0.0), 1.0 * (_GLF_IDENTITY(cos(0.0), 0.0 + (cos(0.0)))))))), float(_GLF_IDENTITY(_GLF_FUZZED(3.5), mix(float(_GLF_FUZZED(float(142365u))), float(_GLF_FUZZED(3.5)), bool(_GLF_IDENTITY(true, (true) && true))))), bool(false))), tan(0.0), 0.0, tan(0.0), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(1.0, 0.0, cos(0.0), 1.0)), 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)))), vec2(0.0, 0.0) + (vec2(mat4(injectionSwitch, _GLF_IDENTITY(cos(0.0), mix(float(_GLF_IDENTITY(cos(0.0), min(_GLF_IDENTITY(cos(0.0), float(mat3x2(cos(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0))), _GLF_IDENTITY(cos(0.0), 1.0 * (_GLF_IDENTITY(cos(0.0), 0.0 + (cos(0.0)))))))), float(_GLF_IDENTITY(_GLF_FUZZED(3.5), mix(float(_GLF_FUZZED(float(142365u))), float(_GLF_FUZZED(3.5)), bool(_GLF_IDENTITY(true, (true) && true))))), bool(false))), tan(0.0), 0.0, tan(0.0), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(1.0, 0.0, cos(0.0), 1.0)), 1.0, 0.0, 1.0, length(vec2(0.0, 0.0))))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(checker[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x], _GLF_IDENTITY(GLF_merged2_0_1_4_1_1_13readsubgroup_size, (true ? GLF_merged2_0_1_4_1_1_13readsubgroup_size : _GLF_FUZZED(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size))).x, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(false, (false) && true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY((dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), clamp((dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY((dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((- -3.1))))))), mix(float(_GLF_FUZZED(3735.0937)), float((dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.3))), 0.0)), _GLF_IDENTITY(0.0, (0.0) - 0.0))), length(0.0), 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0))))), 1.0), vec2(vec4(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.3))), 0.0)), _GLF_IDENTITY(0.0, (0.0) - 0.0))), length(0.0), 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0))))), 1.0), round(length(normalize(vec2(1.0, 1.0)))), 0.0))), vec2(0.0, 1.0)))), bool(true))), (dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(vec2(vec2(0.0, 1.0)))))))), (_GLF_IDENTITY((dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(282.900)), float(0.0), bool(true))), 0.0)), 1.0), max(_GLF_IDENTITY(vec2(0.0, 1.0), min(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) - vec2(0.0, 0.0)), vec2(0.0, 1.0))), _GLF_IDENTITY(vec2(0.0, 1.0), _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-3.1, 83.68)) : vec2(0.0, 1.0)), ((false ? _GLF_FUZZED(vec2(-3.1, 83.68)) : vec2(0.0, 1.0))) * vec2(1.0, 1.0))))), vec2(_GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 1.0, 0.0))), 1.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), float(_GLF_IDENTITY(mat3((dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, 0.0), mat3(mat3x4(mat3((dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, 0.0)))))), mix(float(_GLF_FUZZED(70.22)), float((dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), bool(true))), _GLF_IDENTITY((dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), mix(float(_GLF_FUZZED(3735.0937)), float((dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), mix(vec4(_GLF_FUZZED(394.989), (vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, 0.0, 0.0, 1.0, sqrt(1.0), tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), 1.0 * (float(mat3(0.0, 0.0, 0.0, 1.0, sqrt(1.0), tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))), 0.0, 1.0, 1.0))[1], _GLF_FUZZED(float(_GLF_IDENTITY(7800, int(ivec3(_GLF_IDENTITY(7800, max(7800, 7800)), 1, (0 | 1)))))), _GLF_FUZZED(2.1)), vec4((vec4(0.0, 0.0, 1.0, 1.0))[0], _GLF_FUZZED(3.6), (vec4(0.0, 0.0, 1.0, 1.0))[2], (vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))), 1.0, 1.0))))[3]), bvec4(true, false, true, true))))), 1.0)))), bool(true))), (dot(vec2(0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-4.1))), 1.0, 1.0))), vec2(0.0, 1.0)))))) - 0.0), (dot(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y)) ? _GLF_FUZZED((vec2(6.9, 4.4) + -0.5).r) : 1.0)), mix(float(_GLF_FUZZED(-3231.9953)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? _GLF_FUZZED((vec2(6.9, 4.4) + -0.5).r) : 1.0)), max(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((vec2(6.9, 4.4) + -0.5).r) : 1.0)), _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((vec2(6.9, 4.4) + -0.5).r) : 1.0))))), bool(true)))), vec2(0.0, 1.0))), (dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec2(5783.1999, 579.951).s)), float(1.0), bool(true))), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.5) : _GLF_IDENTITY(1.0, (1.0) / 1.0))), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.5) : _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.5) : _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, 0.0), mat3(1.0) * (vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.5) : _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, 0.0))), max(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.5) : _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, 0.0), mat3(1.0) * (vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.5) : _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, 0.0))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.5) : _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, 0.0), mat3(1.0) * (vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.5) : _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, 0.0)))))) - vec3(0.0, 0.0, 0.0)))), 0.0), max(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.5) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) / 1.0)), (1.0) / 1.0))), 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.5) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(_GLF_IDENTITY(-2139.4680, max(-2139.4680, -2139.4680)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), clamp(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.5) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2139.4680)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.5) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2139.4680)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), max(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-9.5), float(mat3x4(_GLF_FUZZED(-9.5), tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2139.4680)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-520.544)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4.0)), bool(false))), injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y)))))), vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.5) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0))), _GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(-2139.4680)), mix(float(float(_GLF_FUZZED(-2139.4680))), float(_GLF_FUZZED(2376.4123)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.5) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2139.4680)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / abs(1.0)), 1.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED(-61.51)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.6)))))))))), 1.0))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), min(float(vec2(injectionSwitch.y, 0.0)), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0)), (true ? _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), (float(vec2(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(47.98))), 0.0))) + 0.0) : _GLF_FUZZED(-9.1))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), bool(bool(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))))) || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))) || false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-23.37, (false ? _GLF_FUZZED(-6.0) : -23.37)), (_GLF_IDENTITY(-23.37, (false ? _GLF_FUZZED(_GLF_IDENTITY(-6.0, clamp(-6.0, _GLF_IDENTITY(-6.0, (-6.0) / 1.0), -6.0))) : -23.37))) - 0.0)), _GLF_FUZZED(-852.578)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-23.37, (false ? _GLF_FUZZED(-6.0) : -23.37))), _GLF_FUZZED(-852.578)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), (false ? _GLF_FUZZED(i) : int(int(1)))))]), bvec2(true, true))).y)))) && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((_GLF_IDENTITY(injectionSwitch + mix(vec2(6.9, 2.2), vec2(9550.7370, -2406.7762), -35.99), tan(vec2(0.0, 0.0)) + (injectionSwitch + mix(vec2(6.9, 2.2), vec2(9550.7370, -2406.7762), -35.99))))) : injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), mix(float(_GLF_FUZZED(-481.751)), float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), bool(true))))))), injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(0.5) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(0.5) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(0.5) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(0.5) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(0.5) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))))), 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, 1.0), (mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(0.5) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(0.5) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(0.5) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(0.5) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))))), 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, 1.0)) * mat4(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))) + 0.0), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_IDENTITY(true, true && (true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (true) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), true)), bool(bool(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true))))))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true))))))), true, true, true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true))))))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true))))))), true, true, true)))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true))))))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true))))))), true, true, true))))))) && true))))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, sqrt(1.0), abs(1.0))), mix(vec2(_GLF_FUZZED(-32.79), _GLF_FUZZED(-265.733)), vec2((_GLF_IDENTITY(vec2(mat2x4(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, sqrt(1.0), abs(1.0))), max(vec2(mat2x4(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, sqrt(1.0), abs(1.0))), _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, sqrt(1.0), abs(1.0))), clamp(vec2(mat2x4(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, sqrt(1.0), abs(1.0))), vec2(mat2x4(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, sqrt(1.0), abs(1.0))), vec2(mat2x4(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, sqrt(1.0), abs(1.0))))))))[0], (vec2(mat2x4(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, sqrt(1.0), abs(1.0))))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (_GLF_IDENTITY(! ((false)), ! (! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), (_GLF_IDENTITY(! (! ((false))), ! (! (_GLF_IDENTITY(! (! ((false))), false || (! _GLF_IDENTITY((! ((false))), true && ((! ((false))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))), (bool(bool(_GLF_IDENTITY(false, ! (! (false)))))) && true)), _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.3), _GLF_FUZZED(-6.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   atomicStore(checker[_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size, (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size) >> uvec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-66.79), (true ? _GLF_IDENTITY(_GLF_FUZZED(-66.79), clamp(_GLF_FUZZED(-66.79), _GLF_FUZZED(-66.79), _GLF_FUZZED(-66.79))) : _GLF_FUZZED(uintBitsToFloat(workgroup_base)))) : 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x : _GLF_FUZZED(_GLF_IDENTITY(28.40, mix(float(28.40), float(_GLF_FUZZED(7566.6018)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))).x], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_13readsubgroup_size, uvec2(uvec2(GLF_merged2_0_1_4_1_1_13readsubgroup_size))), (false ? _GLF_FUZZED(uvec2(40784u, _GLF_IDENTITY(144865u, (144865u) << 0u))) : _GLF_IDENTITY(GLF_merged2_0_1_4_1_1_13readsubgroup_size, _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec4(GLF_merged2_0_1_4_1_1_13readsubgroup_size, 1u, _GLF_IDENTITY(0u, 0u ^ (0u))), uvec4(0u, 0u, 0u, 0u) + (uvec4(GLF_merged2_0_1_4_1_1_13readsubgroup_size, 1u, 0u)))), (uvec2(_GLF_IDENTITY(uvec4(GLF_merged2_0_1_4_1_1_13readsubgroup_size, 1u, _GLF_IDENTITY(0u, 0u ^ (0u))), uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY(uvec4(GLF_merged2_0_1_4_1_1_13readsubgroup_size, 1u, 0u), (uvec4(0u, 0u, 0u, 0u) & uvec4(20733u, 58146u, 126898u, 164834u)) | (uvec4(GLF_merged2_0_1_4_1_1_13readsubgroup_size, 1u, 0u))))))) * uvec2(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) / 1u)) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | 0u)) * 1u), ~ (~ ((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) / 1u, ((_GLF_IDENTITY(1u, (1u) * 1u)) / 1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(1617.6678)), bool(false))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_13readsubgroup_size, uvec2(uvec2(GLF_merged2_0_1_4_1_1_13readsubgroup_size))), (false ? _GLF_FUZZED(uvec2(40784u, 144865u)) : _GLF_IDENTITY(GLF_merged2_0_1_4_1_1_13readsubgroup_size, _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec4(GLF_merged2_0_1_4_1_1_13readsubgroup_size, 1u, _GLF_IDENTITY(0u, 0u ^ (0u))), uvec4(0u, 0u, 0u, 0u) + (uvec4(GLF_merged2_0_1_4_1_1_13readsubgroup_size, 1u, 0u)))), (uvec2(_GLF_IDENTITY(uvec4(GLF_merged2_0_1_4_1_1_13readsubgroup_size, 1u, _GLF_IDENTITY(0u, 0u ^ (0u))), uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)) + (uvec4(GLF_merged2_0_1_4_1_1_13readsubgroup_size, 1u, 0u))))) * uvec2(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) / 1u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ ((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) / 1u, ((1u) / 1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(1617.6678)), _GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) && true))))))))))), min(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) / 1u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ ((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) / 1u, ((1u) / 1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(1617.6678)), _GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) && true))))))))))), _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) / 1u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ ((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) / 1u, ((1u) / 1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(1617.6678)), _GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) && true))))))))))))))))))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_13readsubgroup_size, uvec2(GLF_merged2_0_1_4_1_1_13readsubgroup_size[0], GLF_merged2_0_1_4_1_1_13readsubgroup_size[1])), uvec2(uvec2(GLF_merged2_0_1_4_1_1_13readsubgroup_size))), (false ? _GLF_FUZZED(uvec2(40784u, 144865u)) : _GLF_IDENTITY(GLF_merged2_0_1_4_1_1_13readsubgroup_size, _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec4(GLF_merged2_0_1_4_1_1_13readsubgroup_size, 1u, _GLF_IDENTITY(0u, 0u ^ (0u))), uvec4(0u, 0u, 0u, 0u) + (uvec4(GLF_merged2_0_1_4_1_1_13readsubgroup_size, 1u, 0u)))), (uvec2(_GLF_IDENTITY(uvec4(GLF_merged2_0_1_4_1_1_13readsubgroup_size, 1u, _GLF_IDENTITY(0u, 0u ^ (0u))), uvec4(0u, 0u, 0u, 0u) + (uvec4(GLF_merged2_0_1_4_1_1_13readsubgroup_size, 1u, 0u))))) * uvec2(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) / 1u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ ((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) / 1u, ((1u) / 1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 1.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)))) * sqrt(1.0)), injectionSwitch.x), mix(float(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)), float(_GLF_FUZZED(1617.6678)), bool(false)))))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_13readsubgroup_size, uvec2(uvec2(GLF_merged2_0_1_4_1_1_13readsubgroup_size))), (false ? _GLF_FUZZED(uvec2(40784u, 144865u)) : _GLF_IDENTITY(GLF_merged2_0_1_4_1_1_13readsubgroup_size, _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec4(GLF_merged2_0_1_4_1_1_13readsubgroup_size, 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), ~ (~ (0u ^ (0u)))))), uvec4(0u, 0u, 0u, 0u) + (uvec4(GLF_merged2_0_1_4_1_1_13readsubgroup_size, 1u, 0u)))), (uvec2(_GLF_IDENTITY(uvec4(GLF_merged2_0_1_4_1_1_13readsubgroup_size, 1u, _GLF_IDENTITY(0u, 0u ^ (0u))), uvec4(0u, 0u, 0u, 0u) + (uvec4(GLF_merged2_0_1_4_1_1_13readsubgroup_size, 1u, 0u))))) * uvec2(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) / 1u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ ((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) / 1u, ((1u) / 1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)), float(_GLF_FUZZED(1617.6678)), bool(false)))))))))))))), (false ? _GLF_FUZZED(GLF_merged2_0_1_4_1_1_13readsubgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_13readsubgroup_size, uvec2(uvec2(GLF_merged2_0_1_4_1_1_13readsubgroup_size))), (false ? _GLF_FUZZED(uvec2(40784u, 144865u)) : _GLF_IDENTITY(GLF_merged2_0_1_4_1_1_13readsubgroup_size, _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec4(GLF_merged2_0_1_4_1_1_13readsubgroup_size, 1u, _GLF_IDENTITY(0u, 0u ^ (0u))), uvec4(0u, 0u, 0u, 0u) + (uvec4(GLF_merged2_0_1_4_1_1_13readsubgroup_size, 1u, 0u)))), (uvec2(_GLF_IDENTITY(uvec4(GLF_merged2_0_1_4_1_1_13readsubgroup_size, 1u, _GLF_IDENTITY(0u, 0u ^ (0u))), uvec4(0u, 0u, 0u, 0u) + (uvec4(GLF_merged2_0_1_4_1_1_13readsubgroup_size, 1u, 0u))))) * uvec2(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) / 1u)) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.1)), float(0.0), bool(true))), injectionSwitch.x)), ~ (~ ((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) / 1u, _GLF_IDENTITY(((1u) / 1u), uint(uvec3(((1u) / 1u), 1u, 0u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)), float(_GLF_FUZZED(1617.6678)), bool(_GLF_IDENTITY(false, (false) || false))))))))))))))), uvec2(0u, 0u) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_13readsubgroup_size, uvec2(uvec2(GLF_merged2_0_1_4_1_1_13readsubgroup_size))), (false ? _GLF_FUZZED(uvec2(40784u, 144865u)) : _GLF_IDENTITY(GLF_merged2_0_1_4_1_1_13readsubgroup_size, _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec4(GLF_merged2_0_1_4_1_1_13readsubgroup_size, 1u, _GLF_IDENTITY(0u, 0u ^ (0u))), uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base)))) + (uvec4(GLF_merged2_0_1_4_1_1_13readsubgroup_size, 1u, 0u)))), (uvec2(_GLF_IDENTITY(uvec4(GLF_merged2_0_1_4_1_1_13readsubgroup_size, 1u, _GLF_IDENTITY(0u, 0u ^ (0u))), uvec4(0u, 0u, 0u, 0u) + (uvec4(GLF_merged2_0_1_4_1_1_13readsubgroup_size, 1u, 0u))))) * uvec2(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) / 1u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ ((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) / 1u, ((1u) / 1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x), mix(float(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)), float(_GLF_FUZZED(1617.6678)), bool(false))))))))))))))))))) ^ uvec2(0u, 0u))).x, 4, 64, _GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), 0 + ((~ (4))))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), true, false)))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
  barrier();
}
