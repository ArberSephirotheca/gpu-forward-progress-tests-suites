#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)), workgroup_size, workgroup_size)) * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) - 0u);
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 1u, 1u))), subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       else
        {
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u | _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), _GLF_IDENTITY(max((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size)), uint(_GLF_IDENTITY(uint(max((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))), clamp(uint(max((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))), uint(max((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))), uint(max((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))))))))) + ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), clamp(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))) | 0u))) + 1) % subgroup_size), ~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED((subgroup_local_id - subgroup_size)) : subgroup_id)) * subgroup_size, 0u | _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), _GLF_IDENTITY(max((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size)), uint(_GLF_IDENTITY(uint(max((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))), clamp(uint(max((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))), uint(max((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))), uint(max((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))))))))) + ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), clamp(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))) | 0u, clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), clamp(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))) | 0u, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), clamp(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))) | 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), clamp(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))) | 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), clamp(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))) | 0u) | 0u)))))) + 1) % subgroup_size))));
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) >> 0), 64, 0);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), (_GLF_IDENTITY(0, (0) / 1)) << 0), 0, 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (1) / 1)), 4, 64, 4);
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, true && (false)))), true && (bool(bvec2(false, false))))) || false)), (false) || false)))
          continue;
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
 else
  {
  }
 do
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), ! (! _GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y))), (_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) : _GLF_FUZZED(float(bvec3(true, false, false).y)))) < injectionSwitch.y))), false || ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)))))) && true))))))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), ! (! _GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y))), (_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) : _GLF_FUZZED(float(bvec3(true, false, false).y)))) < injectionSwitch.y))), false || ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)))))) && true))))))), (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), ! (! _GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y))), (_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) : _GLF_FUZZED(float(bvec3(true, false, false).y)))) < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) : _GLF_FUZZED(float(bvec3(true, false, false).y)))) < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) : _GLF_FUZZED(float(bvec3(true, false, false).y)))) < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(false, false || (false)) || ((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y))), (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)))) || false)))))))))) && true)))))))) || false)) && true))
      {
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), 0 ^ (0)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) != 1); _injected_loop_counter ++)
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))), bool(bvec2(_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))), true)))))))))))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))), bool(bvec2(_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))), true)))))))))))))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))), bool(bvec2(_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))), true)))))))))))))), false, true), false))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (bool((injectionSwitch.x > injectionSwitch.y))))), ! _GLF_IDENTITY((! (! (bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bool((! (! (bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))), false || (bool(bool((! (! (bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))))))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool((injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool((injectionSwitch.x > injectionSwitch.y)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool((injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(! (bool((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8096.8389) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), true && (_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))))))) && true))))))))), ! (! (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.9)), bool(false))), injectionSwitch.x)) > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2((bool((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2((bool((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))), false)), bvec2(bvec2(bvec2(bvec2((bool((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))), false))))))))), true && (_GLF_IDENTITY(! (bool((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (bool((injectionSwitch.x > injectionSwitch.y)))), (! (! (bool((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))) && true))))))))))), false))))), true && (! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (bool((injectionSwitch.x > injectionSwitch.y))))), ! _GLF_IDENTITY((! (! (bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bool((! (! (bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))), false || (bool(bool((! (! (bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))))))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(84.07) : _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))), true && _GLF_IDENTITY((_GLF_IDENTITY(! (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-93.47) : injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))), ! (! (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))), bool(bvec3((_GLF_IDENTITY(! (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-93.47) : injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))), ! (! (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))), true, true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool((injectionSwitch.x > injectionSwitch.y))))))) || false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((bool((injectionSwitch.x > injectionSwitch.y))), ! (! ((bool((injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool((injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(! (bool((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8096.8389) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), true && (_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))))))) && true))))))))), ! (! (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.9)), bool(false))), injectionSwitch.x)) > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((bool((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2((bool((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))), false)), bvec2(bvec2(bvec2(bvec2((bool((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))), false))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2((bool((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2((bool((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))), false)), bvec2(bvec2(bvec2(bvec2((bool((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))), false))))))), false, true)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((bool((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2((bool((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))), false)), bvec2(bvec2(bvec2(bvec2((bool((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))), false))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2((bool((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2((bool((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))), false)), bvec2(bvec2(bvec2(bvec2((bool((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))), false))))))), false, true)))))))), true && (_GLF_IDENTITY(! (bool((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (bool((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((! (! (bool((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))) && true, bool(_GLF_IDENTITY(bvec3((! (! (bool((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3((! (! (bool((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))), false))))))))))))
                return;
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))
                {
                 do
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED((-6189.4109)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4.3) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0))))), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(vec2(62.88, -617.664).t), clamp(_GLF_IDENTITY(_GLF_FUZZED(vec2(62.88, -617.664).t), (false ? _GLF_FUZZED(7.6) : _GLF_IDENTITY(_GLF_FUZZED(vec2(62.88, -617.664).t), float(mat2x4(_GLF_FUZZED(vec2(62.88, -617.664).t), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), _GLF_FUZZED(vec2(62.88, -617.664).t), _GLF_IDENTITY(_GLF_FUZZED(vec2(62.88, -617.664).t), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(1196.7078) : _GLF_FUZZED(vec2(62.88, -617.664).t)))))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y, (injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0))))), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(min((injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0)))), (injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0))))), max(min((injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0)))), (injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0))))), min((injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0)))), (injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0))))))))), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0)))))), min(max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0)))))), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0))))))))))))))), (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4.3) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-47.65)), bool(false))), 0.0, sin(0.0), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), clamp(float(mat4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((8.3 * -2.3))), bool(false))))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (false ? _GLF_FUZZED(-8116.7692) : max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(-259.731))), _GLF_FUZZED(-38.76)), vec2(_GLF_FUZZED(2635.7055), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(82.23)), float(0.0), bool(true))), 0.0)), sin(0.0), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) + 0.0)), 1.0, 0.0)), max(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (false ? _GLF_FUZZED(-8116.7692) : max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(-259.731))), _GLF_FUZZED(-38.76)), vec2(_GLF_FUZZED(2635.7055), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(82.23)), float(0.0), bool(true))), 0.0)), sin(0.0), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) + 0.0)), 1.0, 0.0)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (false ? _GLF_FUZZED(-8116.7692) : max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(-259.731))), _GLF_FUZZED(-38.76)), vec2(_GLF_FUZZED(2635.7055), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(82.23)), float(0.0), bool(true))), 0.0)), sin(0.0), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) + 0.0)), 1.0, 0.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), (true ? mat4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0) : _GLF_FUZZED(mat4(mat2(-94.61, -60.38, 175.185, -4.1)))))), float(mat2x3(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, abs(0.0), 0.0), transpose(transpose(mat2(injectionSwitch.y, 1.0, abs(0.0), 0.0)))))), injectionSwitch.y)), 0.0, 1.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, abs(0.0), 0.0), transpose(transpose(mat2(injectionSwitch.y, 1.0, abs(0.0), 0.0)))))), injectionSwitch.y)), 0.0, 1.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))), max(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, abs(0.0), 0.0), transpose(transpose(mat2(injectionSwitch.y, 1.0, abs(0.0), 0.0)))))), injectionSwitch.y)), 0.0, 1.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, abs(0.0), 0.0), transpose(transpose(mat2(injectionSwitch.y, 1.0, abs(0.0), 0.0)))))), injectionSwitch.y)), 0.0, 1.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, abs(0.0), 0.0), transpose(transpose(mat2(injectionSwitch.y, 1.0, abs(0.0), 0.0)))))), injectionSwitch.y)), 0.0, 1.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, abs(0.0), 0.0), transpose(transpose(mat2(injectionSwitch.y, 1.0, abs(0.0), 0.0)))))), injectionSwitch.y)), 0.0, 1.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))))), 1.0, 0.0, 0.0, 0.0, 1.0)))))), (injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0))))), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.3)), vec2(_GLF_FUZZED(88.46), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).y, (injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0))))), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0))))), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), mix(float(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), max(length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0)))))), float(_GLF_FUZZED(9215.1116)), bool(false))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, sqrt(1.0))), min(float(mat4x3(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, sqrt(1.0))), float(mat4x3(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, sqrt(1.0)))))), 1.0))), vec2(mat4x2(vec2(1.0, 1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 1.0)))) / vec2(1.0, 1.0))))))))))), min(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0))))), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), mix(float(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), max(length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0)))))), float(_GLF_FUZZED(9215.1116)), bool(false))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, sqrt(1.0))), min(float(mat4x3(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, sqrt(1.0))), float(mat4x3(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, sqrt(1.0)))))), 1.0))), vec2(mat4x2(vec2(1.0, 1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 1.0)))) / vec2(1.0, 1.0))))))))))), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0))))), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), mix(float(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), max(length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0)))))), float(_GLF_FUZZED(9215.1116)), bool(false))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, sqrt(1.0))), min(float(mat4x3(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, sqrt(1.0))), float(mat4x3(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, sqrt(1.0)))))), 1.0))), vec2(mat4x2(vec2(1.0, 1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 1.0)))) / vec2(1.0, 1.0))))))))))), min(max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0))))), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), mix(float(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), max(length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0)))))), float(_GLF_FUZZED(9215.1116)), bool(false))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, sqrt(1.0))), min(float(mat4x3(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, sqrt(1.0))), float(mat4x3(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, sqrt(1.0)))))), 1.0))), vec2(mat4x2(vec2(1.0, 1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 1.0)))) / vec2(1.0, 1.0))))))))))), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0))))), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), mix(float(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), max(length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0)))))), float(_GLF_FUZZED(9215.1116)), bool(false))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, sqrt(1.0))), min(float(mat4x3(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, sqrt(1.0))), float(mat4x3(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, sqrt(1.0)))))), 1.0))), vec2(mat4x2(vec2(1.0, 1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 1.0)))) / vec2(1.0, 1.0)))))))))))))) / 1.0), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0))))), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), mix(float(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), max(length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0)))))), float(_GLF_FUZZED(9215.1116)), bool(false))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, sqrt(1.0))), min(float(mat4x3(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, sqrt(1.0))), float(mat4x3(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, sqrt(1.0)))))), 1.0))), vec2(mat4x2(vec2(1.0, 1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 1.0)))) / vec2(1.0, 1.0)))))))))))))))))) : _GLF_FUZZED(pow(-2.8, -38.01))))))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).y : _GLF_IDENTITY(_GLF_FUZZED((-6189.4109)), (true ? _GLF_FUZZED((-6189.4109)) : _GLF_FUZZED(-0.9))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4.3) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0))))), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0))))), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), vec2(0.0, 0.0) + (normalize(vec2(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))))))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0))))))), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), max(normalize(vec2(1.0, 1.0)), normalize(vec2(1.0, 1.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(22.53) : 1.0, max(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(22.53) : 1.0, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(22.53) : 1.0))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) + 0.0, clamp((_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) + 0.0, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) + 0.0, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) + 0.0))), _GLF_IDENTITY((injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0)))), (_GLF_IDENTITY((injectionSwitch.y) / round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))))), float(mat3x4((injectionSwitch.y) / round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))))), 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - 0.0)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))) / round(length(normalize(vec2(1.0, 1.0))))))))))))), (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4.3) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0))))), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0)))))))), max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0)))), ((injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0))))) / 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0)))), max((injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0)))), (injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0))))))), max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), max(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-7.5)), bool(false))), (injectionSwitch.y))) / round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0))))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(_GLF_IDENTITY(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat4x2(vec2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(-64.27))), 1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))) / vec2(1.0, 1.0))))), mix(vec2(_GLF_FUZZED(9464.4049), (_GLF_IDENTITY(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat4x2(vec2(1.0, 1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))) / vec2(1.0, 1.0))))), (_GLF_IDENTITY(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat4x2(vec2(1.0, 1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))) / vec2(1.0, 1.0))))), min(_GLF_IDENTITY(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat4x2(vec2(1.0, 1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))) / vec2(1.0, 1.0))))), vec2(mat2x3(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat4x2(vec2(1.0, 1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))) / vec2(1.0, 1.0))))), 0.0, 1.0, 0.0, 0.0))), normalize(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat4x2(vec2(1.0, 1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))) / vec2(1.0, 1.0)))))))) / vec2(1.0, 1.0)))[1]), vec2((normalize(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat4x2(vec2(1.0, 1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))) / vec2(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0))))))[0], _GLF_FUZZED(23.19)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))))))) : _GLF_FUZZED(pow(-2.8, -38.01)))))))))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0))).y : _GLF_FUZZED(_GLF_IDENTITY((-6189.4109), mix(float(_GLF_IDENTITY((-6189.4109), min((-6189.4109), (_GLF_IDENTITY(-6189.4109, max(-6189.4109, -6189.4109)))))), float(_GLF_FUZZED(_GLF_IDENTITY(-5.9, 0.0 + (_GLF_IDENTITY(-5.9, _GLF_IDENTITY((false ? _GLF_FUZZED(29.59) : -5.9), min(_GLF_IDENTITY((false ? _GLF_FUZZED(29.59) : -5.9), (_GLF_IDENTITY((false ? _GLF_FUZZED(29.59) : -5.9), mix(float(_GLF_FUZZED(-5875.3707)), float((false ? _GLF_FUZZED(29.59) : -5.9)), bool(true)))) + 0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(29.59) : -5.9), 1.0 * ((false ? _GLF_FUZZED(29.59) : -5.9)))))))))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (true ? _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0))).y : _GLF_FUZZED(_GLF_IDENTITY((-6189.4109), mix(float(_GLF_IDENTITY((-6189.4109), min((-6189.4109), (_GLF_IDENTITY(-6189.4109, max(-6189.4109, -6189.4109)))))), float(_GLF_FUZZED(_GLF_IDENTITY(-5.9, 0.0 + (_GLF_IDENTITY(-5.9, (false ? _GLF_IDENTITY(_GLF_FUZZED(29.59), max(_GLF_IDENTITY(_GLF_FUZZED(29.59), min(_GLF_FUZZED(29.59), _GLF_FUZZED(29.59))), _GLF_FUZZED(29.59))) : -5.9)))))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), mix(float((true ? _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0))).y : _GLF_FUZZED(_GLF_IDENTITY((-6189.4109), mix(float(_GLF_IDENTITY((-6189.4109), min((-6189.4109), (_GLF_IDENTITY(-6189.4109, max(-6189.4109, -6189.4109)))))), float(_GLF_FUZZED(_GLF_IDENTITY(-5.9, 0.0 + (_GLF_IDENTITY(-5.9, (false ? _GLF_FUZZED(29.59) : -5.9)))))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), float(_GLF_FUZZED(-0.8)), bool(false))) : _GLF_FUZZED(-27.19)))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(-4.3), clamp(_GLF_FUZZED(-4.3), _GLF_FUZZED(-4.3), _GLF_FUZZED(-4.3))) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), mix(float(_GLF_FUZZED(-6.9)), float((injectionSwitch.y)), bool(true))), max(_GLF_IDENTITY((injectionSwitch.y), (true ? (injectionSwitch.y) : _GLF_FUZZED(-8163.3732))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), min(_GLF_IDENTITY((injectionSwitch.y), (false ? _GLF_FUZZED(-10.35) : (injectionSwitch.y))), (injectionSwitch.y))), min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), min(_GLF_IDENTITY((injectionSwitch.y), (false ? _GLF_FUZZED(-10.35) : _GLF_IDENTITY((injectionSwitch.y), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4123.4291) : _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), _GLF_IDENTITY(max(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4123.4291) : _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4123.4291) : _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), max(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4123.4291) : _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4123.4291) : _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))))), (true ? max(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4123.4291) : _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4123.4291) : _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), max(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4123.4291) : _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7.7) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.2) : injectionSwitch.x)))) > injectionSwitch.y)) ? _GLF_FUZZED(-4123.4291) : _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))))) : _GLF_FUZZED(-3.0)))))))), (injectionSwitch.y))), float(mat2x3(_GLF_IDENTITY((injectionSwitch.y), min(_GLF_IDENTITY((injectionSwitch.y), (false ? _GLF_FUZZED(-10.35) : (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - tan(0.0))))), (injectionSwitch.y))), 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0)), 1.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0, log(round(length(normalize(1.0)))), 1.0, length(vec4(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), (transpose(mat3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 0.0, 0.0, 0.0)), determinant(mat3(0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).y), 0.0, 0.0)), 0.0, 0.0, tan(0.0), 0.0), transpose(_GLF_IDENTITY(transpose(mat4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0)), 1.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0, log(round(length(normalize(1.0)))), 1.0, length(vec4(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), 0.0)), _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), 0.0, 0.0, 0.0)), determinant(mat3(0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(226.021)), float(0.0), bool(true))), 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-53.11)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) - 0.0)), 0.0, 0.0)), 0.0, 0.0, tan(0.0), 0.0)), (false ? _GLF_FUZZED(mat4(50.37, -42.94, -261.297, 13.34, 73.30, 6.0, -7.3, -695.654, -36.69, 5.5, 3.9, 61.45, -2.6, -64.04, -8271.0313, -4617.1749)) : transpose(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0)), 1.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0, log(round(length(normalize(1.0)))), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), 0.0, 0.0, tan(0.0), 0.0)))))))), sqrt(1.0), 0.0, 0.0))), _GLF_IDENTITY((injectionSwitch.y), min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), (false ? _GLF_FUZZED(-10.35) : (injectionSwitch.y))), mix(float(_GLF_FUZZED(6.0)), float(_GLF_IDENTITY((injectionSwitch.y), (false ? _GLF_FUZZED(-10.35) : (injectionSwitch.y)))), bool(true))), (injectionSwitch.y))))))) / round(_GLF_IDENTITY(length(_GLF_IDENTITY(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat2(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0), 1.0, 1.0)))), (true ? _GLF_IDENTITY(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat2(vec2(1.0, 1.0), 1.0, 1.0)))), (true ? _GLF_IDENTITY(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat2(vec2(1.0, 1.0), 1.0, 1.0)))), mix(vec2((normalize(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat2(vec2(1.0, 1.0), 1.0, 1.0)))))[0], _GLF_FUZZED(-8.5)), vec2(_GLF_FUZZED(-1.3), (normalize(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat2(vec2(1.0, 1.0), 1.0, 1.0)))))[1]), bvec2(false, true))) : _GLF_FUZZED(vec2(-524.523, -8.2)))) : _GLF_FUZZED(injectionSwitch)))), (length(_GLF_IDENTITY(normalize(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3.5)), bool(false)))) - 0.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), (normalize(_GLF_IDENTITY(vec2(1.0, 1.0), mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((injectionSwitch * vec2(-61.41, -2764.0625))))), injectionSwitch)).y)) * (vec2(1.0, 1.0))))) / vec2(1.0, 1.0)))) / 1.0)))))))))))))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                      break;
                     if(_GLF_DEAD(false))
                      break;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))) && ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))) || false)))) && true))))
                          continue;
                        }
                       else
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          break;
                         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), injectionSwitch)).y)) || false)))))))
                          break;
                         if(_GLF_DEAD(false))
                          break;
                         if(_GLF_DEAD(false))
                          break;
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            continue;
                           if(_GLF_DEAD(false))
                            return;
                           continue;
                          }
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                          {
                           return;
                          }
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(437.246) : injectionSwitch.x)) > injectionSwitch.y))))
                            continue;
                           break;
                          }
                        }
                      }
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       for(int _injected_loop_counter = (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(4), int(4)), ~ (~ (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-15593) : _GLF_IDENTITY(4, (4) ^ 0)))), int(4)))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0)), clamp((_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter) | 0, _GLF_IDENTITY(((_injected_loop_counter) | 0) >> _GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(((_injected_loop_counter) | 0) >> _GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(((_injected_loop_counter) | 0) >> _GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x))), ((_injected_loop_counter) | 0) >> _GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x))))), ((_injected_loop_counter) | 0) >> _GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0), _GLF_IDENTITY(0, 0 | (0)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0), (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0)) + 0))), (0 & -69086))))), ~ (~ ((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0))))), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(-50462)))) | 0)), min((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) ^ 0), 0)))), (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) >> 0))))))))) / _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, clamp(1, 1, 1)), 1))))) < (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(int(0), (int(0)) | 0))), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) | 0), max((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY((int(0)) | 0, ((int(0)) | 0) | 0)), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | 0), (_GLF_IDENTITY(int(0), (int(0)) | 0)) ^ 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | 0), 0 | (_GLF_IDENTITY(int(0), (int(0)) | 0))))))), int(_GLF_IDENTITY(0, (0) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, min(0, 0)))))) | 0, min((_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, min(0, 0)))))) | 0, (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, min(0, 0)))))) | 0))), (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, min(0, 0)))))) | 0, min((_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, min(0, 0)))))) | 0, (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, min(0, 0)))))) | 0)))) | (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, min(0, 0)))))) | 0, min((_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, min(0, 0)))))) | 0, (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, min(0, 0)))))) | 0)))))), int(0)), 1 * (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(ivec2(0, _GLF_IDENTITY(1, 0 ^ (1))))), 0)))))) | 0, min((_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, min(0, 0)))))) | 0, (_GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, min(0, 0)))), (~ (~ (_GLF_IDENTITY(0, min(0, 0))))) >> 0))) | 0))), (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, min(0, 0))))), 0 | (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, min(0, 0)))))))) | 0, min(_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, min(0, 0)))))) | 0, int(ivec2((_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, min(0, 0)))))) | 0, 1))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, min(0, 0)))))) | 0)))) | (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), 1 * (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), max(~ (_GLF_IDENTITY(0, min(0, 0))), ~ (_GLF_IDENTITY(0, min(0, 0)))))))))) | 0, min((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, min(0, 0))), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) ^ 0))) * (_GLF_IDENTITY((_GLF_IDENTITY(0, min(0, 0))), 0 + ((_GLF_IDENTITY(0, min(0, 0)))))))))) | 0, (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, min(0, 0)))))) | 0)))))), int(0)))), _GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(int(0), (int(0)) | 0))), int(0))) >> _GLF_IDENTITY(int(0), int(0)), clamp((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | 0), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | 0), min(_GLF_IDENTITY(int(0), (int(0)) | 0), _GLF_IDENTITY(int(0), (int(0)) | 0)))) ^ 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | 0), min(_GLF_IDENTITY(int(0), (int(0)) | 0), _GLF_IDENTITY(int(0), (int(0)) | 0)))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | 0), min(_GLF_IDENTITY(int(0), (int(0)) | 0), _GLF_IDENTITY(int(0), (int(0)) | 0)))) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | 0), min(_GLF_IDENTITY(int(0), (int(0)) | 0), _GLF_IDENTITY(int(0), (int(0)) | 0)))) ^ 0)) * 1), _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | 0), min(_GLF_IDENTITY(int(0), (int(0)) | 0), _GLF_IDENTITY(int(0), (int(0)) | 0)))) ^ 0))), _GLF_IDENTITY(int(0), (int(0)) | 0))))), _GLF_IDENTITY(int(0), max(int(0), int(0)))), (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | 0), max(_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | 0), min(_GLF_IDENTITY(int(0), (int(0)) | 0), _GLF_IDENTITY(int(0), (int(0)) | 0)))) ^ 0), _GLF_IDENTITY(int(0), (int(0)) | 0))))), _GLF_IDENTITY(int(_GLF_IDENTITY(0, max(0, 0))), max(int(0), int(_GLF_IDENTITY(0, 0 | (0)))))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | 0), max(_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | 0), min(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), (int(0)) | (int(0)))) | 0), _GLF_IDENTITY(int(0), (int(0)) | 0)))) ^ 0), _GLF_IDENTITY(int(0), (int(0)) | 0))))), _GLF_IDENTITY(int(0), max(_GLF_IDENTITY(int(0), (int(0)) | 0), int(0)))), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | 0), (_GLF_IDENTITY(int(0), (int(0)) | 0)) >> 0), max(_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | 0), min(_GLF_IDENTITY(int(0), (int(0)) | 0), _GLF_IDENTITY(int(0), (int(0)) | 0)))) ^ 0), _GLF_IDENTITY(int(0), (int(0)) | 0))))), _GLF_IDENTITY(int(0), max(int(0), int(0))))) / 1))))) >> (0 | 0))) >> _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY((int(0)), ~ (_GLF_IDENTITY(~ ((int(0))), min(_GLF_IDENTITY(~ ((int(0))), ~ (~ (~ ((int(0)))))), ~ ((int(0))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | 0), (true ? _GLF_IDENTITY(int(0), (int(0)) | 0) : _GLF_FUZZED(80240))))), int(0))) >> _GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY((int(0)), ~ (_GLF_IDENTITY(~ ((int(0))), min(_GLF_IDENTITY(~ ((int(0))), ~ (~ (~ ((int(0)))))), ~ ((int(0))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | 0), (true ? _GLF_IDENTITY(int(0), (int(0)) | 0) : _GLF_FUZZED(80240))))), int(0))) >> _GLF_IDENTITY(int(0), int(0)), min((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY((int(0)), ~ (_GLF_IDENTITY(~ ((int(0))), min(_GLF_IDENTITY(~ ((int(0))), ~ (~ (~ ((int(0)))))), ~ ((int(0))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | 0), (true ? _GLF_IDENTITY(int(0), (int(0)) | 0) : _GLF_FUZZED(80240))))), int(0))) >> _GLF_IDENTITY(int(0), int(0)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY((int(0)), ~ (_GLF_IDENTITY(~ ((int(0))), min(_GLF_IDENTITY(~ ((int(0))), ~ (~ (~ ((int(0)))))), ~ ((int(0))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | 0), (true ? _GLF_IDENTITY(int(0), (int(0)) | 0) : _GLF_FUZZED(80240))))), int(0))) >> _GLF_IDENTITY(int(0), int(0))))) >> 0), (1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), (int(0)) / 1)) | (_GLF_IDENTITY(int(0), (int(0)) | 0))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(int(0), (int(0)) | 0))), max(_GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(int(0), (int(0)) | 0))), _GLF_IDENTITY(int(0), (int(0)) | _GLF_IDENTITY((_GLF_IDENTITY(int(0), (int(0)) | 0)), ((_GLF_IDENTITY(int(0), (int(0)) | 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(int(0), (int(0)) | 0)), 0 | ((_GLF_IDENTITY(int(0), (int(0)) | 0))))))))))), int(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))))) >> _GLF_IDENTITY(int(0), int(0)))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY((int(0)) | (_GLF_IDENTITY(int(0), _GLF_IDENTITY((int(_GLF_IDENTITY(0, (0) / 1))), ((int(0))) >> _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))), max(ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))), _GLF_IDENTITY((ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))))), ivec2(ivec3(_GLF_IDENTITY((ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))))), ivec2(ivec3(_GLF_IDENTITY((ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))))), ivec2(ivec2((ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))))))), 0))), int(_GLF_ONE(1.0, injectionSwitch.y))))) | ivec2(0, 0))))), min(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-36344) : 0)), (0) << 0), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 ^ (_GLF_IDENTITY(int(2), ~ (~ (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))))))), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))), max(ivec2(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / (1 | 1))) << 0), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))), (false ? _GLF_FUZZED(-47878) : (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))), (ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) | (int(2)), int(int(_GLF_IDENTITY((int(2)) | (int(2)), int(ivec4((int(2)) | (int(2)), 0, 1, 0))))))))))) | ivec2(0, 0))))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))), max(ivec2(_GLF_IDENTITY(0, (0) << 0), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))) | (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))), (ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))))) | ivec2(0, 0)), max(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))), (ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))))) | ivec2(0, 0)), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))), (ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))))) | ivec2(0, 0))))))))))) | 0)), int(ivec4((int(0)) | (_GLF_IDENTITY(int(0), _GLF_IDENTITY((int(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), (_GLF_IDENTITY(0, (0) / 1)) | 0))), ((int(0))) >> _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))), _GLF_IDENTITY(max(ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))), (ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))))) | ivec2(0, 0))), max(max(ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))), (ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))))) | ivec2(0, 0))), max(ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))), (ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))))) | ivec2(0, 0))))))), min(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))), max(ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))), (ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))))) | ivec2(0, 0)))), min(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))), max(ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))), (ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))))) | ivec2(0, 0)))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))), max(ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))), (ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))))) | ivec2(0, 0)))), ivec2(1, 1) * (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))), max(ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))), (ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))))) | ivec2(0, 0))))))))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))), _GLF_IDENTITY(max(ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))), (ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))))) | ivec2(0, 0))), (max(ivec2(_GLF_IDENTITY(0, (0) << 0), (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (0) << 0), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))), ((0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), (ivec2(_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, (0) ^ 0)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))), (false ? _GLF_FUZZED(_injected_loop_counter) : 0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))))))) | ivec2(0, 0)))) - ivec2(0, 0)))))))) | 0)), 0, 0, 1)))), int(0))) >> _GLF_IDENTITY(int(0), int(0))) << 0))))); _GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-19054), int(ivec2(_GLF_FUZZED(-19054), 1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(-19054), 0 | (_GLF_FUZZED(-19054)))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(-19054), 0 | (_GLF_FUZZED(-19054)))), ~ (~ ((_GLF_IDENTITY(_GLF_FUZZED(-19054), 0 | (_GLF_FUZZED(-19054))))))))) + 0) : _injected_loop_counter ++)))
                        {
                         for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY((_injected_loop_counter ++) | 0, ((_injected_loop_counter ++) | 0) >> 0))) << 0))
                          {
                           return;
                          }
                        }
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))
                        continue;
                      }
                    }
                   if(_GLF_DEAD(false))
                    return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 int i = 0;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                       if(_GLF_DEAD(false))
                        break;
                      }
                     else
                      {
                       return;
                      }
                    }
                   else
                    {
                    }
                  }
                 for(int _injected_loop_counter = (0 ^ _GLF_IDENTITY(0, max(0, 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   do
                    {
                     atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, 1, 0), max(ivec3(4, 1, 0), _GLF_IDENTITY(ivec3(4, 1, 0), clamp(ivec3(4, 1, 0), ivec3(4, 1, 0), _GLF_IDENTITY(ivec3(4, 1, 0), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, 1 * (4)), 1, 0), clamp(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, 1 * (4)), 1, 0), ivec3(0, 0, 0) ^ (ivec3(_GLF_IDENTITY(4, 1 * (4)), 1, 0))), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, 1 * (4)), 1, 0), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, 1 * (4)), 1, 0), (ivec3(_GLF_IDENTITY(4, 1 * (4)), 1, 0)) ^ ivec3(0, 0, 0))) | ivec3(0, 0, 0)), ivec3(_GLF_IDENTITY(4, 1 * (4)), 1, 0))), ~ (~ (ivec3(4, 1, 0)))), ivec3(4, 1, 0))))))))), _GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, (64) | (64)))), 4);
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                     if(_GLF_DEAD(false))
                      continue;
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec2(-6.2, 607.822).s)), float(injectionSwitch.y), bool(true))), (injectionSwitch.y) / 1.0), injectionSwitch.y))))));
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   break;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7.0))) > injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     return;
                     if(_GLF_DEAD(false))
                      return;
                    }
                   else
                    {
                    }
                   if(_GLF_DEAD(false))
                    continue;
                  }
                }
               else
                {
                 if(_GLF_DEAD(false))
                  break;
                 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(21945))))))) * int(_GLF_ONE(1.0, injectionSwitch.y))), 64, 4);
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))) && true)))))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
                      {
                       if(_GLF_DEAD(false))
                        continue;
                       break;
                      }
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     return;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      break;
                    }
                  }
                 if(_GLF_DEAD(false))
                  return;
                }
              }
             else
              {
              }
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(false, ! (! (false))))) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(false, ! (! (false))))) && true), true)), (bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(false, ! (! (false))))) && true), true))) && true)))) ? _GLF_IDENTITY(_GLF_FUZZED(-1542.2895), clamp(_GLF_IDENTITY(_GLF_FUZZED(-1542.2895), mix(float(_GLF_FUZZED(174.060)), float(_GLF_FUZZED(-1542.2895)), bool(true))), _GLF_FUZZED(-1542.2895), _GLF_FUZZED(-1542.2895))) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(73.50), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6.1)), bvec2(true, false)))) / vec2(1.0, 1.0))[1]))) * 1.0))).x > injectionSwitch.y))));
        }
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
}
