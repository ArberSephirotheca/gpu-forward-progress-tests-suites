#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec4 GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnum_workgroup;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false))))), false || (_GLF_IDENTITY(false, false || (false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, (false) || false), true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))) || false)))
  barrier();
 uvec4 GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(663.323, -1.9)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y, (false ? _GLF_FUZZED(4.1) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) / 1.0)))), false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(injectionSwitch)))) - vec2(0.0, 0.0)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (! ((! ((injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnum_workgroup.xyz = GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz = GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnum_workgroup.xyz;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(true, false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))))), false, false)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))))), false, false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, true)))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz.x = _GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u ^ 0u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (max(injectionSwitch.y, injectionSwitch.y)) - tan(0.0)))) + sin(0.0))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnum_workgroup.w = num_workgroup;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), (bool(bvec4(true, false, false, false))) && true))))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))))))))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))))), ! (! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))))))))))))))) && true))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true))), bool(bvec4(false, false, false, true)))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), false, true))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), ! (! (! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) || false), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))))))))) && true))))), false || ((_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(false, false, false, true)))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))), (false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(false, false, false, true)), true, false, true)), false || (bool(bvec4(bool(bvec4(false, false, false, true)), true, false, true)))))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))))))))) && true))))), false || ((_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), ! (! (! (bool(_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))))))))) && true))))), false || ((_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))))))))) && true))))), false || ((_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))))))))) && true))))), false || ((_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))))))))) && true))))), false || ((_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))))))))) && true))))), false || ((_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))))))))) && true))))), false || ((_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))))))))) && true))))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), bool(_GLF_IDENTITY(bvec3(false || ((_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), true, true), bvec3(bvec3(bvec3(false || ((_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), true, true))))))))))) && true)))))))))))))))), ! (! (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), false || (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || false), false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))))))))) && true))))), false || ((_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))))))))) && true))))), false || ((_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), ! (! (! (bool(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true))), false || (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, false, false, true)))) && true)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))))))))))) && true))))), false || ((_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))))))))))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(true, true))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz.z = workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz.z, min(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz.z, max(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz), (~ (GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz)) | (~ (_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid, (true ? GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid : _GLF_FUZZED(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid))).xyz))))).z, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz.z)), _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz.z, 0u | (GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz.z)))), _GLF_IDENTITY((workgroup_size * GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz.z), min((workgroup_size * GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz.z), (workgroup_size * GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz.z))) | (workgroup_size * GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz.z));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-593.474)), bool(false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false)))) || false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7721.2206)), bool(false))))) - vec2(0.0, 0.0)), min((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(5409.5126) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0))), mix(float(_GLF_FUZZED(vec3(8.3, 0.6, -46.28).s)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0)), (float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0), (mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0)) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.8), _GLF_FUZZED(-8.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))) * _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 0.0, 1.0)))))), _GLF_IDENTITY(bool(true), ! _GLF_IDENTITY((! (bool(true))), bool(bool(_GLF_IDENTITY((! (bool(true))), ((! (bool(true)))) || false))))))), float(vec3(false ? _GLF_FUZZED(5409.5126) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0))), mix(float(_GLF_FUZZED(vec3(8.3, 0.6, -46.28).s)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0)), (float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0), (mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0)) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) * 1.0))), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))), 0.0, abs(1.0))))))) / 1.0)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), min(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)))))) * mat2(1.0)))).y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz.x + _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id));
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz.y = virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz.x + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz.x, clamp(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz.x, (_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz.x, (GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz.x) | (GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz.x))) + 0u), GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz.x, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz.x)), 0u | (GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz.x)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz), uvec3(uvec3(~ (GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz)))))).x, 0u | (_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid, clamp(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid, _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid, (_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid, (GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid) | uvec4(0u, 0u, 0u, 0u))) | (GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid)), GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid)).xyz.x))) | (_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz.x, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz, uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u) | (_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz), uvec3(uvec3(~ _GLF_IDENTITY((GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz), ~ (_GLF_IDENTITY(~ ((GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz)), uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) ^ 0u)), 1u * ((_GLF_IDENTITY(0u, (0u) ^ 0u)))) - 0u), 0u, 0u) | (~ ((GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz))))))))))))).x)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(_GLF_IDENTITY(bool(bool(bvec3((_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (bool(bool(bvec3((_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false)))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-295.863), _GLF_IDENTITY(_GLF_FUZZED(-7.3), clamp(_GLF_FUZZED(-7.3), _GLF_FUZZED(-7.3), _GLF_FUZZED(-7.3)))), bvec2(false, false))).x, (false ? _GLF_FUZZED(-42.85) : injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false, true)), true, false))))), true, true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.w = next_virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - sin(0.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - sin(0.0)) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - sin(0.0)) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-123.851))), max(injectionSwitch.x, injectionSwitch.x))) - sin(0.0)) > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-123.851))), max(injectionSwitch.x, injectionSwitch.x))) - sin(0.0)) > injectionSwitch.y)), ! (! (! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-123.851))), max(injectionSwitch.x, injectionSwitch.x))) - sin(0.0)) > injectionSwitch.y))))))))))))))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8369.2222)), float(_GLF_IDENTITY(0.0, (0.0) + 0.0)), bool(true))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))) : _GLF_FUZZED(4.7))), 0.0, 1.0, 0.0, 0.0))), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), max(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), clamp(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (true ? vec3(0.0, 0.0, 1.0) : _GLF_FUZZED(vec3(-583.385, -6235.6548, 6045.8994)))), vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), clamp(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 0.0) + (vec3(0.0, 0.0, 1.0))), vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))))) : _GLF_FUZZED(1.8))), 1.0), mix(vec3(_GLF_FUZZED(-125.853), (vec3(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0))) : _GLF_FUZZED(1.8))), 1.0))[1], (vec3(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0))) : _GLF_FUZZED(1.8))), 1.0))[2]), vec3((vec3(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0))) : _GLF_FUZZED(1.8))), 1.0))[0], _GLF_FUZZED(-7.1), _GLF_FUZZED(446.181)), bvec3(true, false, false)))), max(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), vec3(mat2x3(vec3(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.2))), mix(float(_GLF_FUZZED(1.6)), float(1.0), bool(true)))), cos(0.0), 1.0, 1.0))))) : _GLF_FUZZED(1.8))), 1.0)), dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) * 1.0) : _GLF_FUZZED(3393.5202)))), vec3(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0))) : _GLF_FUZZED(1.8))), 1.0)))), float(vec3(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)), 1.0, 1.0)))))), (vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), float(vec3(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), 1.0, 1.0))))))) / vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))).y), false || ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], 1.0 * (injectionSwitch[1])), injectionSwitch[1])))), _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(false))), float(1.0), bool(true))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0))), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0))) : _GLF_FUZZED(1.8))), 1.0)), max(dot(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(320.986)), float(0.0), bool(true))), 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), vec3(mat2x3(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.6)), float(1.0), bool(true)))), cos(0.0), 1.0, 1.0))))) : _GLF_FUZZED(1.8))), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0))) : _GLF_FUZZED(1.8))), 1.0)))), float(vec3(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(0.0, 0.0)), 1.0)), 1.0, 1.0)))))), (vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), float(vec3(dot(vec3(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9224.1228) : _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) * 1.0))), 1.0), vec3(0.0, 0.0, 1.0)), 1.0, 1.0))))))) / vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))).y)))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), min(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0))), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), max(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), clamp(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (true ? vec3(0.0, 0.0, 1.0) : _GLF_FUZZED(vec3(-583.385, -6235.6548, 6045.8994)))), vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), clamp(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 0.0) + (vec3(0.0, 0.0, 1.0))), vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))))) : _GLF_FUZZED(1.8))), 1.0), mix(vec3(_GLF_FUZZED(-125.853), (vec3(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0))) : _GLF_FUZZED(1.8))), 1.0))[1], (vec3(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0))) : _GLF_FUZZED(1.8))), 1.0))[2]), vec3((vec3(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0))) : _GLF_FUZZED(1.8))), 1.0))[0], _GLF_FUZZED(-7.1), _GLF_FUZZED(446.181)), bvec3(true, false, false)))), max(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), vec3(mat2x3(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.6)), float(1.0), bool(true)))), cos(0.0), 1.0, 1.0))))) : _GLF_FUZZED(1.8))), 1.0)), dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) * 1.0) : _GLF_FUZZED(3393.5202)))), vec3(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0))) : _GLF_FUZZED(1.8))), 1.0)))), float(vec3(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)), 1.0, 1.0)))))), (vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), float(vec3(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), 1.0, 1.0))))))) / vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))).y), false || ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], 1.0 * (injectionSwitch[1])), injectionSwitch[1]))), (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], 1.0 * (injectionSwitch[1])), injectionSwitch[1])))) / vec2(1.0, 1.0))), _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), min(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), min(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0))), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0))) : _GLF_FUZZED(1.8))), 1.0)), max(dot(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(320.986)), float(0.0), bool(true))), 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), vec3(mat2x3(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.6)), float(1.0), bool(true)))), cos(0.0), 1.0, 1.0))))) : _GLF_FUZZED(1.8))), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0))) : _GLF_FUZZED(1.8))), 1.0)))), float(vec3(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(0.0, 0.0)), 1.0)), 1.0, 1.0)))))), (vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), float(vec3(dot(vec3(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9224.1228) : _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) * 1.0))), 1.0), vec3(0.0, 0.0, 1.0)), 1.0, 1.0))))))) / vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))).y)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(46.40)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0)))) * 1.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-796.978) : 1.0)))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0))), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), max(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), clamp(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (_GLF_IDENTITY(true ? vec3(0.0, 0.0, 1.0) : _GLF_FUZZED(vec3(-583.385, -6235.6548, 6045.8994)), (_GLF_IDENTITY(true ? vec3(0.0, 0.0, 1.0) : _GLF_FUZZED(vec3(-583.385, -6235.6548, 6045.8994)), (true ? vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0) : _GLF_FUZZED(vec3(-583.385, -6235.6548, 6045.8994))) * mat3(1.0))) * vec3(1.0, 1.0, 1.0)))), vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), clamp(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 0.0) + (vec3(0.0, 0.0, 1.0))), vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), mix(vec3((_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), clamp(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 0.0) + (vec3(0.0, 0.0, 1.0))), vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))[0], _GLF_FUZZED(-9.2), (_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), clamp(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 0.0) + (vec3(0.0, 0.0, 1.0))), vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))[2]), vec3(_GLF_FUZZED(86.20), (_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), clamp(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 0.0) + (vec3(0.0, 0.0, 1.0))), vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))[1], _GLF_FUZZED(-6015.5909)), bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))) : _GLF_FUZZED(1.8))), 1.0), mix(vec3(_GLF_FUZZED(-125.853), (vec3(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0))) : _GLF_FUZZED(1.8))), 1.0))[1], (vec3(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0))) : _GLF_IDENTITY(_GLF_FUZZED(1.8), (_GLF_FUZZED(1.8)) + 0.0))), 1.0))[2]), vec3((vec3(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0))) : _GLF_IDENTITY(_GLF_FUZZED(1.8), (false ? _GLF_FUZZED(-3.3) : _GLF_FUZZED(1.8))), float(_GLF_IDENTITY(mat2(true ? _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0))) : _GLF_IDENTITY(_GLF_FUZZED(1.8), (false ? _GLF_FUZZED(-3.3) : _GLF_FUZZED(1.8))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0), (mat2(true ? _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0))) : _GLF_IDENTITY(_GLF_FUZZED(1.8), (false ? _GLF_FUZZED(-3.3) : _GLF_FUZZED(1.8))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))))), 1.0))[0], _GLF_FUZZED(-7.1), _GLF_FUZZED(446.181)), bvec3(true, false, false)))), max(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), vec3(mat2x3(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.6)), float(1.0), bool(true)))), cos(0.0), 1.0, 1.0))))) : _GLF_FUZZED(_GLF_IDENTITY(1.8, (1.8) / 1.0)))), 1.0)), dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) * 1.0) : _GLF_FUZZED(3393.5202)))), vec3(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0))) : _GLF_FUZZED(1.8))), 1.0)))), float(vec3(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)), 1.0, 1.0)))))), (_GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0), vec3(0.0, 0.0, 1.0)), float(vec3(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), 1.0, 1.0)))))), clamp(vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), float(vec3(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), 1.0, 1.0)))))), vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), float(vec3(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), 1.0, 1.0)))))), vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), float(vec3(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), 1.0, 1.0))))))))) / vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0))))).y), false || ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], 1.0 * (injectionSwitch[1])), injectionSwitch[1])))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0))), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0))) : _GLF_FUZZED(1.8))), 1.0)), max(dot(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(320.986)), float(0.0), bool(true))), 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), vec3(mat2x3(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.6)), float(1.0), bool(true)))), cos(0.0), 1.0, 1.0))))) : _GLF_FUZZED(1.8))), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0))) : _GLF_FUZZED(1.8)), min((true ? _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0))) : _GLF_FUZZED(1.8)), (true ? _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0))) : _GLF_FUZZED(1.8))))), 1.0)))), float(vec3(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(0.0, 0.0)), 1.0)), 1.0, 1.0))))), (mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0))), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0))) : _GLF_FUZZED(1.8))), 1.0)), max(dot(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(320.986)), float(0.0), bool(true))), 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), vec3(mat2x3(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.6)), float(1.0), bool(true)))), cos(0.0), 1.0, 1.0))))) : _GLF_FUZZED(1.8))), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0))) : _GLF_FUZZED(1.8)), min((true ? _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0))) : _GLF_FUZZED(1.8)), (true ? _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0))) : _GLF_FUZZED(1.8))))), 1.0)))), float(vec3(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(0.0, 0.0)), 1.0)), 1.0, 1.0)))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), float(vec3(dot(vec3(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9224.1228) : _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), exp(0.0), 1.0), vec3(mat3x2(vec3(_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), exp(0.0), 1.0), abs(1.0), 1.0, 0.0)))))) * 1.0))), 1.0), vec3(0.0, 0.0, 1.0)), 1.0, 1.0))))))) / vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7598.1007)), float(0.0), bool(true))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), min(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 0.0))), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0))) : _GLF_FUZZED(1.8))), 1.0)), max(dot(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(320.986)), float(0.0), bool(true))), 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), vec3(mat2x3(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.6)), float(1.0), bool(true)))), cos(_GLF_IDENTITY(0.0, (0.0) / 1.0)), 1.0, 1.0))))) : _GLF_FUZZED(1.8))), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0))) : _GLF_FUZZED(1.8))), 1.0)))), float(vec3(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(0.0, 0.0)), 1.0)), 1.0, 1.0)))))), (vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), float(vec3(dot(vec3(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9224.1228) : _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 1.0)))) * 1.0))), 1.0), vec3(0.0, 0.0, 1.0)), 1.0, 1.0))))))) / vec2(_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * abs(1.0))), 1.0))))).y)))))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) + 0.0), injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid, min(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid)).xyz.y], 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-85125) : 0)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-85125) : 0)), (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-85125) : 0))) | (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-85125) : 0))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7590.1142)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 1.0), (true ? mat2(injectionSwitch, 1.0, 1.0) : _GLF_FUZZED((mat2(-43.29, 6.9, -1.9, -6.5) - -434.577)))))).y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0)), (float(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0))) + 0.0))), bool(true)))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3892.1499), _GLF_FUZZED(553.165)), bvec2(false, false))), cos(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 1.0))).y, mix(float(_GLF_FUZZED(-7590.1142)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 1.0), (true ? mat2(injectionSwitch, 1.0, 1.0) : _GLF_FUZZED((mat2(-43.29, 6.9, -1.9, -6.5) - -434.577)))))).y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0)), (float(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0))) + 0.0))), bool(true)))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7590.1142)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 1.0), (true ? mat2(injectionSwitch, 1.0, 1.0) : _GLF_FUZZED((mat2(-43.29, 6.9, -1.9, -6.5) - -434.577)))))).y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0)), (float(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0))) + 0.0))), bool(true))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), (_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), (_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), transpose(transpose(mat2(injectionSwitch, 0.0, 1.0))))) / mat2(1.0, 1.0, 1.0, 1.0))) - mat2(0.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), (_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), (_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), transpose(transpose(mat2(injectionSwitch, 0.0, 1.0))))) / mat2(1.0, 1.0, 1.0, 1.0))) - mat2(0.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bvec3(bool(bvec4(false, true, true, true)), true, false))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, false || ((false) || false)), bool(bvec2((false) || false, true))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.w], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz.x)
  {
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(checker[_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz.y, (_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz.y, (false ? _GLF_FUZZED(num_workgroup) : GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz.y))) | _GLF_IDENTITY((GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz.y), (true ? (GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz.y) : _GLF_FUZZED(next_virtual_gid))))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read, 0u ^ (read)), min(read, read)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read, 0u ^ (read)), min(read, read)), (_GLF_IDENTITY(_GLF_IDENTITY(read, 0u ^ (read)), min(read, read))) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))) | 0u), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! _GLF_IDENTITY((false), ((false)) && true), false))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false, false)), ! _GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(vec2(mat2x4(injectionSwitch, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 1.0)), (vec2(mat2x4(injectionSwitch, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 1.0))) * vec2(1.0, 1.0))) * _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.1)), float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), bool(true)))), (vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.1)), float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), bool(true))))) + vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(8540.4059)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x))))).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false, false)))), bool(bool((! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(vec2(mat2x4(injectionSwitch, sqrt(0.0), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-1.4)))), float(_GLF_FUZZED(266.980)), bool(false))), 1.0, 1.0, 1.0)), (vec2(mat2x4(injectionSwitch, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 1.0))) * vec2(1.0, 1.0))) * vec2(1.0, 1.0))).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false, false))))))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false))))) || false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false))), ! (! (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))) && true))))), (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, true, true)))), false))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(false, ! (! (false))))), bool(bvec2(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, true, true), false))))), true, false, _GLF_IDENTITY(false, ! (! (false))))), false)))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   atomicStore(checker[GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idnext_virtual_gid.xyz.y], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
