#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_18 {
 mat4 _GLF_SWITCH_1_24v;
 vec3 _f0;
} ;

struct _GLF_struct_15 {
 bvec3 _f0;
 ivec2 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_16 {
 mat4x2 _f0;
 _GLF_struct_15 _f1;
 uvec3 _f2;
 mat2x3 _f3;
 float _f4;
} ;

struct _GLF_struct_14 {
 bvec4 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_12 {
 bvec4 _f0;
 uvec2 _f1;
 ivec4 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_11 {
 ivec4 _f0;
 vec3 _f1;
 bvec2 _f2;
 bvec3 _f3;
 bvec4 _f4;
 mat3 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_10 {
 ivec3 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_13 {
 mat3x4 _f0;
 _GLF_struct_10 _f1;
 mat4 _f2;
 _GLF_struct_11 _f3;
 mat4x3 _f4;
 _GLF_struct_12 _f5;
} ;

struct _GLF_struct_8 {
 ivec2 _f0;
 uvec4 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_7 {
 ivec2 _f0;
 uvec3 _f1;
 mat4x3 _f2;
 mat4 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_6 {
 float _f0;
 bvec3 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_5 {
 bool _f0;
 uvec3 _f1;
 mat2x3 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_9 {
 mat3x2 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_7 _f3;
 mat3x4 _f4;
 mat4x2 _f5;
 _GLF_struct_8 _f6;
} ;

struct _GLF_struct_17 {
 bvec2 _GLF_SWITCH_1_0v;
 mat3x4 _f0;
 _GLF_struct_9 _f1;
 _GLF_struct_13 _f2;
 _GLF_struct_14 _f3;
 _GLF_struct_16 _f4;
 bool _f5;
} ;

struct _GLF_struct_2 {
 ivec4 _f0;
 ivec4 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_1 {
 uint _f0;
 mat2x4 _f1;
 mat3 _f2;
 mat2x3 _f3;
 ivec4 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_0 {
 uint _f0;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 vec4 _f2;
 _GLF_struct_2 _f3;
 uint workgroup_size;
 uint _f4;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
 mat3x2 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_3(_GLF_struct_0(1u), _GLF_struct_1(1u, mat2x4(1.0), mat3(1.0), mat2x3(1.0), ivec4(1), bvec3(true)), vec4(1.0), _GLF_struct_2(ivec4(1), ivec4(1), mat2x4(1.0)), gl_WorkGroupSize.x, 1u), mat3x2(1.0));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_struct_replacement_4._f0.workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(1), int(1)))))
    {
     case 0:
     case 59:
     case 13:
     case 15:
     int i = 0;
     case 78:
     atomicStore(checker[virtual_gid], read, 4, 64, 4);
     break;
     case 64:
     for(int _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v; true; mix(asin(vec4(-3616.0597, -9.7, 3.6, -61.06)), vec4(8.8, -687.548, -8.5, 2285.7536), 5.7))
      {
       float _GLF_SWITCH_0_3v[48];
       {
        vec4 _GLF_SWITCH_0_4v[58];
        mat3 _GLF_SWITCH_0_5v;
       }
       mat4x2 _GLF_SWITCH_0_6v[69];
       {
        mat4x2 _GLF_SWITCH_0_7v[40];
        vec3(-66.71, 4.5, 47.65);
        ivec4 _GLF_SWITCH_0_8v, _GLF_SWITCH_0_9v, _GLF_SWITCH_0_10v;
        ;
        mat3x2(-9865.1184);
       }
       while(isinf(4.4))
        {
         for(mat2 _GLF_SWITCH_0_11v[79], _GLF_SWITCH_0_12v[46], _GLF_SWITCH_0_13v[53]; bool(num_workgroup); subgroup_size)
          {
          }
         for(mat2x4 _GLF_SWITCH_0_14v[36], _GLF_SWITCH_0_15v[50]; true; _GLF_SWITCH_0_1v)
          {
           vec3(4138.9035, 8708.4849, 19.95);
           ((mat3x2(-8.8, -2576.8851, -5400.9704, -8971.4469, -5875.1582, 4.3) + -3371.1190) - mat3x2(723.902, -4.8, -22.64, -4.6, 8370.5954, -68.94));
           mat3 _GLF_SWITCH_0_16v[31], _GLF_SWITCH_0_17v, _GLF_SWITCH_0_18v;
           mat2(-0.6, -710.101, -8781.8439, 878.742);
           mat4x2(mat4x3(-75.71, -611.475, -3135.6693, -401.075, 8.8, 1.5, -7.3, 17.27, 8031.8736, -216.225, 13.73, -924.257));
           (_GLF_struct_replacement_4._f0.workgroup_size);
           uvec3(63024u, 103337u, 174840u);
           mat4(-9301.6819, 3.1, -5347.6777, 56.57, 964.592, 14.02, 9.2, -56.15, 86.09, -1140.1934, 3928.4447, 235.704, 5998.6244, -2139.8125, -18.82, 9.9);
           (- mat2x3(6.7, -3.6, 2.3, -2253.9731, -7.3, -788.252));
          }
         uvec4 _GLF_SWITCH_0_19v;
         bool _GLF_SWITCH_0_20v[47], _GLF_SWITCH_0_21v, _GLF_SWITCH_0_22v;
         mat4x3(3.0);
         uvec2 _GLF_SWITCH_0_23v;
         int _GLF_SWITCH_0_24v[9], _GLF_SWITCH_0_25v[53], _GLF_SWITCH_0_26v;
         {
          ivec3 _GLF_SWITCH_0_27v, _GLF_SWITCH_0_28v, _GLF_SWITCH_0_29v[82];
          bvec2 _GLF_SWITCH_0_30v[39];
          uvec4(read, subgroup_id, (vec4(-0.8, 7.8, 924.630, -5.6) , next_virtual_gid), subgroup_id);
          (mat2x4(-6.3, -580.391, 1.9, -642.269, -5718.4891, -1.1, -254.732, -300.212) - -916.289);
         }
        }
      }
     case 41:
     while(false)
      {
       atan(vec4(1.4, -237.224, 9.7, 140.646), vec4(151.065, -2.0, 969.141, -5.7));
       vec2 _GLF_SWITCH_0_31v, _GLF_SWITCH_0_32v;
       isnan(vec4(-3243.7869, 640.445, 77.38, 9179.4551));
       mat2x4 _GLF_SWITCH_0_33v, _GLF_SWITCH_0_34v;
       bool _GLF_SWITCH_0_35v[85], _GLF_SWITCH_0_36v;
      }
     default:
     1;
    }
  }
 else
  {
   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
    {
     case 57:
     _GLF_struct_17 _GLF_struct_replacement_17;
     case 0:
     case 67:
     case 13:
     case 40:
     case 30:
     case 44:
     atomicStore(checker[virtual_gid], read, 4, 64, 4);
     break;
     case 92:
     while(true)
      {
       if(all(bvec2(true, false)))
        {
         workgroup_base;
         mat3x2 _GLF_SWITCH_1_1v;
         lessThanEqual((ivec2(68404, 3550) * 43548), ivec2(-6848, -73995));
         mat3(mat2x4(-40.55, -8.7, -1.5, 9664.0267, 975.180, 9.4, -6234.6863, -3.7));
         while(true)
          {
           mat4 _GLF_SWITCH_1_2v[72];
           ivec2(-56397, -63566);
           mat2x3(mat4x2(620.611, -7.6, 7.0, 2.0, -95.47, 9.9, -82.82, -7.0));
           -64231;
           mat3x2 _GLF_SWITCH_1_3v[57], _GLF_SWITCH_1_4v[90], _GLF_SWITCH_1_5v;
          }
        }
       else
        {
         {
          (0.5 - vec4(2.1, -22.13, -6.2, 8.7));
          mat4x3 _GLF_SWITCH_1_6v[45], _GLF_SWITCH_1_7v;
          uvec2(74253u, 184289u);
          mat4x2(54.43, -519.696, -827.838, -7437.4437, 9.7, -6.9, -6.8, 976.497);
          ;
          bool _GLF_SWITCH_1_8v;
         }
         max(-4.2, -57.68);
         mat4x2 _GLF_SWITCH_1_9v, _GLF_SWITCH_1_10v[36], _GLF_SWITCH_1_11v;
         ;
         (mat4x3(mat3x2(-3082.4722, -50.31, 467.401, -603.449, -84.44, -3.0)) + mat4x3(4145.1472, 1552.8085, -47.89, -87.75, -66.75, 3052.7424, 2.2, -2.6, 326.216, 0.4, -6844.3591, -6.3));
         ((vec3(1681.1302, -2.1, 5063.1714) + -4.8));
         {
          atomicCompSwap(next_virtual_gid, (num_workgroup << subgroup_id), workgroup_id);
          mat4x2(571.471, -68.83, 6.3, -15.27, 1.9, 9490.1478, 6.4, -58.53);
          bvec3 _GLF_SWITCH_1_12v, _GLF_SWITCH_1_13v, _GLF_SWITCH_1_14v;
          _GLF_SWITCH_1_13v;
          ;
          (-906.067 / (_GLF_SWITCH_1_9v --));
          ivec2 _GLF_SWITCH_1_15v, _GLF_SWITCH_1_16v, _GLF_SWITCH_1_17v;
          -14495;
         }
         ;
        }
       while((mat4x3(4970.1593, -1770.0678, -8.9, 8.8, -88.63, 9.9, -8489.3861, 5.7, -6.6, -41.17, -5.4, 2506.4231) == mat4x3(-131.539, 7.6, -7.6, -2.3, 8674.7530, -444.739, -69.52, -1.1, -4.8, 906.004, -5.3, -8951.2754)))
        {
         isnan(vec4(4.6, -73.09, -596.546, 394.641));
         {
          bvec4 _GLF_SWITCH_1_18v[93], _GLF_SWITCH_1_19v[94], _GLF_SWITCH_1_20v;
          ivec2(59604, -56897);
          -20498;
          vec4 _GLF_SWITCH_1_21v, _GLF_SWITCH_1_22v[30], _GLF_SWITCH_1_23v[99];
          _GLF_struct_18 _GLF_struct_replacement_18;
          (uvec4(72857u, 163404u, 67046u, 14320u) % _GLF_struct_replacement_4._f0.workgroup_size);
          mat4x3 _GLF_SWITCH_1_25v, _GLF_SWITCH_1_26v;
          uvec4 _GLF_SWITCH_1_27v[86], _GLF_SWITCH_1_28v[51], _GLF_SWITCH_1_29v;
         }
        }
       bvec2 _GLF_SWITCH_1_30v;
       bool _GLF_SWITCH_1_31v, _GLF_SWITCH_1_32v, _GLF_SWITCH_1_33v[72];
       bvec3(true, true, true);
       while((mat2(-384.183, 5.1, 9.7, 2.1) != mat2(-1.5, -4937.5037, 557.954, 8.4)))
        {
         bvec4 _GLF_SWITCH_1_34v, _GLF_SWITCH_1_35v;
         uvec3 _GLF_SWITCH_1_36v;
         mat3x2(mat4x3(-5.4, 21.78, -7170.0715, -3.2, -1664.6452, -3.6, -5.6, -6.0, -9042.8741, -94.16, -2.7, 459.190));
         for(bvec4 _GLF_SWITCH_1_37v[4]; (_GLF_struct_replacement_4._f0.workgroup_size < subgroup_local_id); vec4(4.1, 0.9, 7908.3442, -5948.5912))
          {
           _GLF_SWITCH_1_35v;
           mat2x3 _GLF_SWITCH_1_38v, _GLF_SWITCH_1_39v[6], _GLF_SWITCH_1_40v;
           mat2x4 _GLF_SWITCH_1_41v;
           _GLF_SWITCH_1_40v;
          }
         {
          (mat3x2(28.00, -4317.8809, -335.482, -2.9, 5638.1808, 5.1) != mat3x2(-0.7, 2.4, -257.276, 8769.8407, -7.4, -212.318));
          mat3x4(6.3, 959.835, -3.0, -6.9, -7.0, 8.6, 6.9, -872.511, -2786.1096, 80.99, 3.8, -2084.0081);
          vec3(-2.5, -8.9, -6493.8646);
         }
         mat2x4 _GLF_SWITCH_1_42v, _GLF_SWITCH_1_43v;
         {
          ivec4(85105, 19692, -8105, -48361);
          (_GLF_SWITCH_1_30v);
          ivec2 _GLF_SWITCH_1_44v[40];
          mat4 _GLF_SWITCH_1_45v[20], _GLF_SWITCH_1_46v;
          (3.4 / vec2(63.48, 1134.0288));
          _GLF_SWITCH_1_30v;
         }
         for(         transpose((-383.643 / _GLF_SWITCH_1_42v));
 _GLF_SWITCH_1_31v; mat3x4(76.33, -3.8, -267.329, -9774.9999, 3743.4320, 4.8, 9.2, -139.131, -4456.7153, 1.5, -7.3, -52.49))
          {
           uvec2(85447u, 14353u);
           vec3(5.7, -9200.1221, 9.4);
           true;
           ivec2(7240, -43927);
           mat3x2(-957.300, 47.40, -6355.6098, -1.4, -0.4, -24.14);
           mat4x2 _GLF_SWITCH_1_47v, _GLF_SWITCH_1_48v, _GLF_SWITCH_1_49v;
           mat2x3(7.6, -6.1, -68.73, 9.4, 5.0, 6.7);
           _GLF_SWITCH_1_42v;
           (- mat2x4(27.28, 315.700, 397.538, -84.97, -7.3, 1.5, -9.9, -183.811));
          }
        }
       uvec2(bitfieldReverse(uvec4(73291u, 61921u, 39234u, 95551u)));
       num_workgroup;
       mat4 _GLF_SWITCH_1_50v, _GLF_SWITCH_1_51v, _GLF_SWITCH_1_52v;
      }
     case 82:
     mat3x4(-87.17, -64.78, 4.1, -5.9, 2.2, 881.636, -4640.5566, 9726.8505, -6669.0633, -215.365, 7.1, 82.05);
     default:
     1;
    }
  }
}
