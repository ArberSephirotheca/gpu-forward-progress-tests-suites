#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_3 {
 mat4x2 _f0;
 vec2 _f1;
 uvec2 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_1 {
 mat2 _f0;
} ;

struct _GLF_struct_0 {
 mat4 _f0;
 mat3 _f1;
 mat4 _f2;
 float _f3;
 mat2x3 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
} ;

struct _GLF_struct_5 {
 uint workgroup_id;
 _GLF_struct_2 _f0;
 _GLF_struct_4 _f1;
 mat4x3 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id;
 uvec4 GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, true && ((false) && true))) && true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           return;
          }
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   do
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         continue;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           return;
          }
         else
          {
          }
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) || false)))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      break;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, determinant(mat3(1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y))), true, true))))))))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), ! (! (bool(bvec3(_GLF_DEAD(false), true, true))))))), bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (_GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec4(bool(bvec3(false, false, true)), true, false, true)))) && true))), true, true)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), ! (! (bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(true, bool(bool(true)))))))))), true, false, true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(0, min(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
          {
           return;
          }
        }
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
       barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   do
    {
     GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x = subgroup_id;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     barrier();
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))))), ((! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false)))))) && true)), (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))))), ((! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false)))))) && true))) || false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0)), mix(float(float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0))), float(_GLF_FUZZED(9871.4038)), bool(false)))) : _GLF_FUZZED(59.44))))) || (_GLF_WRAPPED_LOOP(false)))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z = GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x;
uint subgroup_size = 16;
 GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w = subgroup_size;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      break;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     for(int _injected_loop_counter = (((1 ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) + 0)) - 0), int(_GLF_IDENTITY(int(0), ~ (~ (int(0))))))) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) - 0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, ~ (~ (4))), 4))), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
      {
       GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w = subgroup_local_id;
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
          barrier();
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           break;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         break;
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          break;
         barrier();
        }
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     barrier();
    }
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, (_injected_loop_counter != 1) && true)); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / 1))
  {
   do
    {
     GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.y = num_workgroup;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    break;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-984.541, -87.68)))).x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (true ? gl_WorkGroupSize.x : _GLF_IDENTITY(_GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.y), min(_GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.y), _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.y)))));
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ (0 | 0))); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
     return;
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (0 ^ 1), false || (_injected_loop_counter != (0 ^ 1)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      continue;
    }
  }
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(4u), uvec3(4u)))) ^ _GLF_IDENTITY((gl_WorkGroupID), min((gl_WorkGroupID), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), max(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, 0u) | ((gl_WorkGroupID))), _GLF_IDENTITY(_GLF_IDENTITY(min((gl_WorkGroupID), (gl_WorkGroupID)), uvec3(0u, 0u, 0u) ^ (min((gl_WorkGroupID), (gl_WorkGroupID)))), (min((gl_WorkGroupID), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))))) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) * uvec3(1u, 1u, 1u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), max(_GLF_IDENTITY((gl_WorkGroupID), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min((gl_WorkGroupID), (gl_WorkGroupID)), _GLF_IDENTITY(uvec3(uvec3(min((gl_WorkGroupID), (gl_WorkGroupID)))), (_GLF_IDENTITY(uvec3(uvec3(min((gl_WorkGroupID), (gl_WorkGroupID)))), uvec3(uvec3(uvec3(uvec3(min((gl_WorkGroupID), (gl_WorkGroupID)))))))) | (uvec3(uvec3(min((gl_WorkGroupID), (gl_WorkGroupID))))))), uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u))) ^ (min((gl_WorkGroupID), (gl_WorkGroupID)))), (min((gl_WorkGroupID), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))))) ^ uvec3(0u, 0u, 0u))), (gl_WorkGroupID))), (_GLF_IDENTITY((gl_WorkGroupID), max(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), _GLF_IDENTITY(_GLF_IDENTITY(min((gl_WorkGroupID), (gl_WorkGroupID)), uvec3(0u, 0u, 0u) ^ (min((gl_WorkGroupID), (gl_WorkGroupID)))), (min((gl_WorkGroupID), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))))) ^ uvec3(0u, 0u, 0u))), uvec3(uvec4(_GLF_IDENTITY((gl_WorkGroupID), _GLF_IDENTITY(_GLF_IDENTITY(min((gl_WorkGroupID), (gl_WorkGroupID)), uvec3(0u, 0u, 0u) ^ (min((gl_WorkGroupID), (gl_WorkGroupID)))), (min((gl_WorkGroupID), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))))) ^ uvec3(0u, 0u, 0u))), (0u ^ 0u)))), (gl_WorkGroupID)))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((gl_WorkGroupID), max(_GLF_IDENTITY((gl_WorkGroupID), _GLF_IDENTITY(_GLF_IDENTITY(min((gl_WorkGroupID), (gl_WorkGroupID)), uvec3(0u, 0u, 0u) ^ (min((gl_WorkGroupID), (gl_WorkGroupID)))), (min((gl_WorkGroupID), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ (uvec3(0u, 0u, 0u) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u)))))))) ^ uvec3(0u, 0u, 0u))), (gl_WorkGroupID)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[2], (true ? gl_WorkGroupID[2] : _GLF_FUZZED(workgroup_size))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))[2], clamp(_GLF_IDENTITY(gl_WorkGroupID[2], ~ (~ (gl_WorkGroupID[2]))), gl_WorkGroupID[2], gl_WorkGroupID[2])), _GLF_IDENTITY(gl_WorkGroupID[2], max(gl_WorkGroupID[2], gl_WorkGroupID[2]))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[2], (true ? gl_WorkGroupID[2] : _GLF_FUZZED(workgroup_size))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))[2], clamp(_GLF_IDENTITY(gl_WorkGroupID[2], ~ (~ (gl_WorkGroupID[2]))), gl_WorkGroupID[2], gl_WorkGroupID[2])), _GLF_IDENTITY(gl_WorkGroupID[2], max(gl_WorkGroupID[2], gl_WorkGroupID[2])))))), (uvec3(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[2], (true ? gl_WorkGroupID[2] : _GLF_FUZZED(workgroup_size))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))[2], clamp(_GLF_IDENTITY(gl_WorkGroupID[2], ~ (~ (gl_WorkGroupID[2]))), gl_WorkGroupID[2], gl_WorkGroupID[2])), _GLF_IDENTITY(gl_WorkGroupID[2], max(gl_WorkGroupID[2], gl_WorkGroupID[2]))))))) | (uvec3(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[2], (true ? gl_WorkGroupID[2] : _GLF_FUZZED(workgroup_size))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))[2], clamp(_GLF_IDENTITY(gl_WorkGroupID[2], ~ (~ (gl_WorkGroupID[2]))), gl_WorkGroupID[2], gl_WorkGroupID[2])), _GLF_IDENTITY(gl_WorkGroupID[2], max(gl_WorkGroupID[2], gl_WorkGroupID[2]))))))))), uvec3(uvec3(uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[2], (true ? gl_WorkGroupID[2] : _GLF_FUZZED(workgroup_size))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))[2], clamp(_GLF_IDENTITY(gl_WorkGroupID[2], ~ (~ (gl_WorkGroupID[2]))), gl_WorkGroupID[2], gl_WorkGroupID[2])), _GLF_IDENTITY(gl_WorkGroupID[2], max(gl_WorkGroupID[2], gl_WorkGroupID[2])))))), (uvec3(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[2], (true ? gl_WorkGroupID[2] : _GLF_FUZZED(workgroup_size))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))[2], clamp(_GLF_IDENTITY(gl_WorkGroupID[2], ~ (~ (gl_WorkGroupID[2]))), gl_WorkGroupID[2], gl_WorkGroupID[2])), _GLF_IDENTITY(gl_WorkGroupID[2], max(gl_WorkGroupID[2], gl_WorkGroupID[2]))))))) | (uvec3(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[2], (true ? gl_WorkGroupID[2] : _GLF_FUZZED(workgroup_size))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))[2], clamp(_GLF_IDENTITY(gl_WorkGroupID[2], ~ (~ (gl_WorkGroupID[2]))), gl_WorkGroupID[2], gl_WorkGroupID[2])), _GLF_IDENTITY(gl_WorkGroupID[2], max(gl_WorkGroupID[2], gl_WorkGroupID[2])))))))))))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID), clamp(uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID))))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) + 0u))))), min(uvec3(1u), uvec3(1u))), (_GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(1u)))) | uvec3(0u, 0u, 0u)))) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u)))).x, _GLF_struct_2(_GLF_struct_0(mat4(1.0), mat3(1.0), mat4(1.0), 1.0, mat2x3(1.0), vec4(1.0)), _GLF_struct_1(mat2(1.0))), _GLF_struct_4(_GLF_struct_3(mat4x2(1.0), vec2(1.0), uvec2(1u), _GLF_IDENTITY(vec3(1.0), (vec3(1.0)) * vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6273.7368)), bool(false))), 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), (true ? _GLF_IDENTITY(1.0, (1.0) * 1.0) : _GLF_FUZZED(-2.7))), _GLF_IDENTITY(1.0, min(1.0, 1.0))))))), ivec2(1)), mat4x3(1.0));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), _GLF_IDENTITY(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), (injectionSwitch.x < injectionSwitch.y)) && ((true)))) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.1) : injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.1) : injectionSwitch.x)) > injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.1) : injectionSwitch.x)) > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(true, true && (true)) && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.1) : injectionSwitch.x)) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.1) : injectionSwitch.x)) > injectionSwitch.y))))))), false, false, false)))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) && true), true, false, false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))), ! (! (! (! (bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))))))))), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), (true && (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) && true))))))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_5.workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true))))) || _GLF_IDENTITY(false, false || (false)), bool(bvec4((_GLF_IDENTITY(false, true && (false))) || false, false, true, true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y = workgroup_base;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
    }
   else
    {
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, cos(0.0)))), _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 1.0)))))))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, uvec4(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size[0], GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size[1], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size[2], (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size[2]) ^ 0u), GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size[3])).w + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, (true ? _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size)) : _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.agrb))).z, clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z, (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z) | 0u), GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z, GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z)))) * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size) ^ uvec4(0u, 0u, 0u, 0u)), ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size)))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size))))), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size), ~ (~ ((GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size)))) ^ uvec4(0u, 0u, 0u, 0u)), ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size)))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size)))))) ^ uvec4(0u, 0u, 0u, 0u)).w + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w, uint(uvec3(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size[0], (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size[0]) << 0u), GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size[1], GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size[2], GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size[3])))).z * GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, (true ? GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size : _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size))).w + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w) + 0u), 0u, 0u)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z, clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z, (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z) | 0u), GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z, GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z)))) * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, _GLF_IDENTITY(max(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size), (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id) : _GLF_IDENTITY(max(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size), uvec4(0u, 0u, 0u, 0u) ^ (max(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size))))))) ^ uvec4(0u, 0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size) << uvec4(0u, 0u, 0u, 0u))))))))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, _GLF_IDENTITY(~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size)), uvec4(0u, 0u, 0u, 0u) | (~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size))))))).w + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id), ((GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id)) * uvec4(1u, 1u, 1u, 1u)) * _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), (true ? uvec4(1u, 1u, 1u, 1u) : _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id)))).w, uint(uvec3(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y, ~ (~ (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y)))) - 0u) + GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w, 0u, 0u))))), 1u * (~ ((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z, min(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z, min(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z, (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z) - 0u)) >> 0u), GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z)))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z, clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z, (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z) | 0u), GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z, GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z)))) * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size) ^ uvec4(0u, 0u, 0u, 0u)), ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size)))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, ~ _GLF_IDENTITY((~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size)), (_GLF_IDENTITY((~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size)), clamp((~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size)), _GLF_IDENTITY((~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size)), ((~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size))) << uvec4(0u, 0u, 0u, 0u)), (~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size))))) >> uvec4(0u, 0u, 0u, 0u))))).w + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w, uint(uvec3(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w, 0u, 0u))))))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w, _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z, clamp(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z, GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z, GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z)), (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, min(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size)).z, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size) * uvec4(1u, 1u, 1u, 1u)).z, _GLF_IDENTITY(0u | (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z), (0u | (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z)) >> 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))))) * GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w) | 0u)), min((GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z, (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, min(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size)).z, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size) * uvec4(1u, 1u, 1u, 1u)).z, 0u | (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))))) * GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w) | 0u)), (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z, (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, min(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size)).z, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size) * uvec4(1u, 1u, 1u, 1u)).z, 0u | (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)), 0u))))) * GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w) | 0u)))) * 1u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base) ^ uvec2(0u, 0u)).y + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size) ^ uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).z) - 0u))) * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size)))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size))))).w + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w, uint(uvec3(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w, 0u, 0u)))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base) ^ uvec2(0u, 0u)).y + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z, (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z) | (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z, (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z) - 0u))) * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size)))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size))))).w + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w, uint(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w, 0u, 0u), (uvec3(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w, 0u, 0u)) | (uvec3(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w, 0u, 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base) ^ uvec2(0u, 0u)).y + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), 0u ^ (_GLF_FUZZED(subgroup_id))) : _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, max(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size) + uvec4(0u, 0u, 0u, 0u)))).z) - 0u))) * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size)))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size))))).w + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w, uint(uvec3(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w, 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base) ^ uvec2(0u, 0u)).y + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z, (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z) - 0u))) * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size)))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size))))).w + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w) ^ (0u | 0u)), uint(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w, 0u, 0u), clamp(uvec3(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w, 0u, 0u), uvec3(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w, 0u, 0u), uvec3(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w, 0u, 0u)))))))) - uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(dot(vec2(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), exp(0.0))), dot(vec2(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), exp(_GLF_IDENTITY(0.0, log(1.0) + (0.0)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size)))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size), clamp(~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size), ~ _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size), (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size), ((GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size)) ^ (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(4u), uvec4(4u))))) - uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size), _GLF_IDENTITY((~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size)) >> uvec4(0u, 0u, 0u, 0u), ~ (~ (_GLF_IDENTITY((~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size)) >> uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) ^ ((~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size)) >> uvec4(0u, 0u, 0u, 0u))))))))))))).w + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w, uint(uvec3(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y, uint(uvec4(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y, 0u, 0u, 1u))) + GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w)) + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w, 0u, 0u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size)))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size), clamp(~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size), ~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size), _GLF_IDENTITY(~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size), (~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size)) >> uvec4(0u, 0u, 0u, 0u)))))))), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size)))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size), clamp(~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size), ~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size), _GLF_IDENTITY(~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size), (~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size)) >> uvec4(0u, 0u, 0u, 0u))))))))) ^ uvec4(0u, 0u, 0u, 0u)).w + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w, uint(uvec3(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y, uint(uvec4(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y, 0u, 0u, 1u))) + GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w)) + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w, 0u, 0u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base) << uvec2(0u, 0u))) >> uvec2(0u, 0u)).y + GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w, (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w) / _GLF_IDENTITY(1u, (1u) / 1u)) + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size)))) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size))), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size)))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size))))))).w + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w, uint(uvec3(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, max(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size))))).z * GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w, 0u + (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w) ^ _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 0u)))), min(~ (_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 0u)))), ~ (_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 0u))))))))))), 0u, 0u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), int(ivec2(int(8), 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), max(int(0), int(0))))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 uint next_virtual_gid = GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w, (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w) >> 0u) + ((GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w + 1) % GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))))) || false)))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1))); _injected_loop_counter ++)
    {
     return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.x = _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) / 1u) >> 0u), (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.x = _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u)) ^ 0u);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(1.0)))) > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)))))
            barrier();
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.x = GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.x;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(0, max(0, 0)) << _GLF_IDENTITY(int(0), int(0))) ^ (64)), 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       else
        {
        }
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0))), 1.0, 0.0)), clamp(float(vec3(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0))), 1.0, 0.0)), float(vec3(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0))), 1.0, 0.0)), float(vec3(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0))), 1.0, 0.0)))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   return;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.z = read;
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
      }
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
        continue;
       if(_GLF_DEAD(false))
        return;
       break;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
  {
   for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, 0 ^ (_GLF_IDENTITY(7, (7) / 1)))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(7, 0 ^ (_GLF_IDENTITY(7, (7) / 1)))), clamp(int(_GLF_IDENTITY(7, 0 ^ (_GLF_IDENTITY(7, (7) / 1)))), int(_GLF_IDENTITY(7, 0 ^ (_GLF_IDENTITY(7, (7) / 1)))), int(_GLF_IDENTITY(7, 0 ^ (_GLF_IDENTITY(7, (7) / 1)))))), int(_GLF_IDENTITY(7, 0 ^ (_GLF_IDENTITY(7, (7) / 1)))), int(_GLF_IDENTITY(7, 0 ^ (_GLF_IDENTITY(7, (7) / 1)))))), min(int(7), int(7))))) >> _GLF_IDENTITY(int(7), int(7))) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), max(int(5), _GLF_IDENTITY(int(5), max(int(5), int(5))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, int(int(5)))), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / 1)); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false)))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), clamp(int(5), int(5), _GLF_IDENTITY(int(5), 1 * (int(5))))))) >> _GLF_IDENTITY(int(5), int(5)), clamp(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), clamp(int(5), int(5), _GLF_IDENTITY(int(5), 1 * (int(5))))))) >> _GLF_IDENTITY(int(5), int(5)), clamp((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), clamp(int(5), int(5), _GLF_IDENTITY(int(5), 1 * (int(5))))))) >> _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), clamp(int(5), int(5), _GLF_IDENTITY(int(5), 1 * (int(5))))))) >> _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), clamp(int(5), int(5), _GLF_IDENTITY(int(5), 1 * (int(5))))))) >> _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), clamp(int(5), int(5), _GLF_IDENTITY(int(5), 1 * (int(5))))))) >> _GLF_IDENTITY(int(5), int(5)), ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), clamp(int(5), int(5), _GLF_IDENTITY(int(5), 1 * (int(5))))))) >> _GLF_IDENTITY(int(5), int(5))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), clamp(int(5), int(5), _GLF_IDENTITY(int(5), 1 * (int(5))))))) >> _GLF_IDENTITY(int(5), int(5)), clamp((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), clamp(int(5), int(5), _GLF_IDENTITY(int(5), 1 * (int(5))))))) >> _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), clamp(int(5), int(5), _GLF_IDENTITY(int(5), 1 * (int(5))))))) >> _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), clamp(int(5), int(5), _GLF_IDENTITY(int(5), 1 * (int(5))))))) >> _GLF_IDENTITY(int(5), int(5))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      continue;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.y = GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.z;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.4))), (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 atomicStore(buf[GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.x], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   else
    {
    }
   barrier();
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(ivec3(int(7), 0, (-36958 & 0)))), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)), true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)))));
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      continue;
     return;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    continue;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    break;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
          barrier();
         do
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), 0 | (int(6)))))))); _injected_loop_counter ++)
              {
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false) && (false))))
              {
              }
             else
              {
               for(int _injected_loop_counter = (54776 & (0 >> _GLF_IDENTITY(int(7), int(7)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))))
                  continue;
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     continue;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, ! (! (true))), false, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false)))), true && (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false)))))))))), (false) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(false, true, false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false)))), true && (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false)))))))))), (false) || false))))), true))))))
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) || false))))
      {
       do
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))
      break;
     barrier();
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0)))) * 1.0))))))))
    {
     if(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w + _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) ^ 0)))), 0 ^ (max(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) - 0) | _GLF_IDENTITY((_GLF_IDENTITY(1, (1) ^ 0)), 0 + ((_GLF_IDENTITY(1, (1) ^ 0))))))))) < _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w, (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w) | (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w)), ! (! (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w + _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) ^ 0)))), 0 ^ (max(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) ^ 0))))))) < _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w, (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w) | (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w)), ! (_GLF_IDENTITY(! (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w + _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, ((1) ^ 0) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0 ^ (max(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) ^ 0))))))) < _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w, (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w) | (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w))), true && (! (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_17next_virtual_gidnum_workgroupreadsubgroup_local_id.w + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) << (0 << _GLF_IDENTITY(int(4), int(4)))) ^ 0)))), 0 ^ (max(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (1) ^ 0))))))) < _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w, (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w) | (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w)))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       int i = 0;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         continue;
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            break;
           return;
          }
         barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             do
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
            }
          }
         else
          {
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec2(false || (false), true))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          continue;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         atomicStore(checker[virtual_gid], GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.y, 4, _GLF_IDENTITY(64, (64) | (64)), 4);
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))), false, true, true)))) || false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
               barrier();
              }
            }
           break;
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             barrier();
            }
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            continue;
           barrier();
          }
         continue;
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 return;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
       atomicStore(checker[virtual_gid], GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.y, 4, 64, 4);
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        break;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
}
