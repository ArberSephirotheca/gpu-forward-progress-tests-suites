#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(exp((790.904 / vec2(-2890.3913, -630.238)))))).x > injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(exp((790.904 / vec2(-2890.3913, -630.238)))))).x > injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(exp((790.904 / vec2(-2890.3913, -630.238)))))).x > injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))), true), false, true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 1u), ~ (~ (uvec4(gl_WorkGroupSize, 1u)))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), min(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) / 1.0), mix(float(_GLF_FUZZED(-395.759)), float(_GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) / 1.0)), bool(true))) + 0.0), injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! ((! (false))), true && (! ((! (_GLF_IDENTITY(false, ! (! (false))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | (((subgroup_local_id + 1) % subgroup_size)))) | 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (false), true && (true && (false))), ! (! (_GLF_IDENTITY(true && (false), true && (true && (false))))))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), false)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), false)), false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))))))), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(! (! (! _GLF_IDENTITY((! (false)), ((! (false))) || false))), ! (! (! (! (! _GLF_IDENTITY((! (false)), ((! (false))) || false))))))))), false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! _GLF_IDENTITY((! (false)), ((! (false))) || false))), (_GLF_IDENTITY(! (! (! _GLF_IDENTITY((! (false)), ((! (false))) || false))), (! (! (! _GLF_IDENTITY((! (false)), ((! (false))) || false)))) || false)) || false), ! (! (! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), ((! (false))) || false))))))))), false))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))))))), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(! (! (! _GLF_IDENTITY((! (false)), ((! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((false), ! (! ((false)))))))) || false))), ! (! (! (! (! _GLF_IDENTITY((! (false)), ((! (false))) || false))))))))), false))))), ! (! (! _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false)))))))), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), false || ((! (false)))), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(! (! (! _GLF_IDENTITY((! (false)), ((! (false))) || false))), ! (! (! (! (! _GLF_IDENTITY((! (false)), ((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), (_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false)))))) && true))))) || false))))))))), false))))), (((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false)))))))), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), false || ((! (false)))), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(! (! (! _GLF_IDENTITY((! (false)), ((! (false))) || false))), ! (! (! (! (! _GLF_IDENTITY((! (false)), ((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), (_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false)))))) && true))))) || false))))))))), false)))))) && true)))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))))))), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(! (! (! _GLF_IDENTITY((! (false)), ((! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((false), ! (! ((false)))))))) || false))), ! (! (! (! (! _GLF_IDENTITY((! (false)), ((! (false))) || false))))))))), false))))), ! (! (! _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false)))))))), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), false || ((! (false)))), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(! (! (! _GLF_IDENTITY((! (false)), ((! (false))) || false))), ! (! (! (! (! _GLF_IDENTITY((! (false)), ((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), (_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false)))))) && true))))) || false))))))))), false))))), (((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false)))))))), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), false || ((! (false)))), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(! (! (! _GLF_IDENTITY((! (false)), ((! (false))) || false))), ! (! (! (! (! _GLF_IDENTITY((! (false)), ((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), (_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false)))))) && true))))) || false))))))))), false)))))) && true)))))), bool(bvec3((! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))))))), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(! (! (! _GLF_IDENTITY((! (false)), ((! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((false), ! (! ((false)))))))) || false))), ! (! (! (! (! _GLF_IDENTITY((! (false)), ((! (false))) || false))))))))), false))))), ! (! (! _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false)))))))), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), false || ((! (false)))), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(! (! (! _GLF_IDENTITY((! (false)), ((! (false))) || false))), ! (! (! (! (! _GLF_IDENTITY((! (false)), ((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), (_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false)))))) && true))))) || false))))))))), false))))), (((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false)))))))), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), false || ((! (false)))), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(! (! (! _GLF_IDENTITY((! (false)), ((! (false))) || false))), ! (! (! (! (! _GLF_IDENTITY((! (false)), ((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), (_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false)))))) && true))))) || false))))))))), false)))))) && true)))))), false, true)))) || false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))))], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) * 1), min(_GLF_IDENTITY(64, (64) * 1), _GLF_IDENTITY(64, (64) * _GLF_IDENTITY(1, (1) * 1)))), 0);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, 0 | (0))], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))).y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), false, true)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))))))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).y)), true)))))))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-83576) : _GLF_IDENTITY(1, clamp(1, 1, 1)))), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u)))) | 0u)), (uint(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u)))) | 0u))) | (uint(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u)))) | 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(-83576, 0 + (_GLF_IDENTITY(-83576, 0 ^ (-83576))))) : _GLF_IDENTITY(1, clamp(1, 1, 1)))), (subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-83576) : _GLF_IDENTITY(1, clamp(1, 1, 1))))) - 0u), max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) ? _GLF_FUZZED(_GLF_IDENTITY(-83576, (true ? _GLF_IDENTITY(-83576, (-83576) << 0) : _GLF_FUZZED((-55595 >> 670))))) : _GLF_IDENTITY(1, clamp(1, 1, 1)))), (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) ? _GLF_FUZZED(_GLF_IDENTITY(-83576, (true ? _GLF_IDENTITY(-83576, (-83576) << 0) : _GLF_FUZZED((-55595 >> 670))))) : _GLF_IDENTITY(1, clamp(1, 1, 1))))) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) ? _GLF_FUZZED(_GLF_IDENTITY(-83576, (true ? _GLF_IDENTITY(-83576, (-83576) << 0) : _GLF_FUZZED((-55595 >> 670))))) : _GLF_IDENTITY(1, clamp(1, 1, 1)))), min(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) ? _GLF_FUZZED(_GLF_IDENTITY(-83576, (true ? _GLF_IDENTITY(-83576, (-83576) << 0) : _GLF_FUZZED((-55595 >> 670))))) : _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), clamp(_GLF_IDENTITY(clamp(1, 1, 1), ~ (_GLF_IDENTITY(~ (clamp(1, 1, 1)), max(~ (clamp(1, 1, 1)), ~ (clamp(1, 1, 1)))))), _GLF_IDENTITY(clamp(1, 1, 1), (false ? _GLF_FUZZED(52177) : _GLF_IDENTITY(clamp(1, 1, 1), (true ? clamp(1, 1, 1) : _GLF_FUZZED(97061))))), clamp(1, 1, 1)))))), subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) ? _GLF_FUZZED(_GLF_IDENTITY(-83576, (true ? _GLF_IDENTITY(_GLF_IDENTITY(-83576, (-83576) << 0), min(_GLF_IDENTITY(-83576, (-83576) << 0), _GLF_IDENTITY(-83576, (-83576) << 0))) : _GLF_FUZZED((-55595 >> 670))))) : _GLF_IDENTITY(1, clamp(1, 1, 1)))))))), subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) / 1))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-83576, (-83576) + 0)) : _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | 0))), 0 | (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | 0))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-83576) : _GLF_IDENTITY(1, clamp(1, 1, 1)))), (subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-83576) : _GLF_IDENTITY(1, clamp(1, 1, 1))))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-83576) : _GLF_IDENTITY(1, clamp(1, 1, 1)))), (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id))))), subgroup_local_id)) + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-83576) : _GLF_IDENTITY(1, clamp(1, 1, 1))))) - 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-83576) : _GLF_IDENTITY(1, clamp(1, 1, 1)))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), (false ? _GLF_FUZZED(-68934) : _GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), clamp(int(_GLF_IDENTITY(1, 0 | (1))), int(_GLF_IDENTITY(1, 0 | (1))), int(_GLF_IDENTITY(1, 0 | (1)))))))), max(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), (false ? _GLF_FUZZED(-68934) : _GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), clamp(int(_GLF_IDENTITY(1, 0 | (1))), int(_GLF_IDENTITY(1, 0 | (1))), int(_GLF_IDENTITY(1, 0 | (1)))))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), (false ? _GLF_FUZZED(-68934) : _GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), clamp(int(_GLF_IDENTITY(1, 0 | (1))), int(_GLF_IDENTITY(1, 0 | (1))), int(_GLF_IDENTITY(1, 0 | (1))))))))))), (false ? _GLF_FUZZED(-83576) : _GLF_IDENTITY(1, clamp(1, 1, 1))))), ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), (false ? _GLF_FUZZED(-68934) : _GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), clamp(int(_GLF_IDENTITY(1, 0 | (1))), int(_GLF_IDENTITY(1, 0 | (1))), int(_GLF_IDENTITY(1, 0 | (1)))))))), max(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), (false ? _GLF_FUZZED(-68934) : _GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), clamp(int(_GLF_IDENTITY(1, 0 | (1))), int(_GLF_IDENTITY(1, 0 | (1))), int(_GLF_IDENTITY(1, 0 | (1)))))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), (false ? _GLF_FUZZED(-68934) : _GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), clamp(int(_GLF_IDENTITY(1, 0 | (1))), int(_GLF_IDENTITY(1, 0 | (1))), int(_GLF_IDENTITY(1, 0 | (1))))))))))), (false ? _GLF_FUZZED(-83576) : _GLF_IDENTITY(1, clamp(1, 1, 1)))))) | (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), (false ? _GLF_FUZZED(-68934) : _GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), clamp(int(_GLF_IDENTITY(1, 0 | (1))), int(_GLF_IDENTITY(1, 0 | (1))), int(_GLF_IDENTITY(1, 0 | (1)))))))), max(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), (false ? _GLF_FUZZED(-68934) : _GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), clamp(int(_GLF_IDENTITY(1, 0 | (1))), int(_GLF_IDENTITY(1, 0 | (1))), int(_GLF_IDENTITY(1, 0 | (1)))))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), (false ? _GLF_FUZZED(-68934) : _GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), clamp(int(_GLF_IDENTITY(1, 0 | (1))), int(_GLF_IDENTITY(1, 0 | (1))), int(_GLF_IDENTITY(1, 0 | (1))))))))))), (false ? _GLF_FUZZED(-83576) : _GLF_IDENTITY(1, clamp(1, 1, 1))))), max((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), (false ? _GLF_FUZZED(-68934) : _GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), clamp(int(_GLF_IDENTITY(1, 0 | (1))), int(_GLF_IDENTITY(1, 0 | (1))), int(_GLF_IDENTITY(1, 0 | (1)))))))), max(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), (false ? _GLF_FUZZED(-68934) : _GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), clamp(int(_GLF_IDENTITY(1, 0 | (1))), int(_GLF_IDENTITY(1, 0 | (1))), int(_GLF_IDENTITY(1, 0 | (1)))))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), (false ? _GLF_FUZZED(-68934) : _GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), clamp(int(_GLF_IDENTITY(1, 0 | (1))), int(_GLF_IDENTITY(1, 0 | (1))), int(_GLF_IDENTITY(1, 0 | (1))))))))))), (false ? _GLF_FUZZED(-83576) : _GLF_IDENTITY(1, clamp(1, 1, 1))))), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), (false ? _GLF_FUZZED(-68934) : _GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), clamp(int(_GLF_IDENTITY(1, 0 | (1))), int(_GLF_IDENTITY(1, 0 | (1))), int(_GLF_IDENTITY(1, 0 | (1)))))))), max(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), (false ? _GLF_FUZZED(-68934) : _GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), clamp(int(_GLF_IDENTITY(1, 0 | (1))), int(_GLF_IDENTITY(1, 0 | (1))), int(_GLF_IDENTITY(1, 0 | (1)))))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), (false ? _GLF_FUZZED(-68934) : _GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), clamp(int(_GLF_IDENTITY(1, 0 | (1))), int(_GLF_IDENTITY(1, 0 | (1))), int(_GLF_IDENTITY(1, 0 | (1))))))))))), (false ? _GLF_FUZZED(-83576) : _GLF_IDENTITY(1, clamp(1, 1, 1))))))))) - 0u), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (0u << _GLF_IDENTITY(uint(6u), uint(6u)))), max(uvec4(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-83576) : _GLF_IDENTITY(1, clamp(1, 1, 1)))), (subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-83576) : _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, (1) ^ ((0 | 0) >> _GLF_IDENTITY(int(6), int(6)))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0))), clamp(1, 1, 1))))) - 0u), 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), ~ (_GLF_IDENTITY(~ (1u << _GLF_IDENTITY(uint(0u), uint(0u))), uint(uvec4(_GLF_IDENTITY(~ (1u << _GLF_IDENTITY(uint(0u), uint(0u))), min(~ (1u << _GLF_IDENTITY(uint(0u), uint(0u))), ~ (1u << _GLF_IDENTITY(uint(0u), uint(0u))))), 0u, 1u, 0u)))))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (0u << _GLF_IDENTITY(uint(6u), uint(6u)))), uvec4(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-83576) : _GLF_IDENTITY(1, clamp(1, 1, 1)))), (subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-83576) : _GLF_IDENTITY(1, clamp(1, 1, 1))))) - 0u), 1u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), (0u << _GLF_IDENTITY(uint(6u), uint(6u))))))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-83576) : _GLF_IDENTITY(1, clamp(1, 1, 1)))), (subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-83576) : _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), min(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, 1))) + 0))), 1, 0)))))) - 0u), 1u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (0u << _GLF_IDENTITY(uint(6u), uint(6u)))), max(uvec4(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(-83576, int(_GLF_IDENTITY(ivec4(-83576, int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 0), clamp(ivec4(-83576, int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 0), ivec4(-83576, int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 0), _GLF_IDENTITY(ivec4(-83576, int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 0), ~ (~ (ivec4(-83576, int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 0))))))))) : _GLF_IDENTITY(1, clamp(1, 1, 1)))), (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(-83576) : _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0))), clamp(1, 1, 1)), (false ? _GLF_FUZZED(-83576) : _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0))), clamp(1, 1, 1))) ^ 0)))) - 0u), 1u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (0u << _GLF_IDENTITY(uint(6u), uint(6u)))), uvec4(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-83576) : _GLF_IDENTITY(1, clamp(1, 1, 1)))), (subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-83576) : _GLF_IDENTITY(1, clamp(1, 1, 1))))) - 0u), 1u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(uint(0u), uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))))) << 0u))) + 0u), max(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true), true, true)))))) ? _GLF_FUZZED(-83576) : _GLF_IDENTITY(1, clamp(1, 1, 1))), clamp((_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec3((false), false, true)))))) || false), ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) ? _GLF_FUZZED(-83576) : _GLF_IDENTITY(1, clamp(1, 1, 1))), (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) ? _GLF_FUZZED(_GLF_IDENTITY(-83576, max(_GLF_IDENTITY(-83576, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(-83576, (-83576) - 0), 0 + (_GLF_IDENTITY(-83576, (-83576) - 0))))), _GLF_IDENTITY(-83576, min(-83576, _GLF_IDENTITY(-83576, int(ivec4(-83576, 0, 0, 1)))))))) : _GLF_IDENTITY(1, clamp(1, 1, 1))), (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (injectionSwitch.x < injectionSwitch.y)), true))) ? _GLF_FUZZED(-83576) : _GLF_IDENTITY(1, clamp(1, 1, 1)))))), subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(-83576, (-83576) + 0)) : _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | 0)))))))))) << 0u))) < subgroup_size)
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(_GLF_DEAD(false), false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))) || false, false || ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))) || false))) && true)) && true))) || false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))), true && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-65.59), _GLF_FUZZED(2.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, ! (! (false))))) || false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), true && ((false))))), true && (! (! (_GLF_IDENTITY((false), true && ((false)))))))) && true), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false)))))) && true), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(true, ! (! (true))) && ((false))), false || _GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(true, ! (! (true))) && ((false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(true, ! (! (true))) && ((false)))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(true, ! (! (true))) && ((false)))), ! (! ((_GLF_IDENTITY((false), _GLF_IDENTITY(true, ! (! (true))) && ((false)))))))))))))))) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(true, ! (! (true))) && ((false)))))) && true, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(true, ! (! (true))) && ((false)))), (! (_GLF_IDENTITY((false), _GLF_IDENTITY(true, ! (! (true))) && ((false))))) && true))) && true, true, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false))), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec2(! (! (true)), false)))) && ((false)))))) && true, true, true), true)), true))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(true, ! (! (true))) && ((false)))))) && true, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(true, ! (! (true))) && ((false)))), (! (_GLF_IDENTITY((false), _GLF_IDENTITY(true, ! (! (true))) && ((false))))) && true))) && true, true, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false))), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec2(! (! (true)), false)))) && ((false)))))) && true, true, true), true)), true))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(true, ! (! (true))) && ((false)))))) && true, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(true, ! (! (true))) && ((false)))), (! (_GLF_IDENTITY((false), _GLF_IDENTITY(true, ! (! (true))) && ((false))))) && true))) && true, true, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false))), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec2(! (! (true)), false)))) && ((false)))))) && true, true, true), true)), true))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(true, ! (! (true))) && ((false)))))) && true, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(true, ! (! (true))) && ((false)))), (! (_GLF_IDENTITY((false), _GLF_IDENTITY(true, ! (! (true))) && ((false))))) && true))) && true, true, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false))), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec2(! (! (true)), false)))) && ((false)))))) && true, true, true), true)), true))))))))))) || false))), (injectionSwitch.x > injectionSwitch.y))) || false)) || false)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec4(false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), true)))))), false))), ! (! (_GLF_IDENTITY(bool(bool(bvec4(false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), true)))))), false))), bool(bvec3(bool(bool(bvec4(false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), true)))))), false))), false, false))))))), bool(bvec4(bool(bool(bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), true, false, true))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (bool(bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (false) && true)))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))) || false)))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.9)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, sqrt(1.0), 0.0, round(length(normalize(1.0)))), transpose(transpose(mat2x3(injectionSwitch, 1.0, sqrt(1.0), 0.0, round(length(normalize(1.0))))))))).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0 * (injectionSwitch.x), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(1.0 * (injectionSwitch.x), mix(float(1.0 * (injectionSwitch.x)), float(_GLF_FUZZED(-7.9)), bool(false))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, exp(sqrt(0.0)))), cos(0.0) * (float(mat3(_GLF_IDENTITY(1.0 * (injectionSwitch.x), mix(float(1.0 * (injectionSwitch.x)), float(_GLF_FUZZED(-7.9)), bool(false))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), exp(sqrt(0.0)))))))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0 * (injectionSwitch.x), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(1.0 * (injectionSwitch.x), mix(float(1.0 * (injectionSwitch.x)), float(_GLF_FUZZED(-7.9)), bool(false))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, exp(sqrt(0.0)))), cos(0.0) * (float(mat3(_GLF_IDENTITY(1.0 * (injectionSwitch.x), mix(float(1.0 * (injectionSwitch.x)), float(_GLF_FUZZED(-7.9)), bool(false))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), exp(sqrt(0.0)))))))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), sqrt(0.0), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0))).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0 * (injectionSwitch.x), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(1.0 * (injectionSwitch.x), mix(float(1.0 * (injectionSwitch.x)), float(_GLF_FUZZED(-7.9)), bool(false))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, exp(sqrt(0.0)))), cos(0.0) * (float(mat3(_GLF_IDENTITY(1.0 * (injectionSwitch.x), mix(float(1.0 * (injectionSwitch.x)), float(_GLF_FUZZED(-7.9)), bool(false))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0)), exp(sqrt(0.0)))))))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(9519.8182), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(9519.8182), mix(float(_GLF_FUZZED(-8.2)), float(_GLF_FUZZED(9519.8182)), bool(true))), 1.0, 1.0, 1.0, exp(abs(0.0)), 1.0, 0.0, 1.0)), min(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(9519.8182), mix(float(_GLF_FUZZED(-8.2)), float(_GLF_FUZZED(9519.8182)), bool(true))), 1.0, 1.0, 1.0, exp(abs(0.0)), 1.0, 0.0, 1.0)), max(float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(9519.8182), mix(float(_GLF_FUZZED(-8.2)), float(_GLF_FUZZED(9519.8182)), bool(true))), 1.0, 1.0, 1.0, exp(abs(0.0)), 1.0, 0.0, 1.0)), float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(9519.8182), mix(float(_GLF_FUZZED(-8.2)), float(_GLF_FUZZED(9519.8182)), bool(true))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, 1.0)), max(float(vec2(1.0, 1.0)), float(vec2(1.0, 1.0))))), 1.0, 1.0, exp(abs(0.0)), 1.0, 0.0, 1.0)))), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(9519.8182), (false ? _GLF_IDENTITY(_GLF_FUZZED(-7.9), (_GLF_FUZZED(-7.9)) / 1.0) : _GLF_FUZZED(9519.8182))), mix(float(_GLF_FUZZED(-8.2)), float(_GLF_FUZZED(9519.8182)), bool(true))), 1.0, 1.0, 1.0, exp(abs(0.0)), 1.0, 0.0, 1.0)))))), vec2(_GLF_FUZZED(-1.5), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.1) : injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat4((injectionSwitch)[0], 0.0, 1.0, 0.0, 0.0, cos(0.0), abs(0.0), sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))), _GLF_FUZZED(9493.3390)), vec2(_GLF_FUZZED(708.027), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (_GLF_IDENTITY(read, uint(uint(read)))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), ~ (~ (1u)))) >> 0u)), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)))))))))) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-965.868)), bool(false))), injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], float(mat3x4(injectionSwitch[1], 0.0, determinant(mat4(1.0, 0.0, sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, cos(0.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(350.718) : _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 0.0, 0.0, 1.0)), 1.0, determinant(mat2(1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0)), abs(1.0), 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0))))))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(! ((injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(! ((injectionSwitch.x > injectionSwitch.y))))))), ! (! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((! ((injectionSwitch.x > injectionSwitch.y)))), false || (! ((! ((injectionSwitch.x > injectionSwitch.y)))))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 0.0)))))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
