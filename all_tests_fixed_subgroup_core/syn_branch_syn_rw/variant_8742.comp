#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || ((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true)))))), true && (true && (_GLF_WRAPPED_IF_TRUE(true))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   do
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       for(int _injected_loop_counter = (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (1 | 0) * (1)) << _GLF_IDENTITY(int(7), int(7)), (1 << _GLF_IDENTITY(int(7), int(7))) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))) << _GLF_IDENTITY(int(7), int(7))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, (7) | (7)), 7)), min(_GLF_IDENTITY(7, (7) >> 0), 7))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(7) : _GLF_FUZZED(-44325))), int(7)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (1 | 0) * (1)) << _GLF_IDENTITY(int(7), int(7)), (1 << _GLF_IDENTITY(int(7), int(7))) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))) << _GLF_IDENTITY(int(7), int(7))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, (7) | (7)), 7)), min(_GLF_IDENTITY(7, (7) >> 0), 7))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(7) : _GLF_FUZZED(-44325))), int(7))) >> 0)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5253.8926)), bool(false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, int(ivec3(_injected_loop_counter, 1, 1))) > int(_GLF_ZERO(0.0, injectionSwitch.x)), true && (_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), _GLF_IDENTITY((_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), ((_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y)))), false, true, true)))))))) && true)); _injected_loop_counter --)
                        {
                         do
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             barrier();
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                      }
                     else
                      {
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))));
                  }
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
              }
            }
           else
            {
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), false, true, true)))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y)))), (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))) | (int(_GLF_ONE(1.0, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), false || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))));
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x4(3.0, -1016.4192, -8.3, _GLF_IDENTITY(-38.56, max(_GLF_IDENTITY(-38.56, clamp(-38.56, -38.56, -38.56)), -38.56)), 62.25, 765.511, 1600.3285, _GLF_IDENTITY(-45.19, (false ? _GLF_FUZZED(-1.7) : -45.19))))))))) - 0.0)))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, log(1.0), 0.0))))), 1.0) : _GLF_FUZZED(mat2x4(3.0, -1016.4192, -8.3, _GLF_IDENTITY(-38.56, max(_GLF_IDENTITY(-38.56, clamp(-38.56, -38.56, -38.56)), -38.56)), 62.25, 765.511, 1600.3285, _GLF_IDENTITY(-45.19, (false ? _GLF_FUZZED(-1.7) : -45.19))))))))) - 0.0))))) || false));
          }
        }
      }
     else
      {
      }
    }
  }
 else
  {
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 0, 1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0, (0) / 1) << _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
    {
    }
   else
    {
     barrier();
    }
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))), false || (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))))
      {
      }
     else
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, uint(uvec3(workgroup_size, 0u, 0u))) * workgroup_id;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) - 0u, 0u | ((workgroup_base) - 0u))), workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u, (0u) / (1u & 1u)) ^ _GLF_IDENTITY((subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_id * subgroup_size)), (~ ((subgroup_id * subgroup_size))) - 0u)))) + subgroup_local_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), injectionSwitch.y))))))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 else
  {
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (subgroup_size) << 0u)))))), subgroup_size, subgroup_size), uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), (0u | 0u))))))), (uint(uint(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), subgroup_size))))) + 0u)), (subgroup_id * subgroup_size) * 1u)))) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)))) | 0u))) | ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_size), uint(_GLF_IDENTITY(uint(true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_size)), max(uint(true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_size)), uint(true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_size))))))))))) % subgroup_size), max(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))) | ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), int(ivec4(1, 0, 0, 1)))))) % subgroup_size), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 1 * (1))))), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))) % subgroup_size)), clamp(~ ((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))) % subgroup_size)), ~ ((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))) % subgroup_size)), ~ ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | _GLF_IDENTITY(((subgroup_local_id + 1)), (((subgroup_local_id + 1))) << _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))))) % subgroup_size)))))))), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1)))) | ((subgroup_local_id + 1))) % subgroup_size)));
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << (0u ^ 0u))))) << 0u), 4, 64, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) >> 0));
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), true))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-47955) : _GLF_IDENTITY(0, clamp(0, 0, 0))))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
            barrier();
           do
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (1 & 1), ! (! (_GLF_IDENTITY(_injected_loop_counter != (1 & 1), false || (_injected_loop_counter != (1 & 1))))))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) ^ 0))
                {
                 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)), true, false), false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), subgroup_local_id)) + 1 < subgroup_size, true && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bool(subgroup_local_id + 1 < subgroup_size)), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1))) < subgroup_size), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), ~ (~ (subgroup_local_id + 1))) < subgroup_size)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), ~ (~ (subgroup_local_id + 1))) < subgroup_size))), false || (! (! (bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), ~ (~ (subgroup_local_id + 1))) < subgroup_size)))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), ~ (~ (subgroup_local_id + 1))) < subgroup_size))), false || (! (! (bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), ~ (~ (subgroup_local_id + 1))) < subgroup_size)))))), ((_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), ~ (~ (subgroup_local_id + 1))) < subgroup_size))), false || (! (! (bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), ~ (~ (subgroup_local_id + 1))) < subgroup_size))))))) || false), false))))))))))))), ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))), bool(bool(subgroup_local_id + 1 < subgroup_size))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), subgroup_local_id)) + 1 < subgroup_size, true && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bool(subgroup_local_id + 1 < subgroup_size)), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size, ! (! (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), ~ (~ (subgroup_local_id + 1))) < subgroup_size)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), ~ (~ (subgroup_local_id + 1))) < subgroup_size))), false || (! (! (bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, min((1) | 0, (1) | 0))), ~ (~ (subgroup_local_id + 1))) < subgroup_size)))))), bool(bvec4(! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), ~ (~ (subgroup_local_id + 1))) < subgroup_size))), false || (! (! (bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, min((1) | 0, (1) | 0))), ~ (~ (subgroup_local_id + 1))) < subgroup_size)))))), true, true, true))))))))))))), ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)) < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), false || (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))))) && true))))))))))))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), subgroup_local_id)) + 1 < subgroup_size, true && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bool(subgroup_local_id + 1 < subgroup_size)), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), ~ (~ (subgroup_local_id + 1))) < subgroup_size)), ! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), ~ (~ (subgroup_local_id + 1))) < subgroup_size))), false || (! (! (bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, min((1) | 0, (1) | 0))), ~ (~ (subgroup_local_id + 1))) < subgroup_size)))))))))))))))), ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), false || (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))))) && true))))))))))))) && true, ! (! ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), subgroup_local_id)) + 1 < subgroup_size, true && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bool(subgroup_local_id + 1 < subgroup_size)), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))))) + 1))) < subgroup_size), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), ~ (~ (subgroup_local_id + 1))) < subgroup_size)), ! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(91735)))))))) < subgroup_size))), false || (! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, min((1) | 0, (1) | 0))), ~ (~ (subgroup_local_id + 1))) < subgroup_size), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, min((1) | 0, (1) | 0))), ~ (~ (subgroup_local_id + 1))) < subgroup_size), (bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, min((1) | 0, (1) | 0))), ~ (~ (subgroup_local_id + 1))) < subgroup_size)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, min((1) | 0, (1) | 0))), ~ (~ (subgroup_local_id + 1))) < subgroup_size), (bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, min((1) | 0, (1) | 0))), ~ (~ (subgroup_local_id + 1))) < subgroup_size)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, min((1) | 0, (1) | 0))), ~ (~ (subgroup_local_id + 1))) < subgroup_size), (bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, min((1) | 0, (1) | 0))), ~ (~ (subgroup_local_id + 1))) < subgroup_size)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, min((1) | 0, (1) | 0))), ~ (~ (subgroup_local_id + 1))) < subgroup_size), (bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, min((1) | 0, (1) | 0))), ~ (~ (subgroup_local_id + 1))) < subgroup_size)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)))))))))))))))))))))), ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), false || (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(_GLF_IDENTITY(bool(subgroup_local_id + 1 < subgroup_size), ! (! (_GLF_IDENTITY(bool(subgroup_local_id + 1 < subgroup_size), bool(bool(bool(subgroup_local_id + 1 < subgroup_size)))))))))))) && true))))))))))))) && true)))), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), subgroup_local_id)) + 1 < subgroup_size, true && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bool(subgroup_local_id + 1 < subgroup_size)), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) / 1) | 0), ~ (~ _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))))) < subgroup_size)), ! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), ~ (~ (subgroup_local_id + 1))) < subgroup_size))), false || (! (! (bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) | (_GLF_IDENTITY(0, max(0, 0)))), min((1) | 0, (1) | 0))), ~ (~ (subgroup_local_id + 1))) < subgroup_size)))))))))))))))), ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(subgroup_local_id + 1, 1u, 0u))) < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), false || (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))))) && true))))))))))))) && true, ! (! ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), subgroup_local_id)) + 1 < subgroup_size, true && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bool(subgroup_local_id + 1 < subgroup_size)), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), ~ (~ (subgroup_local_id + 1))) < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)))) < subgroup_size) || false))), ! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), ~ (~ _GLF_IDENTITY((subgroup_local_id + 1), (0u >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u))))) ^ (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))))) < subgroup_size))), false || (! (! (bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, min((1) | 0, (1) | 0))), ~ (~ (subgroup_local_id + 1))) < subgroup_size)))))))))))))))), ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), false || (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), false || (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))))), false, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), false || (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))))), false, true, false))))))) && true))))))))))))) && true)))), false, true, false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | ((0u & 2808u) >> _GLF_IDENTITY(uint(7u), uint(7u)))) + 1 < subgroup_size, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bool(subgroup_local_id + 1 < subgroup_size)), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))), (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))) + 1))))), _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1, 1))) * 1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), ~ (~ (subgroup_local_id + 1)))))))) < subgroup_size), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))) ^ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))) < subgroup_size))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (~ (subgroup_local_id + 1)) : _GLF_FUZZED(subgroup_id)))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / (1u | (65010u & 0u)))))), (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (subgroup_local_id + 1) * 1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), ~ (~ (subgroup_local_id + 1)))))))) < subgroup_size), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))) ^ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))) < subgroup_size)))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 0u))), bool(bool(subgroup_local_id + 1 < subgroup_size))))), (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))))), (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), clamp(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, 1)))), subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))))) < subgroup_size)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), clamp(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))))) < subgroup_size)), ! (! (bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), clamp(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))))) < subgroup_size))))), bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), clamp(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))))) < subgroup_size)), ! (! (bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), clamp(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))))) < subgroup_size))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(true, true), false)), true))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(true, true), false)), true))))), true && (bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(true, true), false)), true))))))))), true && (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(true, true), false)), true))))), true && (bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(true, true), false)), true)))))))))))))), false))))))) && true))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bool(subgroup_local_id + 1 < subgroup_size)), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))), (_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) << 0u)))))) | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))) + 1))))), _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1, 1))) * 1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), ~ (~ (subgroup_local_id + 1))))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1, 1))) * 1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), ~ (~ (subgroup_local_id + 1))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1, 1))) * 1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), ~ (~ (subgroup_local_id + 1)))))))))) < subgroup_size), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))) ^ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))) < subgroup_size))))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (~ (subgroup_local_id + 1)) : _GLF_FUZZED(subgroup_id)))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / (1u | (65010u & 0u)))))), (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (subgroup_local_id + 1) * 1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), ~ (~ (subgroup_local_id + 1)))))))) < subgroup_size), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))) ^ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))) < subgroup_size)))))), bool(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (~ (subgroup_local_id + 1)) : _GLF_FUZZED(subgroup_id)))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / (1u | (65010u & 0u)))))), (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (subgroup_local_id + 1) * 1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), ~ (~ (subgroup_local_id + 1)))))))) < subgroup_size), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))) ^ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))) < subgroup_size)))))), true && ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (~ (subgroup_local_id + 1)) : _GLF_FUZZED(subgroup_id)))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / (1u | (65010u & 0u)))))), (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (subgroup_local_id + 1) * 1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), ~ (~ (subgroup_local_id + 1)))))))) < subgroup_size), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))) ^ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))) < subgroup_size)))))))), false))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_base, subgroup_id, workgroup_size)) : subgroup_local_id)))) + 1 < subgroup_size, true && (_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 0u))), bool(bool(subgroup_local_id + 1 < subgroup_size))))), (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)) || (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), clamp(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, 1)))), subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))))) < subgroup_size)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), clamp(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))))) < subgroup_size)), ! (! (bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), clamp(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))))) < subgroup_size))))), bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), clamp(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))))) < subgroup_size)), ! (! (bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), clamp(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))))) < subgroup_size))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(true, true), false)), true))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(true, true), false)), true))))), true && (bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(true, true), false)), true))))))))), true && (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(true, true), false)), true))))), true && (bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(true, true), false)), true)))))))))))))), false))))))) && true, bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), clamp(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, 1)))), subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))))) < subgroup_size)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), clamp(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))))) < subgroup_size)), ! (! (bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), clamp(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))))) < subgroup_size))))), bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), clamp(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))))) < subgroup_size)), ! (! (bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), clamp(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))))) < subgroup_size))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(true, true), false)), true))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(true, true), false)), true))))), true && (bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(true, true), false)), true))))))))), true && (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(true, true), false)), true))))), true && (bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(true, true), false)), true)))))))))))))), false))))))) && true, ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), clamp(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, 1)))), subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))))) < subgroup_size)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), clamp(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))))) < subgroup_size)), ! (! (bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), clamp(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))))) < subgroup_size))))), bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), clamp(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))))) < subgroup_size)), ! (! (bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), clamp(uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))))) < subgroup_size))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(true, true), false)), true))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(true, true), false)), true))))), true && (bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(true, true), false)), true))))))))), true && (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(true, true), false)), true))))), true && (bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(true, true), false)), true)))))))))))))), false))))))) && true) || false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1))) < subgroup_size, bool(bvec2(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), bool(bvec4(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), true, true, false))), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (1) ^ 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0) < subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1 < subgroup_size)), (bool(bool(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1 < subgroup_size))) || false), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u)) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))) ^ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), min(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) + 0), 1)))), subgroup_local_id + 1))), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u)) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))) ^ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), min(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) + 0), 1)))), subgroup_local_id + 1))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u)) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))) ^ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), min(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) + 0), 1)))), subgroup_local_id + 1))))) ^ 0u)))))) < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))), _GLF_IDENTITY(! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ _GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2((subgroup_local_id + 1), 1u))))) < subgroup_size))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size))), ((! (bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size)))) && true), false, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size))), ! (! ((! (bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size)))))), ((! (bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size)))) && true), false, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size))), ((! (bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size)))) && true), false, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))), (! (! (bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size)))) || false)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bool(subgroup_local_id + 1 < subgroup_size)), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size)), false || (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) + 0) : _GLF_FUZZED(75772)))))) < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), (_GLF_IDENTITY(1, (1) + 0)) | (_GLF_IDENTITY(1, (1) + 0))) : _GLF_FUZZED(75772)))))) < subgroup_size) || false))))), (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size)), false || (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) >> 0)))))) < subgroup_size) || false))), (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) >> 0)))))) < subgroup_size) || false))), ! (! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) >> 0)))))) < subgroup_size) || false))))))) && true)))) && true))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), max(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)))), _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))))))) + 1 < subgroup_size, _GLF_IDENTITY(bool(bool(subgroup_local_id + 1 < subgroup_size)), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) ^ 0u) < subgroup_size), (bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) ^ 0u) < subgroup_size)) || false), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size)), _GLF_IDENTITY(bool(bvec2(! _GLF_IDENTITY((bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size)), false || ((bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size)))), false)), (bool(bvec2(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size)), (! (bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size))) || false), false))) && true)))))))))), true, false)), bool(bool(bool(bvec3((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u ^ 0u)), subgroup_local_id)), clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (false ? _GLF_FUZZED(38972) : 1)) : _GLF_FUZZED(-79002)))) / 1) < subgroup_size)), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u)), (_GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), (1u ^ 1u) | (~ (~ (subgroup_local_id + 1))))) ^ _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))))) < subgroup_size), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) + _GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), max(~ (~ (subgroup_local_id + 1)), _GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), (~ (~ (subgroup_local_id + 1))) | (~ (~ (subgroup_local_id + 1))))))) < subgroup_size)), (! (bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size))) || false))))))))), true, false))))), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))))))) + 1 < subgroup_size, false || (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))))))) + 1 < subgroup_size)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec2(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)), _GLF_IDENTITY(true, true && (true))))))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size), ! (! (bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size), ! (! (bool(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), ~ (~ (~ (~ (subgroup_local_id + 1)))))) < subgroup_size))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u + _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) << 0u)), _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id))), uint(uint(subgroup_local_id))))))) + 1 < subgroup_size, _GLF_IDENTITY(bool(bool(subgroup_local_id + 1 < subgroup_size)), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size)), false || (_GLF_IDENTITY((bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size)), ((bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size))) || false))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size), ! (! (bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size)))))))))))))), true, false)), bool(bool(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(38972) : 1), 0 ^ (_GLF_IDENTITY((false ? _GLF_FUZZED(38972) : 1), ((false ? _GLF_FUZZED(38972) : 1)) | (0 << _GLF_IDENTITY(int(1), int(1))))))) : _GLF_FUZZED(-79002)))) / 1) < subgroup_size)), bool(bvec3(bool(bool(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(38972) : 1), 0 ^ (_GLF_IDENTITY((false ? _GLF_FUZZED(38972) : 1), ((false ? _GLF_FUZZED(38972) : 1)) | (0 << _GLF_IDENTITY(int(1), int(1))))))) : _GLF_FUZZED(-79002)))) / 1) < subgroup_size)), true, false))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u)), (_GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), (1u ^ 1u) | (~ (~ (subgroup_local_id + 1))))) ^ _GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), ~ (~ (_GLF_IDENTITY((0u), 0u | ((0u))))))))) < subgroup_size), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), (_GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), ~ (~ (~ (~ (subgroup_local_id + 1)))))) << 0u)) < subgroup_size)), (! (bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size))) || false))))))))), ! (! ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bool(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(38972) : 1), 0 ^ (_GLF_IDENTITY((false ? _GLF_FUZZED(38972) : 1), ((false ? _GLF_FUZZED(38972) : 1)) | (0 << _GLF_IDENTITY(int(1), int(1))))))) : _GLF_FUZZED(-79002)))) / 1) < subgroup_size)), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) >> ((0 << _GLF_IDENTITY(int(8), int(8))) >> _GLF_IDENTITY(int(6), int(6)))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u)), (_GLF_IDENTITY(~ (~ (subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1, (1) | (1)))))), (1u ^ 1u) | (~ (~ (subgroup_local_id + 1))))) ^ _GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), ~ (~ (_GLF_IDENTITY((0u), 0u | ((0u))))))))) < subgroup_size), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size)), (! (bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size))) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size)), (! (bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size))) || false))), false || (! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size)), (! (bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size))) || false))))))))))))))))), true, false)))))), false || ((_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))))))) + 1 < subgroup_size, false || (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))))))) + 1 < subgroup_size)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec2(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)), _GLF_IDENTITY(true, true && (true))))))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size), ! (! (bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size), ! (! (bool(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), ~ (~ (~ (~ (subgroup_local_id + 1)))))) < subgroup_size))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u + _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) << 0u)), _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id))), uint(uint(subgroup_local_id))))))) + 1 < subgroup_size, _GLF_IDENTITY(bool(bool(subgroup_local_id + 1 < subgroup_size)), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size)), false || (_GLF_IDENTITY((bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size)), ((bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size))) || false))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size), ! (! (bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size)))))))))))))), true, false)), bool(bool(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(38972) : 1), 0 ^ (_GLF_IDENTITY((false ? _GLF_FUZZED(38972) : 1), ((false ? _GLF_FUZZED(38972) : 1)) | (0 << _GLF_IDENTITY(int(1), int(1))))))) : _GLF_FUZZED(-79002)))) / 1) < subgroup_size)), bool(bvec3(bool(bool(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(38972) : 1), 0 ^ (_GLF_IDENTITY((false ? _GLF_FUZZED(38972) : 1), ((false ? _GLF_FUZZED(38972) : 1)) | (0 << _GLF_IDENTITY(int(1), int(1))))))) : _GLF_FUZZED(-79002)))) / 1) < subgroup_size)), true, false))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u)), (_GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), (1u ^ 1u) | (~ (~ (subgroup_local_id + 1))))) ^ _GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), ~ (~ (_GLF_IDENTITY((0u), 0u | ((0u))))))))) < subgroup_size), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), (_GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), ~ (~ (~ (~ (subgroup_local_id + 1)))))) << 0u)) < subgroup_size)), (! (bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size))) || false))))))))), ! (! ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bool(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(38972) : 1), 0 ^ (_GLF_IDENTITY((false ? _GLF_FUZZED(38972) : 1), ((false ? _GLF_FUZZED(38972) : 1)) | (0 << _GLF_IDENTITY(int(1), int(1))))))) : _GLF_FUZZED(-79002)))) / 1) < subgroup_size)), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) >> ((0 << _GLF_IDENTITY(int(8), int(8))) >> _GLF_IDENTITY(int(6), int(6)))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u)), (_GLF_IDENTITY(~ (~ (subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1, (1) | (1)))))), (1u ^ 1u) | (~ (~ (subgroup_local_id + 1))))) ^ _GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), ~ (~ (_GLF_IDENTITY((0u), 0u | ((0u))))))))) < subgroup_size), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size)), (! (bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size))) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size)), (! (bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size))) || false))), false || (! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size)), (! (bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size))) || false))))))))))))))))), true, false))))))))))) || false)), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - _GLF_IDENTITY(0u, (0u) | 0u)) + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))))))), ((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u), (true ? _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u) : _GLF_FUZZED(num_workgroup)))) + 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u), (true ? _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u) : _GLF_FUZZED(num_workgroup)))) + 0u))) + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) << 0), 1)) < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u) + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u) + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), true, true), true)))))))))) || false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), uint(uvec4(~ (subgroup_local_id), 1u, 1u, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), 0u ^ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))))), 0u, 1u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), clamp((subgroup_local_id) | (subgroup_local_id), _GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), ((subgroup_local_id) | (subgroup_local_id)) ^ 0u), (subgroup_local_id) | (subgroup_local_id)))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), 0u, 1u)) ^ uvec3(0u, 0u, 0u))))) - 0u) + _GLF_IDENTITY(1, min(1, 1)) < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))))))), ((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u) + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u) + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u) + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) - (0u ^ 0u)), bool(bool(subgroup_local_id + 1 < subgroup_size))), true, true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u) + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u) + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) - (0u ^ 0u)), bool(bool(subgroup_local_id + 1 < subgroup_size))), true, true), true))), false)))))))))) || false)), (bool(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u) + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u) + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u) + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id))) | (subgroup_local_id))) - 0u) + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), true, true), true)))))))))) || false), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u) + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u) + 1 < subgroup_size, bool(_GLF_IDENTITY(bool(subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(subgroup_local_id + 1 < subgroup_size)), ! (! (bool(bool(subgroup_local_id + 1 < subgroup_size)))))), false || (bool(_GLF_IDENTITY(bool(bool(subgroup_local_id + 1 < subgroup_size)), ! (! (bool(bool(subgroup_local_id + 1 < subgroup_size))))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u) + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), _GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> 0u), (subgroup_local_id))) | (subgroup_local_id))) - 0u) + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), true, true), true)))))))))) || false))))) || false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_IDENTITY(true, ! (! (true)))))
  {
   int i = 0;
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(1, int(ivec4(1, 0, 0, 1))) ^ 1)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(i)))), (_GLF_IDENTITY(int(1), int(1))) / 1)), ! (! (_GLF_IDENTITY(_injected_loop_counter < ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), ~ (_GLF_IDENTITY(~ (int(1)), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (int(1)))))), int(1))) >> _GLF_IDENTITY(int(1), int(1))), false || (_injected_loop_counter < ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), ~ (~ (int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) - 0))))), int(1))) >> _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, 0 | (1))))))))))); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
              barrier();
             barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), ! (! (bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY((0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), ((0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) | ((0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, (_injected_loop_counter != 1) || false)); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0), (mat2x3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(float(_GLF_IDENTITY(mat2x3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0), (mat2x3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0), (mat2x3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(float(_GLF_IDENTITY(mat2x3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0), (mat2x3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat2x3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0), (mat2x3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 for(int _injected_loop_counter = _GLF_IDENTITY((0 & 35046), max((0 & 35046), (0 & 35046))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))))
                      {
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                        {
                         atomicStore(checker[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)], read, 4, 64, 4);
                        }
                      }
                     else
                      {
                      }
                     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
                      {
                       do
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))
                            barrier();
                           barrier();
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                        {
                         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                          {
                           barrier();
                          }
                        }
                      }
                    }
                   else
                    {
                    }
                  }
                 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                }
               else
                {
                }
              }
             else
              {
              }
            }
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))))
        {
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-7.2)), vec2(_GLF_FUZZED(54.33), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
      barrier();
    }
  }
}
