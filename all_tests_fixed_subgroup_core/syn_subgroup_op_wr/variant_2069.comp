#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))) || false), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_DEAD(false), false, true, true))), ! (! (! (bool(bvec4(_GLF_DEAD(false), false, true, true))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bool(true))) && (false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))) >> uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), mix(float(_GLF_FUZZED(-1796.2108)), float(0.0 + (injectionSwitch.y)), _GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, ! (! (false)))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-22.84), _GLF_FUZZED(-56.94)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch))) * mat2(1.0)).x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y, true, false, false))))), false || (_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y)))) || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))), bool(bool(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), true, false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))) && true)) && true))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size), 1u * (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size))))), subgroup_id * subgroup_size)), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, (_GLF_IDENTITY(0u, (0u) << (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, 4u))), uint(4u))))) + uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) - 0u), 0u))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))), max(~ (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))), min(~ (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))), ~ (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))))))), 0u | (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))), max(~ (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))), min(~ (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))), ~ (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))))))))))) * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) << 0u), (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), uvec3(0u, 0u, 0u) + (uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) << 0u), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), uint(uint(_GLF_IDENTITY(uint(4u), uint(4u))))))))), (uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), max(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 1u))) * subgroup_size, subgroup_id * subgroup_size)))), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), clamp((0u << _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), ((0u << _GLF_IDENTITY(uint(4u), uint(4u)))) * 1u), (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))) + uvec3(0u, 0u, 0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), min(_GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), _GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u))))), uint(4u))), uint(4u)))), clamp(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), min(_GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), _GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u))))), uint(4u))), uint(4u)))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), min(_GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), _GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u))))), uint(4u))), uint(4u)))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), min(_GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), _GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u))))), uint(4u))), uint(4u)))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), min(_GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), _GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u))))), uint(_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u))))) * uvec3(1u, 1u, 1u)))), (uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)), 1u, 0u), (uvec3(_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)), 1u, 0u)) >> uvec3(0u, _GLF_IDENTITY(0u, (0u) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), 0u)))) * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), 0u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(subgroup_size) : 4u))), uint(4u))))) + uvec3(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u)), max(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id * subgroup_size))) ^ 0u), subgroup_id * subgroup_size)), 0u, (_GLF_IDENTITY(0u, ~ (~ (0u))) << _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), 0u | (_GLF_IDENTITY(0u, (0u) << (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) | (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))) + uvec3(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), subgroup_id * subgroup_size)))), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (0u)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, ~ (~ (0u)))), ~ (~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))), ~ (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) << 0u))) | (0u)))))))))), (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) + uvec3(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u)))) : _GLF_FUZZED(clamp(uvec3(183404u, 24417u, 16064u), uvec3(106294u, 26165u, 150212u), _GLF_IDENTITY(uvec3(171455u, 85407u, 99649u), (uvec3(171455u, 85407u, _GLF_IDENTITY(99649u, (true ? 99649u : _GLF_FUZZED(184795u))))) / uvec3(1u, 1u, 1u)))))))) >> (_GLF_IDENTITY(1u ^ 1u, 0u | (1u ^ 1u))))) + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) | (subgroup_local_id))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), uint(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 0u))), 1u))), _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1, ~ (~ (subgroup_local_id + 1))))))), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id))) | (subgroup_local_id)) + _GLF_IDENTITY(1, _GLF_IDENTITY(0, 0 | (0)) | (1)))), 0u | ((~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id))) | (subgroup_local_id)) + _GLF_IDENTITY(1, _GLF_IDENTITY(0, 0 | (0)) | (1)))))))))) - 0u)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) + 1) | 0u) : _GLF_FUZZED(workgroup_base)))))) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, 0, 0))), 1, 0)), (false ? _GLF_FUZZED(30410) : int(ivec3(_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, 0, 0))), 1, 0))))), ~ (~ (subgroup_local_id + 1)))))), max((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), clamp(((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))))) / 1u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / ((((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), (subgroup_local_id + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), min(_GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), min(~ (~ (subgroup_local_id + 1)), ~ (~ (subgroup_local_id + 1)))), _GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), max(_GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), (~ (~ (subgroup_local_id + 1))) - 0u), ~ (~ (subgroup_local_id + 1))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))))))) >> _GLF_IDENTITY((0u | 0u), ((0u | 0u)) << 0u))))), min((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) + 1, ~ (~ (subgroup_local_id + 1)))))), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))), uint(uvec2((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))), 0u))))))))), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), max(_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), _GLF_IDENTITY(uint(uvec2((~ (subgroup_local_id + 1)), 1u)), clamp(uint(uvec2((~ (subgroup_local_id + 1)), 1u)), uint(uvec2((~ (subgroup_local_id + 1)), 1u)), uint(uvec2((~ (subgroup_local_id + 1)), 1u)))))), _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))))), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1))), (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))) ^ 0u), (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))) | (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)))))))), ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), (~ (subgroup_local_id + 1)) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u))))), clamp((~ (subgroup_local_id + 1)), (~ (subgroup_local_id + 1)), (~ (subgroup_local_id + 1)))), (~ (subgroup_local_id + 1)), (~ (subgroup_local_id + 1)))))))))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, (1u & 1u))))) * 1u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(workgroup_id) : (subgroup_size))))) - 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_size)), 0u ^ (~ (~ (subgroup_size)))), min(_GLF_IDENTITY(~ (~ (subgroup_size)), uint(uvec4(~ (~ (subgroup_size)), 0u, 0u, 0u))), ~ (~ (subgroup_size)))), (~ (~ (subgroup_size))) - 0u))) - 0u))), clamp(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, (1u & 1u))))) * 1u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(workgroup_id) : (subgroup_size))))) - 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_size)), 0u ^ (~ (~ (subgroup_size)))), min(_GLF_IDENTITY(~ (~ (subgroup_size)), uint(uvec4(~ (~ (subgroup_size)), 0u, 0u, 0u))), ~ (~ (subgroup_size)))), (~ (~ (subgroup_size))) - 0u))) - 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, (1u & 1u))))) * 1u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(workgroup_id) : (subgroup_size))))) - 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_size)), 0u ^ (~ (~ (subgroup_size)))), min(_GLF_IDENTITY(~ (~ (subgroup_size)), uint(uvec4(~ (~ (subgroup_size)), 0u, 0u, 0u))), ~ (~ (subgroup_size)))), (~ (~ (subgroup_size))) - 0u))) - 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, (1u & 1u))))) * 1u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(workgroup_id) : (subgroup_size))))) - 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_size)), 0u ^ (~ (~ (subgroup_size)))), min(_GLF_IDENTITY(~ (~ (subgroup_size)), uint(uvec4(~ (~ (subgroup_size)), 0u, 0u, 0u))), ~ (~ (subgroup_size)))), (~ (~ (subgroup_size))) - 0u))) - 0u)))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(true, true && (true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), (1) ^ 0)), 0 + ((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, clamp(1, 1, 1)), 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(52457) : _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, clamp(1, 1, 1)), 1), (false ? _GLF_FUZZED(-10855) : clamp(1, _GLF_IDENTITY(1, clamp(1, 1, 1)), 1)))))), (1) ^ 0)))) | 0)))), 4, 64, 4);
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | _GLF_IDENTITY((64), int(_GLF_IDENTITY(ivec3((_GLF_IDENTITY(64, ~ (~ (64)))), 1, ((_GLF_IDENTITY(0, 0 | (0)) << _GLF_IDENTITY(int(0), int(0))) ^ 1)), (ivec3((64), 1, ((0 << _GLF_IDENTITY(int(0), int(0))) ^ 1))) >> ivec3(0, 0, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec4(0, 0, 1, 0))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, int(ivec4(0, 0, 1, 0))), ((0 ^ 0) << _GLF_IDENTITY(int(4), int(4))), 1), ~ (~ (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, int(ivec4(0, 0, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1)), 0))), ((0 ^ 0) << _GLF_IDENTITY(int(4), int(4))), 1), (false ? _GLF_FUZZED(ivec3(96840, -19730, 61801)) : ivec3(_GLF_IDENTITY(0, int(ivec4(0, 0, _GLF_IDENTITY(1, ~ (~ (1))), 0))), ((0 ^ _GLF_IDENTITY(0, (0) - 0)) << _GLF_IDENTITY(int(4), int(4))), 1)))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), injectionSwitch.y, injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2613.6197), _GLF_FUZZED(2.5)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-5.7)), float((injectionSwitch)[1]), bool(true)))), bvec2(true, true))).x)) > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4771.0423)), float(injectionSwitch.x), bool(true))), max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(reflect(injectionSwitch, smoothstep(-8432.2148, 1.1, _GLF_IDENTITY(vec2(-79.03, 255.732), max(vec2(-79.03, 255.732), _GLF_IDENTITY(vec2(-79.03, 255.732), (false ? _GLF_IDENTITY(_GLF_FUZZED(mix(vec2(0.0, 3.0), injectionSwitch, vec2(5915.2368, 11.02))), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(mix(vec2(0.0, 3.0), injectionSwitch, vec2(5915.2368, 11.02))), max(_GLF_FUZZED(mix(vec2(0.0, 3.0), injectionSwitch, vec2(5915.2368, 11.02))), _GLF_FUZZED(mix(vec2(0.0, 3.0), injectionSwitch, vec2(5915.2368, 11.02)))))), mix(vec2(_GLF_FUZZED((-6.1 + 50.01)), _GLF_FUZZED((1.3))), vec2((vec2(_GLF_IDENTITY(_GLF_FUZZED(mix(vec2(0.0, 3.0), injectionSwitch, vec2(5915.2368, 11.02))), max(_GLF_FUZZED(mix(vec2(0.0, 3.0), injectionSwitch, vec2(5915.2368, 11.02))), _GLF_FUZZED(mix(vec2(0.0, 3.0), injectionSwitch, vec2(5915.2368, 11.02)))))))[0], (vec2(_GLF_IDENTITY(_GLF_FUZZED(mix(vec2(0.0, 3.0), injectionSwitch, vec2(5915.2368, 11.02))), max(_GLF_FUZZED(mix(vec2(0.0, 3.0), injectionSwitch, vec2(5915.2368, 11.02))), _GLF_FUZZED(mix(vec2(0.0, 3.0), injectionSwitch, vec2(5915.2368, 11.02)))))))[1]), bvec2(true, true))))) : vec2(-79.03, 255.732)))))))))).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (injectionSwitch.x))), min(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (false ? _GLF_FUZZED(-1064.6302) : max(injectionSwitch.x, injectionSwitch.x))), max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, true && (true)))), (true) && true), true, true)))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-14.01)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-779.747) : injectionSwitch.x))))))), _GLF_ZERO(0.0, injectionSwitch.x))).y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, false, true, false)))))))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), clamp(vec2(injectionSwitch.y, 1.0), vec2(injectionSwitch.y, 1.0), vec2(injectionSwitch.y, 1.0)))), (true ? float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), clamp(vec2(injectionSwitch.y, 1.0), vec2(injectionSwitch.y, 1.0), vec2(injectionSwitch.y, 1.0)))) : _GLF_FUZZED(30.27)))) : _GLF_FUZZED(3497.0310))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, round(length(normalize(1.0))), 0.0))), injectionSwitch.y, injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      return;
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(46.59)), bool(false))))), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, sin(0.0))))))))))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, bool(bool(false))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), min(_GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(-1.6) : float(mat3(injectionSwitch.x, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))))), float(mat3(injectionSwitch.x, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))))))) > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (virtual_gid)), (_GLF_IDENTITY((~ (virtual_gid)), (false ? _GLF_FUZZED(virtual_gid) : (~ (virtual_gid))))) | ((~ _GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid)))))))], _GLF_IDENTITY(_GLF_IDENTITY(read, (read) << 0u), (read) | (_GLF_IDENTITY(read, 0u | (read)))), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, sqrt(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, sin(sin(0.0)), 0.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, abs(1.0), sin(0.0))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, bool(bvec3(true, true, false))), true)), true && (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, bool(bvec3(true, true, false))), true))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6900.4427)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, injectionSwitch.y))))))), 0.0)), 0.0)).y, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.6), _GLF_FUZZED(9876.8636)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0)) + vec2(0.0, 0.0)).y)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_IDENTITY(_GLF_FUZZED(-6900.4427), (_GLF_FUZZED(-6900.4427)) + 0.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), 0.0)), 0.0)).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0)) + vec2(0.0, 0.0)).y)))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6900.4427)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), 0.0)), 0.0)).y, _GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)) + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0)) + vec2(0.0, 0.0)).y), mix(float(_GLF_FUZZED(-1652.4128)), float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0)) + vec2(0.0, 0.0)).y), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0)) + vec2(0.0, 0.0)).y), float(mat3x4((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0)) + vec2(0.0, 0.0)).y), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0)) + vec2(0.0, 0.0)).y)))), bool(true)))))))))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6900.4427)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), 0.0)), 0.0)).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6900.4427)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6900.4427)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0)), 1.0 * (_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6900.4427)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0))))) / determinant(mat4(1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 1.0, 1.0))), 0.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6900.4427)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0)), 0.0)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6900.4427)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0)), 0.0)).y, float(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, determinant(mat3(0.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)) + (0.0))), float(_GLF_FUZZED(-6900.4427)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0)), 0.0)).y, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)) + vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6900.4427)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-297.305)), float(0.0), bool(true))), 0.0)), mix(float(0.0), float(_GLF_FUZZED(-6900.4427)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) - 0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6900.4427)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 0.0)), 0.0)).y)))), 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_IDENTITY(((injectionSwitch))[1], 0.0 + (((injectionSwitch))[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))]))), vec2(_GLF_FUZZED(975.202), _GLF_FUZZED(54.24)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) * vec2(1.0, 1.0)) + vec2(0.0, 0.0)).y))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - log(1.0)), (false ? _GLF_FUZZED(-9.9) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - log(1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - log(1.0)), clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - log(1.0)), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - log(1.0)), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - log(1.0)))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - log(1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), false)), false || (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), false)), false || (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), false)))), bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), false)), false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), (vec2(vec3(injectionSwitch, 0.0))) * mat2(1.0))).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, true, true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), (vec2(vec3(injectionSwitch, 0.0))) * mat2(1.0))).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, true, true))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - log(1.0)), (false ? _GLF_FUZZED(-9.9) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - log(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, abs(1.0))), min(float(vec3(1.0, 1.0, abs(1.0))), float(vec3(1.0, 1.0, abs(1.0)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - log(1.0)), clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - log(1.0)), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, min(injectionSwitch.y, injectionSwitch.y))) - log(1.0)), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - log(1.0)))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - log(1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), false)), false || (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), false)), false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, true, true))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, true, true))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, true, true))), false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, true, true))), false), false)), true, false)))), true, true)))))), bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), false)), false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), (vec2(vec3(injectionSwitch, 0.0))) * mat2(1.0))).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, true, true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), (vec2(vec3(injectionSwitch, 0.0))) * mat2(1.0))).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, true, true))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
}
