#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   switch(_GLF_SWITCH(0))
    {
     case 64:
     if(all(bvec2(false, true)))
      {
       for(mat3x2 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v; false; ivec4(16196, 88915, -83998, -27903))
        {
         (floatBitsToInt(injectionSwitch).s | -60466);
         {
          mat4x3(880.336, 2.2, 179.283, -2171.8486, -5908.4752, -989.508, 1.7, 22.00, 0.8, -6.1, -8.9, -9282.0908);
          -8051.6129;
          mat3x4(3375.8868);
          ;
          bvec4 _GLF_SWITCH_0_2v[92];
          (ivec2(74542, -32358) / bitfieldExtract(-40730, 28172, 64861));
          ;
         }
         while(true)
          {
          }
         max(vec4(-9752.7608, 9.4, 92.29, 6975.3613), -1.6);
         {
          (findLSB(uvec3(193465u, 159009u, 117139u)) - -36494);
          ivec4 _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v;
          mat4x3 _GLF_SWITCH_0_5v;
          uvec3 _GLF_SWITCH_0_6v[71];
          mat3 _GLF_SWITCH_0_7v[72], _GLF_SWITCH_0_8v[17];
         }
         ivec2 _GLF_SWITCH_0_9v, _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v;
         bool _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v;
         bvec2 _GLF_SWITCH_0_14v[81], _GLF_SWITCH_0_15v;
        }
       false;
       56.46;
       vec4(3.0, 981.223, 3501.2809, -76.84);
       {
        -0.0;
        if((subgroup_id >= subgroup_size))
         {
          (any(bvec3(false, false, true)) ? ivec2(19022, -206) : ivec2(-61528, 10485));
          mat2x3(mat3x2(918.551, -0.3, 88.28, -2613.4192, 889.287, -1302.8220));
          ivec4 _GLF_SWITCH_0_16v, _GLF_SWITCH_0_17v, _GLF_SWITCH_0_18v;
          uvec2 _GLF_SWITCH_0_19v[77];
          _GLF_SWITCH_0_16v;
          mat2x3(mat4x2(4248.4988, 84.25, 71.84, 487.692, -6.7, 6608.2694, roundEven(8.3), dot(vec4(0.7, 3.5, -347.221, -4.2), vec4(933.842, -830.959, 40.74, 1049.5016))));
          (mat3x2(-6.8, 6.8, 28.17, -40.39, 6716.5592, 3302.5212) + -995.207);
          ;
          bvec3 _GLF_SWITCH_0_20v[70], _GLF_SWITCH_0_21v[87], _GLF_SWITCH_0_22v[97];
         }
       }
       uvec2 _GLF_SWITCH_0_23v[55], _GLF_SWITCH_0_24v[42];
       bvec2 _GLF_SWITCH_0_25v;
       for(bvec3 _GLF_SWITCH_0_26v[39], _GLF_SWITCH_0_27v, _GLF_SWITCH_0_28v; bool(-69.81); mix(_GLF_SWITCH_0_27v, _GLF_SWITCH_0_28v, _GLF_SWITCH_0_27v))
        {
         (mat3(-5812.8196, 542.583, -5.1, 474.427, 334.397, -89.70, 33.48, -28.85, -9194.7634) - mat3(-94.30, -5.6, 83.61, 84.59, 2.7, 8.2, 2.9, -5.8, 8.2));
        }
      }
     case 79:
     (483.081 * (8634.5534 + injectionSwitch));
     case 0:
     case 5:
     case 98:
     case 39:
     case 73:
     case 20:
     atomicStore(checker[virtual_gid], read, 4, 64, 4);
     case 71:
     case 38:
     case 69:
     case 72:
     subgroupAll(false);
     break;
     case 78:
     float _GLF_SWITCH_0_29v;
     case 51:
     _GLF_SWITCH_0_29v;
     default:
     1;
    }
  }
 else
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   subgroupAll(true);
  }
}
