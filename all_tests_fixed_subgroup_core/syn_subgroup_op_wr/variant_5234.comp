#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), bool(bvec2(false, false)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), bool(bvec2(false, false)))))))), (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))), 0u, 0u) | _GLF_IDENTITY((gl_NumWorkGroups), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(_GLF_IDENTITY(12713u, (12713u) | 0u), 198826u, 13180u)), min(_GLF_FUZZED(uvec3(_GLF_IDENTITY(12713u, (12713u) | 0u), 198826u, 13180u)), _GLF_FUZZED(uvec3(_GLF_IDENTITY(12713u, (12713u) | 0u), 198826u, 13180u)))) : (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) >> _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch), (min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)) - vec2(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0))).x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)))), (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch), (min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, length(0.0), 1.0, exp(0.0), 1.0, 0.0, 0.0, length(0.0)), (true ? mat3(injectionSwitch, length(0.0), 1.0, exp(0.0), 1.0, 0.0, 0.0, length(0.0)) : _GLF_FUZZED(mat3(-3.6, 57.81, 7.2, 1443.9645, -15.10, -8.0, -8.4, 9552.9867, -11.65)))))))), injectionSwitch)) - vec2(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0))).x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x))))) | (uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(determinant(mat3(1.3, 84.54, -3.6, -725.596, 771.305, 702.484, -1.3, -368.115, -2.5))))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch), (min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)) - vec2(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0))).x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, (true ? (injectionSwitch.x) - 0.0 : _GLF_FUZZED(length(vec3(-58.02, 18.86, -567.228)))))), injectionSwitch.x))))))) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))) >> _GLF_IDENTITY(uvec3(4u), uvec3(4u))))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), true, false, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), true, false, false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) + 0.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-7.0), _GLF_FUZZED(563.913)), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * mat2(1.0)))))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), bool(bvec2(! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), false)))) && true)) && true)), ! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(94.87), _GLF_FUZZED(8.1)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(vec3((injectionSwitch)[1], 1.0, 0.0)), (float(vec3((injectionSwitch)[1], 1.0, 0.0))) - 0.0))), bvec2(true, true))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, 0u ^ _GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(192089u) : _GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(_GLF_IDENTITY(mat3((injectionSwitch) * mat2(1.0), 1.0, 0.0, 1.0, 1.0, tan(0.0), 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), (mat3((injectionSwitch) * mat2(1.0), 1.0, 0.0, 1.0, 1.0, tan(0.0), 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))).y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(52.04))), injectionSwitch.y)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), (mat3x4(injectionSwitch.y, 1.0, determinant(mat2(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0)), float(vec3(float(mat2x4(0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0)))))), 1.0)), 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-876.295) : 1.0))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))))) * mat3(1.0))), clamp(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), (mat3x4(injectionSwitch.y, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))))) * mat3(1.0))), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9984.5169)), float(0.0), bool(true))), 0.0)), 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), (mat3x4(injectionSwitch.y, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))))) * mat3(1.0))), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), (mat3x4(injectionSwitch.y, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))))) * mat3(1.0)))))), 1.0), (vec2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), (mat3x4(injectionSwitch.y, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))))) * mat3(1.0))), clamp(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0), vec3(0.0, 1.0, 0.0)))), (mat3x4(injectionSwitch.y, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.3)), float(_GLF_IDENTITY(1.0, (1.0) + 0.0)), bool(true))), 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))))) * mat3(1.0))), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), (mat3x4(injectionSwitch.y, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))))) * mat3(1.0))), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), clamp(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), min(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(-479.366)), float(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), bool(true))))), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), (mat3x4(injectionSwitch.y, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))))) * mat3(1.0)))))), 1.0)) * mat2(1.0)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9.3)), float(injectionSwitch.y), bool(true)))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9.3)), float(injectionSwitch.y), bool(true)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (true ? mat4x2((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9.3)), float(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, round(length(normalize(exp(vec4(0.0, 0.0, 0.0, 0.0))))), 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, determinant(mat2(1.0, 1.0, 0.0, exp(0.0))), sqrt(1.0), sqrt(1.0)))), 0.0, 1.0, 0.0))).y), _GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), ! (! (bool(true))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), bool(bvec3(bool(bvec3(true, false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4x2(-618.736, -0.2, -1.7, -1420.4562, 6.0, 7.4, -593.973, _GLF_IDENTITY(-4.2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5.6) : -4.2))))))), (float(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9.3)), float(injectionSwitch.y), bool(true)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (true ? mat4x2((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9.3)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))) || false))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))) : _GLF_FUZZED(mat4x2(-618.736, -0.2, -1.7, -1420.4562, 6.0, 7.4, -593.973, -4.2)))))) / 1.0)) + abs(0.0))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9.3)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9.3)), float(injectionSwitch.y), bool(true))), min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9.3)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9.3)), float(injectionSwitch.y), bool(true)))))) / 1.0)) + abs(0.0))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9.3)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, ! (! (true))))))) + abs(0.0)))) && true)) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || false)) || false))))))) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 1.0, cos(0.0), cos(0.0), 0.0, 1.0, determinant(mat2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 1.0, abs(1.0))), 1.0, 0.0, length(0.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4.6) : 0.0))))).y))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(vec2(-8586.4265, -1519.9464)) : vec2(1.0, 0.0))))), _GLF_IDENTITY(length(vec2(0.0, 0.0)), max(length(vec2(0.0, 0.0)), length(vec2(0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (abs(0.0)) + 0.0), mix(float(_GLF_FUZZED(-8.4)), float(_GLF_IDENTITY(abs(0.0), (abs(0.0)) + 0.0)), bool(true))), 1.0, 0.0, tan(0.0))), (float(mat4(1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 0.0)), dot(vec2(_GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-197.284)), float(1.0), bool(true))), 1.0, 1.0)), 0.0))), 0.0), vec2(1.0, 0.0))), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(249.493))), 1.0, 1.0, 1.0, 1.0, 1.0, abs(0.0), 1.0, 0.0, tan(0.0)))) + 0.0)), 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), log(1.0), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), mix(float(0.0), float(_GLF_FUZZED((+ -5630.9642))), bool(false))), 1.0), transpose(transpose(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (false ? _GLF_FUZZED(9479.7668) : _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), 0.0 + (_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), min(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), min(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), float(mat3x4(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))))), log(1.0), 0.0, 0.0, 0.0, 1.0)))))).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.8)), bool(false))), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((+ -9957.2395))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))) || false)) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))), uint(uint((subgroup_size)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(0u | (subgroup_size), 0u | (subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))), (false ? _GLF_IDENTITY(_GLF_FUZZED((subgroup_id * workgroup_size)), min(_GLF_FUZZED((subgroup_id * workgroup_size)), _GLF_IDENTITY(_GLF_FUZZED((subgroup_id * workgroup_size)), (_GLF_FUZZED((subgroup_id * workgroup_size))) << 0u))) : uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)) | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))))), clamp(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), ~ (~ (clamp(0u, 0u, 0u))))) | (subgroup_size)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> (0u & 90257u)) | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))), (_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) << 0u))) | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u)))) << 0u)))), uint(_GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(workgroup_id))), min(0u | (subgroup_size), 0u | _GLF_IDENTITY((subgroup_size), 0u ^ ((subgroup_size))))))))) + 0u)), (uint(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u), clamp((subgroup_size), (subgroup_size), _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u)) | 0u)) >> 0u))), 0u | (subgroup_size)))))) << 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), uint(uint((subgroup_size)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))), (false ? _GLF_FUZZED((subgroup_id * workgroup_size)) : uint(_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), min(0u | (subgroup_size), 0u | (subgroup_size)))))), clamp(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (subgroup_size)))), uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) * 1u) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))), min(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))), _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), uint(uvec2(((subgroup_size)), 1u))) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))))), (0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, _GLF_IDENTITY(max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u), 0u + (_GLF_IDENTITY(max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u), 1u * (max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u)))))))) << 0u)))), uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size))))))) + 0u)), (uint(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u), clamp((subgroup_size), (subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u))), 0u | (subgroup_size)))))) << 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), uint(uint((subgroup_size)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (subgroup_size), min(_GLF_IDENTITY(0u | (subgroup_size), clamp(_GLF_IDENTITY(0u | (subgroup_size), clamp(0u | (subgroup_size), 0u | (subgroup_size), 0u | (subgroup_size))), 0u | (subgroup_size), 0u | (subgroup_size))), 0u | (subgroup_size)))), (false ? _GLF_FUZZED((subgroup_id * workgroup_size)) : uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))))), clamp(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), min(_GLF_IDENTITY(clamp(0u, 0u, 0u), (true ? clamp(0u, 0u, 0u) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(clamp(0u, 0u, 0u), clamp(clamp(0u, 0u, 0u), clamp(0u, 0u, 0u), clamp(0u, 0u, 0u)))))) | (subgroup_size)))), uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))), min(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))), _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, _GLF_IDENTITY(max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u), min(_GLF_IDENTITY(max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u), (max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u)) * 1u), max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))))))), (_GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))), ~ (~ (_GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))), ~ (~ (0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u)))))))))) << 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size))), (_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))) * 1u))))) + 0u)), (uint(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u), clamp((subgroup_size), (subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u), clamp((subgroup_size), (subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u), clamp((subgroup_size), (subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u), clamp((subgroup_size), (subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u))))))), 0u | (subgroup_size)))))) << 0u))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), uint(uint((subgroup_size)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (subgroup_size), min(_GLF_IDENTITY(0u, 0u | (0u)) | (subgroup_size), 0u | (subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))), (false ? _GLF_FUZZED((subgroup_id * workgroup_size)) : uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))))), clamp(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (subgroup_size)))), uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))), min(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) | (((subgroup_size)))) - 0u))), _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))))), (0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u)))) << 0u)))), uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size))))))) + 0u)), (uint(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u), clamp((subgroup_size), (subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u))), 0u | (subgroup_size)))))) << 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), uint(uint((subgroup_size)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))), (false ? _GLF_FUZZED((subgroup_id * workgroup_size)) : uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))))), clamp(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (subgroup_size)))), uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u | _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))), min(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))), _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))))), _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))))), (0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u)))) << 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)) | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size))))))) + 0u)), (uint(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u), clamp((subgroup_size), (subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u))), 0u | (subgroup_size)))))) << 0u))), max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), uint(uint((subgroup_size)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))), (false ? _GLF_IDENTITY(_GLF_FUZZED((subgroup_id * workgroup_size)), (_GLF_IDENTITY(_GLF_FUZZED((subgroup_id * workgroup_size)), max(_GLF_FUZZED((subgroup_id * workgroup_size)), _GLF_FUZZED((subgroup_id * workgroup_size))))) ^ 0u) : uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))))), clamp(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (subgroup_size)))), uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))), min(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))), _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))))), (0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u)))) << 0u)))), uint(_GLF_IDENTITY(0u | (subgroup_size), min(_GLF_IDENTITY(0u | (subgroup_size), (0u | (subgroup_size)) / 1u), 0u | (subgroup_size))))))) + 0u)), (uint(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u), clamp((subgroup_size), (subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u))), 0u | (subgroup_size)))))) << 0u))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), uint(uint((subgroup_size)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))), (false ? _GLF_FUZZED((subgroup_id * workgroup_size)) : uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))))), clamp(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), clamp(0u, 0u, 0u)) | (subgroup_size)))), uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))), _GLF_IDENTITY(min(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))), _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u)))), 0u ^ (_GLF_IDENTITY(min(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))), _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u)))), clamp(min(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))), _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u)))), min(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))), _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u)))), min(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))), _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))))))))), (0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u)))) << 0u)))), uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size))))))) + 0u)), (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u | (subgroup_size), min(0u | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u), clamp((subgroup_size), (subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u))), 0u | (subgroup_size))), 0u ^ (_GLF_IDENTITY(0u | (subgroup_size), min(0u | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u), clamp((subgroup_size), (subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u))), 0u | (subgroup_size)))))))) << 0u))))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), uint(uint((subgroup_size)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))), (false ? _GLF_FUZZED((subgroup_id * workgroup_size)) : uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))))), clamp(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (subgroup_size)))), uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max((_GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), uint(uvec2((subgroup_size), 0u))), (subgroup_size)))) - 0u, _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u) - 0u))), min(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))), _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 1u)), (_GLF_IDENTITY(uint(uvec3(0u, 1u, 1u)), (uint(uvec3(0u, 1u, 1u))) | 0u)) >> 0u))))))), (0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u)))) << 0u)))), uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size))))))) + 0u)), (uint(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u), clamp((subgroup_size), (subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u))), 0u | (subgroup_size)))))) << 0u))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), uint(uint((subgroup_size)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))), (false ? _GLF_FUZZED((subgroup_id * workgroup_size)) : uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))))), clamp(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (subgroup_size)))), uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))), min(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))), _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))))), (0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), 0u, 0u, 0u))))) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u)))) << 0u)))), uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(subgroup_size)), min(uint(uint(subgroup_size)), uint(uint(subgroup_size)))))))), 0u | (subgroup_size))))))) + 0u)), (uint(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u), clamp((subgroup_size), (subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> _GLF_IDENTITY(0u, 1u * (0u))))), 0u | (subgroup_size)))))) << 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), uint(uint((subgroup_size)))), 0u + (0u | _GLF_IDENTITY((subgroup_size), uint(uint((subgroup_size)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))), min(0u | (subgroup_size), 0u | (subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))), (false ? _GLF_FUZZED((subgroup_id * workgroup_size)) : uint(_GLF_IDENTITY(_GLF_IDENTITY(0u | (subgroup_size), (0u | (subgroup_size)) | 0u), min(0u | (subgroup_size), 0u | (subgroup_size)))))), clamp(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (subgroup_size)))), uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | _GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size))), _GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))), (0u | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u)))) << 0u)))), uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))), 0u | ((_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))))), 0u | (subgroup_size))))))) + 0u)), (uint(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u), clamp((subgroup_size), (subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u))), 0u | (subgroup_size)))))) << 0u))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), uint(uint((subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)) | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)) | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)) | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)) | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)) | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)) | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size))))))) - (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size))), (_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))) >> 0u)), (false ? _GLF_FUZZED((subgroup_id * workgroup_size)) : uint(_GLF_IDENTITY(0u | (subgroup_size), min(_GLF_IDENTITY(0u, (0u) << 0u) | (subgroup_size), 0u | (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), subgroup_size)))))))), clamp(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (subgroup_size)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))), (0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u)), (_GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))) ^ 0u))) << 0u)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))), (0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u)))) << 0u))))), uint(uint(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))), (0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u)))) << 0u))))))))), uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u, ~ (~ (0u))) | (subgroup_size))))))) + 0u)), (uint(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u), clamp((subgroup_size), (subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u))), 0u | (subgroup_size)))))) << 0u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)) | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))), min(0u | (subgroup_size), 0u | (subgroup_size)))), (false ? _GLF_FUZZED(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), workgroup_size))), clamp((subgroup_id * _GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), workgroup_size))), (subgroup_id * _GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), workgroup_size))), (subgroup_id * _GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), workgroup_size)))))) : uint(_GLF_IDENTITY(0u | (subgroup_size), min(_GLF_IDENTITY(0u, (0u) << 0u) | (subgroup_size), 0u | (subgroup_size)))))), clamp(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) ^ 0u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))), (0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u)))) << 0u)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))), (0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u)))) << 0u))))), ~ (_GLF_IDENTITY(~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))), (0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u)))) << 0u)))))), clamp(~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))), (0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u)))) << 0u)))))), _GLF_IDENTITY(~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))), (0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u)))) << 0u)))))), 0u + (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))), (0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u)))) << 0u)))))))), ~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))), (0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u)))) << 0u))))))))))), uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u, ~ (~ (0u))) | (subgroup_size))))))) + 0u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)) | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))), (false ? _GLF_FUZZED((subgroup_id * workgroup_size)) : uint(_GLF_IDENTITY(0u | (subgroup_size), min(_GLF_IDENTITY(0u, (0u) << 0u) | (subgroup_size), 0u | (subgroup_size)))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u ^ ((subgroup_size)))) - 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), (clamp(0u, 0u, 0u)) / 1u)) | (subgroup_size)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u ^ ((subgroup_size)))) - 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), (clamp(0u, 0u, 0u)) / 1u)) | (subgroup_size)))), uint(uvec3(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u ^ ((subgroup_size)))) - 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), (clamp(0u, 0u, 0u)) / 1u)) | (subgroup_size)))), 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))))) << 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))), (0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u)))) << 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(57663u))), _GLF_IDENTITY(0u, (0u) << 0u)))))), (0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u)))) << 0u)))))), uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u, ~ (~ (0u))) | (subgroup_size))))))) + 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))))), ((subgroup_size)) << 0u), clamp((subgroup_size), (subgroup_size), _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), clamp(((subgroup_size)), ((subgroup_size)), ((subgroup_size)))) >> 0u))), 0u | (subgroup_size)))))) << 0u)) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / 1u), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), uint(uint((subgroup_size)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))), (false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))) * workgroup_size)) : uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))))), clamp(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (subgroup_size)))), uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))), (0u | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_size, subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))), (subgroup_size)))) - 0u, max(_GLF_IDENTITY(((subgroup_size)) - 0u, clamp(_GLF_IDENTITY(((subgroup_size)) - 0u, (((subgroup_size)) - 0u) / 1u), _GLF_IDENTITY(((subgroup_size)) - 0u, (_GLF_IDENTITY(((subgroup_size)) - 0u, uint(uvec4(((subgroup_size)) - 0u, 1u, 0u, 1u)))) << 0u), ((subgroup_size)) - 0u)), ((subgroup_size)) - 0u)))) << 0u)))), uint(_GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size)))), (~ (_GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))), (subgroup_size), (subgroup_size))))) - 0u))), min(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(~ (0u), (~ (0u)) | 0u))))) | (subgroup_size), _GLF_IDENTITY(0u | (subgroup_size), ~ (~ (_GLF_IDENTITY(0u | (subgroup_size), max(0u | (subgroup_size), 0u | (subgroup_size)))))))))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))), (false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))) * workgroup_size)) : uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))))), clamp(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (subgroup_size)))), uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))), (0u | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_size, subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))), (subgroup_size)))) - 0u, max(_GLF_IDENTITY(((subgroup_size)) - 0u, clamp(_GLF_IDENTITY(((subgroup_size)) - 0u, (((subgroup_size)) - 0u) / 1u), _GLF_IDENTITY(((subgroup_size)) - 0u, (_GLF_IDENTITY(((subgroup_size)) - 0u, uint(uvec4(((subgroup_size)) - 0u, 1u, 0u, 1u)))) << 0u), ((subgroup_size)) - 0u)), ((subgroup_size)) - 0u)))) << 0u)))), uint(_GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size)))), (~ (_GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))), (subgroup_size), (subgroup_size))))) - 0u))), min(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(~ (0u), (~ (0u)) | 0u))))) | (subgroup_size), _GLF_IDENTITY(0u | (subgroup_size), ~ (~ (_GLF_IDENTITY(0u | (subgroup_size), max(0u | (subgroup_size), 0u | (subgroup_size)))))))))))) + 0u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))), (false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))) * workgroup_size)) : uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))))), clamp(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (subgroup_size)))), uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))), (0u | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_size, subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))), (subgroup_size)))) - 0u, max(_GLF_IDENTITY(((subgroup_size)) - 0u, clamp(_GLF_IDENTITY(((subgroup_size)) - 0u, (((subgroup_size)) - 0u) / 1u), _GLF_IDENTITY(((subgroup_size)) - 0u, (_GLF_IDENTITY(((subgroup_size)) - 0u, uint(uvec4(((subgroup_size)) - 0u, 1u, 0u, 1u)))) << 0u), ((subgroup_size)) - 0u)), ((subgroup_size)) - 0u)))) << 0u)))), uint(_GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size)))), (~ (_GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))), (subgroup_size), (subgroup_size))))) - 0u))), min(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(~ (0u), (~ (0u)) | 0u))))) | (subgroup_size), _GLF_IDENTITY(0u | (subgroup_size), ~ (~ (_GLF_IDENTITY(0u | (subgroup_size), max(0u | (subgroup_size), 0u | (subgroup_size)))))))))))) + 0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))), (false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))) * workgroup_size)) : uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), 0u | (subgroup_size)))))), clamp(uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (subgroup_size)))), uint(_GLF_IDENTITY(0u | (subgroup_size), min(0u | (subgroup_size), _GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) - 0u, max(((subgroup_size)) - 0u, ((subgroup_size)) - 0u))), (0u | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_size, subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))), (subgroup_size)))) - 0u, max(_GLF_IDENTITY(((subgroup_size)) - 0u, clamp(_GLF_IDENTITY(((subgroup_size)) - 0u, (((subgroup_size)) - 0u) / 1u), _GLF_IDENTITY(((subgroup_size)) - 0u, (_GLF_IDENTITY(((subgroup_size)) - 0u, uint(uvec4(((subgroup_size)) - 0u, 1u, 0u, 1u)))) << 0u), ((subgroup_size)) - 0u)), ((subgroup_size)) - 0u)))) << 0u)))), uint(_GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size)))), (~ (_GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))), (subgroup_size), (subgroup_size))))) - 0u))), min(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(~ (0u), (~ (0u)) | 0u))))) | (subgroup_size), _GLF_IDENTITY(0u | (subgroup_size), ~ (~ (_GLF_IDENTITY(0u | (subgroup_size), max(0u | (subgroup_size), 0u | (subgroup_size)))))))))))) + 0u)))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_size)), min(~ ((subgroup_size)), ~ ((subgroup_size)))))), min(0u | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base)))), ((subgroup_size)) << 0u), clamp((subgroup_size), (subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u))), 0u | (subgroup_size)))), max(uint(_GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_size)), min(~ ((subgroup_size)), ~ ((subgroup_size)))))), min(0u | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base)))), ((subgroup_size)) << 0u), clamp((_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)), (subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u))), 0u | (subgroup_size)))), uint(_GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_size)), min(~ ((subgroup_size)), ~ ((subgroup_size)))))), min(0u | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base)))), ((subgroup_size)) << 0u), clamp((subgroup_size), (subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u))), 0u | (subgroup_size)))))))) << 0u))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))) + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | (subgroup_size), _GLF_IDENTITY(clamp(0u | (subgroup_size), 0u | (subgroup_size), 0u | (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))), (clamp(0u | (subgroup_size), 0u | (subgroup_size), 0u | (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))) * 1u)))), (~ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | (subgroup_size), clamp(0u | (subgroup_size), 0u | (subgroup_size), 0u | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) + 0u)) ^ 0u))))))) ^ ((1u ^ 1u) >> _GLF_IDENTITY(uint(4u), uint(4u)))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base, 0u, 1u, 0u)), min(_GLF_IDENTITY(uint(uvec4(workgroup_base, 0u, 1u, 0u)), (uint(uvec4(workgroup_base, 0u, 1u, 0u))) ^ 0u), _GLF_IDENTITY(uint(uvec4(workgroup_base, 0u, 1u, 0u)), ~ (~ (uint(uvec4(workgroup_base, 0u, 1u, 0u)))))))) + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size)), (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) ^ (50714u & 0u)))), 0u), clamp(uvec3(subgroup_size, (_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y))))) << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), uvec3(subgroup_size, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) ^ 0u)), uint(2u))), 0u), uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | (subgroup_size)), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) | (13057u & 0u))), 0u))))), subgroup_size, subgroup_size))), (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), clamp(uvec3(subgroup_size, (_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y))))) << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), uvec3(subgroup_size, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | (subgroup_size), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | (subgroup_size), ((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | (subgroup_size)) * 1u))))), (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), clamp(uvec3(subgroup_size, (_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y))))) << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), uvec3(subgroup_size, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), (0u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, ~ (~ (2u)))))), 0u))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), clamp(uvec3(subgroup_size, (_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y))))) << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), uvec3(subgroup_size, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | (subgroup_size)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), max(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | (subgroup_size)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | (subgroup_size)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u)))))) << uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(183741u, 27961u, 164302u)))))), subgroup_size, subgroup_size))), min(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), clamp(uvec3(subgroup_size, (_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y))))) << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), uvec3(subgroup_size, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | (subgroup_size)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u))))), subgroup_size, subgroup_size))), 0u ^ ((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), clamp(uvec3(subgroup_size, (_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y))))) << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), uvec3(subgroup_size, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), min(_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), min(clamp(subgroup_size, subgroup_size, subgroup_size), clamp(subgroup_size, subgroup_size, subgroup_size))), clamp(subgroup_size, subgroup_size, subgroup_size))))) | (subgroup_size)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u))))), subgroup_size, subgroup_size))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), clamp(uvec3(subgroup_size, (_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y))))) << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), uvec3(subgroup_size, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | (subgroup_size)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u))))), subgroup_size, subgroup_size)))))) << 0u) << 0u) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), false)), bool(bool(bool(bvec2(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), false))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false))))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))) && true)), false))))))), false || (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true))))))))))), bool(bvec2(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), false)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), false, true, true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) && true) && (_GLF_DEAD(false))))), bool(bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)) && (_GLF_DEAD(false))))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0)), (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0))) * mat2(1.0))), round(length(normalize(vec3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0), (true ? mat3x4(injectionSwitch, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat3x4(_GLF_IDENTITY(48.81, float(mat2x3(48.81, abs(1.0), 0.0, 0.0, log(1.0), 0.0))), 5394.3866, -12.36, _GLF_IDENTITY(-3.3, float(mat2x4(_GLF_IDENTITY(-3.3, min(-3.3, -3.3)), abs(1.0), 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0))), 3700.5608, 8804.6665, -97.41, -639.033, -7.3, -580.021, 96.25, -39.60))))), clamp(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(round(length(normalize(vec3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), 1.0, 1.0)))), min(round(length(normalize(vec3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), 1.0, 1.0)))), _GLF_IDENTITY(round(length(normalize(vec3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), 1.0, 1.0)))), (round(length(normalize(vec3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), 1.0, 1.0))))) - 0.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0), (true ? mat3x4(injectionSwitch, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat3x4(48.81, 5394.3866, -12.36, -3.3, 3700.5608, 8804.6665, -97.41, -639.033, -7.3, -580.021, 96.25, -39.60))))), vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, round(length(normalize(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))), min(max(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))), max(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))))), 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0), (true ? mat3x4(injectionSwitch, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0) : _GLF_FUZZED(mat3x4(48.81, 5394.3866, -12.36, -3.3, 3700.5608, 8804.6665, -97.41, -639.033, -7.3, -580.021, 96.25, -39.60))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, round(length(normalize(vec3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), min(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))))), 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0), (true ? mat3x4(injectionSwitch, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat3x4(48.81, 5394.3866, -12.36, -3.3, 3700.5608, 8804.6665, -97.41, -639.033, -7.3, -580.021, 96.25, -39.60))))), min(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, round(length(normalize(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((true ? -4.7 : -74.84)) : 1.0)))), max(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0), (true ? mat3x4(injectionSwitch, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat3x4(48.81, 5394.3866, -12.36, -3.3, 3700.5608, 8804.6665, -97.41, -639.033, -7.3, -580.021, 96.25, -39.60))))), vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, round(length(normalize(vec3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0), (true ? mat3x4(injectionSwitch, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat3x4(48.81, 5394.3866, -12.36, -3.3, 3700.5608, 8804.6665, -97.41, -639.033, -7.3, -580.021, 96.25, -39.60)))))))))), injectionSwitch)).x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0), (true ? _GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0)))) : _GLF_FUZZED(mat2x3(-2647.3788, -1029.6600, -9.4, 7.6, -677.433, -2.8))))), (float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0), (true ? _GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0)))) : _GLF_FUZZED(mat2x3(-2647.3788, -1029.6600, -9.4, 7.6, -677.433, -2.8)))))) / 1.0)))))) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false, true)))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false || (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), false, true))))))))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-45831)))) | 0)) << 0)) + 0), 64)), (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) - (1 ^ 1)), ~ (~ (_GLF_IDENTITY(64, (64) << 0))))) + _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) | (_GLF_IDENTITY(0, 0 | (0))))), 0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, false || (true)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) ^ 0), int(int(1))) < _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bool(false || (false))), true && (bool(bool(false || (false))))))) && true))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bool(false || (false))), true && (bool(bool(false || (false))))))) && true))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bool(false || (false))), true && (bool(bool(false || (false))))))) && true)))))) && true))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((64), int(ivec4((64), int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 1))) ^ 0, (_GLF_IDENTITY((64), int(ivec4((64), int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 1))) ^ 0) / int(_GLF_ONE(1.0, injectionSwitch.y)))), 1 * (_GLF_IDENTITY(64, (64) ^ 0))), 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))) && true))))), _GLF_IDENTITY(true, (true) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))) && true))))), _GLF_IDENTITY(true, (true) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))) && true))))), _GLF_IDENTITY(true, (true) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), mix(_GLF_IDENTITY(float(round(length(normalize(vec2(1.0, 1.0))))), (true ? float(round(length(normalize(vec2(1.0, 1.0))))) : _GLF_FUZZED(-815.626))), float(_GLF_FUZZED(-9.3)), bool(false)))), (false ? _GLF_FUZZED(vec3(-33.69, 8.2, -45.35)) : vec3(injectionSwitch, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), mix(float(round(length(normalize(vec2(1.0, 1.0))))), float(_GLF_FUZZED(-9.3)), bool(false)))))))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-391.193)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), ! (! (bool(bvec3(false, false, false))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)) && true), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(mat4x3(max(injectionSwitch, injectionSwitch), 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(min(vec2(1842.2804, -3.7), ldexp(injectionSwitch, ivec2(-99132, 7394)))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(-377.391), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(0.3)), bvec2(true, false)))) / vec2(1.0, 1.0)))).y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), false, true))), false, true)))) || false) || _GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))) || false) || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3((false), false, true))), false, true)))) || false) || _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! ((false)))) || false), bool(bvec3(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec3((false), _GLF_IDENTITY(false, (false) && true), true))), false, true)))) || false) || _GLF_IDENTITY(false, (false) || false), false, true))))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))), (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))), false))))) && true), false, false)))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-274.755) : injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(((mat4x2(-0.8, -3.7, 89.53, -3255.1871, 4.6, -5.7, 377.652, 2.5) / mat4x2(-5745.8585, 872.936, -3546.9226, -3.4, 4.3, -6.1, 8051.4282, 1.6)) * _GLF_IDENTITY(smoothstep(vec4(-45.31, -21.51, 2.1, 63.07), vec4(539.052, 3255.9041, -3.5, -9968.9707), vec4(192.303, -0.4, -16.40, 45.32)), (smoothstep(vec4(-45.31, -21.51, 2.1, 63.07), vec4(539.052, 3255.9041, -3.5, -9968.9707), vec4(192.303, -0.4, -16.40, 45.32))) / exp(vec4(0.0, 0.0, 0.0, 0.0))))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || (false)), false), true, true)))), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || (false)), false), true, true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || (false)), false), true, true)))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || (false)), false), true, true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || (false)), false), true, true)))))))), ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || (false)), false), true, true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || (false)), false), true, true))))))))) && true), false, true))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec2(! (! (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y))), bvec2(bvec2(bvec2(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3389.1619)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, sin(0.0), 0.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), transpose(transpose(mat2x4(injectionSwitch, 1.0, sin(0.0), 0.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, sin(0.0), 0.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), transpose(transpose(mat2x4(injectionSwitch, 1.0, sin(0.0), 0.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))))).x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))))), max(injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-49.08), _GLF_FUZZED(31.74)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(81.68)), bool(false)))), float(_GLF_FUZZED(-11.02)), bool(false))) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(81.68)), bool(false)))), float(_GLF_FUZZED(-11.02)), bool(false))) > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(276.482))), mix(float(_GLF_IDENTITY((injectionSwitch.x) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(276.482))), min((injectionSwitch.x) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(276.482), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))) + (_GLF_IDENTITY(_GLF_FUZZED(276.482), (true ? _GLF_FUZZED(276.482) : _GLF_FUZZED(tan(-51.80)))))))), (injectionSwitch.x) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(276.482)))))), float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), min(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), bool(false)))) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-600.079)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))
      barrier();
    }
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], read, 4, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) + 0)) << 0), _GLF_IDENTITY(64, ~ (~ (64))), 64)), 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true)) || _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
