#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch)))).y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, false || (((false)) && true))), (true && _GLF_IDENTITY((false), ((false)) && true)) && true))))
  return;
uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-88.71 - -7202.3625)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(127.271)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5518.2931, -7221.0872)) : injectionSwitch)), injectionSwitch), clamp(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5518.2931, -7221.0872)) : injectionSwitch)), injectionSwitch), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5518.2931, -7221.0872)) : injectionSwitch)), injectionSwitch), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5518.2931, -7221.0872)) : injectionSwitch)), injectionSwitch)))).x, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5518.2931, -7221.0872)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, 0.0)), (true ? vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(vec2(14.50, 2998.4122))))))), injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) ? _GLF_FUZZED(exp2(vec2(-3.3, 378.564))) : injectionSwitch), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))) ? _GLF_FUZZED(exp2(vec2(-3.3, 378.564))) : injectionSwitch)) * mat2(1.0))), clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(5518.2931, -7221.0872), min(vec2(5518.2931, -7221.0872), vec2(5518.2931, -7221.0872)))) : injectionSwitch)), injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-742.465), _GLF_FUZZED(-9.5)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(mat2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)), 1.0, 0.0)))[0], min(_GLF_IDENTITY((injectionSwitch), vec2(mat2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)), 1.0, 0.0)))[0], _GLF_IDENTITY((injectionSwitch), vec2(mat2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)), 1.0, 0.0)))[0])), min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(mat2(_GLF_IDENTITY((injectionSwitch), ((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))) + vec2(0.0, 0.0)), 1.0, 0.0)))[0], (false ? _GLF_FUZZED(-3.3) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(mat2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)), 1.0, 0.0)))[0], (_GLF_IDENTITY((injectionSwitch), vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), ((injectionSwitch)) + vec2(0.0, 0.0)), 1.0, 0.0)))[0]) - 0.0))), _GLF_IDENTITY((injectionSwitch), vec2(mat2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)), 1.0, 0.0)))[0])), (injectionSwitch)[1]), bvec2(true, true))), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(5518.2931, -7221.0872)) : injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(5518.2931, -7221.0872)) : injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (false ? _GLF_FUZZED(vec2(5518.2931, -7221.0872)) : injectionSwitch), max(mat2(1.0) * (false ? _GLF_FUZZED(vec2(5518.2931, -7221.0872)) : injectionSwitch), mat2(1.0) * (false ? _GLF_FUZZED(vec2(5518.2931, -7221.0872)) : injectionSwitch)))))))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5518.2931, -7221.0872)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))) * mat2(1.0))))), injectionSwitch)).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5518.2931, _GLF_IDENTITY(-7221.0872, (-7221.0872) - 0.0))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))), injectionSwitch)).x, (false ? _GLF_FUZZED(-8.9) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(5518.2931, (5518.2931) * 1.0), -7221.0872)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch)).x))) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_IDENTITY(_GLF_FUZZED(vec2(5518.2931, -7221.0872)), sqrt(sqrt(vec2(0.0, 0.0))) + (_GLF_FUZZED(vec2(5518.2931, -7221.0872)))) : injectionSwitch, min(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_IDENTITY(_GLF_FUZZED(vec2(5518.2931, -7221.0872)), sqrt(sqrt(vec2(0.0, 0.0))) + (_GLF_FUZZED(vec2(5518.2931, -7221.0872)))) : injectionSwitch, _GLF_IDENTITY(false, bool(bool(false))) ? _GLF_IDENTITY(_GLF_FUZZED(vec2(5518.2931, -7221.0872)), sqrt(sqrt(vec2(0.0, 0.0))) + (_GLF_FUZZED(vec2(5518.2931, -7221.0872)))) : injectionSwitch)))), injectionSwitch), (true ? _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5518.2931, -7221.0872)) : injectionSwitch)), injectionSwitch), (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5518.2931, -7221.0872)) : injectionSwitch)), injectionSwitch)) * mat2(1.0)) : _GLF_FUZZED(unpackSnorm2x16(num_workgroup))))).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5518.2931, -7221.0872)) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)))), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, exp(0.0)))) : _GLF_FUZZED(vec2(-4.3, -41.32)))), (false ? _GLF_FUZZED(vec2(5518.2931, -7221.0872)) : injectionSwitch)), injectionSwitch)).x)) > injectionSwitch.y)) || false))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_IDENTITY(false, (false) || false))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(false || (bool(bvec2(false, false))), bool(bvec2(false || (bool(bvec2(false, false))), true))))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), (! (! (false))) || false), true && (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! _GLF_IDENTITY((false), ! (! ((false)))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))) || false)), true && (false)), false)), _GLF_IDENTITY(true && (bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), ! (! (true && _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), bool(bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), ((bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))) && true)))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), bool(bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), ((bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))) && true)))), false), false, true)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (! _GLF_IDENTITY((false), ! (! ((false)))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))) || false)), true && (false)), false)), _GLF_IDENTITY(true && (bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), ! (! (true && _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), bool(bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), ((bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))) && true)))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), bool(bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), ((bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))) && true)))), false), false, true)))))))))), ((! (! _GLF_IDENTITY((false), ! (! ((false)))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))) || false)), true && (false)), false)), _GLF_IDENTITY(true && (bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), ! (! (true && _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), bool(bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), ((bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))) && true)))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), bool(bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), ((bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))) && true)))), false), false, true))))))))))) && true)), (! (_GLF_IDENTITY((! (! _GLF_IDENTITY((false), ! (! ((false)))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))) || false)), true && (false)), false)), _GLF_IDENTITY(true && (bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), ! (! (true && _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), bool(bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), ((bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))) && true)))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), bool(bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), ((bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))) && true)))), false), false, true)))))))))), ((! (! _GLF_IDENTITY((false), ! (! ((false)))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), false))))), ((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), false)))))) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), false))))), ((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), false)))))) && true), false)))))) || false)), true && (false)), false)), _GLF_IDENTITY(true && (bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), ! (! (true && _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), false), false, false))))), bool(bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), ((bool(bvec2(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))), false)))) && true)))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), bool(bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), ((bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))) && true)))), ! (! (_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), bool(bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), ((bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))) && true))))))), false), false, true))))))))))) && true))) && true)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false), _GLF_IDENTITY(true && (_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ((! (false))) || false), (! (! (false))) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)), true && (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (_GLF_IDENTITY(true && (false), ! (! (true && (false))))))), false))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)), true && (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (_GLF_IDENTITY(true && (false), ! (! (true && (false))))))), false))))))))), bool(bvec4(true && (_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ((! (false))) || false), (! (! (false))) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)), true && (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (_GLF_IDENTITY(true && (false), ! (! (true && (false))))))), false))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)), true && (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (_GLF_IDENTITY(true && (false), ! (! (true && (false))))))), false))))))))), false, false, true)))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY((bool(bvec3(false, true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(radians(injectionSwitch)))).y))))), ! (! ((bool(bvec3(false, true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(radians(injectionSwitch)))).y))))))))))))) || false), true && (_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ((! (false))) || false), (! (! (false))) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (_GLF_IDENTITY(true && (false), ! (! (true && (false))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (_GLF_IDENTITY(true && (false), ! (! (true && (false))))))), false), true))))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)), true && (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (_GLF_IDENTITY(true && (false), ! (! (true && (false))))))), false)))))), (false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)), true && (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))) && (_GLF_IDENTITY(true && (false), ! (! (true && (false))))))), false))))))) && true)))))))) && true)))) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id)) * subgroup_size)) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0)), vec2(mat3(vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0)), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, tan(0.0), round(length(normalize(vec2(1.0, 1.0)))), 1.0))))) + abs(vec2(0.0, 0.0))).x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(6.1) : _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), (float(mat4x2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))) * 1.0)))), injectionSwitch.x)) - 0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), _GLF_ZERO(0.0, injectionSwitch.x)))) | (subgroup_local_id)) + _GLF_IDENTITY(1, (1) * 1), 0u | (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0)))) + abs(vec2(0.0, 0.0))).x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - _GLF_IDENTITY(0.0, min(0.0, 0.0))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), _GLF_ZERO(0.0, injectionSwitch.x)))) | (subgroup_local_id)) + 1))) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)), false)))))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)), false))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)), false))))))), bool(bool(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)), false))))))))))))))), true && (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(! (! (false)), true && (! (! (false))))))), bool(bvec4(_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))))), _GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), (! _GLF_IDENTITY((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (false))))) && true)))))))), false)), bool(bvec3(bool(bvec2(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (! (false))))))), false)), true, false)))), false, true, false))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))), true && (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(_GLF_IDENTITY(! ((false)), ! (! (! ((false))))), true)))))), (! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(_GLF_IDENTITY(! ((false)), ! (! (! ((_GLF_IDENTITY(false, (false) || false)))))), true))))))) || false)))))), _GLF_IDENTITY(false || (! _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))))), ! (! (((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false)))))))))))), true && (bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))))), ! (! (((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false)))))))))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))))), ! (! (((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false)))))))))))), true && (bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))))), ! (! (((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false)))))))))))))))), (bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))))), ! (! (((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false)))))))))))), true && (bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))))), ! (! (((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))))))))))))))) || false)) || false)))), ! (! (false || (! _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec4((false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec4((false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false)))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-2.4))), injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (! (false))))))), ! (! (((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), true && _GLF_IDENTITY((! (! (false))), ! (! (_GLF_IDENTITY((! (! (false))), ((! (! (false)))) && true))))))))))))), true && (bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))), true && (! (! (false))))))), ! (! (((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(27.52)), bool(false))) < injectionSwitch.y))), true && (! (! (false)))))))))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))), true && (! (! (false))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false)))))))))), bool(_GLF_IDENTITY(bool(((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))))))))), false || (_GLF_IDENTITY(bool(((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))))))))), ! (! (bool(((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false)))))))))))))))))), ! (! (((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y))), true && (! (! (false)))))))))))), true && (bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))))), ! (! (((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false)))))))))))))))), (bool(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), true && (bool(bvec2(_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))))), false || ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), true && (bool(bvec2(_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (_GLF_IDENTITY(! (false), true && (! (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))))), ! (! (((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false)))))))))))), true && (bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false)))))))))), ! (! (((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! _GLF_IDENTITY((false), ! (! ((false)))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true && (! (! (false))))))))))))))))) || false)) || false)))))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(_GLF_IDENTITY(! ((false)), ! (! (! ((false))))), true))))), (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(! ((false)), ! (! (! ((false))))), true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(false || (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))), (false || (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), false, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), false, true)), true), bvec2(bvec4(bvec2(bool(bvec3(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), false, true)), true), true, false))))))))))) && true)))), bool(bool((! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(_GLF_IDENTITY(! ((false)), ! (! (! ((false))))), true))))))))))), false || (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(_GLF_IDENTITY(! ((false)), ! (! (! ((false))))), true))))))))))), bool(bvec2(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(_GLF_IDENTITY(! ((false)), ! (! (! ((false))))), true))))))))))), true))))), _GLF_IDENTITY(false || (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))), true && (! (! (false)))))))), ! (! (_GLF_IDENTITY(false || (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), true && (! (! (false)))))))), (false || (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))) && true))))))))))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, _GLF_IDENTITY(true, (true) || false)))), true && (! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(_GLF_IDENTITY(! ((false)), ! (! (! ((false))))), true))))))))))), ! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, _GLF_IDENTITY(true, (true) || false)))), true && (! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(_GLF_IDENTITY(! ((false)), ! (! (! ((false))))), true)))))))))))), false || (! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, _GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))), true && (! _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! ((false)), ! (! (! ((false))))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(! ((false)), ! (! (! ((false))))), true))), false || (! (bool(bvec2(_GLF_IDENTITY(! ((false)), ! (! (! ((false))))), true))))))))))), true && ((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! ((false)), ! (! (! ((false))))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(! ((false)), ! (! (! ((false))))), true))), false || (! (bool(bvec2(_GLF_IDENTITY(! ((false)), ! (! (! ((false))))), true))))))))))))))))))))))), _GLF_IDENTITY(false || (! _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))))), ! (! (((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false)))))))))), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))))), ! (! _GLF_IDENTITY((((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), false))), false, false))))), true && (! _GLF_IDENTITY((! (false)), bool(bvec4(_GLF_IDENTITY((! (false)), bool(bool((! (false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), bool(bvec4((((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), false))), false, false))))), true && (! _GLF_IDENTITY((! (false)), bool(bvec4(_GLF_IDENTITY((! (false)), bool(bool((! (false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), true && (bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)) || false)))))), ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))), ((! (! (false)))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false)))))))))))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))))), ! (! (((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false)))))))))))), true && (bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))))), ! (! (((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), false)), true && (bool(bvec2((! (false)), false)))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true && (! (! (false))), true && (true && (! (! (false))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false)))))))))), ! (! (((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false)))))))))))), true && (bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)), true && (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))))))), ! (! (((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! _GLF_IDENTITY((false), ((false)) || false)))))))))))))))))), (bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))), ((! (! (false)))) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (! (! (false))))))), ! (! (((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))))))), true && (bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))))))), ! (! (((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), true && (! (! (false))))))))))))))))) || false)) || false)))), bool(bool(false || (! _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), true && (! _GLF_IDENTITY((! (false)), bool(bvec3(_GLF_IDENTITY((! (false)), true && ((! (false)))), false, true)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (_GLF_IDENTITY(false, ! (! (false)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) || false)))), true && (! (! (false))))))), ! (! (((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), true && (! (! (false))))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (_GLF_IDENTITY(false, ! (! (false)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) || false)))), true && (! (! (false))))))), ! (! (((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), true && (! (! (false)))))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (_GLF_IDENTITY(false, ! (! (false)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) || false)))), true && (! (! (false))))))), ! (! (((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), true && (! (! (false)))))))))))), false || (! (bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (_GLF_IDENTITY(false, ! (! (false)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) || false)))), true && (! (! (false))))))), ! (! (((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), true && (! (! (false)))))))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (_GLF_IDENTITY(false, ! (! (false)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) || false)))), true && (! (! (false))))))), ! (! (((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), true && (! (! (false)))))))))))), false || (! (bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (_GLF_IDENTITY(false, ! (! (false)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) || false)))), true && (! (! (false))))))), ! (! (((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), true && (! (! (false)))))))))))))), false), true, false)))))))), true && (bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false)))), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true && (! (! (false))), bool(bvec3(true && (! (! (false))), false, true))))))), ! (! (((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false)))))))))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec3((! (false)), false, true)), bool(bool(bool(bvec3((! (false)), false, true))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! _GLF_IDENTITY((false), ((false)) && true))))))), ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false)))))))))))), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), true))), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY((! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || ((! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(true, (true) || false) && (! (! (false))))))))))), true && (bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), true))), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY((! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || ((! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(true, (true) || false) && (! (! (false)))))))))))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! _GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false), true && (! (! (false))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))))), ! (! (((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))))), ! (! (((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false)))))))))), bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))))), ! (! (((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false)))))))))))))))))), true && (bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))), true && (! (! (false))))))), ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false)))))) && true))))))))))))))), (bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! _GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false), true && (! (! (false))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))))), ! (! (((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))))), ! (! (((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false)))))))))), bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))))), ! (! (((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false)))))))))))))))))), true && (bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))), true && (! (! (false))))))), ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (! (false)))))) && true)))))))))))))))) || false)) || false)) || false)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), bool(bvec2(_GLF_IDENTITY(! ((false)), ! (! (! ((false))))), true))), (_GLF_IDENTITY(! ((false)), bool(bvec2(_GLF_IDENTITY(! ((false)), ! (! (! ((false))))), true)))) && true))))))))), _GLF_IDENTITY(false || (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))), (false || (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && _GLF_IDENTITY((! (! (false))), ! (_GLF_IDENTITY(! ((! (! (false)))), bool(bvec4(! ((! (! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))), true && (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY((! (! (false))), ! (_GLF_IDENTITY(! ((! (! (false)))), bool(bvec4(! ((! (! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))))) && true)))), _GLF_IDENTITY(bool(bool((! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), bool(bvec2(_GLF_IDENTITY(! ((false)), ! (! (! ((false))))), true))), (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false)))), bool(bvec2(_GLF_IDENTITY(! ((false)), ! (! (! ((false))))), true)))) && true))))))))), _GLF_IDENTITY(false || (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))), (false || (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && _GLF_IDENTITY((! (! (false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((! (! (false))), ((! (! (false)))) && true)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY((! (! (false))), ((! (! (false)))) && true)), ((_GLF_IDENTITY((! (! (false))), ((! (! (false)))) && true))) && true)))), bool(bvec4(! ((! (! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))) && true)))))), bool(bvec4(bool(bool((! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! ((false)), ! (! (! ((false))))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(! ((false)), ! (! (! ((false))))), true)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), false, false, false)), (bool(bvec4((false), false, false, false))) || false))), bool(bvec2(_GLF_IDENTITY(! ((false)), ! (! (! ((false))))), true)))) && true))))))))), _GLF_IDENTITY(false || (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), false || (! (false)))))))))))), true && (! (! (false)))))))), (false || (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && _GLF_IDENTITY((! (! (false))), ! (_GLF_IDENTITY(! ((! (! (false)))), bool(bvec4(! ((! (! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))) && true)))))), true, false, true)))), bool(bool((! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), true && (! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(_GLF_IDENTITY(! ((false)), ! (! (! ((false))))), true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), true && (! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(_GLF_IDENTITY(! ((false)), ! (! (! ((false))))), true))))))))), bool(bvec3(! (_GLF_IDENTITY(! (! (false)), true && (! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(_GLF_IDENTITY(! ((false)), ! (! (! ((false))))), true))))))))), true, true)))))))), _GLF_IDENTITY(bool(bvec4(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(true && (! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(_GLF_IDENTITY(! ((false)), ! (! (! ((false))))), true))))))), ! (! (true && (! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(_GLF_IDENTITY(! ((false)), ! (! (! ((false))))), true)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), false || (bool(bvec4(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(_GLF_IDENTITY(! ((false)), ! (! (! ((false))))), true))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(_GLF_IDENTITY(! ((false)), ! (! (! ((false))))), true))))), (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(_GLF_IDENTITY(! ((false)), ! (! (! ((false))))), true)))))) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))), _GLF_IDENTITY(false || (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! _GLF_IDENTITY((false), false || ((false)))))))))), ! (! (_GLF_IDENTITY(false || (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))), _GLF_IDENTITY((false || (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), false || ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))))), ((false || (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), false || ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))))))) || false) && true)))))))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y)) && true))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y)) && true))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y)) && true))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y)) && true)))))) && true), true, false, false))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uvec2(next_virtual_gid, 1u), (uvec2(next_virtual_gid, 1u)) - uvec2(0u, 0u)))), (next_virtual_gid) * 1u)], _GLF_IDENTITY(uint(1), min(uint(1), uint(1))), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 0.0, 0.0, 1.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)), (float(mat2x4(injectionSwitch.y, 0.0, 0.0, 1.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))) + 0.0))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((false ? 0.6 : 7.0))), float(injectionSwitch.y), bool(true))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)), (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)), (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))) / 1u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)), (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))) / 1u)) | 0u)) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)), (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))) / 1u))))) < _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(subgroup_size)), uint(uint(uint(uint(subgroup_size))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)), (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)), (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))) / 1u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)), (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))) / 1u)) | 0u)) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)), (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))) / 1u)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)), (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)), (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))) / 1u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)), (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))) / 1u)) | 0u)) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)), (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))) / 1u)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)), (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)), (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))) / 1u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)), (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))) / 1u)) | 0u)) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)), (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))) / 1u))))) * 1u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)), (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)), (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))) / 1u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)), (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))) / 1u)) | 0u)) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)), (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))) / 1u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)), (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)), (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))) / 1u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)), (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))) / 1u)) | 0u)) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)), (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))) / 1u))))))) < _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(subgroup_size)), uint(uint(uint(uint(subgroup_size)))))))))) && true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-603.705)), bool(false))))) > injectionSwitch.y))))
    return;
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(1, 0 ^ (1))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(_GLF_IDENTITY(false, (false) || false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(distance(-370.433, 5474.2052)) : injectionSwitch.y))) + 0.0)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || (! (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(false || (! (injectionSwitch.x > injectionSwitch.y)), bool(bool(false || (! (injectionSwitch.x > injectionSwitch.y))))))))) || false))))) && true))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.2)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))), (injectionSwitch) * sqrt(vec2(1.0, 1.0))).y))))))))))))))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, true)), (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, true))) || false)))))
  return;
}
