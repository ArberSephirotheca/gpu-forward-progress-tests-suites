#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))), false, true)))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec2(false || (false), false)), false || (bool(bvec2(false || (false), false))))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec2(false || (false), false)), false || (bool(bvec2(false || (false), false))))))), true, false, true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true))))))))))) || false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u)) - (0u | 0u));
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), true)))))))))))), true)), true && (bool(bvec4((false), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), _GLF_IDENTITY(true, ! (! (true))))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.7, 0.1)) : injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.7, 0.1)) : injectionSwitch)).x > injectionSwitch.y) || false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.5), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) + 0.0)) / 1.0), _GLF_FUZZED(-30.33)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y))))
    barrier();
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))) | (_GLF_IDENTITY(0u, (0u) - 0u))))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (workgroup_base + subgroup_id * subgroup_size)))) + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) | ((next_virtual_gid))) << 0u), _GLF_IDENTITY(min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u)), clamp(_GLF_IDENTITY(min(next_virtual_gid, next_virtual_gid), (min(next_virtual_gid, next_virtual_gid)) | (min(next_virtual_gid, next_virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY(min(next_virtual_gid, next_virtual_gid), (_GLF_IDENTITY(min(next_virtual_gid, next_virtual_gid), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? min(next_virtual_gid, next_virtual_gid) : _GLF_FUZZED(workgroup_id)))) | (min(next_virtual_gid, next_virtual_gid))), 1u * (_GLF_IDENTITY(min(next_virtual_gid, next_virtual_gid), 1u * (min(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size)))), next_virtual_gid))))), _GLF_IDENTITY(min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, uint(uvec4(next_virtual_gid, 0u, 1u, 1u)))))), clamp(_GLF_IDENTITY(min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, uint(uvec4(next_virtual_gid, 0u, 1u, 1u)))))), (false ? _GLF_FUZZED(virtual_gid) : min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, uint(uvec4(next_virtual_gid, 0u, 1u, 1u)))))))), min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, uint(uvec4(next_virtual_gid, 0u, 1u, 1u)))))), min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, uint(uvec4(next_virtual_gid, 0u, 1u, 1u)))))))))))], uint(1), 4, 64, _GLF_IDENTITY(4, (4) | _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(-90490)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), (false ? _GLF_FUZZED(-7.2) : _GLF_IDENTITY(float(float(injectionSwitch.y)), max(float(float(injectionSwitch.y)), float(float(injectionSwitch.y)))))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true))), false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_ONE(1.0, injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))), false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))), bool(bool(! (false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, false, false, false)), false), bvec2(bvec4(bvec2(bool(bvec4(false, false, false, false)), false), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, false, false, false)), false), bvec2(bvec4(bvec2(bool(bvec4(false, false, false, false)), false), false, false)))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), false)))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-17.69) : injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(virtual_gid, 1u, 0u, 0u), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uvec4(virtual_gid, 1u, 0u, 0u)), (~ (uvec4(virtual_gid, 1u, 0u, 0u))) << _GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u, 0u), min(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u, 0u), uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u, 0u))))), uvec4(0u, 0u, 0u, 0u) | (~ (_GLF_IDENTITY(~ (uvec4(virtual_gid, 1u, 0u, 0u)), (~ (uvec4(virtual_gid, 1u, 0u, 0u))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u, 0u), (uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u, 0u)) | (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u, 0u), (uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u, 0u)) / uvec4(1u, 1u, 1u, 1u)))), min(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), 0u ^ (_GLF_IDENTITY(0u, min(0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, min(0u, 0u))), (~ (_GLF_IDENTITY(0u, min(0u, 0u)))) | (~ (_GLF_IDENTITY(0u, min(0u, 0u))))))))), 0u, 0u, 0u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), min(_GLF_IDENTITY(0u, max(0u, 0u)), 0u)), 0u, 0u, 0u))))))))), _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) | (0u)))))) + (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(2u), uint(2u)))), 0u)) | _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(virtual_gid, 1u, 0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u))))), max(_GLF_IDENTITY(uvec4(virtual_gid, 1u, 0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u))))), ~ (~ (uvec4(virtual_gid, 1u, 0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)))))))), uvec4(virtual_gid, 1u, 0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u))))))), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u), 1u, 0u, 0u)), (_GLF_IDENTITY(~ (uvec4(virtual_gid, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(workgroup_size), uint(uvec2(true ? 1u : _GLF_FUZZED(workgroup_size), 0u))))))), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u)))), _GLF_IDENTITY(0u, (0u) + 0u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (~ (uvec4(virtual_gid, 1u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u))))), (~ (~ (uvec4(virtual_gid, 1u, 0u, 0u)))) | (_GLF_IDENTITY(~ (~ (uvec4(virtual_gid, 1u, 0u, 0u))), (~ (~ (uvec4(virtual_gid, 1u, 0u, 0u)))) << uvec4(0u, 0u, 0u, 0u))))), uvec4(0u, 0u, 0u, 0u) | (~ (_GLF_IDENTITY(~ (~ (uvec4(virtual_gid, 1u, 0u, 0u))), (~ _GLF_IDENTITY((~ (uvec4(virtual_gid, 1u, 0u, 0u))), uvec4(0u, 0u, 0u, 0u) | ((~ (uvec4(virtual_gid, 1u, 0u, 0u)))))) | (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (uvec4(virtual_gid, 1u, 0u, 0u))), (false ? _GLF_FUZZED((uvec4(126322u, 43422u, 106062u, 25822u) + next_virtual_gid)) : (~ (uvec4(virtual_gid, 1u, 0u, 0u))))), (~ (~ (uvec4(virtual_gid, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(1u, (1u) << 0u), 0u, 1u, 0u)), (false ? _GLF_FUZZED(workgroup_size) : uint(uvec4(_GLF_IDENTITY(1u, (1u) << 0u), 0u, 1u, 0u))))), 0u, 0u)))) << uvec4(0u, 0u, 0u, 0u))))))))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) ^ 0u)) | (uvec4(0u, 0u, 0u, 0u))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(uvec4(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_id) : ~ (0u))))), clamp(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_id) : ~ (0u))))), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_id) : ~ (0u))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_id) : ~ (0u))))), (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_id) : ~ (0u)))))) + 0u))), 0u), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), ~ (~ (uvec4(0u, 0u, 0u, 0u))))) << uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), ~ (~ (uvec4(0u, 0u, 0u, 0u))))) << uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u)) | (uvec4(0u, 0u, 0u, 0u))))), min((~ (_GLF_IDENTITY(uvec4(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : ~ (0u), (false ? _GLF_FUZZED(subgroup_id) : ~ (0u)) / 1u))))), 0u), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), ~ (~ (uvec4(0u, 0u, 0u, 0u))))) << uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), ~ (~ (uvec4(0u, 0u, 0u, 0u))))) << uvec4(0u, 0u, 0u, 0u)))) | (uvec4(0u, 0u, 0u, 0u))))), (~ (_GLF_IDENTITY(uvec4(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_id) : ~ (0u))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_id) : ~ (0u))), 0u + (_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_id) : ~ (0u)))))) | (_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_id) : ~ (0u))))))), 0u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), ~ (_GLF_IDENTITY(~ (uvec4(0u, 0u, 0u, 0u)), ~ (~ (~ (uvec4(0u, 0u, 0u, 0u)))))))) << uvec4(0u, 0u, 0u, 0u)) | (uvec4(0u, 0u, 0u, 0u))))))))))))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(virtual_gid, 1u, 0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) ^ 0u))))), (uvec4(virtual_gid, 1u, 0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) ^ 0u)))))) | (uvec4(virtual_gid, 1u, 0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) ^ 0u))))))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uvec4(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u), clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u), _GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u), _GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u))), 1u, 0u, 0u)), ((uvec4(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u), clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u), _GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u), _GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u))), 1u, 0u, 0u))) | ((uvec4(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u), clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u), _GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u), _GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u))), 1u, 0u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (uvec4(virtual_gid, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) * 1u))), 1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_size))))), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u)))), 0u)), ~ (_GLF_IDENTITY(~ (~ (uvec4(virtual_gid, 1u, 0u, 0u))), (~ (~ (uvec4(virtual_gid, 1u, 0u, 0u)))) | (_GLF_IDENTITY(~ (~ (uvec4(virtual_gid, 1u, 0u, 0u))), (~ (~ (uvec4(virtual_gid, 1u, 0u, 0u)))) << uvec4(0u, 0u, 0u, 0u))))))), uvec4(0u, 0u, 0u, 0u) ^ ((_GLF_IDENTITY(~ (uvec4(virtual_gid, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_size))))), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u)))), 0u)), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uvec4(virtual_gid, 1u, 0u, 0u), (uvec4(virtual_gid, 1u, 0u, 0u)) | (uvec4(virtual_gid, 1u, 0u, 0u))))), (~ (~ (uvec4(virtual_gid, 1u, 0u, 0u)))) | (_GLF_IDENTITY(~ (~ (uvec4(virtual_gid, 1u, 0u, 0u))), (~ (~ (uvec4(virtual_gid, 1u, 0u, 0u)))) << uvec4(0u, 0u, 0u, 0u))))))))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(0u, 0u, 0u, 0u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(0u, 0u, 0u, 0u)))), clamp(~ (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(0u, 0u, 0u, 0u)))), ~ (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(0u, 0u, 0u, 0u)))), ~ (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(0u, 0u, 0u, 0u)))))), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)))), clamp(~ (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), max(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u)))))), ~ (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(0u, 0u, 0u, 0u)))), ~ (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(0u, 0u, 0u, 0u)))))) : _GLF_FUZZED(uvec4(189806u, 61810u, 79933u, 102080u))))))))))), 0u | (_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec4(virtual_gid, 1u, 0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) ^ 0u))))), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u), _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 0u))), 0u, 0u)), (_GLF_IDENTITY(~ (uvec4(virtual_gid, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true)))))) ? 1u : _GLF_FUZZED(workgroup_size))))), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (_GLF_IDENTITY(0u, max(0u, 0u))), _GLF_IDENTITY(uint(uvec3((0u) | (_GLF_IDENTITY(0u, max(0u, 0u))), 0u, 0u)), ~ (~ (uint(uvec3((0u) | (_GLF_IDENTITY(0u, max(0u, 0u))), 0u, 0u))))))), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u))))))), ~ (_GLF_IDENTITY(~ (~ (uvec4(virtual_gid, 1u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), (~ (~ (uvec4(virtual_gid, 1u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, 0u + (0u))))), 0u)))) | (_GLF_IDENTITY(~ (~ (uvec4(virtual_gid, 1u, 0u, 0u))), (~ (~ (uvec4(virtual_gid, 1u, 0u, 0u)))) << uvec4(0u, 0u, 0u, 0u))))))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(0u, 0u, 0u, 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))), 0u, 0u, 0u)))), clamp(~ (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))), 0u, 0u, 0u)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))), 0u, 0u, 0u)))), (~ (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))), 0u, 0u, 0u))))) / uvec4(1u, 1u, 1u, 1u)), ~ (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))), 0u, 0u, 0u))))))))))))), uint(_GLF_IDENTITY(uvec4((uint(_GLF_IDENTITY(uvec4(virtual_gid, _GLF_IDENTITY(1u, (1u) / (1u | 0u)), 0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(virtual_gid) : 0u)), (0u) ^ 0u))))), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u), 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (1u ^ 1u))), (uint(uvec3(0u, 1u, (1u ^ 1u)))) - 0u)), 0u)), (_GLF_IDENTITY(~ (uvec4(virtual_gid, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (_GLF_IDENTITY(! (! (! (true))), true && (! (! (! (true)))))))) ? 1u : _GLF_FUZZED(workgroup_size))))), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u)))), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uvec4(virtual_gid, 1u, 0u, 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uvec4(virtual_gid, 1u, 0u, 0u)), (~ (uvec4(virtual_gid, 1u, 0u, 0u))) ^ uvec4(0u, 0u, 0u, 0u))), (~ (_GLF_IDENTITY(~ (uvec4(virtual_gid, 1u, 0u, 0u)), (~ (uvec4(virtual_gid, 1u, 0u, 0u))) ^ uvec4(0u, 0u, 0u, 0u)))) | (~ (_GLF_IDENTITY(~ (uvec4(virtual_gid, 1u, 0u, 0u)), (~ (uvec4(virtual_gid, 1u, 0u, 0u))) ^ uvec4(0u, 0u, 0u, 0u)))))))), (~ (~ (uvec4(virtual_gid, 1u, 0u, 0u)))) | (_GLF_IDENTITY(~ (~ (uvec4(virtual_gid, 1u, 0u, 0u))), (~ _GLF_IDENTITY((~ (uvec4(virtual_gid, 1u, 0u, 0u))), (_GLF_IDENTITY((~ (uvec4(virtual_gid, 1u, 0u, 0u))), clamp((~ (uvec4(virtual_gid, 1u, 0u, 0u))), (~ (uvec4(virtual_gid, 1u, 0u, 0u))), (~ (uvec4(virtual_gid, 1u, 0u, 0u)))))) - (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(5u), uvec4(5u))))) << uvec4(0u, 0u, 0u, 0u))))))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(0u, 0u, 0u, 0u))), ~ (~ (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))), 0u, 0u, 0u))))))))))), 0u, 0u, ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))))), (uvec4((uint(_GLF_IDENTITY(uvec4(virtual_gid, 1u, 0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) ^ 0u))))), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u), 1u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec4(virtual_gid, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(workgroup_size))))), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u)))), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u))))))), (~ (uvec4(virtual_gid, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(workgroup_size))))), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u)))), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u)))))))) << uvec4(0u, 0u, 0u, 0u)), ~ (_GLF_IDENTITY(~ (~ (uvec4(virtual_gid, 1u, 0u, 0u))), (~ (~ (_GLF_IDENTITY(uvec4(virtual_gid, 1u, 0u, 0u), clamp(uvec4(virtual_gid, 1u, 0u, 0u), _GLF_IDENTITY(uvec4(virtual_gid, 1u, 0u, 0u), (uvec4(virtual_gid, 1u, 0u, 0u)) | (uvec4(virtual_gid, 1u, 0u, 0u))), uvec4(virtual_gid, 1u, 0u, 0u)))))) | (_GLF_IDENTITY(~ (~ (uvec4(virtual_gid, 1u, 0u, 0u))), (~ (~ (uvec4(virtual_gid, 1u, 0u, 0u)))) << uvec4(0u, 0u, 0u, 0u))))))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(0u, 0u, 0u, 0u))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))), 0u, 0u, 0u))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))), 0u, 0u, 0u))))), (~ (~ (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))), 0u, 0u, 0u)))))) / uvec4(1u, 1u, 1u, 1u))) | (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))), 0u, 0u, 0u))))), (true ? ~ (~ (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))), 0u, 0u, 0u))))) : _GLF_FUZZED(uvec4(144411u, 95989u, 114409u, 131148u)))))))))))), 0u, 0u, ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), min(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), _GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))))))))) ^ uvec4(0u, 0u, 0u, 0u))))))) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), clamp(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))))).x)))))], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (64), ~ (~ (~ (64))))), (false ? _GLF_FUZZED(ivec2(-75811, 29919)[0]) : (~ (64)))), ~ (~ (~ _GLF_IDENTITY((~ (64)), (false ? _GLF_FUZZED(ivec2(-75811, 29919)[0]) : (~ (64)))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) * 1), ~ (~ (64))), _GLF_IDENTITY(64, ~ (~ (64))))), 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, false)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | (0 | (0 >> _GLF_IDENTITY(int(8), int(8))))) - 0, ~ (_GLF_IDENTITY(~ ((1) - 0), int(int(~ ((1) - 0))))))) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).y)))), bool(bvec2(bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))))))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))))) && true)) || false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 0.0, 0.0, abs(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.0) : 0.0)), 0.0))), (false ? _GLF_FUZZED(atan(-903.546)) : (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) ? _GLF_FUZZED(-5.0) : 0.0)), 0.0))))) - 0.0), 0.0)), (_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 0.0, 0.0, abs(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.0) : 0.0)), 0.0))), (false ? _GLF_FUZZED(atan(-903.546)) : (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.0) : 0.0)), 0.0))))) - 0.0), 0.0)), min(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 0.0, 0.0, abs(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.0) : 0.0)), 0.0))), (false ? _GLF_FUZZED(atan(-903.546)) : (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.0) : 0.0)), 0.0))))) - 0.0), 0.0)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 0.0, 0.0, abs(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.0) : 0.0)), 0.0))), (false ? _GLF_FUZZED(atan(-903.546)) : (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.0) : 0.0)), 0.0))))) - 0.0), 0.0))))) * 1.0))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0))), injectionSwitch)).y))))
    barrier();
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) >> 0u)), min(~ (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) >> 0u)), ~ (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) >> 0u)))))), (uint(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (virtual_gid), (~ _GLF_IDENTITY((virtual_gid), ((virtual_gid)) | 0u)) >> 0u)), 0u | ((_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) >> 0u))))))) / 1u)))], read, 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))), false), true))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))), injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), (bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) && true))))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) || false)))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, mix(float(_GLF_FUZZED(3082.9852)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), bool(true)))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), false || ((_GLF_IDENTITY(false, (false) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bool((_GLF_IDENTITY(false, (false) && true))))), bool(bvec3((_GLF_IDENTITY(false, (false) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bvec3((_GLF_IDENTITY(false, (false) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)), _GLF_IDENTITY(bool(bvec2(bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)), false)), (bool(bvec2(bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)), false))) && true)))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec3((false) && true, true, false))))), bool(bvec3((_GLF_IDENTITY(false, (false) && true)), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))))))))))), true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, false, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(53.06) : injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false, false, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(53.06) : injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false, false, true))))), false, true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (4) ^ 0), 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0 | (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-33364))), 4, 4))) + (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), max(int(5), int(5))), int(5))))), (0 | (4)) | (0 | (4)))), int(ivec2(4, 1))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0 | (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-33364))), 4, 4))) + (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), max(int(5), int(5))), int(5))))), (0 | (4)) | (0 | (4)))), int(ivec2(4, 1))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4.5, -6.8)))), injectionSwitch)))).y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4.5, -6.8)))), injectionSwitch)))).y)), true, false, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(false || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(false || ((injectionSwitch.x > injectionSwitch.y))))))))) && true))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))))))))
    return;
  }
}
