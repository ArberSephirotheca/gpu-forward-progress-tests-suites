#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), float(_GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(float(mat4x3(float(injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, tan(0.0))), float(mat3(float(mat4x3(float(injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, tan(0.0))), 1.0, 1.0, sin(0.0), sqrt(1.0), log(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 0.0, 0.0))), 1.0, exp(0.0))))))) < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4253.7696), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-465.088)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((9435.0844 * (3.5))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-931.616)), bvec2(true, false))).x) - 0.0) > injectionSwitch.y))))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-594.723), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(650.469)), bvec2(true, false))).y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))))) && true)))))
    barrier();
   return;
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, 1u * (0u)), 0u))))) | uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.8) : injectionSwitch.y)))) && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 0.0))))).y, 1.0, tan(0.0), 0.0)))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
    {
    }
   else
    {
     barrier();
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) && true))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y), float(_GLF_FUZZED(-5.2)), bool(false)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y), float(_GLF_FUZZED(-5.2)), bool(false)))))), bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y), float(_GLF_FUZZED(-5.2)), bool(false)))))), false, false, false))), true, true)), true && (bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y), float(_GLF_FUZZED(-5.2)), bool(false)))))), bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y), float(_GLF_FUZZED(-5.2)), bool(false)))))), false, false, false))), true, true))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y), float(_GLF_FUZZED(-5.2)), bool(false))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8.4)))) - 0.0), injectionSwitch.y)))))).y), float(_GLF_FUZZED(-5.2)), bool(false)))), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8.4)))) - 0.0), injectionSwitch.y)))))).y), float(_GLF_FUZZED(-5.2)), bool(false)))), false, false, true))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y), float(_GLF_FUZZED(-5.2)), bool(false)))))), bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y), float(_GLF_FUZZED(-5.2)), bool(false)))))), false, false, false))), true, true)), true && (bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y), float(_GLF_FUZZED(-5.2)), bool(false)))))), bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y), float(_GLF_FUZZED(-5.2)), bool(false)))))), false, false, false))), true, true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y), float(_GLF_FUZZED(-5.2)), bool(false)))))), bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y), float(_GLF_FUZZED(-5.2)), bool(false)))))), false, false, false))), true, true)), true && (bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y), float(_GLF_FUZZED(-5.2)), bool(false)))))), bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y), float(_GLF_FUZZED(-5.2)), bool(false)))))), false, false, false))), true, true)))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)), vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)))).y), float(_GLF_FUZZED(-5.2)), bool(false)))))), bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-22.31)), float(injectionSwitch.y), bool(true))))))).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ -40.15)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5171.7709)), bvec2(true, false))))), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y), float(_GLF_FUZZED(-5.2)), bool(false)))))), false, false, false))), true, true)), true && (bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y), float(_GLF_FUZZED(-5.2)), bool(false)))))), bool(bvec4((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y), float(_GLF_FUZZED(-5.2)), bool(false)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y), float(_GLF_FUZZED(-5.2)), bool(false)))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y), float(_GLF_FUZZED(-5.2)), bool(false))))) && true)))))), false, false, false))), true, true)))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), (clamp(0u, 0u, 0u)) | (clamp(0u, 0u, 0u)))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))) && true), (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(6.8))) > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), (true ? (workgroup_base) : _GLF_FUZZED(num_workgroup))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(3737.7269)), bool(false))), injectionSwitch.x))) + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(uint(uvec2(((subgroup_local_id + 1) % subgroup_size), 1u)), uint(uvec4(uint(uvec2(((subgroup_local_id + 1) % subgroup_size), 1u)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))), uint(uint(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(uint(uvec2(((subgroup_local_id + 1) % subgroup_size), 1u)), uint(uvec4(uint(uvec2(((subgroup_local_id + 1) % subgroup_size), 1u)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))))))), clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(uint(uvec2(((subgroup_local_id + 1) % subgroup_size), 1u)), uint(uvec4(uint(uvec2(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (0u ^ 0u)) + 1) % subgroup_size), 1u)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(uvec3(uint(4u), 1u, (1u ^ 0u)))), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))))))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(uint(uvec2(((subgroup_local_id + 1) % subgroup_size), 1u)), uint(uvec4(uint(uvec2(((subgroup_local_id + 1) % subgroup_size), 1u)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(uint(uvec2(((subgroup_local_id + 1) % subgroup_size), 1u)), uint(uvec4(uint(uvec2(((subgroup_local_id + 1) % subgroup_size), 1u)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(uint(uvec2(((subgroup_local_id + 1) % subgroup_size), 1u)), uint(uvec4(uint(uvec2(((subgroup_local_id + 1) % subgroup_size), 1u)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) >> 0u))), (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(uint(uvec2(((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))))) % subgroup_size), 1u)), uint(uvec4(uint(uvec2(((subgroup_local_id + 1) % subgroup_size), 1u)), 0u, 0u, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) | (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (false ? _GLF_FUZZED(subgroup_local_id) : ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))) - 0u)))))))) | (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(uint(uvec2(((subgroup_local_id + 1) % subgroup_size), 1u)), uint(uvec4(uint(uvec2(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) + 1) % subgroup_size), 1u)), 0u, 0u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))), min((1u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))), clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(uint(uvec2(((subgroup_local_id + 1) % subgroup_size), 1u)), uint(uvec4(uint(uvec2(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) + 1) % subgroup_size), 1u)), 0u, 0u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))), min((1u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(uint(uvec2(((subgroup_local_id + 1) % subgroup_size), 1u)), uint(uvec4(uint(uvec2(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) + 1) % subgroup_size), 1u)), 0u, 0u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))), min((1u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(uint(uvec2(((subgroup_local_id + 1) % subgroup_size), 1u)), uint(uvec4(uint(uvec2(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) + 1) % subgroup_size), 1u)), 0u, 0u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))), min((1u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(uint(uvec2(((subgroup_local_id + 1) % subgroup_size), 1u)), uint(uvec4(uint(uvec2(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) + 1) % subgroup_size), 1u)), 0u, 0u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))), min((1u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) << 0u)))))) | (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))), (subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u))))))), (_GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))), (subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u))))))), clamp(uint(uvec2((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))), (subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u))))))), _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))), (subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u))))))), (uint(uvec2((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))), (subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u)))))))) ^ 0u), uint(uvec2((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))), (subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u)))))))))) | (_GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))), (subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u))))))), (uint(uvec2((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))), (subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u)))))))) | (uint(uvec2((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))), (subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u))))))))))), _GLF_IDENTITY(uint(uvec4(uint(uvec2((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) + 0u)), 1u)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), clamp(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), max(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), 0u ^ (_GLF_IDENTITY(uint(4u), uint(4u))))))))))), min(uint(uvec4(uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) + 0u), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) + 0u))))), 1u)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uvec3(4u, 0u, 0u), clamp(uvec3(4u, 0u, 0u), uvec3(4u, 0u, 0u), uvec3(4u, 0u, 0u)))))))), uint(_GLF_IDENTITY(4u, (4u) | (4u))))))), uint(uvec4(uint(uvec2((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) + 0u)), 1u)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), 0u | (_GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(workgroup_base))))), uint(4u))))))))))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u))) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(uint(uvec2(((subgroup_local_id + 1) % subgroup_size), 1u)), uint(uvec4(uint(uvec2(((subgroup_local_id + 1) % subgroup_size), 1u)), 0u, _GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) ^ 0u))))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))))) + 1) % subgroup_size), _GLF_IDENTITY(uint(uvec2(((subgroup_local_id + 1) % subgroup_size), 1u)), uint(uvec4(uint(uvec2(((subgroup_local_id + 1) % subgroup_size), 1u)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))), clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u))) + 1) % subgroup_size))), _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % subgroup_size, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % subgroup_size, ~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % subgroup_size))))))), 1u)), uint(uvec4(uint(uvec2(((subgroup_local_id + _GLF_IDENTITY(1, (1) | 0)) % subgroup_size), 1u)), _GLF_IDENTITY(0u, (0u) - 0u), 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))), ~ (~ (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(uint(uvec2(((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) % subgroup_size), 1u)), uint(uvec4(uint(uvec2(((subgroup_local_id + 1) % subgroup_size), 1u)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))))))), workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), 1u)), uint(uvec4(uint(uvec2(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))), 1u)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))), workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_id))))))) * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(((subgroup_local_id + 1) % subgroup_size), 1u)), uint(uvec4(uint(uvec2(((subgroup_local_id + 1) % subgroup_size), 1u)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))), (_GLF_IDENTITY(uint(uvec2(((subgroup_local_id + 1) % subgroup_size), 1u)), uint(uvec4(uint(uvec2(((subgroup_local_id + 1) % subgroup_size), 1u)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))) | (_GLF_IDENTITY(uint(uvec2(((subgroup_local_id + 1) % subgroup_size), 1u)), uint(uvec4(uint(uvec2(((subgroup_local_id + 1) % subgroup_size), 1u)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))))))))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * (0 ^ 1)), _GLF_IDENTITY(int(2), min(int(2), int(2))))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (2) ^ 0))))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), false))))))))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true), false, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true), false, true, true)))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.7, 2955.7226)))))), (false ? _GLF_FUZZED(vec2(8.6, 5.7)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), false || (bool(true)))), (bool(_GLF_IDENTITY(bool(true), false || (bool(true))))) && true)) ? injectionSwitch : _GLF_FUZZED(vec2(-8.7, 2955.7226)))))))).x), clamp(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.7, 2955.7226)))))), (false ? _GLF_FUZZED(vec2(8.6, 5.7)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), false || (bool(true)))), (bool(_GLF_IDENTITY(bool(true), false || (bool(true))))) && true)) ? injectionSwitch : _GLF_FUZZED(vec2(-8.7, 2955.7226)))))))).x), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.7, 2955.7226)))))), (false ? _GLF_FUZZED(vec2(8.6, 5.7)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), false || (bool(true)))), (bool(_GLF_IDENTITY(bool(true), false || (bool(true))))) && true)) ? injectionSwitch : _GLF_FUZZED(vec2(-8.7, 2955.7226)))))))).x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.7, 2955.7226)))))), (false ? _GLF_FUZZED(vec2(8.6, 5.7)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), false || (bool(true)))), (bool(_GLF_IDENTITY(bool(true), false || (bool(true))))) && true)) ? injectionSwitch : _GLF_FUZZED(vec2(-8.7, 2955.7226)))))))).x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.7, 2955.7226)))))), (false ? _GLF_FUZZED(vec2(8.6, 5.7)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), false || (bool(true)))), (bool(_GLF_IDENTITY(bool(true), false || (bool(true))))) && true)) ? injectionSwitch : _GLF_FUZZED(vec2(-8.7, 2955.7226)))))))).x), clamp(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.7, 2955.7226)))))), (false ? _GLF_FUZZED(vec2(8.6, 5.7)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), false || (bool(true)))), (bool(_GLF_IDENTITY(bool(true), false || (bool(true))))) && true)) ? injectionSwitch : _GLF_FUZZED(vec2(-8.7, 2955.7226)))))))).x), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.7, 2955.7226)))))), (false ? _GLF_FUZZED(vec2(8.6, 5.7)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), false || (bool(true)))), (bool(_GLF_IDENTITY(bool(true), false || (bool(true))))) && true)) ? injectionSwitch : _GLF_FUZZED(vec2(-8.7, 2955.7226)))))))).x), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.7, 2955.7226)))))), (false ? _GLF_FUZZED(vec2(8.6, 5.7)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), false || (bool(true)))), (bool(_GLF_IDENTITY(bool(true), false || (bool(true))))) && true)) ? injectionSwitch : _GLF_FUZZED(vec2(-8.7, 2955.7226)))))))).x))), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.7, 2955.7226)))))), (false ? _GLF_FUZZED(vec2(8.6, 5.7)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), false || (bool(true)))), (bool(_GLF_IDENTITY(bool(true), false || (bool(true))))) && true)) ? injectionSwitch : _GLF_FUZZED(vec2(-8.7, 2955.7226)))))))).x)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
            return;
           continue;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), float(mat2x4(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) - 0.0)), min(_GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), float(mat2x4(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) - 0.0)), mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), float(mat2x4(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) - 0.0)))), _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), float(mat2x4(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) - 0.0)), mix(vec2(_GLF_FUZZED(1.8), (vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), float(mat2x4(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) - 0.0)))[1]), vec2((vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), float(mat2x4(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) - 0.0)))[0], _GLF_FUZZED(-840.691)), bvec2(true, false)))))).x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), float(mat2x4(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) - 0.0)), min(_GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), float(mat2x4(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) - 0.0)), mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), float(mat2x4(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) - 0.0)))), _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), float(mat2x4(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) - 0.0)), mix(vec2(_GLF_FUZZED(1.8), (vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), float(mat2x4(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) - 0.0)))[1]), vec2((vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), float(mat2x4(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) - 0.0)))[0], _GLF_FUZZED(-840.691)), bvec2(true, false)))))).x) / 1.0) > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), float(mat2x4(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) - 0.0)), min(_GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), float(mat2x4(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) - 0.0)), mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), float(mat2x4(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) - 0.0)))), _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), float(mat2x4(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) - 0.0)), mix(vec2(_GLF_FUZZED(1.8), (vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), float(mat2x4(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) - 0.0)))[1]), vec2((vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), float(mat2x4(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) - 0.0)))[0], _GLF_FUZZED(-840.691)), bvec2(true, false)))))).x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), float(mat2x4(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) - 0.0)), min(_GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), float(mat2x4(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) - 0.0)), mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), float(mat2x4(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) - 0.0)))), _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), float(mat2x4(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) - 0.0)), mix(vec2(_GLF_FUZZED(1.8), (vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), float(mat2x4(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) - 0.0)))[1]), vec2((vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), float(mat2x4(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) - 0.0)))[0], _GLF_FUZZED(-840.691)), bvec2(true, false)))))).x) / 1.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), float(mat2x4(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) - 0.0)), min(_GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), float(mat2x4(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) - 0.0)), mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), float(mat2x4(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) - 0.0)))), _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), float(mat2x4(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) - 0.0)), mix(vec2(_GLF_FUZZED(1.8), (vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), float(mat2x4(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) - 0.0)))[1]), vec2((vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), float(mat2x4(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) - 0.0)))[0], _GLF_FUZZED(-840.691)), bvec2(true, false)))))).x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), float(mat2x4(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) - 0.0)), min(_GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), float(mat2x4(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) - 0.0)), mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), float(mat2x4(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) - 0.0)))), _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), float(mat2x4(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) - 0.0)), mix(vec2(_GLF_FUZZED(1.8), (vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), float(mat2x4(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) - 0.0)))[1]), vec2((vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), float(mat2x4(float(vec3(_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2156.8195))), 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) - 0.0)))[0], _GLF_FUZZED(-840.691)), bvec2(true, false)))))).x) / 1.0) > injectionSwitch.y))))))))
          continue;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))))))))
            {
             barrier();
            }
           else
            {
            }
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
         barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, exp(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, exp(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch.x, exp(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(-9613.4686) : float(_GLF_IDENTITY(mat3(injectionSwitch.x, exp(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, exp(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch.x, exp(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))) > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))) || false); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
             return;
            }
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), injectionSwitch[1])).x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bool(_GLF_IDENTITY(_injected_loop_counter < 1, ! (! (_injected_loop_counter < 1))))))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.5)), bool(false)))), float(_GLF_FUZZED((-6.3 / 8.7))), bool(false))) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, false)))))), bool(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, false)))))), true, false))))))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0), (false ? _GLF_FUZZED(vec3(-9360.6793, 1.1, 70.74)) : vec3(injectionSwitch.x, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0))))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.x, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0), (false ? _GLF_FUZZED(vec3(-9360.6793, 1.1, 70.74)) : vec3(injectionSwitch.x, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0)))), (float(_GLF_IDENTITY(vec3(injectionSwitch.x, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0), (false ? _GLF_FUZZED(vec3(-9360.6793, 1.1, 70.74)) : vec3(injectionSwitch.x, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0))))) - 0.0)) > injectionSwitch.y)))) && true))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0)))).x, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0)))).x) / 1.0) > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0)))).x, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0)))).x) / 1.0) > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0)))).x, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0)))).x) / 1.0) > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))
      barrier();
    }
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), clamp(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), ~ (~ (_GLF_IDENTITY(1, (1) * 1)))))), _GLF_IDENTITY(1, max(1, 1)), 1), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), clamp(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), ~ (~ (_GLF_IDENTITY(1, (1) * 1)))))), _GLF_IDENTITY(1, max(1, 1)), 1)) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, int(ivec2(4, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, int(ivec2(4, 0))))), (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, 0, 0), (false ? _GLF_FUZZED(ivec3(40468, 63081, -68498)) : ivec3(4, 0, 0))))), _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(0, int(ivec3(0, 0, 0))))))))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(4, 0)), (0 >> _GLF_IDENTITY(int(7), int(7))) ^ (int(ivec2(4, 0))))))), int(ivec3(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4, _GLF_IDENTITY(4, int(ivec2(4, 0))))), 0, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(int(4), int(4)))))) >> _GLF_IDENTITY(int(4), int(4)))))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(4, 0)), (0 >> _GLF_IDENTITY(int(7), int(7))) ^ (int(ivec2(4, 0))))))), int(ivec3(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4, _GLF_IDENTITY(4, int(ivec2(4, 0))))), 0, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(int(4), int(4)))))) >> _GLF_IDENTITY(int(4), int(4)))))), (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(4, 0)), (0 >> _GLF_IDENTITY(int(7), int(7))) ^ (int(ivec2(4, 0))))))), int(ivec3(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4, _GLF_IDENTITY(4, int(ivec2(4, 0))))), 0, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(int(4), int(4)))))) >> _GLF_IDENTITY(int(4), int(4))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(4, 0)), (0 >> _GLF_IDENTITY(int(7), int(7))) ^ (int(ivec2(4, 0))))))), int(ivec3(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4, _GLF_IDENTITY(4, int(ivec2(4, 0))))), 0, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(int(4), int(4)))))) >> _GLF_IDENTITY(int(4), int(4)))))))), (-86796 & 0), 1))), _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-49396) : 4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec2(4, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec2(4, 0))), (true ? _GLF_IDENTITY(4, int(ivec2(4, 0))) : _GLF_FUZZED(-25960)))) / 1)))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, int(ivec2(4, 0))))), (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, 0, 0), (false ? _GLF_FUZZED(ivec3(40468, 63081, -68498)) : ivec3(4, 0, 0))))), _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(0, int(ivec3(0, 0, 0))))))))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(4, 0)), (0 >> _GLF_IDENTITY(int(7), int(7))) ^ (int(ivec2(4, 0))))))), int(ivec3(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4, _GLF_IDENTITY(4, int(ivec2(4, 0))))), 0, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(int(4), int(4)))))) >> _GLF_IDENTITY(int(4), int(4)))))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(4, 0)), (0 >> _GLF_IDENTITY(int(7), int(7))) ^ (int(ivec2(4, 0))))))), int(ivec3(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4, _GLF_IDENTITY(4, int(ivec2(4, 0))))), 0, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(int(4), int(4)))))) >> _GLF_IDENTITY(int(4), int(4)))))), (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(4, 0)), (0 >> _GLF_IDENTITY(int(7), int(7))) ^ (int(ivec2(4, 0))))))), int(ivec3(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4, _GLF_IDENTITY(4, int(ivec2(4, 0))))), 0, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(int(4), int(4)))))) >> _GLF_IDENTITY(int(4), int(4))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(4, 0)), (0 >> _GLF_IDENTITY(int(7), int(7))) ^ (int(ivec2(4, 0))))))), int(ivec3(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4, _GLF_IDENTITY(4, int(ivec2(4, 0))))), 0, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(int(4), int(4)))))) >> _GLF_IDENTITY(int(4), int(4)))))))), (-86796 & 0), 1))), _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-49396) : 4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec2(4, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec2(4, 0))), (true ? _GLF_IDENTITY(4, int(ivec2(4, 0))) : _GLF_FUZZED(-25960)))) / 1))))) | (clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, int(ivec2(4, 0))))), (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, 0, 0), (false ? _GLF_FUZZED(ivec3(40468, 63081, -68498)) : ivec3(4, 0, 0))))), _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(0, int(ivec3(0, 0, 0))))))))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(4, 0)), (0 >> _GLF_IDENTITY(int(7), int(7))) ^ (int(ivec2(4, 0))))))), int(ivec3(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4, _GLF_IDENTITY(4, int(ivec2(4, 0))))), 0, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(int(4), int(4)))))) >> _GLF_IDENTITY(int(4), int(4)))))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(4, 0)), (0 >> _GLF_IDENTITY(int(7), int(7))) ^ (int(ivec2(4, 0))))))), int(ivec3(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4, _GLF_IDENTITY(4, int(ivec2(4, 0))))), 0, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(int(4), int(4)))))) >> _GLF_IDENTITY(int(4), int(4)))))), (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(4, 0)), (0 >> _GLF_IDENTITY(int(7), int(7))) ^ (int(ivec2(4, 0))))))), int(ivec3(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4, _GLF_IDENTITY(4, int(ivec2(4, 0))))), 0, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(int(4), int(4)))))) >> _GLF_IDENTITY(int(4), int(4))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(4, 0)), (0 >> _GLF_IDENTITY(int(7), int(7))) ^ (int(ivec2(4, 0))))))), int(ivec3(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4, _GLF_IDENTITY(4, int(ivec2(4, 0))))), 0, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(int(4), int(4)))))) >> _GLF_IDENTITY(int(4), int(4)))))))), (-86796 & 0), 1))), _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-49396) : 4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec2(4, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec2(4, 0))), (true ? _GLF_IDENTITY(4, int(ivec2(4, 0))) : _GLF_FUZZED(-25960)))) / 1)))))), (false ? _GLF_FUZZED(48830) : clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec2(4, 0), ivec2(ivec2(ivec2(4, 0)))))))), (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(false ? _GLF_FUZZED(48546) : 4, min(_GLF_IDENTITY(false ? _GLF_FUZZED(48546) : 4, (false ? _GLF_FUZZED(48546) : 4) << 0), false ? _GLF_FUZZED(48546) : 4)))), _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-2322) : _GLF_IDENTITY(0, clamp(0, 0, 0)))), 0), (false ? _GLF_FUZZED(ivec3(40468, 63081, -68498)) : ivec3(4, 0, 0))))), _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(0, int(ivec3(0, 0, 0))))))))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (4) / 1)))) ^ 0), _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(4, 0)), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(_GLF_IDENTITY(int(7), ~ (~ (int(7)))), int(7), int(7))), int(7))) ^ (int(ivec2(4, 0))))))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4, _GLF_IDENTITY(4, int(ivec2(4, 0))))), _GLF_IDENTITY(0, 1 * (0)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(4), int(4)))), (~ (~ (_GLF_IDENTITY(int(4), int(4))))) - 0))) >> _GLF_IDENTITY(int(4), int(4)))), (false ? _GLF_FUZZED(floatBitsToInt(vec3(-160.623, -7.6, 255.327))) : _GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4, _GLF_IDENTITY(4, int(ivec2(4, 0))))), _GLF_IDENTITY(0, 1 * (0)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(4), int(4)))), (~ (~ (_GLF_IDENTITY(int(4), int(4))))) - 0))) >> _GLF_IDENTITY(int(4), int(4)))), (ivec3(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4, _GLF_IDENTITY(4, int(ivec2(4, 0))))), _GLF_IDENTITY(0, 1 * (0)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(4), int(4)))), (~ (~ (_GLF_IDENTITY(int(4), int(4))))) - 0))) >> _GLF_IDENTITY(int(4), int(4))))) | (ivec3(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4, _GLF_IDENTITY(4, int(ivec2(4, 0))))), _GLF_IDENTITY(0, 1 * (0)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(4), int(4)))), (~ (~ (_GLF_IDENTITY(int(4), int(4))))) - 0))) >> _GLF_IDENTITY(int(4), int(4)))))))))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(4, (4) / (1 & 1)), 0)), (0 >> _GLF_IDENTITY(int(7), int(7))) ^ (_GLF_IDENTITY(int(ivec2(4, 0)), int(int(int(ivec2(4, 0)))))))))), int(ivec3(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4, _GLF_IDENTITY(4, int(ivec2(4, _GLF_IDENTITY(0, (0) << 0)))))), 0, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(int(4), int(4)))))) >> _GLF_IDENTITY(int(4), int(4)))))), (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(4, 0), (ivec2(4, 0)) << ivec2(0, 0))), _GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (true ? _GLF_IDENTITY(int(7), int(7)) : _GLF_FUZZED(-48307))))))), ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (true ? _GLF_IDENTITY(int(7), int(7)) : _GLF_FUZZED(-48307)))))))) << 0) ^ (_GLF_IDENTITY(int(ivec2(4, 0)), 0 | (_GLF_IDENTITY(int(ivec2(4, 0)), (int(ivec2(4, 0))) | 0)))))))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, 0 ^ (4)), 4, 4)), 4, _GLF_IDENTITY(4, int(ivec2(4, _GLF_IDENTITY(0, max(0, 0))))))), 0, (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(int(4), int(4)))))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(int(4), int(4))))))) << (0 << _GLF_IDENTITY(int(4), int(4)))), (true ? _GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED((+ -99076)))), int(_GLF_IDENTITY(4, 0 | (4)))), ~ (~ (_GLF_IDENTITY(int(4), int(4)))))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(int(4), int(4))))))) << (0 << _GLF_IDENTITY(int(4), int(4)))) : _GLF_FUZZED(15263))) >> _GLF_IDENTITY(int(4), int(4)))), ivec3(ivec3(ivec3(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, 0 ^ (4)), 4, 4)), 4, _GLF_IDENTITY(4, int(ivec2(4, _GLF_IDENTITY(0, max(0, 0))))))), 0, (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(int(4), int(4)))))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(int(4), int(4))))))) << (0 << _GLF_IDENTITY(int(4), int(4)))), (true ? _GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED((+ -99076)))), int(_GLF_IDENTITY(4, 0 | (4)))), ~ (~ (_GLF_IDENTITY(int(4), int(4)))))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(int(4), int(4))))))) << (0 << _GLF_IDENTITY(int(4), int(4)))) : _GLF_FUZZED(15263))) >> _GLF_IDENTITY(int(4), int(4)))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(4, 0)), _GLF_IDENTITY(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(7), int(7))), ((0 >> _GLF_IDENTITY(int(7), int(7)))) * 1) ^ (int(_GLF_IDENTITY(ivec2(4, 0), ivec2(ivec3(ivec2(4, 0), 1))))), (true ? (0 >> _GLF_IDENTITY(int(7), int(7))) ^ _GLF_IDENTITY((int(ivec2(4, 0))), (_GLF_IDENTITY((int(ivec2(4, 0))), ((int(ivec2(4, 0)))) >> 0)) / 1) : _GLF_FUZZED(-70471))))))), int(ivec3(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) << 0))), min(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) << 0))), _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) << 0))))), 4, _GLF_IDENTITY(4, int(ivec2(4, 0))))), 0, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(int(4), int(4)))))) >> _GLF_IDENTITY(int(4), int(4)))))))), (-86796 & 0), 1))), _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, _GLF_IDENTITY(1 * (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-49396) : 4))), 0 + (1 * (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-49396) : 4)))))), _GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec2(4, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec2(4, 0))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(4, int(ivec2(4, 0))) : _GLF_FUZZED(_GLF_IDENTITY(-25960, (-25960) | (-25960))), (true ? _GLF_IDENTITY(4, int(ivec2(4, 0))) : _GLF_FUZZED(_GLF_IDENTITY(-25960, (-25960) | (-25960)))) ^ (0 | 0))))) / 1))))))), 64, _GLF_IDENTITY(4, clamp(4, 4, 4)));
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, clamp(4, 4, 4)))), _GLF_IDENTITY(64, (64) / 1), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-32678))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(55.10)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, false, false, true)))))) || (_GLF_WRAPPED_IF_FALSE(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) != (int(true) & (0 | 0))), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) != _GLF_IDENTITY((int(_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (false))) || (true))) & (_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)))), ((int(_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (false))) || (true))) & (_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0))))) << 0))) && true, (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) != _GLF_IDENTITY((int(_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (false))) || (true))) & (_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)))), ((int(_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (false))) || (true))) & (_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0))))) << 0))) && true, ! (! ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) != _GLF_IDENTITY((int(_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (false))) || (true))) & (_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)))), ((int(_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, true, false)), ! (! (bool(bvec4((false), true, true, false)))))))) || (true))) & (_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0))))) << 0))) && true)))) && true)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / 1.0) > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) || false, (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) || false, true && (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true))))) || false))) || false)), (injectionSwitch.x > injectionSwitch.y))))
            break;
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) || false))))))))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
            barrier();
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
          break;
         break;
        }
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- -7901.5931))), bool(false))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)) < subgroup_size)
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))) && true))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-86.67), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.8)), bvec2(true, false))))).x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))) && true))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4((_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (true && (injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), false || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))) || false)))))), ! (! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), mix(float(float(float(injectionSwitch.y))), float(_GLF_FUZZED(7066.5110)), bool(false))))))))))))))), false, false, false))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         else
          {
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter)) != 0); _injected_loop_counter --)
        {
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), true && (bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), true && (bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))) || false)));
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0))).y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)), ! _GLF_IDENTITY((! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))), bool(bool(_GLF_IDENTITY((! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))), bool(bvec2(_GLF_IDENTITY((! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))), bool(bvec4((! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))), true, false, false))), false))))))))))
        {
        }
       else
        {
         return;
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0)))) : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))))))) && true))
          barrier();
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          return;
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y) - 0.0)))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 barrier();
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                return;
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, false, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, false, false)))))))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   barrier();
                  }
                 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false))
                  return;
                 return;
                }
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), false, true, false)))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), false, true, false)))), false)), bool(bool(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), false, true, false)))), false)))))))
                return;
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0), 0, 0, 0), clamp(ivec4(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) ^ 0) << 0), 0, 0, 0), ivec4(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0), 0, 0, 0), ivec4(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0), 0, 0, 0))))) > (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (int(4))), int(4)))))), (_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0), 0, 0, 0), clamp(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) ^ 0) << 0), 0, 0, 0), (ivec4(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) ^ 0) << 0), 0, 0, 0)) ^ (ivec4(0, 0, 0, 0) | ivec4(0, 0, 0, 0))), ivec4(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0), 0, 0, 0), ivec4(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0), 0, 0, 0))))) > (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (int(4))), int(4))))))) || false)); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   continue;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), (_GLF_DEAD(false)) || false))) && true))))
                  return;
                 return;
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
                  return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))))).y))))
                    {
                     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                      {
                       return;
                      }
                    }
                   barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), true))))
                      {
                      }
                     else
                      {
                       return;
                      }
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   barrier();
                  }
                 return;
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), true && (bool(bvec3(_GLF_DEAD(false), false, false))))))
                  barrier();
                 if(_GLF_DEAD(false))
                  return;
                 barrier();
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
              barrier();
             return;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.4)), float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(7063.0906)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = (_GLF_IDENTITY((_GLF_IDENTITY((1 & 1), ((1 & 1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) - 0)), _GLF_IDENTITY(int(1), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y : _GLF_FUZZED(8105.7979))))) ? _GLF_FUZZED(56734) : int(1))))), max(((1 & 1) << _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) - 0)), _GLF_IDENTITY(int(1), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y)))) ? _GLF_FUZZED(56734) : int(1))))), _GLF_IDENTITY(((1 & 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) - 0)), min(int(_GLF_IDENTITY(1, (1) - 0)), int(_GLF_IDENTITY(1, (1) - 0)))), _GLF_IDENTITY(int(1), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y)) ? _GLF_FUZZED(56734) : int(1))))), ((_GLF_IDENTITY((1 & 1), ((1 & 1)) * 1) << _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) - 0)), _GLF_IDENTITY(int(1), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y)) ? _GLF_FUZZED(56734) : int(1)))))) | (_GLF_IDENTITY(((1 & 1) << _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) - 0)), _GLF_IDENTITY(int(1), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(-74.94), (vec2(1.0, 1.0))[1]), vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(-84.95)), bvec2(true, false)))), injectionSwitch)).y)) ? _GLF_FUZZED(56734) : _GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))))))), max(((_GLF_IDENTITY(1, (1) >> 0) & 1) << _GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) - 0)), _GLF_IDENTITY(int(1), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y)) ? _GLF_FUZZED(56734) : int(1))))), ((1 & 1) << _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) - 0)), _GLF_IDENTITY(int(1), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y)) ? _GLF_FUZZED(56734) : int(1))))))))))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (65835 & 0)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
      }
     do
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        return;
       atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, int(ivec4(4, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))), 4)), 64, 4);
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              break;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))), false, true, false)))) || false))));
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), false || (bool(bool(_GLF_IDENTITY(false, true && (false)))))))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2.1, 1383.5429)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-76.09), _GLF_FUZZED(5.9)), bvec2(false, false))))).y, false || (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))), false, true, true))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))) - vec2(0.0, 0.0)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))))))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true)))))))))
          {
           do
            {
             barrier();
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          barrier();
         continue;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))))
      return;
     subgroupAll(false);
    }
   else
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, false, true)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(! ((injectionSwitch.x > injectionSwitch.y)))), (bool(bool(! ((injectionSwitch.x > injectionSwitch.y))))) && true)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, 1.0, 0.0), (vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, 1.0, 0.0)) / vec3(1.0, 1.0, 1.0))), clamp(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, 1.0, 0.0), (vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, 1.0, 0.0)) / vec3(1.0, 1.0, 1.0))), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, 1.0, 0.0), (vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, 1.0, 0.0)) / vec3(1.0, 1.0, 1.0))), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, 1.0, 0.0), (vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, 1.0, 0.0)) / vec3(1.0, 1.0, 1.0)))))) > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(! ((injectionSwitch.x > injectionSwitch.y)))), (bool(bool(! ((injectionSwitch.x > injectionSwitch.y))))) && true))))) || false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 1.0), (mat3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), min(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y)))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(sin(0.0), mix(float(sin(0.0)), float(_GLF_FUZZED(98.72)), bool(false))), 0.0, 1.0, 1.0)))))))) || ((injectionSwitch.x > injectionSwitch.y))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0))).y)), _GLF_IDENTITY(bool(bool(! ((injectionSwitch.x > injectionSwitch.y)))), (bool(bool(! ((injectionSwitch.x > injectionSwitch.y))))) && true)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-69.09), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(7470.6886, 6.2, -1.1, -5459.5298).y)), bvec2(true, false))).y, injectionSwitch.y)), _GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0))), 0.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 1.0)))))))) || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))) || false))), (bool(bool(! ((injectionSwitch.x > injectionSwitch.y))))) && true)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 1.0)))))))) || ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(sin(0.0), max(_GLF_IDENTITY(sin(0.0), 0.0 + (sin(0.0))), _GLF_IDENTITY(sin(0.0), float(mat2x4(_GLF_IDENTITY(sin(0.0), (sin(0.0)) / 1.0), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0))))), 0.0, 1.0, 1.0)))))))) || ((injectionSwitch.x > injectionSwitch.y)))))) || false)))) && true))), false || ((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0))).y)), _GLF_IDENTITY(bool(bool(! ((injectionSwitch.x > injectionSwitch.y)))), (bool(bool(! ((injectionSwitch.x > injectionSwitch.y))))) && true)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-69.09), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(7470.6886, 6.2, -1.1, -5459.5298).y)), bvec2(true, false))).y, injectionSwitch.y)), _GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0))), 0.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 1.0)))))))) || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))) || false))), (bool(bool(! ((injectionSwitch.x > injectionSwitch.y))))) && true)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 1.0)))))))) || ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(sin(0.0), max(_GLF_IDENTITY(sin(0.0), 0.0 + (sin(0.0))), _GLF_IDENTITY(sin(0.0), float(mat2x4(_GLF_IDENTITY(sin(0.0), (sin(0.0)) / 1.0), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0))))), 0.0, 1.0, 1.0)))))))) || ((injectionSwitch.x > injectionSwitch.y)))))) || false)))) && true)))))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(98.23)), vec2(_GLF_FUZZED(5.2), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         break;
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(float(139235u))), vec2(_GLF_FUZZED(4.1), (vec2(1.0, 1.0))[1]), bvec2(false, true))), exp(vec2(0.0, 0.0)) * ((injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y))))), false, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(float(139235u))), vec2(_GLF_FUZZED(4.1), (vec2(1.0, 1.0))[1]), bvec2(false, true))), exp(vec2(0.0, 0.0)) * ((injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y))))), false, true, false))))), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y), (_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-33.68))) > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-33.68))) > injectionSwitch.y), (bool(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-33.68))) > injectionSwitch.y)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, true && (true)), false)), ! (! (bool(bvec2(_GLF_IDENTITY(true, true && (true)), false)))))), false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(90.62, mix(float(_GLF_FUZZED(3174.7463)), float(90.62), bool(true)))), _GLF_IDENTITY(_GLF_FUZZED(-3.8), 1.0 * (_GLF_FUZZED(-3.8)))), bvec2(false, false))).x, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(658.392)))) - 0.0), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))) + ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1080.4591), _GLF_FUZZED(-606.195)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(90.62), _GLF_FUZZED(-3.8)), bvec2(false, false)), min(mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(658.392)))) - 0.0), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))) + ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1080.4591), _GLF_FUZZED(-606.195)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(90.62), _GLF_FUZZED(-3.8)), bvec2(false, false)), mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(658.392)))) - 0.0), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))) + ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1080.4591), _GLF_FUZZED(-606.195)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(90.62), _GLF_FUZZED(-3.8)), bvec2(false, false))))).x, _GLF_IDENTITY(dot(vec4(0.0, 1.0, _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec4(3.7, -91.27, -3315.7334, -7.2).g)), bool(false))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec2(0.0, 1.0)), dot(vec2(0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec2(0.0, 1.0)))))), 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat4(exp(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0))), 0.0)), dot(vec4(0.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 1.0))), 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, length(0.0), _GLF_ONE(_GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0))), injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), sin(0.0) + (_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0)), (_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(90.62), _GLF_FUZZED(-3.8)), bvec2(false, false))).x, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * exp(0.0))), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, length(0.0), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0)), (float(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 0.0 + _GLF_IDENTITY(((injectionSwitch)[0]), min(((injectionSwitch)[0]), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) * mat2(1.0), (((injectionSwitch)) * mat2(1.0)) - vec2(0.0, 0.0)))[0]), clamp(((injectionSwitch)[0]), ((injectionSwitch)[0]), ((injectionSwitch)[0])))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(90.62), _GLF_FUZZED(-3.8)), bvec2(false, false))).x, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY((vec4(0.0, 1.0, 1.0, 1.0)) * mat4(1.0), mix(vec4(((vec4(0.0, 1.0, 1.0, 1.0)) * mat4(1.0))[0], _GLF_FUZZED(4.5), ((vec4(0.0, 1.0, 1.0, 1.0)) * mat4(1.0))[2], ((vec4(0.0, 1.0, 1.0, 1.0)) * mat4(1.0))[3]), vec4(_GLF_FUZZED(3.2), ((vec4(0.0, 1.0, 1.0, 1.0)) * mat4(1.0))[1], _GLF_FUZZED(-4.7), _GLF_FUZZED(7269.5016)), bvec4(false, true, false, false)))), vec4(_GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, length(0.0), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), clamp(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), (false ? _GLF_FUZZED(dot(vec4(3.2, 9.9, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(92.75)), bool(false))), 1513.9073), vec4(-5085.3303, -3259.5746, 9.0, -9941.8231))) : _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))))), 0.0, 0.0))) - _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9.5) : 0.0)))) - 0.0)) > injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))))))), false, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))));
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))) || false))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) / 1.0) - 0.0)))))))))))
      return;
     atomicStore(checker[virtual_gid], read, 4, 64, 4);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))) || false), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     subgroupAll(true);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       do
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * sqrt(1.0)) < injectionSwitch.y)), true, true))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, sqrt(1.0)))), injectionSwitch)).x : _GLF_FUZZED(_GLF_IDENTITY(-9690.2109, 0.0 + (-9690.2109))))) > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) || false))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     do
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            continue;
           continue;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((-5937.1355 / 245.402)), _GLF_FUZZED(9.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(mat2(injectionSwitch, 0.0, 0.0))))))).x > injectionSwitch.y))));
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))
        {
         if(_GLF_DEAD(false))
          continue;
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))
      return;
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), max(int(5), int(5)))), (1 << _GLF_IDENTITY(int(5), int(5))) + 0)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, min(5, 5))), int(5))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 + (_injected_loop_counter)) > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
      }
     else
      {
       return;
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
