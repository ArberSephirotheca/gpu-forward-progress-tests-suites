#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_11next_virtual_gidreadsubgroup_local_idvirtual_gid;
 uvec4 GLF_merged3_0_2_48_2_1_13_3_1_12GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idsubgroup_sizeworkgroup_id;
 uvec4 GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_11num_workgroupreadsubgroup_idvirtual_gid;
 uvec4 GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 uvec4 GLF_merged3_0_2_51_2_1_16_3_1_17GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidsubgroup_local_id;
 uvec4 GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base;
 uvec4 GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 uvec4 GLF_merged3_0_2_55_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidsubgroup_id;
 uvec2 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec4(true, false, false, _GLF_IDENTITY(true, (true) || false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true, false)))))
        {
         barrier();
        }
       else
        {
        }
      }
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.zw = GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 uvec4 GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup;
 uvec2 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_2_48_2_1_13_3_1_12GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idsubgroup_sizeworkgroup_id.xy = GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
 GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.xy = _GLF_IDENTITY(GLF_merged3_0_2_48_2_1_13_3_1_12GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idsubgroup_sizeworkgroup_id.xy, uvec2(_GLF_IDENTITY(GLF_merged3_0_2_48_2_1_13_3_1_12GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idsubgroup_sizeworkgroup_id.xy, (GLF_merged3_0_2_48_2_1_13_3_1_12GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idsubgroup_sizeworkgroup_id.xy) >> uvec2(0u, 0u))[0], GLF_merged3_0_2_48_2_1_13_3_1_12GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idsubgroup_sizeworkgroup_id.xy[1]));
 GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.xy = _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.xy, _GLF_IDENTITY(uvec2(1u, 1u), (false ? _GLF_FUZZED(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base) : uvec2(1u, 1u))) * (GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.xy));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 uvec2 GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     GLF_merged3_0_2_55_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidsubgroup_id.xy = GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.xy = _GLF_IDENTITY(GLF_merged3_0_2_55_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidsubgroup_id, (GLF_merged3_0_2_55_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidsubgroup_id) | (GLF_merged3_0_2_55_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidsubgroup_id)).xy;
 uvec2 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.zw = GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_2_51_2_1_16_3_1_17GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidsubgroup_local_id.xy = GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.zw;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(1, min(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_11num_workgroupreadsubgroup_idvirtual_gid.z = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)));
 GLF_merged3_0_2_55_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidsubgroup_id.w = GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_11num_workgroupreadsubgroup_idvirtual_gid.z;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   do
    {
     GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.zw.x = GLF_merged3_0_2_55_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidsubgroup_id.w;
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))) : _GLF_FUZZED(injectionSwitch)))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(sqrt(1.0), (true ? sqrt(1.0) : _GLF_FUZZED(cos(7851.9369)))), (_GLF_IDENTITY(sqrt(1.0), (true ? sqrt(1.0) : _GLF_FUZZED(cos(7851.9369))))) / 1.0)), mat3x2(mat4x3(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, sqrt(1.0)))))), mix(vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, sqrt(1.0)), mat3x2(mat4x3(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, sqrt(1.0))))))), clamp(_GLF_IDENTITY((vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.7) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, sqrt(1.0)), mat3x2(mat4x3(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, sqrt(1.0))))))), ((vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, sqrt(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.6) : _GLF_IDENTITY(1.0, 0.0 + (1.0)))))), mat3x2(mat4x3(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, sqrt(1.0)))))))) * vec2(1.0, 1.0)), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, (1.0) * determinant(mat3(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0))), 0.0, sqrt(1.0)), mat3x2(mat4x3(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, sqrt(1.0))))))), clamp((vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, sqrt(1.0)), mat3x2(mat4x3(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, sqrt(1.0))))))), (vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, sqrt(1.0)), mat3x2(mat4x3(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, sqrt(1.0))))))), (vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, sqrt(1.0)), mat3x2(mat4x3(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, sqrt(1.0))))))))), (vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, sqrt(1.0)), mat3x2(mat4x3(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, sqrt(1.0)))))))))[0], (vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, sqrt(1.0)), mat3x2(mat4x3(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, sqrt(1.0)))))))[1]), vec2(_GLF_FUZZED(-4.4), _GLF_FUZZED(1200.0270)), bvec2(false, false)))))).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))) : _GLF_FUZZED(injectionSwitch)))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(sqrt(1.0), (true ? sqrt(1.0) : _GLF_FUZZED(cos(7851.9369)))), (_GLF_IDENTITY(sqrt(1.0), (true ? sqrt(1.0) : _GLF_FUZZED(cos(7851.9369))))) / 1.0)), mat3x2(mat4x3(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, sqrt(1.0)))))), mix(vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, sqrt(1.0)), mat3x2(mat4x3(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, sqrt(1.0))))))), clamp(_GLF_IDENTITY((vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.7) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, sqrt(1.0)), mat3x2(mat4x3(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, sqrt(1.0))))))), ((vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, sqrt(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.6) : _GLF_IDENTITY(1.0, 0.0 + (1.0)))))), mat3x2(mat4x3(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, sqrt(1.0)))))))) * vec2(1.0, 1.0)), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, (1.0) * determinant(mat3(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0))), 0.0, sqrt(1.0)), mat3x2(mat4x3(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, sqrt(1.0))))))), clamp((vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, sqrt(1.0)), mat3x2(mat4x3(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, sqrt(1.0))))))), (vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, sqrt(1.0)), mat3x2(mat4x3(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, sqrt(1.0))))))), (vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, sqrt(1.0)), mat3x2(mat4x3(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, sqrt(1.0))))))))), (vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, sqrt(1.0)), mat3x2(mat4x3(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, sqrt(1.0)))))))))[0], (vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, sqrt(1.0)), mat3x2(mat4x3(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, sqrt(1.0)))))))[1]), vec2(_GLF_FUZZED(-4.4), _GLF_FUZZED(1200.0270)), bvec2(false, false)))))).x)) > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1])).y))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false)))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))), false || (bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))), false || (bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))))))), (! ((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))), false || (bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))))))) && true))) && true)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w = _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, uvec4(GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base[0], GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base[1], GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base[2], GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base[3])).zw.x;
  }
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 GLF_merged3_0_2_48_2_1_13_3_1_12GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idsubgroup_sizeworkgroup_id.z = subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.0) : injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base.z = GLF_merged3_0_2_48_2_1_13_3_1_12GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idsubgroup_sizeworkgroup_id.z;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_11next_virtual_gidreadsubgroup_local_idvirtual_gid.z = subgroup_local_id;
 _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_16_3_1_17GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidsubgroup_local_id.w = GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_11next_virtual_gidreadsubgroup_local_idvirtual_gid.z, (GLF_merged3_0_2_51_2_1_16_3_1_17GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidsubgroup_local_id.w = GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_11next_virtual_gidreadsubgroup_local_idvirtual_gid.z) | 0u);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.xy.y = GLF_merged3_0_2_51_2_1_16_3_1_17GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidsubgroup_local_id.w;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_11num_workgroupreadsubgroup_idvirtual_gid.x = num_workgroup;
  }
 else
  {
  }
 GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base.x = GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_11num_workgroupreadsubgroup_idvirtual_gid.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.w = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base, max(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base, (uvec4(1u, 1u, 1u, 1u) & uvec4(1u, 1u, 1u, 1u)) * (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base, ~ (~ (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base))))))).x;
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.xy.x = _GLF_IDENTITY(GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup)).w;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.y = _GLF_IDENTITY(GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup, _GLF_IDENTITY(clamp(GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup, GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup, GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup), (clamp(GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup, GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup, GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup)) / uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) >> 0u), 1u))).xy.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   GLF_merged3_0_2_51_2_1_16_3_1_17GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidsubgroup_local_id.xy.y = workgroup_size;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), false, false)), ! (! (bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), false, false)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true, false))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x;
 GLF_merged3_0_2_48_2_1_13_3_1_12GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idsubgroup_sizeworkgroup_id.w = workgroup_id;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y)))), float(_GLF_FUZZED(-4.3)), bool(false)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & -98277)); _injected_loop_counter --)
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), injectionSwitch)).y)))))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.xy.y = GLF_merged3_0_2_48_2_1_13_3_1_12GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idsubgroup_sizeworkgroup_id.w, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(GLF_merged3_0_2_48_2_1_13_3_1_12GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idsubgroup_sizeworkgroup_id.w) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.xy.y = GLF_merged3_0_2_48_2_1_13_3_1_12GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idsubgroup_sizeworkgroup_id.w, (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.xy.y = GLF_merged3_0_2_48_2_1_13_3_1_12GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idsubgroup_sizeworkgroup_id.w, (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.xy.y = GLF_merged3_0_2_48_2_1_13_3_1_12GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idsubgroup_sizeworkgroup_id.w, (true ? GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.xy.y = GLF_merged3_0_2_48_2_1_13_3_1_12GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idsubgroup_sizeworkgroup_id.w : _GLF_FUZZED(subgroup_id)))) << 0u)) | 0u), (GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.xy.y = _GLF_IDENTITY(GLF_merged3_0_2_48_2_1_13_3_1_12GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idsubgroup_sizeworkgroup_id.w, (GLF_merged3_0_2_48_2_1_13_3_1_12GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idsubgroup_sizeworkgroup_id.w) / 1u)) ^ 0u), ~ (~ (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(GLF_merged3_0_2_48_2_1_13_3_1_12GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idsubgroup_sizeworkgroup_id.w) : _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.xy.y = GLF_merged3_0_2_48_2_1_13_3_1_12GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idsubgroup_sizeworkgroup_id.w, (GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.xy.y = GLF_merged3_0_2_48_2_1_13_3_1_12GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idsubgroup_sizeworkgroup_id.w) ^ 0u))))));
 GLF_merged3_0_2_51_2_1_16_3_1_17GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidsubgroup_local_id.xy.x = _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.xy.y, (GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.xy.y) << 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) | (1))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))))).x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true)))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-0.7)))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))), false || ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))))))), true)))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY(true, ! (! (true)))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0)))), 1.0)))), _GLF_IDENTITY((min(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))))), clamp((min(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))))), _GLF_IDENTITY((min(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))))), (true ? (min(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))))) : _GLF_FUZZED(vec2(-99.70, -1.3)))), (min(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))))))) * mat2(1.0))).x > injectionSwitch.y, _GLF_IDENTITY(true, true && (true))), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x, float(vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x, tan(0.0)))) > injectionSwitch.y, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, _GLF_IDENTITY(true, (true) || false)), true, true))))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x, float(vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x, tan(0.0)))) > injectionSwitch.y, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, _GLF_IDENTITY(true, (true) || false)), true, true)))))))))) && true))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))))).x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))), (bool(_GLF_IDENTITY(true, bool(bvec4(true, true, true, false))))) || false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true)))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), sin(0.0), 1.0))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, false || (false)) || ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))))))), true)))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY(true, ! (! (true)))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, sin(0.0), 1.0), (mat2(injectionSwitch, sin(0.0), 1.0)) + mat2(0.0, 0.0, 0.0, 0.0))))), (min(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))))) * mat2(1.0))).x > injectionSwitch.y, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x, float(vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x, tan(0.0)))) > injectionSwitch.y, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, sin(0.0), 1.0), _GLF_IDENTITY(mat2(mat4x2(mat2(injectionSwitch, sin(0.0), 1.0))), (mat2(mat4x2(mat2(injectionSwitch, sin(0.0), 1.0)))) + mat2(0.0, 0.0, 0.0, 0.0))))).x > injectionSwitch.y, _GLF_IDENTITY(true, true && (true))), true, true)))))))) && true))))))))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y)), true), _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y)), true), true)), false, true)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))).x > injectionSwitch.y, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), sin(0.0), 1.0))).x > injectionSwitch.y, true)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))).x > injectionSwitch.y, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true)))))), ! (! ((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))).x > injectionSwitch.y, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))).x > injectionSwitch.y, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true)))))), ! (! ((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))).x > injectionSwitch.y, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true))))))))), true)), false || (bool(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))).x > injectionSwitch.y, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true)))))), ! (! ((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))).x > injectionSwitch.y, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true))))))))), true)))))))) && true))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(mat2(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(sin(0.0), (sin(0.0)) / 1.0), (true ? sin(0.0) : _GLF_FUZZED(7.0))), 1.0), transpose(_GLF_IDENTITY(transpose(mat2(injectionSwitch, sin(0.0), 1.0)), transpose(transpose(transpose(mat2(injectionSwitch, sin(0.0), 1.0))))))))).x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)))), vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, 1.0 * (0.0))), 1.0))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, true))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, true)), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, true)), false))), false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, true)), false))), false)), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, true)), false))), false)), true, false)))))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, true))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, false)))))), true)))))), false, true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, true))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, false)))))), true)))))), false, true)), false)), bvec2(bvec3(bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, true))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, false)))))), true)))))), false, true)), false)), true)))))))) && true)))))))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y)), true), _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y)), true), true)), false, true)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))).x > injectionSwitch.y, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), sin(0.0), 1.0))).x > injectionSwitch.y, true)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))).x > injectionSwitch.y, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true)))))), ! (! ((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))).x > injectionSwitch.y, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))).x > injectionSwitch.y, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true)))))), ! (! ((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))).x > injectionSwitch.y, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true))))))))), true)), false || (bool(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))).x > injectionSwitch.y, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true)))))), ! (! ((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))).x > injectionSwitch.y, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true))))))))), true)))))))) && true))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(mat2(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(sin(0.0), (sin(0.0)) / 1.0), (true ? sin(0.0) : _GLF_FUZZED(7.0))), 1.0), transpose(_GLF_IDENTITY(transpose(mat2(injectionSwitch, sin(0.0), 1.0)), transpose(transpose(transpose(mat2(injectionSwitch, sin(0.0), 1.0))))))))).x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)))), vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, 1.0 * (0.0))), 1.0))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, true))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, true)), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, true)), false))), false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, true)), false))), false)), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, true)), false))), false)), true, false)))))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, true))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, false)))))), true)))))), false, true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, true))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, false)))))), true)))))), false, true)), false)), bvec2(bvec3(bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, true))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, false)))))), true)))))), false, true)), false)), true)))))))) && true)))))))), _GLF_IDENTITY(bool(bvec2((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y)), true), _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y)), true), true)), false, true)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))).x > injectionSwitch.y, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), sin(0.0), 1.0))).x > injectionSwitch.y, true)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))).x > injectionSwitch.y, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true)))))), ! (! ((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))).x > injectionSwitch.y, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))).x > injectionSwitch.y, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true)))))), ! (! ((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))).x > injectionSwitch.y, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true))))))))), true)), false || (bool(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))).x > injectionSwitch.y, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true)))))), ! (! ((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))).x > injectionSwitch.y, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true))))))))), true)))))))) && true))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(mat2(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(sin(0.0), (sin(0.0)) / 1.0), (true ? sin(0.0) : _GLF_FUZZED(7.0))), 1.0), transpose(_GLF_IDENTITY(transpose(mat2(injectionSwitch, sin(0.0), 1.0)), transpose(transpose(transpose(mat2(injectionSwitch, sin(0.0), 1.0))))))))).x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)))), vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, 1.0 * (0.0))), 1.0))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, true))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, true)), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, true)), false))), false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, true)), false))), false)), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, true)), false))), false)), true, false)))))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, true))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, false)))))), true)))))), false, true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, true))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, false)))))), true)))))), false, true)), false)), bvec2(bvec3(bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, true))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, false)))))), true)))))), false, true)), false)), true)))))))) && true)))))))), true)), ! (! (bool(bvec2((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y)), true), _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y)), true), true)), false, true)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))).x > injectionSwitch.y, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), sin(0.0), 1.0))).x > injectionSwitch.y, true)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))).x > injectionSwitch.y, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true)))))), ! (! ((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))).x > injectionSwitch.y, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))).x > injectionSwitch.y, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true)))))), ! (! ((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))).x > injectionSwitch.y, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true))))))))), true)), false || (bool(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))).x > injectionSwitch.y, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true)))))), ! (! ((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))).x > injectionSwitch.y, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true))))))))), true)))))))) && true))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(mat2(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(sin(0.0), (sin(0.0)) / 1.0), (true ? sin(0.0) : _GLF_FUZZED(7.0))), 1.0), transpose(_GLF_IDENTITY(transpose(mat2(injectionSwitch, sin(0.0), 1.0)), transpose(transpose(transpose(mat2(injectionSwitch, sin(0.0), 1.0))))))))).x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)))), vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, 1.0 * (0.0))), 1.0))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, true))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), 1.0))).x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, true)), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, true)), false))), false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, true)), false))), false)), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, true)), false))), false)), true, false)))))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, true))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, false)))))), true)))))), false, true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, true))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, false)))))), true)))))), false, true)), false)), bvec2(bvec3(bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, true))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-33.08)), bool(false)))), 1.0))).x > injectionSwitch.y, false)))))), true)))))), false, true)), false)), true)))))))) && true)))))))), true))))))) || false))))))));
  }
 uint workgroup_base = _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_16_3_1_17GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidsubgroup_local_id, ~ (~ (GLF_merged3_0_2_51_2_1_16_3_1_17GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidsubgroup_local_id))).xy.y * _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_16_3_1_17GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidsubgroup_local_id, (GLF_merged3_0_2_51_2_1_16_3_1_17GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidsubgroup_local_id) / uvec4(1u, 1u, 1u, 1u)).xy.x;
 GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base.w = workgroup_base;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = (0 & -90170); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.zw.y = GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base.w;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))));
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = ((1 ^ 1) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))) && true))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.zw.y, ~ (~ (GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.zw.y))) + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w, 0u | (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w)) * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base.z + _GLF_IDENTITY(GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.xy, (false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.xy)).y;
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_11next_virtual_gidreadsubgroup_local_idvirtual_gid.w = virtual_gid, (GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_11next_virtual_gidreadsubgroup_local_idvirtual_gid.w = virtual_gid) << 0u);
 GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_11num_workgroupreadsubgroup_idvirtual_gid.w = GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_11next_virtual_gidreadsubgroup_local_idvirtual_gid.w;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), clamp(float(float(injectionSwitch.x)), float(float(injectionSwitch.x)), float(float(injectionSwitch.x))))))) < injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, int(ivec2(1, 1))), 0, 1)), min(int(ivec3(_GLF_IDENTITY(1, int(ivec2(1, 1))), 0, 1)), int(ivec3(_GLF_IDENTITY(1, int(ivec2(1, 1))), 0, 1)))))); _injected_loop_counter ++)
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bvec2((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false, (false) && true)))))))
          barrier();
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4882.2503)), float(injectionSwitch.y), bool(true))))))) && true));
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       do
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.xy.x = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_11num_workgroupreadsubgroup_idvirtual_gid.w, clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_11num_workgroupreadsubgroup_idvirtual_gid.w, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_11num_workgroupreadsubgroup_idvirtual_gid.w) | (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_11num_workgroupreadsubgroup_idvirtual_gid.w)), (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_11num_workgroupreadsubgroup_idvirtual_gid.w) + 0u), GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_11num_workgroupreadsubgroup_idvirtual_gid.w, GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_11num_workgroupreadsubgroup_idvirtual_gid.w));
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), max(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0))), vec3(injectionSwitch, 1.0))))).x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, abs(0.0) + (injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.zw.y + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w) << 0u) * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base.z, max(GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.zw.y + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w) << 0u) * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base.z, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base.z, max(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base.z, max(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base.z, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base.z, (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base.z) / 1u))), GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base.z))) | (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base.z)), GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.zw.y + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w) << 0u) * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base.z, clamp(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base.z, ~ (~ (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base.z))), GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base.z, GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base.z)))) + ((_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.xy.y, clamp(GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.xy.y, GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.xy.y, GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.xy.y)) + 1) % GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base.z);
 GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_11next_virtual_gidreadsubgroup_local_idvirtual_gid.x = next_virtual_gid;
 GLF_merged3_0_2_51_2_1_16_3_1_17GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidsubgroup_local_id.z = GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_11next_virtual_gidreadsubgroup_local_idvirtual_gid.x;
 GLF_merged3_0_2_55_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidsubgroup_id.z = _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_16_3_1_17GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidsubgroup_local_id, (GLF_merged3_0_2_51_2_1_16_3_1_17GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidsubgroup_local_id) | (GLF_merged3_0_2_51_2_1_16_3_1_17GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidsubgroup_local_id)).z;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.z = GLF_merged3_0_2_55_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidsubgroup_id.z;
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(906.656)), bool(false))) > injectionSwitch.y, false), false, false)))))))))));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     else
      {
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.x = GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.z;
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true)))))
          {
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), true, false))))))))))))
            {
             do
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1))); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false))))), false))), ! (! (_GLF_IDENTITY(false, (false) && true))))));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.x, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.x, _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_11next_virtual_gidreadsubgroup_local_idvirtual_gid.x) : 1u)) * (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.x))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.x, _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_11next_virtual_gidreadsubgroup_local_idvirtual_gid.x) : 1u)) * (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.x))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.x, _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_11next_virtual_gidreadsubgroup_local_idvirtual_gid.x) : 1u)) * (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.x))), clamp(uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.x, _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_11next_virtual_gidreadsubgroup_local_idvirtual_gid.x) : 1u)) * (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.x))), uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.x, _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_11next_virtual_gidreadsubgroup_local_idvirtual_gid.x) : 1u)) * (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.x))), uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.x, _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_11next_virtual_gidreadsubgroup_local_idvirtual_gid.x) : 1u)) * (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.x))))), uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.x, _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_11next_virtual_gidreadsubgroup_local_idvirtual_gid.x) : 1u)) * (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.x))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.x, _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_11next_virtual_gidreadsubgroup_local_idvirtual_gid.x) : 1u)) * (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.x))), (true ? uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.x, _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_11next_virtual_gidreadsubgroup_local_idvirtual_gid.x) : 1u)) * (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.x))) : _GLF_FUZZED(next_virtual_gid)))))))], _GLF_IDENTITY(uint(1), (uint(1)) | (uint(_GLF_IDENTITY(1, (1) ^ 0)))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = atomicLoad(buf[GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.xy.x], 4, 64, 0);
 GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_11next_virtual_gidreadsubgroup_local_idvirtual_gid.y = read;
 GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_11num_workgroupreadsubgroup_idvirtual_gid.y = GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_11next_virtual_gidreadsubgroup_local_idvirtual_gid.y;
 GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base.y = GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_11num_workgroupreadsubgroup_idvirtual_gid.y;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))))))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, ! (! (_injected_loop_counter != 0)))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           barrier();
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, ! (! (true))), true), false)))))))
          {
           barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(max(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), min(max(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(max(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), min(max(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), max(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))))))), injectionSwitch)).x > injectionSwitch.y)) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, false || (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          barrier();
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, 0 ^ (1))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0)))))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), true, false, true)), true && (bool(bvec4((true), true, false, true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.z = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base, (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base) | (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base)).y;
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.xy.y + 1 < GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base.z)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         atomicStore(checker[GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.xy.x], GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.z, 4, 64, 4);
        }
       else
        {
        }
      }
     subgroupAll(false);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       atomicStore(checker[_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.xy.x, (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.xy.x, (GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.xy.x) * 1u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.z, 4, _GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, (64) * 1))), 4);
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(1 ^ 1, min(1 ^ 1, _GLF_IDENTITY(1 ^ 1, (1 ^ 1) ^ 0))))); _injected_loop_counter --)
            {
             barrier();
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (_GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))))))))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(exp2(-7.0))))))));
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
        }
       do
        {
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     subgroupAll(true);
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
