#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
    return;
   return;
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, false)))), true && (bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, false))))))), ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), clamp(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), max(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))), float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), (float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))) / 1.0))), float(_GLF_FUZZED(-3458.9972)), bool(false))))))))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(99.36)), bool(false))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_IDENTITY(false, (false) && true)))))), false, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.1)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true)))) * (vec2(1.0, 1.0))) * (injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, exp(0.0), determinant(mat3(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-41.75 - 349.232))), bool(false))), 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, abs(0.0)), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, abs(0.0)), vec3(1.0, 1.0, 1.0))), 1.0, 1.0, 1.0, 1.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), float(float(float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, exp(0.0), determinant(mat3(1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, abs(0.0)), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, abs(0.0)), vec3(1.0, 1.0, 1.0))), 1.0, 1.0, 1.0, 1.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))))))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(197731u, 168973u, 137106u)))), (_GLF_IDENTITY(~ (gl_NumWorkGroups), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y)) ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(197731u, 168973u, 137106u))))) - uvec3(0u, 0u, 0u)))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, sqrt(1.0), 0.0, 0.0), (mat3x2(injectionSwitch, 0.0, sqrt(1.0), 0.0, 0.0)) * mat3(1.0)))).x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3780.3847), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(vec3((injectionSwitch)[0], 0.0, 0.0))), _GLF_FUZZED(-60.39)), bvec2(true, false))))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))) || false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), float(mat4(injectionSwitch.y, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, 0.0)), mix(float(_GLF_FUZZED(7135.0174)), float(float(vec2(1.0, _GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(65.33) : 0.0)), abs(1.0), 0.0, 1.0)))))), bool(true)))), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), min(determinant(mat3(1.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), determinant(mat3(1.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), length(vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), _GLF_IDENTITY(vec3(sqrt(1.0), determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0), min(vec3(sqrt(1.0), determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0), vec3(sqrt(1.0), determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0)))), dot(vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0))), vec3(sqrt(1.0), determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0))), 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), 0.0)), 1.0)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED((-- workgroup_id)) : _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) + _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), subgroup_id)) * subgroup_size + subgroup_local_id) | (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), _GLF_IDENTITY(0u + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (true ? workgroup_base + subgroup_id * subgroup_size + subgroup_local_id : _GLF_FUZZED(workgroup_id)))))), ~ (_GLF_IDENTITY(~ (0u + (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) ^ (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), 1u * ((0u << _GLF_IDENTITY(uint(1u), uint(1u))))))), 0u), clamp(uvec4(subgroup_id * subgroup_size, 0u, (0u << _GLF_IDENTITY(uint(1u), uint(1u))), 0u), uvec4(subgroup_id * subgroup_size, 0u, (0u << _GLF_IDENTITY(uint(1u), uint(1u))), 0u), uvec4(subgroup_id * subgroup_size, 0u, (0u << _GLF_IDENTITY(uint(1u), uint(1u))), 0u))))) + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) | (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size))))))), max(~ (0u + _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), (uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * subgroup_size, (true ? workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * subgroup_size : _GLF_FUZZED(num_workgroup))) + subgroup_local_id))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), (uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * subgroup_size, (true ? workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * subgroup_size : _GLF_FUZZED(num_workgroup))) + subgroup_local_id)))))), ~ (0u + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) | (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))))))));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_size) | (false ? _GLF_FUZZED(num_workgroup) : subgroup_size)))), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_size) | (false ? _GLF_FUZZED(num_workgroup) : subgroup_size)))), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_size) | (false ? _GLF_FUZZED(num_workgroup) : subgroup_size)))), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_size) | (false ? _GLF_FUZZED(num_workgroup) : subgroup_size))))) >> 0u)) | (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_size) | (false ? _GLF_FUZZED(num_workgroup) : subgroup_size)))), min(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_size) | (false ? _GLF_FUZZED(num_workgroup) : subgroup_size)))), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_size) | (false ? _GLF_FUZZED(num_workgroup) : subgroup_size))))))))) | 0u) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y) / 1.0)), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), min(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), max(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)) * mat2(1.0), vec2(mat4x3((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)) * mat2(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))))), clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))))) / vec2(_GLF_IDENTITY(1.0, float(vec4(1.0, abs(1.0), 1.0, 0.0))), 1.0)).y) / 1.0)), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))), min(true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), min(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))))))) / vec2(1.0, 1.0)).y) / 1.0, mix(float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))))) / vec2(1.0, 1.0)).y) / 1.0), float(_GLF_FUZZED(-3.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(_GLF_IDENTITY(false, (false) || false), true))) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(_GLF_IDENTITY(false, (false) || false), true))) && true))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(_GLF_IDENTITY(false, (false) || false), true))) && true)))), (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(_GLF_IDENTITY(false, (false) || false), true))) && true))))) && true)))), (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(_GLF_IDENTITY(false, (false) || false), true))) && true))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(_GLF_IDENTITY(false, (false) || false), true))) && true)))), (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(_GLF_IDENTITY(false, (false) || false), true))) && true))))) && true))))) || false))))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(4, (4) + 0), 0, 0, 0)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(4, (4) + 0), 0, 0, 0)), max(int(ivec4(_GLF_IDENTITY(4, (4) + 0), 0, 0, 0)), int(ivec4(_GLF_IDENTITY(4, (4) + 0), 0, 0, 0)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(66758) : _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(4, (4) + _GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(95271) : 0))), 0, 0, 0)), max(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) + 0), (_GLF_IDENTITY(4, (4) + 0)) | (_GLF_IDENTITY(4, (4) + 0))), 0, 0, 0)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) + 0))), (4) + 0), 0, 0, 0)))))), int(ivec4(_GLF_IDENTITY(4, (4) + 0), 0, 0, 0)))))), 0 | (~ _GLF_IDENTITY((_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) + 0), 0, 0, 0)))), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, (4) + 0), 0, 0, 0)))))))))), 64, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec3(0, 1, 0)))) | (0)));
 if(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), _GLF_IDENTITY(_GLF_IDENTITY(((1)), max(((1)), _GLF_IDENTITY(((1)), (((1))) / 1))) + 0, _GLF_IDENTITY(clamp(((1)) + 0, _GLF_IDENTITY(((1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ((1)) : _GLF_FUZZED(-14475))) + 0, (_GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), (false ? _GLF_IDENTITY(_GLF_FUZZED(46246), (_GLF_IDENTITY(_GLF_FUZZED(46246), 0 ^ (_GLF_IDENTITY(_GLF_FUZZED(46246), (_GLF_FUZZED(46246)) - 0)))) << int(_GLF_ZERO(0.0, injectionSwitch.x))) : (1))), _GLF_IDENTITY((1), clamp((1), (1), (1))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) / 1))))) + 0), (clamp(((1)) + 0, _GLF_IDENTITY(((1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ((1)) : _GLF_FUZZED(-14475))) + 0, (_GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), (false ? _GLF_IDENTITY(_GLF_FUZZED(46246), (_GLF_IDENTITY(_GLF_FUZZED(46246), 0 ^ (_GLF_IDENTITY(_GLF_FUZZED(46246), (_GLF_FUZZED(46246)) - 0)))) << int(_GLF_ZERO(0.0, injectionSwitch.x))) : (1))), _GLF_IDENTITY((1), clamp((1), (1), (1))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) / 1))))) + 0)) << 0))), 0 + _GLF_IDENTITY((_GLF_IDENTITY((1), _GLF_IDENTITY(((1)) + 0, clamp(((1)) + 0, _GLF_IDENTITY(((1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ((1)) : _GLF_FUZZED(-14475))) + 0, (_GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), (_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(46246), (_GLF_IDENTITY(_GLF_FUZZED(46246), 0 ^ (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(46246, ~ (_GLF_IDENTITY(~ (46246), 0 ^ (~ (46246)))))), (_GLF_FUZZED(46246)) - 0)))) << int(_GLF_ZERO(0.0, injectionSwitch.x))) : (1))), _GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), clamp((1), (1), (1))), (1), (1))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), int(ivec3((1) | (1), 0, 1))))))) / 1), max(1, 1))) / 1))))) + _GLF_IDENTITY(0, (0) << 0))))), (true ? (_GLF_IDENTITY((1), _GLF_IDENTITY(((1)) + 0, clamp(((1)) + 0, _GLF_IDENTITY(((1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ((1)) : _GLF_FUZZED(-14475))) + 0, (_GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), (_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(46246), (_GLF_IDENTITY(_GLF_FUZZED(46246), 0 ^ (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(46246, ~ (_GLF_IDENTITY(~ (46246), 0 ^ (~ (46246)))))), (_GLF_FUZZED(46246)) - 0)))) << int(_GLF_ZERO(0.0, injectionSwitch.x))) : (1))), _GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), clamp((1), (1), (1))), (1), (1))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), int(ivec3((1) | (1), 0, 1))))))) / 1), max(1, 1))) / 1))))) + _GLF_IDENTITY(0, (0) << 0))))) : _GLF_FUZZED(31658)))) | 0) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    return;
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) << _GLF_IDENTITY(0, _GLF_IDENTITY(0, (0) >> 0) ^ (0))), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) | (4)))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)], read, 4, 64, _GLF_IDENTITY(4, min(4, 4)));
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true)))))));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), ! (! (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), bool(true)), max(mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), bool(true)), mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), true && (bool(true))), true, false, true))))))) > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(true && (bool(true)), false || (true && (bool(true))))), true, false, true))))))) > injectionSwitch.y)))) || _GLF_IDENTITY(false, true && (false)))))), false, true, _GLF_IDENTITY(false, (false) && true))))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))))) || false))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(sin(0.0), 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(sin(0.0), 0.0, 1.0, 0.0))), 1.0, 1.0))) > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(44.22, 8.9)))).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))))))))), true && (! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool((! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bool((! (injectionSwitch.x > injectionSwitch.y)))), false))))))))))))))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true, false, false)))) && true), false || (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), bool(true)), (true ? mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), bool(true)) : _GLF_FUZZED(987.145)))) > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), true && (bool(true))), false || (_GLF_IDENTITY(bool(true), true && (bool(true))))))) > injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), true && (bool(true))))) > injectionSwitch.y)))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))), bool(bvec3(false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))), false, false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(true && (bool(true)), false || (true && (bool(true))))))) > injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))))) && true), false, true, false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(718.918)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, false || (false)))))), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))), false))))))), _GLF_IDENTITY(true && (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(injectionSwitch, sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))).x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch))) / vec2(1.0, 1.0)), sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))).x > injectionSwitch.y))))), bool(bvec2(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(injectionSwitch, sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(injectionSwitch, sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))).x > injectionSwitch.y)))))))), false)))))))), (true && (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(injectionSwitch, sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(injectionSwitch, sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(injectionSwitch, sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))))[1]), vec2(_GLF_FUZZED(-2.4), _GLF_FUZZED(382.254)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-530.128, -9.4))))) * vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch))) / vec2(1.0, 1.0)), sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))).x > injectionSwitch.y)), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch))) / vec2(1.0, 1.0)), sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch))) / vec2(1.0, 1.0)), sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))).x > injectionSwitch.y)), bool(bvec4(! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch))) / vec2(1.0, 1.0)), sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))).x > injectionSwitch.y)), true, false, true))))))))))), bool(bvec2(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), _GLF_IDENTITY(mat4(1.0) * (vec4(injectionSwitch, sin(0.0), 0.0)), (mat4(1.0) * (vec4(injectionSwitch, sin(0.0), 0.0))) - vec4(0.0, 0.0, 0.0, 0.0))), min(vec4(injectionSwitch, sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), (vec4(injectionSwitch, sin(0.0), 0.0)) * cos(vec4(0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), mix(vec4(_GLF_FUZZED(-8.1), (vec4(injectionSwitch, sin(0.0), 0.0))[1], _GLF_FUZZED(-8.2), (vec4(injectionSwitch, sin(0.0), 0.0))[3]), vec4((vec4(injectionSwitch, sin(0.0), 0.0))[0], _GLF_FUZZED(3.0), (vec4(injectionSwitch, sin(0.0), 0.0))[2], _GLF_FUZZED(9474.6250)), bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec4(injectionSwitch, sin(0.0), 0.0)))), max(vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), (vec4(injectionSwitch, sin(0.0), 0.0)) * cos(vec4(0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), mix(vec4(_GLF_FUZZED(-8.1), (vec4(injectionSwitch, sin(0.0), 0.0))[1], _GLF_FUZZED(-8.2), (vec4(injectionSwitch, sin(0.0), 0.0))[3]), vec4((vec4(injectionSwitch, sin(0.0), 0.0))[0], _GLF_FUZZED(3.0), (vec4(injectionSwitch, sin(0.0), 0.0))[2], _GLF_FUZZED(9474.6250)), bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec4(injectionSwitch, sin(0.0), 0.0)))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), (vec4(injectionSwitch, sin(0.0), 0.0)) * cos(vec4(0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), mix(vec4(_GLF_FUZZED(-8.1), (vec4(injectionSwitch, sin(0.0), 0.0))[1], _GLF_FUZZED(-8.2), (vec4(injectionSwitch, sin(0.0), 0.0))[3]), vec4((vec4(injectionSwitch, sin(0.0), 0.0))[0], _GLF_FUZZED(3.0), (vec4(injectionSwitch, sin(0.0), 0.0))[2], _GLF_FUZZED(9474.6250)), bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec4(injectionSwitch, sin(0.0), 0.0))))))).x > injectionSwitch.y)))))))), false))))))))) && true)))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true, false, false)))) && true), false || (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), bool(true)), (true ? mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), bool(true)) : _GLF_FUZZED(987.145)))) > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), true && (bool(true))), false || (_GLF_IDENTITY(bool(true), true && (bool(true))))))) > injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), true && (bool(true))))) > injectionSwitch.y)))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))), bool(bvec3(false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))), false, false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(true && (bool(true)), false || (true && (bool(true))))))) > injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))))) && true), false, true, false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(718.918)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, false || (false)))))), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))), false))))))), _GLF_IDENTITY(true && (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(injectionSwitch, sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))).x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch))) / vec2(1.0, 1.0)), sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))).x > injectionSwitch.y))))), bool(bvec2(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(injectionSwitch, sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(injectionSwitch, sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))).x > injectionSwitch.y)))))))), false)))))))), (true && (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(injectionSwitch, sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(injectionSwitch, sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(injectionSwitch, sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))))[1]), vec2(_GLF_FUZZED(-2.4), _GLF_FUZZED(382.254)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-530.128, -9.4))))) * vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch))) / vec2(1.0, 1.0)), sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))).x > injectionSwitch.y)), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch))) / vec2(1.0, 1.0)), sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch))) / vec2(1.0, 1.0)), sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))).x > injectionSwitch.y)), bool(bvec4(! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch))) / vec2(1.0, 1.0)), sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))).x > injectionSwitch.y)), true, false, true))))))))))), bool(bvec2(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), _GLF_IDENTITY(mat4(1.0) * (vec4(injectionSwitch, sin(0.0), 0.0)), (mat4(1.0) * (vec4(injectionSwitch, sin(0.0), 0.0))) - vec4(0.0, 0.0, 0.0, 0.0))), min(vec4(injectionSwitch, sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), (vec4(injectionSwitch, sin(0.0), 0.0)) * cos(vec4(0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), mix(vec4(_GLF_FUZZED(-8.1), (vec4(injectionSwitch, sin(0.0), 0.0))[1], _GLF_FUZZED(-8.2), (vec4(injectionSwitch, sin(0.0), 0.0))[3]), vec4((vec4(injectionSwitch, sin(0.0), 0.0))[0], _GLF_FUZZED(3.0), (vec4(injectionSwitch, sin(0.0), 0.0))[2], _GLF_FUZZED(9474.6250)), bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec4(injectionSwitch, sin(0.0), 0.0)))), max(vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), (vec4(injectionSwitch, sin(0.0), 0.0)) * cos(vec4(0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), mix(vec4(_GLF_FUZZED(-8.1), (vec4(injectionSwitch, sin(0.0), 0.0))[1], _GLF_FUZZED(-8.2), (vec4(injectionSwitch, sin(0.0), 0.0))[3]), vec4((vec4(injectionSwitch, sin(0.0), 0.0))[0], _GLF_FUZZED(3.0), (vec4(injectionSwitch, sin(0.0), 0.0))[2], _GLF_FUZZED(9474.6250)), bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec4(injectionSwitch, sin(0.0), 0.0)))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), (vec4(injectionSwitch, sin(0.0), 0.0)) * cos(vec4(0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), mix(vec4(_GLF_FUZZED(-8.1), (vec4(injectionSwitch, sin(0.0), 0.0))[1], _GLF_FUZZED(-8.2), (vec4(injectionSwitch, sin(0.0), 0.0))[3]), vec4((vec4(injectionSwitch, sin(0.0), 0.0))[0], _GLF_FUZZED(3.0), (vec4(injectionSwitch, sin(0.0), 0.0))[2], _GLF_FUZZED(9474.6250)), bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec4(injectionSwitch, sin(0.0), 0.0))))))).x > injectionSwitch.y)))))))), false))))))))) && true)))))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true, false, false)))) && true), false || (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), bool(true)), (true ? mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), bool(true)) : _GLF_FUZZED(987.145)))) > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), true && (bool(true))), false || (_GLF_IDENTITY(bool(true), true && (bool(true))))))) > injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), true && (bool(true))))) > injectionSwitch.y)))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))), bool(bvec3(false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))), false, false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(true && (bool(true)), false || (true && (bool(true))))))) > injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))))) && true), false, true, false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(718.918)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, false || (false)))))), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))), false))))))), _GLF_IDENTITY(true && (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(injectionSwitch, sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))).x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch))) / vec2(1.0, 1.0)), sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))).x > injectionSwitch.y))))), bool(bvec2(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(injectionSwitch, sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(injectionSwitch, sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))).x > injectionSwitch.y)))))))), false)))))))), (true && (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(injectionSwitch, sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(injectionSwitch, sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(injectionSwitch, sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))))[1]), vec2(_GLF_FUZZED(-2.4), _GLF_FUZZED(382.254)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-530.128, -9.4))))) * vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch))) / vec2(1.0, 1.0)), sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))).x > injectionSwitch.y)), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch))) / vec2(1.0, 1.0)), sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch))) / vec2(1.0, 1.0)), sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))).x > injectionSwitch.y)), bool(bvec4(! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch))) / vec2(1.0, 1.0)), sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))).x > injectionSwitch.y)), true, false, true))))))))))), bool(bvec2(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), _GLF_IDENTITY(mat4(1.0) * (vec4(injectionSwitch, sin(0.0), 0.0)), (mat4(1.0) * (vec4(injectionSwitch, sin(0.0), 0.0))) - vec4(0.0, 0.0, 0.0, 0.0))), min(vec4(injectionSwitch, sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), (vec4(injectionSwitch, sin(0.0), 0.0)) * cos(vec4(0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), mix(vec4(_GLF_FUZZED(-8.1), (vec4(injectionSwitch, sin(0.0), 0.0))[1], _GLF_FUZZED(-8.2), (vec4(injectionSwitch, sin(0.0), 0.0))[3]), vec4((vec4(injectionSwitch, sin(0.0), 0.0))[0], _GLF_FUZZED(3.0), (vec4(injectionSwitch, sin(0.0), 0.0))[2], _GLF_FUZZED(9474.6250)), bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec4(injectionSwitch, sin(0.0), 0.0)))), max(vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), (vec4(injectionSwitch, sin(0.0), 0.0)) * cos(vec4(0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), mix(vec4(_GLF_FUZZED(-8.1), (vec4(injectionSwitch, sin(0.0), 0.0))[1], _GLF_FUZZED(-8.2), (vec4(injectionSwitch, sin(0.0), 0.0))[3]), vec4((vec4(injectionSwitch, sin(0.0), 0.0))[0], _GLF_FUZZED(3.0), (vec4(injectionSwitch, sin(0.0), 0.0))[2], _GLF_FUZZED(9474.6250)), bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec4(injectionSwitch, sin(0.0), 0.0)))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), (vec4(injectionSwitch, sin(0.0), 0.0)) * cos(vec4(0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), mix(vec4(_GLF_FUZZED(-8.1), (vec4(injectionSwitch, sin(0.0), 0.0))[1], _GLF_FUZZED(-8.2), (vec4(injectionSwitch, sin(0.0), 0.0))[3]), vec4((vec4(injectionSwitch, sin(0.0), 0.0))[0], _GLF_FUZZED(3.0), (vec4(injectionSwitch, sin(0.0), 0.0))[2], _GLF_FUZZED(9474.6250)), bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec4(injectionSwitch, sin(0.0), 0.0))))))).x > injectionSwitch.y)))))))), false))))))))) && true)))))))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true, false, false)))) && true), false || (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), bool(true)), (true ? mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), bool(true)) : _GLF_FUZZED(987.145)))) > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), true && (bool(true))), false || (_GLF_IDENTITY(bool(true), true && (bool(true))))))) > injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), true && (bool(true))))) > injectionSwitch.y)))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))), bool(bvec3(false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))), false, false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(true && (bool(true)), false || (true && (bool(true))))))) > injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))))) && true), false, true, false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(718.918)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, false || (false)))))), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))), false))))))), _GLF_IDENTITY(true && (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(injectionSwitch, sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))).x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch))) / vec2(1.0, 1.0)), sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))).x > injectionSwitch.y))))), bool(bvec2(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(injectionSwitch, sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(injectionSwitch, sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))).x > injectionSwitch.y)))))))), false)))))))), (true && (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(injectionSwitch, sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(injectionSwitch, sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(injectionSwitch, sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))))[1]), vec2(_GLF_FUZZED(-2.4), _GLF_FUZZED(382.254)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-530.128, -9.4))))) * vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch))) / vec2(1.0, 1.0)), sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))).x > injectionSwitch.y)), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch))) / vec2(1.0, 1.0)), sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch))) / vec2(1.0, 1.0)), sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))).x > injectionSwitch.y)), bool(bvec4(! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch))) / vec2(1.0, 1.0)), sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))).x > injectionSwitch.y)), true, false, true))))))))))), bool(bvec2(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), _GLF_IDENTITY(mat4(1.0) * (vec4(injectionSwitch, sin(0.0), 0.0)), (mat4(1.0) * (vec4(injectionSwitch, sin(0.0), 0.0))) - vec4(0.0, 0.0, 0.0, 0.0))), min(vec4(injectionSwitch, sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0))))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), (vec4(injectionSwitch, sin(0.0), 0.0)) * cos(vec4(0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), mix(vec4(_GLF_FUZZED(-8.1), (vec4(injectionSwitch, sin(0.0), 0.0))[1], _GLF_FUZZED(-8.2), (vec4(injectionSwitch, sin(0.0), 0.0))[3]), vec4((vec4(injectionSwitch, sin(0.0), 0.0))[0], _GLF_FUZZED(3.0), (vec4(injectionSwitch, sin(0.0), 0.0))[2], _GLF_FUZZED(9474.6250)), bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec4(injectionSwitch, sin(0.0), 0.0)))), max(vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), (vec4(injectionSwitch, sin(0.0), 0.0)) * cos(vec4(0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), mix(vec4(_GLF_FUZZED(-8.1), (vec4(injectionSwitch, sin(0.0), 0.0))[1], _GLF_FUZZED(-8.2), (vec4(injectionSwitch, sin(0.0), 0.0))[3]), vec4((vec4(injectionSwitch, sin(0.0), 0.0))[0], _GLF_FUZZED(3.0), (vec4(injectionSwitch, sin(0.0), 0.0))[2], _GLF_FUZZED(9474.6250)), bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec4(injectionSwitch, sin(0.0), 0.0)))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), (vec4(injectionSwitch, sin(0.0), 0.0)) * cos(vec4(0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), mix(vec4(_GLF_FUZZED(-8.1), (vec4(injectionSwitch, sin(0.0), 0.0))[1], _GLF_FUZZED(-8.2), (vec4(injectionSwitch, sin(0.0), 0.0))[3]), vec4((vec4(injectionSwitch, sin(0.0), 0.0))[0], _GLF_FUZZED(3.0), (vec4(injectionSwitch, sin(0.0), 0.0))[2], _GLF_FUZZED(9474.6250)), bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec4(injectionSwitch, sin(0.0), 0.0))))))).x > injectionSwitch.y)))))))), false))))))))) && true))))))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec2(-7.8, 6.5).t)), float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), bool(true)))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec2(-7.8, 6.5).t)), float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), bool(true))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec2(-7.8, 6.5).t)), float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), bool(true))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec2(-7.8, 6.5).t)), float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), bool(true))))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec2(-7.8, 6.5).t)), float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), bool(true))))), false)))) && true))))))), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, true), true)))), true && (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1629.8895)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, true)))))))), bool(bool(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, true)))))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
  return;
}
