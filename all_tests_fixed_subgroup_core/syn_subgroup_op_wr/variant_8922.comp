#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))) || false)))
      barrier();
     barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = (_GLF_IDENTITY((_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) << 0))), (((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) << 0)))) - 0) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(2), int(2)), (0 << _GLF_IDENTITY(int(2), int(2))) ^ 0)) | (int(4)), clamp((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(2), int(2)), (0 << _GLF_IDENTITY(int(2), int(2))) ^ 0)) | (int(4)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(2), int(2)), (0 << _GLF_IDENTITY(int(2), int(2))) ^ 0)) | (int(4)), _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(2), int(2)), (0 << _GLF_IDENTITY(int(2), int(2))) ^ 0)) | (int(4)), 0 + ((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(2), int(2)), (0 << _GLF_IDENTITY(int(2), int(2))) ^ 0)) | (int(4))))))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) ^ 0)), ((((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY((int(7)) << 0, clamp(_GLF_IDENTITY((int(7)) << 0, 0 ^ ((int(7)) << 0)), (int(7)) << 0, (int(7)) << 0)), ((int(7)) << 0) >> (0 << _GLF_IDENTITY(int(6), int(6))))))) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (0 << _GLF_IDENTITY(int(2), int(2))) | (int(4))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) ^ 0))) >> 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x))), (gl_NumWorkGroups.x) | 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (true)), ! (! ((! (true))))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (true)), ! (! ((! (true))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((! (true)), ! (! ((! (true))))), true, true), false))), false))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((! (true)), ! (! ((! (true)))))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true))))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))))))))) || false)))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9142.7778)), vec2(_GLF_FUZZED((_GLF_IDENTITY((143274u < 137116u), bool(bool((143274u < 137116u)))) ? -42.35 : -6765.8594)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9142.7778)), vec2(_GLF_FUZZED((_GLF_IDENTITY((143274u < 137116u), bool(bool((143274u < 137116u)))) ? -42.35 : -6765.8594)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)) || false))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9142.7778)), vec2(_GLF_FUZZED((_GLF_IDENTITY((143274u < 137116u), bool(bool((143274u < 137116u)))) ? -42.35 : -6765.8594)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y), ((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3.8))) < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9142.7778)), vec2(_GLF_FUZZED((_GLF_IDENTITY((143274u < 137116u), bool(bool((143274u < 137116u)))) ? -42.35 : -6765.8594)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)) || false))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, true))))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))))).y), true, true)), _GLF_IDENTITY(bool(bool(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), true, true)))), ! (! _GLF_IDENTITY((bool(bool(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), mix(float(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(3411.4336)), bool(false)))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8374.3761)), bool(false))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8374.3761)), _GLF_IDENTITY(bool(false), false || (bool(false))))) > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, abs(1.0), 1.0, 1.0, 1.0)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8374.3761)), bool(false))) > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8374.3761)), _GLF_IDENTITY(bool(false), false || (bool(false))))) > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, abs(1.0), 1.0, 1.0, 1.0)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8374.3761)), bool(false))) > injectionSwitch.y)))))), true && (! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8374.3761)), _GLF_IDENTITY(bool(false), false || (bool(false))))) > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, abs(1.0), 1.0, 1.0, 1.0)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8374.3761)), bool(false))) > injectionSwitch.y))))))))))), true, true))))), ((bool(bool(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), mix(float(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(3411.4336)), bool(false)))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8374.3761)), bool(false))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8374.3761)), _GLF_IDENTITY(bool(false), false || (bool(false))))) > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, abs(1.0), 1.0, 1.0, 1.0)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8374.3761)), bool(false))) > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8374.3761)), _GLF_IDENTITY(bool(false), false || (bool(false))))) > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, abs(1.0), 1.0, 1.0, 1.0)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8374.3761)), bool(false))) > injectionSwitch.y)))))), true && (! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8374.3761)), _GLF_IDENTITY(bool(false), false || (bool(false))))) > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, abs(1.0), 1.0, 1.0, 1.0)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8374.3761)), bool(false))) > injectionSwitch.y))))))))))), true, true)))))) && true))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), vec2(vec2((injectionSwitch)))))) / vec2(1.0, 1.0)))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true && (! ((injectionSwitch.x > injectionSwitch.y))), (true && (! ((injectionSwitch.x > injectionSwitch.y)))) || false)))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true, true)), _GLF_IDENTITY(bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(true, ! (! (true))))))), ! (! (bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))))))), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), vec2(vec2((injectionSwitch)))))) / vec2(1.0, 1.0)))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true && (! ((injectionSwitch.x > injectionSwitch.y))), (true && (! ((injectionSwitch.x > injectionSwitch.y)))) || false)))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true, true)), _GLF_IDENTITY(bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(true, ! (! (true))))))), ! (! (bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))))))), ! (! (false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), vec2(vec2((injectionSwitch)))))) / vec2(1.0, 1.0)))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true && (! ((injectionSwitch.x > injectionSwitch.y))), (true && (! ((injectionSwitch.x > injectionSwitch.y)))) || false)))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true, true)), _GLF_IDENTITY(bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(true, ! (! (true))))))), ! (! (bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) * 1.0)), _GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(true, ! (! (true))))), true)), _GLF_IDENTITY(bool(bool(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((vec4(1.0, -1379.2481, -9.1, 0.1).g))), float(injectionSwitch.x), bool(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y), true, true)))), ! (! (bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && true), false), false, true))), false))))), true))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 1.0), mat2(mat3(mat2(injectionSwitch.y, 0.0, 0.0, 1.0)))))))))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.5)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), true, _GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))), ! (! (bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, true && (true)))), true, true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3((true), false, true), bvec3(bvec4(bvec3((true), false, true), false)))))) && true))), true)))), ! (! (bool(bool(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * ((injectionSwitch)[0])), (injectionSwitch)[0])), (injectionSwitch)[1]), (_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * ((injectionSwitch)[0])), (injectionSwitch)[0])), (injectionSwitch)[1]), mix(vec2(_GLF_FUZZED(6.2), _GLF_FUZZED(9710.8460)), vec2((vec2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * ((injectionSwitch)[0])), (injectionSwitch)[0])), (injectionSwitch)[1]))[0], (vec2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * ((injectionSwitch)[0])), (injectionSwitch)[0])), (injectionSwitch)[1]))[1]), bvec2(true, true)))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(1.3), _GLF_FUZZED(-2.9)), bvec2(false, false))).x)) > injectionSwitch.y), true, true))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! _GLF_IDENTITY(_GLF_IDENTITY((! (true)), ((! (true))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (true)), ((! (true))) || false), bool(bvec3(_GLF_IDENTITY((! (true)), ((! (true))) || false), false, true)))))), true)))), ! (! (bool(bool(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, true)))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5565.6574) : injectionSwitch.x)) : _GLF_FUZZED(-9911.7523))), (injectionSwitch.x) * 1.0) > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true)), true)))), true, true)), _GLF_IDENTITY(bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))), ! (! (bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))))))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), _GLF_IDENTITY(bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))), ! (! (bool(bool(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.6) : injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(true, (true) && true), true))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), (bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) && true)) || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), true && (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > injectionSwitch.y) || false)))))))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, true)), _GLF_IDENTITY(bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))), ! (! _GLF_IDENTITY((bool(bool(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((bool(bool(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true))))), ((bool(bool(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), (bool(bvec3(_GLF_IDENTITY((bool(bool(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true))))), ((bool(bool(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))) || false))))))))), false, true, true))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))), max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-55.87), ((injectionSwitch) + vec2(0.0, 0.0))[1]), vec2(((injectionSwitch) + vec2(0.0, 0.0))[0], _GLF_FUZZED(-4.1)), bvec2(true, false)))))))).y), true, true)), _GLF_IDENTITY(bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))), ! (_GLF_IDENTITY(! (bool(bool(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x), float(_GLF_FUZZED(-8374.3761)), bool(false))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8374.3761)), _GLF_IDENTITY(bool(false), false || (bool(false))))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8374.3761)), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(-73.18))), float(_GLF_FUZZED(-8374.3761)), bool(false))) : _GLF_FUZZED(0.7))) > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8374.3761)), _GLF_IDENTITY(bool(false), false || (bool(false))))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8374.3761)), bool(false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8374.3761)), bool(false)))) + 0.0), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(-73.18))), float(_GLF_FUZZED(-8374.3761)), bool(false))) : _GLF_FUZZED(0.7))) > injectionSwitch.y))))) || false))), true, true))))), (! (_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8374.3761)), bool(false))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-8374.3761), min(_GLF_IDENTITY(_GLF_FUZZED(-8374.3761), (_GLF_IDENTITY(_GLF_FUZZED(-8374.3761), max(_GLF_FUZZED(-8374.3761), _GLF_FUZZED(-8374.3761)))) + 0.0), _GLF_FUZZED(-8374.3761)))), _GLF_IDENTITY(bool(false), false || (bool(false))))) > injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-32.78))), 1.0)), 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(82.05) : 0.0)), 0.0, 1.0, sin(0.0), sqrt(0.0), 1.0, 1.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), mix(vec2((vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, sin(0.0), sqrt(0.0), 1.0, 1.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)))[0], _GLF_FUZZED(0.0)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-99.26), (_GLF_FUZZED(-99.26)) - 0.0), (vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(sin(0.0), 0.0 + (sin(0.0))), sqrt(0.0), 1.0, 1.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)))[1]), bvec2(false, true)))).x), float(_GLF_FUZZED(-8374.3761)), bool(false))) > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-32.78))), 1.0)), 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(82.05) : 0.0)), 0.0, 1.0, sin(0.0), sqrt(0.0), 1.0, 1.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), mix(vec2((vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, sin(0.0), sqrt(0.0), 1.0, 1.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)))[0], _GLF_FUZZED(0.0)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-99.26), (_GLF_FUZZED(-99.26)) - 0.0), (vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(sin(0.0), 0.0 + (sin(0.0))), sqrt(0.0), 1.0, 1.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)))[1]), bvec2(false, true)))).x), float(_GLF_FUZZED(-8374.3761)), bool(false))) > injectionSwitch.y))) && true))))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8374.3761)), bool(false))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-8374.3761), min(_GLF_IDENTITY(_GLF_FUZZED(-8374.3761), (_GLF_IDENTITY(_GLF_FUZZED(-8374.3761), max(_GLF_FUZZED(-8374.3761), _GLF_FUZZED(-8374.3761)))) + 0.0), _GLF_FUZZED(-8374.3761)))), _GLF_IDENTITY(bool(false), false || (bool(false))))) > injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-32.78))), 1.0)), 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(82.05) : 0.0)), 0.0, 1.0, sin(0.0), sqrt(0.0), 1.0, 1.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), mix(vec2((vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, sin(0.0), sqrt(0.0), 1.0, 1.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)))[0], _GLF_FUZZED(0.0)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-99.26), (_GLF_FUZZED(-99.26)) - 0.0), (vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(sin(0.0), 0.0 + (sin(0.0))), sqrt(0.0), 1.0, 1.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)))[1]), bvec2(false, true)))).x), float(_GLF_FUZZED(-8374.3761)), bool(false))) > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-32.78))), 1.0)), 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(82.05) : 0.0)), 0.0, 1.0, sin(0.0), sqrt(0.0), 1.0, 1.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), mix(vec2((vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, sin(0.0), sqrt(0.0), 1.0, 1.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)))[0], _GLF_FUZZED(0.0)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-99.26), (_GLF_FUZZED(-99.26)) - 0.0), (vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(sin(0.0), 0.0 + (sin(0.0))), sqrt(0.0), 1.0, 1.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)))[1]), bvec2(false, true)))).x), float(_GLF_FUZZED(-8374.3761)), bool(false))) > injectionSwitch.y))) && true))))), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8374.3761)), bool(false))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-8374.3761), min(_GLF_IDENTITY(_GLF_FUZZED(-8374.3761), (_GLF_IDENTITY(_GLF_FUZZED(-8374.3761), max(_GLF_FUZZED(-8374.3761), _GLF_FUZZED(-8374.3761)))) + 0.0), _GLF_FUZZED(-8374.3761)))), _GLF_IDENTITY(bool(false), false || (bool(false))))) > injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-32.78))), 1.0)), 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(82.05) : 0.0)), 0.0, 1.0, sin(0.0), sqrt(0.0), 1.0, 1.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), mix(vec2((vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, sin(0.0), sqrt(0.0), 1.0, 1.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)))[0], _GLF_FUZZED(0.0)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-99.26), (_GLF_FUZZED(-99.26)) - 0.0), (vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(sin(0.0), 0.0 + (sin(0.0))), sqrt(0.0), 1.0, 1.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)))[1]), bvec2(false, true)))).x), float(_GLF_FUZZED(-8374.3761)), bool(false))) > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-32.78))), 1.0)), 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(82.05) : 0.0)), 0.0, 1.0, sin(0.0), sqrt(0.0), 1.0, 1.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), mix(vec2((vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, sin(0.0), sqrt(0.0), 1.0, 1.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)))[0], _GLF_FUZZED(0.0)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-99.26), (_GLF_FUZZED(-99.26)) - 0.0), (vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(sin(0.0), 0.0 + (sin(0.0))), sqrt(0.0), 1.0, 1.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)))[1]), bvec2(false, true)))).x), float(_GLF_FUZZED(-8374.3761)), bool(false))) > injectionSwitch.y))) && true))))), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8374.3761)), bool(false))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-8374.3761), min(_GLF_IDENTITY(_GLF_FUZZED(-8374.3761), (_GLF_IDENTITY(_GLF_FUZZED(-8374.3761), max(_GLF_FUZZED(-8374.3761), _GLF_FUZZED(-8374.3761)))) + 0.0), _GLF_FUZZED(-8374.3761)))), _GLF_IDENTITY(bool(false), false || (bool(false))))) > injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-32.78))), 1.0)), 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(82.05) : 0.0)), 0.0, 1.0, sin(0.0), sqrt(0.0), 1.0, 1.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), mix(vec2((vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, sin(0.0), sqrt(0.0), 1.0, 1.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)))[0], _GLF_FUZZED(0.0)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-99.26), (_GLF_FUZZED(-99.26)) - 0.0), (vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(sin(0.0), 0.0 + (sin(0.0))), sqrt(0.0), 1.0, 1.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)))[1]), bvec2(false, true)))).x), float(_GLF_FUZZED(-8374.3761)), bool(false))) > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-32.78))), 1.0)), 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(82.05) : 0.0)), 0.0, 1.0, sin(0.0), sqrt(0.0), 1.0, 1.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), mix(vec2((vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, sin(0.0), sqrt(0.0), 1.0, 1.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)))[0], _GLF_FUZZED(0.0)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-99.26), (_GLF_FUZZED(-99.26)) - 0.0), (vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(sin(0.0), 0.0 + (sin(0.0))), sqrt(0.0), 1.0, 1.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)))[1]), bvec2(false, true)))).x), float(_GLF_FUZZED(-8374.3761)), bool(false))) > injectionSwitch.y))) && true))))), true, true))))))), true)))))), (bool(bool(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8374.3761)), bool(false))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-8374.3761), min(_GLF_FUZZED(-8374.3761), _GLF_FUZZED(-8374.3761)))), _GLF_IDENTITY(bool(false), false || (bool(false))))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, sin(0.0), sqrt(0.0), 1.0, 1.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), mix(vec2((vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), clamp((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0), _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), mix(vec2(((injectionSwitch) - vec2(0.0, 0.0))[0], ((injectionSwitch) - vec2(0.0, 0.0))[1]), vec2(_GLF_FUZZED(13.01), _GLF_FUZZED((723.903 - -75.88))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, sin(0.0), sqrt(0.0), 1.0, 1.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)))[0], _GLF_FUZZED(0.0)), vec2(_GLF_FUZZED(-99.26), (vec2(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * mat2(1.0), clamp((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * mat2(1.0))))) / vec2(1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.1)), float(0.0), bool(true))), 0.0, 1.0, _GLF_IDENTITY(sin(0.0), 0.0 + (sin(0.0))), sqrt(0.0), 1.0, 1.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)))[1]), bvec2(_GLF_IDENTITY(false, false || (false)), true)))).x), float(_GLF_FUZZED(-8374.3761)), bool(false))) > injectionSwitch.y)))))), true, true))))) && true))) || false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true && (! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(true && (! ((injectionSwitch.x > injectionSwitch.y))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(true && (! ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(true && (! ((injectionSwitch.x > injectionSwitch.y))), true && (true && (! ((injectionSwitch.x > injectionSwitch.y))))))), false)))))), (_GLF_IDENTITY(true, (true) && true) && (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, tan(0.0) + (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, 1.0)))) / 1.0))) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, tan(0.0) + (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, 1.0)))) / 1.0))) > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(injectionSwitch.x, tan(0.0) + (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, 1.0)))) / 1.0))) > injectionSwitch.y)))))))))) || false))), bool(bool((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true && (! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(true && (! ((injectionSwitch.x > injectionSwitch.y))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(true && (! ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(true && (! ((injectionSwitch.x > injectionSwitch.y))), true && (true && (! ((injectionSwitch.x > injectionSwitch.y))))))), false)))))), (_GLF_IDENTITY(true, (true) && true) && (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, tan(0.0) + (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, 1.0)))) / 1.0))) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, tan(0.0) + (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, 1.0)))) / 1.0))) > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(injectionSwitch.x, tan(0.0) + (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, 1.0)))) / 1.0))) > injectionSwitch.y)))))))))) || false))))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(vec4(max(injectionSwitch, injectionSwitch), 0.0, 1.0)))) / vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 0.0, length(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0), (mat3x4(1.0, 0.0, 0.0, length(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) - 0.0)))).x > injectionSwitch.y), true, true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((- -44.60))), float(injectionSwitch.y), bool(true)))), true, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! (_GLF_IDENTITY((! (true)), bool(bvec4((! (true)), false, false, true))))))))), true && (bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((- -44.60))), float(injectionSwitch.y), bool(true)))), true, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! (_GLF_IDENTITY((! (true)), bool(bvec4((! (true)), false, false, true))))))))))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))), true, true)), bool(bool(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))), true, true)))))))))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), false)), ! (! (bool(bvec2(bool(bvec4(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), false))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).x > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), ((true)) || false)))))), false || ((_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), ((true)) || false))))))))), true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED((vec4(1.0, -1379.2481, -9.1, 0.1).g)), clamp(_GLF_IDENTITY(_GLF_FUZZED((vec4(1.0, -1379.2481, -9.1, 0.1).g)), mix(float(_GLF_FUZZED(-5793.9064)), float(_GLF_FUZZED((vec4(1.0, -1379.2481, -9.1, _GLF_IDENTITY(0.1, min(0.1, _GLF_IDENTITY(0.1, min(0.1, _GLF_IDENTITY(0.1, float(mat4x3(0.1, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))))))).g))), bool(true))), _GLF_FUZZED((vec4(1.0, -1379.2481, -9.1, 0.1).g)), _GLF_IDENTITY(_GLF_FUZZED((vec4(1.0, -1379.2481, -9.1, 0.1).g)), float(_GLF_IDENTITY(float(_GLF_FUZZED((vec4(1.0, -1379.2481, -9.1, 0.1).g))), mix(float(float(_GLF_FUZZED((vec4(1.0, -1379.2481, -9.1, 0.1).g)))), float(_GLF_FUZZED(6831.6190)), bool(false)))))))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true))), true)), (_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED((vec4(1.0, -1379.2481, -9.1, 0.1).g)), clamp(_GLF_IDENTITY(_GLF_FUZZED((vec4(1.0, -1379.2481, -9.1, 0.1).g)), mix(float(_GLF_FUZZED(-5793.9064)), float(_GLF_FUZZED((vec4(1.0, -1379.2481, -9.1, 0.1).g))), bool(true))), _GLF_FUZZED((vec4(1.0, -1379.2481, -9.1, 0.1).g)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((vec4(1.0, -1379.2481, -9.1, 0.1).g)), float(mat4(_GLF_FUZZED((vec4(1.0, -1379.2481, -9.1, 0.1).g)), sqrt(1.0), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 0.0))), float(_GLF_IDENTITY(float(_GLF_FUZZED((vec4(1.0, -1379.2481, -9.1, 0.1).g))), mix(float(float(_GLF_FUZZED((vec4(1.0, -1379.2481, -9.1, 0.1).g)))), float(_GLF_FUZZED(6831.6190)), bool(false)))))))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y), true, true)), ! (! (bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED((vec4(1.0, -1379.2481, -9.1, 0.1).g)), clamp(_GLF_IDENTITY(_GLF_FUZZED((vec4(1.0, -1379.2481, -9.1, 0.1).g)), mix(float(_GLF_FUZZED(-5793.9064)), float(_GLF_FUZZED((vec4(1.0, -1379.2481, -9.1, 0.1).g))), bool(true))), _GLF_FUZZED((vec4(1.0, -1379.2481, -9.1, 0.1).g)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((vec4(1.0, -1379.2481, -9.1, 0.1).g)), float(mat4(_GLF_FUZZED((vec4(1.0, -1379.2481, -9.1, 0.1).g)), sqrt(1.0), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 0.0))), float(_GLF_IDENTITY(float(_GLF_FUZZED((vec4(1.0, -1379.2481, -9.1, 0.1).g))), mix(float(float(_GLF_FUZZED((vec4(1.0, -1379.2481, -9.1, 0.1).g)))), float(_GLF_FUZZED(6831.6190)), bool(false)))))))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y), true, true)))))) || false))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, true))), false))))), true)))), ! (! (bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, true))), false))))), true)))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))))))) && true))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.5)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(126.627)), bool(false)))), _GLF_IDENTITY(bool(true), bool(bool(bool(true)))))) > injectionSwitch.y), true, _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-9.5), (_GLF_FUZZED(-9.5)) - tan(0.0))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), true, _GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec4(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-9.5), (_GLF_FUZZED(-9.5)) - tan(0.0))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), true, _GLF_IDENTITY(true, ! (! (true)))))), true))))), _GLF_IDENTITY(bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))), ! (! (bool(bool(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), true, true))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, true && (true)))), true, true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(90.81, 9812.3721)) : _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))))).y), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), true)))), ! (! (bool(bool(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-780.590)))), float(_GLF_FUZZED(-6292.1940)), bool(false))) > injectionSwitch.y), true, true), false))))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + length(vec2(0.0, 0.0)))), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (true)))), ((! (true))) || false)), true)))), ! (! (bool(bool(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, true)))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))))))))), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), _GLF_IDENTITY(bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))), ! _GLF_IDENTITY((! (bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))), ((! (bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))) && true))))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, true)), _GLF_IDENTITY(bool(bool(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(false))) > injectionSwitch.y), true, true)))), ! _GLF_IDENTITY((! (bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (true) && true), true)))))), (_GLF_IDENTITY((! (bool(bool(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(true, (true) && true), true)))))), ! (! (_GLF_IDENTITY((! (bool(bool(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))), _GLF_IDENTITY(true, (true) && true), true)))))), false || ((! (bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (true) && true), true)))))))))))) || _GLF_IDENTITY(false, true && (false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))) * vec2(1.0, 1.0)) - vec2(0.0, 0.0)).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.2, 5.6)))), injectionSwitch)).y, (injectionSwitch.x > injectionSwitch.y) || false)))))))))), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), _GLF_IDENTITY(bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))), ! (! (bool(_GLF_IDENTITY(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), _GLF_IDENTITY(bool(bvec2(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), true)), bool(bool(bool(bvec2(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), true))))))))))))))), false, true, true)))))))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), bvec3(bvec4(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, false, _GLF_IDENTITY(false, (false) && true)), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), true))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)), false), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))))))))))))))))))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                {
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
              barrier();
             barrier();
            }
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false || (_GLF_DEAD(false))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               do
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
             do
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))));
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
             else
              {
              }
            }
          }
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED((false ? -8.9 : _GLF_IDENTITY(-96.09, max(-96.09, -96.09)))), (_GLF_FUZZED((false ? -8.9 : -96.09))) + log(1.0)), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-4.8, (_GLF_IDENTITY(-4.8, 1.0 * (-4.8))) * abs(cos(0.0))), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(-4.8, max(-4.8, -4.8)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(82.45)), float(_GLF_IDENTITY(-4.8, max(-4.8, -4.8))), bool(true)), min(mix(float(_GLF_FUZZED(82.45)), float(_GLF_IDENTITY(-4.8, max(-4.8, -4.8))), bool(true)), mix(float(_GLF_FUZZED(82.45)), float(_GLF_IDENTITY(-4.8, max(-4.8, -4.8))), bool(true))))), 1.0, 1.0, 0.0, 1.0, abs(0.0)))))), vec2(_GLF_IDENTITY((injectionSwitch), vec2(vec2((injectionSwitch))))[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    {
    }
   else
    {
     barrier();
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec4(0.0, sqrt(1.0), 1.0, 0.0)))) + sin(0.0)))))).x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, max(0u, 0u))), uint(uvec4(~ (_GLF_IDENTITY(0u, max(0u, 0u))), 0u, 0u, 1u)))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, max(0u, 0u))), uint(uvec4(~ (_GLF_IDENTITY(0u, max(0u, 0u))), 0u, 0u, 1u))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), (uint(uvec3(0u, 1u, 0u))) << 0u))))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), min((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), clamp((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))))))))))) + (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))) + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), injectionSwitch.y))))) && true) ? _GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) : _GLF_FUZZED(subgroup_local_id)), ((0u >> _GLF_IDENTITY(uint(7u), uint(7u))) << _GLF_IDENTITY(uint(8u), uint(8u))) ^ ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) : _GLF_FUZZED(subgroup_local_id)))));
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)) && true); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(497.820)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(-23101) : _injected_loop_counter)) != (89448 & 0)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), min(uint(1), uint(_GLF_IDENTITY(1, int(int(1)))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], buf[virtual_gid])), (buf[virtual_gid]) | (buf[virtual_gid])), 4, 64, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) ^ 0), 0)));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((8.1 * -459.277), min((8.1 * -459.277), (8.1 * -459.277)))), (_GLF_IDENTITY(_GLF_FUZZED((8.1 * -459.277)), max(_GLF_FUZZED((8.1 * -459.277)), _GLF_FUZZED((_GLF_IDENTITY(8.1, (false ? _GLF_FUZZED(round(-7842.1040)) : 8.1)) * -459.277))))) * 1.0)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED((8.1 * -459.277)), (_GLF_IDENTITY(_GLF_FUZZED((8.1 * -459.277)), _GLF_IDENTITY(max(_GLF_FUZZED((8.1 * -459.277)), _GLF_FUZZED((8.1 * -459.277))), clamp(max(_GLF_FUZZED((8.1 * -459.277)), _GLF_FUZZED((8.1 * -459.277))), max(_GLF_FUZZED((8.1 * -459.277)), _GLF_FUZZED((8.1 * -459.277))), max(_GLF_FUZZED((8.1 * -459.277)), _GLF_FUZZED((8.1 * _GLF_IDENTITY(-459.277, float(_GLF_IDENTITY(vec2(-459.277, 0.0), vec2(1.0, 1.0) * (vec2(-459.277, 0.0)))))))))))) * 1.0)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED((8.1 * -459.277)), (_GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(8.1 * -459.277, mix(float(_GLF_IDENTITY(8.1 * -459.277, (8.1 * -459.277) * 1.0)), float(_GLF_FUZZED(-48.51)), bool(false))))), _GLF_IDENTITY(max(_GLF_FUZZED((8.1 * -459.277)), _GLF_FUZZED((8.1 * -459.277))), clamp(max(_GLF_FUZZED((8.1 * -459.277)), _GLF_FUZZED((8.1 * -459.277))), max(_GLF_FUZZED((8.1 * -459.277)), _GLF_FUZZED((_GLF_IDENTITY(8.1, clamp(8.1, 8.1, 8.1)) * -459.277))), max(_GLF_FUZZED((8.1 * -459.277)), _GLF_FUZZED((8.1 * -459.277))))))) * 1.0)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED((8.1 * -459.277)), (_GLF_IDENTITY(_GLF_FUZZED((8.1 * -459.277)), _GLF_IDENTITY(max(_GLF_FUZZED((8.1 * -459.277)), _GLF_FUZZED((8.1 * -459.277))), clamp(max(_GLF_FUZZED((8.1 * -459.277)), _GLF_FUZZED((8.1 * -459.277))), max(_GLF_FUZZED((8.1 * -459.277)), _GLF_FUZZED((8.1 * -459.277))), max(_GLF_FUZZED((8.1 * -459.277)), _GLF_FUZZED((8.1 * -459.277))))))) * 1.0)), _GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0)) * sqrt(1.0)), bool(true))) < injectionSwitch.y)) || false)))), bool(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED((8.1 * -459.277)), (_GLF_IDENTITY(_GLF_FUZZED((8.1 * -459.277)), max(_GLF_FUZZED((8.1 * -459.277)), _GLF_FUZZED((8.1 * -459.277))))) * 1.0)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED((8.1 * -459.277)), (_GLF_IDENTITY(_GLF_FUZZED((8.1 * -459.277)), max(_GLF_FUZZED((8.1 * -459.277)), _GLF_FUZZED((8.1 * -459.277))))) * 1.0)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED((8.1 * -459.277)), (_GLF_IDENTITY(_GLF_FUZZED((8.1 * -459.277)), max(_GLF_FUZZED((8.1 * -459.277)), _GLF_FUZZED((8.1 * -459.277))))) * 1.0)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y))))))), true, false)))))), bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8.1 * -459.277))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))) < injectionSwitch.y)), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((_GLF_IDENTITY(8.1 * -459.277, max(8.1 * -459.277, 8.1 * -459.277))))), float(injectionSwitch.x), bool(true))) < _GLF_IDENTITY(injectionSwitch.y, determinant(mat2(1.0, 0.0, 0.0, round(length(normalize(1.0))))) * (injectionSwitch.y)))), false)), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(8.1, 0.0 + (8.1)) * -459.277, max(_GLF_IDENTITY(_GLF_IDENTITY(8.1, 0.0 + (8.1)) * -459.277, max(_GLF_IDENTITY(8.1, 0.0 + (8.1)) * -459.277, _GLF_IDENTITY(_GLF_IDENTITY(8.1, 0.0 + (8.1)) * -459.277, float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(8.1, 0.0 + (8.1)) * -459.277, min(_GLF_IDENTITY(8.1, 0.0 + (8.1)) * -459.277, _GLF_IDENTITY(8.1, 0.0 + (8.1)) * -459.277)), 0.0, 1.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(8.1, 0.0 + _GLF_IDENTITY((8.1), mix(float(_GLF_FUZZED(282.377)), float((8.1)), bool(true)))) * -459.277))))), float(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((injectionSwitch - injectionSwitch)) : injectionSwitch)).x), bool(true))) < injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8.1 * -459.277))), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), bool(true))) < injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8.1 * -459.277))), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), bool(true))) < injectionSwitch.y)) && true, ! (! (((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8.1 * -459.277))), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), bool(true))) < _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, log(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, abs(0.0))), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(tan(0.0), 0.0), vec2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), dot(vec2(tan(0.0), 0.0), vec2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))), 0.0))).y)) && true))))), false), false), bvec3(bvec4(bvec3(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8.1 * -459.277))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), bool(true))) < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8.1 * -459.277))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), bool(true))) < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8.1 * -459.277))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), bool(true))) < injectionSwitch.y))), false)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8.1 * -459.277))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), bool(true))) < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8.1 * -459.277))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), bool(true))) < injectionSwitch.y))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8.1 * -459.277))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), bool(true))) < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8.1 * -459.277))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), bool(true))) < injectionSwitch.y))), false)))))) && true)))), false), false), true)))))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY((8.1 * -459.277), _GLF_IDENTITY(float(mat3x2((8.1 * -459.277), _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(8.7) : float(mat3x2((8.1 * -459.277), _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), 1.0, 0.0, 1.0))))))), float(injectionSwitch.x), bool(true))) < _GLF_IDENTITY(injectionSwitch.y, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(25.19)), bool(false))), round(length(normalize(1.0))))) * (injectionSwitch.y)))), _GLF_IDENTITY(false, true && (false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(8.1, 0.0 + (8.1)) * -459.277, max(_GLF_IDENTITY(_GLF_IDENTITY(8.1, 0.0 + (8.1)) * -459.277, max(_GLF_IDENTITY(8.1, 0.0 + (8.1)) * -459.277, _GLF_IDENTITY(_GLF_IDENTITY(8.1, _GLF_IDENTITY(0.0 + (8.1), (false ? _GLF_FUZZED(-30.53) : 0.0 + (8.1)))) * -459.277, float(mat2x3(_GLF_IDENTITY(8.1, 0.0 + (8.1)) * -459.277, 0.0, 1.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(8.1, 0.0 + (8.1)) * -459.277))))), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8.1 * -459.277))), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), bool(true))) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8.1 * -459.277))), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), bool(true))) < injectionSwitch.y)) && true), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8.1 * -459.277))), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), bool(true))) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8.1 * -459.277))), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), bool(true))) < injectionSwitch.y)) && true))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec3(bvec4(bvec3(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8.1 * -459.277))), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x))) + 0.0)), bool(true))) < injectionSwitch.y)), false), _GLF_IDENTITY(false, (false) && true)), true)))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(8.1, 0.0 + (8.1)) * -459.277, max(_GLF_IDENTITY(_GLF_IDENTITY(8.1, 0.0 + (8.1)) * -459.277, max(_GLF_IDENTITY(8.1, 0.0 + (8.1)) * -459.277, _GLF_IDENTITY(_GLF_IDENTITY(8.1, _GLF_IDENTITY(0.0 + (8.1), (false ? _GLF_FUZZED(-30.53) : 0.0 + (8.1)))) * -459.277, float(mat2x3(_GLF_IDENTITY(8.1, 0.0 + (8.1)) * -459.277, 0.0, 1.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(8.1, 0.0 + (8.1)) * -459.277))))), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8.1 * -459.277))), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), bool(true))) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8.1 * -459.277))), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), bool(true))) < injectionSwitch.y)) && true), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8.1 * -459.277))), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), bool(true))) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8.1 * -459.277))), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), bool(true))) < injectionSwitch.y)) && true))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec3(bvec4(bvec3(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8.1 * -459.277))), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x))) + 0.0)), bool(true))) < injectionSwitch.y)), false), _GLF_IDENTITY(false, (false) && true)), true)))))), false, true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(8.1, 0.0 + (8.1)) * -459.277, max(_GLF_IDENTITY(_GLF_IDENTITY(8.1, 0.0 + (8.1)) * -459.277, max(_GLF_IDENTITY(8.1, 0.0 + (8.1)) * -459.277, _GLF_IDENTITY(_GLF_IDENTITY(8.1, _GLF_IDENTITY(0.0 + (8.1), (false ? _GLF_FUZZED(-30.53) : 0.0 + (8.1)))) * -459.277, float(mat2x3(_GLF_IDENTITY(8.1, 0.0 + (8.1)) * -459.277, 0.0, 1.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(8.1, 0.0 + (8.1)) * -459.277))))), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8.1 * -459.277))), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), bool(true))) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8.1 * -459.277))), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), bool(true))) < injectionSwitch.y)) && true), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8.1 * -459.277))), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), bool(true))) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8.1 * -459.277))), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), bool(true))) < injectionSwitch.y)) && true))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec3(bvec4(bvec3(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8.1 * -459.277))), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x))) + 0.0)), bool(true))) < injectionSwitch.y)), false), _GLF_IDENTITY(false, (false) && true)), true)))))), false, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(8.1, 0.0 + (8.1)) * -459.277, max(_GLF_IDENTITY(_GLF_IDENTITY(8.1, 0.0 + (8.1)) * -459.277, max(_GLF_IDENTITY(8.1, 0.0 + (8.1)) * -459.277, _GLF_IDENTITY(_GLF_IDENTITY(8.1, _GLF_IDENTITY(0.0 + (8.1), (false ? _GLF_FUZZED(-30.53) : 0.0 + (8.1)))) * -459.277, float(mat2x3(_GLF_IDENTITY(8.1, 0.0 + (8.1)) * -459.277, 0.0, 1.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(8.1, 0.0 + (8.1)) * -459.277))))), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8.1 * -459.277))), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), bool(true))) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8.1 * -459.277))), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), bool(true))) < injectionSwitch.y)) && true), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8.1 * -459.277))), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), bool(true))) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8.1 * -459.277))), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), bool(true))) < injectionSwitch.y)) && true))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec3(bvec4(bvec3(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8.1 * -459.277))), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x))) + 0.0)), bool(true))) < injectionSwitch.y)), false), _GLF_IDENTITY(false, (false) && true)), true)))))), false, true))))), false))))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), true))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8.1 * -459.277))), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), bool(true))) < _GLF_IDENTITY(injectionSwitch.y, determinant(mat2(1.0, 0.0, 0.0, round(length(normalize(1.0))))) * (injectionSwitch.y)))), false), bvec2(bvec4(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), true))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((_GLF_IDENTITY(8.1, mix(float(_GLF_FUZZED(-1.0)), float(_GLF_IDENTITY(8.1, max(8.1, 8.1))), bool(true))) * -459.277))), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), bool(true))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0))).y, determinant(mat2(1.0, 0.0, 0.0, round(length(normalize(1.0))))) * _GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), (false ? _GLF_FUZZED(-892.099) : (injectionSwitch.y)))))))), false), true, true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(8.1, 0.0 + (8.1)) * -459.277, max(_GLF_IDENTITY(_GLF_IDENTITY(8.1, 0.0 + (8.1)) * -459.277, max(_GLF_IDENTITY(8.1, 0.0 + (8.1)) * -459.277, _GLF_IDENTITY(_GLF_IDENTITY(8.1, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-9.0 * float(120700u)))), float(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), bool(true))) + _GLF_IDENTITY((8.1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2.9) : _GLF_IDENTITY((8.1), min((8.1), (8.1)))))) * -459.277, float(mat2x3(_GLF_IDENTITY(8.1, 0.0 + (8.1)) * -459.277, 0.0, 1.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(8.1, 0.0 + (8.1)) * -459.277))))), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), float(mat3x2(float(injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(float(injectionSwitch.x), (false ? _GLF_FUZZED(373.997) : float(injectionSwitch.x))))), bool(true))) < injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8.1 * -459.277))), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), bool(true))) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8.1 * -459.277))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x : _GLF_FUZZED(-1091.9079)))), bool(true))) < injectionSwitch.y)) && true)), false), false), bvec3(bvec4(bvec3(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8.1 * -459.277))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), bool(true))) < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((_GLF_IDENTITY(8.1 * -459.277, (true ? _GLF_IDENTITY(8.1 * -459.277, (8.1 * -459.277) - 0.0) : _GLF_FUZZED(8.7)))))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), bool(true))) < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8.1 * -459.277))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), bool(true))) < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8.1 * -459.277))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), bool(true))) < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false), false), true))))))))))), false, true))))))))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, false))), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, true))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, true))), true)))))), true)))), ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_IF_FALSE(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)), bool(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), ! (! (_GLF_IDENTITY(! (! (! (false))), bool(bvec3(! (! (! (false))), false, true)))))))))), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec3(bool(true), false, false), bvec3(bvec4(bvec3(bool(true), false, false), true)))))))))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, true))), true)))))), true))))) || false))))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 ^ (_GLF_IDENTITY(int(5), 0 + (int(5))))))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       else
        {
        }
      }
     if(subgroup_local_id + 1 < subgroup_size)
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, min(0, 0)), 0)), 0)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) < (1 ^ 0)); _GLF_IDENTITY(_injected_loop_counter ++, (true ? _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) + 0) : _GLF_FUZZED(_injected_loop_counter))))
            {
             do
              {
               do
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, true && ((_GLF_IDENTITY(false, ! (! (false)))) || false))), (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, true && ((_GLF_IDENTITY(false, ! (! (false)))) || false)))) || false))), (_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, ((false) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || _GLF_IDENTITY(false, bool(bvec3(false, false, false))))), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, true && ((_GLF_IDENTITY(false, ! (! (false)))) || false))), (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, true && ((_GLF_IDENTITY(false, ! (! (false)))) || false)))) || false))), (_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, ((false) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || _GLF_IDENTITY(false, bool(bvec3(false, false, false))))), true, true)))))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
              {
               do
                {
                 atomicStore(checker[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)], read, 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) | 0)) | (_GLF_IDENTITY(64, int(ivec2(64, 1))))), 4);
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) && true)))))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
            {
             do
              {
               subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false)))), true && (bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec2(bvec2(bvec3(bvec2(true, true), false))))))))))) && true), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) || false)), false))), _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), true && (bool(injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y) && true), _GLF_IDENTITY(bool(bvec4(! ((injectionSwitch.x < injectionSwitch.y) && true), true, false, true)), (bool(bvec4(! ((injectionSwitch.x < injectionSwitch.y) && true), true, false, true))) && true)))))))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec4(bvec3(bvec3(false, true, true)), true))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), true && (bool(injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y) && true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! ((injectionSwitch.x < injectionSwitch.y) && true), true, false, true)), (bool(bvec4(! ((injectionSwitch.x < injectionSwitch.y) && true), true, false, true))) || false), (bool(bvec4(! ((injectionSwitch.x < injectionSwitch.y) && true), true, false, true))) && true))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec4(bvec3(bvec3(false, true, true)), true))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), true && (bool(injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y) && true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! ((injectionSwitch.x < injectionSwitch.y) && true), true, false, true)), (bool(bvec4(! ((injectionSwitch.x < injectionSwitch.y) && true), true, false, true))) || false), (bool(bvec4(! ((injectionSwitch.x < injectionSwitch.y) && true), true, false, true))) && true))))))))))), true)))))), true)))) || (false)));
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), false)))), false, false)))), true)))), (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))) && _GLF_IDENTITY(true, ! (! (true))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), false)))), false, false)))), true)))), (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))) && _GLF_IDENTITY(true, ! (! (true))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false, true), false)))), false, false)))), true)))), (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))) && _GLF_IDENTITY(true, ! (! (true)))))) && true))))));
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           atomicStore(checker[_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uint(virtual_gid), uint(uvec4(_GLF_IDENTITY(uint(virtual_gid), ~ (~ (uint(_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec4(virtual_gid, (0u | 0u), (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, _GLF_IDENTITY(0u ^ (5u), ~ (~ (0u ^ (5u)))))), uint(5u))), _GLF_IDENTITY(0u, min(0u, 0u))), (false ? _GLF_FUZZED(uvec4(140876u, 176947u, 14812u, 175492u)) : uvec4(virtual_gid, (0u | 0u), (0u << _GLF_IDENTITY(uint(5u), uint(5u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), min(0u, 0u))))))))))), 1u, 1u, 1u)))))], read, 4, 64, 4);
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), true, true), true)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), true, true), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), true, true), true)))), false, false, false))))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             subgroupAll(true);
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(false || (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))))), (false || (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))))))) && true))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(-859.930))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))))).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-603.493)), vec2(_GLF_FUZZED(770.490), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), float(_GLF_FUZZED(-6.1)), bool(false)))))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 1.0, 0.0))))))))))))))))))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   barrier();
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                 else
                  {
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))));
            }
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(float(1.0)))) - 0.0), 1.0)), injectionSwitch.y))); _injected_loop_counter ++)
                  {
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               else
                {
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, int(ivec4(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)), 1, 0, 1))))) < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
