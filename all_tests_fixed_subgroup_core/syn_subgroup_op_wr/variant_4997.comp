#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), int(ivec3(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0) : _GLF_FUZZED(3215.4744)))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
          }
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(max(int(3), int(3)), min(max(int(3), int(3)), _GLF_IDENTITY(max(_GLF_IDENTITY(int(_GLF_IDENTITY(3, 0 | (3))), clamp(int(_GLF_IDENTITY(3, 0 | (3))), int(_GLF_IDENTITY(3, 0 | (3))), int(_GLF_IDENTITY(3, 0 | (3))))), int(3)), clamp(max(int(_GLF_IDENTITY(3, max(3, _GLF_IDENTITY(3, min(_GLF_IDENTITY(3, 0 | (3)), 3))))), int(3)), max(int(3), int(3)), max(int(3), int(3))))))))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), 0 + ((_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), 0 | (int(0))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, min(3, 3))), int(3))))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) ^ 0)))); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
          continue;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), (! (false)) || false))))))))
        continue;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) - vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sin(-52.52)) : injectionSwitch.y))))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false, false))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          barrier();
        }
       return;
      }
     barrier();
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
  return;
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, 0 | (_injected_loop_counter --)))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_DEAD(false)) || _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), false || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false || (_GLF_DEAD(false))))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)), bool(bool(_GLF_DEAD(false)))), false || (_GLF_DEAD(false))))))))), true && ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)), bool(bool(_GLF_DEAD(false)))), false || (_GLF_DEAD(false)))))))))))))))))
      return;
     return;
    }
  }
 for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || false))))))), ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        break;
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
          {
          }
         else
          {
           barrier();
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        break;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       return;
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))) ? _GLF_FUZZED(uvec3(158835u, 156859u, 182870u)) : gl_NumWorkGroups)))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, sin(0.0), 0.0), (true ? mat2(injectionSwitch, sin(0.0), 0.0) : _GLF_FUZZED(mat2(-62.43, 77.62, 9.3, -629.875)))))).x > injectionSwitch.y))))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, true)))));
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 0.0, 0.0))), tan(0.0), 1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), 1.0))))))), injectionSwitch.y)), length(vec3(0.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED(422.938)), float(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 0.0, 0.0))), tan(0.0), 1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), 1.0))))))), injectionSwitch.y)), length(vec3(0.0, 0.0, 0.0)))), clamp(float(vec2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 0.0, 0.0))), tan(0.0), 1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), 1.0))))))), injectionSwitch.y)), length(vec3(0.0, 0.0, 0.0)))), float(vec2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 0.0, 0.0))), tan(0.0), 1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), 1.0))))))), injectionSwitch.y)), length(vec3(0.0, 0.0, 0.0)))), float(vec2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 0.0, 0.0))), tan(0.0), 1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), 1.0))))))), injectionSwitch.y)), length(vec3(0.0, 0.0, 0.0))))))), bool(true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), injectionSwitch.y)), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), max(length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), float(mat4x2(_GLF_IDENTITY(length(vec3(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(88.13) : _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 1.0))))), 0.0)), _GLF_IDENTITY((length(vec3(0.0, 0.0, 0.0))) - 0.0, mix(float(_GLF_FUZZED(float(true))), float((length(vec3(0.0, 0.0, 0.0))) - 0.0), bool(true)))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))))))))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
    }
   else
    {
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
          return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), min((subgroup_id), (subgroup_id))) ^ 0u))) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_size))) + 1) % subgroup_size), min(workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), min((subgroup_id), (subgroup_id))) ^ 0u))) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_size))) + 1) % subgroup_size), workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), min((subgroup_id), (subgroup_id))) ^ 0u))) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_size))) + 1) % subgroup_size)));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true && (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), _GLF_IDENTITY(bool(bvec2(true && (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec2(true && (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true && (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), _GLF_IDENTITY(bool(bvec2(true && (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec2(true && (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true && _GLF_IDENTITY((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), (_GLF_IDENTITY((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), bool(bvec3((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), true, true)))) && true), _GLF_IDENTITY(bool(bvec2(true && _GLF_IDENTITY((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), ! (! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true && (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(true && (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true && (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(true && (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), true && ((_GLF_IDENTITY(bool(bvec2(true && (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(true && (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))))))))), false || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true && _GLF_IDENTITY((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), (_GLF_IDENTITY((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), bool(bvec3((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), true, true)))) && true), _GLF_IDENTITY(bool(bvec2(true && _GLF_IDENTITY((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), ! (! ((true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true && (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(true && (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true && (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(true && (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), true && ((_GLF_IDENTITY(bool(bvec2(true && (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(true && (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))))))))))) || false))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, 1 * (4))) | (4)), _GLF_IDENTITY(64, _GLF_IDENTITY((64), ((64)) >> 0) | (_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, ~ (~ (64))), 64)))), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bvec3(bool(bool(false)), true, true)), (bool(_GLF_IDENTITY(bvec3(bool(bool(false)), true, true), bvec3(bvec3(bvec3(bool(bool(false)), true, true)))))) && true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))), true, true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
  }
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) | 0u) + (buf[virtual_gid])), 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) && true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (read), clamp(~ (read), _GLF_IDENTITY(~ (_GLF_IDENTITY(read, (_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), min(~ (read), ~ (read)))))) | 0u)), max(~ (_GLF_IDENTITY(read, (_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), min(~ (read), ~ (read)))))) | 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(read, (_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), min(~ (read), ~ (read)))))) | 0u)), (~ (_GLF_IDENTITY(read, (_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), min(~ (read), ~ (read)))))) | 0u))) ^ 0u))), ~ (read))), uint(uvec3(_GLF_IDENTITY(~ (read), clamp(~ (read), ~ (read), ~ (read))), 0u, 0u))))), ~ (~ (_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((read), uint(uvec3((read), 1u, 1u))), _GLF_IDENTITY(clamp(~ (read), ~ (read), ~ (read)), _GLF_IDENTITY(min(_GLF_IDENTITY(clamp(~ (read), ~ (read), ~ (read)), 0u | (clamp(~ _GLF_IDENTITY((read), ((read)) ^ 0u), ~ (read), ~ (read)))), _GLF_IDENTITY(clamp(~ (read), _GLF_IDENTITY(~ (read), uint(_GLF_IDENTITY(uint(~ (read)), clamp(uint(~ (read)), uint(~ (read)), uint(~ (read)))))), ~ (read)), uint(uint(clamp(~ (read), ~ _GLF_IDENTITY((read), ((read)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (read)))))), uint(uvec2(_GLF_IDENTITY(min(_GLF_IDENTITY(clamp(~ (read), ~ (read), ~ (read)), 0u | (clamp(~ _GLF_IDENTITY((read), ((read)) ^ 0u), ~ (read), ~ (read)))), _GLF_IDENTITY(clamp(~ (read), _GLF_IDENTITY(~ (read), uint(_GLF_IDENTITY(uint(~ (read)), clamp(uint(~ (read)), uint(~ (read)), uint(~ (read)))))), ~ (read)), uint(uint(clamp(~ (read), ~ _GLF_IDENTITY((read), ((read)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (read)))))), (_GLF_IDENTITY(min(_GLF_IDENTITY(clamp(~ (read), ~ (read), ~ (read)), 0u | (clamp(~ _GLF_IDENTITY((read), ((read)) ^ 0u), ~ (read), ~ (read)))), _GLF_IDENTITY(clamp(~ (read), _GLF_IDENTITY(~ (read), uint(_GLF_IDENTITY(uint(~ (read)), clamp(uint(~ (read)), uint(~ (read)), uint(~ (read)))))), ~ (read)), uint(uint(clamp(~ (read), ~ _GLF_IDENTITY((read), ((read)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (read)))))), (min(_GLF_IDENTITY(clamp(~ (read), ~ (read), ~ (read)), 0u | (clamp(~ _GLF_IDENTITY((read), ((read)) ^ 0u), ~ (read), ~ (read)))), _GLF_IDENTITY(clamp(~ (read), _GLF_IDENTITY(~ (read), uint(_GLF_IDENTITY(uint(~ (read)), clamp(uint(~ (read)), uint(~ (read)), uint(~ (read)))))), ~ (read)), uint(uint(clamp(~ (read), ~ _GLF_IDENTITY((read), ((read)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (read))))))) | 0u)) / 1u), 1u))))), uint(uvec3(_GLF_IDENTITY(~ (_GLF_IDENTITY(read, max(read, read))), clamp(~ (read), ~ (read), ~ (read))), 0u, 0u)))))))), 4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), max(64, 64)), (64) - _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-38421)))), 4);
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-99598)))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)) || false))))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))) || false)))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                return;
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             else
              {
              }
            }
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
            break;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((true ? 567.787 : 15.99))), bool(false)))))))
        {
         do
          {
           if(_GLF_DEAD(false))
            continue;
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), false, false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))), injectionSwitch), mix(vec2(_GLF_FUZZED(2473.0040), (max(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))), injectionSwitch))[1]), vec2((max(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))), injectionSwitch))[0], _GLF_FUZZED((false ? 92.32 : 2.9))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) - vec2(0.0, 0.0)).x < injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-344.090, 3.7)))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9163.7898), _GLF_FUZZED(-4.0)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), injectionSwitch)))).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-344.090, 3.7)))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9163.7898), _GLF_FUZZED(-4.0)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), injectionSwitch)))).x), float(_GLF_FUZZED(58.03)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) < injectionSwitch.y)))) && _GLF_IDENTITY(true, (true) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.3)), bvec2(true, false))), injectionSwitch)).x < injectionSwitch.y)))) && true)))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(-8.2, -92.19, 6131.4736, 2.9)) : mat2(injectionSwitch.x, 1.0, 0.0, 0.0))))) < injectionSwitch.y, true && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-546.641) : injectionSwitch.y)), injectionSwitch.y))))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))) && (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))) && (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))) && (injectionSwitch.x < injectionSwitch.y)))))) || false))), (((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))) && (injectionSwitch.x < injectionSwitch.y))))) || false) && true)))), bool(bool(! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-546.641) : injectionSwitch.y)), injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))) && (injectionSwitch.x < injectionSwitch.y)))), (((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))) && (injectionSwitch.x < injectionSwitch.y))))) || false), bool(bvec4(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))) && (injectionSwitch.x < injectionSwitch.y)))), (((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))) && (injectionSwitch.x < injectionSwitch.y))))) || false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))))))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), bool(bvec4(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(false, (false) && true) || (! (true))))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-8.5, (-8.5) - 0.0), 3.2)) : injectionSwitch, clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-8.5, (-8.5) - 0.0), 3.2)) : injectionSwitch, (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-8.5, (-8.5) - 0.0), 3.2)) : injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-8.5, (-8.5) - 0.0), 3.2)) : injectionSwitch, vec2(mat3x4(false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-8.5, (-8.5) - 0.0), 3.2)) : injectionSwitch, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0))), false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-8.5, (-8.5) - 0.0), 3.2)) : injectionSwitch)))).x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))), true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1145.4595, -2789.4617)))).x < injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       subgroupAll(false);
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) - 0)), max(_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) - 0)), _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) - 0))))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                barrier();
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               barrier();
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
                {
                 if(_GLF_DEAD(false))
                  break;
                 return;
                }
               if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 return;
                }
              }
            }
          }
         do
          {
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
            {
            }
           else
            {
             barrier();
            }
          }
         return;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
            }
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
      return;
    }
   else
    {
    }
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), clamp(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, min(1, 1))))), _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) ^ 0)))))), 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.6), _GLF_FUZZED(-79.76)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 0 | (1))]), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 0 | (1))]), 1.0, 1.0, abs(1.0), 1.0), (false ? _GLF_FUZZED(mat3x2(-5.7, 43.23, -8.0, -19.59, 8090.8890, -3.1)) : mat3x2(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 0 | (1))]), 1.0, 1.0, abs(1.0), 1.0)))), max(vec2(_GLF_IDENTITY(mat3x2(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 0 | (1))]), 1.0, 1.0, abs(1.0), 1.0), (false ? _GLF_FUZZED(mat3x2(-5.7, 43.23, -8.0, -19.59, 8090.8890, -3.1)) : mat3x2(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 0 | (1))]), 1.0, 1.0, abs(1.0), 1.0)))), vec2(_GLF_IDENTITY(mat3x2(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 0 | (1))]), 1.0, 1.0, abs(1.0), 1.0), (false ? _GLF_FUZZED(mat3x2(-5.7, 43.23, -8.0, -19.59, 8090.8890, -3.1)) : mat3x2(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 0 | (1))]), 1.0, 1.0, abs(1.0), 1.0))))))), bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true), true))).y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))), true, true))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))), true, true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      return;
    }
   atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), (_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), _GLF_IDENTITY((uvec3(virtual_gid, 1u, 0u)), (_GLF_IDENTITY((uvec3(virtual_gid, 1u, 0u)), ((uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) << uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u)) | (uvec3(virtual_gid, 1u, 0u)))) * uvec3(1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(1u, 0u | (1u))) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), clamp(_GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, (0u) - 0u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, 0u | (1u)))), _GLF_IDENTITY(0u, (0u) - 0u)))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(0u | (1u), (0u | (1u)) * 1u)))), _GLF_IDENTITY(0u, (0u) - 0u))))) >> 0u), _GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, 0u | (1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), (_GLF_IDENTITY(0u, (0u) - 0u)) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), 1u * (_GLF_IDENTITY(0u, (0u) - 0u)))))) * 1u)))), _GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, 0u | (1u)))), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, ((0u) - 0u) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, 1u, 0u)), min(_GLF_IDENTITY(uint(uvec3(virtual_gid, 1u, 0u)), min(uint(uvec3(virtual_gid, 1u, 0u)), uint(uvec3(virtual_gid, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(virtual_gid, 1u, 0u)), (false ? _GLF_FUZZED(59488u) : _GLF_IDENTITY(uint(uvec3(virtual_gid, 1u, 0u)), (uint(uvec3(virtual_gid, 1u, 0u))) ^ 0u)))))), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, 1u, 0u)), min(_GLF_IDENTITY(uint(uvec3(virtual_gid, 1u, 0u)), clamp(uint(uvec3(virtual_gid, 1u, 0u)), uint(uvec3(virtual_gid, 1u, 0u)), uint(uvec3(virtual_gid, 1u, 0u)))), uint(uvec3(virtual_gid, 1u, 0u)))))) ^ 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) + 0u))), 0u))), _GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), uvec3(uvec4(uvec3(virtual_gid, 1u, 0u), 1u)))))) ^ 0u)), (_GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED((subgroup_local_id & virtual_gid))))))))))) ^ _GLF_IDENTITY(0u, 0u | (0u)))), (min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, 1u, 0u)), (_GLF_IDENTITY(uint(uvec3(virtual_gid, 1u, 0u)), min(uint(uvec3(virtual_gid, 1u, 0u)), uint(uvec3(virtual_gid, 1u, 0u))))) / 1u)), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(virtual_gid, _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))), 0u), (uvec3(virtual_gid, _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))), 0u)) | (_GLF_IDENTITY(uvec3(virtual_gid, _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))), 0u), (uvec3(virtual_gid, _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))), 0u)) | (uvec3(virtual_gid, _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))), 0u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec3(virtual_gid, 1u, 0u)), uvec3(uvec4(~ (uvec3(virtual_gid, 1u, 0u)), 0u))), _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(~ (uvec3(virtual_gid, 1u, 0u)), uvec3(uvec4(~ (uvec3(virtual_gid, 1u, 0u)), 0u))), 0u)), (_GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(~ (uvec3(virtual_gid, 1u, 0u)), uvec3(uvec4(~ (uvec3(virtual_gid, 1u, 0u)), 0u))), 0u)), clamp(uvec3(uvec4(_GLF_IDENTITY(~ (uvec3(virtual_gid, 1u, 0u)), uvec3(uvec4(~ (uvec3(virtual_gid, 1u, 0u)), 0u))), 0u)), uvec3(uvec4(_GLF_IDENTITY(~ (uvec3(virtual_gid, 1u, 0u)), uvec3(uvec4(~ (uvec3(virtual_gid, 1u, 0u)), 0u))), 0u)), uvec3(uvec4(_GLF_IDENTITY(~ (uvec3(virtual_gid, 1u, 0u)), uvec3(uvec4(~ (uvec3(virtual_gid, 1u, 0u)), 0u))), 0u))))) >> uvec3(0u, 0u, 0u)))))))) ^ 0u))) | (0u | 0u))) | (min(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, 1u, 0u)), (uint(uvec3(virtual_gid, 1u, 0u))) << (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))) ^ 0u))))))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) | 0u))), uint(uvec3(virtual_gid, 1u, 0u))), min(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), 1u, 0u)))) ^ 0u))))), (_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), ~ (~ (~ (virtual_gid))))))) | (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), virtual_gid, virtual_gid)))), uint(uvec3(virtual_gid, 1u, 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), (uvec3(virtual_gid, 1u, 0u)) | (uvec3(virtual_gid, 1u, 0u))))), uint(uvec3(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), 0u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u, 1u * ((_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), clamp(_GLF_IDENTITY((1u), clamp((1u), (1u), (1u))), (1u), _GLF_IDENTITY((1u), clamp((1u), (1u), (1u))))) | 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), (_GLF_IDENTITY(1u, (1u) | 0u)) >> 0u))), 1u)), 0u)))) ^ 0u)))))))) / 1u), 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 0u, 0u, 1u))), max(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) | (0u)))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), clamp(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), uint(uvec3(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), 0u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))) ^ 0u) : _GLF_FUZZED(subgroup_size))), uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 0u, 0u, 1u))), max(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 1u, 0u)))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), min(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), min(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), min(uvec3(virtual_gid, 1u, 0u), uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(virtual_gid, 1u, 0u)))))))) ^ 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec4(virtual_gid, 0u, 0u, 1u)), (uint(uvec4(virtual_gid, 0u, 0u, 1u))) | (uint(uvec4(virtual_gid, 0u, 0u, 1u))))), max(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), min(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u, 0u, 1u, (((0u | 1u) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), max(uvec4(1u, 0u, 1u, (((0u | 1u) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), uvec4(1u, 0u, 1u, (((0u | 1u) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(uvec4(1u, 0u, 1u, (((0u | 1u) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), max(uvec4(1u, 0u, 1u, (((0u | 1u) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), uvec4(1u, 0u, 1u, (((0u | 1u) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))))))), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u)))))) - _GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u)))))) - 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), (_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), _GLF_IDENTITY((uvec3(virtual_gid, 1u, 0u)), (_GLF_IDENTITY((uvec3(virtual_gid, 1u, 0u)), ((uvec3(virtual_gid, 1u, 0u))) << uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u)) | (uvec3(virtual_gid, 1u, 0u)))) * uvec3(1u, 1u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) - 0u), 1u, 1u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(0u | (1u), ~ (~ (0u | (1u))))))), _GLF_IDENTITY(0u, (0u) - 0u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, 0u | (1u)))), _GLF_IDENTITY(0u, (0u) - 0u)))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, 0u | (1u)))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) - 0u))))) >> 0u), _GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, 0u | (1u)))), _GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, 0u | (1u)))), _GLF_IDENTITY(0u, (0u) - 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, 1u, 0u)), min(_GLF_IDENTITY(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, (0u) << 0u))), clamp(uint(uvec3(virtual_gid, 1u, 0u)), uint(uvec3(virtual_gid, 1u, 0u)), uint(uvec3(virtual_gid, 1u, 0u)))), uint(uvec3(virtual_gid, 1u, 0u)))))) ^ 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), ~ (~ (uvec3(virtual_gid, 1u, 0u)))))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u)), (_GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) >> 0u))))) | 0u), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ _GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY((min(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(virtual_gid, 1u, 0u)), uvec3(uvec4(~ (uvec3(virtual_gid, 1u, 0u)), 0u)))))))) ^ 0u))) | (0u | 0u), uint(_GLF_IDENTITY(uvec4((min(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(virtual_gid, 1u, 0u)), uvec3(uvec4(~ (uvec3(virtual_gid, 1u, 0u)), 0u)))))))) ^ 0u))) | (0u | 0u), 1u, 0u, 1u), (uvec4((min(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(virtual_gid, 1u, 0u)), uvec3(uvec4(~ (uvec3(virtual_gid, 1u, 0u)), 0u)))))))) ^ 0u))) | (0u | 0u), 1u, 0u, 1u)) >> uvec4(0u, 0u, 0u, 0u)))))) | (min(_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), min(uvec3(virtual_gid, 1u, 0u), uvec3(virtual_gid, 1u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, _GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), 0u)))) ^ 0u))))))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u))), uint(uvec3(virtual_gid, 1u, 0u))), min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, 1u, 0u)), (_GLF_IDENTITY(uint(uvec3(virtual_gid, 1u, 0u)), (uint(uvec3(virtual_gid, 1u, 0u))) >> 0u)) >> 0u)), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), uint(uvec3(virtual_gid, 1u, 0u)))) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u, (0u ^ 0u))), (false ? _GLF_FUZZED(virtual_gid) : uint(uvec4(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u, (0u ^ 0u))))))))))), (_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) | (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), virtual_gid, virtual_gid)))), uint(uvec3(virtual_gid, 1u, 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, _GLF_IDENTITY(1u, (1u) << 0u), 0u))), uint(uvec3(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), 0u, _GLF_IDENTITY(1u, (1u) - 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), ~ (~ (_GLF_IDENTITY(virtual_gid, uint(uvec3(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), 1u, 0u))))))) ^ 0u, 1u * ((_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), (_GLF_IDENTITY(1u, (1u) | 0u)) >> 0u))), 1u)), 0u)))) ^ 0u)))))))) / 1u), 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 0u, 0u, 1u))), max(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u), uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, min(0u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 0u, 0u, 1u))), max(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), min(_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, (190809u & 0u) | (virtual_gid)))), 1u, 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec3(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, (190809u & 0u) | (virtual_gid)))), 1u, 0u) : _GLF_FUZZED(uvec3(72214u, 128567u, 3524u)))))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), clamp(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))))), uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), clamp(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))))), min((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), clamp(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), clamp(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))))))), 1u, 0u))) ^ 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(virtual_gid, 0u, 0u, 1u)), (uint(uvec4(virtual_gid, 0u, 0u, 1u))) | (_GLF_IDENTITY(uint(uvec4(virtual_gid, 0u, 0u, 1u)), (uint(uvec4(virtual_gid, 0u, 0u, 1u))) ^ 0u))), (uint(uvec4(virtual_gid, 0u, 0u, 1u))) | (uint(uvec4(virtual_gid, 0u, 0u, 1u))))), max(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), min(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, 0u + (1u)), 0u, 1u, (((0u | 1u) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), max(uvec4(1u, 0u, 1u, ((_GLF_IDENTITY((0u | 1u) << _GLF_IDENTITY(uint(3u), uint(3u)), ((0u | 1u) << _GLF_IDENTITY(uint(3u), uint(3u))) | ((0u | 1u) << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(3u, 3u, _GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(workgroup_base))))))))), uvec4(1u, 0u, 1u, (((0u | 1u) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))))), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u)))))) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u))))) << 0u))) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), (_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), _GLF_IDENTITY((uvec3(virtual_gid, 1u, 0u)), (_GLF_IDENTITY((uvec3(virtual_gid, 1u, 0u)), _GLF_IDENTITY(((uvec3(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(subgroup_size) : virtual_gid)), 1u, 0u))), ~ (~ (((uvec3(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(subgroup_size) : virtual_gid)), 1u, 0u)))))) << uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u)) | (uvec3(virtual_gid, 1u, 0u)))) * uvec3(1u, 1u, 1u))), (uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), (_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), _GLF_IDENTITY((uvec3(virtual_gid, 1u, 0u)), (_GLF_IDENTITY((uvec3(virtual_gid, 1u, 0u)), _GLF_IDENTITY(((uvec3(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(subgroup_size) : virtual_gid)), 1u, 0u))), ~ (~ (((uvec3(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(subgroup_size) : virtual_gid)), 1u, 0u)))))) << uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u)) | (uvec3(virtual_gid, 1u, 0u)))) * uvec3(1u, 1u, 1u)))) | 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, 0u | (1u)))), _GLF_IDENTITY(0u, (0u) - 0u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, 0u | (1u)))), _GLF_IDENTITY(0u, (0u) - 0u)))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, 0u | (1u)))), _GLF_IDENTITY(0u, (0u) - 0u))))) >> 0u), _GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, 0u | _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((1u), ((1u)) | 0u)))) | 0u)))), _GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, 0u | (1u)))), _GLF_IDENTITY(0u, (0u) - 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, 1u, 0u)), min(_GLF_IDENTITY(uint(uvec3(virtual_gid, 1u, 0u)), clamp(uint(uvec3(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), 1u, 0u)), uint(uvec3(virtual_gid, 1u, 0u)), uint(uvec3(virtual_gid, 1u, 0u)))), uint(uvec3(virtual_gid, 1u, 0u)))))) ^ 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), clamp(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u)), (_GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u)), (min(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(virtual_gid, 1u, 0u)), uvec3(uvec4(~ (uvec3(virtual_gid, 1u, 0u)), 0u)))))))) ^ _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))))))) | (0u | 0u))) | (_GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u)), (false ? _GLF_FUZZED(read) : _GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u)), (min(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), (uvec3(virtual_gid, 1u, 0u)) + uvec3(0u, 0u, 0u))))) ^ 0u))) - 0u)))))))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), max(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u))), uint(uvec3(virtual_gid, 1u, 0u))), min(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u))))), (_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), virtual_gid, virtual_gid)), (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), virtual_gid, virtual_gid))) | (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), virtual_gid, virtual_gid)))))), uint(uvec3(virtual_gid, 1u, 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, 1u * (0u))))), uint(uvec3(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), 0u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u, 1u * ((_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), (_GLF_IDENTITY(1u, (1u) | 0u)) >> _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 0u)))))))), 1u)), 0u)))) ^ 0u)))))))) / 1u), 0u)))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 0u, 0u, 1u))), max(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), min(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 0u, 0u, 1u))), max(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), min(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u, ((_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u) >> 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec4(virtual_gid, 0u, 0u, 1u)), (uint(uvec4(virtual_gid, 0u, 0u, 1u))) | (uint(uvec4(virtual_gid, 0u, 0u, 1u))))), max(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)) | 0u), 1u, 0u))), min(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, (((0u | 1u) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), max(uvec4(1u, 0u, 1u, (((0u | 1u) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), uvec4(1u, 0u, _GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, 0u ^ (1u)))), (((0u | 1u) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))))), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u)))))) - 0u)) - 0u)), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 0u, 0u, 1u))), max(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), min(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 0u, 0u, 1u))), max(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), min(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u, ((_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u) >> 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec4(virtual_gid, 0u, 0u, 1u)), (uint(uvec4(virtual_gid, 0u, 0u, 1u))) | (uint(uvec4(virtual_gid, 0u, 0u, 1u))))), max(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)) | 0u), 1u, 0u))), min(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, (((0u | 1u) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), max(uvec4(1u, 0u, 1u, (((0u | 1u) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), uvec4(1u, 0u, _GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, 0u ^ (1u)))), (((0u | 1u) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))))), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u)))))) - 0u)) - 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 0u, 0u, 1u))), max(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), min(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 0u, 0u, 1u))), max(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), min(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u, ((_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u) >> 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec4(virtual_gid, 0u, 0u, 1u)), (uint(uvec4(virtual_gid, 0u, 0u, 1u))) | (uint(uvec4(virtual_gid, 0u, 0u, 1u))))), max(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)) | 0u), 1u, 0u))), min(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, (((0u | 1u) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), max(uvec4(1u, 0u, 1u, (((0u | 1u) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), uvec4(1u, 0u, _GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, 0u ^ (1u)))), (((0u | 1u) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))))), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u)))))) - 0u)) - 0u))) | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 0u, 0u, 1u))), max(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), min(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 0u, 0u, 1u))), max(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), min(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u, ((_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u) >> 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec4(virtual_gid, 0u, 0u, 1u)), (uint(uvec4(virtual_gid, 0u, 0u, 1u))) | (uint(uvec4(virtual_gid, 0u, 0u, 1u))))), max(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)) | 0u), 1u, 0u))), min(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, (((0u | 1u) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), max(uvec4(1u, 0u, 1u, (((0u | 1u) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), uvec4(1u, 0u, _GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, 0u ^ (1u)))), (((0u | 1u) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))))), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u)))))) - 0u)) - 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 0u, 0u, 1u))), max(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), min(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 0u, 0u, 1u))), max(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), min(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u, ((_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u) >> 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec4(virtual_gid, 0u, 0u, 1u)), (uint(uvec4(virtual_gid, 0u, 0u, 1u))) | (uint(uvec4(virtual_gid, 0u, 0u, 1u))))), max(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)) | 0u), 1u, 0u))), min(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, (((0u | 1u) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), max(uvec4(1u, 0u, 1u, (((0u | 1u) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), uvec4(1u, 0u, _GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, 0u ^ (1u)))), (((0u | 1u) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))))), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u)))))) - 0u)) - 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 0u, 0u, 1u))), max(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), min(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 0u, 0u, 1u))), max(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), min(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u, ((_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u) >> 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec4(virtual_gid, 0u, 0u, 1u)), (uint(uvec4(virtual_gid, 0u, 0u, 1u))) | (uint(uvec4(virtual_gid, 0u, 0u, 1u))))), max(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)) | 0u), 1u, 0u))), min(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, (((0u | 1u) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), max(uvec4(1u, 0u, 1u, (((0u | 1u) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), uvec4(1u, 0u, _GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, 0u ^ (1u)))), (((0u | 1u) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))))), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u)))) ^ 0u)))))) - 0u)) - 0u))) >> 0u))))))], read, _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) * 1), 4, 4)), _GLF_IDENTITY(4, min(4, 4)))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) / _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(log(1.0), 0.0, 1.0)))))) ? _GLF_IDENTITY(4, (4) | (4)) : _GLF_FUZZED(-68101))), 64, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) / 1)), clamp(~ (4), ~ (4), ~ (4))))))));
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (bool((injectionSwitch.x > injectionSwitch.y))))))))), (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) * mat2(1.0))) * vec2(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) * mat2(1.0))) * vec2(1.0, 1.0)), mat2(1.0) * (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) * mat2(1.0))) * vec2(1.0, 1.0))))) / vec2(1.0, 1.0))).y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))) || false)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))), ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))) && true), (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))) || false)), ! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))), ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))) && true), (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))) || false))))), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))))), false)))))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false))) || false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.1)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
}
