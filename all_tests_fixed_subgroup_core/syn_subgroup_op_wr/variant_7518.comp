#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED((uvec3(185349u, 45546u, 41031u) ^ subgroup_id)))).x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), (_GLF_IDENTITY((! (_GLF_DEAD(false))), false || ((! (_GLF_DEAD(false)))))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), bool(bool(_GLF_DEAD(false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec3(bool(bvec4(false, false, false, false)), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), bool(bvec4(true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), true, false, true))))) || false), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_IDENTITY(false, false || (false)), false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec3(bool(bvec4(false, false, false, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec3(bool(bvec4(false, false, false, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), false || (bool(bvec4(false, false, false, false)))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec3(bool(bvec4(false, false, false, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec3(bool(bvec4(false, false, false, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))))))), false || (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))))), false, false), true))))), bool(bvec4(false, false, false, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), bool(bvec3(bool(bvec4(false, false, false, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec3(bool(bvec4(false, false, false, false)), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec3(bool(bvec4(false, false, false, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))))))) && true)))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)) + (gl_WorkGroupID.x));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y), float(_GLF_FUZZED(-3.8)), bool(false))), length(vec2(0.0, 0.0)) + (injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED((workgroup_id)))), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(true ? workgroup_id : _GLF_IDENTITY(_GLF_FUZZED((workgroup_id)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((workgroup_id)), (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) || false)))))) ? _GLF_FUZZED((workgroup_id)) : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((workgroup_id)), (true ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) : _GLF_FUZZED(subgroup_local_id))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((workgroup_id)), (true ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) : _GLF_FUZZED(subgroup_local_id))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((workgroup_id)), (true ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) : _GLF_FUZZED(subgroup_local_id))), min(_GLF_IDENTITY(_GLF_FUZZED((workgroup_id)), (true ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(_GLF_FUZZED((workgroup_id)), (true ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) : _GLF_FUZZED(subgroup_local_id))))), 1u)))))) / 1u) : _GLF_FUZZED(workgroup_id))), 0u ^ _GLF_IDENTITY((true ? workgroup_id : _GLF_FUZZED((workgroup_id))), ((true ? workgroup_id : _GLF_FUZZED(_GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), max((workgroup_id), (workgroup_id))), (workgroup_id)))))) / 1u))), ((_GLF_IDENTITY(true ? workgroup_id : _GLF_IDENTITY(_GLF_FUZZED((workgroup_id)), (true ? _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_id)))), min(_GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_id)))), _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_id)))))))), (_GLF_IDENTITY(true ? _GLF_FUZZED((workgroup_id)) : _GLF_FUZZED(subgroup_local_id), (false ? _GLF_FUZZED(subgroup_id) : true ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) >> 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_FUZZED(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) >> 0u)))) : _GLF_FUZZED(subgroup_local_id))))) : _GLF_FUZZED(workgroup_id))), 0u ^ _GLF_IDENTITY((true ? workgroup_id : _GLF_FUZZED((workgroup_id))), ((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, true, true))) || false)))) ? workgroup_id : _GLF_FUZZED((workgroup_id)))) / _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))) / _GLF_IDENTITY(1u, (1u) >> 0u)))) ^ 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(false, false || (false))))), ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(false, ! (! (false))), false)), false || (bool(bvec4(false, true, _GLF_IDENTITY(false, ! (! (false))), false)))))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(_GLF_IDENTITY(uint(1.1), (uint(1.1)) + 0u)) : 0u)))) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(_GLF_IDENTITY(uint(1.1), (uint(1.1)) + 0u)) : 0u)))) % subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(_GLF_IDENTITY(uint(1.1), (uint(1.1)) + 0u)) : 0u)))) % subgroup_size)))) * 1u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (false))))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (false))))), true))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (false))))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (false))))), true))))))))))))), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), false || (bool(injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bool(bool(injectionSwitch.x < injectionSwitch.y))), true && (bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(1.0)))))) < injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(1.0)))))) < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(1.0)))))) < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))))))))), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-63.76), _GLF_FUZZED(-599.788)), bvec2(false, false))).y)), ! (! (_GLF_IDENTITY(bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-63.76), _GLF_FUZZED(-599.788)), bvec2(false, false))).y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-63.76), _GLF_FUZZED(-599.788)), bvec2(false, false))).y))), (! (bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-63.76), _GLF_FUZZED(-599.788)), bvec2(false, false))).y)))) && true))))))), ((_GLF_IDENTITY(bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-63.76), _GLF_FUZZED(-599.788)), bvec2(false, false))).y)), ! (! (_GLF_IDENTITY(bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-63.76), _GLF_FUZZED(-599.788)), bvec2(false, false))).y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-63.76), _GLF_FUZZED(-599.788)), bvec2(false, false))).y))), (! (bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-63.76), _GLF_FUZZED(-599.788)), bvec2(false, false))).y)))) && true)))))))) && true)))))), _GLF_IDENTITY((false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), true && (bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], 0.0 + (_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]))))), vec2(_GLF_FUZZED(-63.76), _GLF_FUZZED(-599.788)), bvec2(false, false))).y)))))))), ! (! ((bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), true && (bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-63.76), _GLF_FUZZED(_GLF_IDENTITY(-599.788, mix(float(_GLF_FUZZED(81.26)), float(-599.788), bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))))))), bvec2(false, false))).y)))))))))))) || false, ((_GLF_IDENTITY(false, true && (false)) || _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), true && (bool(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(sqrt(0.0), determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(sqrt(0.0), determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0), vec3(1.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-94.09) : dot(vec3(sqrt(0.0), determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0), vec3(1.0, 0.0, 0.0))))), (_GLF_IDENTITY(dot(vec3(sqrt(0.0), determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(sqrt(0.0), determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0), vec3(1.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-94.09) : dot(vec3(sqrt(0.0), determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0), vec3(1.0, 0.0, 0.0)))))) * 1.0)) < _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) >> (1 ^ 1)))], (injectionSwitch)[1]), _GLF_IDENTITY((_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (_GLF_IDENTITY(true ? vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, min(0, 0)), 0))], (injectionSwitch)[1]) : _GLF_FUZZED(vec2(-5.7, 61.17)), mix(vec2((true ? vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, min(0, 0)), 0))], (injectionSwitch)[1]) : _GLF_FUZZED(vec2(-5.7, 61.17)))[0], _GLF_FUZZED(8.2)), vec2(_GLF_FUZZED((+ 6359.9959)), (true ? vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, min(0, 0)), 0))], (injectionSwitch)[1]) : _GLF_FUZZED(vec2(-5.7, 61.17)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) / abs(vec2(1.0, 1.0)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (true ? vec2((injectionSwitch)[0], (injectionSwitch)[1]) : _GLF_FUZZED(vec2(-5.7, 61.17))))) / _GLF_IDENTITY(abs(vec2(1.0, 1.0)), vec2(mat2(abs(vec2(1.0, 1.0)), 0.0, 0.0))), clamp((_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[1]), (true ? vec2((injectionSwitch)[0], (injectionSwitch)[1]) : _GLF_FUZZED(vec2(-5.7, 61.17))))) / abs(vec2(1.0, 1.0)), (_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (true ? vec2((injectionSwitch)[0], (injectionSwitch)[1]) : _GLF_FUZZED(vec2(_GLF_IDENTITY(-5.7, sqrt(0.0) + (_GLF_IDENTITY(-5.7, (-5.7) / 1.0))), 61.17))))) / abs(vec2(1.0, 1.0)), (_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (true ? vec2((injectionSwitch)[0], (injectionSwitch)[1]) : _GLF_FUZZED(vec2(-5.7, 61.17))))) / abs(vec2(1.0, 1.0)))), _GLF_IDENTITY((_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (true ? vec2((injectionSwitch)[0], (injectionSwitch)[1]) : _GLF_FUZZED(vec2(-5.7, 61.17))))) / abs(vec2(1.0, 1.0)), (true ? _GLF_IDENTITY((_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (true ? vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-65.63)), vec2(_GLF_FUZZED(-576.135), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)))[1]) : _GLF_FUZZED(vec2(-5.7, 61.17))))) / abs(vec2(1.0, 1.0)), max((_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (true ? vec2((injectionSwitch)[0], (injectionSwitch)[1]) : _GLF_FUZZED(vec2(-5.7, 61.17))))) / _GLF_IDENTITY(abs(vec2(1.0, 1.0)), (false ? _GLF_FUZZED(mod(injectionSwitch, vec2(-924.207, 734.543))) : abs(vec2(1.0, 1.0)))), (_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (_GLF_IDENTITY(true ? vec2((injectionSwitch)[0], (injectionSwitch)[1]) : _GLF_FUZZED(vec2(-5.7, 61.17)), _GLF_IDENTITY(vec2(mat2(true ? vec2((injectionSwitch)[0], (injectionSwitch)[1]) : _GLF_FUZZED(vec2(-5.7, 61.17)), 1.0, 1.0)), (true ? vec2(mat2(true ? vec2((injectionSwitch)[0], (injectionSwitch)[1]) : _GLF_FUZZED(vec2(-5.7, 61.17)), 1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))))))) / abs(vec2(1.0, 1.0)))) : _GLF_FUZZED(vec2(-27.93, -947.814)))), (_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (true ? vec2((injectionSwitch)[0], (injectionSwitch)[1]) : _GLF_FUZZED(vec2(-5.7, 61.17))))) / abs(vec2(1.0, 1.0))))), vec2(_GLF_FUZZED(-63.76), _GLF_FUZZED(-599.788)), bvec2(false, false))).y)))))))), ! (! ((bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), true && (bool(bool(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-123.749, 75.01)) : injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-63.76), (_GLF_FUZZED(-63.76)) - 0.0), _GLF_FUZZED(-599.788)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))).y)))))))))))) || false) && true)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec3(bvec4(bvec3(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false)))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec3(bvec4(bvec3(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false)))))), (bool(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), false)), bvec3(bvec4(bvec3(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false))))))) || false)))), true))))) && _GLF_IDENTITY((false), ((false)) && true))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), ! (! (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), false)), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), false)), ! (! _GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))), false || ((bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))), false || ((bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))), false, false), false))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)), (! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)), (! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)), (! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)), (! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)), (! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)), (! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)), (! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false))))))))), false)))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)), (! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)), (! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)), (! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)), (! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)), (! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)), (! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)), (! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false))))))))), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)), (! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)), (! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)), (! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)), (! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)), (! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)), (! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)), (! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false))))))))), false)))), false))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)), (! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)), (! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)), (! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)), (! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)), (! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)), (! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)), (! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false))))))))), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)), (! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)), (! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)), (! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)), (! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)), (! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)), (! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)), (! (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false))))))))), false)))), false))))))))), true))))))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(fract(-5364.0205)))) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(fract(-5364.0205)))) > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, bool(bvec2(false, true)))) && (false)))), ! (! (bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.9) : injectionSwitch.x))) * 1.0) > injectionSwitch.y)), false)))))), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(fract(-5364.0205)))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(fract(-5364.0205)))) > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), false || (bool(bvec4(true, true, true, true))))) && (false)))), ! (! (bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)), false))))))))), false, true, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, true && ((_GLF_DEAD(false)) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))) || false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.5), _GLF_FUZZED(72.72)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))), injectionSwitch)).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) && true))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec2(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))), false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))) || (false)))) || (_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), true && (_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), (bool(bool(false))) && true), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), true && (_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) || false, (_GLF_IDENTITY((bool(false)) || false, ! (! ((bool(false)) || false)))) && true))))))), (bool(bool(false))) && true), true))))))), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), false || (false)))) || (false)))) || (_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, false))))))), true && (_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), (bool(bool(false))) && true)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0)) > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0)) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0)) > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(_GLF_IDENTITY(false || _GLF_IDENTITY((false), ((false)) && true), (_GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (false || (false)), (! (false || (false))) || false)))) && true), false || (_GLF_IDENTITY(false || _GLF_IDENTITY((false), ((false)) && true), (_GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (false || (false)), (! (false || (false))) || false)))) && true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), determinant(mat4(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.1)), float(0.0), _GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), bool(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))))) && true))), 1.0, 1.0, cos(0.0), _GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, 0.0 + (1.0))), 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 0.0, 0.0, 1.0)), determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), (dot(vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), (0.0) / _GLF_IDENTITY(dot(vec2(1.0, sqrt(0.0)), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, sqrt(0.0)), vec2(1.0, 0.0)), float(mat3(dot(vec2(1.0, sqrt(0.0)), vec2(1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))) / _GLF_ONE(1.0, injectionSwitch.y)), dot(vec4(0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, sqrt(0.0)), vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) - 0.0), 0.0, 1.0)), dot(vec3(1.0, 1.0, _GLF_IDENTITY(sqrt(0.0), (true ? sqrt(0.0) : _GLF_FUZZED(-8942.7787)))), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 0.0))), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), log(1.0), 0.0, log(1.0), 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(45.04), mix(float(_GLF_IDENTITY(_GLF_FUZZED(45.04), max(_GLF_IDENTITY(_GLF_FUZZED(45.04), mix(float(_GLF_FUZZED(45.04)), float(_GLF_FUZZED(-0.5)), bool(false))), _GLF_FUZZED(45.04)))), float(_GLF_FUZZED(-2837.2078)), bool(false))) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-724.942)), bool(false))), max(false ? _GLF_IDENTITY(_GLF_FUZZED(45.04), mix(float(_GLF_IDENTITY(_GLF_FUZZED(45.04), max(_GLF_IDENTITY(_GLF_FUZZED(45.04), mix(float(_GLF_FUZZED(45.04)), float(_GLF_FUZZED(-0.5)), bool(false))), _GLF_FUZZED(45.04)))), float(_GLF_FUZZED(-2837.2078)), bool(false))) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-724.942)), bool(false))), false ? _GLF_IDENTITY(_GLF_FUZZED(45.04), mix(float(_GLF_IDENTITY(_GLF_FUZZED(45.04), max(_GLF_IDENTITY(_GLF_FUZZED(45.04), mix(float(_GLF_FUZZED(45.04)), float(_GLF_FUZZED(-0.5)), bool(false))), _GLF_FUZZED(45.04)))), float(_GLF_FUZZED(-2837.2078)), bool(false))) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-724.942)), bool(false))))))))), clamp(float(mat4x2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(_GLF_IDENTITY(determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, _GLF_IDENTITY(cos(0.0), (cos(0.0)) * abs(abs(1.0))), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-624.241)), bool(false))), sqrt(0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-624.241)), bool(false))), 1.0 * (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-624.241)), bool(false))))))), 0.0, 1.0)), float(mat3(determinant(mat4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0)))) / 1.0), 0.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-624.241)), bool(false))), 0.0, 1.0)), 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 0.0))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))))) ? _GLF_FUZZED(-4359.0047) : _GLF_IDENTITY(determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(cos(0.0), float(mat4x3(cos(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), log(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 1.0, 1.0))), _GLF_IDENTITY((cos(0.0)), _GLF_IDENTITY(clamp((cos(0.0)), _GLF_IDENTITY((cos(0.0)), ((cos(0.0))) - 0.0), (cos(0.0))), (false ? _GLF_FUZZED(2.3) : clamp((cos(0.0)), _GLF_IDENTITY((cos(0.0)), ((cos(0.0))) - 0.0), (cos(0.0)))))) * abs(abs(1.0))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (false ? _GLF_FUZZED(5589.1969) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-82.35)), bool(false)))) + 0.0))), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-624.241)), bool(false))), 0.0, 1.0)), float(mat3(determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-624.241)), bool(false))), 0.0, 1.0)), 0.0, 1.0, sqrt(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, 1.0 * (0.0)) : _GLF_FUZZED(8.4))), 1.0, 0.0))))), determinant(_GLF_IDENTITY(mat4(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-0.3))), 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6119.5939), _GLF_FUZZED(-313.405)), bvec2(false, false))), (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6119.5939), _GLF_FUZZED(-313.405)), bvec2(_GLF_IDENTITY(false, true && (false)), false))) : _GLF_FUZZED(injectionSwitch))).x), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-50.92) : _GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, 1.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), (mat2x3(1.0, 1.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)) * mat2(1.0))), (float(_GLF_IDENTITY(mat2x3(1.0, 1.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), (mat2x3(1.0, 1.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)) * mat2(1.0)))) + abs(0.0)))))))))))), 1.0, 1.0, 1.0, 1.0)), min(float(mat2x3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 1.0, 1.0)), float(mat2x3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(108.291)), float(1.0), bool(_GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))), (injectionSwitch.x < injectionSwitch.y))))))))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 1.0, 1.0))))), 0.0, 0.0)), 0.0), vec4(0.0, 1.0, 0.0, 0.0))), log(1.0), 0.0, log(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(0.0), sin(_GLF_ZERO(0.0, injectionSwitch.x)))), (false ? _GLF_FUZZED(-3551.3142) : _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(0.0), _GLF_IDENTITY(sin(_GLF_ZERO(0.0, injectionSwitch.x)), max(sin(_GLF_ZERO(0.0, injectionSwitch.x)), sin(_GLF_ZERO(0.0, injectionSwitch.x)))))), max(float(mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), float(mat2x3((1.0), 1.0, 0.0, 1.0, 0.0, 1.0))) * 1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(0.0), sin(_GLF_ZERO(0.0, injectionSwitch.x)))), float(mat3(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.8))) : _GLF_FUZZED(-377.078)))), sin(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), 1.0), (_GLF_IDENTITY(mat4(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-994.577)), bool(false))), 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((+ 2365.6189))), float(1.0), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), dot(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)), 0.0)), 0.0), vec4(0.0, 1.0, 0.0, 0.0))), (_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(mat2x3(vec4(0.0, 1.0, 0.0, 0.0), determinant(mat2(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false))), 0.0, 1.0)), determinant(mat2(1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(327.564)), _GLF_IDENTITY(float(1.0), (float(1.0)) + 0.0), bool(true))), 0.0), (true ? vec4(0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(327.564)), float(1.0), bool(true))), 0.0) : _GLF_FUZZED(step(vec4(2.4, 42.73, 321.787, -7209.8161), vec4(_GLF_IDENTITY(-3.2, mix(float(_GLF_FUZZED(8794.7110)), float(-3.2), bool(true))), _GLF_IDENTITY(-6450.3628, (false ? _GLF_FUZZED(-15.46) : _GLF_IDENTITY(-6450.3628, max(-6450.3628, -6450.3628)))), 785.185, -0.3))))))), 0.0, 1.0)))), clamp(vec4(mat2x3(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(length(vec2(1.1, -1461.3256))))), 0.0), _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), min(determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0 + (determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), determinant(mat2(1.0, 0.0, 0.0, 1.0)))), vec4(mat2x3(vec4(0.0, 1.0, 0.0, 0.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)))), vec4(mat2x3(vec4(0.0, 1.0, 0.0, 0.0), determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), mat2(mat2x4(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (mat2(1.0, 0.0, 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))))), determinant(mat2(1.0, 0.0, 0.0, 1.0))))))), vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0, 0.0)))) - determinant(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, log(1.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0), (true ? mat4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-380.381)), bool(false))), 0.0))), 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 1.0, 1.0, 0.0) : _GLF_FUZZED(mat4(-6.1, 3683.0058, 2.1, 1415.4826, 8.8, -379.700, 5002.6946, -758.877, 15.04, -0.3, -8.3, 6771.5698, 14.90, 2.2, -15.02, -854.306)))))), log(1.0), 0.0, log(1.0), 1.0), (mat4(_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(72.18)))), vec4(0.0, 1.0, 0.0, 0.0))), log(1.0), 0.0, log(1.0), 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))) + mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(72.81)), float(0.0), bool(true))), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-55.20)), float(0.0), bool(true))), min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-55.20)), float(0.0), bool(true))), min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))), float(_GLF_FUZZED(26.58)), bool(false)))))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), float(mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))))), 0.0, 1.0, 1.0)), float(mat4x2(_GLF_IDENTITY(1.0, 0.0 + _GLF_IDENTITY((1.0), ((1.0)) / abs(1.0))), determinant(mat4(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), determinant(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0))), injectionSwitch)).y)) ? _GLF_FUZZED(_GLF_IDENTITY(-1.5, min(-1.5, -1.5))) : _GLF_IDENTITY(1.0, 0.0 + (1.0)))))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), log(1.0), 0.0, log(1.0), 1.0)), 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((_GLF_IDENTITY(202.306, float(vec4(202.306, exp(0.0), 1.0, 0.0))) - 5010.2681)))), 0.0, 1.0, 1.0)), float(mat4x2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), determinant(mat4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-698.776) : 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * exp(0.0)), 0.0, 0.0, 1.0)), determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0)), 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), vec4(0.0, 1.0, 0.0, 0.0))), log(1.0), 0.0, log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), float(vec4(1.0, 1.0, 1.0, sin(0.0))))), 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0))))), float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-316.169)), float(1.0), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(33.07)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.8)), bool(false))), 1.0)), clamp(1.0, 1.0, 1.0)), max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), bool(true))), 1.0)), min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(33.07)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.8)), bool(false))), 1.0)), clamp(1.0, 1.0, 1.0)), max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), bool(true))), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(33.07)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.8)), bool(false))), 1.0)), clamp(1.0, 1.0, 1.0)), max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), bool(true))), 1.0)), (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(33.07)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.8)), bool(false))), 1.0)), clamp(1.0, 1.0, 1.0)), max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), bool(true))), 1.0))) + 0.0)))) / 1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-10.95)), bool(false)))) + 0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-79.37)), float(0.0), bool(true))))), max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0)), round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(tan(length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(930.626)), float(tan(length(vec4(0.0, 0.0, 0.0, 0.0)))), bool(true)), float(mat4(mix(float(_GLF_FUZZED(930.626)), float(tan(length(vec4(0.0, 0.0, 0.0, 0.0)))), bool(true)), 1.0, length(vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 1.0, 1.0, 1.0, abs(log(1.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 1.0, sqrt(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), 0.0, 0.0, 0.0, 1.0)))))))) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-2.0 / _GLF_IDENTITY(7.5, float(vec3(_GLF_IDENTITY(7.5, float(mat2x4(7.5, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))))), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[0], 1.0 * ((injectionSwitch)[0])), float(mat2x3((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, log(1.0)), vec3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2625.4652))), 0.0, sqrt(0.0))), dot(vec3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, log(1.0)), vec3(1.0, 0.0, sqrt(0.0)))), float(mat2x4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, log(1.0)), vec3(1.0, 0.0, _GLF_IDENTITY(sqrt(0.0), (_GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), sqrt(0.0)))) - log(1.0)))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, log(1.0)), vec3(1.0, 0.0, sqrt(0.0))), clamp(dot(vec3(1.0, 0.0, log(1.0)), vec3(1.0, 0.0, sqrt(0.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, log(1.0)), vec3(1.0, 0.0, sqrt(0.0))), mix(float(_GLF_FUZZED(-6.2)), float(dot(vec3(1.0, 0.0, log(1.0)), vec3(1.0, 0.0, sqrt(0.0)))), bool(true))), dot(vec3(1.0, 0.0, log(1.0)), vec3(1.0, 0.0, sqrt(0.0)))))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 1.0))), _GLF_FUZZED(7.2)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
}
