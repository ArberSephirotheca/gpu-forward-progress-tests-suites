#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     switch(_GLF_SWITCH(0))
      {
       case 62:
       if(_GLF_DEAD(false))
        return;
       ;
       case 4:
       if(_GLF_DEAD(false))
        return;
       uvec2(174721u, 69251u);
       case 0:
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(-74123) : int(6))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             return;
            }
          }
        }
       case 29:
       barrier();
       break;
       case 89:
       do
        {
         while((atomicAnd(workgroup_base, workgroup_base) > uint(-80212)))
          {
           mat4 _GLF_SWITCH_4_0v[17];
           mat3x4 _GLF_SWITCH_4_1v[8], _GLF_SWITCH_4_2v, _GLF_SWITCH_4_3v[7];
          }
         bvec2(true, true);
         if(_GLF_DEAD(false))
          continue;
        }
       while(false);
       case 59:
       vec2(22.79, -1.3);
       default:
       1;
      }
    }
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
    {
     return;
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      continue;
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 do
  {
   switch(_GLF_SWITCH(0))
    {
     case 4:
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       mat3x4 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v[20];
      }
     else
      {
      }
     case 72:
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        break;
       false;
      }
     else
      {
      }
     case 0:
     case 62:
     case 22:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      return;
     case 39:
     case 33:
     if(_GLF_DEAD(false))
      continue;
     case 70:
     if(_GLF_DEAD(false))
      break;
     if(subgroup_local_id + 1 < subgroup_size)
      {
       if(_GLF_DEAD(false))
        continue;
       do
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         switch(_GLF_SWITCH(0))
          {
           case 0:
           case 91:
           atomicStore(checker[virtual_gid], read, 4, 64, 4);
           case 89:
           case 60:
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           case 18:
           case 74:
           case 13:
           subgroupAll(false);
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           break;
           case 97:
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              continue;
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(false)
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               ;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
              }
             if((-3702.4788 != 4.0))
              {
               ivec2(41663, -26089);
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 return;
                }
               ;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   return;
                  }
                 if(_GLF_DEAD(false))
                  continue;
                }
               mat4x3(-500.295, -24.57, 5.4, -2.2, 784.717, 80.22, 6331.7003, -56.68, -0.1, -9853.2633, -4322.3523, -367.127);
               uvec2(18541u, 87140u);
               {
                switch(_GLF_SWITCH(0))
                 {
                  case 0:
                  do
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(false))
                     break;
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                  bvec3 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   break;
                  if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                   }
                  else
                   {
                    if(_GLF_DEAD(false))
                     return;
                   }
                  case 11:
                  ivec4(33503, -7996, -25468, -98327);
                  ivec2 _GLF_SWITCH_0_2v;
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     continue;
                    for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                     {
                      switch(_GLF_SWITCH(0))
                       {
                        case 46:
                        do
                         {
                          mix(uvec2(124658u, 139260u), (num_workgroup ^ uvec2(17844u, 108768u)), bvec2(false, true));
                         }
                        while(_GLF_WRAPPED_LOOP(false));
                        case 87:
                        mat3 _GLF_SWITCH_4_0v[69], _GLF_SWITCH_4_1v[11];
                        case 0:
                        case 22:
                        case 84:
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         break;
                        case 13:
                        case 83:
                        case 3:
                        if(_GLF_WRAPPED_IF_TRUE(true))
                         {
                          if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
                           return;
                          if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           {
                           }
                          else
                           {
                            barrier();
                           }
                         }
                        else
                         {
                         }
                        break;
                        case 74:
                        if(_GLF_DEAD(false))
                         break;
                        mat3x4 _GLF_SWITCH_4_2v, _GLF_SWITCH_4_3v, _GLF_SWITCH_4_4v;
                        case 78:
                        clamp(uvec2(121095u, 4717u), (next_virtual_gid % uvec2(58553u, 16531u)), uvec2(152105u, 111918u));
                        default:
                        1;
                       }
                     }
                   }
                  if(_GLF_DEAD(false))
                   continue;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                       break;
                      barrier();
                     }
                    barrier();
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     break;
                   }
                  case 1:
                  if(_GLF_DEAD(false))
                   return;
                  float _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v;
                  if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
                   {
                    do
                     {
                      barrier();
                     }
                    while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   }
                  if(_GLF_DEAD(false))
                   continue;
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  case 44:
                  if(_GLF_DEAD(false))
                   break;
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   return;
                  case 77:
                  (uvec3(72119u, 12294u, 81729u) << atomicCompSwap(read, 115596u, subgroup_size));
                  if(_GLF_DEAD(false))
                   return;
                  mat2x4 _GLF_SWITCH_0_5v;
                  case 59:
                  ;
                  if(_GLF_DEAD(false))
                   return;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(false))
                     return;
                    barrier();
                   }
                  break;
                  do
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     return;
                    if(_GLF_DEAD(false))
                     continue;
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                  for(int _injected_loop_counter = _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) * 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                   }
                  case 78:
                  mat3x2(7274.1397, -72.42, 86.88, 303.440, -9.6, 6371.5277);
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     return;
                    for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
                     {
                      return;
                      if(_GLF_DEAD(false))
                       break;
                     }
                   }
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   continue;
                  default:
                  1;
                  if(_GLF_DEAD(false))
                   break;
                 }
               }
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   continue;
                  continue;
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                do
                 {
                  if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                   {
                    if(_GLF_DEAD(false))
                     {
                      switch(_GLF_SWITCH(0))
                       {
                        case 0:
                        case 76:
                        case 95:
                        if(_GLF_DEAD(false))
                         return;
                        case 52:
                        case 71:
                        case 4:
                        if(_GLF_WRAPPED_IF_TRUE(true))
                         {
                          for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                           {
                            barrier();
                           }
                         }
                        else
                         {
                         }
                        break;
                        case 38:
                        mat2(-13.79, -41.26, -2369.4399, 9.6);
                        if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
                         break;
                        case 51:
                        -0.9;
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         return;
                        default:
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         return;
                        1;
                       }
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       continue;
                     }
                    barrier();
                   }
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     break;
                    return;
                   }
                 }
                while(_GLF_WRAPPED_LOOP(false));
                if(_GLF_DEAD(false))
                 continue;
                mat4x3 _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v;
                vec4 _GLF_SWITCH_0_8v;
                mat3x4(-75.31, 0.0, -8535.0181, 869.533, -71.52, 3.7, -680.075, 0.9, 0.9, 4.5, 735.539, -5.3);
                float _GLF_SWITCH_0_9v, _GLF_SWITCH_0_10v[40];
                if(_GLF_DEAD(false))
                 continue;
                if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                 return;
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 return;
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                   }
                  else
                   {
                    barrier();
                   }
                 }
                uint _GLF_SWITCH_0_11v;
                mat2x3 _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v[96];
                bool _GLF_SWITCH_0_14v, _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v;
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(false))
                   continue;
                  uvec2(133027u, workgroup_id);
                 }
                else
                 {
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 return;
                uint _GLF_SWITCH_0_17v;
                if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                 barrier();
               }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(_GLF_DEAD(false))
                continue;
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               uint _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v;
               if(_GLF_DEAD(false))
                continue;
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
               for(               mat2x4(-9.1, 1.4, 1.8, -91.90, -8.5, -52.89, 9.8, -5.4);
 true; 9901.5758)
                {
                 if(_GLF_DEAD(false))
                  break;
                 ivec4 _GLF_SWITCH_0_20v[12], _GLF_SWITCH_0_21v;
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                  }
                 else
                  {
                  }
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        continue;
                       do
                        {
                         barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       if(_GLF_DEAD(false))
                        return;
                      }
                    }
                  }
                 uvec2(112593u, 124416u);
                 if(_GLF_DEAD(false))
                  break;
                 13085;
                 if(_GLF_DEAD(false))
                  continue;
                 float _GLF_SWITCH_0_22v[69];
                 if(_GLF_DEAD(false))
                  break;
                 (((uvec2(86574u, 70597u) + uvec2(56116u, 101041u)) / _GLF_SWITCH_0_18v) << uvec2(155112u, 100572u));
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   isinf(clamp(vec4(5.4, 1.8, 57.98, 229.319), vec4(-83.37, -3845.4114, -8.7, 43.22), vec4(696.614, -5227.9647, 7936.0202, 3.4)));
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     barrier();
                    }
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      return;
                     break;
                    }
                   switch(_GLF_SWITCH((51485 & 0)))
                    {
                     case 87:
                     if(_GLF_DEAD(false))
                      return;
                     greaterThanEqual(ivec4(21531, 41577, 85651, -80361), ivec4(-42690, -49826, -17138, -52621));
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(false))
                        return;
                       return;
                      }
                     case 52:
                     (abs(ivec2(548, -78262)) & ivec2(ivec4(44114, -45616, -56815, -86713)));
                     case 0:
                     case 99:
                     if(_GLF_DEAD(false))
                      break;
                     case 28:
                     case 80:
                     case 17:
                     if(_GLF_DEAD(false))
                      break;
                     case 79:
                     if(_GLF_DEAD(false))
                      continue;
                     case 47:
                     case 23:
                     if(_GLF_DEAD(false))
                      continue;
                     break;
                     case 27:
                     matrixCompMult(mat4x2(-6.1, 17.35, -87.71, 85.08, -5.7, -78.54, -7.9, -858.560), mat4x2(-4.7, 2544.1194, -5.5, -4.3, -4.6, 165.653, 20.91, -8.9));
                     case 25:
                     mat3(2.9, 8666.4017, 796.964, 8402.3489, 6090.1966, -5.2, 6282.5391, 3.0, 1.0);
                     default:
                     1;
                    }
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   barrier();
                  }
                }
               mat4x2(-757.286);
               if(_GLF_DEAD(false))
                barrier();
               mat2x4(194.325, 2099.3603, -5424.3885, 608.283, -4.6, -1.1, 9.2, -5.2);
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   return;
                  }
                 if(_GLF_DEAD(false))
                  return;
                }
               if(true)
                {
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  return;
                }
               else
                {
                 greaterThan(injectionSwitch, ldexp(injectionSwitch, ivec2(63295, 92717)));
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                  }
                 bvec2 _GLF_SWITCH_0_23v, _GLF_SWITCH_0_24v, _GLF_SWITCH_0_25v;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(_GLF_DEAD(false))
                barrier();
               {
                normalize(injectionSwitch);
                if(_GLF_DEAD(false))
                 break;
                if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                 {
                  ;
                 }
                else
                 {
                 }
                mat3x2(0.5, -5042.1435, 6.3, -88.02, -31.54, -29.96);
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  31079;
                 }
                (mat3x2(4585.9877, 2.8, -157.979, -9.3, -782.037, 8.4) - -556.503);
                mat3(3.4, -521.422, -9.5, 647.157, -728.592, 2654.5548, 6776.2659, 1.0, -775.828);
               }
               uvec3(182851u, 37560u, 29445u)[1];
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                return;
              }
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
               uvec3(178016u, 114307u, 172251u);
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              return;
             uvec4 _GLF_SWITCH_0_26v, _GLF_SWITCH_0_27v[94], _GLF_SWITCH_0_28v;
             clamp(uvec2(115801u, 146745u), uvec2(59767u, 67154u), uvec2(126108u, 181215u));
             if(_GLF_DEAD(false))
              break;
             (false ? bvec2(true, true) : bvec2(bvec4(true, false, false, false)));
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
             switch(_GLF_SWITCH(0))
              {
               case 0:
               case 91:
               case 70:
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     return;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      break;
                    }
                  }
                 vec4(5011.6057, -53.50, 8.9, 757.260);
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               case 9:
               mat3x2(-48.83, 3.1, 37.74, 261.679, -8.9, -4499.1128);
               for(mat3x2 _GLF_SWITCH_0_29v, _GLF_SWITCH_0_30v; (mat2x3(mat3x4(-12.43, -7857.2891, -54.56, -1932.2202, 85.01, 7.5, -35.94, -66.09, -26.68, -260.396, 62.14, -7123.9947)) , (! true)); mat3x4(-5.3, -6.7, -5557.7062, -35.14, -18.89, -8.1, -28.30, -53.59, -6.8, 6.6, 4.1, -5708.4841))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  continue;
                 vec2 _GLF_SWITCH_0_31v[39], _GLF_SWITCH_0_32v, _GLF_SWITCH_0_33v;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     do
                      {
                       switch(_GLF_SWITCH(0))
                        {
                         case 21:
                         (uvec4(160571u, 104026u, 11138u, 189703u) , ivec3(-68110, -80902, 58655));
                         case 34:
                         bvec3(false, true, false);
                         case 0:
                         return;
                         break;
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          return;
                         case 8:
                         mat2x3 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v;
                         case 26:
                         vec4(-1.6, 29.40, -2.9, -318.247);
                         if(_GLF_DEAD(false))
                          return;
                         default:
                         1;
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           do
                            {
                             return;
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                           if(_GLF_DEAD(false))
                            continue;
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          continue;
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
                    }
                  }
                }
               if(_GLF_DEAD(false))
                break;
               break;
               if(_GLF_DEAD(false))
                continue;
               case 83:
               int _GLF_SWITCH_4_0v;
               default:
               1;
              }
            }
           if(_GLF_DEAD(false))
            break;
           case 63:
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             barrier();
            }
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if((mat2x3(-9.9, 50.77, 56.74, 319.500, 3.9, 703.783) == mat2x3(mat4x2(-5872.2738, -313.439, 51.67, 9.0, 6.1, -1.4, -9015.4071, -17.04))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, int(ivec3(0, 0, 1))), 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 mat3x2(-1793.2130, -41.00, -8741.0593, 663.255, 9.2, 8.8);
                }
               uvec3(124922u, 99078u, 191122u);
               mat4 _GLF_SWITCH_0_34v[39], _GLF_SWITCH_0_35v, _GLF_SWITCH_0_36v;
               do
                {
                 while(true)
                  {
                   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                    {
                     case 22:
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     do
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                              {
                               case 77:
                               ;
                               case 0:
                               case 10:
                               case 46:
                               case 7:
                               case 21:
                               case 20:
                               case 72:
                               case 76:
                               case 53:
                               case 62:
                               return;
                               if(_GLF_DEAD(false))
                                return;
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                return;
                               break;
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                break;
                               case 29:
                               (7.8 + mat3x4(0.2, -722.771, 3.9, 7459.9631, -0.6, -8.1, -85.47, -7.0, 4.2, -74.17, 6249.3676, 990.608));
                               case 74:
                               ;
                               default:
                               if(_GLF_DEAD(false))
                                continue;
                               1;
                              }
                            }
                           if(_GLF_DEAD(false))
                            break;
                           if(_GLF_DEAD(false))
                            break;
                          }
                         mat2x4(45.43, 952.431, -2.6, 8.7, 995.819, 74.64, 368.062, -0.9);
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     case 94:
                     ;
                     case 0:
                     case 99:
                     case 5:
                     if(_GLF_DEAD(false))
                      barrier();
                     for(                     workgroup_base;
 (132095u != workgroup_size); refract(fract(vec3(-9.9, 2094.6432, 28.85)), vec3(1383.0228, 7.5, 6.8), 28.31))
                      {
                       mat4x3 _GLF_SWITCH_0_37v;
                       mat3x4(-0.6, -7.4, -385.600, -7.5, 6.7, -1.0, 4.3, 8310.1626, 4.2, 47.51, -11.17, -7.7);
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          break;
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          continue;
                         do
                          {
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                        }
                       bvec4(false, false, true, false);
                       mat3 _GLF_SWITCH_0_38v;
                       if(_GLF_DEAD(false))
                        return;
                       if(_GLF_DEAD(false))
                        {
                         do
                          {
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
                            {
                             return;
                            }
                          }
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        continue;
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        break;
                       ivec2(15566, 25380);
                       ;
                       int _GLF_SWITCH_0_39v;
                       if(_GLF_DEAD(false))
                        return;
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                        {
                        }
                       else
                        {
                         mat3x2(-11.93, -98.97, -4.4, 3.7, 9.9, 990.533);
                         if(_GLF_DEAD(false))
                          continue;
                        }
                       for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                        {
                         ;
                        }
                      }
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       do
                        {
                         do
                          {
                           if(true)
                            {
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                return;
                               continue;
                              }
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_DEAD(false))
                                return;
                               switch(_GLF_SWITCH(0))
                                {
                                 case 0:
                                 case 10:
                                 case 69:
                                 case 24:
                                 case 27:
                                 case 25:
                                 case 75:
                                 case 13:
                                 case 94:
                                 do
                                  {
                                   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                                    {
                                     case 92:
                                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                      return;
                                     mat2(89.28, 7.3, 358.096, -7.1);
                                     case 42:
                                     mat2(788.991, 5.3, -269.201, 6470.4656);
                                     case 0:
                                     barrier();
                                     if(_GLF_DEAD(false))
                                      return;
                                     if(_GLF_DEAD(false))
                                      return;
                                     break;
                                     case 41:
                                     true;
                                     case 22:
                                     float(false);
                                     default:
                                     1;
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
                                 break;
                                 if(_GLF_DEAD(false))
                                  return;
                                 case 92:
                                 bvec3(false, all(bvec2(true, false)), false);
                                 case 66:
                                 if(_GLF_DEAD(false))
                                  break;
                                 notEqual(bvec2(false, true), bvec2(false, false));
                                 if(_GLF_DEAD(false))
                                  return;
                                 default:
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  break;
                                 if(_GLF_DEAD(false))
                                  continue;
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  return;
                                 do
                                  {
                                   1;
                                  }
                                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
                                }
                               if(_GLF_DEAD(false))
                                return;
                              }
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               ivec4(-98806, -5726, -53658, -4414);
                              }
                             else
                              {
                               if(_GLF_DEAD(false))
                                break;
                              }
                             mat4x3 _GLF_SWITCH_0_40v;
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                break;
                               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                                barrier();
                               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                {
                                 if(_GLF_DEAD(false))
                                  return;
                                 barrier();
                                 if(_GLF_DEAD(false))
                                  continue;
                                }
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                              }
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           else
                            {
                             if(_GLF_DEAD(false))
                              break;
                             if(_GLF_DEAD(false))
                              barrier();
                             mat4x3(3555.4084, -23.45, 3481.3317, -3.9, 9.6, -2.9, 5839.0507, -37.30, 1111.8043, -3.9, 8250.5310, -7734.7185);
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                              {
                               mat3x4(7.1, -74.09, -7622.4521, -552.423, -4.9, -60.47, -5.9, 76.60, 15.16, 8.7, -57.26, 80.75);
                               if(_GLF_DEAD(false))
                                return;
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                return;
                              }
                             else
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                break;
                              }
                             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                              {
                               if(_GLF_DEAD(false))
                                return;
                               if(_GLF_DEAD(false))
                                break;
                               if(_GLF_DEAD(false))
                                return;
                               mat3x2(6577.1559, 69.64, 7932.4877, -6852.1357, -58.99, 47.29);
                              }
                             false;
                             ivec2(-78925, 60497);
                             float _GLF_SWITCH_0_41v[4];
                             mat3x2(4.3, -3.5, 189.252, -3.7, 6255.3644, 10.90);
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              break;
                            }
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            return;
                           if(_GLF_DEAD(false))
                            break;
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                     if(_GLF_DEAD(false))
                      continue;
                     if(_GLF_DEAD(false))
                      continue;
                     case 64:
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                     case 81:
                     vec3 _GLF_SWITCH_0_42v[56], _GLF_SWITCH_0_43v[6];
                     case 36:
                     if(_GLF_DEAD(false))
                      return;
                     mat3x2(2.0, 5.0, 18.52, -85.34, 69.98, -8395.1906);
                     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                      return;
                     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                      barrier();
                     if(_GLF_DEAD(false))
                      return;
                     case 19:
                     case 69:
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(false))
                        continue;
                       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
                        continue;
                       switch(_GLF_SWITCH(0))
                        {
                         case 0:
                         case 20:
                         case 22:
                         case 7:
                         case 13:
                         case 54:
                         if(_GLF_DEAD(false))
                          return;
                         case 53:
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 1)); _injected_loop_counter ++)
                          {
                           barrier();
                          }
                         break;
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          continue;
                         case 10:
                         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))
                          break;
                         bvec3(false, true, false);
                         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                          break;
                         case 91:
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          return;
                         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                          break;
                         mat4x3(8.8, 830.538, 5.0, -0.2, 7357.7872, -5.5, 6.0, 9.0, -5.8, -87.37, -2.4, 2.0);
                         if(_GLF_DEAD(false))
                          return;
                         default:
                         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                          return;
                         1;
                         if(_GLF_DEAD(false))
                          break;
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        return;
                      }
                     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
                      barrier();
                     while(bool(-15876))
                      {
                       mat3x2 _GLF_SWITCH_0_44v[18], _GLF_SWITCH_0_45v[57];
                       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
                        barrier();
                       mat2x4(-45.39, -16.82, 5.5, -1412.4145, 32.42, -6.3, 1006.4601, 7.9);
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        break;
                       ivec4(21239, -14368, 74546, -22071);
                       if(_GLF_DEAD(false))
                        break;
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         do
                          {
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                        }
                       ;
                       if(_GLF_DEAD(false))
                        {
                         do
                          {
                           return;
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            break;
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                       _GLF_SWITCH_0_36v;
                       do
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          return;
                         atomicCompSwap(next_virtual_gid, subgroup_local_id, virtual_gid);
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
                        {
                         ;
                        }
                      }
                     if(_GLF_DEAD(false))
                      return;
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          return;
                         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                          return;
                        }
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        return;
                      }
                     break;
                     if(_GLF_DEAD(false))
                      break;
                     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) ^ 0))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          return;
                         barrier();
                        }
                      }
                     default:
                     1;
                    }
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        {
                         do
                          {
                           do
                            {
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_DEAD(false))
                                return;
                               continue;
                              }
                             barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                       if(_GLF_DEAD(false))
                        return;
                      }
                     else
                      {
                      }
                    }
                   else
                    {
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               ;
               uvec4(66488u, 158839u, 108635u, 33390u);
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     return;
                    }
                  }
                 switch(_GLF_SWITCH(0))
                  {
                   case 68:
                   if(_GLF_DEAD(false))
                    return;
                   uint _GLF_SWITCH_3_0v;
                   case 69:
                   if(_GLF_DEAD(false))
                    continue;
                   mat4x3 _GLF_SWITCH_3_1v;
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     continue;
                    }
                   case 0:
                   case 85:
                   case 5:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   case 51:
                   case 60:
                   case 99:
                   case 52:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   do
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   break;
                   case 65:
                   mat4x3 _GLF_SWITCH_3_2v;
                   default:
                   1;
                  }
                 if(_GLF_DEAD(false))
                  break;
                }
               do
                {
                 do
                  {
                   for(                   (mat3x4(9.2, -1.2, 54.45, 2955.8776, 472.955, 2696.3718, 8.7, -6.5, -7.5, -5987.5883, 7.4, 60.34) + 1.4);
 false; sign(vec2(5.3, 147.292)))
                    {
                     while((mat2x4(-63.36, -6.3, 52.67, 300.327, -5442.0113, -77.08, 0.2, 453.344) == mat2x4(-0.0, -8.7, 6.7, 6.5, 6.7, -429.920, 49.49, -45.54)))
                      {
                       switch(_GLF_SWITCH(0))
                        {
                         case 2:
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(false))
                            break;
                           barrier();
                          }
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            return;
                           break;
                          }
                         matrixCompMult(mat3x2(-973.614, 63.12, -761.421, 335.877, 8183.9979, -5416.4633), mat3x2(37.10, -8534.0129, -2.7, -482.496, 6.3, -10.49));
                         if(_GLF_DEAD(false))
                          return;
                         case 0:
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          continue;
                         if(_GLF_DEAD(false))
                          return;
                         mat3x2 _GLF_SWITCH_0_46v, _GLF_SWITCH_0_47v, _GLF_SWITCH_0_48v;
                         cos(degrees(-2.7));
                         if(_GLF_DEAD(false))
                          return;
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          continue;
                         case 40:
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(false))
                            break;
                           return;
                          }
                         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))))
                          continue;
                         do
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))));
                         case 45:
                         case 31:
                         ;
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          break;
                         if(_GLF_DEAD(false))
                          barrier();
                         mat4x2 _GLF_SWITCH_0_49v, _GLF_SWITCH_0_50v, _GLF_SWITCH_0_51v[69];
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                            {
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_DEAD(false))
                                break;
                               continue;
                              }
                             switch(_GLF_SWITCH(0))
                              {
                               case 80:
                               ivec4(-38067, -7545, -45064, -97605);
                               if(_GLF_DEAD(false))
                                return;
                               case 0:
                               case 99:
                               if(_GLF_DEAD(false))
                                continue;
                               case 2:
                               if(_GLF_DEAD(false))
                                break;
                               case 6:
                               case 24:
                               case 54:
                               case 39:
                               barrier();
                               break;
                               case 31:
                               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                                continue;
                               mat2x3(8.2, -50.77, 951.101, -831.200, -855.212, -191.843);
                               default:
                               1;
                              }
                            }
                           if(_GLF_DEAD(false))
                            continue;
                          }
                         case 62:
                         case 58:
                         (ivec4(96777, -19968, -22898, 30132) % ivec4(2289, -90104, -42417, 7760));
                         mat2(-9.8, 96.78, 70.19, 669.645);
                         case 91:
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          continue;
                         if(_GLF_DEAD(false))
                          barrier();
                         uvec2(132411u, 85074u);
                         case 7:
                         if(_GLF_DEAD(false))
                          continue;
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            break;
                           return;
                          }
                         float _GLF_SWITCH_0_52v[85], _GLF_SWITCH_0_53v;
                         if(_GLF_DEAD(false))
                          barrier();
                         case 21:
                         ivec4(-81028, -65556, 2435, -19380);
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          return;
                         break;
                         case 99:
                         vec4(-6909.9554, 87.91, 6.9, -5141.9098);
                         if(_GLF_DEAD(false))
                          break;
                         default:
                         1;
                         if(_GLF_DEAD(false))
                          {
                           do
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              continue;
                             barrier();
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              continue;
                             if(_GLF_DEAD(false))
                              continue;
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          break;
                        }
                      }
                     mat3x4 _GLF_SWITCH_0_54v;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                     do
                      {
                       do
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       vec4(1.0, -7237.3116, -7560.3655, 699.953);
                       if(_GLF_DEAD(false))
                        break;
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
                      {
                      }
                     else
                      {
                       ;
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     ;
                     if(_GLF_DEAD(false))
                      break;
                     uvec3 _GLF_SWITCH_0_55v;
                     if(_GLF_DEAD(false))
                      return;
                     vec3 _GLF_SWITCH_0_56v;
                     do
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        return;
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        return;
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     bvec2 _GLF_SWITCH_0_57v, _GLF_SWITCH_0_58v[5];
                     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
                      barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(false)
                {
                 if(_GLF_DEAD(false))
                  continue;
                 do
                  {
                   ;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) >> 0))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     return;
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                 float _GLF_SWITCH_0_59v, _GLF_SWITCH_0_60v[67], _GLF_SWITCH_0_61v;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     return;
                    }
                  }
                 if(_GLF_DEAD(false))
                  break;
                 {
                  if(_GLF_DEAD(false))
                   continue;
                  switch(_GLF_SWITCH((0 | 0)))
                   {
                    case 65:
                    if(_GLF_DEAD(false))
                     continue;
                    mat4x2(mat2x3(-7.9, -3.1, -979.181, -1.2, 4869.9777, 68.75));
                    case 0:
                    case 25:
                    case 63:
                    ivec4 _GLF_SWITCH_0_62v;
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(false))
                       return;
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       return;
                      barrier();
                     }
                    case 8:
                    case 5:
                    uvec2 _GLF_SWITCH_0_63v[5], _GLF_SWITCH_0_64v[17], _GLF_SWITCH_0_65v;
                    case 31:
                    bool _GLF_SWITCH_0_66v;
                    break;
                    case 24:
                    ivec4 _GLF_SWITCH_3_0v[36], _GLF_SWITCH_3_1v[42];
                    if(_GLF_DEAD(false))
                     return;
                    case 36:
                    mat3(1.4);
                    default:
                    if(_GLF_DEAD(false))
                     return;
                    1;
                    if(_GLF_DEAD(false))
                     {
                      do
                       {
                        return;
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         return;
                       }
                      while(_GLF_WRAPPED_LOOP(false));
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       break;
                     }
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     break;
                   }
                 }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               else
                {
                 while(false)
                  {
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   if(_GLF_DEAD(false))
                    {
                     switch(_GLF_SWITCH(0))
                      {
                       case 34:
                       bvec3(true, true, true);
                       case 0:
                       if(_GLF_DEAD(false))
                        return;
                       case 43:
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          return;
                        }
                       else
                        {
                        }
                       case 84:
                       case 87:
                       barrier();
                       break;
                       case 68:
                       mat3 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v[4];
                       default:
                       1;
                      }
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    return;
                   do
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
                      {
                       if(_GLF_DEAD(false))
                        return;
                       return;
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   ivec2(80162, 57727).rrgr;
                   mat3x2 _GLF_SWITCH_0_67v;
                   (-7.1 - normalize(0.9));
                   if(_GLF_DEAD(false))
                    continue;
                  }
                 mat2 _GLF_SWITCH_0_68v, _GLF_SWITCH_0_69v[47], _GLF_SWITCH_0_70v;
                }
               if(_GLF_DEAD(false))
                return;
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 for(                 mat2(8.3, 580.015, -6.8, -97.43);
 false; (true ? ivec2(-91623, -57928) : ivec2(10703, -19827)))
                  {
                   mat3x4(153.995, -6264.1530, 5.0, -42.45, -83.10, 4904.1890, 3507.2541, -6.4, -6788.7609, 816.448, 6.7, -13.76);
                   bvec2(bvec3(false, true, true));
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      return;
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        return;
                       return;
                      }
                    }
                   while(false)
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                      continue;
                     if(_GLF_DEAD(false))
                      return;
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        continue;
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        return;
                       if(_GLF_DEAD(false))
                        return;
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        continue;
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          break;
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           return;
                          }
                         else
                          {
                          }
                        }
                       bvec3((uvec2(52632u, 87084u) != uvec2(188747u, 121803u)));
                      }
                     mat2x4(mat3x2(-57.51, -303.988, 8.9, -6.0, 291.854, 1.6));
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       bvec4(false, false, false, false);
                       if(_GLF_DEAD(false))
                        break;
                      }
                     else
                      {
                      }
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       mat2(mat2x3(1.5, -137.954, 6.1, -2.8, 7.8, -93.58));
                      }
                     else
                      {
                      }
                     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))))
                      break;
                     vec3(-7955.4253, 45.59, -7092.2137);
                     if(_GLF_DEAD(false))
                      {
                       switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                        {
                         case 12:
                         ivec4 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v[95];
                         case 3:
                         ;
                         case 0:
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            continue;
                           if(_GLF_DEAD(false))
                            break;
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                             if(_GLF_DEAD(false))
                              continue;
                            }
                           else
                            {
                             barrier();
                            }
                           if(_GLF_DEAD(false))
                            return;
                          }
                         case 19:
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          break;
                         barrier();
                         break;
                         default:
                         1;
                        }
                       if(_GLF_DEAD(false))
                        continue;
                      }
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                      {
                       mat3(mat2x3(1610.0408, 0.3, 765.343, -4.5, -441.397, 1867.1767));
                      }
                     mat3x2(-6.9, -0.6, 4.1, -15.25, -7.4, 6.3);
                     int _GLF_SWITCH_0_71v, _GLF_SWITCH_0_72v;
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                      {
                       if(_GLF_DEAD(false))
                        continue;
                       switch(_GLF_SWITCH(0))
                        {
                         case 56:
                         mat2x4(-9352.1416, -59.87, 470.089, -44.88, 6.6, 5285.5559, 1278.7070, -4.7);
                         case 45:
                         if(_GLF_DEAD(false))
                          continue;
                         (_injected_loop_counter & ivec3(35088, -78758, -46901));
                         case 0:
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          break;
                         case 67:
                         case 83:
                         case 21:
                         case 49:
                         case 65:
                         case 76:
                         case 48:
                         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            break;
                           max((ivec2(-71704, 38008) + ivec2(-28105, -4022)), 17539);
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              return;
                             switch(_GLF_SWITCH(0))
                              {
                               case 0:
                               case 97:
                               case 75:
                               case 95:
                               if(_GLF_DEAD(false))
                                break;
                               case 56:
                               if(_GLF_DEAD(false))
                                continue;
                               case 64:
                               case 42:
                               case 49:
                               case 65:
                               case 14:
                               if(_GLF_DEAD(false))
                                return;
                               barrier();
                               break;
                               if(_GLF_DEAD(false))
                                break;
                               case 39:
                               vec4 _GLF_SWITCH_3_0v;
                               case 5:
                               bvec3 _GLF_SWITCH_3_1v[21], _GLF_SWITCH_3_2v;
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                continue;
                               if(_GLF_DEAD(false))
                                break;
                               default:
                               if(_GLF_DEAD(false))
                                continue;
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                break;
                               1;
                               if(_GLF_DEAD(false))
                                return;
                              }
                            }
                          }
                         break;
                         case 47:
                         (+ mat2x3(_GLF_SWITCH_0_35v));
                         default:
                         1;
                        }
                      }
                    }
                   greaterThanEqual(vec4(9998.0892, -20.96, 2248.4832, -110.695), (vec4(-7713.3809, -6.5, 42.21, 7162.4135)));
                   23600;
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    return;
                   (injectionSwitch + (8.0 - 3421.4646));
                   mat3x2 _GLF_SWITCH_0_73v, _GLF_SWITCH_0_74v;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                     continue;
                    }
                   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                    continue;
                   do
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     do
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        return;
                       do
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        continue;
                       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
                        {
                         do
                          {
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                         if(_GLF_DEAD(false))
                          return;
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
               if(_GLF_DEAD(false))
                return;
              }
            }
           default:
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             switch(_GLF_SWITCH(0))
              {
               case 0:
               case 47:
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                continue;
               break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               case 29:
               (mat2x4(560.148, 57.09, 83.74, -93.93, 29.62, 456.050, 5613.2544, -402.949) / acos(56.85));
               case 92:
               ivec4 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v;
               default:
               if(_GLF_DEAD(false))
                break;
               1;
               if(_GLF_DEAD(false))
                break;
              }
            }
           else
            {
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           1;
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        break;
       switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
        {
         case 43:
         do
          {
           mat3x2(-977.618, 5836.7038, 1.9, -3045.7786, -33.87, 2.8);
          }
         while(_GLF_WRAPPED_LOOP(false));
         case 0:
         case 79:
         if(_GLF_DEAD(false))
          break;
         case 89:
         case 85:
         case 15:
         if(_GLF_DEAD(false))
          barrier();
         case 49:
         if(_GLF_DEAD(false))
          return;
         case 74:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         case 36:
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
         case 99:
         case 92:
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 return;
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
          }
         if(_GLF_DEAD(false))
          break;
         switch(_GLF_SWITCH(0))
          {
           case 95:
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           if((ivec3(5014, -26667, -75591) != ivec3(32382, 43445, -91849)))
            {
             ;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             step(atanh(vec3(-381.159, 505.730, 73.64)), vec3(-3544.6485, 2.0, 106.863));
             mat3x2 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v;
             while(false)
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  return;
                 while(false)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   mat2x3 _GLF_SWITCH_1_2v;
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       return;
                      }
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               bvec4(false, true, false, false);
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                barrier();
               while(false)
                {
                 (ivec2(42869, 5787) % -35155);
                 mat4x3(mat4(8.0, 1.8, 41.92, 41.74, 304.221, 4.5, -808.821, 90.56, 974.819, -957.995, 59.63, -8256.8012, 748.685, -3.7, 5.9, -8.0));
                 mat4x3(mat3x4(-20.15, 7366.3306, 1.6, -793.645, -4.8, -2.3, 7.7, -309.563, -82.84, -8.0, -712.115, 570.396));
                 mat2x3(18.48, 843.120, -5381.0301, 576.474, -9.9, -411.674);
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                      break;
                     if(_GLF_DEAD(false))
                      return;
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        return;
                       barrier();
                      }
                     if(_GLF_DEAD(false))
                      return;
                     barrier();
                    }
                   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   inverse(mat2(-66.02, -252.769, 9.8, -0.1));
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                 do
                  {
                   mat2x4(1530.5880, -62.80, 3.1, 764.370, 2.0, -174.948, 3.2, 7.8);
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 do
                  {
                   mat3(217.640, -3870.8794, -889.552, 6148.7532, 7448.1181, -0.7, -5000.1784, -276.575, -907.179);
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             for(int _injected_loop_counter = _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-73534))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   do
                    {
                     barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
              }
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 mat3(64.83, 86.92, 359.674, 8.7, -128.905, -140.192, 572.788, 608.499, -251.754);
                }
              }
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 for(                 -92085;
 true; vec4(-9.0, -8.5, 1143.0089, -9.4))
                  {
                   if(false)
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     uvec4(184080u, 54652u, 92753u, 145947u);
                     ivec3 _GLF_SWITCH_1_3v[92], _GLF_SWITCH_1_4v;
                     if(_GLF_DEAD(false))
                      continue;
                     (distance(vec4(47.52, 9.7, 6775.2938, 84.67), vec4(-30.58, 33.52, 0.2, 7229.9057)) - mat3x4(-789.413, -98.25, 695.532, 6.3, -4504.5292, 176.177, 4.8, 7872.8583, 946.032, 3475.6266, 7.9, -16.15));
                     ;
                     mat2x3(-192.631, 9.5, -9.3, -9.4, 2.6, -884.595);
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false)))))
                      {
                       if(_GLF_DEAD(false))
                        continue;
                       return;
                      }
                     mat4x2(18.71);
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          return;
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            continue;
                           continue;
                          }
                         barrier();
                        }
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          break;
                         return;
                        }
                       barrier();
                      }
                     bvec4(true, false, true, false);
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                     mat4(9.7, 70.27, -2.8, -6.2, -2139.0088, 179.677, -3462.0035, 6128.2942, 7.9, -0.1, -6640.8333, 3750.2380, -535.582, -3.3, 1007.8079, -2.6);
                     if(_GLF_DEAD(false))
                      break;
                     if(_GLF_DEAD(false))
                      continue;
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        continue;
                       true;
                      }
                     if(_GLF_DEAD(false))
                      break;
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    break;
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     continue;
                   }
                   uvec3 _GLF_SWITCH_1_5v[67];
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   for(ivec2 _GLF_SWITCH_1_6v[41], _GLF_SWITCH_1_7v; false; 6.9)
                    {
                     if(_GLF_DEAD(false))
                      return;
                     uint _GLF_SWITCH_1_8v, _GLF_SWITCH_1_9v;
                     ;
                     mat4x3(96.07, -1.2, -48.74, -6349.3991, 41.78, 5097.2249, -2431.1666, 84.09, -629.374, -9.2, -3534.0422, 2.3);
                     if(_GLF_DEAD(false))
                      continue;
                     ;
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        return;
                       if(_GLF_DEAD(false))
                        continue;
                       barrier();
                      }
                     if(_GLF_DEAD(false))
                      return;
                     ivec3(53170, 70788, -22664);
                     uvec2 _GLF_SWITCH_1_10v, _GLF_SWITCH_1_11v;
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
                      return;
                     return;
                    }
                   (+ mat3x4(-52.83, 59.08, 1.7, -69.84, -4.2, 4.3, -6.6, 799.911, 3.6, -0.0, 92.41, -36.64));
                   bvec2 _GLF_SWITCH_1_12v;
                   do
                    {
                     switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(4), int(4)))))
                      {
                       case 0:
                       case 86:
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          break;
                         barrier();
                        }
                       case 35:
                       case 90:
                       if(_GLF_DEAD(false))
                        return;
                       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                        continue;
                       case 13:
                       if(_GLF_DEAD(false))
                        return;
                       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                        barrier();
                       break;
                       default:
                       1;
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   mat2x4(-3162.4008, 619.030, 7.4, 3380.4103, 8.3, -2.8, -7.4, -94.37);
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                  }
                }
               else
                {
                 if(_GLF_DEAD(false))
                  return;
                }
              }
             else
              {
              }
             bvec3(true, true, true);
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                break;
               mat2x4(-719.999, 9.2, 3634.6616, 3.7, -40.70, 480.821, -49.30, 4428.1317);
              }
             bvec2(false, false)[0];
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            continue;
           case 0:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           case 64:
           atomicStore(checker[virtual_gid], read, 4, 64, 4);
           case 14:
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             return;
            }
           subgroupAll(true);
           if(_GLF_DEAD(false))
            break;
           break;
           default:
           1;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           barrier();
          }
         if(_GLF_DEAD(false))
          continue;
         break;
         case 93:
         float _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v[55];
         default:
         1;
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     break;
     default:
     if(_GLF_DEAD(false))
      return;
     1;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
}
