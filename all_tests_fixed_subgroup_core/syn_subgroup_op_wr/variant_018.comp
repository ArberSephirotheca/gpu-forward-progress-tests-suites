#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 do
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false)))))));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> _GLF_IDENTITY(0u, 0u ^ (0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(33.55) : injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) || false, bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(true, ! (! (true)))) || false, false, false), bvec3(bvec4(bvec3((_GLF_IDENTITY(true, ! (! (true)))) || false, false, false), true)))))), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               return;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size))) / 1u) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8198.3175), _GLF_FUZZED(-1.3)), vec2((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) | 0))))], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(num_workgroup)), (0u & 7926u) + (_GLF_IDENTITY(_GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(num_workgroup)), ((true ? subgroup_size : _GLF_FUZZED(num_workgroup))) - 0u), (false ? _GLF_FUZZED(subgroup_id) : (true ? subgroup_size : _GLF_FUZZED(num_workgroup)))))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), (workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(num_workgroup)), (0u & 7926u) + (_GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(num_workgroup)), (false ? _GLF_FUZZED(subgroup_id) : (true ? subgroup_size : _GLF_FUZZED(num_workgroup)))))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(num_workgroup)), (0u & 7926u) + (_GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(num_workgroup)), (false ? _GLF_FUZZED(subgroup_id) : (true ? subgroup_size : _GLF_FUZZED(num_workgroup)))))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u)) | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(num_workgroup)), (0u & 7926u) + (_GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(num_workgroup)), (false ? _GLF_FUZZED(subgroup_id) : (true ? subgroup_size : _GLF_FUZZED(num_workgroup)))))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 1u))) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(num_workgroup)), ((true ? subgroup_size : _GLF_FUZZED(num_workgroup))) | ((true ? subgroup_size : _GLF_FUZZED(num_workgroup)))), (0u & 7926u) + (_GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(num_workgroup)), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | 0u)) - 0u) : (true ? subgroup_size : _GLF_FUZZED(num_workgroup)))))))) + uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(3.8))), injectionSwitch.x))))) + _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id));
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(0u, ~ (~ (0u))) | (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), (true ? subgroup_local_id : _GLF_FUZZED(atomicXor(subgroup_size, subgroup_id)))) + 1)))) % subgroup_size)));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
      {
      }
     else
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(-71096) : int(_GLF_ZERO(0.0, injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))) && ((injectionSwitch.x > injectionSwitch.y))))))))))) || false)))))
          return;
        }
      }
    }
   else
    {
    }
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) / 1), 4)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (4) / 1), 0, 0, 0), max(ivec4(_GLF_IDENTITY(4, (4) / 1), 0, 0, 0), ivec4(_GLF_IDENTITY(4, (4) / 1), 0, 0, 0))))), _GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), ~ (~ (_GLF_IDENTITY(4, (4) / 1))))) | (_GLF_IDENTITY(4, (4) / 1))))), clamp(4, 4, 4))) - 0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, false, true)), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, false, true)), (_GLF_IDENTITY(bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, false, true))))) && true)), true && ((_GLF_IDENTITY(bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, false, true)), (_GLF_IDENTITY(bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, false, true))))) && true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, false, true)), false || (bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, false, true))))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, false, true)), false || (bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, false, true))))), false), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, false, true)), false || (bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, false, true))))), false), false), true))))))))))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)), true)))))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))))) || false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false)))) && true)))
      {
      }
     else
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) < 1); _injected_loop_counter ++)
        {
         return;
        }
      }
    }
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      break;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) >> 0))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-66.19), _GLF_FUZZED((false ? 0.9 : 8469.5178))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y), false || _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8.2, -1.1)) : injectionSwitch)) : _GLF_FUZZED(vec2(995.136, 2.1)))).y)), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(995.136, 2.1)))).y)))))) && true)))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), ! (_GLF_IDENTITY(! (bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), bool(bvec3(_GLF_IDENTITY(! (bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), (_GLF_IDENTITY(! (bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), true && (! (bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))) || false), false, true)))))))), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id))), uint(subgroup_local_id), uint(subgroup_local_id)))), clamp(uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id))), uint(subgroup_local_id), uint(subgroup_local_id)))), uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id))), uint(subgroup_local_id), uint(subgroup_local_id)))), uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id))), uint(subgroup_local_id), uint(subgroup_local_id))))))), subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) + (_GLF_IDENTITY(0u ^ 0u, ~ (~ (0u ^ _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : 0u)))))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id))), uint(subgroup_local_id), uint(subgroup_local_id)))), clamp(uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id))), uint(subgroup_local_id), uint(subgroup_local_id)))), uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id))), uint(subgroup_local_id), uint(subgroup_local_id)))), uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id))), uint(subgroup_local_id), uint(subgroup_local_id))))))), subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) + (_GLF_IDENTITY(0u ^ 0u, ~ (~ (0u ^ _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : 0u)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id))), uint(subgroup_local_id), uint(subgroup_local_id)))), clamp(uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id))), uint(subgroup_local_id), uint(subgroup_local_id)))), uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id))), uint(subgroup_local_id), uint(subgroup_local_id)))), uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id))), uint(subgroup_local_id), uint(subgroup_local_id))))))), subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) + (_GLF_IDENTITY(0u ^ 0u, ~ (~ (0u ^ _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : 0u)))))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id))), uint(subgroup_local_id), uint(subgroup_local_id)))), clamp(uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id))), uint(subgroup_local_id), uint(subgroup_local_id)))), uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id))), uint(subgroup_local_id), uint(subgroup_local_id)))), uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id))), uint(subgroup_local_id), uint(subgroup_local_id))))))), subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) + (_GLF_IDENTITY(0u ^ 0u, ~ (~ (0u ^ _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : 0u)))))))) : _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id))), uint(subgroup_local_id), uint(subgroup_local_id)))), clamp(uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id))), uint(subgroup_local_id), uint(subgroup_local_id)))), uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id))), uint(subgroup_local_id), uint(subgroup_local_id)))), uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id))), uint(subgroup_local_id), uint(subgroup_local_id))))))), subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) + (_GLF_IDENTITY(0u ^ 0u, ~ (~ (0u ^ _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : 0u))))))))))) + 1, clamp(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))), clamp(0u + (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))), 0u + (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))), _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))), (true ? 0u + (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) : _GLF_FUZZED(subgroup_size)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1))))) ^ 0))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (1u ^ 0u) * (subgroup_local_id)), 0u + (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) + 1) * 1u), _GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) + _GLF_IDENTITY(1, (1) ^ (1 ^ 1)))) < subgroup_size)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 return;
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 do
                  {
                   atomicStore(checker[virtual_gid], read, 4, 64, 4);
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0)).x > injectionSwitch.y), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), true && (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))).y))))), bool(bvec2((_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.9))) : _GLF_FUZZED(-8.8))))).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))) - _GLF_IDENTITY(dot(vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y)), true && (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x3(mat2(1.0))))).x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - abs(0.0))) * 1.0), injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1])))).y))))), bool(bvec4(! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))), true, false, false))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0)).x > injectionSwitch.y), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), true && (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))).y))))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))) - _GLF_IDENTITY(dot(vec4(round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? normalize(vec2(1.0, 1.0)) : _GLF_FUZZED(round(injectionSwitch)))))), 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), (dot(_GLF_IDENTITY(vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0), max(_GLF_IDENTITY(vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0), mix(vec4((vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0))[0], (vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0))[1], (vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0))[2], _GLF_FUZZED(-2.9)), vec4(_GLF_FUZZED(-33.72), _GLF_FUZZED(536.600), _GLF_FUZZED(-2.3), (vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0))[3]), bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0), vec4(mat4x3(_GLF_IDENTITY(vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0), max(vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0), vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), vec4(0.0, 0.0, 0.0, 0.0))) - 0.0))) > injectionSwitch.y)), true && (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))) - _GLF_IDENTITY(dot(vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec3(-8.7, -493.381, -6197.2002).x)), bool(false))), 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y)), true && (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))) - _GLF_IDENTITY(dot(vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(sign(8.9)))), 0.0)), dot(vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y)), true && (! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0)).x > injectionSwitch.y)))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))) - _GLF_IDENTITY(dot(vec4(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-659.722)), float(1.0), bool(true))))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(698.017) : 1.0)))), 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y)), true && _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))), ((! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))))) || false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1])))).y))))), bool(bvec4(! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))), true, false, false)))))))));
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! ((! (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! ((! (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! ((! (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! ((! (injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! ((! (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! ((! (injectionSwitch.x > injectionSwitch.y)))))))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! ((! (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! ((! (injectionSwitch.x > injectionSwitch.y)))))))), true, true), bvec3(bvec4(bvec3(! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! ((! (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! ((! (injectionSwitch.x > injectionSwitch.y)))))))), true, true), true))), true))))))), (bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! ((! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (! (! (! ((! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (! (! ((! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- float(191436u)))), float(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, sqrt(1.0), 0.0, tan(0.0), 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)))))))))), bool(bvec3(! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! ((! (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! ((! (injectionSwitch.x > injectionSwitch.y)))))))), true, true)))))) || false))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))))))))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                  }
                 else
                  {
                   return;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                  }
                }
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                {
                 subgroupAll(false);
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  break;
                 do
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      break;
                     return;
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), false, true))))))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         return;
                        }
                       else
                        {
                        }
                       if(_GLF_DEAD(false))
                        continue;
                      }
                     return;
                     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))))))
                      return;
                    }
                  }
                 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))));
                }
              }
             else
              {
               atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) + 0)) - 0));
               subgroupAll(true);
               if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, false)), false))))), false || (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, false)), false))), true && (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, false)), false)))))))))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   do
                    {
                     if(_GLF_DEAD(false))
                      return;
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), false, true), bvec3(bvec4(bvec3(! (false), false, true), true))))))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (false), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(! (false), false, _GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (false), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(! (false), false, true))), true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(! (false), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (false), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(! (false), false, true))), true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bvec3(bvec4(bvec3(! (false), false, true), true))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (false), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(! (false), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (false), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(! (false), false, true))), true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(! (false), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (false), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(! (false), false, true))), true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bvec3(bvec4(bvec3(! (false), false, true), true))))), true, _GLF_IDENTITY(true, true && (true)), true)), ! (! (bool(bvec4(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (false), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(! (false), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (false), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(! (false), false, true))), true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(! (false), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (false), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(! (false), false, true))), true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bvec3(bvec4(bvec3(! (false), false, true), true))))), true, _GLF_IDENTITY(true, true && (true)), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (false), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(! (false), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (false), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(! (false), false, true))), true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(! (false), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (false), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(! (false), false, true))), true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bvec3(bvec4(bvec3(! (false), false, true), true))))), true, _GLF_IDENTITY(true, true && (true)), true)), ! (! (bool(bvec4(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (false), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(! (false), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (false), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(! (false), false, true))), true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(! (false), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (false), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(! (false), false, true))), true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bvec3(bvec4(bvec3(! (false), false, true), true))))), true, _GLF_IDENTITY(true, true && (true)), true))))), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (false), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(! (false), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (false), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(! (false), false, true))), true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(! (false), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (false), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(! (false), false, true))), true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bvec3(bvec4(bvec3(! (false), false, true), true))))), true, _GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(true, true && (true)))), ! (! (bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (false), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(! (false), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (false), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(! (false), false, true))), true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(! (false), false, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(! (false), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(! (false), false, true)), bvec3(bvec3(bvec3(bvec3(! (false), false, true))))))), true))))), bvec3(bvec4(bvec3(bvec3(bvec3(! (false), _GLF_IDENTITY(false, ! (! (false))), true))), true))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x < injectionSwitch.y))))))), bvec3(bvec4(bvec3(! (false), false, true), true))))), true, _GLF_IDENTITY(true, true && (true)), true)))))))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((false), ! (! ((false)))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), false, true), bvec3(bvec4(bvec3(! (false), false, true), true))), false))), true))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, false)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (false), false, _GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, ! (! (true)))), true && (true && (_GLF_IDENTITY(true, ! (! (true)))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), false || (! (false))), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), bvec3(bvec4(bvec3(! (false), false, true), true)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (! ((true))))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), bvec3(bvec4(bvec3(! (false), false, true), true))))) && true)))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), bool(bvec3((true), false, false))), true, false, false))) && true))))), false)), (bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (false), false, _GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, ! (! (true)))), true && (true && (_GLF_IDENTITY(true, ! (! (true)))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), false || (! (false))), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), bvec3(bvec4(bvec3(! (false), false, true), true)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (! ((true))))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), bvec3(bvec4(bvec3(! (false), false, true), true))))) && true)))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), bool(bvec3((true), false, false))), true, false, false))) && true))))), false))) || false), false || (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (false), false, _GLF_IDENTITY(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), (bool(bvec3(true, true, true))) && true))) || false) && (_GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))), false))))))))))))))), bvec3(bvec4(bvec3(! (false), false, true), true))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && true) && true))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))))), false || (_GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))))))))), false)), _GLF_IDENTITY(! (! (bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec3(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))))))), bvec3(bvec4(bvec3(! (false), false, true), true))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false))))), true && (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))))), false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec3(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec3(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))))))))))), bvec3(bvec4(bvec3(! (false), false, true), true))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))))), false)))), _GLF_IDENTITY(bool(bvec4(! (! (bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec3(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))))))), bvec3(bvec4(bvec3(! (false), false, true), true))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))))), false)))), false, false, false)), false || (bool(bvec4(! (! (bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (false), false, _GLF_IDENTITY(true, _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec3(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))))))), bvec3(bvec4(bvec3(! (false), false, true), true))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))))), false)))), false, false, false)))))), bool(bvec2(! (_GLF_IDENTITY(! (! (bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec3(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))))))), bvec3(bvec4(bvec3(! (false), false, true), true))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))))), false)))), _GLF_IDENTITY(bool(bvec4(! (! (bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))), bvec3(bvec4(bvec3(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))), true)))))))), bvec3(bvec4(bvec3(! (false), false, true), true))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, bool(bvec4((true) && true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false)))), false, false, false)), false || (bool(bvec4(! (! (bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false)))))), false, _GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true && (_GLF_IDENTITY(true, ! (! (true)))), ! (! (true && (_GLF_IDENTITY(true, ! (! (true))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true && (_GLF_IDENTITY(true, ! (! (true)))), ! (! (true && (_GLF_IDENTITY(true, ! (! (true))))))), true, false), false)))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true && (_GLF_IDENTITY(true, ! (! (true)))), ! (! (true && (_GLF_IDENTITY(true, ! (! (true))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true && (_GLF_IDENTITY(true, ! (! (true)))), ! (! (true && (_GLF_IDENTITY(true, ! (! (true))))))), true, false), false))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))), bvec3(bvec3(bvec3(! (false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))))))), bvec3(bvec4(bvec3(! (false), false, true), true))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))))), false)))), false, false, false)))))), true))))))))) || false)))))))
                      {
                       do
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           return;
                           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
                            break;
                          }
                         else
                          {
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 else
                  {
                  }
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   return;
                  }
                 if(_GLF_DEAD(false))
                  return;
                }
              }
             for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)), (1) + 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      return;
                     for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), int(int(int(0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 | 1)); _injected_loop_counter ++)
                      {
                       return;
                      }
                    }
                  }
                }
               else
                {
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           if(_GLF_DEAD(false))
            break;
          }
         else
          {
           if(_GLF_DEAD(false))
            continue;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) - vec2(0.0, 0.0)).x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-168.682)), float(injectionSwitch.y), bool(true)), min(mix(float(_GLF_FUZZED(-168.682)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-168.682)), float(injectionSwitch.y), bool(true)))))))))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true))) || false)))
          {
           if(_GLF_DEAD(false))
            break;
           for(int _injected_loop_counter = (0 | (-34571 & 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y))); _injected_loop_counter ++)
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              return;
            }
          }
        }
      }
    }
  }
}
