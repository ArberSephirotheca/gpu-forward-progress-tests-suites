#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(-1.5), _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), (_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0)))) - 0.0), float(_GLF_FUZZED(272.421)), bool(false))) + (_GLF_FUZZED(-1.5))) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.5), _GLF_FUZZED(70.29)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).x)), injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(-1.5), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(272.421)), bool(false))) + (_GLF_FUZZED(-1.5))) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), (clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(-1.5), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(272.421)), bool(false))) + (_GLF_FUZZED(_GLF_IDENTITY(-1.5, (-1.5) - 0.0)))) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) / 1.0)) / 1.0), (true ? _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0), (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-1.5), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(272.421)), bool(false))) + (_GLF_FUZZED(-1.5))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-1.5), 0.0 + (_GLF_IDENTITY(_GLF_FUZZED(-1.5), (_GLF_FUZZED(-1.5)) + 0.0))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(272.421)), bool(false))) + (_GLF_FUZZED(-1.5)))) - 0.0) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), 1.0 * (clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(-1.5), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(272.421)), bool(false))) + (_GLF_FUZZED(-1.5)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-5.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(272.421)), bool(false))) + (_GLF_FUZZED(-1.5)), (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(272.421)), bool(false))) + (_GLF_FUZZED(-1.5))) - 0.0)), bool(true)), _GLF_IDENTITY(1.0, (1.0) + 0.0) * (_GLF_IDENTITY(mix(float(_GLF_FUZZED(-5.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(272.421)), bool(false))) + (_GLF_FUZZED(-1.5)), (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(272.421)), bool(false))) + (_GLF_FUZZED(-1.5))) - 0.0)), bool(true)), (mix(float(_GLF_IDENTITY(_GLF_FUZZED(-5.0), max(_GLF_FUZZED(-5.0), _GLF_FUZZED(-5.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(272.421)), bool(false))) + (_GLF_FUZZED(-1.5)), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), mix(float(0.0), float(_GLF_FUZZED(272.421)), bool(false))) + (_GLF_FUZZED(-1.5))) - 0.0)), bool(true))) + 0.0))))) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x))) : _GLF_FUZZED(length(injectionSwitch))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])))).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-22.10) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).y), float(mat3x2((false ? _GLF_FUZZED(-22.10) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).y), 1.0, 1.0, 1.0, 1.0, 0.0))), ((false ? _GLF_FUZZED(-22.10) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).y)) * 1.0)), injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)))), vec2(_GLF_FUZZED(689.018), _GLF_FUZZED(3.4)), bvec2(false, false))).x > injectionSwitch.y)))) && true), bool(bvec4(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)))), vec2(_GLF_FUZZED(689.018), _GLF_FUZZED(3.4)), bvec2(false, false))).x > injectionSwitch.y)))) && true), false, true, false)))))))
    barrier();
   return;
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3708.9303)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-502.183), (injectionSwitch)[1]), (false ? _GLF_FUZZED(vec2(-847.874, 28.97)) : vec2(_GLF_FUZZED(-502.183), (injectionSwitch)[1]))), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, true)), bvec2(bvec2(bvec2(bvec4(bvec2(false, true), false, true))))), false, _GLF_IDENTITY(false, ! (! (false))))))))).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3708.9303)), vec2(_GLF_FUZZED(-502.183), _GLF_IDENTITY((injectionSwitch)[1], mix(_GLF_IDENTITY(float(_GLF_FUZZED(49.64)), clamp(float(_GLF_FUZZED(49.64)), float(_GLF_FUZZED(49.64)), _GLF_IDENTITY(float(_GLF_FUZZED(49.64)), (false ? _GLF_FUZZED(-917.963) : float(_GLF_FUZZED(49.64)))))), float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0), (true ? mat2x4(_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat2x4(677.182, 7.9, 54.32, -1360.0863, -9.8, 82.52, 4.4, 97.46))))))))[1], mix(float(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), float(_GLF_FUZZED(-72.95)), bool(false)))), bool(true)))), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, _GLF_IDENTITY(true, (true) || false)))), bvec2(bvec4(bvec2(bvec2(bvec2(false, _GLF_IDENTITY(true, (true) || false)))), false, true)))), false, true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), true), false, true))))), false, false)))))).y, _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(3708.9303)), (vec2((injectionSwitch)[0], _GLF_FUZZED(3708.9303))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(-502.183), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true))))), false, false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, true)), bvec2(bvec2(bvec2(bvec4(bvec2(false, true), false, _GLF_IDENTITY(true, ! (! (true)))))))), false, false)))))).y)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), _GLF_IDENTITY((true ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0), (true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (vec2(0.0, 0.0))))) - vec2(0.0, 0.0) : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(fract(vec2(4.6, -2016.5552)))), (true ? (true ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0), (true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (vec2(0.0, 0.0))))) - vec2(0.0, 0.0) : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(fract(vec2(4.6, -2016.5552)))) : _GLF_FUZZED(vec2(2738.5442, -348.498)))))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3708.9303)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-502.183, (false ? _GLF_FUZZED(-6955.8382) : -502.183))), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))) - 0.0)), bvec2(false, true))).y)), bool(bvec3((! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), _GLF_IDENTITY((true ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0), (true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (vec2(0.0, 0.0))))) - vec2(0.0, 0.0) : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(fract(vec2(4.6, -2016.5552)))), (true ? (true ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0), (true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (vec2(0.0, 0.0))))) - vec2(0.0, 0.0) : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(fract(vec2(4.6, -2016.5552)))) : _GLF_FUZZED(vec2(2738.5442, -348.498)))))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3708.9303)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-502.183, (false ? _GLF_FUZZED(-6955.8382) : -502.183))), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))) - 0.0)), bvec2(false, true))).y)), false, false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (injectionSwitch.x > injectionSwitch.y)), false), true)))), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(2423.8785)), float(injectionSwitch[1]), bool(true))))).y)), false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u), gl_NumWorkGroups.x, gl_NumWorkGroups.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(16212u, 129480u, 134568u)) : gl_WorkGroupSize))) | (gl_WorkGroupSize))) - (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u)))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), (false || (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false))))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))).x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((true ? workgroup_size : _GLF_FUZZED(num_workgroup)), ~ (~ ((true ? workgroup_size : _GLF_FUZZED(num_workgroup)))))) * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), true && (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), ((! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ (0u << _GLF_IDENTITY(uint(5u), uint(5u)))) * subgroup_size, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (true) && true) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), bool(bvec3(false, false, false))))) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) / 1u) : (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), 0u | (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), uint(uvec3(~ (subgroup_size), 0u, 1u))))))))))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) - 0u), clamp(uint(2u), uint(_GLF_IDENTITY(2u, (2u) + 0u)), uint(2u))))) ^ (subgroup_local_id)), 0u ^ (_GLF_IDENTITY(subgroup_local_id, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) - 0u), clamp(uint(2u), uint(_GLF_IDENTITY(2u, (2u) + 0u)), uint(2u))))) ^ (subgroup_local_id))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), (true ? _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), 1u * ((subgroup_id)))) >> 0u) : _GLF_FUZZED(subgroup_local_id))))), (_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(subgroup_local_id)))))) + 0u) * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY((1) >> _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), 0 + (int(ivec2(0, 0))))), ((1) >> 0) + 0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, max(1, 1))))) >> 0), int(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(1, (1) >> 0)) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) ^ 0)) << (0 << _GLF_IDENTITY(int(1), int(1)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(int(true)) : _GLF_IDENTITY((1), (_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) ^ (0 >> _GLF_IDENTITY(int(1), int(1)))), ((1)) ^ 0)) << (0 << _GLF_IDENTITY(int(1), int(1)))), 1 * (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(int(true)) : _GLF_IDENTITY((1), (_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) ^ (0 >> _GLF_IDENTITY(int(1), int(1)))), ((1)) ^ 0)) << (0 << _GLF_IDENTITY(int(1), int(1)))))))) >> 0), (_GLF_IDENTITY(1, (1) >> 0)) - 0))), _GLF_IDENTITY(max(1, 1), (max(1, 1)) - (0 >> _GLF_IDENTITY(int(5), int(5)))))), ~ (~ ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY((1) >> _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), 0 + (int(ivec2(0, 0))))), ((1) >> 0) + 0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, max(1, 1))))) >> 0), int(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(1, (1) >> 0)) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) ^ 0)) << (0 << _GLF_IDENTITY(int(1), int(1)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(int(true)) : _GLF_IDENTITY((1), (_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) ^ (0 >> _GLF_IDENTITY(int(1), int(1)))), ((1)) ^ 0)) << (0 << _GLF_IDENTITY(int(1), int(1)))), 1 * (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(int(true)) : _GLF_IDENTITY((1), (_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) ^ (0 >> _GLF_IDENTITY(int(1), int(1)))), ((1)) ^ 0)) << (0 << _GLF_IDENTITY(int(1), int(1)))))))) >> 0), (_GLF_IDENTITY(1, (1) >> 0)) - 0))), _GLF_IDENTITY(max(1, 1), (max(1, 1)) - (0 >> _GLF_IDENTITY(int(5), int(5))))))))) % subgroup_size), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))) + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u | 0u)))) + ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), (false ? _GLF_FUZZED(58197) : (_GLF_IDENTITY(1, ~ (~ (1)))))) >> 0), max(1, 1))) % subgroup_size), (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), max(1, 1))) % subgroup_size)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(num_workgroup) : workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), (false ? _GLF_FUZZED((workgroup_id)) : ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (~ (subgroup_id * subgroup_size)) - 0u))))), (true ? _GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(num_workgroup) : workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) >> 0u) : _GLF_FUZZED(virtual_gid))) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), (false ? _GLF_FUZZED((workgroup_id)) : ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (~ (subgroup_id * subgroup_size)) - 0u)))), (_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), (false ? _GLF_FUZZED((workgroup_id)) : ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (~ (subgroup_id * subgroup_size)) - 0u))))) << 0u)) : _GLF_FUZZED(subgroup_id))) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), max(1, 1))), 0u | ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) >> (0 >> _GLF_IDENTITY(int(0), int(0)))) >> 0), min(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, (1) >> 0))), max(1, 1))))) % subgroup_size))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)) + ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) - 0))), (1) + _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 + (0)), 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (1) + _GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 + (0)), 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 + (0)), 0)), (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 + (0)), 0))) | (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 + (0)), 0)))), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 + (0)), 0)))))), (true ? (_GLF_IDENTITY(1, (1) + _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 + (0)), 0)))) : _GLF_FUZZED(16683)))) >> 0) >> 0), max(1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) ^ (0 << _GLF_IDENTITY(int(2), int(2)))), 1))))) % subgroup_size)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-394.485))) > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))) || false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))), false || (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) * 1.0))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) * 1.0))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) * 1.0))), true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || ((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))) || false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true, true))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, sqrt(1.0), 1.0, 0.0, cos(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((-4572.1201)) : 0.0))), exp(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, ~ (~ (6u)))))) ^ (buf[virtual_gid]), (true ? (0u >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(6u, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(6u, (6u) + 0u), 1u, 0u, 0u), (uvec4(_GLF_IDENTITY(6u, (6u) + 0u), 1u, 0u, 0u)) >> uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY((6u) + 0u, (_GLF_IDENTITY((6u) + 0u, ~ (~ (_GLF_IDENTITY((6u) + 0u, clamp((6u) + 0u, (6u) + 0u, (6u) + 0u)))))) | ((6u) + 0u))), ~ (~ (6u)))))) ^ (buf[virtual_gid]) : _GLF_FUZZED(next_virtual_gid))))), _GLF_IDENTITY(uint(uvec3(min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, ~ (~ (6u)))))) ^ (buf[virtual_gid]), (true ? (0u >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(6u, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(6u, (6u) + 0u), 1u, 0u, 0u), (uvec4(_GLF_IDENTITY(6u, (6u) + 0u), 1u, 0u, 0u)) >> uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY((6u) + 0u, (_GLF_IDENTITY((6u) + 0u, ~ (~ (_GLF_IDENTITY((6u) + 0u, clamp((6u) + 0u, (6u) + 0u, (6u) + 0u)))))) | ((6u) + 0u))), ~ (~ (6u)))))) ^ (buf[virtual_gid]) : _GLF_FUZZED(next_virtual_gid))))), (1u | 1u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), max(uint(uvec3(min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, ~ (~ (6u)))))) ^ (buf[virtual_gid]), (true ? (0u >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(6u, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(6u, (6u) + 0u), 1u, 0u, 0u), (uvec4(_GLF_IDENTITY(6u, (6u) + 0u), 1u, 0u, 0u)) >> uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY((6u) + 0u, (_GLF_IDENTITY((6u) + 0u, ~ (~ (_GLF_IDENTITY((6u) + 0u, clamp((6u) + 0u, (6u) + 0u, (6u) + 0u)))))) | ((6u) + 0u))), ~ (~ (6u)))))) ^ (buf[virtual_gid]) : _GLF_FUZZED(next_virtual_gid))))), (1u | 1u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(uint(uvec3(min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, ~ (~ (6u)))))) ^ (buf[virtual_gid]), (true ? (0u >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(6u, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(6u, (6u) + 0u), 1u, 0u, 0u), (uvec4(_GLF_IDENTITY(6u, (6u) + 0u), 1u, 0u, 0u)) >> uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY((6u) + 0u, (_GLF_IDENTITY((6u) + 0u, ~ (~ (_GLF_IDENTITY((6u) + 0u, clamp((6u) + 0u, (6u) + 0u, (6u) + 0u)))))) | ((6u) + 0u))), ~ (~ (6u)))))) ^ (buf[virtual_gid]) : _GLF_FUZZED(next_virtual_gid))))), (1u | 1u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ (uint(uvec3(min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, ~ (~ (6u)))))) ^ (buf[virtual_gid]), (true ? (0u >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(6u, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(6u, (6u) + 0u), 1u, 0u, 0u), (uvec4(_GLF_IDENTITY(6u, (6u) + 0u), 1u, 0u, 0u)) >> uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY((6u) + 0u, (_GLF_IDENTITY((6u) + 0u, ~ (~ (_GLF_IDENTITY((6u) + 0u, clamp((6u) + 0u, (6u) + 0u, (6u) + 0u)))))) | ((6u) + 0u))), ~ (~ (6u)))))) ^ (buf[virtual_gid]) : _GLF_FUZZED(next_virtual_gid))))), (1u | 1u), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))), 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64), _GLF_IDENTITY(clamp((64), (64), _GLF_IDENTITY((64), max((64), (64)))), 0 ^ (_GLF_IDENTITY(clamp((64), (64), _GLF_IDENTITY((64), max((64), (64)))), ~ (~ (_GLF_IDENTITY(clamp((64), (64), _GLF_IDENTITY((64), max((64), (64)))), clamp(clamp((64), (64), _GLF_IDENTITY((64), max((64), (64)))), _GLF_IDENTITY(clamp((64), (64), _GLF_IDENTITY((64), max((64), (64)))), max(clamp((64), (64), _GLF_IDENTITY((64), max((64), (64)))), clamp((64), (64), _GLF_IDENTITY((64), max((64), (64)))))), clamp((64), (64), _GLF_IDENTITY((64), max((64), (64)))))))))))) | (64)), 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))), true, false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, ! (! ((false) || false))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), (injectionSwitch.x > injectionSwitch.y) && true)))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.5)), bool(false))) > injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(999.675), _GLF_FUZZED(487.823)), clamp(_GLF_IDENTITY(vec2(_GLF_FUZZED(999.675), _GLF_FUZZED(487.823)), max(vec2(_GLF_FUZZED(999.675), _GLF_FUZZED(487.823)), _GLF_IDENTITY(vec2(_GLF_FUZZED(999.675), _GLF_FUZZED(487.823)), (vec2(_GLF_FUZZED(999.675), _GLF_FUZZED(487.823))) * vec2(1.0, 1.0)))), vec2(_GLF_FUZZED(999.675), _GLF_FUZZED(487.823)), vec2(_GLF_FUZZED(999.675), _GLF_FUZZED(487.823)))), bvec2(false, false))).x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.5)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, false))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) + _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))), mix(vec2(_GLF_FUZZED(float(110830u)), _GLF_FUZZED(-7946.7988)), vec2((vec2(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))))[0], (vec2(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))))[1]), bvec2(true, true))))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4231.8521)), vec2(_GLF_FUZZED(-8.8), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(vec3((injectionSwitch)[1], 1.0, 1.0)), (float(vec3((injectionSwitch)[1], 1.0, 1.0))) - 0.0))), bvec2(false, true))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat3x4(injectionSwitch[1], 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))).y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, ~ (~ (1))), 1)), ~ (~ (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) ^ 0)), 1)), _GLF_IDENTITY((int(ivec2(_GLF_IDENTITY(1, ~ (~ (1))), 1))) | (int(ivec2(_GLF_IDENTITY(1, ~ (~ (1))), 1))), ((int(ivec2(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((1), min(_GLF_IDENTITY((1), ((1)) / 1), (1)))), (_GLF_IDENTITY((~ (1)), _GLF_IDENTITY(min((~ (1)), (~ (1))), (min((~ (1)), (~ (1)))) | (min((~ (1)), (~ (1))))))) | 0)), 1))) | (int(ivec2(_GLF_IDENTITY(1, ~ (~ (1))), 1)))) - 0)))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-1106) : _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 1))), (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 1)), 0 ^ (int(ivec2(1, 1)))))) >> 0), min(false ? _GLF_FUZZED(-1106) : _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 1))), _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) >> 0, int(ivec3((_GLF_IDENTITY(1, int(ivec2(1, 1)))) >> 0, 0, 1)))), false ? _GLF_FUZZED(-1106) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 1))), (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 1)), (int(ivec2(1, 1))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) + (0 | 0)), (_GLF_IDENTITY(1, int(ivec2(1, 1)))) >> 0))))), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, ~ (~ (1))), 1)), ~ (~ (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) ^ 0)), 1)), _GLF_IDENTITY((int(ivec2(_GLF_IDENTITY(1, ~ (~ (1))), 1))) | (int(ivec2(_GLF_IDENTITY(1, ~ (~ (1))), 1))), ((int(ivec2(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((1), min(_GLF_IDENTITY((1), ((1)) / 1), (1)))), (_GLF_IDENTITY((~ (1)), _GLF_IDENTITY(min((~ (1)), (~ (1))), (min((~ (1)), (~ (1)))) | (min((~ (1)), (~ (1))))))) | 0)), 1))) | (int(ivec2(_GLF_IDENTITY(1, ~ (~ (1))), 1)))) - 0)))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-1106) : _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 1))), (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 1)), 0 ^ (int(ivec2(1, 1)))))) >> 0), min(false ? _GLF_FUZZED(-1106) : _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 1))), _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) >> 0, int(ivec3((_GLF_IDENTITY(1, int(ivec2(1, 1)))) >> 0, 0, 1)))), false ? _GLF_FUZZED(-1106) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 1))), (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 1)), (int(ivec2(1, 1))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) + (0 | 0)), (_GLF_IDENTITY(1, int(ivec2(1, 1)))) >> 0)))))) | (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, ~ (~ (1))), 1)), ~ (~ (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) ^ 0)), 1)), _GLF_IDENTITY((int(ivec2(_GLF_IDENTITY(1, ~ (~ (1))), 1))) | (int(ivec2(_GLF_IDENTITY(1, ~ (~ (1))), 1))), ((int(ivec2(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((1), min(_GLF_IDENTITY((1), ((1)) / 1), (1)))), (_GLF_IDENTITY((~ (1)), _GLF_IDENTITY(min((~ (1)), (~ (1))), (min((~ (1)), (~ (1)))) | (min((~ (1)), (~ (1))))))) | 0)), 1))) | (int(ivec2(_GLF_IDENTITY(1, ~ (~ (1))), 1)))) - 0)))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-1106) : _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 1))), (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 1)), 0 ^ (int(ivec2(1, 1)))))) >> 0), min(false ? _GLF_FUZZED(-1106) : _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 1))), _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) >> 0, int(ivec3((_GLF_IDENTITY(1, int(ivec2(1, 1)))) >> 0, 0, 1)))), false ? _GLF_FUZZED(-1106) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 1))), (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 1)), (int(ivec2(1, 1))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) + (0 | 0)), (_GLF_IDENTITY(1, int(ivec2(1, 1)))) >> 0))))))) < _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), max(virtual_gid, virtual_gid)), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (virtual_gid) >> 0u)) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), max(virtual_gid, virtual_gid)), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (virtual_gid) >> 0u)) << 0u), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), max(virtual_gid, virtual_gid)), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (virtual_gid) >> 0u)) << 0u)))) + 0u))), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))) | _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (virtual_gid) >> 0u)) << 0u)), (true ? (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) / 1u, max((virtual_gid) / 1u, (virtual_gid) / 1u))), (virtual_gid) >> 0u)) << 0u)) : _GLF_FUZZED(workgroup_base))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))) | _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), (virtual_gid) / 1u), (virtual_gid) >> 0u)) << 0u)), (true ? (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (virtual_gid) >> 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (virtual_gid) >> 0u)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (virtual_gid) >> 0u)))))), clamp(~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (virtual_gid) >> 0u)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (virtual_gid) >> 0u)))))), ~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (virtual_gid) >> 0u)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (virtual_gid) >> 0u)))))), ~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (virtual_gid) >> 0u)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (virtual_gid) >> 0u)))))))))) << 0u)) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (virtual_gid) >> 0u)) << 0u), (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (virtual_gid) >> 0u)) << 0u)) ^ 0u)), (true ? (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (virtual_gid) >> 0u)) << 0u)) : _GLF_FUZZED(workgroup_base))), ((_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))) | _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)) >> 0u), (virtual_gid) >> 0u)) << 0u)), (true ? (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), ~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)))), (virtual_gid) >> 0u)) << 0u)) : _GLF_FUZZED(workgroup_base)))) - 0u)) | ((_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))) | _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (virtual_gid) >> 0u)) << 0u)), (true ? (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (virtual_gid) >> 0u)) << 0u)) : _GLF_FUZZED(workgroup_base))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), (virtual_gid) / 1u), (virtual_gid) >> 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), (virtual_gid) / 1u), (virtual_gid) >> 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), (virtual_gid) / 1u), (virtual_gid) >> 0u))) - 0u)))) << 0u)), ((_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), (virtual_gid) / 1u), (virtual_gid) >> 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), (virtual_gid) / 1u), (virtual_gid) >> 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), (virtual_gid) / 1u), (virtual_gid) >> 0u))) - 0u)))) << 0u))) | 0u), (true ? (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (virtual_gid) >> 0u)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), 0u + ((virtual_gid))) / 1u), (virtual_gid) >> 0u)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (virtual_gid) >> 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), 0u + ((virtual_gid))) / 1u), (virtual_gid) >> 0u)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (virtual_gid) >> 0u)))))), ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), 0u + ((virtual_gid))) / 1u), (virtual_gid) >> 0u)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (virtual_gid) >> 0u))))))) | ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), 0u + ((virtual_gid))) / 1u), (virtual_gid) >> 0u)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (virtual_gid) >> 0u))))))))) / 1u), clamp(~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), 0u ^ ((virtual_gid))) / 1u), (virtual_gid) >> 0u)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (virtual_gid) >> 0u)))))), ~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)))), (virtual_gid) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))), ~ (~ ((_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid)))))) >> 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (virtual_gid) >> 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (virtual_gid) >> 0u))) ^ (0u | 0u)))))), ~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), (virtual_gid) / 1u), (virtual_gid) >> 0u)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 1u)))) >> 0u)))))))))) << 0u)) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (virtual_gid) >> 0u)) << 0u), (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (virtual_gid) >> 0u)) << 0u)) ^ 0u)), (true ? (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (virtual_gid) >> 0u)) << 0u)) : _GLF_FUZZED(workgroup_base))), ~ (~ ((_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (virtual_gid) >> 0u)) << 0u), (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (virtual_gid) >> 0u)) << 0u)) ^ 0u)), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) ? (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (virtual_gid) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (virtual_gid) >> 0u)) << ((0u | 0u) >> _GLF_IDENTITY(uint(7u), uint(7u))))) << 0u)) : _GLF_FUZZED(workgroup_base)))))), ((_GLF_IDENTITY(virtual_gid, 1u * _GLF_IDENTITY((virtual_gid), ((virtual_gid)) + 0u))) | _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)) >> 0u), (virtual_gid) >> 0u)) << 0u)), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), true && (! (true))))))) ? (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u)), 1u, 0u, (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u)), (false ? _GLF_FUZZED(uvec4(127977u, 52434u, 40295u, 97960u)) : uvec4(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u)), 1u, 0u, (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u))))))), ~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)))), (virtual_gid) >> 0u)) << 0u)) : _GLF_FUZZED(workgroup_base)))) - 0u)) | ((_GLF_IDENTITY(virtual_gid, 1u * (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec4(virtual_gid, 0u, 0u, 0u)), clamp(_GLF_IDENTITY(uint(uvec4(virtual_gid, 0u, 0u, 0u)), min(uint(uvec4(virtual_gid, 0u, 0u, 0u)), uint(uvec4(virtual_gid, 0u, 0u, 0u)))), uint(uvec4(virtual_gid, 0u, 0u, 0u)), _GLF_IDENTITY(uint(uvec4(virtual_gid, 0u, 0u, 0u)), (uint(uvec4(virtual_gid, 0u, 0u, 0u))) >> 0u))))))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) / 1u, clamp(_GLF_IDENTITY((virtual_gid) / 1u, ((virtual_gid) / 1u) ^ 0u), (virtual_gid) / 1u, (virtual_gid) / 1u))), _GLF_IDENTITY((virtual_gid) >> 0u, min(_GLF_IDENTITY((virtual_gid) >> 0u, (_GLF_IDENTITY((virtual_gid) >> 0u, max((virtual_gid) >> 0u, (virtual_gid) >> 0u))) / 1u), _GLF_IDENTITY((virtual_gid) >> 0u, ((virtual_gid) >> 0u) - 0u))))) << 0u)), (true ? (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (virtual_gid) >> 0u)) << 0u)) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))))))))))))) * 1u)], read, _GLF_IDENTITY(4, (4) - int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-13.63) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))))), 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          barrier();
         barrier();
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) || false), true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), true && (! (! (injectionSwitch.x > injectionSwitch.y)))))), false, true, false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false || (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, sqrt(1.0), 0.0), (true ? mat2(injectionSwitch, sqrt(1.0), 0.0) : _GLF_FUZZED(mat2(-8882.5146, -2.8, -4954.7582, -399.037))))), mix(vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(-3.5)), vec2((vec2(_GLF_IDENTITY(mat2(injectionSwitch, sqrt(1.0), 0.0), (true ? mat2(injectionSwitch, sqrt(1.0), 0.0) : _GLF_FUZZED(mat2(-8882.5146, -2.8, -4954.7582, -399.037))))))[0], (vec2(_GLF_IDENTITY(mat2(injectionSwitch, sqrt(1.0), 0.0), (true ? mat2(injectionSwitch, sqrt(1.0), 0.0) : _GLF_FUZZED(mat2(-8882.5146, -2.8, -4954.7582, -399.037))))))[1]), bvec2(true, true)))).y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false, false, true))))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) + 0.0), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), (false || ((false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, min(read, _GLF_IDENTITY(read, min(read, read)))), 4, 64, _GLF_IDENTITY(4, max(4, 4)));
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   subgroupAll(true);
  }
}
