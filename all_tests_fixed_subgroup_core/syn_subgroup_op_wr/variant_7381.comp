#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_2 {
 uvec4 _f0;
} ;

struct _GLF_struct_0 {
 float _f0;
 bvec3 _f1;
 uint workgroup_id;
 mat4x2 _f2;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_3 {
 bvec3 _f0;
 mat4x3 _f1;
 _GLF_struct_1 _f2;
 bool _f3;
 mat4x2 _f4;
 _GLF_struct_2 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(bvec3(true), mat4x3(1.0), _GLF_struct_1(_GLF_struct_0(1.0, bvec3(true), gl_WorkGroupID.x, mat4x2(1.0))), true, mat4x2(1.0), _GLF_struct_2(uvec4(1u)));
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_3._f2._f0.workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(2), int(2)))))
    {
     case 18:
     mat2 _GLF_SWITCH_0_0v;
     case 44:
     do
      {
       mat4x3(-3.6, -6.5, -7.6, 819.555, -2.1, -0.2, -1471.7904, 8.7, 7.3, 1.9, 29.56, -79.73);
       if(false)
        {
         switch(_GLF_SWITCH(0))
          {
           case 0:
           case 27:
           next_virtual_gid;
           mat4x3 _GLF_SWITCH_0_1v;
           case 75:
           for(           uvec3(64159u, 14174u, 139004u);
 true; uvec2(24492u, 191806u))
            {
            }
           case 34:
           case 61:
           case 14:
           case 89:
           case 19:
           sqrt((false ? vec4(38.91, -0.9, 5.1, 0.1) : vec4(948.041, 1.4, -34.93, 9799.1129)));
           break;
           case 85:
           ;
           default:
           1;
          }
        }
       {
        mat2x3(mat2(-1.0, -899.386, -587.907, 3778.2258));
        for(        notEqual(bvec2(true, false), bvec2(true, false));
 true; (uvec4(145849u, 35233u, 73752u, 140197u) - subgroup_id))
         {
          switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
           {
            case 63:
            mat4x2 _GLF_SWITCH_1_0v[56], _GLF_SWITCH_1_1v[41];
            case 0:
            case 33:
            case 53:
            ivec2 _GLF_SWITCH_0_2v, _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v;
            vec2(3.2, 7.5);
            case 24:
            case 47:
            case 17:
            ;
            break;
            case 36:
            mat2(mat3(-543.471, -8.7, -3.6, -7.3, 9368.8986, -7.4, -3957.8231, 68.17, -5901.6515));
            case 75:
            ;
            default:
            1;
           }
         }
        ivec2 _GLF_SWITCH_0_5v;
        ivec3 _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v;
        ;
        mat2x3(-5.4, 7.2, -7419.5068, -7.1, -8126.3163, 5895.8158);
        ;
        mat3(-1.8, 115.186, 0.7, 441.701, 41.83, -459.869, -48.69, -733.554, -761.838);
        mat3(825.151, -1.6, 5074.8878, 113.417, 5.3, 309.004, -7.9, 2.6, -6.2);
       }
       do
        {
         bvec3(true, false, false);
         for(         (mat4(712.827, 9.7, -7003.6174, -7.1, 2.6, -4.1, -9129.5955, 31.18, 9.8, -3213.2456, 37.22, 23.29, -5.8, 9442.7330, 751.627, 7.5) * mat2x4(8.9, 5561.9840, -4.8, 7.1, -56.77, 7918.5834, 1.1, 0.8));
 (ivec2(13410, 65061) , (-10684 < -2651)); mat2x3(-8.4, 0.2, 4.1, 1650.7571, -3.6, -972.943))
          {
           switch(_GLF_SWITCH(0))
            {
             case 41:
             transpose(mat2x4(-1.8, 124.216, 251.241, 76.26, 108.124, -5.0, -6.7, 4377.1234));
             case 0:
             case 11:
             case 89:
             case 48:
             case 28:
             case 16:
             case 50:
             case 96:
             case 18:
             case 98:
             _GLF_SWITCH_0_0v;
             break;
             case 65:
             uvec3 _GLF_SWITCH_2_0v;
             default:
             1;
            }
          }
         mat2 _GLF_SWITCH_0_8v[40];
         {
          roundEven(vec2(-3739.2863, 2.4));
          (mat3x4(1.6, 7.9, -1109.7099, 421.771, -768.464, -9381.3706, -4.2, 5.6, -5490.7545, -94.90, -772.332, -3.6) * (mat4x3(8.8, 842.630, -132.381, 52.34, 593.007, -4.5, 0.7, -7.8, 76.01, 183.412, -644.401, -2.5) , mat2x3(-8516.4176, -9124.0383, 6516.4254, -8.8, -4757.7854, -5905.8339)));
          vec3 _GLF_SWITCH_0_9v;
          bvec2(false, true);
          uvec2 _GLF_SWITCH_0_10v[50], _GLF_SWITCH_0_11v;
          bvec3 _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v[67], _GLF_SWITCH_0_14v[29];
         }
         {
          bvec2(true, false);
          vec3 _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v;
          radians(vec4(51.13, 2.6, 0.3, 80.49));
          ;
          ;
          mat2x4 _GLF_SWITCH_0_17v[39], _GLF_SWITCH_0_18v;
          ;
         }
        }
       while((fract(vec4(-5240.9197, 8.8, -6.3, 2984.0083)) == vec4(-4.5, -6227.1529, 703.656, 3.7)));
       while(false)
        {
         switch(_GLF_SWITCH((-82735 & 0)))
          {
           case 11:
           mat3x2(88.66, 8.2, -3.2, -532.278, -145.096, 7.4);
           case 36:
           float _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
           case 0:
           (ivec3(-80275, -66817, -24527) - 53011);
           do
            {
             switch(_GLF_SWITCH((1 ^ 1)))
              {
               case 20:
               mat4x3(-19.77, 597.158, -4.7, 2365.1419, 26.68, -3.4, -649.110, 4.9, -5358.4302, -9.3, -2.6, 548.880);
               case 0:
               uint _GLF_SWITCH_0_19v[76], _GLF_SWITCH_0_20v, _GLF_SWITCH_0_21v[55];
               ivec3(61265, 18768, -34610);
               vec3(-9.1, -0.8, 2.7);
               (false ? uvec4(181281u, 44425u, 64536u, 1312u) : uvec4(110424u, 129142u, 9972u, 187975u));
               mat4(450.752, -0.4, -1568.0119, 9.4, -8.9, 6747.6239, -928.337, 80.76, -73.25, -9.4, -525.675, 7.8, 5.2, 4344.2934, -9.4, -851.420);
               ivec4(61190, -79343, 9284, -19581);
               ivec4(-60746, -7421, 30351, -91076);
               atomicAdd(_GLF_SWITCH_0_20v, workgroup_base);
               (mat3(_GLF_SWITCH_0_0v) * mat2x3(-12.33, 631.526, -94.20, 553.756, -52.87, -316.145));
               break;
               case 36:
               bvec3(true, true, true);
               default:
               1;
              }
            }
           while((12278 == -10945));
           case 19:
           bvec2(false, true);
           case 63:
           vec3 _GLF_SWITCH_0_22v[60];
           case 54:
           case 74:
           (mat3x2(-911.431, 39.40, 46.91, 8821.5235, -7599.2301, -236.000) * mat4x3(-4792.8970, 99.58, 367.755, 2.4, -7613.8341, 13.05, 65.42, 7.7, -90.34, -27.26, 9766.1360, -9.8));
           mat4 _GLF_SWITCH_0_23v, _GLF_SWITCH_0_24v, _GLF_SWITCH_0_25v;
           break;
           default:
           1;
          }
        }
       ;
      }
     while(false);
     case 0:
     atomicStore(checker[virtual_gid], read, 4, 64, 4);
     case 30:
     case 41:
     subgroupAll(true);
     break;
     case 39:
     uvec4(7350u, 8534u, 164592u, 106470u);
     case 6:
     902.323;
     default:
     1;
    }
  }
}
