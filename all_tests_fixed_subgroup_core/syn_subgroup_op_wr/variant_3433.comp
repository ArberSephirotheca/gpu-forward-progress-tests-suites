#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), _GLF_IDENTITY(true, false || (true)), true)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(! (false), _GLF_IDENTITY(true, false || (true)), true)), true && _GLF_IDENTITY((bool(bvec3(! (false), _GLF_IDENTITY(true, false || (true)), true))), ((bool(bvec3(! (false), _GLF_IDENTITY(true, false || (true)), true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))), bool(bvec3(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), _GLF_IDENTITY(true, false || (true)), true)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(! (false), _GLF_IDENTITY(true, false || (true)), true)), true && (bool(bvec3(! (false), _GLF_IDENTITY(true, false || (true)), true)))), false)))), true, false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), _GLF_IDENTITY(true, false || (true)), true)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(! (false), _GLF_IDENTITY(true, false || (true)), true)), true && _GLF_IDENTITY((bool(bvec3(! (false), _GLF_IDENTITY(true, false || (true)), true))), ((bool(bvec3(! (false), _GLF_IDENTITY(true, false || (true)), true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))), bool(bvec3(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), _GLF_IDENTITY(true, false || (true)), true)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(! (false), _GLF_IDENTITY(true, false || (true)), true)), true && (bool(bvec3(! (false), _GLF_IDENTITY(true, false || (true)), true)))), false)))), true, false)))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), _GLF_IDENTITY(true, false || (true)), true)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(! (false), _GLF_IDENTITY(true, false || (true)), true)), true && _GLF_IDENTITY((bool(bvec3(! (false), _GLF_IDENTITY(true, false || (true)), true))), ((bool(bvec3(! (false), _GLF_IDENTITY(true, false || (true)), true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))), bool(bvec3(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), _GLF_IDENTITY(true, false || (true)), true)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(! (false), _GLF_IDENTITY(true, false || (true)), true)), true && (bool(bvec3(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), _GLF_IDENTITY(true, false || (true)), true)))), false)))), true, false))))))) && true)) || false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true && (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), _GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), (true ? vec2(0.0, 0.0) + (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y)))))))), false)), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))), min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y)))))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false)))))) && true))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true)))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) && true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((true ? (+ 3.8) : 8.8))), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)) && true, (_GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)) && true, ((_GLF_IDENTITY(true, (true) && true)) && true) && true)) && true)), false)), bool(bool(bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, true && (true)))), bool(bvec2(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, true && (true)))), true))))), true, true, false))))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)), bool(bool(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))))))), true, true))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.6), _GLF_FUZZED(vec3(-3704.6074, 5.7, 5515.6463).y)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4.4) : injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), clamp(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch))), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), max(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), sqrt(determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), determinant(mat3(1.0, 0.0, log(1.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), length(0.0)))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)), ((_GLF_IDENTITY(! (false), (! (false)) && true))) && true)) || false))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, clamp(_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) * 1u))), gl_WorkGroupID.x, gl_WorkGroupID.x))));
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) - 0u, ((workgroup_id) - 0u) | ((workgroup_id) - 0u)))) >> 0u, ((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) - 0u, ((workgroup_id) - 0u) | ((workgroup_id) - 0u)))) >> 0u) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat3(mat4(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))))) * vec2(1.0, 1.0)).x)))) ^ 0u))), ~ (~ (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u)) >> 0u)))), min(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) - 0u, ((workgroup_id) - 0u) | ((workgroup_id) - 0u)))) >> 0u, ((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) - 0u, ((workgroup_id) - 0u) | ((workgroup_id) - 0u)))) >> 0u) >> 0u)), ~ (~ (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u)) >> 0u, max((_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u)) >> 0u, (_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u)) >> 0u)))))), _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) - 0u, ((_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))) - 0u) | ((workgroup_id) - 0u)))) >> 0u, ((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) - 0u, ((workgroup_id) - _GLF_IDENTITY(0u, 0u | (0u))) | ((workgroup_id) - 0u)))) >> 0u) >> 0u)), ~ (~ (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u)) >> 0u)))), (true ? workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) - 0u, ((workgroup_id) - 0u) | ((workgroup_id) - 0u)))) >> 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) - 0u, ((workgroup_id) - 0u) | ((workgroup_id) - 0u))), 0u ^ (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) - 0u, ((workgroup_id) - 0u) | ((workgroup_id) - 0u)))))) >> 0u) >> 0u)), ~ (~ (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) - 0u, ((workgroup_id) - 0u) | 0u))) >> 0u)))) : _GLF_FUZZED(subgroup_size)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), true)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), true)))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))), _GLF_IDENTITY(! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, ((_GLF_DEAD(false)) || false) && true))) && true))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), injectionSwitch)).y)), ~ (~ (uint(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, false || (false)) ? _GLF_IDENTITY(_GLF_FUZZED(clamp(-5.9, 8254.1913, 284.743)), (_GLF_FUZZED(clamp(-5.9, 8254.1913, 284.743))) - 0.0) : _GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 1.0))))), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(clamp(-5.9, 8254.1913, 284.743)) : _GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 1.0))))), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0))))))) + 0.0), injectionSwitch.y))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + 0.0), injectionSwitch.y)), ~ (~ (uint(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + 0.0), injectionSwitch.y))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + 0.0), injectionSwitch.y), mix(float(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + 0.0), injectionSwitch.y)), float(_GLF_FUZZED(float(92246u))), bool(false)))), ~ (~ (uint(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), (_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, (false ? _GLF_FUZZED(4.7) : _GLF_IDENTITY((1.0) + 0.0, max((1.0) + 0.0, (1.0) + 0.0)))))) - 0.0), injectionSwitch.y)))))) >> 0u), _GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), ~ (~ (uint(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + 0.0), injectionSwitch.y))))), _GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), ((1.0)) / 1.0) + 0.0), injectionSwitch.y)), ~ (~ _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + 0.0), injectionSwitch.y), 1.0 * (_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + 0.0), injectionSwitch.y))))), 1u * ((uint(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + 0.0), injectionSwitch.y), 1.0 * (_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + 0.0), injectionSwitch.y)))))))))))) << (0u << _GLF_IDENTITY(uint(7u), uint(7u)))), _GLF_IDENTITY(uint(uint(uint(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY((1.0), min((1.0), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0)))))), float(_GLF_FUZZED(vec4(17.67, _GLF_IDENTITY(-827.203, float(vec2(-827.203, 1.0))), -9.4, 1751.8880).z)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) + _GLF_IDENTITY(0.0, min(0.0, 0.0))), injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(uint(uint(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)) + 0.0, mix(float(_GLF_FUZZED(70.59)), _GLF_IDENTITY(float((1.0) + 0.0), (float((1.0) + 0.0)) / determinant(mat2(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0))), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)), max(float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)), float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(824.028)), ((true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(824.028))) - 0.0)))))))), injectionSwitch.y)))), min(uint(uint(uint(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-978.722)), float(1.0), bool(true))))))), 0.0, 0.0, 0.0)), max(float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)), float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), vec4(mat3(normalize(vec4(1.0, 1.0, 1.0, 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)))) - vec4(0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0)))))), injectionSwitch.y)))), uint(uint(uint(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float(_GLF_IDENTITY((1.0) + 0.0, ((1.0) + 0.0) - abs(0.0))), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)), max(float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED((+ 2.0))), float((1.0)), bool(true))) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED((vec4(-6.2, -3.5, -8.3, -2446.9135) + -6.6)) : vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(uint(uint(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(vec4(-79.81, -6.0, -3393.7189, 65.45)) : normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 0.0, 0.0)), max(float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2.5)), bool(false))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)), float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(70.59, min(70.59, 70.59)))), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)))))), injectionSwitch.y)))), min(uint(uint(uint(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 1.0, 0.0, sin(0.0))), mix(float(float(vec4(1.0, 1.0, 0.0, sin(0.0)))), float(_GLF_FUZZED(vec4(-6.8, 690.646, 8170.4222, 565.810).z)), bool(false)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)), max(float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)), float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)))))), injectionSwitch.y)))), uint(uint(uint(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)), max(float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0) * (0.0)) : _GLF_FUZZED(70.99))))))), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED((+ 2.0))), float((1.0)), bool(true))) + 0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(70.59), (_GLF_FUZZED(70.59)) / 1.0)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED((vec4(-6.2, _GLF_IDENTITY(-3.5, float(mat4x3(-3.5, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))), -8.3, -2446.9135) + -6.6)) : vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))))).y))))))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(uint(uint(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(vec4(-79.81, -6.0, -3393.7189, 65.45)) : normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 0.0, 0.0)), max(float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2.5)), bool(false))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)), float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(70.59, min(70.59, 70.59)))), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)))))), injectionSwitch.y)))), min(uint(uint(uint(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 1.0, 0.0, sin(0.0))), mix(float(float(vec4(1.0, 1.0, 0.0, sin(0.0)))), float(_GLF_FUZZED(vec4(-6.8, 690.646, 8170.4222, 565.810).z)), bool(false)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)), max(float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)), float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)))))), injectionSwitch.y)))), uint(uint(uint(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)), max(float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0) * (0.0)) : _GLF_FUZZED(70.99))))))), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED((+ 2.0))), float((1.0)), bool(true))) + 0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(70.59), (_GLF_FUZZED(70.59)) / 1.0)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED((vec4(-6.2, _GLF_IDENTITY(-3.5, float(mat4x3(-3.5, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))), -8.3, -2446.9135) + -6.6)) : vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))))).y))))))), (true ? (_GLF_IDENTITY(uint(uint(uint(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(vec4(-79.81, -6.0, -3393.7189, 65.45)) : normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 0.0, 0.0)), max(float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2.5)), bool(false))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)), float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(70.59, min(70.59, 70.59)))), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)))))), injectionSwitch.y)))), min(uint(uint(uint(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 1.0, 0.0, sin(0.0))), mix(float(float(vec4(1.0, 1.0, 0.0, sin(0.0)))), float(_GLF_FUZZED(vec4(-6.8, 690.646, 8170.4222, 565.810).z)), bool(false)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)), max(float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)), float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)))))), injectionSwitch.y)))), uint(uint(uint(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)), max(float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0) * (0.0)) : _GLF_FUZZED(70.99))))))), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED((+ 2.0))), float((1.0)), bool(true))) + 0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(70.59), (_GLF_FUZZED(70.59)) / 1.0)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED((vec4(-6.2, _GLF_IDENTITY(-3.5, float(mat4x3(-3.5, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))), -8.3, -2446.9135) + -6.6)) : vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))))).y))))))) : _GLF_FUZZED(workgroup_id)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u, _GLF_IDENTITY(((_GLF_IDENTITY(uint(uint(uint(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0), max((1.0), (1.0))) + 0.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(0.2))), 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)), max(float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)), float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)))))), injectionSwitch.y)))), min(uint(uint(uint(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)), max(float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)), float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(_GLF_IDENTITY(true, ! (! (true)))))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)))))), injectionSwitch.y)))), uint(uint(uint(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) + 0.0)))) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)), max(float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.2))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED((+ 2.0))), float((1.0)), bool(true))) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED((vec4(-6.2, -3.5, -8.3, -2446.9135) + -6.6)) : vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))))) ^ 0u) / 1u, min(((_GLF_IDENTITY(uint(uint(uint(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)), max(float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)), float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)))))), injectionSwitch.y)))), min(uint(uint(uint(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)), max(float(mat4x2(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)), float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)))))), injectionSwitch.y)))), uint(uint(uint(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)), max(float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED(_GLF_IDENTITY((+ 2.0), max((+ 2.0), (+ 2.0))))), float((1.0)), bool(true))) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED((vec4(-6.2, -3.5, -8.3, -2446.9135) + -6.6)) : vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))))) ^ 0u) / 1u, ((_GLF_IDENTITY(uint(uint(uint(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)), max(float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(70.59)), float(mat3(float(_GLF_FUZZED(70.59)), exp(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, cos(0.0)))), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)), float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)))))), injectionSwitch.y)))), min(uint(uint(uint(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)), max(float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)), float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)))))), injectionSwitch.y)))), uint(uint(uint(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)), max(float(mat4x2(_GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED((+ 2.0))), float((1.0)), bool(true))) + 0.0, mix(float(_GLF_FUZZED(70.59)), float((1.0) + 0.0), bool(true))), 1.0, 0.0, 1.0, round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED((vec4(-6.2, -3.5, -8.3, -2446.9135) + -6.6)) : vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))))) ^ 0u) / 1u)))) >> 0u))), (uint(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) + 0.0), injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) + 0.0), injectionSwitch.y), clamp(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) + 0.0), injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) + 0.0), injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) + 0.0), injectionSwitch.y))), _GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) + 0.0), injectionSwitch.y))))) >> 0u) | 0u)))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), (bool(false)) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(bool(false), (bool(false)) && true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(bool(false), (bool(false)) && true))), ((! (_GLF_IDENTITY(bool(false), (bool(false)) && true)))) && true), false, true)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(bool(false), (bool(false)) && true))), ((! (_GLF_IDENTITY(bool(false), (bool(false)) && true)))) && true), false, true)), true && (bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(bool(false), (bool(false)) && true))), ((! (_GLF_IDENTITY(bool(false), (bool(false)) && true)))) && true), false, true)))))))) || false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.8)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-24.39)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(vec2(8582.2661, 8.6).g, clamp(vec2(8582.2661, 8.6).g, vec2(8582.2661, 8.6).g, vec2(8582.2661, 8.6).g)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))) && true)), (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) * 1.0)), float(_GLF_FUZZED(-65.60)), bool(false))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(fract(-183.835), (true ? fract(-183.835) : _GLF_FUZZED(1906.2364))))))), float(_GLF_FUZZED(1.0)), bool(false))))))), (_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-24.39)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(vec2(8582.2661, 8.6).g, clamp(vec2(8582.2661, 8.6).g, vec2(8582.2661, 8.6).g, vec2(8582.2661, 8.6).g)))), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, (0.0) * 1.0)), float(_GLF_FUZZED(-65.60)), bool(false))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(fract(-183.835))))), float(_GLF_FUZZED(1.0)), bool(false))))))), float(mat3(min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-24.39)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), injectionSwitch, injectionSwitch)).x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(vec2(8582.2661, 8.6).g, clamp(vec2(8582.2661, 8.6).g, vec2(8582.2661, 8.6).g, vec2(8582.2661, 8.6).g)))), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) * 1.0)), float(_GLF_FUZZED(-65.60)), bool(false))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(fract(-183.835))))), float(_GLF_FUZZED(1.0)), bool(false))))))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) / 1.0)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (0u & 116344u)))) + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u), subgroup_local_id + 1))) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))
  return;
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), max(4, 4)), 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false)))), bool(bool(! (false)))))), ! (! (bool(bool(_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (true ? _GLF_IDENTITY(read, (read) / uint(_GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(subgroup_id))), 4, 64, _GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (4) / 1))));
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bool(true))) && _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ((false)) || false)))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), ! (! (bool(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), ((false)) && true))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ((false)) && true))), false, true, false))))))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bool(true))) && _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), true && ((false))), false, true), bvec3(bvec4(bvec3((false), false, true), true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec4(bvec3((false), false, true), true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec4(bvec3((false), false, true), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec4(bvec3((false), false, true), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), true))))), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec4(bvec3((false), false, true), true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3((false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((false), false, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3((false), false, true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3((false), false, true)), true)))))))), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec4(bvec3((false), false, true), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), true))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec4(bvec3((false), false, true), true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec4(bvec3((false), false, true), _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (! ((_GLF_IDENTITY(true, ! (! (true))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec4(bvec3((false), false, true), true)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), false), true)))))) && true)))))), bool(bool(bool(_GLF_IDENTITY(bvec3((false), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((false), false, true), _GLF_IDENTITY(true, true && (true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3((_GLF_IDENTITY(false, false || (false))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((false), false, true), true)))))))))))))))), ! (! (bool(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) && true))))))))), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))) || false))))))))))), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), max(_GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(_GLF_IDENTITY(mat2x3(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), 1.0, 0.0, 0.0, 0.0), (mat2x3(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, min(1, 1))]))), 1.0, 0.0, 0.0, 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) - vec2(0.0, 0.0))))).x, mix(float(_GLF_FUZZED(44.66)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / 1)], injectionSwitch[1])))).x), bool(true))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)))), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) || false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))))), false, true))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   subgroupAll(true);
  }
}
