#version 460
struct _GLF_struct_5 {
 mat4 _f0;
 bvec4 _f1;
 int _f2;
 uint _f3;
 mat4 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_6 {
 _GLF_struct_5 _f0;
} ;

struct _GLF_struct_7 {
 bool _f0;
 _GLF_struct_6 _f1;
 uint workgroup_id;
 mat3 _f2;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
} ;

struct _GLF_struct_1 {
 bvec4 _f0;
 float _f1;
 uint subgroup_size;
 ivec4 _f2;
 uvec2 _f3;
 int _f4;
 vec3 _f5;
} ;

struct _GLF_struct_0 {
 mat3x2 _f0;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base.x = subgroup_id;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_3(_GLF_struct_0(mat3x2(1.0)), _GLF_struct_1(bvec4(true), 1.0, gl_SubgroupSize, ivec4(1), uvec2(1u), 1, vec3(1.0)), _GLF_struct_2(mat3x2(1.0)), ivec4(1)));
 GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base.y = _GLF_struct_replacement_4._f0._f1.subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(true, _GLF_struct_6(_GLF_struct_5(mat4(1.0), bvec4(true), 1, 1u, mat4(1.0), uvec3(1u))), gl_WorkGroupID.x, mat3(1.0));
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_7.workgroup_id;
 GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base.z = workgroup_base;
 uint virtual_gid = GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base.z + GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base.x * GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base.y + subgroup_local_id;
 uint next_virtual_gid = GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base.z + GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base.x * GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base.y + ((subgroup_local_id + 1) % GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base.y);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(subgroup_local_id + 1 < GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base.y)
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   subgroupAll(true);
  }
}
