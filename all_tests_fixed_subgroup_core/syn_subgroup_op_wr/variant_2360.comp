#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(false, bool(bool(false))))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.6) : injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(false, bool(bool(false))))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.6) : injectionSwitch.x)) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(false, bool(bool(false))))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.6) : injectionSwitch.x)) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(false, bool(bool(false))))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.6) : injectionSwitch.x)) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(false, bool(bool(false))))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.6) : injectionSwitch.x)) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) && true))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(-3.5, 0.0 + (-3.5)))), bool(false))), 1.0, sqrt(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mix(vec4((vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0)), mix(float(float(mat4x2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(float(false))), bool(false))))))[0], _GLF_FUZZED(vec4(2757.9696, -8128.9447, -31.39, -4684.1480).y), (vec4(0.0, 0.0, 1.0, 0.0))[2], (vec4(0.0, 0.0, 1.0, 0.0))[3]), vec4(_GLF_FUZZED((- -4507.0652)), (vec4(0.0, 0.0, 1.0, 0.0))[1], _GLF_FUZZED(-0.6), _GLF_FUZZED(608.761)), bvec4(false, true, false, false))), vec4(0.0, 0.0, 1.0, 0.0)), max(dot(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0), _GLF_IDENTITY(mix(vec4((vec4(0.0, 0.0, 1.0, 0.0))[0], _GLF_FUZZED(vec4(2757.9696, -8128.9447, -31.39, -4684.1480).y), (vec4(0.0, 0.0, 1.0, 0.0))[2], (vec4(0.0, 0.0, 1.0, 0.0))[3]), vec4(_GLF_FUZZED((- -4507.0652)), (vec4(0.0, 0.0, 1.0, 0.0))[1], _GLF_FUZZED(-0.6), _GLF_FUZZED(608.761)), bvec4(false, true, false, false)), max(mix(vec4((vec4(0.0, 0.0, 1.0, 0.0))[0], _GLF_FUZZED(vec4(2757.9696, -8128.9447, -31.39, -4684.1480).y), (vec4(0.0, 0.0, 1.0, 0.0))[2], (vec4(0.0, 0.0, 1.0, 0.0))[3]), vec4(_GLF_FUZZED((- -4507.0652)), (vec4(0.0, 0.0, 1.0, 0.0))[1], _GLF_FUZZED(-0.6), _GLF_FUZZED(608.761)), bvec4(false, true, false, false)), mix(vec4((vec4(0.0, 0.0, 1.0, 0.0))[0], _GLF_FUZZED(vec4(2757.9696, -8128.9447, -31.39, -4684.1480).y), (vec4(0.0, 0.0, 1.0, 0.0))[2], (vec4(0.0, 0.0, 1.0, 0.0))[3]), vec4(_GLF_FUZZED((- -4507.0652)), (vec4(0.0, 0.0, 1.0, 0.0))[1], _GLF_FUZZED(-0.6), _GLF_FUZZED(608.761)), bvec4(false, true, false, false))))), vec4(0.0, 0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mix(vec4((vec4(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0))[0], _GLF_FUZZED(vec4(2757.9696, -8128.9447, -31.39, -4684.1480).y), (vec4(0.0, 0.0, 1.0, 0.0))[2], (vec4(0.0, 0.0, 1.0, 0.0))[3]), vec4(_GLF_FUZZED((- -4507.0652)), (vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0))[1], _GLF_FUZZED(-0.6), _GLF_FUZZED(608.761)), bvec4(false, true, false, false))), vec4(0.0, 0.0, 1.0, 0.0))))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(-3.5, 0.0 + (-3.5)))), bool(false))), 1.0, sqrt(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mix(vec4((vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0)), mix(float(float(mat4x2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(float(false))), bool(false))))))[0], _GLF_FUZZED(vec4(2757.9696, -8128.9447, -31.39, -4684.1480).y), (vec4(0.0, 0.0, 1.0, 0.0))[2], (vec4(0.0, 0.0, 1.0, 0.0))[3]), vec4(_GLF_FUZZED((- -4507.0652)), (vec4(0.0, 0.0, 1.0, 0.0))[1], _GLF_FUZZED(-0.6), _GLF_FUZZED(608.761)), bvec4(false, true, false, false))), vec4(0.0, 0.0, 1.0, 0.0)), max(dot(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0), _GLF_IDENTITY(mix(vec4((vec4(0.0, 0.0, 1.0, 0.0))[0], _GLF_FUZZED(vec4(2757.9696, -8128.9447, -31.39, -4684.1480).y), (vec4(0.0, 0.0, 1.0, 0.0))[2], (vec4(0.0, 0.0, 1.0, 0.0))[3]), vec4(_GLF_FUZZED((- -4507.0652)), (vec4(0.0, 0.0, 1.0, 0.0))[1], _GLF_FUZZED(-0.6), _GLF_FUZZED(608.761)), bvec4(false, true, false, false)), max(mix(vec4((vec4(0.0, 0.0, 1.0, 0.0))[0], _GLF_FUZZED(vec4(2757.9696, -8128.9447, -31.39, -4684.1480).y), (vec4(0.0, 0.0, 1.0, 0.0))[2], (vec4(0.0, 0.0, 1.0, 0.0))[3]), vec4(_GLF_FUZZED((- -4507.0652)), (vec4(0.0, 0.0, 1.0, 0.0))[1], _GLF_FUZZED(-0.6), _GLF_FUZZED(608.761)), bvec4(false, true, false, false)), mix(vec4((vec4(0.0, 0.0, 1.0, 0.0))[0], _GLF_FUZZED(vec4(2757.9696, -8128.9447, -31.39, -4684.1480).y), (vec4(0.0, 0.0, 1.0, 0.0))[2], (vec4(0.0, 0.0, 1.0, 0.0))[3]), vec4(_GLF_FUZZED((- -4507.0652)), (vec4(0.0, 0.0, 1.0, 0.0))[1], _GLF_FUZZED(-0.6), _GLF_FUZZED(608.761)), bvec4(false, true, false, false))))), vec4(0.0, 0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mix(vec4((vec4(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0))[0], _GLF_FUZZED(vec4(2757.9696, -8128.9447, -31.39, -4684.1480).y), (vec4(0.0, 0.0, 1.0, 0.0))[2], (vec4(0.0, 0.0, 1.0, 0.0))[3]), vec4(_GLF_FUZZED((- -4507.0652)), (vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0))[1], _GLF_FUZZED(-0.6), _GLF_FUZZED(608.761)), bvec4(false, true, false, false))), vec4(0.0, 0.0, 1.0, 0.0))))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0), (true ? mat4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(-3.5, 0.0 + (-3.5)))), bool(false))), 1.0, sqrt(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mix(vec4((vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0)), mix(float(float(mat4x2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(float(false))), bool(false))))))[0], _GLF_FUZZED(vec4(2757.9696, -8128.9447, -31.39, -4684.1480).y), (vec4(0.0, 0.0, 1.0, 0.0))[2], (vec4(0.0, 0.0, 1.0, 0.0))[3]), vec4(_GLF_FUZZED((- -4507.0652)), (vec4(0.0, 0.0, 1.0, 0.0))[1], _GLF_FUZZED(-0.6), _GLF_FUZZED(608.761)), bvec4(false, true, false, false))), vec4(0.0, 0.0, 1.0, 0.0)), max(dot(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0), _GLF_IDENTITY(mix(vec4((vec4(0.0, 0.0, 1.0, 0.0))[0], _GLF_FUZZED(vec4(2757.9696, -8128.9447, -31.39, -4684.1480).y), (vec4(0.0, 0.0, 1.0, 0.0))[2], (vec4(0.0, 0.0, 1.0, 0.0))[3]), vec4(_GLF_FUZZED((- -4507.0652)), (vec4(0.0, 0.0, 1.0, 0.0))[1], _GLF_FUZZED(-0.6), _GLF_FUZZED(608.761)), bvec4(false, true, false, false)), max(mix(vec4((vec4(0.0, 0.0, 1.0, 0.0))[0], _GLF_FUZZED(vec4(2757.9696, -8128.9447, -31.39, -4684.1480).y), (vec4(0.0, 0.0, 1.0, 0.0))[2], (vec4(0.0, 0.0, 1.0, 0.0))[3]), vec4(_GLF_FUZZED((- -4507.0652)), (vec4(0.0, 0.0, 1.0, 0.0))[1], _GLF_FUZZED(-0.6), _GLF_FUZZED(608.761)), bvec4(false, true, false, false)), mix(vec4((vec4(0.0, 0.0, 1.0, 0.0))[0], _GLF_FUZZED(vec4(2757.9696, -8128.9447, -31.39, -4684.1480).y), (vec4(0.0, 0.0, 1.0, 0.0))[2], (vec4(0.0, 0.0, 1.0, 0.0))[3]), vec4(_GLF_FUZZED((- -4507.0652)), (vec4(0.0, 0.0, 1.0, 0.0))[1], _GLF_FUZZED(-0.6), _GLF_FUZZED(608.761)), bvec4(false, true, false, false))))), vec4(0.0, 0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mix(vec4((vec4(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0))[0], _GLF_FUZZED(vec4(2757.9696, -8128.9447, -31.39, -4684.1480).y), (vec4(0.0, 0.0, 1.0, 0.0))[2], (vec4(0.0, 0.0, 1.0, 0.0))[3]), vec4(_GLF_FUZZED((- -4507.0652)), (vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0))[1], _GLF_FUZZED(-0.6), _GLF_FUZZED(608.761)), bvec4(false, true, false, false))), vec4(0.0, 0.0, 1.0, 0.0))))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(outerProduct(vec4(-0.1, -327.314, 668.895, -181.025), vec4(-4778.3233, 45.34, -9862.2523, 8.1)))))) * mat4(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(transpose(transpose(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(transpose(transpose(mat4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), (transpose(_GLF_IDENTITY(transpose(mat4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)), transpose(transpose(transpose(mat4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))))))) * mat4(1.0)), (true ? transpose(transpose(mat4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(dot(vec3(9.2, -35.69, 5.3), vec3(-1.4, 9.7, 7.8))) : 1.0)), 1.0))) - 0.0), 1.0, sqrt(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / 1.0)))) : _GLF_FUZZED(mat4(4.9, 467.312, -8705.9458, 483.673, 99.77, -4.5, 5.2, -3294.7479, -3.4, -476.832, -3.7, -6063.3049, 541.027, 5.9, -91.88, _GLF_IDENTITY(11.86, mix(float(_GLF_FUZZED(1423.7363)), float(11.86), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(mat4(-2.6, -7.1, 2439.3099, -6858.7978, -9851.3173, _GLF_IDENTITY(8.1, min(8.1, _GLF_IDENTITY(8.1, max(8.1, 8.1)))), _GLF_IDENTITY(-8.7, (-8.7) - 0.0), -9.5, -69.28, -15.94, -6.8, 5.5, -5.9, 875.536, -5414.6598, 617.845)) : _GLF_IDENTITY(transpose(transpose(mat4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(-15.99) : 0.0)), 1.0, 1.0, sqrt(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), min(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))) * cos(vec4(0.0, 0.0, 0.0, 0.0))))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), (_GLF_IDENTITY(transpose(transpose(mat4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(transpose(transpose(mat4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0), 1.0, sqrt(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), (true ? transpose(transpose(mat4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0), 1.0, sqrt(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (true ? vec4(0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(vec4(11.99, 1097.0360, 39.55, 754.635)))), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(mat4(-13.14, 4.4, -6.3, -59.96, 1.5, 6157.0518, 59.98, -8.7, 7163.4076, -9170.8001, -9.7, 639.404, 9638.7404, 2.4, 3.7, 5.2)))), (_GLF_IDENTITY(transpose(transpose(mat4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0), 1.0, sqrt(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(43.31)), float(0.0), bool(true))), 0.0))), (transpose(transpose(mat4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp((_GLF_IDENTITY(1.0, min(1.0, 1.0))), (_GLF_IDENTITY(1.0, min(1.0, 1.0))), (_GLF_IDENTITY(1.0, min(1.0, 1.0))))) - 0.0), 1.0, sqrt(0.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), min(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), clamp(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), 1.0 * (dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(-8.3) : dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))) + 0.0), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0)))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat4(4.9, 467.312, -8705.9458, 483.673, 99.77, -4.5, 5.2, -3294.7479, -3.4, -476.832, _GLF_IDENTITY(-3.7, min(_GLF_IDENTITY(-3.7, (false ? _GLF_FUZZED(-0.3) : -3.7)), -3.7)), -6063.3049, _GLF_IDENTITY(541.027, float(mat3x2(541.027, 0.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0))), 5.9, -91.88, 11.86))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.3)), bool(false))), 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(0.0, 0.0)), 0.0, 0.0, 0.0))))))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((979.777 + 390.530)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2.4)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.4), _GLF_FUZZED(-52.28)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((979.777 + 390.530)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2.4)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.4), _GLF_FUZZED(-52.28)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((979.777 + 390.530)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2.4)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.4), _GLF_FUZZED(-52.28)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))).y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((979.777 + 390.530)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2.4)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.4), _GLF_FUZZED(-52.28)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((979.777 + 390.530)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2.4)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.4), _GLF_FUZZED(-52.28)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((979.777 + 390.530)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2.4)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.4), _GLF_FUZZED(-52.28)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((979.777 + 390.530)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2.4)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.4), _GLF_FUZZED(-52.28)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((979.777 + 390.530)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2.4)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.4), _GLF_FUZZED(-52.28)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((979.777 + 390.530)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2.4)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.4), _GLF_FUZZED(-52.28)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))).y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((979.777 + 390.530)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2.4)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.4), _GLF_FUZZED(-52.28)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((979.777 + 390.530)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2.4)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.4), _GLF_FUZZED(-52.28)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((979.777 + 390.530)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2.4)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.4), _GLF_FUZZED(-52.28)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))).y))), false, true)))) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.4), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(2.8)), vec2(1.0, 1.0) * (vec2((injectionSwitch)[0], _GLF_FUZZED(2.8)))), bvec2(true, false))))).y))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), true, true, true))), false))))))
        barrier();
       barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(6.6, _GLF_IDENTITY(-23.06, (-23.06) - 0.0))) : injectionSwitch.y))))))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), false, true))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) << 0)))), clamp((1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) << 0)))), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) << 0))), clamp(1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) << 0))), 1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) << 0))), 1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) << 0)))))), _GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) << 0))), (1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), (_GLF_IDENTITY(4, (4) << 0)) ^ 0)))) * (1 & 1))), max((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) << 0))), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) << 0))), (1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (4)), (4) << 0)))) + 0)) - 0)), (1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) << 0)))))))) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, ~ (~ (4))))), 0 ^ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) << 0)))), clamp((1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) << 0)))), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) << 0))), clamp(1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) << 0))), 1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) << 0))), 1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) << 0)))))), _GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) << 0))), (1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), (_GLF_IDENTITY(4, (4) << 0)) ^ 0)))) * (1 & 1))), max((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) << 0))), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) << 0))), (1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (4)), (4) << 0)))) + 0)) - 0)), (1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) << 0)))))))) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, ~ (~ (4)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2.1)), bool(false)))), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, true))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   do
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        return;
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_LOOP(false))));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size)));
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(bitfieldInsert(virtual_gid, subgroup_size, 90770, -18581)) : uint(1))), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), mat2x4(mat4(mat2x4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))), (~ (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])))) | (~ (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))))), ~ (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))))))), 4, 64, 0);
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) * 1.0)))); _GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY((_injected_loop_counter ++) / 1, 1 * ((_injected_loop_counter ++) / 1))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, sqrt(1.0), exp(0.0), 0.0)), (_GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, sqrt(1.0), exp(0.0), 0.0)), (vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, sqrt(1.0), exp(0.0), 0.0))) * mat2(1.0))) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(-7604.5205), (vec2(1.0, 1.0))[1]), vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(4103.0928)), bvec2(true, false))), 1.0, 1.0))))), vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))))), 1.0, 0.0, 1.0), _GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(mat3(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat3(1.0) : _GLF_FUZZED(mat3(163.710, -1.1, -3.0, 26.09, 9.8, -9999.9470, 7.7, 2.0, 83.85))))) * mat3(1.0)) * (mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(exp2(-5.2)) : _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 0.0, 0.0), vec3(1.0, 0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(exp2(-5.2)) : _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 0.0, 0.0), vec3(1.0, 0.0, 0.0))), (_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(exp2(-5.2)) : _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 0.0, 0.0), vec3(1.0, 0.0, 0.0)))) / 1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(exp2(-5.2)) : _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), 1.0, 0.0, 1.0))))) : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), min(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, sqrt(1.0), exp(0.0), 0.0)), (_GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, sqrt(1.0), exp(0.0), 0.0)), (vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, sqrt(1.0), exp(0.0), 0.0))) * mat2(1.0))) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(-7604.5205), (vec2(1.0, 1.0))[1]), vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(4103.0928)), bvec2(true, false))), 1.0, 1.0))))), vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))))), 1.0, 0.0, 1.0), _GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(mat3(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat3(1.0) : _GLF_FUZZED(mat3(163.710, -1.1, -3.0, 26.09, 9.8, -9999.9470, 7.7, 2.0, 83.85))))) * mat3(1.0)) * (mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(exp2(-5.2)) : _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 0.0, 0.0), vec3(1.0, 0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(exp2(-5.2)) : _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 0.0, 0.0), vec3(1.0, 0.0, 0.0))), (_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(exp2(-5.2)) : _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 0.0, 0.0), vec3(1.0, 0.0, 0.0)))) / 1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(exp2(-5.2)) : _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), 1.0, 0.0, 1.0))))) : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), clamp((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, sqrt(1.0), exp(0.0), 0.0)), (_GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, sqrt(1.0), exp(0.0), 0.0)), (vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, sqrt(1.0), exp(0.0), 0.0))) * mat2(1.0))) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(-7604.5205), (vec2(1.0, 1.0))[1]), vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(4103.0928)), bvec2(true, false))), 1.0, 1.0))))), vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))))), 1.0, 0.0, 1.0), _GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(mat3(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat3(1.0) : _GLF_FUZZED(mat3(163.710, -1.1, -3.0, 26.09, 9.8, -9999.9470, 7.7, 2.0, 83.85))))) * mat3(1.0)) * (mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(exp2(-5.2)) : _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 0.0, 0.0), vec3(1.0, 0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(exp2(-5.2)) : _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 0.0, 0.0), vec3(1.0, 0.0, 0.0))), (_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(exp2(-5.2)) : _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 0.0, 0.0), vec3(1.0, 0.0, 0.0)))) / 1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(exp2(-5.2)) : _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), 1.0, 0.0, 1.0))))) : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, sqrt(1.0), exp(0.0), 0.0)), (_GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, sqrt(1.0), exp(0.0), 0.0)), (vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, sqrt(1.0), exp(0.0), 0.0))) * mat2(1.0))) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(-7604.5205), (vec2(1.0, 1.0))[1]), vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(4103.0928)), bvec2(true, false))), 1.0, 1.0))))), vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))))), 1.0, 0.0, 1.0), _GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(mat3(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat3(1.0) : _GLF_FUZZED(mat3(163.710, -1.1, -3.0, 26.09, 9.8, -9999.9470, 7.7, 2.0, 83.85))))) * mat3(1.0)) * (mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(exp2(-5.2)) : _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 0.0, 0.0), vec3(1.0, 0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(exp2(-5.2)) : _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 0.0, 0.0), vec3(1.0, 0.0, 0.0))), (_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(exp2(-5.2)) : _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 0.0, 0.0), vec3(1.0, 0.0, 0.0)))) / 1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(exp2(-5.2)) : _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), 1.0, 0.0, 1.0))))) : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), mix(vec2(_GLF_FUZZED(-1.5), _GLF_FUZZED(-9.6)), vec2(((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, sqrt(1.0), exp(0.0), 0.0)), (_GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, sqrt(1.0), exp(0.0), 0.0)), (vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, sqrt(1.0), exp(0.0), 0.0))) * mat2(1.0))) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(-7604.5205), (vec2(1.0, 1.0))[1]), vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(4103.0928)), bvec2(true, false))), 1.0, 1.0))))), vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))))), 1.0, 0.0, 1.0), _GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(mat3(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat3(1.0) : _GLF_FUZZED(mat3(163.710, -1.1, -3.0, 26.09, 9.8, -9999.9470, 7.7, 2.0, 83.85))))) * mat3(1.0)) * (mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(exp2(-5.2)) : _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 0.0, 0.0), vec3(1.0, 0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(exp2(-5.2)) : _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 0.0, 0.0), vec3(1.0, 0.0, 0.0))), (_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(exp2(-5.2)) : _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 0.0, 0.0), vec3(1.0, 0.0, 0.0)))) / 1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(exp2(-5.2)) : _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), 1.0, 0.0, 1.0))))) : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))))[0], ((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, sqrt(1.0), exp(0.0), 0.0)), (_GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, sqrt(1.0), exp(0.0), 0.0)), (vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, sqrt(1.0), exp(0.0), 0.0))) * mat2(1.0))) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(-7604.5205), (vec2(1.0, 1.0))[1]), vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(4103.0928)), bvec2(true, false))), 1.0, 1.0))))), vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))))), 1.0, 0.0, 1.0), _GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(mat3(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat3(1.0) : _GLF_FUZZED(mat3(163.710, -1.1, -3.0, 26.09, 9.8, -9999.9470, 7.7, 2.0, 83.85))))) * mat3(1.0)) * (mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(exp2(-5.2)) : _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 0.0, 0.0), vec3(1.0, 0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(exp2(-5.2)) : _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 0.0, 0.0), vec3(1.0, 0.0, 0.0))), (_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(exp2(-5.2)) : _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 0.0, 0.0), vec3(1.0, 0.0, 0.0)))) / 1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(exp2(-5.2)) : _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), 1.0, 0.0, 1.0))))) : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))))[1]), bvec2(true, true))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, sqrt(1.0), exp(0.0), 0.0)), (_GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, sqrt(1.0), exp(0.0), 0.0)), (vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, sqrt(1.0), exp(0.0), 0.0))) * mat2(1.0))) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(-7604.5205), (vec2(1.0, 1.0))[1]), vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(4103.0928)), bvec2(true, false))), 1.0, 1.0))))), vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))))), 1.0, 0.0, 1.0), _GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(mat3(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat3(1.0) : _GLF_FUZZED(mat3(163.710, -1.1, -3.0, 26.09, 9.8, -9999.9470, 7.7, 2.0, 83.85))))) * mat3(1.0)) * (mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(exp2(-5.2)) : _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 0.0, 0.0), vec3(1.0, 0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(exp2(-5.2)) : _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 0.0, 0.0), vec3(1.0, 0.0, 0.0))), (_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(exp2(-5.2)) : _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 0.0, 0.0), vec3(1.0, 0.0, 0.0)))) / 1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(exp2(-5.2)) : _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), 1.0, 0.0, 1.0))))) : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, sqrt(1.0), exp(0.0), 0.0)), (_GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, sqrt(1.0), exp(0.0), 0.0)), (vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, sqrt(1.0), exp(0.0), 0.0))) * mat2(1.0))) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(-7604.5205), (vec2(1.0, 1.0))[1]), vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(4103.0928)), bvec2(true, false))), 1.0, 1.0))))), vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))))), 1.0, 0.0, 1.0), _GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(mat3(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat3(1.0) : _GLF_FUZZED(mat3(163.710, -1.1, -3.0, 26.09, 9.8, -9999.9470, 7.7, 2.0, 83.85))))) * mat3(1.0)) * (mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(exp2(-5.2)) : _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 0.0, 0.0), vec3(1.0, 0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(exp2(-5.2)) : _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 0.0, 0.0), vec3(1.0, 0.0, 0.0))), (_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(exp2(-5.2)) : _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 0.0, 0.0), vec3(1.0, 0.0, 0.0)))) / 1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(exp2(-5.2)) : _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), 1.0, 0.0, 1.0))))) : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))))))).x, (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-76.62) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), sqrt(1.0))), exp(0.0), 0.0)), (_GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, sqrt(1.0), exp(0.0), 0.0)), (vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED((-0.0 + -7013.9916))), float(exp(0.0)), bool(true))), 0.0))) * mat2(1.0))) / vec2(1.0, 1.0))), vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(1.0) * (vec3(1.0, 0.0, 0.0))))), 1.0, 0.0, 1.0), mat3(1.0) * (mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(exp2(-5.2)) : _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, false, true))) ? _GLF_FUZZED(exp2(-5.2)) : _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0))))) : _GLF_FUZZED(8512.4027))), 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))))) : _GLF_FUZZED(injectionSwitch))).x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      continue;
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     do
      {
       atomicStore(checker[_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)], _GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(read, _GLF_IDENTITY((read) / 1u, ((read) / 1u) >> 0u))), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(read, _GLF_IDENTITY((read) / 1u, ((read) / 1u) >> 0u))), uint(uvec4(0u ^ (_GLF_IDENTITY(read, _GLF_IDENTITY((read) / 1u, ((read) / 1u) >> 0u))), 1u, 1u, 0u)))) / 1u)), 4, 64, 4);
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 1)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       subgroupAll(false);
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       atomicStore(checker[virtual_gid], read, 4, 64, 4);
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)) || false)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))
            {
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 return;
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))) && true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       subgroupAll(true);
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(4), int(4))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false, false, true)))) || false); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                }
               break;
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true)))))));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
}
