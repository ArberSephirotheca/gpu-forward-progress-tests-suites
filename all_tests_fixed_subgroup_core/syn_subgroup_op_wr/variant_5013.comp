#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_55 {
 vec2 _f0;
 ivec4 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_54 {
 vec3 _f0;
} ;

struct _GLF_struct_53 {
 ivec2 _f0;
 mat2 _f1;
 vec2 _f2;
 mat2x4 _f3;
 uint subgroup_local_id;
 mat4 _f4;
 bvec4 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_56 {
 vec2 _f0;
 _GLF_struct_53 _f1;
 mat3 _f2;
 vec2 _f3;
 _GLF_struct_54 _f4;
 _GLF_struct_55 _f5;
} ;

struct _GLF_struct_57 {
 mat4x3 _f0;
 _GLF_struct_56 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_50 {
 vec2 _f0;
 bvec2 _f1;
 float _f2;
 bool _f3;
 mat2 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_49 {
 mat4x2 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_48 {
 ivec4 _f0;
 uvec4 _f1;
 bool _f2;
 ivec2 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_51 {
 _GLF_struct_48 _f0;
 vec3 _f1;
 ivec2 _f2;
 _GLF_struct_49 _f3;
 _GLF_struct_50 _f4;
} ;

struct _GLF_struct_46 {
 mat4x2 _f0;
 uint _f1;
 uvec2 _f2;
 bvec2 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_45 {
 ivec2 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_44 {
 mat3x4 _f0;
 mat4x2 _f1;
 bvec2 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_43 {
 uint _f0;
 bool _f1;
 mat4x3 _f2;
 ivec3 _f3;
 float _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_47 {
 _GLF_struct_43 _f0;
 _GLF_struct_44 _f1;
 mat3x2 _f2;
 _GLF_struct_45 _f3;
 _GLF_struct_46 _f4;
} ;

struct _GLF_struct_41 {
 mat2 _f0;
} ;

struct _GLF_struct_40 {
 ivec4 _f0;
 uint _f1;
 mat4 _f2;
 float _f3;
 ivec3 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_42 {
 _GLF_struct_40 _f0;
 vec4 _f1;
 mat4x3 _f2;
 _GLF_struct_41 _f3;
 uint _f4;
} ;

struct _GLF_struct_38 {
 bool _f0;
 bvec4 _f1;
 ivec2 _f2;
 int _injected_loop_counter;
} ;

struct _GLF_struct_37 {
 bvec4 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_39 {
 vec2 _f0;
 vec2 _f1;
 ivec2 _f2;
 ivec2 _f3;
 _GLF_struct_37 _f4;
 _GLF_struct_38 _f5;
} ;

struct _GLF_struct_35 {
 mat2 _f0;
} ;

struct _GLF_struct_34 {
 mat2x3 _f0;
 mat4x3 _f1;
 uint _f2;
 bvec4 _f3;
 int _f4;
 uint _f5;
} ;

struct _GLF_struct_36 {
 bvec3 _f0;
 _GLF_struct_34 _f1;
 mat3x4 _f2;
 mat4 _f3;
 _GLF_struct_35 _f4;
} ;

struct _GLF_struct_32 {
 mat2x3 _f0;
 mat2x4 _f1;
 uint _f2;
 mat4 _f3;
} ;

struct _GLF_struct_33 {
 _GLF_struct_32 _f0;
} ;

struct _GLF_struct_52 {
 _GLF_struct_33 _f0;
 _GLF_struct_36 _f1;
 _GLF_struct_39 _f2;
 vec2 _f3;
 _GLF_struct_42 _f4;
 _GLF_struct_47 _f5;
 _GLF_struct_51 _f6;
} ;

struct _GLF_struct_31 {
 uint workgroup_id;
 ivec3 _f0;
} ;

struct _GLF_struct_29 {
 mat2x4 _f0;
} ;

struct _GLF_struct_27 {
 mat4 _f0;
 mat4 _f1;
 ivec3 _f2;
 vec3 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_28 {
 _GLF_struct_27 _f0;
} ;

struct _GLF_struct_25 {
 vec2 _f0;
} ;

struct _GLF_struct_24 {
 mat3 _f0;
 mat3x2 _f1;
 vec3 _f2;
 mat2 _f3;
 vec2 _f4;
 mat3 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_23 {
 uvec3 _f0;
 bool _f1;
 mat3 _f2;
 bvec4 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_22 {
 mat4 _f0;
} ;

struct _GLF_struct_26 {
 _GLF_struct_22 _f0;
 _GLF_struct_23 _f1;
 ivec4 _f2;
 _GLF_struct_24 _f3;
 _GLF_struct_25 _f4;
} ;

struct _GLF_struct_20 {
 uint _f0;
} ;

struct _GLF_struct_19 {
 mat2 _f0;
 mat4x2 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_21 {
 _GLF_struct_19 _f0;
 uint _f1;
 _GLF_struct_20 _f2;
 vec2 _f3;
 mat3 _f4;
 bool _f5;
 mat2 _f6;
} ;

struct _GLF_struct_30 {
 mat2x4 _f0;
 uint num_workgroup;
 _GLF_struct_21 _f1;
 _GLF_struct_26 _f2;
 _GLF_struct_28 _f3;
 _GLF_struct_29 _f4;
} ;

struct _GLF_struct_18 {
 uint workgroup_base;
 bvec4 _f0;
} ;

struct _GLF_struct_15 {
 vec2 _f0;
 ivec4 _f1;
 mat3x2 _f2;
 mat4x2 _f3;
 uvec4 _f4;
 bvec2 _f5;
 uint _f6;
} ;

struct _GLF_struct_14 {
 bvec2 _f0;
 mat2x3 _f1;
 uvec4 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_16 {
 _GLF_struct_14 _f0;
 _GLF_struct_15 _f1;
 uvec4 _f2;
 bvec3 _f3;
 uint _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_12 {
 bvec3 _f0;
 mat2 _f1;
 vec3 _f2;
 mat4 _f3;
 bvec3 _f4;
 mat2 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_13 {
 _GLF_struct_12 _f0;
 float _f1;
} ;

struct _GLF_struct_10 {
 vec2 _f0;
 mat3x4 _f1;
 uvec4 _f2;
 mat3 _f3;
 float _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_9 {
 bvec2 _f0;
 bvec3 _f1;
 mat2x3 _f2;
 ivec2 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_8 {
 vec4 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_7 {
 int _f0;
 int _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_11 {
 _GLF_struct_7 _f0;
 _GLF_struct_8 _f1;
 _GLF_struct_9 _f2;
 float _f3;
 vec3 _f4;
 mat3 _f5;
 _GLF_struct_10 _f6;
} ;

struct _GLF_struct_17 {
 _GLF_struct_11 _f0;
 mat2x4 _f1;
 _GLF_struct_13 _f2;
 _GLF_struct_16 _f3;
 uint subgroup_id;
} ;

struct _GLF_struct_4 {
 bvec2 _f0;
 mat4x3 _f1;
 uvec3 _f2;
 vec4 _f3;
 ivec3 _f4;
 uvec3 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
} ;

struct _GLF_struct_2 {
 mat2x3 _f0;
 uint _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_1 {
 uvec4 _f0;
 bool _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_0 {
 ivec3 _f0;
 mat2x4 _f1;
 mat2x3 _f2;
 float _f3;
 vec4 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_3 {
 bvec4 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 vec4 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_6 {
 _GLF_struct_3 _f0;
 _GLF_struct_5 _f1;
 uint virtual_gid;
 ivec2 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), bool(bvec2(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && (bool((injectionSwitch.x > injectionSwitch.y))))), true && (bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (bool((injectionSwitch.x > injectionSwitch.y)))))))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, clamp(0, 0, 0))); _injected_loop_counter --)
      {
       return;
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8.9) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(43.57, -722.379)) : injectionSwitch)).y)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && true))))
    return;
  }
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(_GLF_struct_11(_GLF_struct_7(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) ^ 0))), 1, uvec4(1u)), _GLF_struct_8(vec4(1.0), mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_struct_9(bvec2(_GLF_IDENTITY(true, (true) || false)), bvec3(true), mat2x3(1.0), ivec2(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) - 0)))), mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.7)), float(1.0), bool(true))))), 1.0, vec3(1.0), mat3(1.0), _GLF_struct_10(vec2(1.0), mat3x4(1.0), uvec4(1u), mat3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.9))), 1.0))), 1.0, ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(89534) : 1)), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, 1 * (1)) : _GLF_FUZZED((91190 ^ -10180)))))))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(89534) : 1)), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, 1 * (1)) : _GLF_FUZZED((91190 ^ -10180)))))))), ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), max(int(7), int(7))))) >> _GLF_IDENTITY(int(7), int(7))), 1, 1), (ivec4(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(89534) : 1)), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, 1 * (1)) : _GLF_FUZZED((91190 ^ -10180)))))))), ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), max(int(7), int(7))))) >> _GLF_IDENTITY(int(7), int(7))), 1, 1)) - ivec4(0, 0, 0, 0))))))), mat2x4(1.0), _GLF_struct_13(_GLF_struct_12(bvec3(true), mat2(1.0), vec3(1.0), mat4(1.0), bvec3(true), mat2(1.0), mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0), _GLF_struct_16(_GLF_struct_14(bvec2(true), mat2x3(1.0), uvec4(1u), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, 0 ^ (1))), (ivec4(1)) / ivec4(1, 1, 1, 1))), _GLF_struct_15(vec2(1.0), ivec4(1), mat3x2(1.0), mat4x2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.1) : 1.0))), uvec4(1u), bvec2(true), 1u), uvec4(1u), bvec3(true), 1u, bvec2(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, _GLF_IDENTITY(false, bool(bvec2(false, true))), false)), (bool(bvec4(true, false, _GLF_IDENTITY(false, bool(bvec2(false, true))), false))) && true))))), gl_SubgroupID);
uint subgroup_size = 16;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-7.9 - -220.983))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(249.209, -4.0)))), injectionSwitch)).x < injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 _GLF_struct_57 _GLF_struct_replacement_57 = _GLF_struct_57(mat4x3(1.0), _GLF_struct_56(vec2(1.0), _GLF_struct_53(ivec2(1), mat2(1.0), vec2(1.0), mat2x4(1.0), gl_SubgroupInvocationID, mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (float(mat3(1.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))) - 0.0))), bvec4(true), mat2x3(1.0)), mat3(1.0), vec2(1.0), _GLF_struct_54(vec3(1.0)), _GLF_struct_55(vec2(1.0), ivec4(1), uvec3(1u))), _GLF_IDENTITY(uvec3(1u), max(uvec3(1u), _GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u)))))));
 _GLF_struct_30 _GLF_struct_replacement_30 = _GLF_struct_30(mat2x4(1.0), gl_NumWorkGroups.x, _GLF_struct_21(_GLF_struct_19(mat2(1.0), mat4x2(1.0), mat4x3(1.0)), 1u, _GLF_struct_20(1u), vec2(1.0), mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0)), true, mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-8606.4576 * -6208.2766))), float(0.0), bool(true))), _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))))), (_GLF_IDENTITY(true ? float(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), clamp(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), mix(float(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), float(_GLF_FUZZED(-26.71)), bool(false))))))) : _GLF_FUZZED(length(-18.04)), clamp(true ? float(float(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))))) : _GLF_FUZZED(length(-18.04)), _GLF_IDENTITY(true ? float(float(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))))) : _GLF_FUZZED(length(-18.04)), (true ? float(float(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))))) : _GLF_FUZZED(length(-18.04))) / 1.0), true ? float(float(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))))) : _GLF_FUZZED(length(-18.04))))))))), _GLF_struct_26(_GLF_struct_22(mat4(1.0)), _GLF_struct_23(uvec3(1u), true, mat3(1.0), bvec4(true), mat2x3(1.0)), ivec4(1), _GLF_struct_24(mat3(1.0), mat3x2(1.0), vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0)), mat2(1.0), vec2(1.0), mat3(1.0), _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | uvec4(0u, 0u, 0u, 0u))), _GLF_struct_25(vec2(1.0))), _GLF_struct_28(_GLF_struct_27(mat4(1.0), mat4(1.0), ivec3(1), _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(float(86227u))), bool(false)))), vec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (vec3(1.0))), ivec3(1))), _GLF_struct_29(mat2x4(1.0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) - 0) - (0 ^ 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(-6603.7084, (_GLF_IDENTITY(-6603.7084, (-6603.7084) / 1.0)) - log(1.0)), -6.7)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(-33.86), _GLF_FUZZED(-0.9)), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(11541) : _GLF_IDENTITY(0, clamp(0, 0, 0))))], (false ? _GLF_IDENTITY(_GLF_FUZZED(2.2), float(mat4x2(_GLF_FUZZED(2.2), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, tan(0.0)))) : (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), (false ? _GLF_FUZZED(11541) : _GLF_IDENTITY(0, clamp(0, 0, 0))))])), (injectionSwitch)[1]), (_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(mat3(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-222.220)), float((injectionSwitch)[1]), bool(true)))), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((true ? 61.09 : 78.15))), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true))), abs(1.0))))) * vec2(1.0, 1.0)), bvec2(true, true)))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(-33.86), _GLF_FUZZED(-0.9)), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(11541) : _GLF_IDENTITY(0, clamp(0, 0, 0))))], (false ? _GLF_IDENTITY(_GLF_FUZZED(2.2), float(mat4x2(_GLF_FUZZED(2.2), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, tan(0.0)))) : (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), (false ? _GLF_FUZZED(11541) : _GLF_IDENTITY(0, clamp(0, 0, 0))))])), (injectionSwitch)[1]), (_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(mat3(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-222.220)), float((injectionSwitch)[1]), bool(true)))), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((true ? 61.09 : 78.15))), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true))), abs(1.0))))) * vec2(1.0, 1.0)), bvec2(true, true)))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(-33.86), _GLF_FUZZED(-0.9)), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(11541) : _GLF_IDENTITY(0, clamp(0, 0, 0))))], (false ? _GLF_IDENTITY(_GLF_FUZZED(2.2), float(mat4x2(_GLF_FUZZED(2.2), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, tan(0.0)))) : (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), (false ? _GLF_FUZZED(11541) : _GLF_IDENTITY(0, clamp(0, 0, 0))))])), (injectionSwitch)[1]), (_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(mat3(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-222.220)), float((injectionSwitch)[1]), bool(true)))), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((true ? 61.09 : 78.15))), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true))), abs(1.0))))) * vec2(1.0, 1.0)), bvec2(true, true)))) : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(-33.86), _GLF_FUZZED(-0.9)), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(11541) : _GLF_IDENTITY(0, clamp(0, 0, 0))))], (false ? _GLF_IDENTITY(_GLF_FUZZED(2.2), float(mat4x2(_GLF_FUZZED(2.2), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, tan(0.0)))) : (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), (false ? _GLF_FUZZED(11541) : _GLF_IDENTITY(0, clamp(0, 0, 0))))])), (injectionSwitch)[1]), (_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(mat3(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-222.220)), float((injectionSwitch)[1]), bool(true)))), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((true ? 61.09 : 78.15))), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true))), abs(1.0))))) * vec2(1.0, 1.0)), bvec2(true, true)))))) / vec2(1.0, 1.0)).y, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-33.86), _GLF_FUZZED(-0.9)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), (vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1])) - vec2(0.0, 0.0)), bvec2(true, true)))) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-33.86, 0.0 + (_GLF_IDENTITY(-33.86, mix(float(-33.86), float(_GLF_FUZZED(-53.83)), bool(false)))))), _GLF_FUZZED(-0.9)), vec2((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))[0], (injectionSwitch)[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, 0 ^ (1)))), 1))]), bvec2(true, true)))) / vec2(1.0, 1.0)).y, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-33.86), _GLF_FUZZED(-0.9)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0))[1]), bvec2(true, true)))) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-33.86), _GLF_FUZZED(_GLF_IDENTITY(-0.9, (-0.9) - 0.0))), vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1.1, -5.6)))))[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), min(int(ivec2(0, 0)), int(ivec2(0, 0)))))], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec2(true, false))))))))) / vec2(1.0, 1.0)).y, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-33.86), _GLF_FUZZED(_GLF_IDENTITY(-0.9, (-0.9) - 0.0))), vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1.1, -5.6)))))[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), min(int(ivec2(0, 0)), int(ivec2(0, 0)))))], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec2(true, false))))))))) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-33.86), _GLF_FUZZED(_GLF_IDENTITY(-0.9, (-0.9) - 0.0))), vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1.1, -5.6)))))[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), min(int(ivec2(0, 0)), int(ivec2(0, 0)))))], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec2(true, false))))))))) / vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-33.86), _GLF_FUZZED(_GLF_IDENTITY(-0.9, (-0.9) - 0.0))), vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1.1, -5.6)))))[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), min(int(ivec2(0, 0)), int(ivec2(0, 0)))))], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec2(true, false))))))))) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-33.86), _GLF_FUZZED(_GLF_IDENTITY(-0.9, (-0.9) - 0.0))), vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1.1, -5.6)))))[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), min(int(ivec2(0, 0)), int(ivec2(0, 0)))))], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec2(true, false))))))))) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-33.86), _GLF_FUZZED(_GLF_IDENTITY(-0.9, (-0.9) - 0.0))), vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1.1, -5.6)))))[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), min(int(ivec2(0, 0)), int(ivec2(0, 0)))))], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec2(true, false))))))))) / vec2(1.0, 1.0)).y))))))))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.5) : 1.0)), (1.0) / _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(-22.30)))), 1.0, 1.0)), 1.0)), 1.0, 0.0), (mat2x3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0)) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) / exp(0.0))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
      }
     return;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY((_GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), true && (true && (false)))) || false)) && true, _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), true && (true && (false)))) || false)) && true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3((_GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), true && (true && (false)))) || false)) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
      continue;
    }
  }
 _GLF_struct_31 _GLF_struct_replacement_31 = _GLF_struct_31(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), max(_GLF_IDENTITY((gl_WorkGroupID), uvec3(uvec4((gl_WorkGroupID), 1u))), (gl_WorkGroupID))) + _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0))))).x), float(vec4(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)), injectionSwitch)).x), min(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))), sin(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(56.42) : _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(52.24)), _GLF_IDENTITY(float(0.0), min(_GLF_IDENTITY(float(0.0), (false ? _GLF_FUZZED(69.17) : float(0.0))), float(0.0))), bool(true)))))), float(_GLF_FUZZED(-19.75)), bool(false))), 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, tan(0.0), 0.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8.4) : 0.0)))), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((abs(3400.4020)))))), vec4(0.0, 0.0, 1.0, 0.0))))))), (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), float(vec4(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1247.8629)), bool(false))))) * (injectionSwitch)), injectionSwitch)).x), min(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch))), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(mat3x2(min(injectionSwitch, injectionSwitch), 1.0, 1.0, 1.0, 0.0))))), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(mat3x4(min(injectionSwitch, injectionSwitch), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))).x))), sin(0.0), 1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(vec4(-9073.8062, -3.8, 989.223, 2.8).a) : _GLF_IDENTITY(0.0, (0.0) * 1.0))), 0.0)), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((abs(3400.4020))))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (true ? 0.0 : _GLF_FUZZED((abs(3400.4020)))))) * 1.0)), vec4(0.0, 0.0, 1.0, 0.0)))))))) | (_GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(2919.9223)), bool(false))), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), float(vec4(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, abs(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED((- 4783.2219)), _GLF_FUZZED(-7.3)), vec2((vec2(1.0, 1.0))[0], _GLF_IDENTITY((vec2(1.0, 1.0))[1], float(mat4x3((vec2(1.0, 1.0))[1], 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), bvec2(true, true)))) * (injectionSwitch)), injectionSwitch)).x), min(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x))), sin(0.0), 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mix(vec4((vec4(0.0, 0.0, 1.0, 0.0))[0], _GLF_FUZZED(627.949), _GLF_FUZZED(-1.5), (vec4(0.0, 0.0, 1.0, 0.0))[3]), vec4(_GLF_FUZZED(-3392.4333), (vec4(0.0, 0.0, 1.0, 0.0))[1], (vec4(0.0, 0.0, 1.0, 0.0))[2], _GLF_FUZZED(-1198.7966)), bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), min(max(0.0, 0.0), max(0.0, 0.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((abs(3400.4020)))))), vec4(0.0, 0.0, 1.0, 0.0))))))), min(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), float(vec4(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)), injectionSwitch), (min(_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)), injectionSwitch)) - vec2(0.0, 0.0))).x), min(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (true ? min(injectionSwitch, injectionSwitch) : _GLF_FUZZED(vec2(5.3, 3.8))))) / vec2(1.0, 1.0))).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))), sin(0.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (vec4(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0)) * vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((abs(3400.4020)))))), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4.7) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0))))))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), (vec2(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))) * mat2(1.0)))).x), float(vec4(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)), injectionSwitch)).x), min(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))), sin(0.0), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(floor(-3.6)) : float(mat2(0.0, 0.0, 0.0, 1.0))))))), min(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(floor(-3.6)) : float(mat2(0.0, 0.0, 0.0, 1.0))))))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(floor(-3.6)) : float(mat2(0.0, 0.0, 0.0, 1.0))))))))), dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((abs(3400.4020)))))), vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), 0.0, 1.0, 0.0)))))))))))))).x, ivec3(1));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_18 _GLF_struct_replacement_18 = _GLF_struct_18(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (0u ^ 0u) ^ (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)))), 0u | (_GLF_IDENTITY(workgroup_size, (0u ^ 0u) ^ (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)))))) * _GLF_struct_replacement_31.workgroup_id, bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), ! (! (_GLF_IDENTITY(true, bool(bvec2(true, false))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
  }
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_3(bvec4(true), _GLF_struct_0(ivec3(1), mat2x4(1.0), mat2x3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0))), 1.0, vec4(1.0), mat3(1.0)), _GLF_struct_1(_GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(uvec4(1u), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | (uvec4(1u)))))) * uvec4(1u, 1u, 1u, 1u)), true, bvec2(true)), _GLF_struct_2(mat2x3(1.0), 1u, uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u + (1u)), (_GLF_IDENTITY(1u, 0u + (1u))) | (_GLF_IDENTITY(1u, 0u + (1u)))))), _GLF_IDENTITY(vec4(1.0), vec4(0.0, 0.0, 0.0, 0.0) + _GLF_IDENTITY((vec4(1.0)), vec4(_GLF_IDENTITY(mat3x2((vec4(1.0)), 0.0, sqrt(1.0)), mat2(1.0) * (mat3x2((vec4(1.0)), _GLF_IDENTITY(0.0, (0.0) - sin(0.0)), sqrt(1.0))))))), ivec3(1)), _GLF_struct_5(_GLF_struct_4(bvec2(true), mat4x3(1.0), uvec3(1u), vec4(1.0), ivec3(1), uvec3(1u), ivec4(1))), _GLF_IDENTITY(_GLF_struct_replacement_18.workgroup_base + _GLF_struct_replacement_17.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, _GLF_IDENTITY(1u, 1u * (1u)))))) | (subgroup_size)), min(_GLF_struct_replacement_18.workgroup_base + _GLF_struct_replacement_17.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, _GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, (1u) / 1u))))))) | (subgroup_size)), _GLF_IDENTITY(_GLF_struct_replacement_18.workgroup_base + _GLF_struct_replacement_17.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, _GLF_IDENTITY(1u, 1u * (1u)))))) | (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))), 0u | (_GLF_struct_replacement_18.workgroup_base + _GLF_struct_replacement_17.subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, _GLF_IDENTITY(1u, 1u * (1u)))))) | (subgroup_size)))))) + _GLF_struct_replacement_57._f1._f1.subgroup_local_id, _GLF_IDENTITY(ivec2(1), (ivec2(1)) << ivec2(0, 0)));
 uint next_virtual_gid = _GLF_struct_replacement_18.workgroup_base + _GLF_struct_replacement_17.subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (subgroup_size) << 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), 0u ^ (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) * 1u))) >> 0u), (subgroup_size) << 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), 0u ^ (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) * 1u))) >> 0u), (subgroup_size) << 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), 0u ^ (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) * 1u))) >> 0u), (subgroup_size) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), 0u ^ (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) * 1u))) >> 0u), (subgroup_size) << 0u)) << 0u))) : _GLF_FUZZED((workgroup_size ++)))) : _GLF_FUZZED(atomicOr(_GLF_struct_replacement_57._f1._f1.subgroup_local_id, _GLF_struct_replacement_57._f1._f1.subgroup_local_id)))) + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_57._f1._f1.subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 1))), max(_GLF_struct_replacement_57._f1._f1.subgroup_local_id + 1, _GLF_struct_replacement_57._f1._f1.subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), max(_GLF_IDENTITY(_GLF_struct_replacement_57._f1._f1.subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 1))), max(_GLF_struct_replacement_57._f1._f1.subgroup_local_id + 1, _GLF_struct_replacement_57._f1._f1.subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(_GLF_struct_replacement_57._f1._f1.subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 1))), max(_GLF_struct_replacement_57._f1._f1.subgroup_local_id + 1, _GLF_struct_replacement_57._f1._f1.subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))))), max((_GLF_IDENTITY(_GLF_struct_replacement_57._f1._f1.subgroup_local_id + 1, _GLF_IDENTITY(max(_GLF_struct_replacement_57._f1._f1.subgroup_local_id + 1, _GLF_struct_replacement_57._f1._f1.subgroup_local_id + 1), min(max(_GLF_struct_replacement_57._f1._f1.subgroup_local_id + 1, _GLF_struct_replacement_57._f1._f1.subgroup_local_id + 1), max(_GLF_struct_replacement_57._f1._f1.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_57._f1._f1.subgroup_local_id, uint(uvec4(_GLF_struct_replacement_57._f1._f1.subgroup_local_id, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u ^ 0u)))) + 1))))), (_GLF_IDENTITY(_GLF_struct_replacement_57._f1._f1.subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), max(_GLF_IDENTITY(_GLF_struct_replacement_57._f1._f1.subgroup_local_id + 1, min(_GLF_IDENTITY(_GLF_struct_replacement_57._f1._f1.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_57._f1._f1.subgroup_local_id, 0u ^ (_GLF_struct_replacement_57._f1._f1.subgroup_local_id))) / 1u) + 1, _GLF_struct_replacement_57._f1._f1.subgroup_local_id + 1)), _GLF_struct_replacement_57._f1._f1.subgroup_local_id + 1))))) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, 0 | (1))), _GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), _GLF_IDENTITY(((4)) - 0, 1 * (((4)) - 0)))), _GLF_IDENTITY(64, (64) | (64)), 4);
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), bool(bvec4(bool(bvec4(false, true, false, true)), true, true, true)))))))))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)) != _GLF_IDENTITY(1, clamp(1, 1, 1))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y))))))))))
            continue;
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y))) && true)))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            continue;
           break;
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))) || false)))))
            barrier();
          }
         else
          {
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) || false)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) || false))) || _GLF_IDENTITY(false, false || (false))))))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           continue;
          }
         if(_GLF_DEAD(false))
          continue;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint read = atomicLoad(buf[_GLF_struct_replacement_6.virtual_gid], 4, 64, _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) | (0)))), int(_GLF_IDENTITY(ivec3(0, 0, 0), ~ (~ (ivec3(0, 0, 0))))))) ^ 0));
 if(_GLF_IDENTITY(_GLF_struct_replacement_57._f1._f1.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_57._f1._f1.subgroup_local_id, (_GLF_struct_replacement_57._f1._f1.subgroup_local_id) | (_GLF_IDENTITY(_GLF_struct_replacement_57._f1._f1.subgroup_local_id, (_GLF_struct_replacement_57._f1._f1.subgroup_local_id) | (_GLF_struct_replacement_57._f1._f1.subgroup_local_id))))) << (0u ^ (1u ^ 1u))) + 1 < subgroup_size)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false)))
          return;
         return;
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true)))))), bool(bvec4(false, true, true, _GLF_IDENTITY(true, ! (! (true)))))) ? _GLF_FUZZED(6.7) : injectionSwitch.y))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true))), true, false, true)))))))), bool(bvec4(false, true, true, true))) ? _GLF_FUZZED(_GLF_IDENTITY(6.7, clamp(6.7, _GLF_IDENTITY(6.7, mix(float(_GLF_FUZZED(-5.4)), float(_GLF_IDENTITY(6.7, (true ? 6.7 : _GLF_FUZZED(-4.7)))), _GLF_IDENTITY(bool(true), (bool(true)) || false))), _GLF_IDENTITY(_GLF_IDENTITY(6.7, clamp(6.7, _GLF_IDENTITY(6.7, (6.7) * 1.0), _GLF_IDENTITY(6.7, (6.7) * 1.0))), mix(float(6.7), float(_GLF_FUZZED(8.0)), bool(false)))))) : injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((9.1))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), true, false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   atomicStore(checker[_GLF_struct_replacement_6.virtual_gid], _GLF_IDENTITY(read, 0u ^ (_GLF_IDENTITY(read, min(read, _GLF_IDENTITY(read, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) | (read)))))), _GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(64, (64) / 1), 4);
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     subgroupAll(false);
    }
  }
 else
  {
   atomicStore(checker[_GLF_struct_replacement_6.virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)))).y)))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     do
      {
       do
        {
         for(_GLF_struct_52 _GLF_struct_replacement_52 = _GLF_struct_52(_GLF_struct_33(_GLF_struct_32(mat2x3(1.0), mat2x4(1.0), 1u, mat4(1.0))), _GLF_struct_36(bvec3(true), _GLF_struct_34(mat2x3(1.0), mat4x3(1.0), 1u, bvec4(true), 1, 1u), mat3x4(1.0), mat4(1.0), _GLF_struct_35(_GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_struct_39(vec2(1.0), vec2(1.0), ivec2(1), ivec2(1), _GLF_struct_37(bvec4(true), uvec3(1u)), _GLF_struct_38(true, bvec4(true), ivec2(1), int(_GLF_ZERO(0.0, injectionSwitch.x)))), vec2(1.0), _GLF_struct_42(_GLF_struct_40(ivec4(1), 1u, mat4(1.0), 1.0, ivec3(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (1)))))), ivec3(1)), vec4(1.0), mat4x3(1.0), _GLF_struct_41(mat2(1.0)), 1u), _GLF_struct_47(_GLF_struct_43(1u, true, mat4x3(1.0), ivec3(1), 1.0, ivec3(1)), _GLF_struct_44(mat3x4(1.0), mat4x2(1.0), bvec2(true), mat4(1.0)), mat3x2(1.0), _GLF_struct_45(ivec2(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | 0)))))), bvec4(true)), _GLF_struct_46(mat4x2(1.0), 1u, uvec2(1u), bvec2(true), mat4(1.0))), _GLF_struct_51(_GLF_struct_48(ivec4(1), uvec4(1u), true, ivec2(1), bvec2(true)), vec3(_GLF_IDENTITY(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)) * (1.0))), ivec2(1), _GLF_struct_49(mat4x2(1.0), vec2(1.0)), _GLF_struct_50(vec2(1.0), bvec2(true), 1.0, true, mat2(1.0), bvec4(true)))); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_52._f2._f5._injected_loop_counter < _GLF_IDENTITY(1, (1) | 0)); _GLF_struct_replacement_52._f2._f5._injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
            barrier();
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true) || (false))))))), ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false)))), false || ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false)))))))))) || false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY(bool(bool(! (_GLF_WRAPPED_LOOP(false)))), false || (bool(bool(! (_GLF_WRAPPED_LOOP(false))))))))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), bool(bool(! (_GLF_WRAPPED_LOOP(false)))))) && true)), false || (_GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(false))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false)))))), bool(bvec4(! ((! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), ((_GLF_WRAPPED_LOOP(false))) && true))), false, true, false))))))))) && true))), ! (! ((! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(false))), false || (_GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_LOOP(false)))), bool(bvec4(! ((! (_GLF_WRAPPED_LOOP(false)))), false, true, false))))))))) && true))), ! (! ((! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))))))))), ! (! (bool(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(false))), false || (_GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_LOOP(false)))), bool(bvec4(! ((! (_GLF_WRAPPED_LOOP(false)))), false, true, false))))))))) && true))), ! (! _GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))) && true)))), false || (((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))) && true))))))))))))) && _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, false || (true)))))))));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
}
