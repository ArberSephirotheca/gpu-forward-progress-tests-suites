#version 460
struct _GLF_struct_0 {
 uint workgroup_size;
 mat3x2 _f0;
 uvec3 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_idread;
 uvec3 GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id;
 GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_idread.xyz = GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(gl_WorkGroupSize.x, mat3x2(1.0), uvec3(1u));
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_idread.xyz.z = workgroup_id;
 uint workgroup_base = _GLF_struct_replacement_0.workgroup_size * GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_idread.xyz.z;
 GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_idread.xyz.y = workgroup_base;
 uint virtual_gid = GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_idread.xyz.y + subgroup_id * subgroup_size + subgroup_local_id;
 GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_idread.xyz.x = virtual_gid;
 uint next_virtual_gid = GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_idread.xyz.y + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read = atomicLoad(buf[GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_idread.xyz.x], 4, 64, 0);
 GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_idread.w = read;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(checker[GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_idread.xyz.x], GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_idread.w, 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   atomicStore(checker[GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_idread.xyz.x], GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_idread.w, 4, 64, 4);
   subgroupAll(true);
  }
}
