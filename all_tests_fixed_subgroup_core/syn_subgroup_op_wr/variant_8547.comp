#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
    return;
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))) || false), bool(bvec3(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), true, false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))) || false), bool(bvec3(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), true, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, false || (false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))) || false), bool(bvec3(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), true, false)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(484.807))), (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(484.807), (true ? injectionSwitch.y : _GLF_FUZZED(484.807)) / determinant(mat2(1.0, 1.0, 0.0, 1.0))))) : _GLF_FUZZED(radians(-0.5))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), false), false, true))))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, true, false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))) && true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         return;
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, sqrt(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec3(-8232.3775, 345.109, -3.0).r)), bool(false))))) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7.1, -1.3)))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0))).x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)))) - vec2(0.0, 0.0)).y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))))), true))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(bool((injectionSwitch.x > injectionSwitch.y)), false, false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))), false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(7.1), (true ? _GLF_FUZZED(7.1) : _GLF_FUZZED(-7.6)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec4(11.99, 1.5, 7.8, -74.53)[1]) : injectionSwitch.x)), (false ? _GLF_IDENTITY(_GLF_FUZZED(6.2), 1.0 * (_GLF_FUZZED(6.2))) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id) >> (0u | 0u), ((subgroup_id) >> _GLF_IDENTITY((0u | 0u), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) + ((0u | 0u)))) << _GLF_IDENTITY(0u, (0u) | (0u))), min(_GLF_IDENTITY((subgroup_id) >> (0u | 0u), ((subgroup_id) >> (0u | 0u)) << 0u), _GLF_IDENTITY((subgroup_id) >> (0u | 0u), ((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) << 0u)) >> (0u | 0u)) << 0u)))), min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - (0u | 0u)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) - _GLF_IDENTITY((0u | 0u), (_GLF_IDENTITY((0u | 0u), min((0u | 0u), (0u | 0u)))) >> (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) << (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) | _GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), (subgroup_id))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) + 0u))))) | ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)), _GLF_IDENTITY(max((subgroup_id), (subgroup_id)), max(_GLF_IDENTITY(max((subgroup_id), (subgroup_id)), ~ (~ (_GLF_IDENTITY(max((subgroup_id), (subgroup_id)), (max((subgroup_id), (subgroup_id))) / 1u)))), _GLF_IDENTITY(max((subgroup_id), (subgroup_id)), min(max((subgroup_id), (subgroup_id)), max((subgroup_id), (subgroup_id)))))))))) | 0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) + 0u))))) | ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))) | 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) + 0u))))) | _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))), (((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))) | (((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))))) | 0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) + 0u))))) | ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) + 0u))))) | ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))) | 0u) | 0u), uint(uint(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ~ (~ ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) + 0u))))) | ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))) | 0u))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) + 0u))))) | ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))) | 0u))))))) - 0u), clamp(_GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - (0u | 0u)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) - _GLF_IDENTITY((0u | 0u), (_GLF_IDENTITY((0u | 0u), min((0u | 0u), (0u | 0u)))) >> (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) << (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) | _GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), (subgroup_id))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) + 0u))))) | ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)), _GLF_IDENTITY(max((subgroup_id), (subgroup_id)), max(_GLF_IDENTITY(max((subgroup_id), (subgroup_id)), ~ (~ (_GLF_IDENTITY(max((subgroup_id), (subgroup_id)), (max((subgroup_id), (subgroup_id))) / 1u)))), _GLF_IDENTITY(max((subgroup_id), (subgroup_id)), min(max((subgroup_id), (subgroup_id)), max((subgroup_id), (subgroup_id)))))))))) | 0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) + 0u))))) | ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))) | 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) + 0u))))) | _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))), (((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))) | (((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))))) | 0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) + 0u))))) | ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) + 0u))))) | ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))) | 0u) | 0u), uint(uint(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ~ (~ ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) + 0u))))) | ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))) | 0u))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) + 0u))))) | ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))) | 0u))))))) - 0u), _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - (0u | 0u)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) - _GLF_IDENTITY((0u | 0u), (_GLF_IDENTITY((0u | 0u), min((0u | 0u), (0u | 0u)))) >> (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) << (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) | _GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), (subgroup_id))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) + 0u))))) | ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)), _GLF_IDENTITY(max((subgroup_id), (subgroup_id)), max(_GLF_IDENTITY(max((subgroup_id), (subgroup_id)), ~ (~ (_GLF_IDENTITY(max((subgroup_id), (subgroup_id)), (max((subgroup_id), (subgroup_id))) / 1u)))), _GLF_IDENTITY(max((subgroup_id), (subgroup_id)), min(max((subgroup_id), (subgroup_id)), max((subgroup_id), (subgroup_id)))))))))) | 0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) + 0u))))) | ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))) | 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) + 0u))))) | _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))), (((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))) | (((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))))) | 0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) + 0u))))) | ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) + 0u))))) | ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))) | 0u) | 0u), uint(uint(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ~ (~ ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) + 0u))))) | ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))) | 0u))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) + 0u))))) | ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))) | 0u))))))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - (0u | 0u)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) - _GLF_IDENTITY((0u | 0u), (_GLF_IDENTITY((0u | 0u), min((0u | 0u), (0u | 0u)))) >> (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) << (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) | _GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), (subgroup_id))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) + 0u))))) | ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)), _GLF_IDENTITY(max((subgroup_id), (subgroup_id)), max(_GLF_IDENTITY(max((subgroup_id), (subgroup_id)), ~ (~ (_GLF_IDENTITY(max((subgroup_id), (subgroup_id)), (max((subgroup_id), (subgroup_id))) / 1u)))), _GLF_IDENTITY(max((subgroup_id), (subgroup_id)), min(max((subgroup_id), (subgroup_id)), max((subgroup_id), (subgroup_id)))))))))) | 0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) + 0u))))) | ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))) | 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) + 0u))))) | _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))), (((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))) | (((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))))) | 0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) + 0u))))) | ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) + 0u))))) | ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))) | 0u) | 0u), uint(uint(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ~ (~ ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) + 0u))))) | ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))) | 0u))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) + 0u))))) | ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))) | 0u))))))) - 0u), (_GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - (0u | 0u)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) - _GLF_IDENTITY((0u | 0u), (_GLF_IDENTITY((0u | 0u), min((0u | 0u), (0u | 0u)))) >> (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) << (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) | _GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), (subgroup_id))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) + 0u))))) | ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)), _GLF_IDENTITY(max((subgroup_id), (subgroup_id)), max(_GLF_IDENTITY(max((subgroup_id), (subgroup_id)), ~ (~ (_GLF_IDENTITY(max((subgroup_id), (subgroup_id)), (max((subgroup_id), (subgroup_id))) / 1u)))), _GLF_IDENTITY(max((subgroup_id), (subgroup_id)), min(max((subgroup_id), (subgroup_id)), max((subgroup_id), (subgroup_id)))))))))) | 0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) + 0u))))) | ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))) | 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) + 0u))))) | _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))), (((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))) | (((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))))) | 0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) + 0u))))) | ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) + 0u))))) | ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))) | 0u) | 0u), uint(uint(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ~ (~ ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) + 0u))))) | ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))) | 0u))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) + 0u))))) | ((_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))) | 0u))))))) - 0u)) - 0u))) >> (0u | 0u)), _GLF_IDENTITY(subgroup_id, (subgroup_id) >> (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u) | 0u, (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) | 0u) | (_GLF_IDENTITY(0u | 0u, clamp(0u | 0u, 0u | 0u, _GLF_IDENTITY(0u | 0u, (0u | 0u) | (_GLF_IDENTITY(0u, (0u) | (0u)) | 0u)))))))))) * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))) / 1u)) / 1u), (subgroup_size) - 0u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false)))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(6.2), _GLF_FUZZED(27.00)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true)), vec2(vec4(mix(vec2(_GLF_FUZZED(6.2), _GLF_FUZZED(27.00)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true)), 0.0, 0.0)))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false)), true, false, false))))), bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false)), true, false, false))))), true, true, true)))))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), false || ((false))))))), true, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || false)), true, false)), true, false, false))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), true, false, true)), (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, false, true))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec4(false, true, false, true))), bool(bvec3(_GLF_IDENTITY(! (bool(bvec4(false, true, false, true))), (! (bool(bvec4(false, true, false, true)))) || false), false, false))), true, false, true)))))) && true)))), true, _GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), true))))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))))), (_GLF_IDENTITY((! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))), false || ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), false || ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))))))), ! (! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), false || (! (! _GLF_IDENTITY((false), false || ((false)))))))))))))))))) && true), true)), (bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), false, false))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), false, false)))))))) || false)))) && true))), true), bvec2(bvec3(bvec2((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true))), true), true))))) && true))))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), true))))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))))), (_GLF_IDENTITY((! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))), false || ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), false || ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))))))), ! (! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), false || (! (! _GLF_IDENTITY((false), false || ((false)))))))))))))))))) && true), true)), (bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), false, false))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), false, false)))))))) || false)))) && true))), true), bvec2(bvec3(bvec2((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true))), true), true))))) && true))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), true))))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))))), (_GLF_IDENTITY((! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))), false || ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), false || ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))))))), ! (! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), false || (! (! _GLF_IDENTITY((false), false || ((false)))))))))))))))))) && true), true)), (bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), false, false))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), false, false)))))))) || false)))) && true))), true), bvec2(bvec3(bvec2((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true))), true), true))))) && true)))))))), ! (! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), true))))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))))), (_GLF_IDENTITY((! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))), false || ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), false || ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))))))), ! (! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), false || (! (! _GLF_IDENTITY((false), false || ((false)))))))))))))))))) && true), true)), (bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), false, false))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), false, false)))))))) || false)))) && true))), true), bvec2(bvec3(bvec2((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true))), true), true))))) && true))))))))))))), true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))), true))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y)), true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y)), true)), true))))))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false))))), (bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5639.2984)), float(injectionSwitch.y), bool(true)))))), false || ((injectionSwitch.x > injectionSwitch.y)))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6513.8862))))), true))), _GLF_IDENTITY(false, (false) && true))))))) || false)))), true, false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), min(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))))), (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), min(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))))))) * mat2(1.0)).y, (true ? _GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (_GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), vec2(1.0, 0.0)))) + vec2(0.0, 0.0))), min(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))))).y : _GLF_FUZZED(_GLF_IDENTITY(-5.5, (-5.5) - 0.0)))))))) && true)), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), vec2(mat4x2(vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), _GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0))), 1.0, 0.0, 1.0, 1.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0)))) && true))) && true))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) ? _GLF_FUZZED(1.7) : _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, sqrt(1.0), 1.0)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x), float(_GLF_FUZZED(5962.0077)), bool(false))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-266.257)), _GLF_IDENTITY(min(_GLF_IDENTITY(float(_GLF_FUZZED(-266.257)), (true ? float(_GLF_FUZZED(-266.257)) : _GLF_FUZZED(58.14))), float(_GLF_FUZZED(_GLF_IDENTITY(-266.257, min(_GLF_IDENTITY(-266.257, (_GLF_IDENTITY(-266.257, min(-266.257, -266.257))) - 0.0), -266.257))))), max(min(_GLF_IDENTITY(float(_GLF_FUZZED(-266.257)), (true ? float(_GLF_FUZZED(-266.257)) : _GLF_FUZZED(58.14))), float(_GLF_FUZZED(_GLF_IDENTITY(-266.257, min(_GLF_IDENTITY(-266.257, (_GLF_IDENTITY(-266.257, min(-266.257, -266.257))) - 0.0), -266.257))))), min(_GLF_IDENTITY(float(_GLF_FUZZED(-266.257)), (true ? float(_GLF_FUZZED(-266.257)) : _GLF_FUZZED(58.14))), float(_GLF_FUZZED(_GLF_IDENTITY(-266.257, min(_GLF_IDENTITY(-266.257, (_GLF_IDENTITY(-266.257, min(-266.257, -266.257))) - 0.0), -266.257)))))))), float(injectionSwitch.x), bool(true))))) > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-266.257)), min(_GLF_IDENTITY(float(_GLF_FUZZED(-266.257)), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)) && true) ? float(_GLF_FUZZED(-266.257)) : _GLF_FUZZED(58.14))), float(_GLF_FUZZED(-266.257)))), float(injectionSwitch.x), bool(true))))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), mat4x3(mat4x3(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), mat4x3(mat4x3(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0], ((vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), mat4x3(mat4x3(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0]) - 0.0), _GLF_FUZZED(3.4)), vec2(_GLF_FUZZED(-7.3), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), mat4x3(mat4x3(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1], clamp((vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), mat4x3(mat4x3(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1], (vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), mat4x3(mat4x3(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1], (vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), mat4x3(mat4x3(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]))), bvec2(false, true)))).y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-266.257)), min(_GLF_IDENTITY(float(_GLF_FUZZED(-266.257)), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)) && true) ? float(_GLF_FUZZED(-266.257)) : _GLF_FUZZED(58.14))), float(_GLF_FUZZED(-266.257)))), float(injectionSwitch.x), bool(true))))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), mat4x3(mat4x3(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), mat4x3(mat4x3(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0], ((vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), mat4x3(mat4x3(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0]) - 0.0), _GLF_FUZZED(3.4)), vec2(_GLF_FUZZED(-7.3), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), mat4x3(mat4x3(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1], clamp((vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), mat4x3(mat4x3(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1], (vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), mat4x3(mat4x3(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1], (vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), mat4x3(mat4x3(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]))), bvec2(false, true)))).y))))), _GLF_IDENTITY(true && (bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-266.257), 1.0 * (_GLF_FUZZED(-266.257)))), min(_GLF_IDENTITY(float(_GLF_FUZZED(-266.257)), (true ? float(_GLF_FUZZED(-266.257)) : _GLF_FUZZED(58.14))), float(_GLF_FUZZED(-266.257)))), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(true && (bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), min(vec2(injectionSwitch), vec2(injectionSwitch))))).x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-266.257), 1.0 * (_GLF_FUZZED(-266.257)))), min(_GLF_IDENTITY(float(_GLF_FUZZED(-266.257)), (true ? float(_GLF_FUZZED(-266.257)) : _GLF_FUZZED(58.14))), float(_GLF_FUZZED(-266.257)))), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y)))), true && (true && (bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-266.257), 1.0 * (_GLF_FUZZED(-266.257)))), min(_GLF_IDENTITY(float(_GLF_FUZZED(-266.257)), (_GLF_IDENTITY(true ? float(_GLF_FUZZED(-266.257)) : _GLF_FUZZED(58.14), min(true ? float(_GLF_FUZZED(-266.257)) : _GLF_FUZZED(58.14), true ? float(_GLF_FUZZED(-266.257)) : _GLF_FUZZED(58.14))))), float(_GLF_FUZZED(-266.257)))), _GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x))), bool(true))))) > injectionSwitch.y)))))), false, false))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-44.80)), vec2(_GLF_FUZZED(384.404), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))), false, false, true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), (! (false)) && true))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6365.2969), _GLF_FUZZED(34.30)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(5797.3533)), float((injectionSwitch)[1]), bool(true)))), bvec2(true, true))).x, float(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6365.2969), _GLF_FUZZED(34.30)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(5797.3533)), float((injectionSwitch)[1]), _GLF_IDENTITY(bool(true), (bool(true)) || false)))), bvec2(true, true))).x, abs(0.0), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), exp(0.0), 1.0, 1.0, 0.0))) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6365.2969), _GLF_FUZZED(34.30)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(5797.3533)), float((injectionSwitch)[1]), bool(true)))), bvec2(true, true))).x, float(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6365.2969), _GLF_FUZZED(34.30)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(5797.3533)), float((injectionSwitch)[1]), bool(true)))), bvec2(true, true))).x, abs(0.0), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), exp(0.0), 1.0, 1.0, 0.0))) > injectionSwitch.y)) && true))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(mod(9.9, -9.4), (mod(9.9, -9.4)) - _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), clamp(determinant(mat2(0.0, 1.0, 0.0, 0.0)), determinant(mat2(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), (true ? determinant(mat2(0.0, 1.0, 0.0, 0.0)) : _GLF_FUZZED(-260.084))))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-35.09))), 0.0, cos(0.0))), max(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-35.09))), 0.0, cos(0.0))), mix(float(_GLF_FUZZED(1.5)), float(float(vec3(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-35.09))), 0.0, cos(0.0)))), bool(true))), float(vec3(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-35.09))), 0.0, cos(0.0)))))), 1.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0)), mix(float(_GLF_FUZZED(-7.0)), float(float(mat4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0))), bool(true))), (true ? _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0)), mix(float(_GLF_FUZZED(-7.0)), float(float(mat4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))))), 0.0, sqrt(0.0), 0.0, 1.0))), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))) || false)))) : _GLF_FUZZED(-6.9))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0)))), float(_GLF_FUZZED(-8814.2803)), bool(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bvec3((false) || false, false, false), bvec3(bvec3(bvec3((false) || false, false, false))))))) && true))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))))) + sin(vec2(0.0, 0.0))).y))))
  return;
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (false ? _GLF_FUZZED(-69724) : 4)), 64, 0);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(4, clamp(4, 4, 4)))), 64, _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)), (int(ivec2(_GLF_IDENTITY(4, (4) | (4)), 0))) >> 0)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))) || false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))) || false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), false))))) && (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false))))))), (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.8)), float(injectionSwitch.y), bool(true)))))))))
      return;
     barrier();
    }
   subgroupAll(_GLF_IDENTITY(false, false || (false)));
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), true)))))), _GLF_IDENTITY(false, ! (! (false))) || (! (! (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, abs(1.0), 1.0), clamp(vec3(injectionSwitch.x, abs(1.0), 1.0), vec3(injectionSwitch.x, abs(1.0), 1.0), vec3(injectionSwitch.x, abs(1.0), 1.0))))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
            }
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false)))))))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))))), (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  barrier();
}
