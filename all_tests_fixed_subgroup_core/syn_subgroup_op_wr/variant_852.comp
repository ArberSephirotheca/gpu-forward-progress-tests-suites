#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_21 {
 mat4 _f0;
 ivec3 _f1;
 mat2 _f2;
 mat3 _f3;
 uint virtual_gid;
} ;

struct _GLF_struct_18 {
 uvec2 _f0;
} ;

struct _GLF_struct_17 {
 ivec4 _f0;
 uint _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_19 {
 mat4x2 _f0;
 ivec2 _f1;
 _GLF_struct_17 _f2;
 _GLF_struct_18 _f3;
 bvec3 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_15 {
 mat4 _f0;
 int _f1;
 vec2 _f2;
 mat3 _f3;
 uvec3 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_14 {
 bool _f0;
 mat2x3 _f1;
 ivec3 _f2;
 uint workgroup_base;
} ;

struct _GLF_struct_13 {
 mat4x2 _f0;
 mat3x2 _f1;
 bvec4 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_12 {
 int _f0;
} ;

struct _GLF_struct_16 {
 _GLF_struct_12 _f0;
 mat4 _f1;
 _GLF_struct_13 _f2;
 _GLF_struct_14 _f3;
 _GLF_struct_15 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_11 {
 vec2 _f0;
} ;

struct _GLF_struct_9 {
 vec3 _f0;
 mat4x3 _f1;
 ivec4 _f2;
 int _f3;
} ;

struct _GLF_struct_8 {
 bvec2 _f0;
 float _f1;
 ivec2 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_7 {
 bvec2 _f0;
 float _f1;
} ;

struct _GLF_struct_6 {
 mat2x3 _f0;
 mat4x3 _f1;
 mat4x2 _f2;
 mat4x2 _f3;
 ivec2 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_10 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
 uvec4 _f2;
 bool _f3;
 _GLF_struct_8 _f4;
 _GLF_struct_9 _f5;
} ;

struct _GLF_struct_4 {
 uint _f0;
 mat4x3 _f1;
 mat3x2 _f2;
 bool _f3;
 int _f4;
 mat3 _f5;
} ;

struct _GLF_struct_3 {
 mat4x3 _f0;
 bool _f1;
 mat2x3 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_2 {
 mat3x4 _f0;
 mat2 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_1 {
 mat2x4 _f0;
} ;

struct _GLF_struct_5 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 uint _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_4 _f4;
} ;

struct _GLF_struct_0 {
 bvec2 _f0;
 int _f1;
} ;

struct _GLF_struct_20 {
 ivec3 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_10 _f3;
 _GLF_struct_11 _f4;
 _GLF_struct_16 _f5;
 _GLF_struct_19 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), mix(vec4(_GLF_FUZZED(-1929.2721), (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[1], _GLF_FUZZED(-37.97), _GLF_FUZZED(0.9)), vec4((normalize(vec4(1.0, 1.0, 1.0, 1.0)))[0], _GLF_FUZZED(-99.64), (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[2], (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[3]), bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))) : _GLF_FUZZED(tanh(1.1)))))), _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-482.437, -2056.4420)))).y))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (injectionSwitch.x > injectionSwitch.y))) || false)))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0)))), float(_GLF_FUZZED((float(106214u) / 8.1))), bool(false))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            return;
           return;
          }
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(93.92)), float(injectionSwitch.x), bool(true))))), injectionSwitch.x)), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)))) < injectionSwitch.y))))) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))), false, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec2((false), false))))) || false), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || _GLF_IDENTITY((false), false || ((false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(20.42)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_20 _GLF_struct_replacement_20 = _GLF_struct_20(ivec3(1), _GLF_struct_0(bvec2(true), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1)))))), _GLF_struct_5(_GLF_struct_1(mat2x4(1.0)), _GLF_struct_2(mat3x4(1.0), _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(transpose(mat2(69.97, 3847.9222, 2935.3728, -88.20))))), mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), _GLF_IDENTITY(clamp(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(20383u) : 1u)), 1u), ~ (~ (clamp(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(20383u) : 1u)), 1u))))), _GLF_struct_3(mat4x3(1.0), true, mat2x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), min(0.0 + (1.0), _GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) - 0.0))))), _GLF_IDENTITY(mat4(1.0), (false ? _GLF_FUZZED(mat4(40.62, -1.4, 7.7, 3114.4896, 3382.5075, 8.2, -50.65, 3066.6263, -867.455, 9.2, -3.6, 262.383, -9.1, 0.7, 6.2, -48.27)) : _GLF_IDENTITY(mat4(1.0), (true ? mat4(1.0) : _GLF_FUZZED(mat4(-2.1, -8.4, -0.8, 45.28, -0.5, 7.3, -1524.0792, 352.990, -2.0, -2.9, -3.3, 68.28, 48.63, -40.14, -8.4, 7.9))))))), _GLF_struct_4(1u, mat4x3(1.0), mat3x2(1.0), true, 1, _GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / _GLF_IDENTITY(mat3(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0), (vec4(1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)) + vec4(0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0), (mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), mat3(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / _GLF_IDENTITY(mat3(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), (_GLF_IDENTITY(1.0, (1.0) / 1.0)) * 1.0), 1.0), (mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-79.10))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(((bvec3(false, false, true) , mat3(-328.656, 323.877, -409.882, -81.12, 3581.9592, -74.82, -1.0, 3.0, 5978.4574)) / -955.930)) : _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / _GLF_IDENTITY(mat3(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), max(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0)))) / 1.0)) * 1.0), 1.0), (mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))))), _GLF_struct_10(_GLF_struct_6(mat2x3(1.0), mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1.3)), bool(false)))), mat4x2(1.0), mat4x2(1.0), ivec2(1), bvec2(true)), _GLF_struct_7(bvec2(_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(44.79), (_GLF_IDENTITY(_GLF_FUZZED(44.79), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(44.79), mix(float(_GLF_FUZZED(68.76)), float(_GLF_FUZZED(44.79)), _GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), (bool(true)) && true)) && true))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(44.79), mix(float(_GLF_FUZZED(68.76)), float(_GLF_FUZZED(44.79)), bool(true)))), float(_GLF_FUZZED(6.3)), bool(false)))) - 0.0)) * 1.0)), bool(false)))), uvec4(1u), _GLF_IDENTITY(true, (true) && true), _GLF_struct_8(bvec2(true), 1.0, ivec2(1), uvec4(1u)), _GLF_struct_9(vec3(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.4)), float(1.0), bool(true)))))), mat4x3(1.0), ivec4(1), 1)), _GLF_struct_11(vec2(1.0)), _GLF_struct_16(_GLF_struct_12(1), mat4(1.0), _GLF_struct_13(mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, (true) && true) ? 1.0 : _GLF_FUZZED(7.0)))), mat3x2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0 * _GLF_IDENTITY((1.0), min((1.0), _GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED(3.9)), float(_GLF_IDENTITY((1.0), ((1.0)) - 0.0)), bool(true)))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), (1.0) / 1.0))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 1.0, 1.0, 0.0))), 1.0, 1.0), (clamp(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 1.0, 1.0, 0.0))), 1.0, 1.0)) / 1.0))))), bvec4(true), bvec4(true)), _GLF_struct_14(true, mat2x3(1.0), ivec3(1), _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(6u)), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) + _GLF_IDENTITY(0u, (0u) << 0u))) | (_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec2(workgroup_size * workgroup_id, 0u)))))) - 0u)), _GLF_struct_15(mat4(1.0), 1, vec2(1.0), mat3(1.0), uvec3(1u), mat3x2(1.0)), uvec3(1u)), _GLF_struct_19(mat4x2(1.0), _GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(ivec2(ivec4(ivec2(1), 1, 1)), clamp(ivec2(ivec4(ivec2(1), 1, 1)), ivec2(ivec4(ivec2(1), 1, 1)), ivec2(ivec4(ivec2(1), 1, 1))))), _GLF_struct_17(ivec4(1), 1u, ivec3(1)), _GLF_struct_18(uvec2(1u)), bvec3(true), bvec3(true)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(3.4) : injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.4) : injectionSwitch.y)), (false ? _GLF_FUZZED(tanh(155.211)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.4) : injectionSwitch.y)), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.4) : injectionSwitch.y)), 1.0, 1.0)), (true ? float(vec3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.4) : injectionSwitch.y)), 1.0, 1.0)) : _GLF_FUZZED(-3138.0699)))))), bool(bool(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.4) : injectionSwitch.y))))))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.4) : injectionSwitch.y)), bool(bool(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.4) : injectionSwitch.y))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.4) : injectionSwitch.y)), bool(bool(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.4) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_21 _GLF_struct_replacement_21 = _GLF_struct_21(mat4(1.0), ivec3(1), mat2(1.0), mat3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))), mix(float(_GLF_FUZZED(vec2(_GLF_IDENTITY(-7.1, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_IDENTITY(_GLF_FUZZED(-0.6), float(vec4(_GLF_FUZZED(-0.6), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))) : -7.1)), 3.8).r)), float(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0)))), bool(true))), _GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0, 0.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(66.31)), bool(false))), (1.0) + 0.0), 1.0))), _GLF_struct_replacement_20._f5._f3.workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, _GLF_IDENTITY(1u, 1u * (1u))))))) * subgroup_size))) + subgroup_local_id);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_struct_replacement_20._f5._f3.workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), int(ivec4(_GLF_IDENTITY((1), max((1), (1))), 0, 1, 0)))))) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), int(ivec4(_GLF_IDENTITY((1), max((1), (1))), 0, 1, 0)))))) % subgroup_size)) ^ 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), ~ (~ (uint(1)))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_21.virtual_gid, clamp(_GLF_struct_replacement_21.virtual_gid, _GLF_struct_replacement_21.virtual_gid, _GLF_struct_replacement_21.virtual_gid)), clamp(_GLF_struct_replacement_21.virtual_gid, _GLF_struct_replacement_21.virtual_gid, _GLF_struct_replacement_21.virtual_gid))], 4, 64, 0);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1172.6013)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           return;
           if(_GLF_DEAD(false))
            return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-265.210)), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(55.12)))))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(checker[_GLF_struct_replacement_21.virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-69.12, 1.6)))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(exp(vec4(0.0, 0.0, 0.0, 0.0))))), 0.0, 0.0, 1.0))).x > injectionSwitch.y)), true, false)))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true))))), bool(bvec2(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0))).x > injectionSwitch.y))), true)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false, true))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))), bvec2(bvec4(bvec2(false, false), false, true))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), true)))), true))), bvec2(bvec4(bvec2(false, false), false, true))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))), bvec2(bvec4(bvec2(false, false), false, true))), false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec3(bvec2(false, false), false)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec3(bvec2(false, false), false))))))))), true))), bvec2(bvec4(bvec2(false, false), false, true))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), false), bvec2(bvec3(bvec2(false, false), true))), bvec2(bvec4(bvec2(false, false), false, true))), false)))))))))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), false, true)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, false)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, false)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, false)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))))))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, false)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), true), bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), true))))))))))), true, _GLF_IDENTITY(true, false || (true)))))), bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), _GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec4((false), false, false, true))), false, true)))), true)))), false))), false, true)))))))))))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false, true))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))), bvec2(bvec4(bvec2(false, false), false, true))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), true)))), true))), bvec2(bvec4(bvec2(false, false), false, true))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))), bvec2(bvec4(bvec2(false, false), false, true))), false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec3(bvec2(false, false), false)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec3(bvec2(false, false), false))))))))), true))), bvec2(bvec4(bvec2(false, false), false, true))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), false), bvec2(bvec3(bvec2(false, false), true))), bvec2(bvec4(bvec2(false, false), false, true))), false)))))))))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), false, true)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, false)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, false)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, false)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))))))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, false)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), true), bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), true))))))))))), true, _GLF_IDENTITY(true, false || (true)))))), bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), _GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec4((false), false, false, true))), false, true)))), true)))), false))), false, true)))))))))))), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false, true))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))), bvec2(bvec4(bvec2(false, false), false, true))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), true)))), true))), bvec2(bvec4(bvec2(false, false), false, true))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))), bvec2(bvec4(bvec2(false, false), false, true))), false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec3(bvec2(false, false), false)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec3(bvec2(false, false), false))))))))), true))), bvec2(bvec4(bvec2(false, false), false, true))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), false), bvec2(bvec3(bvec2(false, false), true))), bvec2(bvec4(bvec2(false, false), false, true))), false)))))))))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), false, true)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, false)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, false)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, false)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))))))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, false)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), true), bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), true))))))))))), true, _GLF_IDENTITY(true, false || (true)))))), bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), _GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec4((false), false, false, true))), false, true)))), true)))), false))), false, true)))))))))))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false, true))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))), bvec2(bvec4(bvec2(false, false), false, true))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), true)))), true))), bvec2(bvec4(bvec2(false, false), false, true))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))), bvec2(bvec4(bvec2(false, false), false, true))), false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec3(bvec2(false, false), false)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec3(bvec2(false, false), false))))))))), true))), bvec2(bvec4(bvec2(false, false), false, true))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), false), bvec2(bvec3(bvec2(false, false), true))), bvec2(bvec4(bvec2(false, false), false, true))), false)))))))))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), false, true)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, false)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, false)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, false)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))))))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, false)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), true), bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), true))))))))))), true, _GLF_IDENTITY(true, false || (true)))))), bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), _GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec4((false), false, false, true))), false, true)))), true)))), false))), false, true)))))))))))), false), false))))))))), (bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), false, true)), true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), false, true)), true))))))))) && true)));
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true)))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)) && true)))))
    return;
   atomicStore(checker[_GLF_struct_replacement_21.virtual_gid], read, 4, 64, _GLF_IDENTITY(4, (4) | 0));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))), true)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))), true))))) || false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), (bool(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(647.996)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch.x)) > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, false)))) && true)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true))))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0), mat4(1.0) * (mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / _GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * vec2(1.0, 1.0)), max(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))), vec2(1.0, 1.0))), vec2(1.0, 1.0)))).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))).x > injectionSwitch.y), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
  return;
 if(_GLF_DEAD(false))
  return;
}
