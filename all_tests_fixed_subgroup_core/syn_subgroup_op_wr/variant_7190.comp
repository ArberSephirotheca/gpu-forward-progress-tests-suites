#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, exp(0.0), 0.0, sin(0.0))), max(vec2(mat2x4(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(exp(0.0), float(vec3(exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, sin(0.0))), vec2(mat2x4(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(-972.905)), bool(false))), abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, exp(0.0), 0.0, sin(0.0))))), (_GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, exp(0.0), 0.0, sin(0.0))), max(vec2(mat2x4(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(length(0.0), 1.0, 0.0)), dot(vec3(1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0), vec3(length(0.0), 1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))))), 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0)), clamp(float(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(length(0.0), 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(length(0.0), 1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0)), float(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(length(0.0), 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(length(0.0), 1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0)), float(mat4(_GLF_IDENTITY(0.0, float(mat2(0.0, abs(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(length(0.0), 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(length(0.0), 1.0, 0.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, sin(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0))))), abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(_GLF_IDENTITY(vec3(0.0, abs(0.0), 1.0), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec3(0.0, abs(0.0), 1.0) : _GLF_FUZZED(vec3(-6.0, 276.886, 40.13))), _GLF_IDENTITY(vec3(mat3x2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec3(0.0, abs(0.0), 1.0) : _GLF_FUZZED(vec3(-6.0, 276.886, 40.13))), 1.0, 1.0, sqrt(1.0))), mix(vec3(_GLF_FUZZED(vec2(-9088.6390, 5530.5438).y), _GLF_FUZZED(3.2), _GLF_FUZZED(-2.3)), vec3((vec3(mat3x2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec3(0.0, abs(0.0), 1.0) : _GLF_FUZZED(vec3(-6.0, 276.886, 40.13))), 1.0, 1.0, sqrt(1.0))))[0], (vec3(mat3x2((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))) ? vec3(0.0, abs(0.0), 1.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(-6.0, max(-6.0, _GLF_IDENTITY(-6.0, float(vec3(-6.0, 1.0, 0.0))))), 276.886, 40.13))), 1.0, 1.0, sqrt(1.0))))[1], (vec3(mat3x2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec3(0.0, abs(0.0), 1.0) : _GLF_FUZZED(vec3(-6.0, 276.886, 40.13))), 1.0, 1.0, sqrt(1.0))))[2]), bvec3(_GLF_IDENTITY(true, true && (true)), true, true))))), vec3(0.0, 0.0, 1.0))), 0.0, exp(0.0), 0.0, sin(0.0))), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, exp(0.0), 0.0, sin(0.0)))))) + vec2(0.0, 0.0))).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(0.2)), bool(false))))), dot(vec3(0.0, _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0))), vec3(0.0, 0.0, 1.0))), 0.0, exp(0.0), 0.0, sin(0.0))), max(vec2(mat2x4(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, exp(0.0), 0.0, sin(0.0))), vec2(mat2x4(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(abs(0.0), float(_GLF_IDENTITY(vec4(abs(0.0), 1.0, log(1.0), 1.0), (vec4(abs(0.0), 1.0, log(1.0), 1.0)) + sin(vec4(0.0, 0.0, 0.0, 0.0))))), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), _GLF_IDENTITY(1.0, 0.0 + (1.0))), vec3(0.0, 0.0, 1.0))), 0.0, exp(0.0), 0.0, sin(0.0)))))).x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(0.2)), bool(false))))), dot(vec3(0.0, _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0))), vec3(0.0, 0.0, 1.0))), 0.0, exp(0.0), 0.0, sin(0.0))), max(vec2(mat2x4(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, exp(0.0), 0.0, sin(0.0))), vec2(mat2x4(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(abs(0.0), float(_GLF_IDENTITY(vec4(abs(0.0), 1.0, log(1.0), 1.0), (vec4(abs(0.0), 1.0, log(1.0), 1.0)) + sin(vec4(0.0, 0.0, 0.0, 0.0))))), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), _GLF_IDENTITY(1.0, 0.0 + (1.0))), vec3(0.0, 0.0, 1.0))), 0.0, exp(0.0), 0.0, sin(0.0)))))).x) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, exp(0.0), 0.0, sin(0.0))), max(vec2(mat2x4(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / round(length(normalize(1.0))))) / sqrt(1.0)), abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, exp(0.0), 0.0, _GLF_IDENTITY(sin(0.0), float(vec2(sin(0.0), 1.0))))), vec2(mat2x4(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, exp(0.0), 0.0, sin(0.0)))))).x, float(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, exp(0.0), 0.0, sin(0.0))), max(vec2(mat2x4(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, exp(0.0), 0.0, sin(0.0))), vec2(mat2x4(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, exp(0.0), 0.0, sin(0.0)))))).x, 0.0, 1.0, 0.0, 1.0, 1.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, exp(0.0), 0.0, sin(0.0))), max(vec2(mat2x4(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / round(length(normalize(1.0))))) / sqrt(1.0)), abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, exp(0.0), 0.0, _GLF_IDENTITY(sin(0.0), float(vec2(sin(0.0), 1.0))))), vec2(mat2x4(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, exp(0.0), 0.0, sin(0.0)))))).x, float(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, exp(0.0), 0.0, sin(0.0))), max(vec2(mat2x4(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, exp(0.0), 0.0, sin(0.0))), vec2(mat2x4(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, exp(0.0), 0.0, sin(0.0)))))).x, 0.0, 1.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED((4.4 * -779.013))), bool(false)))) - determinant(mat4(0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, 0.0, 0.0, 1.0)), (float(mat2(0.0, 0.0, 0.0, 1.0))) - 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))) - 0.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), ! (! (bool(bool(false)))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY((bool(bool(false))), (_GLF_IDENTITY((bool(bool(false))), ! (! (_GLF_IDENTITY((bool(bool(false))), ((bool(bool(false)))) && true))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), false || (_GLF_IDENTITY((false), ((false)) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(8.4))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), ((! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ((! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false)), (bool(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)), bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)), bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false))))))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)), bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)), bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)))))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)), bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)), bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false))))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)), bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)), bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false))))))))))))))))))))) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ((! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false)), (bool(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)), bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)), bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false))))))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)), bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)), bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)))))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)), bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)), bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false))))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)), bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)), bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false))))))))))))))))))))) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec4(_GLF_IDENTITY(bool(bvec3((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ((! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false)), (bool(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)), bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)), bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false))))))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)), bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)), bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)))))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)), bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)), bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false))))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)), bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)), bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false))))))))))))))))))))) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (true)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (! (true))))))))))), ! (! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), true, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (true)))))))))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))) || false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(43.62)), vec2(_GLF_FUZZED(69.77), (injectionSwitch)[1]), bvec2(false, true)))) - vec2(0.0, 0.0)).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), (injectionSwitch.x < injectionSwitch.y)), false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), _GLF_IDENTITY(bool(bool(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))), (bool(bool(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))) || false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) || false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))) ^ uvec3(0u, 0u, 0u)).x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) << (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (true ? uint(2u) : _GLF_FUZZED(packHalf2x16(injectionSwitch)))), uint(2u)))) + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(subgroup_id * subgroup_size))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) - 0u)) - 0u)) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) - 0u)) - _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> 0u, (false ? _GLF_FUZZED(atomicMin(num_workgroup, subgroup_size)) : _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) - 0u)) - 0u)) >> 0u, min((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) - 0u)) - 0u)) >> 0u, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) - 0u)), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) - 0u)))) - 0u)) >> 0u))))) >> 0u)) + subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-24.38), (true ? injectionSwitch.x : _GLF_FUZZED(-24.38)) - 0.0))))) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.1)), float(1.0), bool(true))), injectionSwitch.y))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), 1u, 0u), clamp(uvec3(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), max(_GLF_IDENTITY((subgroup_id), 0u ^ ((subgroup_id))), (subgroup_id)))) + 0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, max(1u, 1u)))))), 0u), uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 1u, 0u), uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 1u, 0u))))) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))) && _GLF_IDENTITY(true, (true) && true))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0))))), float(_GLF_FUZZED(0.6)), bool(false))), 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0 * (1.0)))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0)), dot(vec2(0.0, 0.0), vec2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec4(94.93, _GLF_IDENTITY(6.6, mix(float(_GLF_FUZZED(7843.9493)), float(6.6), bool(true))), _GLF_IDENTITY(-69.82, clamp(_GLF_IDENTITY(-69.82, (_GLF_IDENTITY(-69.82, clamp(-69.82, -69.82, -69.82))) / 1.0), _GLF_IDENTITY(-69.82, max(-69.82, -69.82)), -69.82)), 3.8)) : vec4(0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), mat4(1.0) * (_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (vec4(0.0, 1.0, 0.0, 0.0)) * vec4(1.0, 1.0, 1.0, 1.0))))) / vec4(1.0, 1.0, 1.0, 1.0))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.8) : 0.0))))), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), (0.0) + 0.0)))), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-51.04)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0))), (_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(3267.3192), max(_GLF_FUZZED(3267.3192), _GLF_FUZZED(3267.3192))))))) / vec4(1.0, 1.0, 1.0, 1.0)), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) - 0.0)))), dot(vec3(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4764.8775)), float(0.0), bool(true))), min(0.0, 0.0)))))), float(_GLF_IDENTITY(vec2(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4764.8775)), float(0.0), bool(true))), min(0.0, 0.0)))))), 0.0), clamp(vec2(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4764.8775)), float(0.0), bool(true))), min(0.0, 0.0)))))), 0.0), vec2(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4764.8775)), float(0.0), bool(true))), min(0.0, 0.0)))))), 0.0), vec2(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4764.8775)), float(0.0), bool(true))), min(0.0, 0.0)))))), 0.0))))), dot(_GLF_IDENTITY(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, sin(0.0), 1.0, cos(0.0), 1.0, 0.0))), 0.0), mix(vec4((vec4(0.0, 1.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, sin(0.0), 1.0, cos(0.0), 1.0, 0.0))), 0.0))[0], _GLF_FUZZED(-4.6), (vec4(0.0, 1.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, sin(0.0), 1.0, cos(0.0), 1.0, 0.0))), 0.0))[2], _GLF_FUZZED(-3.2)), vec4(_GLF_FUZZED(-4901.3758), (vec4(0.0, 1.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, sin(0.0), 1.0, cos(0.0), 1.0, 0.0))), 0.0))[1], _GLF_FUZZED(-49.06), (vec4(0.0, 1.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, sin(0.0), 1.0, cos(0.0), 1.0, 0.0))), 0.0))[3]), bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), vec4(0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), true))))) ? 1.0 : _GLF_FUZZED(2217.0346))), 1.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0), 1.0)))), 0.0, 0.0))), 0.0, 0.0), vec3(1.0, 0.0, 0.0)))) * _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED((injectionSwitch / injectionSwitch)))).y)), round(length(normalize(1.0))))), mix(float(float(vec4(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + sqrt(0.0)), 1.0, 0.0, 1.0, 1.0)), 1.0)), dot(vec2(0.0, 0.0), vec2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-5.6 - 484.756))), float(1.0), bool(true))), 1.0)), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec4(94.93, 6.6, -69.82, 3.8)) : vec4(0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (true ? vec4(0.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(fract(vec4(6.4, -249.779, -28.48, -5.5))))), (_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), mat4(1.0) * (vec4(0.0, 1.0, 0.0, 0.0)))) / vec4(1.0, 1.0, 1.0, 1.0))), dot(vec4(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.1))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.8) : 0.0))))), 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0)), dot(vec3(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), (0.0) + 0.0)))), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0), vec3(1.0, 0.0, 0.0))), (_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (vec4(0.0, 1.0, 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))), dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 0.0)))), (vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(3267.3192))))) / vec4(1.0, 1.0, 1.0, 1.0)), vec4(0.0, 1.0, 0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (vec4(0.0, 1.0, 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))), dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 0.0)))), (vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(3267.3192))))) / vec4(1.0, 1.0, 1.0, 1.0)), vec4(0.0, 1.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (vec4(0.0, 1.0, 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))), dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 0.0)))), (vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(3267.3192))))) / vec4(1.0, 1.0, 1.0, 1.0)), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (vec4(0.0, 1.0, 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))), dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 0.0)))), (vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(3267.3192))))) / vec4(1.0, 1.0, 1.0, 1.0)), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (vec4(0.0, 1.0, 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))), dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 0.0)))), (vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(3267.3192))))) / vec4(1.0, 1.0, 1.0, 1.0)), vec4(0.0, 1.0, 0.0, 0.0))))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (vec4(0.0, 1.0, 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))), dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 0.0)))), (vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(3267.3192))))) / vec4(1.0, 1.0, 1.0, 1.0)), vec4(0.0, 1.0, 0.0, 0.0))))), 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), dot(vec3(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.5) : _GLF_IDENTITY(0.0, (0.0) + 0.0)))), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4764.8775)), float(0.0), bool(true))), min(0.0, 0.0)))))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(2217.0346))), 1.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)))), 0.0, 0.0))), 0.0, 0.0), vec3(1.0, 0.0, 0.0)))) * _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED((injectionSwitch / injectionSwitch)))).y)), round(length(normalize(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))), float(_GLF_FUZZED((-4.2 * 8.3))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (_GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))))), false, true), true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bool(true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(virtual_gid, virtual_gid), 0u | (_GLF_IDENTITY(max(virtual_gid, virtual_gid), (max(virtual_gid, virtual_gid)) - (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))], _GLF_IDENTITY(_GLF_IDENTITY(read, clamp(read, read, read)), ~ (~ (_GLF_IDENTITY(read, clamp(read, read, read))))), 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || false)) || false), ! (! (_GLF_IDENTITY(true, (true) || false)))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || false)) || false), ! (! (_GLF_IDENTITY(true, (true) || false)))))))))) || false));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sin(0.0))))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.0)), float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(969.499) : injectionSwitch.y))), bool(true)))))), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), vec4(mat4x3(vec4(injectionSwitch, 0.0, 1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))).y))), false, true)), false)))), true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), false)))), true)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), false)))), true)), false, true)))))))))))
      barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), bool(bvec4(_GLF_IDENTITY(false || (false), bool(bvec3(false || (false), false, true))), false, false, false)))), false || (! (_GLF_IDENTITY(false || (false), bool(bvec4(_GLF_IDENTITY(false || (false), bool(bvec3(false || (false), false, true))), false, false, false)))))))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
