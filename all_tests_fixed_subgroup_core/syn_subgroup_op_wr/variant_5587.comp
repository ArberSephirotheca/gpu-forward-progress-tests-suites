#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        break;
       return;
       if(_GLF_DEAD(false))
        break;
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), (false ? _GLF_FUZZED(6260.9022) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))).x, float(float(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))).x))))))) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       break;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    return;
  }
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uvec4 GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base;
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), ~ (~ (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (0 << _GLF_IDENTITY(int(6), int(6))) ^ (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0), transpose(transpose(mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0))))))))))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     do
      {
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
          return;
         if(_GLF_DEAD(false))
          break;
         continue;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 uvec2 GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy = GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid;
  }
 uvec3 GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | (1 | 0))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         return;
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) | 0)); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0))).x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)), (_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0))) || false)), bool(bool(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)), (_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0))) || false))))))); _injected_loop_counter ++)
          {
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
          continue;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     return;
     if(_GLF_DEAD(false))
      break;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec2(bvec2(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), false)))))))), true && (bool(_GLF_IDENTITY(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec2(bvec2(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), false))))))))))), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) || false)), true && ((_GLF_IDENTITY(! (true), (! (true)) || false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), true && ((true)))) || false), (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), true && ((true)))) || false)) || false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))), (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))))) || false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      continue;
     continue;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 1.0, exp(0.0)), (false ? _GLF_FUZZED(mat2(-8.6, 9416.8715, -411.641, -0.2)) : mat2(injectionSwitch.y, 1.0, 1.0, exp(0.0))))), (float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 1.0, exp(0.0)), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 1.0, exp(0.0)), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch.y, 1.0, 1.0, exp(0.0)))))), (false ? _GLF_FUZZED(mat2(-8.6, 9416.8715, -411.641, -0.2)) : mat2(injectionSwitch.y, 1.0, 1.0, exp(0.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 1.0, exp(0.0)), mat2(mat3(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 1.0, exp(0.0)), (mat2(injectionSwitch.y, 1.0, 1.0, exp(0.0))) / mat2(1.0, 1.0, 1.0, 1.0))))), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 1.0, exp(0.0)), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch.y, 1.0, 1.0, exp(0.0)))))), (false ? _GLF_FUZZED(mat2(-8.6, 9416.8715, -411.641, -0.2)) : mat2(injectionSwitch.y, 1.0, 1.0, exp(0.0)))) : _GLF_FUZZED(mat2(7272.2127, -1.1, 0.6, 536.813)))))) + 0.0))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
        return;
       continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y))))
        continue;
      }
     for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) / _GLF_IDENTITY(1, 0 | (1)))), ((1 << _GLF_IDENTITY(int(5), int(5)))) / 1)), _GLF_IDENTITY(int(int(~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))), ((1 << _GLF_IDENTITY(int(5), int(5)))) / 1)))), (int(int(~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))), ((1 << _GLF_IDENTITY(int(5), int(5)))) / 1))))) * 1)))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(5, (false ? _GLF_FUZZED(-19810) : _GLF_IDENTITY(5, (_GLF_IDENTITY(5, max(5, 5))) | (5)))), (5) / 1)), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : 4, (_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : 4, _GLF_IDENTITY(int(ivec4(false ? _GLF_FUZZED(_injected_loop_counter) : 4, 1, 1, 1)), clamp(int(ivec4(false ? _GLF_FUZZED(_injected_loop_counter) : 4, 1, 1, 1)), int(_GLF_IDENTITY(ivec4(false ? _GLF_FUZZED(_injected_loop_counter) : 4, 1, 1, 1), ivec4(0, 0, 0, 0) + (ivec4(false ? _GLF_FUZZED(_injected_loop_counter) : 4, 1, 1, 1)))), int(ivec4(false ? _GLF_FUZZED(_injected_loop_counter) : 4, 1, 1, 1)))))) ^ 0)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), (int(4)) / 1)), ~ (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(int(4), _GLF_IDENTITY((_GLF_IDENTITY(int(4), int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(9745) : 4)))))) | (int(4)))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(int(4), (int(4)) | (int(4)))), max(int(_GLF_IDENTITY(int(4), (int(4)) | (int(4)))), int(_GLF_IDENTITY(int(4), (int(4)) | (int(4)))))))))))), ~ (~ (_GLF_IDENTITY((int(4)), (_GLF_IDENTITY((int(4)), ((int(4))) - 0)) - 0)))) / 1))), 0 | ((~ (_GLF_IDENTITY(int(4), _GLF_IDENTITY((_GLF_IDENTITY(int(4), int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(9745) : 4)))))) | (int(4)))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(int(4), (int(4)) | (int(4)))), max(int(_GLF_IDENTITY(int(4), (int(4)) | (int(4)))), int(_GLF_IDENTITY(int(4), (int(4)) | (int(4)))))))))))), ~ (~ (_GLF_IDENTITY((int(4)), (_GLF_IDENTITY((int(4)), ((int(4))) - 0)) - 0)))) / 1)))))))))))); _injected_loop_counter --)
      {
       return;
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     continue;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_size.w = subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1.3)), bool(false))))), false)))), true, _GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))
  return;
 do
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (((2383) & 0) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ (int(7))))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false))))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      continue;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (((1 & 1) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / 1) : _GLF_FUZZED(bitfieldExtract(_injected_loop_counter, atomicMin(_injected_loop_counter, 17459), _injected_loop_counter)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
          break;
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     do
      {
       if(_GLF_DEAD(false))
        continue;
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(false, true, true)))))
      {
      }
     else
      {
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y = GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_size.w;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, false))))
      {
       do
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))
      return;
     return;
    }
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(1.0, float(vec3(1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)))), _GLF_IDENTITY(((1.0)), min(_GLF_IDENTITY(((1.0)), _GLF_IDENTITY(float(vec3(((1.0)), 1.0, 1.0)), mix(float(_GLF_FUZZED(-4.4)), float(float(vec3(((1.0)), 1.0, 1.0))), bool(true)))), ((1.0)))) / _GLF_IDENTITY(dot(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), max(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0))), vec4(1.0, 1.0, 1.0, 1.0))), 1.0)), dot(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 1.0)))))))), vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && (true)) ? _GLF_IDENTITY(1.0, 0.0 + (1.0)) : _GLF_FUZZED(_GLF_IDENTITY(distance(vec2(-361.679, 666.494), injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? distance(vec2(-361.679, 666.494), injectionSwitch) : _GLF_FUZZED(9956.3903)))))), 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))))), mat3x4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 1.0))), vec2(1.0, 0.0)), (false ? _GLF_FUZZED(-0.1) : dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), min(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), (false ? _GLF_FUZZED(-0.1) : dot(vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec2(1.0, 0.0))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec2(1.0, 0.0)), (false ? _GLF_FUZZED(-0.1) : dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))))), 1.0, 1.0, _GLF_IDENTITY(1.0, sqrt(1.0) * (1.0)), 0.0, 1.0, abs(0.0), 0.0, 1.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))))))))).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[_GLF_IDENTITY(0, (0) * (0 ^ 1))]) + 0.0), (_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))], (injectionSwitch[0]) + 0.0)) / 1.0), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1])).y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), max(_GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), (_GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), mat2(1.0) * (vec2(0.0, 0.0) + (injectionSwitch)))) / vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), clamp(_GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), vec2(mat2x3(vec2(0.0, 0.0) + (injectionSwitch), 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), clamp(_GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), min(vec2(0.0, 0.0) + (injectionSwitch), vec2(0.0, 0.0) + (injectionSwitch))), vec2(0.0, 0.0) + (injectionSwitch), vec2(0.0, 0.0) + (injectionSwitch))), vec2(0.0, 0.0) + (injectionSwitch)))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), max(vec2(0.0, 0.0) + (injectionSwitch), vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)) + (injectionSwitch)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), max(vec2(0.0, 0.0) + (injectionSwitch), vec2(0.0, 0.0) + (injectionSwitch)))))), 1.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, abs(0.0), _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(7.4))), 0.0, abs(1.0)), (mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), max(vec2(0.0, 0.0) + (injectionSwitch), vec2(0.0, 0.0) + (injectionSwitch)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), max(vec2(0.0, 0.0) + (injectionSwitch), vec2(0.0, 0.0) + (injectionSwitch)))))), 1.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, abs(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))), mat2(1.0) * (mat3x2(_GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))))))), clamp(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))), mat2(1.0) * (mat3x2(_GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))))))), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))), mat2(1.0) * (mat3x2(_GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))))))), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))), mat2(1.0) * (mat3x2(_GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))))))))))), 1.0, 0.0, abs(1.0))) * mat4(1.0))), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), max(vec2(0.0, 0.0) + (injectionSwitch), vec2(0.0, 0.0) + (injectionSwitch)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), max(vec2(0.0, 0.0) + (injectionSwitch), vec2(0.0, 0.0) + (injectionSwitch)))))), 1.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, abs(0.0), 1.0, 0.0, abs(1.0)), (mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), max(vec2(0.0, 0.0) + (injectionSwitch), vec2(0.0, 0.0) + (injectionSwitch)))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), max(vec2(0.0, 0.0) + (injectionSwitch), vec2(0.0, 0.0) + (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), max(vec2(0.0, 0.0) + (injectionSwitch), vec2(0.0, 0.0) + (injectionSwitch)))))), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(tan(vec2(0.0, 0.0)))), _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), max(vec2(0.0, 0.0) + (injectionSwitch), vec2(0.0, 0.0) + (injectionSwitch)))))), 1.0, 1.0, _GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, abs(0.0), 1.0, 0.0, abs(1.0))) * mat4(1.0)))), vec2(vec4(mat2(1.0) * (vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), max(vec2(0.0, 0.0) + (injectionSwitch), vec2(0.0, 0.0) + (injectionSwitch)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), max(vec2(0.0, 0.0) + (injectionSwitch), vec2(0.0, 0.0) + (injectionSwitch)))))), 1.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0), mix(vec4(_GLF_FUZZED((false ? 1.3 : 30.64)), (vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0))[1], (vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0))[2], (vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0))[3]), vec4((vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0))[0], _GLF_FUZZED(-1.3), _GLF_FUZZED(841.841), _GLF_FUZZED(2.6)), bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, abs(0.0), 1.0, 0.0, abs(1.0)), (mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), max(vec2(0.0, 0.0) + (injectionSwitch), vec2(0.0, 0.0) + (injectionSwitch)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), max(vec2(0.0, 0.0) + (injectionSwitch), vec2(0.0, 0.0) + (injectionSwitch)))))), 1.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, abs(0.0), 1.0, 0.0, abs(1.0))) * mat4(1.0)))), 0.0, 1.0))))).y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))))))))))))))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          continue;
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             break;
            }
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && true)))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false))))))
        break;
      }
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))) || false))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (! (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 1.0, 1.0), transpose(transpose(mat2(injectionSwitch, 1.0, 1.0)))))))), (true ? vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 1.0), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 1.0), (mat2(injectionSwitch, 1.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), transpose(transpose(mat2(injectionSwitch, 1.0, 1.0)))))))) : _GLF_FUZZED(vec2(-61.60, 47.11))))).y))))))))))))
  return;
 do
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, min(0, 0)) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
       GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.x = subgroup_local_id;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)), min(gl_NumWorkGroups, gl_NumWorkGroups))) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u)))))).x;
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_size.y = num_workgroup;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       else
        {
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     do
      {
       barrier();
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          continue;
         return;
        }
       if(_GLF_DEAD(false))
        break;
      }
     while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))), true && (_GLF_WRAPPED_LOOP(false))));
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         return;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)))
          {
           do
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 return;
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
           if(_GLF_DEAD(false))
            break;
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              continue;
             break;
            }
          }
        }
       if(_GLF_DEAD(false))
        return;
       do
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) ^ 0))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))
            {
             for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               return;
              }
            }
          }
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         return;
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)), ! (! (bool(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))))))), ! (! (_GLF_IDENTITY(_injected_loop_counter > 0, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), true && ((bool(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > _GLF_IDENTITY(0, (0) ^ _GLF_IDENTITY(0, (0) | (0)))) && true)), ! (! (bool(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))))))), ! (! (_GLF_IDENTITY(_injected_loop_counter > 0, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, bool(bvec4(_injected_loop_counter > 0, true, false, true))), false || (_injected_loop_counter > 0)))), bool(bvec2(bool(bool(_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0)))), true))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0)))), bool(bvec2(bool(bool(_GLF_IDENTITY(_injected_loop_counter > 0, _GLF_IDENTITY(false || (_injected_loop_counter > 0), false || (false || (_injected_loop_counter > 0)))))), true))), false))))))), (_injected_loop_counter > _GLF_IDENTITY(0, (0) * int(_GLF_ONE(1.0, injectionSwitch.y)))) && true)), ! (! (bool(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && _GLF_IDENTITY(true, true && (true)))))))))))))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), true && ((! (_GLF_IDENTITY(false, ! (! (false))))))))))
      return;
     if(_GLF_DEAD(false))
      break;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _GLF_IDENTITY(_injected_loop_counter ++, 0 | (_injected_loop_counter ++)))
      {
       return;
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) * 1.0) > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
      {
       return;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         continue;
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true))
      return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, (_GLF_IDENTITY((true) && true, false || ((true) && true))) && true)), _GLF_IDENTITY(bool(bool(true)), (_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), true && (false || (_GLF_DEAD(false))))))
          return;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               do
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))))))
                  break;
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, true)))))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     do
                      {
                       if(_GLF_DEAD(false))
                        return;
                       return;
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))));
                    }
                   return;
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))))))
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               else
                {
                }
              }
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
                {
                 if(_GLF_DEAD(false))
                  return;
                 return;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             else
              {
               return;
              }
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       else
        {
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            break;
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), true, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), true, false)))) || false, bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), true, false)))) || false, true && ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), true, false)), (bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), true, false))) && true))) || false))))))));
        }
      }
    }
   else
    {
     for(int _injected_loop_counter = (1 & ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) * 1)), int(4)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(799.667)), float(injectionSwitch.y), bool(true)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         return;
         if(_GLF_DEAD(false))
          break;
        }
      }
    }
   else
    {
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0) != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, false || (false)))), bvec3(bvec3(bvec3(bvec3((false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec3(bvec3(bvec3(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))), false || (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec3(bvec4(bvec3(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec3(bvec4(bvec3(bvec3((false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true))))), false)), true))), true)))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec3(bvec3(bvec3(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false)))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = ((0 | 0) & (-87791 - ivec4(-31421, 78976, 87966, -97951).y)); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) | (1))); _injected_loop_counter ++)
    {
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
      {
       return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))) ^ 0u);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, false || (true)) ? injectionSwitch.y : _GLF_FUZZED(134.237)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(134.237)))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(134.237), clamp(true ? injectionSwitch.y : _GLF_FUZZED(134.237), true ? injectionSwitch.y : _GLF_FUZZED(134.237), _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(134.237), clamp(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(134.237), (true ? injectionSwitch.y : _GLF_FUZZED(134.237)) + 0.0), _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(134.237), (false ? _GLF_FUZZED(80.23) : true ? injectionSwitch.y : _GLF_FUZZED(134.237))), true ? injectionSwitch.y : _GLF_FUZZED(134.237)))))))))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(134.237), clamp(true ? injectionSwitch.y : _GLF_FUZZED(134.237), true ? injectionSwitch.y : _GLF_FUZZED(134.237), _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(134.237), clamp(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(134.237), (true ? injectionSwitch.y : _GLF_FUZZED(134.237)) + 0.0), _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(134.237), (false ? _GLF_FUZZED(80.23) : true ? injectionSwitch.y : _GLF_FUZZED(134.237))), true ? injectionSwitch.y : _GLF_FUZZED(134.237))))))), (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(134.237), clamp(true ? injectionSwitch.y : _GLF_FUZZED(134.237), true ? injectionSwitch.y : _GLF_FUZZED(134.237), _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(134.237), clamp(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(134.237), (true ? injectionSwitch.y : _GLF_FUZZED(134.237)) + 0.0), _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(134.237), (false ? _GLF_FUZZED(80.23) : true ? injectionSwitch.y : _GLF_FUZZED(134.237))), _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(134.237), (false ? _GLF_FUZZED(-175.600) : true ? injectionSwitch.y : _GLF_FUZZED(134.237)))))))))) / 1.0))))))) && true))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(134.237)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(134.237)), clamp((true ? injectionSwitch.y : _GLF_FUZZED(134.237)), (true ? injectionSwitch.y : _GLF_FUZZED(134.237)), (true ? injectionSwitch.y : _GLF_FUZZED(134.237))))))))))))) || false))))
  return;
 GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.w = workgroup_base;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.w + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.x, uint(_GLF_IDENTITY(uvec3(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.x, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 0u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.x, 1u, 0u), max(uvec3(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.x, 1u, 0u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base, min(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base, GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base)).xy, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base, min(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base, GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base)).xy, (_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base, min(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base, GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base)).xy) >> uvec2(0u, 0u))) >> uvec2(0u, 0u)).x, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(num_workgroup) : ~ (1u))))), 0u))))))), (_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.x, uint(_GLF_IDENTITY(uvec3(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.x, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 0u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.x, 1u, 0u), max(uvec3(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.x, 1u, 0u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base, min(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base, GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base)).xy, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base, min(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base, GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base)).xy, (_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base, min(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base, GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base)).xy) >> uvec2(0u, 0u))) >> uvec2(0u, 0u)).x, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(1u, min(1u, 1u))))))), 0u)))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.w + subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base, ~ (~ (GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base))).xy.x, max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base, ~ (~ (GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base))).xy.x, 0u ^ (_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base, ~ _GLF_IDENTITY((~ (GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base)), uvec4(0u, 0u, 0u, 0u) | ((~ (GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base))))).xy.x)), _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base, ~ (~ (GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base))).xy.x))), _GLF_IDENTITY(uint(uvec2((GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.w + subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base, ~ (~ (GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base))).xy.x, max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base, ~ (~ (GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base))).xy.x, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base, ~ _GLF_IDENTITY((~ (GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base)), uvec4(0u, 0u, 0u, 0u) | ((~ (GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base))))).xy, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base, ~ _GLF_IDENTITY((~ (GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base)), uvec4(0u, 0u, 0u, 0u) | ((~ (GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base))))).xy, (_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base, ~ _GLF_IDENTITY((~ (GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base)), uvec4(0u, 0u, 0u, 0u) | ((~ (GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base))))).xy) | (_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base, ~ _GLF_IDENTITY((~ (GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base)), uvec4(0u, 0u, 0u, 0u) | ((~ (GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base))))).xy))))).x)), _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base, ~ (~ (GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base))).xy.x))), 1u)), (uint(uvec2((GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.w + subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base, ~ (~ (GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base))).xy.x, max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base, ~ (~ (GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base))).xy.x, 0u ^ (_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base, ~ _GLF_IDENTITY((~ (GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base)), uvec4(0u, 0u, 0u, 0u) | ((~ (GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base))))).xy.x)), _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base, ~ (~ (GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base))).xy.x))), 1u))) >> 0u)) ^ 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.z = virtual_gid;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
  return;
 GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y = _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.z, (GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.z) - 0u);
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, (GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y) - 0u), ~ (_GLF_IDENTITY(~ (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y), 0u ^ (~ _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 0u + (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 0u | (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 1u * (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 1u * (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy, max(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy, GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy)).y))))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 0u + _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 0u | (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 1u * (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 1u * (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy, max(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy, GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy)).y))))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 0u | (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 1u * (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 1u * (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy, max(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy, GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy)).y))))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 0u | (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 1u * (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 1u * (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy, max(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy, GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy)).y))))))), (true ? (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 0u | (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 1u * (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 1u * (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy, max(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy, GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy)).y))))))) : _GLF_FUZZED(subgroup_size))))) : _GLF_FUZZED(subgroup_id))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 0u + _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 0u | (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 1u * (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 1u * (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy, max(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy, GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy)).y))))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 0u | (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 1u * (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 1u * (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy, max(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy, GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy)).y))))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 0u | (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 1u * (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 1u * (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy, max(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy, GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy)).y))))))), (true ? (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 0u | (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 1u * (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 1u * (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy, max(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy, GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy)).y))))))) : _GLF_FUZZED(subgroup_size))))) : _GLF_FUZZED(subgroup_id))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 0u + _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 0u | (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 1u * (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 1u * (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy, max(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy, GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy)).y))))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 0u | (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 1u * (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 1u * (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy, max(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy, GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy)).y))))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 0u | (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 1u * (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 1u * (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy, max(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy, GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy)).y))))))), (true ? (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 0u | (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 1u * (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 1u * (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy, max(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy, GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy)).y))))))) : _GLF_FUZZED(subgroup_size))))) : _GLF_FUZZED(subgroup_id))))), ~ (~ (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 0u + _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 0u | (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 1u * (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 1u * (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy, max(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy, GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy)).y))))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 0u | (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 1u * (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 1u * (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy, max(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy, GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy)).y))))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 0u | (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 1u * (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 1u * (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy, max(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy, GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy)).y))))))), (true ? (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 0u | (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 1u * (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.y, 1u * (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z = _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy, max(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy, GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy)).y))))))) : _GLF_FUZZED(subgroup_size))))) : _GLF_FUZZED(subgroup_id))))))))) << (1u ^ 1u))) << 0u)))))))) << 0u);
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    break;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
       return;
      }
    }
   else
    {
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, max(5, 5))), int(5)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)) || _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)) || _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))))) || false), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), false, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false))), false, false, true)))))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.w + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, clamp(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, _GLF_IDENTITY(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, min(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y)))), clamp(_GLF_IDENTITY(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, clamp(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, _GLF_IDENTITY(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, min(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, clamp(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, _GLF_IDENTITY(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, min(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y)))), (_GLF_IDENTITY(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, clamp(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, _GLF_IDENTITY(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, min(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y))))) ^ 0u), _GLF_IDENTITY(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, clamp(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, _GLF_IDENTITY(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, min(subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y)))))), 0u ^ (_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.w + subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, (_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.w + subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y, uint(uint(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.w + subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y)))) | 0u))) + ((GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.x + 1) % GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y);
 for(int _injected_loop_counter = _GLF_IDENTITY(0, _GLF_IDENTITY((0), int(ivec4((0), 0, 1, int(_GLF_ONE(1.0, injectionSwitch.y))))) << int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), float(_GLF_IDENTITY(mat2(exp(0.0), sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (mat2(exp(0.0), sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)) / mat2(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0), transpose(transpose(mat4x2(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), exp(0.0), 1.0, 0.0)))))).x))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, 0 | (1))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))
      break;
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   if(_GLF_DEAD(false))
    continue;
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       return;
      }
     _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_size.x = next_virtual_gid, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_size.x = next_virtual_gid) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_size.x = next_virtual_gid, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_size.x = next_virtual_gid) / 1u), 0u ^ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_size.x = next_virtual_gid, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_size.x = next_virtual_gid) / 1u)))) | 0u);
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
    break;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-95.53)), bool(false))) < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    break;
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (0 | 0), ! (! (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) != (0 | 0))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, true)))))))
      return;
     continue;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
    }
   else
    {
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))) * 1.0) : _GLF_FUZZED(-3293.3431))))))))) && true), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true) || (false))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_size.x], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec3(! (_GLF_IDENTITY(false, (false) && true)), false, true)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((false))), true && (bool(bool(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), (bool((false))) && true))))))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false)))))), true && (bool(bool(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), (bool((false))) && true)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec3(bvec3((false), false, true)))))), true && ((false)))) && true)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), true && (bool(bool((false)))))), (_GLF_IDENTITY((false), true && ((false)))) && true))), bool(bvec4(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, (false) || false)))), true && (bool(bool((false)))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), true && ((false)))) && _GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_IDENTITY(false, (false) && true))))))), true, true, false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             return;
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-2041.3565 * 7.1))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-384.498)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
        return;
       if(_GLF_DEAD(false))
        return;
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, (true ? _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, max(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)) : _GLF_FUZZED(uvec3(123994u, 63046u, 123221u)))), clamp(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, (true ? _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, max(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)) : _GLF_FUZZED(uvec3(123994u, 63046u, 123221u)))), _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, (true ? _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, max(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)) : _GLF_FUZZED(uvec3(123994u, 63046u, 123221u)))), _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, (true ? _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, max(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid)) : _GLF_FUZZED(uvec3(123994u, 63046u, 123221u)))))).z], 4, 64, 0);
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))
      {
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
        return;
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           return;
          }
        }
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_size.z = read;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      break;
     GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.x = GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_size.z;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(GLF_merged3_0_2_53_2_1_11_3_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidvirtual_gidworkgroup_base.xy.x + _GLF_IDENTITY(1, (1) | (1)) < GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.y)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec2(bool(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec2(bool(_GLF_IDENTITY(false, bool(bool(false)))), false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec2(bool(_GLF_IDENTITY(false, bool(bool(false)))), false))), true)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, bool(bool(false)))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(false, bool(bool(false)))), true), true, true))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, bool(bool(false)))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), true), true, true))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(false, bool(bool(false)))), true), true, true))), true))), false))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, bool(bool(false)))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(false, bool(bool(false)))), true), true, true))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, bool(bool(false)))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), true), true, true))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(false, bool(bool(false)))), true), true, true))), true))), false)))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, bool(bool(false)))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(false, bool(bool(false)))), true), true, true))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, bool(bool(false)))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), true), true, true))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(false, bool(bool(false)))), true), true, true))), true))), false)))))), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, bool(bool(false)))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(false, bool(bool(false)))), true), true, true))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, bool(bool(false)))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), true), true, true))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(false, bool(bool(false)))), true), true, true))), true))), false)))))), false, false))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, bool(bool(false)))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(false, bool(bool(false)))), true), true, true))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, bool(bool(false)))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), true), true, true))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(false, bool(bool(false)))), true), true, true))), true))), false)))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, bool(bool(false)))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(false, bool(bool(false)))), true), true, true))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, bool(bool(false)))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), true), true, true))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(false, bool(bool(false)))), true), true, true))), true))), false)))))), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, bool(bool(false)))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(false, bool(bool(false)))), true), true, true))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, bool(bool(false)))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), true), true, true))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(false, bool(bool(false)))), true), true, true))), true))), false)))))), false, false))))))))))))))))))))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (0 ^ _GLF_IDENTITY(1, ~ (~ (1)))), (_injected_loop_counter != (0 ^ _GLF_IDENTITY(1, ~ (~ (1))))) || false)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), true))), false, false, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) - (0 >> _GLF_IDENTITY(int(6), int(6))))], injectionSwitch[1])).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) - (0 >> _GLF_IDENTITY(int(6), int(6))))], injectionSwitch[1])).y, false, true, false))))))))))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
              continue;
             continue;
            }
           if(_GLF_DEAD(false))
            continue;
           return;
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          continue;
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
            {
             return;
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
          }
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        break;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))))
      return;
    }
   else
    {
     for(int _injected_loop_counter = (0 & 94813); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false, false, true))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          continue;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter)) > (_GLF_IDENTITY(1, _GLF_IDENTITY((1 | 1) * (1), _GLF_IDENTITY(int(int((1 | 1) * (1))), int(ivec3(int(int((1 | 1) * (1))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))))) ^ 1)); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, bool(bool(true))), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(true, bool(bool(true))), false)), true))))))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            return;
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), bool(bvec4(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), false, false, false)))))
                return;
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-932.582, 808.973)) : injectionSwitch)).y))))
                continue;
              }
             if(_GLF_DEAD(false))
              break;
             break;
            }
           do
            {
             atomicStore(checker[GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z], GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.x, _GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) + (0 | 0)))))), _GLF_IDENTITY(~ (~ ((4))), (~ (~ ((4)))) << _GLF_IDENTITY(0, max(0, 0)))))), 64, 4);
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-316.119)), bvec2(true, false))).x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-316.119)), bvec2(true, false))).x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.5), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch)[0] : _GLF_FUZZED(-0.9))), _GLF_FUZZED(-316.119)), bvec2(true, false))).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(4.5), float(float(_GLF_FUZZED(4.5)))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-316.119)), bvec2(true, false))).x > injectionSwitch.y, false, true, false))))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.5), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch)[0] : _GLF_FUZZED(-0.9))), _GLF_FUZZED(-316.119)), bvec2(true, false))).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(4.5), float(float(_GLF_FUZZED(4.5)))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-316.119)), bvec2(true, false))).x > injectionSwitch.y, false, true, false)))))) || false), true), false, false))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))) || false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (! (false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((8.0 - -2.3))), bool(false)))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY((false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY((false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), false || ((false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))) && true), false, false)))), ! (! (_GLF_IDENTITY(! (! (false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), (! (! (false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))) && true)))))), true, false), true)))))))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             continue;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), false || (! (true)))), ! (! (! (_GLF_IDENTITY(! (true), false || (! (true))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (true), false || (! (true)))), false, true), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! (true))), (_GLF_IDENTITY(! (true), false || (! (true)))) && true)) || false)), false, true))))), (bool(bvec3(! (_GLF_IDENTITY(! (true), false || _GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), ! (! ((! (true)))))) && true))), false, true))) || false)))))
      {
       if(_GLF_DEAD(false))
        return;
       do
        {
         return;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          continue;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false))), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), ((_GLF_IDENTITY(false, bool(bvec2(false, false))))) || false) || _GLF_IDENTITY(false, false || (false)))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), (true ? length(normalize(vec3(1.0, 1.0, 1.0))) : _GLF_FUZZED(12.77)))))) || false)))))
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        continue;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, clamp(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), min((_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))), 1.0, 1.0, 0.0, 1.0)), clamp(vec2(mat2x3(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), min((_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))), 1.0, 1.0, 0.0, 1.0)), vec2(mat2x3(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), min((_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))), 1.0, 1.0, 0.0, 1.0)), vec2(mat2x3(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), min((_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))), 1.0, 1.0, 0.0, 1.0)))))).x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x)) > injectionSwitch.y) && true)))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, clamp(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x)) > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, clamp(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x)) > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.9, -15.06)) : injectionSwitch)).x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             return;
            }
          }
        }
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), false || (_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     else
      {
       atomicStore(checker[_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid, (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid) / uvec3(1u, 1u, 1u)).z, min(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z, _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z, 0u | _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z, 0u, 0u, 0u), uvec4(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), uint(uvec3(_GLF_IDENTITY((0u), max((0u), (0u))), 1u, 0u))) + 0u), (0u) | (0u)), 0u)), 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) + uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(uvec3(0u, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) | (0u << _GLF_IDENTITY(uint(4u), uint(4u))))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) + uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u))))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, min(1u, 1u)))) + uvec3(0u, 0u, 0u)))) | 0u)), 0u) ^ (uvec4(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z, 0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), (0u & uint(true)) ^ (_GLF_IDENTITY(0u, 0u | (0u)))))))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z, 0u, 0u, 0u), uvec4(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), (0u) | (0u)), 0u)), 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) + _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) * uvec3(1u, 1u, 1u))), min(_GLF_IDENTITY(uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (_GLF_IDENTITY(uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - 0u))), 1u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - 0u))), 1u)))) + _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, ~ (~ (1u))) : _GLF_FUZZED(workgroup_id))))) + uvec3(0u, 0u, 0u))))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, min(1u, 1u)))) + uvec3(0u, 0u, 0u)))) | 0u)), 0u) ^ (uvec4(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z, 0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))))), uint(uvec4(uint(_GLF_IDENTITY(uvec4(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z, 0u, 0u, 0u), uvec4(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), (0u) | (0u)), 0u)), 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) + uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(uvec3(0u, (_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 0u, 1u), ~ (~ (uvec3(0u, 0u, 1u)))))), 1u, 1u, 0u))) << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) + uvec3(0u, 0u, 0u))))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u), 0u ^ (max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, min(1u, 1u)))) + uvec3(0u, 0u, 0u)))) | 0u)), 0u) ^ (uvec4(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z, 0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))))), 0u, 1u, 1u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z, 0u, 0u, 0u), uvec4(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), (0u) | (0u)), 0u)), 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) * (1u & 1u))) | (uint(4u))))), 1u)) + uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) + uvec3(0u, 0u, 0u))))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, min(1u, 1u)))) + uvec3(0u, 0u, 0u)))) | 0u)), 0u) ^ (uvec4(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z, 0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))))), (uint(_GLF_IDENTITY(uvec4(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z, 0u, 0u, 0u), uvec4(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) + 0u, (_GLF_IDENTITY((0u) + 0u, _GLF_IDENTITY(uint(uvec3((0u) + 0u, 0u, 0u)), clamp(uint(uvec3((0u) + 0u, 0u, 0u)), uint(uvec3((0u) + 0u, 0u, 0u)), uint(uvec3((0u) + 0u, 0u, 0u)))))) / 1u)), (0u) | (0u)), 0u)), 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), max(0u << _GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), uint(uvec2(0u << _GLF_IDENTITY(uint(4u), uint(4u)), 0u)))))), 1u)) + uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) + uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) + uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) + uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) + uvec3(0u, 0u, 0u))))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, min(1u, 1u)))) + uvec3(0u, 0u, 0u)))) | 0u)), 0u) ^ _GLF_IDENTITY((uvec4(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z, 0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))), uvec4(1u, 1u, 1u, 1u) * ((uvec4(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z, 0u, 0u, _GLF_IDENTITY(0u, 0u | (0u))))))))) + 0u))))), ((_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z, 0u, 0u, 0u), uvec4(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), (0u) | (0u)), 0u)), (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), (0u) | (0u)), 0u))) >> 0u), 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) + uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) + uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) + uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) + uvec3(0u, 0u, 0u))))) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, min(1u, 1u)))) + uvec3(0u, 0u, 0u)))) | 0u)), 0u) ^ (uvec4(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z, max(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z, GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z)), 0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | 0u))))) | (0u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z, 0u, 0u, 0u), uvec4(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), (0u) | (0u)), 0u)), 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)) << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) + uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) + uvec3(0u, 0u, 0u))))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, min(1u, 1u)))) + uvec3(0u, 0u, 0u)))) | 0u)), 0u) ^ (uvec4(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z, 0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))))), (true ? uint(_GLF_IDENTITY(uvec4(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z, 0u, 0u, 0u), uvec4(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), (0u) | (0u)), 0u)), 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)) << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) + uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) + uvec3(0u, 0u, 0u))))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, min(1u, 1u)))) + uvec3(0u, 0u, 0u)))) | 0u)), 0u) ^ (uvec4(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z, 0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))))) : _GLF_FUZZED(workgroup_size))), uint(uvec4(uint(_GLF_IDENTITY(uvec4(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z, 0u, 0u, 0u), _GLF_IDENTITY(uvec4(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), (0u) | (0u)), 0u)), min(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), (0u) | (0u)), 0u)), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), (0u) | (0u)), 0u)))), 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) + uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) + uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, min(1u, 1u)))) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, min(1u, 1u)))) + uvec3(0u, 0u, 0u))), max(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, min(1u, 1u)))) + uvec3(0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, min(1u, 1u)))) + uvec3(0u, 0u, 0u)))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, min(1u, 1u)))) + uvec3(0u, 0u, 0u))), min(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, min(1u, 1u)))) + uvec3(0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, min(1u, 1u)))) + uvec3(0u, 0u, 0u)))))))) | 0u)), 0u), ~ (~ (uvec4(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), (0u) | (0u)), 0u)), min(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), (0u) | (0u)), 0u)), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), (0u) | (0u)), 0u)))), 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) + uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) + uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, min(1u, 1u)))) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, min(1u, 1u)))) + uvec3(0u, 0u, 0u))), max(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, min(1u, 1u)))) + uvec3(0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, min(1u, 1u)))) + uvec3(0u, 0u, 0u)))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, min(1u, 1u)))) + uvec3(0u, 0u, 0u))), min(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, min(1u, 1u)))) + uvec3(0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, min(1u, 1u)))) + uvec3(0u, 0u, 0u)))))))) | 0u)), 0u)))) ^ (uvec4(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z, 0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))))), 0u, 1u, 1u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z, 0u, 0u, 0u), uvec4(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), (0u) | (0u)), 0u)), 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), max(0u << _GLF_IDENTITY(uint(4u), uint(4u)), 0u << _GLF_IDENTITY(uint(4u), uint(4u))))), 1u)) + uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), clamp(_GLF_IDENTITY(uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) ^ (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(7u), uvec3(7u)))), uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u))), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) + uvec3(0u, 0u, 0u))))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, min(1u, 1u)))) + uvec3(0u, 0u, 0u)))) | 0u)), 0u) ^ (uvec4(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z, 0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))))), (uint(_GLF_IDENTITY(uvec4(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z, 0u, 0u, 0u), uvec4(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), (0u) | (0u)), 0u)), _GLF_IDENTITY(0u, uint(uvec2(0u, 0u))))), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) + uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) + uvec3(0u, 0u, 0u))))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (_GLF_IDENTITY(1u, min(1u, 1u))) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, min(1u, 1u)))))) + uvec3(0u, 0u, 0u)))) | 0u)), 0u) ^ (uvec4(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z, 0u, 0u, _GLF_IDENTITY(0u, 0u | (0u))))))) + 0u)))))) - 0u)))), GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.z))], GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_sizevirtual_gid.x, 4, _GLF_IDENTITY(64, (64) | 0), 4);
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))));
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
      return;
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         return;
        }
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
}
