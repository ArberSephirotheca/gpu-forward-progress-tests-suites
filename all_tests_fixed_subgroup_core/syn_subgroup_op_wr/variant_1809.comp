#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u)) - (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, max(8u, _GLF_IDENTITY(8u, (8u) + 0u)))), _GLF_IDENTITY(~ (~ (uint(_GLF_IDENTITY(8u, max(8u, _GLF_IDENTITY(8u, (8u) + 0u)))))), 0u ^ (_GLF_IDENTITY(~ (~ (uint(_GLF_IDENTITY(8u, max(8u, _GLF_IDENTITY(8u, (8u) + 0u)))))), (~ (~ (uint(_GLF_IDENTITY(8u, max(8u, _GLF_IDENTITY(8u, (8u) + 0u))))))) | 0u)))))));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))))))).x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u), (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ (_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))) * workgroup_id), _GLF_IDENTITY(0u, max(0u, 0u)) | (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_size * workgroup_id), 0u + ((workgroup_size * workgroup_id))), 0u ^ (_GLF_IDENTITY(~ (workgroup_size * workgroup_id), _GLF_IDENTITY(min(~ (workgroup_size * workgroup_id), ~ (workgroup_size * workgroup_id)), 0u ^ (_GLF_IDENTITY(min(~ (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))) * workgroup_id), ~ (workgroup_size * workgroup_id)), _GLF_IDENTITY((min(~ (workgroup_size * workgroup_id), ~ _GLF_IDENTITY((workgroup_size * workgroup_id), ((workgroup_size * workgroup_id)) | ((workgroup_size * workgroup_id))))), uint(uvec3((min(~ (workgroup_size * workgroup_id), ~ _GLF_IDENTITY((workgroup_size * workgroup_id), ((workgroup_size * workgroup_id)) | ((workgroup_size * workgroup_id))))), 0u, 1u))) | 0u))))))))));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), uint(uvec3(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))), 1u, 1u)))))) / 1u) * subgroup_size, _GLF_IDENTITY(0u, (0u) + 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_id)))) / 1u) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_id)))) / 1u) | ((_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_id)))) / 1u))) * subgroup_size) - 0u))) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u);
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), ((0u)) - _GLF_IDENTITY(0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))) ^ (0u))), _GLF_IDENTITY((0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((0u), 1u, 0u, 1u), clamp(uvec4((0u), 1u, 0u, 1u), _GLF_IDENTITY(uvec4((0u), 1u, 0u, 1u), (uvec4((0u), 1u, 0u, 1u)) | (uvec4((0u), 1u, 0u, 1u))), uvec4((0u), 1u, 0u, 1u)))), 0u ^ (uint(_GLF_IDENTITY(uvec4((0u), 1u, 0u, 1u), clamp(uvec4((0u), 1u, 0u, 1u), _GLF_IDENTITY(uvec4((0u), 1u, 0u, 1u), (uvec4((0u), 1u, 0u, 1u)) | (uvec4((0u), 1u, 0u, 1u))), uvec4((0u), 1u, 0u, 1u))))))), (0u)))), uint(uvec3(_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), ((0u)) - 0u), (0u), (0u)))), 0u, 1u)))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), ((0u)) - _GLF_IDENTITY(0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))) ^ (0u))), _GLF_IDENTITY((0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((0u), 1u, 0u, 1u), clamp(uvec4((0u), 1u, 0u, 1u), _GLF_IDENTITY(uvec4((0u), 1u, 0u, 1u), (uvec4((0u), 1u, 0u, 1u)) | (uvec4((0u), 1u, 0u, 1u))), uvec4((0u), 1u, 0u, 1u)))), 0u ^ (uint(_GLF_IDENTITY(uvec4((0u), 1u, 0u, 1u), clamp(uvec4((0u), 1u, 0u, 1u), _GLF_IDENTITY(uvec4((0u), 1u, 0u, 1u), (uvec4((0u), 1u, 0u, 1u)) | (uvec4((0u), 1u, 0u, 1u))), uvec4((0u), 1u, 0u, 1u))))))), (0u)))), uint(uvec3(_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), ((0u)) - 0u), (0u), (0u)))), 0u, 1u))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1) % subgroup_size);
 do
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0 | (_GLF_IDENTITY(1, clamp(1, 1, 1)))), 1))), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), min((~ (4)), _GLF_IDENTITY((~ (4)), max((~ (4)), (_GLF_IDENTITY(~ (4), (~ (4)) ^ 0)))))))) - _GLF_IDENTITY(0, int(int(0))), min((_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), min((~ (4)), _GLF_IDENTITY((~ (4)), max((~ (4)), (_GLF_IDENTITY(~ (4), (~ (4)) ^ 0)))))))) - _GLF_IDENTITY(0, int(int(0))), _GLF_IDENTITY((_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), min((~ (4)), _GLF_IDENTITY((~ (4)), max((~ (4)), (_GLF_IDENTITY(~ (4), (~ (4)) ^ 0)))))))) - _GLF_IDENTITY(0, int(int(0))), (true ? (_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), min((~ (4)), _GLF_IDENTITY((~ (4)), max((~ (4)), (_GLF_IDENTITY(~ (4), (~ (4)) ^ 0)))))))) - _GLF_IDENTITY(0, int(int(0))) : _GLF_FUZZED(36328)))))), 64, 4);
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))));
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec3(64, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) ^ 0)) ^ _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, 0 + (0)), 0))), 0)), _GLF_IDENTITY(1, (1) / 1) * _GLF_IDENTITY((int(ivec3(64, 1, 0))), int(_GLF_IDENTITY(ivec3((int(ivec3(64, 1, 0))), (1 ^ 1), 1), max(ivec3((int(ivec3(_GLF_IDENTITY(64, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-12962) : _GLF_IDENTITY(64, (_GLF_IDENTITY(64, 1 * (64))) | (64)))), 1, 0))), (1 ^ 1), 1), _GLF_IDENTITY(ivec3((int(ivec3(64, 1, _GLF_IDENTITY(0, 1 * (0))))), (1 ^ 1), 1), (false ? _GLF_FUZZED(ivec3(-78172, -57267, -81059)) : ivec3((int(ivec3(64, 1, 0))), (1 ^ 1), 1))))))))), (_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec3(64, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) ^ 0)) ^ _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, 0 + (0)), 0))), 0)), _GLF_IDENTITY(1, (1) / 1) * _GLF_IDENTITY((int(ivec3(64, 1, 0))), int(_GLF_IDENTITY(ivec3((int(ivec3(64, 1, 0))), (1 ^ 1), 1), max(ivec3((int(ivec3(_GLF_IDENTITY(64, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-12962) : _GLF_IDENTITY(64, (_GLF_IDENTITY(64, 1 * (64))) | (64)))), 1, 0))), (1 ^ 1), 1), _GLF_IDENTITY(ivec3((int(ivec3(64, 1, _GLF_IDENTITY(0, 1 * (0))))), (1 ^ 1), 1), (false ? _GLF_FUZZED(ivec3(-78172, -57267, -81059)) : ivec3((int(ivec3(64, 1, 0))), (1 ^ 1), 1)))))))))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec3(64, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) ^ 0)) ^ _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, 0 + (0)), 0))), 0)), _GLF_IDENTITY(1, (1) / 1) * _GLF_IDENTITY((int(ivec3(64, 1, 0))), int(_GLF_IDENTITY(ivec3((int(ivec3(64, 1, 0))), (1 ^ 1), 1), max(ivec3((int(ivec3(_GLF_IDENTITY(64, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-12962) : _GLF_IDENTITY(64, (_GLF_IDENTITY(64, 1 * (64))) | (64)))), 1, 0))), (1 ^ 1), 1), _GLF_IDENTITY(ivec3((int(ivec3(64, 1, _GLF_IDENTITY(0, 1 * (0))))), (1 ^ 1), 1), (false ? _GLF_FUZZED(ivec3(-78172, -57267, -81059)) : ivec3((int(ivec3(64, 1, 0))), (1 ^ 1), 1))))))))))), _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))) | 0, ((_GLF_IDENTITY(0, (0) | (0))) | 0) + 0)));
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, min(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec2(64, 0)), min(int(ivec2(64, 0)), int(ivec2(64, 0))))), (64) ^ 0), 64)), 4);
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | _GLF_IDENTITY((_GLF_IDENTITY(int(0), ~ (~ _GLF_IDENTITY((int(0)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((int(0)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((int(0)), ((int(0))) >> 0))))), max((~ (_GLF_IDENTITY((int(0)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((int(0)), ((int(0))) >> 0))))), (~ (_GLF_IDENTITY((int(0)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((int(0)), ((int(0))) >> 0))))))))))), 0 ^ ((_GLF_IDENTITY(int(0), _GLF_IDENTITY(~ (~ (int(0))), (_GLF_IDENTITY(~ (~ (int(_GLF_IDENTITY(0, 0 + (0))))), int(ivec4(~ (~ (int(_GLF_IDENTITY(0, 0 + (0))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 1)))) - 0)))))))), clamp((_GLF_IDENTITY(0, min(0, 0)) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(int(0), ~ _GLF_IDENTITY((~ (int(0))), 0 ^ ((~ (int(0)))))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(int(0), ~ (~ (int(0)))))), min(_GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(int(0), ~ (~ (int(0)))))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(int(0), ~ (~ (int(0)))))), (true ? _GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(int(0), ~ (~ (int(0)))))) : _GLF_FUZZED(_injected_loop_counter))))))))), (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | 0)), _GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(int(0), ~ (~ (int(0)))))))), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(2), int(2))) ^ (0))), (int(0)) | (_GLF_IDENTITY(int(0), ~ (~ (int(0))))))), min(0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(2), int(2))) ^ (0))), (int(0)) | (_GLF_IDENTITY(int(0), ~ (~ (int(0))))))), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(2), int(2))) ^ (0))), (int(0)) | (_GLF_IDENTITY(int(0), ~ (~ (int(0))))))), (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(2), int(2))) ^ (0))), (int(0)) | (_GLF_IDENTITY(int(0), ~ (~ (int(0)))))))) >> 0))))))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), ~ (~ (_GLF_IDENTITY(int(5), int(5)))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, min(5, 5))) | ((_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(0, 1), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) / ivec2(1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) / ivec2(1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) / ivec2(1, 1)), (_GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) / ivec2(1, 1))) << ivec2(0, 0))) << ivec2(0, 0))) - _GLF_IDENTITY(ivec2(0, 0), clamp(ivec2(0, 0), ivec2(0, 0), ivec2(0, 0)))), (_GLF_IDENTITY(true ? ivec2(0, 1) : _GLF_FUZZED(ivec2(61846, 38752)), ivec2(0, 0) ^ (_GLF_IDENTITY(true ? ivec2(0, 1) : _GLF_FUZZED(ivec2(61846, 38752)), min(true ? ivec2(0, 1) : _GLF_FUZZED(ivec2(61846, 38752)), true ? ivec2(0, 1) : _GLF_FUZZED(ivec2(61846, 38752)))))))), ivec2(0, 1)), ~ (~ (min(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, max(0, 0)), 1), (_GLF_IDENTITY(true ? _GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) >> ivec2(0, 0)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), min(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), _GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)))), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), _GLF_IDENTITY(1 * (int(ivec3(61846, 1, 0))), (1 * (int(ivec3(_GLF_IDENTITY(61846, 0 | (61846)), 1, 0)))) / 1))), 38752), ~ (~ (ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), _GLF_IDENTITY(1 * (int(ivec3(61846, 1, 0))), (1 * (int(ivec3(_GLF_IDENTITY(61846, 0 | (61846)), 1, 0)))) / 1))), 38752))))), (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))) | (_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))))), 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))) | (_GLF_FUZZED(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0)))))), (~ (_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))))) | 0))), 38752))))))) / (ivec2(1, 1) & ivec2(1, 1))), max(_GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) >> ivec2(0, 0)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))) | (_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))) | (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))))))) / (ivec2(1, 1) & ivec2(1, 1))), clamp(_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))) | (_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))) | (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))))))) / (ivec2(1, 1) & ivec2(1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))) | (_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))) | (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))))))) / (ivec2(1, 1) & ivec2(1, 1))), min(_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))) | (_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))) | (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))))))) / (ivec2(1, 1) & ivec2(1, 1))), _GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))) | (_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))) | (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))))))) / (ivec2(1, 1) & ivec2(1, 1))))), _GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))) | (_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))) | (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))))))) / (ivec2(1, 1) & ivec2(1, 1))))), true ? _GLF_IDENTITY(ivec2(0, 1), (ivec2(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, 0 | (0))))) | (0)), 1)) >> ivec2(0, 0)) : _GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(61846, 1, 0)), (int(ivec3(61846, 1, 0))) | (_GLF_IDENTITY(int(ivec3(61846, 1, 0)), ~ (~ (_GLF_IDENTITY(int(ivec3(61846, 1, 0)), max(int(ivec3(61846, 1, 0)), int(ivec3(61846, 1, 0))))))))), _GLF_IDENTITY(1 * (int(ivec3(61846, 1, 0))), ~ (~ (_GLF_IDENTITY(1 * (int(ivec3(61846, 1, 0))), 1 * (1 * (int(ivec3(61846, 1, 0)))))))))), 38752)), (_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))) | (_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(61846, clamp(_GLF_IDENTITY(61846, int(ivec4(61846, 1, 1, 1))), 61846, 61846)), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(61846, (_GLF_IDENTITY(61846, (61846) >> 0)) | (_GLF_IDENTITY(61846, (_GLF_IDENTITY(61846, int(ivec2(61846, 1)))) >> 0))), 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * _GLF_IDENTITY((int(ivec3(61846, 1, 0))), (_GLF_IDENTITY(true, (true) || false) ? (int(ivec3(61846, 1, 0))) : _GLF_FUZZED(59424))))), 38752))) | (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))))))) / (ivec2(1, 1) & ivec2(1, 1))))))), ivec2(0, 1))))))), clamp(int(_GLF_IDENTITY(ivec2(0, 1), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) / ivec2(1, 1)), (true ? ivec2(0, 1) : _GLF_FUZZED(ivec2(61846, 38752)))), ivec2(0, 1)), ~ (~ (min(_GLF_IDENTITY(ivec2(0, 1), (_GLF_IDENTITY(true ? _GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, (0) | (0)), (1 & 1), 1, 0))), 1), (ivec2(0, 1)) >> ivec2(0, 0)) : _GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(_GLF_IDENTITY(ivec3(61846, 1, 0), (_GLF_IDENTITY(ivec3(61846, 1, 0), max(ivec3(61846, 1, 0), ivec3(61846, 1, 0)))) / ivec3(1, 1, 1)))))), 38752))) | (_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))) | (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, _GLF_IDENTITY(1, int(ivec3(1, 1, 0))), 0))))), 38752))))))) / (ivec2(1, 1) & ivec2(1, 1))), max(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, true, true))))) ? _GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (false ? _GLF_FUZZED((- 33765)) : 0)), 1), (ivec2(0, 1)) >> ivec2(0, 0)) : _GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, int(ivec3(1, 0, 0))), 1, (0 ^ 0)), ivec3(ivec4(ivec3(_GLF_IDENTITY(1, int(ivec3(1, 0, 0))), 1, (0 ^ 0)), 1))))), 0))))), 38752)), (_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))) | (_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, _GLF_IDENTITY(1, clamp(1, 1, 1)), 0))))), 38752)), (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))) | (_GLF_FUZZED(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), (false ? _GLF_FUZZED(-33337) : _GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))))), _GLF_IDENTITY(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), (_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0)))))) + 0), _GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))))), 38752))))))) / (ivec2(1, 1) & ivec2(1, 1))), true ? _GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) >> ivec2(0, 0)) : _GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), min(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), _GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))))), 38752)), (_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))) | (_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * _GLF_IDENTITY((int(ivec3(61846, 1, 0))), clamp((int(ivec3(61846, 1, 0))), (int(ivec3(61846, 1, 0))), _GLF_IDENTITY((int(ivec3(61846, 1, 0))), max((int(ivec3(61846, 1, 0))), (int(ivec3(61846, 1, 0))))))))), 38752)), (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(61846, clamp(61846, 61846, 61846)), 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))) | (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * _GLF_IDENTITY((int(ivec3(61846, 1, 0))), ((int(ivec3(61846, 1, 0)))) - 0))), 38752))))))) / (ivec2(1, 1) & ivec2(1, 1))))))), ivec2(0, 1))))))), int(_GLF_IDENTITY(ivec2(0, 1), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) / ivec2(1, 1)), (true ? ivec2(0, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), min(ivec2(1, 1), ivec2(1, 1)))))) : _GLF_FUZZED(ivec2(61846, 38752)))), ivec2(0, 1)), ~ (~ (min(_GLF_IDENTITY(ivec2(0, _GLF_IDENTITY(1, max(1, 1))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) >> ivec2(0, 0)) : _GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0)))), (_GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))) | 0)), 38752)), (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), _GLF_IDENTITY(1 * (int(ivec3(61846, 1, 0))), clamp(1 * (int(ivec3(61846, 1, 0))), _GLF_IDENTITY(1 * (int(ivec3(61846, 1, 0))), 0 ^ (1 * (int(ivec3(61846, 1, 0))))), 1 * (int(ivec3(61846, 1, 0))))))), 38752))) | (_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))) | (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))))))) / (ivec2(1, 1) & ivec2(1, 1))), max(true ? _GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) >> ivec2(0, 0)) : _GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_FUZZED(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752), (ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)) - ivec2(0, 0)))) | (_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), (_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0)))))) | 0), _GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))))), 38752)), (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, _GLF_IDENTITY(0, (0) - (-68878 & 0)))), 1 * _GLF_IDENTITY((int(ivec3(61846, 1, 0))), max((int(ivec3(61846, 1, 0))), (int(ivec3(61846, 1, 0))))))), 38752))) | (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(61846, 1, 0)), 0 ^ (int(ivec3(61846, 1, 0)))), 1 * (int(ivec3(_GLF_IDENTITY(61846, clamp(_GLF_IDENTITY(61846, (61846) << 0), 61846, 61846)), 1, 0))))), _GLF_IDENTITY(38752, (38752) | (38752))))))))) / (ivec2(1, 1) & ivec2(_GLF_IDENTITY(1, (1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))), 1))), true ? _GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) >> ivec2(0, 0)) : _GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, (0 & 83631), int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(ivec3(0, (0 & 83631), int(_GLF_ZERO(0.0, injectionSwitch.x))))) | 0)))), 1 * (int(_GLF_IDENTITY(ivec3(61846, 1, 0), min(ivec3(61846, 1, 0), ivec3(61846, 1, 0))))))), 38752)), (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(61846, 1, 0), ivec3(0, 0, 0) | (ivec3(61846, 1, 0)))), 1 * (int(ivec3(61846, 1, 0))))), 38752))) | (_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))) | (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))))))) / (ivec2(1, 1) & ivec2(1, 1))))))), ivec2(0, 1))))))), int(_GLF_IDENTITY(ivec2(0, 1), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) / ivec2(1, 1)), (true ? ivec2(0, 1) : _GLF_FUZZED(ivec2(61846, 38752)))), ivec2(0, 1)), ~ (~ (min(_GLF_IDENTITY(ivec2(0, 1), (_GLF_IDENTITY(true ? _GLF_IDENTITY(ivec2(0, 1), (ivec2(_GLF_IDENTITY(0, (0) | 0), 1)) >> ivec2(0, 0)) : _GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), _GLF_IDENTITY(38752, min(38752, 38752)))), (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), _GLF_IDENTITY(38752, 0 ^ (38752))))) | (_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), min(_GLF_IDENTITY(ivec4(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), (ivec4(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))) >> ivec4(0, 0, 0, 0)), ivec4(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))))))) * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))) | (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))))))) / (ivec2(1, 1) & ivec2(1, 1))), max(true ? _GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) >> ivec2(0, 0)) : _GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_FUZZED(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(61846, (61846) >> 0), _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))) | (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (_GLF_IDENTITY(int(ivec3(61846, 1, 0)), min(int(ivec3(61846, 1, 0)), int(ivec3(61846, 1, 0))))))), 38752), clamp(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (_GLF_IDENTITY(int(ivec3(61846, 1, 0)), min(int(ivec3(61846, 1, 0)), int(ivec3(61846, 1, 0))))))), 38752), ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (_GLF_IDENTITY(int(ivec3(61846, 1, 0)), min(int(ivec3(61846, 1, 0)), int(ivec3(61846, 1, 0))))))), 38752), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (_GLF_IDENTITY(int(ivec3(61846, 1, 0)), min(int(ivec3(61846, 1, 0)), int(ivec3(61846, 1, 0))))))), 38752), min(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (_GLF_IDENTITY(int(ivec3(61846, 1, 0)), min(int(ivec3(61846, 1, 0)), int(ivec3(61846, 1, 0))))))), 38752), ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (_GLF_IDENTITY(int(ivec3(61846, 1, 0)), min(int(ivec3(61846, 1, 0)), int(ivec3(61846, 1, 0))))))), 38752)))))), (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))) | (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))))))) / (ivec2(1, 1) & ivec2(1, 1))), true ? _GLF_IDENTITY(ivec2(0, 1), _GLF_IDENTITY((ivec2(0, 1)), ivec2(0, 0) | ((ivec2(0, 1)))) >> ivec2(0, 0)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))) | (_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))) | (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))))))) / (ivec2(1, 1) & ivec2(1, 1))), max(_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))) | (_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))) | (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))))))) / (ivec2(1, 1) & ivec2(1, 1))), _GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))) | (_GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752)), (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))) | (_GLF_FUZZED(ivec2(_GLF_IDENTITY(61846, _GLF_IDENTITY(int(ivec3(61846, 1, 0)), 1 * (int(ivec3(61846, 1, 0))))), 38752))))))) / (ivec2(1, 1) & ivec2(1, 1))))))))), ivec2(0, 1)))))))))) << _GLF_IDENTITY(int(5), int(5))) ^ 0))), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         subgroupAll(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))));
        }
      }
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     atomicStore(checker[_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u), virtual_gid, virtual_gid))], read, _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, _GLF_IDENTITY(max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) * 1)) | (0 | 0)), _GLF_IDENTITY(4, clamp(4, 4, 4))), max(max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4) * 1, ((4) * 1) - 0))) | (0 | 0)), 4), max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) * 1)) | (0 | 0)), 4))))), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(55523) : ~ (4), min(false ? _GLF_FUZZED(55523) : ~ (4), false ? _GLF_FUZZED(55523) : ~ (4))), clamp(false ? _GLF_FUZZED(55523) : ~ (4), false ? _GLF_FUZZED(55523) : ~ (4), false ? _GLF_FUZZED(55523) : ~ (4))))))), 64, 4);
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0))) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y))) + 0.0))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y))) + 0.0))))), bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y))) + 0.0))))), true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))), true, true)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y))) + 0.0))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y))) + 0.0))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true)))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y))) + 0.0))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true)))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y))) + 0.0))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y))) + 0.0))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true)))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(80.03)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (injectionSwitch.x)))) < injectionSwitch.y)), true))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(_GLF_IDENTITY(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), false), bvec3(bvec3(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), false))))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(_GLF_IDENTITY(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), false), bvec3(bvec3(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), false))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(_GLF_IDENTITY(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), false), bvec3(bvec3(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), false))))))), false, false, false))))))))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y))))) + 0.0))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false)))))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true, false)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true, false)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true, false)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true, false)))))))) || false)) || false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true))))))))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y))) + 0.0))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y))) + 0.0))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true)))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y))) + 0.0))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true)))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y))) + 0.0))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y))) + 0.0))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true)))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(80.03)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (injectionSwitch.x)))) < injectionSwitch.y)), true))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(_GLF_IDENTITY(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), false), bvec3(bvec3(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), false))))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(_GLF_IDENTITY(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), false), bvec3(bvec3(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), false))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(_GLF_IDENTITY(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), false), bvec3(bvec3(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), false))))))), false, false, false))))))))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y))))) + 0.0))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false)))))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true, false)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true, false)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true, false)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true, false)))))))) || false)) || false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true))))))))))) && true)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true)), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y))) + 0.0))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y))) + 0.0))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y))) + 0.0))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true)), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y))) + 0.0))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y))) + 0.0))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true)), true)))), false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y) || false)), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).y))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, cos(_GLF_IDENTITY(0.0, 1.0 * (0.0))) * (injectionSwitch.y))) + 0.0))))), ! (_GLF_IDENTITY(! ((_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, cos(_GLF_IDENTITY(0.0, 1.0 * (0.0))) * (injectionSwitch.y))) + 0.0)))))), bool(bvec2(! ((_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, cos(_GLF_IDENTITY(0.0, 1.0 * (0.0))) * (injectionSwitch.y))) + 0.0)))))), false))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y))) + 0.0))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true)))), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 1.0, sin(0.0)))) > injectionSwitch.y), true && _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))))))) || false))))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y))) + 0.0))))), true && (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false)))) || false))))), ((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y))) + 0.0))))), true && (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false)))) || false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true)))))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-247.164), _GLF_FUZZED(vec2(-9.9, 3490.7214).t)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y)), true))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))) + 0.0)), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))) + 0.0))) && true)))), bool(bvec2((_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))) + 0.0)), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))) + 0.0))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5.6)), bool(false))))))))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (true && ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (true && ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (true && ((injectionSwitch.x > injectionSwitch.y))))))) || false)))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y))) + 0.0)), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y))) + 0.0)), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y))) + 0.0))) && true)) && true)))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) / sqrt(1.0)))))))))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true)))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))).y), true && ((injectionSwitch.x > injectionSwitch.y))), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(80.03), max(_GLF_FUZZED(80.03), _GLF_FUZZED(80.03)))), _GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), float(mat2x4(float(injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), float(injectionSwitch.x), float(injectionSwitch.x))), bool(true))), _GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (injectionSwitch.x)))) < injectionSwitch.y)), true))), true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(_GLF_IDENTITY(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), false), bvec3(bvec3(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y), true), false))))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(_GLF_IDENTITY(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), false), bvec3(bvec3(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), true), false))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(_GLF_IDENTITY(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), false), bvec3(bvec3(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), false))))))), _GLF_IDENTITY(false, bool(bool(false))), false, false))))))))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y)), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y))), _GLF_IDENTITY(float(mat4(min(_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y))), exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, abs(0.0), 0.0)), min(_GLF_IDENTITY(float(mat4(min(_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y))), exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, abs(0.0), 0.0)), mix(float(_GLF_FUZZED(1377.3607)), float(float(mat4(min(_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y))), exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, abs(0.0), 0.0))), bool(true))), float(mat4(min(_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y))), exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, abs(0.0), 0.0))))))) + 0.0))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, float(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), dot(vec2(0.0, 1.0), vec2(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), sqrt(1.0), 0.0, 1.0, 1.0, 0.0))) > injectionSwitch.y)))) || false)))))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED((5765.1820 * (+ -377.108))))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true, false)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), true && (! (! (injectionSwitch.x > injectionSwitch.y))))), true, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), true && (! (! (injectionSwitch.x > injectionSwitch.y))))), true, true, false))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true, false)))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true, false))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true, false)))))), ! (! (! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true, false)))))))))))))) || false)) || false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true))))))))))) && true))) && true)))))))
    {
    }
   else
    {
     subgroupAll(_GLF_IDENTITY(true, true && (true)));
    }
  }
}
