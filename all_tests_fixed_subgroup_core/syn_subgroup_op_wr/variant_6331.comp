#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_13 {
 uint read;
 float _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_14 {
 _GLF_struct_13 _f0;
} ;

struct _GLF_struct_15 {
 ivec4 _f0;
 mat2 _f1;
 _GLF_struct_14 _f2;
} ;

struct _GLF_struct_10 {
 bvec3 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_9 {
 uvec3 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_11 {
 _GLF_struct_9 _f0;
 mat2x4 _f1;
 _GLF_struct_10 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_12 {
 mat2 _GLF_SWITCH_1_0v;
 mat2 _f0;
 uint _f1;
 _GLF_struct_11 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_7 {
 bvec3 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_5 {
 mat4 _f0;
 mat2 _f1;
 float _f2;
 ivec2 _f3;
 float _f4;
} ;

struct _GLF_struct_4 {
 vec3 _f0;
} ;

struct _GLF_struct_6 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
} ;

struct _GLF_struct_8 {
 float _f0;
 bool _f1;
 uint subgroup_id;
 _GLF_struct_6 _f2;
 _GLF_struct_7 _f3;
 mat3x2 _f4;
 bool _f5;
} ;

struct _GLF_struct_1 {
 bvec2 _f0;
 bool _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_0 {
 mat2x3 _f0;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 uvec3 _f1;
 _GLF_struct_1 _f2;
} ;

struct _GLF_struct_3 {
 uint virtual_gid;
 mat2x4 _f0;
 bvec3 _f1;
 _GLF_struct_2 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(1.0, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))))), gl_SubgroupID, _GLF_struct_6(_GLF_struct_4(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(729.180)), bool(false))))), 1.0)), (1.0) / 1.0))), _GLF_struct_5(mat4(1.0), mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), 1.0, ivec2(1), 1.0)), _GLF_struct_7(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true))), bvec4(true)), mat3x2(1.0), true);
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))).x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), min(clamp(subgroup_size, subgroup_size, subgroup_size), clamp(subgroup_size, subgroup_size, subgroup_size))), _GLF_IDENTITY(max(_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), max(clamp(subgroup_size, subgroup_size, subgroup_size), clamp(subgroup_size, subgroup_size, subgroup_size))), clamp(subgroup_size, subgroup_size, subgroup_size)), ~ (_GLF_IDENTITY(~ (max(_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), max(clamp(subgroup_size, subgroup_size, subgroup_size), clamp(subgroup_size, subgroup_size, subgroup_size))), clamp(subgroup_size, subgroup_size, subgroup_size))), clamp(~ (max(_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), max(clamp(subgroup_size, subgroup_size, subgroup_size), clamp(subgroup_size, subgroup_size, subgroup_size))), clamp(subgroup_size, subgroup_size, subgroup_size))), ~ (max(_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), max(clamp(subgroup_size, subgroup_size, subgroup_size), clamp(subgroup_size, subgroup_size, subgroup_size))), clamp(subgroup_size, subgroup_size, subgroup_size))), ~ (max(_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), max(clamp(subgroup_size, subgroup_size, subgroup_size), clamp(subgroup_size, subgroup_size, subgroup_size))), clamp(subgroup_size, subgroup_size, subgroup_size)))))))))))) : _GLF_FUZZED(subgroup_local_id))), (_GLF_struct_replacement_8.subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) ^ 0u), (true ? _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), max(_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), max(clamp(subgroup_size, subgroup_size, subgroup_size), clamp(subgroup_size, subgroup_size, subgroup_size))), clamp(subgroup_size, subgroup_size, subgroup_size)))), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), max(_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), max(clamp(subgroup_size, subgroup_size, subgroup_size), clamp(subgroup_size, subgroup_size, subgroup_size))), clamp(subgroup_size, subgroup_size, subgroup_size)))))), min(uint(uint((_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), max(_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), max(clamp(subgroup_size, subgroup_size, subgroup_size), clamp(subgroup_size, subgroup_size, subgroup_size))), clamp(subgroup_size, subgroup_size, subgroup_size)))))), uint(uint((_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), max(_GLF_IDENTITY(_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) >> 0u), max(clamp(subgroup_size, subgroup_size, subgroup_size), clamp(subgroup_size, subgroup_size, subgroup_size))), clamp(subgroup_size, subgroup_size, subgroup_size)))))))))))) : _GLF_FUZZED(subgroup_local_id)))) - 0u), _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base))) ^ (1u ^ 1u)) + _GLF_struct_replacement_8.subgroup_id * subgroup_size, workgroup_base + _GLF_struct_replacement_8.subgroup_id * subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_8.subgroup_id * subgroup_size, (workgroup_base + _GLF_struct_replacement_8.subgroup_id * subgroup_size) + 0u), workgroup_base + _GLF_struct_replacement_8.subgroup_id * subgroup_size), (min(workgroup_base + _GLF_struct_replacement_8.subgroup_id * subgroup_size, workgroup_base + _GLF_struct_replacement_8.subgroup_id * subgroup_size)) << 0u), (min(workgroup_base + _GLF_struct_replacement_8.subgroup_id * subgroup_size, workgroup_base + _GLF_struct_replacement_8.subgroup_id * subgroup_size)) | (min(workgroup_base + _GLF_struct_replacement_8.subgroup_id * subgroup_size, workgroup_base + _GLF_struct_replacement_8.subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))) ^ 0u)) + subgroup_local_id, mat2x4(1.0), bvec3(true), _GLF_struct_2(_GLF_struct_0(mat2x3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(4.2) : 1.0))), float(_GLF_FUZZED(-83.06)), bool(false))))), uvec3(1u), _GLF_struct_1(bvec2(true), true, uvec2(1u))));
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_8.subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | 0u)) / 1u) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, 0u), min(uvec2(subgroup_size, 0u), uvec2(subgroup_size, 0u))), (uvec2(subgroup_size, 0u)) / uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), (_GLF_IDENTITY(1u, (1u) ^ 0u)) >> 0u)) / 1u), 1u))), min(uint(_GLF_IDENTITY(uvec2(subgroup_size, _GLF_IDENTITY(0u, ~ (~ (0u)))), _GLF_IDENTITY((uvec2(subgroup_size, 0u)) / uvec2(1u, 1u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) | (uvec2(subgroup_size, 0u)))), ((_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) | (uvec2(subgroup_size, 0u))))) | (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) ^ uvec2(0u, 0u))))) / _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 1u), (_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) >> uvec2(0u, 0u))) + uvec2(0u, 0u)), ~ (_GLF_IDENTITY(~ (uvec2(1u, 1u)), (~ (uvec2(1u, 1u))) / uvec2(1u, 1u)))), uvec2(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u))) | (_GLF_IDENTITY((uvec2(subgroup_size, 0u)) / uvec2(1u, 1u), (true ? (_GLF_IDENTITY(uvec2(subgroup_size, 0u), min(uvec2(subgroup_size, 0u), _GLF_IDENTITY(uvec2(subgroup_size, 0u), clamp(uvec2(subgroup_size, 0u), uvec2(subgroup_size, 0u), uvec2(subgroup_size, 0u)))))) / uvec2(1u, 1u) : _GLF_FUZZED(uvec2(196593u, 198159u))))))) * uvec2(1u, 1u)))), uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) / uvec2(1u, 1u)))))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) / uvec2(1u, 1u))), min(uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) / uvec2(1u, 1u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) / uvec2(1u, 1u)), (false ? _GLF_FUZZED((uvec2(1764u, 96145u) ^ workgroup_base)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) / uvec2(1u, 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, 0u), clamp(_GLF_IDENTITY(uvec2(subgroup_size, 0u), ~ (~ (uvec2(subgroup_size, 0u)))), uvec2(subgroup_size, 0u), uvec2(subgroup_size, 0u))), (uvec2(subgroup_size, 0u)) / uvec2(1u, 1u)), (_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) / uvec2(1u, 1u))) / uvec2(1u, 1u))) / uvec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (_GLF_IDENTITY(uvec2(subgroup_size, 0u), _GLF_IDENTITY(uvec2(uvec4(uvec2(subgroup_size, 0u), 1u, 1u)), (uvec2(uvec4(uvec2(subgroup_size, 0u), 1u, 1u))) ^ uvec2(0u, 0u)))) / uvec2(1u, 1u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (_GLF_IDENTITY(uvec2(subgroup_size, 0u), _GLF_IDENTITY(uvec2(uvec4(uvec2(subgroup_size, 0u), 1u, 1u)), (uvec2(uvec4(uvec2(subgroup_size, 0u), 1u, 1u))) ^ uvec2(0u, 0u)))) / uvec2(1u, 1u))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (_GLF_IDENTITY(uvec2(subgroup_size, 0u), _GLF_IDENTITY(uvec2(uvec4(uvec2(subgroup_size, 0u), 1u, 1u)), (uvec2(uvec4(uvec2(subgroup_size, 0u), 1u, 1u))) ^ uvec2(0u, 0u)))) / uvec2(1u, 1u))), uint(uvec2(uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (_GLF_IDENTITY(uvec2(subgroup_size, 0u), _GLF_IDENTITY(uvec2(uvec4(uvec2(subgroup_size, 0u), 1u, 1u)), (uvec2(uvec4(uvec2(subgroup_size, 0u), 1u, 1u))) ^ uvec2(0u, 0u)))) / uvec2(1u, 1u))), 0u))), uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (_GLF_IDENTITY(uvec2(subgroup_size, 0u), _GLF_IDENTITY(uvec2(uvec4(uvec2(subgroup_size, 0u), 1u, 1u)), (uvec2(uvec4(uvec2(subgroup_size, 0u), 1u, 1u))) ^ uvec2(0u, 0u)))) / uvec2(1u, 1u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (_GLF_IDENTITY(uvec2(subgroup_size, 0u), _GLF_IDENTITY(uvec2(uvec4(uvec2(subgroup_size, 0u), 1u, 1u)), (uvec2(uvec4(uvec2(subgroup_size, 0u), 1u, 1u))) ^ uvec2(0u, 0u)))) / uvec2(1u, 1u))), ~ (~ (uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (_GLF_IDENTITY(uvec2(subgroup_size, 0u), _GLF_IDENTITY(uvec2(uvec4(uvec2(subgroup_size, 0u), 1u, 1u)), (uvec2(uvec4(uvec2(subgroup_size, 0u), 1u, 1u))) ^ uvec2(0u, 0u)))) / uvec2(1u, 1u))))))))) - 0u), min(uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((num_workgroup ++)) : subgroup_size)), 0u)) / uvec2(1u, 1u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) / uvec2(1u, 1u)), _GLF_IDENTITY((false ? _GLF_FUZZED((uvec2(1764u, 96145u) ^ workgroup_base)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) / uvec2(1u, 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) / uvec2(1u, 1u)), (_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) / _GLF_IDENTITY(uvec2(1u, 1u), (_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) ^ uvec2(0u, 0u))) - uvec2(0u, 0u)))) / uvec2(1u, 1u))) / uvec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), ((false ? _GLF_FUZZED((uvec2(1764u, 96145u) ^ workgroup_base)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) / uvec2(1u, 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) / uvec2(1u, 1u)), (_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) / _GLF_IDENTITY(uvec2(1u, 1u), (_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) ^ uvec2(0u, 0u))) - uvec2(0u, 0u)))) / uvec2(1u, 1u))) / uvec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) | uvec2(0u, 0u)))))))) ^ 0u), 0u, (0u & 173527u), 0u))))) + _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), max(max(1, 1), max(1, 1)))))), min(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, max(1, 1)))), int(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) - 0) | (1)), _GLF_IDENTITY(1, max(1, 1)))))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | ((1))) | (1)), _GLF_IDENTITY(1, max(1, 1)))), clamp(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY((1), min((1), (1))))) | (1)), _GLF_IDENTITY(1, max(1, 1)))), clamp(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, 0 ^ (1)))), max(1, 1)))), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), max(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(1, max(1, 1)))))), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))))), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))))), max(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), clamp(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 | (1)))), _GLF_IDENTITY(1, max(1, 1)))), subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-68174))), (1) | (1)), _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(max(1, 1), 0, 0, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), (ivec4(max(1, 1), 0, 0, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))) ^ ivec4(0, 0, 0, 0)), (_GLF_IDENTITY(ivec4(max(1, 1), 0, 0, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), (ivec4(max(1, 1), 0, 0, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))) ^ ivec4(0, 0, 0, 0))) >> ivec4(0, 0, 0, 0))))))))))), _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1, 0 ^ (1)) : _GLF_FUZZED(36502))), subgroup_local_id + _GLF_IDENTITY(1, (1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), subgroup_local_id + 1))))) % subgroup_size), (true ? ((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))))), max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), max(max(1, 1), max(1, 1)))))), min(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)))), clamp(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), clamp(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), clamp(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, max(1, 1)))))), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1))))), 1)))))), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(ivec3(1, 0, 0))))), 1))), max((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(ivec3(1, 0, 0))))), 1))), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(ivec3(1, 0, 0))))), 1)))))), _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(69543))), _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) * int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(1, max(1, 1)))))))), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) / 1))))))), max(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-68174))), (1) | (1)), _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), int(_GLF_IDENTITY(ivec4(max(1, 1), 0, 0, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), (ivec4(max(1, 1), 0, 0, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))) ^ ivec4(0, 0, 0, 0))))))), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-68174))), (1) | (1)), _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), int(_GLF_IDENTITY(ivec4(max(1, 1), 0, 0, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), (ivec4(max(1, 1), 0, 0, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))) ^ ivec4(0, 0, 0, 0)))))))) ^ 0))))), _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, (1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), subgroup_local_id + 1))))) % subgroup_size) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), min(_GLF_FUZZED(subgroup_size), _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) + 0u))))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), max(max(1, 1), max(1, 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), max(max(1, 1), max(1, 1)))))), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), max(max(1, 1), max(1, 1))))))) | (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), max(max(1, 1), max(1, 1))))))))) >> 0), min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), min(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))))), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), clamp(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), clamp(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-26422) : _GLF_IDENTITY(1, (1) | 0))), max(1, 1)))), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), (1))) | (1)), _GLF_IDENTITY(1, max(1, 1)))))), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))))), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))))), max(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) - 0) | (1)), _GLF_IDENTITY(1, max(1, 1)))), subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-68174))), (1) | (1)), _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), int(_GLF_IDENTITY(ivec4(max(1, 1), 0, 0, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), (ivec4(max(1, 1), 0, 0, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))) ^ ivec4(0, _GLF_IDENTITY(0, (0) ^ 0), 0, 0))))))))))), _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, (1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), subgroup_local_id + 1))))) % subgroup_size), (true ? ((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), max(max(1, 1), max(1, 1)))))), min(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), clamp(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))))))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1))))) << 0), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))))), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1))))) / 1))), clamp(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), (max(1, 1)) - 0)))), clamp(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), (_GLF_IDENTITY(max(1, 1), 0 ^ (max(1, 1)))) - 0)))), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) << 0), _GLF_IDENTITY(1, max(1, 1)))), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))))), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), int(ivec3(_GLF_IDENTITY((1), ((1)) >> (0 & 74227)), 1, 0))) | (1)), _GLF_IDENTITY(1, max(1, 1)))))), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), _GLF_IDENTITY(int(ivec3((1) | (1), 1, 1)), max(int(ivec3((1) | (1), 1, 1)), int(ivec3((1) | (1), 1, 1)))))), _GLF_IDENTITY(1, max(1, 1)))))), max(subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, ! (! (true))) ? 1 : _GLF_FUZZED(-68174))), (1) | (1)), _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), int(_GLF_IDENTITY(ivec4(max(1, 1), 0, 0, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), (ivec4(max(1, 1), 0, 0, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3)))))))) ^ ivec4(0, 0, 0, 0))))))))))), _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, (1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), subgroup_local_id + 1))))) % subgroup_size) : _GLF_FUZZED(subgroup_size)))) | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), max(max(1, 1), max(1, 1)))))), min(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))))))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), clamp(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (false ? _GLF_FUZZED(91617) : _GLF_IDENTITY((1) | (1), 0 | (_GLF_IDENTITY((1) | (1), 0 | ((1) | (1)))))))), _GLF_IDENTITY(1, max(1, 1)))), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)))))), clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (clamp(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) * 1))))))), _GLF_IDENTITY(1, max(1, 1))))))), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))))), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))))), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))))), max(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), ((1)) / 1)), _GLF_IDENTITY(1, max(1, 1)))), subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-68174))), (1) | (1)), _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), int(_GLF_IDENTITY(ivec4(max(1, 1), 0, 0, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), (ivec4(max(1, 1), 0, 0, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))) ^ ivec4(0, 0, 0, 0))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED((+ 66560u)))) + 1, clamp(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, (1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), subgroup_local_id + 1))))) % subgroup_size), (true ? ((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), max(max(1, 1), max(1, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(ivec4(1, 0, 1, 0))))))))))), min(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 1u, 1u))) + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), ~ (~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1))))))))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), max(1, _GLF_IDENTITY(1, (1) / 1))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), clamp(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), clamp(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))))), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) ^ 0) | (1)), _GLF_IDENTITY(1, max(1, 1)))))), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))))), max(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, max(1, 1)))), subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-68174, (_GLF_IDENTITY(-68174, min(-68174, -68174))) | (_GLF_IDENTITY(-68174, ~ (~ (-68174)))))))), (1) | (1)), _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), int(_GLF_IDENTITY(ivec4(max(_GLF_IDENTITY(1, (1) | 0), 1), 0, 0, _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), (((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))) | (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 0 ^ (((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))))))), (ivec4(max(1, 1), 0, 0, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))) ^ ivec4(0, 0, 0, 0))))))))))), _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))) + _GLF_IDENTITY(1, (1) ^ int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))), subgroup_local_id + 1))))) % subgroup_size) : _GLF_FUZZED(subgroup_size)))));
 do
  {
   switch(_GLF_SWITCH(0))
    {
     case 0:
     case 16:
     case 56:
     case 51:
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (1) - 0)), 4, 64, 4);
     break;
     case 85:
     {
      uvec3 _GLF_SWITCH_0_0v[76];
      int _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v, _GLF_SWITCH_0_3v[15];
      if(_GLF_WRAPPED_IF_TRUE(true))
       {
        for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
         {
          if(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bool((false) || _GLF_IDENTITY(false, bool(bvec2(false, false))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))), (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false))), (false) || false)) || false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))), (false) || false))) || false)), _GLF_IDENTITY(false || (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))))))), (false) || false)))), ! (! (false || (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(false, false || (false))), false)))))))))), (false) || false))))))))))
           {
           }
         }
       }
      else
       {
       }
      {
       do
        {
         if(true)
          {
           do
            {
             do
              {
               do
                {
                 uvec2(57409u, 4382u);
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) * 1))
            {
             -72639;
            }
           mat2 _GLF_SWITCH_0_4v;
          }
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED((- 3534.6530)), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_IDENTITY(_GLF_FUZZED(-16.20), min(_GLF_FUZZED(-16.20), _GLF_FUZZED(-16.20)))))))), (false ? _GLF_FUZZED(mix(injectionSwitch, vec2(819.468, 8.3), 1657.0412)) : vec2(_GLF_FUZZED((- 3534.6530)), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_IDENTITY(_GLF_FUZZED(-16.20), min(_GLF_FUZZED(-16.20), _GLF_FUZZED(-16.20)))))))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-1259.7946)), bvec2(true, false))).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, sin(0.0), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0))), sqrt(exp(0.0)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-711.008), mix(float(_GLF_FUZZED(-174.337)), float(_GLF_FUZZED(-711.008)), bool(true)))), (true ? float(_GLF_FUZZED(-711.008)) : _GLF_FUZZED(31.53))), bool(false)))))))));
       _GLF_SWITCH_0_2v;
      }
      uvec4 _GLF_SWITCH_0_5v, _GLF_SWITCH_0_6v[97];
     }
     default:
     for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-0.2))), injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(ivec3(_injected_loop_counter, 1, 0), (ivec3(_injected_loop_counter, 1, 0)) | ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 0))))) | (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter))) ^ 0)) - 0))))) > 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           1;
          }
         else
          {
          }
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(710.630), (_GLF_FUZZED(710.630)) * 1.0), mix(float(_GLF_FUZZED((+ 1.6))), float(true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(710.630), (_GLF_FUZZED(710.630)) * 1.0)), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(710.630, clamp(710.630, 710.630, 710.630))), (_GLF_FUZZED(710.630)) * 1.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp((injectionSwitch.y) / 1.0, (injectionSwitch.y) / 1.0, (injectionSwitch.y) / 1.0)), (false ? _GLF_FUZZED(-5651.6530) : (injectionSwitch.y) / 1.0)))))) - 0.0), (false ? _GLF_FUZZED(2506.1480) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(710.630), (_GLF_FUZZED(710.630)) * 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0))))))), _GLF_IDENTITY((injectionSwitch.y) / 1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(-5651.6530) : (injectionSwitch.y) / 1.0), float(_GLF_IDENTITY(float((false ? _GLF_FUZZED(-5651.6530) : (injectionSwitch.y) / 1.0)), mix(float(_GLF_FUZZED(-0.9)), float(float((false ? _GLF_FUZZED(-5651.6530) : (injectionSwitch.y) / 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) - 0.0))), injectionSwitch.y))) + 0.0)))));
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(ivec4(1), mat2(1.0), _GLF_struct_14(_GLF_struct_13(atomicLoad(buf[_GLF_struct_replacement_3.virtual_gid], 4, 64, 0), 1.0, bvec2(true))));
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)) || false, bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), bool(_GLF_IDENTITY(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, false), bvec3(bvec4(bvec3(! (_GLF_WRAPPED_IF_TRUE(true)), false, false), true)))))))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))
  {
   switch(_GLF_IDENTITY(_GLF_SWITCH(((0 >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(1), int(1)))), _GLF_IDENTITY(0, (0) - 0) | (_GLF_IDENTITY(_GLF_SWITCH(((0 >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(1), int(1)))), 0 | (_GLF_SWITCH(((_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(int(0), max(int(0), int(0)))), max(int(_GLF_IDENTITY(int(0), max(int(0), int(0)))), int(_GLF_IDENTITY(int(0), max(int(0), int(0))))))) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(_GLF_IDENTITY(int(1), 1 * (int(1))), int(1)))))))))
    {
     case 0:
     case 78:
     case 75:
     case 29:
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
      {
       switch(_GLF_SWITCH(0))
        {
         case 0:
         case 32:
         case 95:
         case 52:
         case 20:
         case 91:
         if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(_injected_loop_counter) : int(4))) : _GLF_FUZZED(_injected_loop_counter))), int(4)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) - 0))), (_GLF_IDENTITY(1, (1) | (0 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, 0 + (4))))))) + 0)) ^ 0))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(_injected_loop_counter) : int(4))) : _GLF_FUZZED(_injected_loop_counter))), int(4)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) - 0))), (_GLF_IDENTITY(1, (1) | (0 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, 0 + (4))))))) + 0)) ^ 0))), ~ (~ ((~ (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(_injected_loop_counter) : int(4))) : _GLF_FUZZED(_injected_loop_counter))), int(4)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) - 0))), (_GLF_IDENTITY(1, (1) | (0 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, 0 + (4))))))) + 0)) ^ 0))))))) / 1u)) < subgroup_size, true && (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u + (subgroup_local_id), (false ? _GLF_FUZZED((155792u)) : 0u + (subgroup_local_id)))) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(_injected_loop_counter) : int(4))) : _GLF_FUZZED(_injected_loop_counter))), int(4)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) - 0))), (_GLF_IDENTITY(1, (1) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 | (int(4))), int(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, max(4, 4))))))))) + 0)) ^ 0))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(_injected_loop_counter) : int(4))) : _GLF_FUZZED(_injected_loop_counter))), int(4)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) - 0))), (_GLF_IDENTITY(1, (1) | (0 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, 0 + (4))))))) + 0)) ^ 0)), _GLF_IDENTITY(uint(uvec2(~ (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(_injected_loop_counter) : int(4))) : _GLF_FUZZED(_injected_loop_counter))), int(4)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) - 0))), (_GLF_IDENTITY(1, (1) | (0 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, 0 + (4))))))) + 0)) ^ 0)), 0u)), (uint(uvec2(~ (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(_injected_loop_counter) : int(4))) : _GLF_FUZZED(_injected_loop_counter))), int(4)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) - 0))), (_GLF_IDENTITY(1, (1) | (0 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, 0 + (4))))))) + 0)) ^ 0)), 0u))) - 0u))), ~ (~ ((~ (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(_injected_loop_counter) : int(4))) : _GLF_FUZZED(_injected_loop_counter))), int(4)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) - 0))), (_GLF_IDENTITY(1, (1) | (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) * 1)), int(_GLF_IDENTITY(4, 0 + (4))))))) + 0)) ^ 0))))))) / 1u)) < subgroup_size)))
          {
           atomicStore(checker[_GLF_struct_replacement_3.virtual_gid], _GLF_struct_replacement_15._f2._f0.read, _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(0 ^ (4), (0 ^ (4)) | (0 ^ (4)))), 64, _GLF_IDENTITY(4, (4) * 1));
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), true && (! (_GLF_WRAPPED_IF_TRUE(true)))), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), true && _GLF_IDENTITY((! (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_TRUE(true))), bool(bvec3((! (_GLF_WRAPPED_IF_TRUE(true))), false, true))))))) && true))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               subgroupAll(false);
              }
            }
           else
            {
            }
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               for(int _injected_loop_counter = (1 ^ int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (true)))), (bool(bool(_GLF_IDENTITY(true, true && (true))))) && true)), (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (true)))), (bool(bool(_GLF_IDENTITY(true, true && (true))))) && true)), (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (true)))), (bool(bool(_GLF_IDENTITY(true, true && (true))))) && true)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y))) || false))))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       atomicStore(checker[_GLF_struct_replacement_3.virtual_gid], _GLF_struct_replacement_15._f2._f0.read, 4, 64, 4);
                      }
                     else
                      {
                      }
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))));
                }
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               subgroupAll(true);
              }
            }
           else
            {
            }
          }
         break;
         case 29:
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(false)
            {
             bvec2(true, true);
            }
           else
            {
             _GLF_struct_12 _GLF_struct_replacement_12;
             ivec3 _GLF_SWITCH_1_1v;
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))))))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               switch(_GLF_SWITCH(0))
                {
                 case 83:
                 vec4(2016.4088, 942.249, 3628.7698, 7598.0716);
                 case 72:
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   ;
                  }
                 case 0:
                 case 8:
                 case 62:
                 do
                  {
                   mat4x2 _GLF_SWITCH_1_2v;
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     mat2x3(-1.1, 2568.5294, 7.8, -7382.5977, 6.8, -46.33);
                    }
                   mat2 _GLF_SWITCH_1_3v[77], _GLF_SWITCH_1_4v, _GLF_SWITCH_1_5v;
                   mat3x4 _GLF_SWITCH_1_6v;
                   uint _GLF_SWITCH_1_7v, _GLF_SWITCH_1_8v;
                  }
                 while(true);
                 break;
                 case 76:
                 mat3x4 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
                 case 38:
                 mat3x4 _GLF_SWITCH_2_2v, _GLF_SWITCH_2_3v;
                 default:
                 1;
                }
              }
             else
              {
              }
            }
           ivec3 _GLF_SWITCH_1_9v;
           vec2 _GLF_SWITCH_1_10v, _GLF_SWITCH_1_11v, _GLF_SWITCH_1_12v;
           for(           mat2x4(_GLF_IDENTITY(-174.084, min(-174.084, -174.084)), -0.1, _GLF_IDENTITY(-2.2, (true ? -2.2 : _GLF_IDENTITY(_GLF_FUZZED(5.2), min(_GLF_FUZZED(5.2), _GLF_FUZZED(5.2))))), 798.994, -7.5, 6789.7355, -86.75, -49.67);
 false; bvec3(false, true, false))
            {
             mat2x4 _GLF_SWITCH_1_13v, _GLF_SWITCH_1_14v[16];
             (mat4(2.2, 4496.1056, -3301.9660, -603.590, -2.9, _GLF_IDENTITY(-4017.9506, _GLF_IDENTITY(max(_GLF_IDENTITY(-4017.9506, max(-4017.9506, -4017.9506)), -4017.9506), min(max(_GLF_IDENTITY(-4017.9506, max(-4017.9506, -4017.9506)), -4017.9506), max(_GLF_IDENTITY(-4017.9506, max(-4017.9506, -4017.9506)), -4017.9506)))), 4538.7896, -6085.3655, _GLF_IDENTITY(75.57, min(75.57, 75.57)), -5007.0196, 82.15, _GLF_IDENTITY(-2.0, (_GLF_IDENTITY(-2.0, (true ? _GLF_IDENTITY(-2.0, clamp(-2.0, -2.0, -2.0)) : _GLF_FUZZED(-4.4)))) * cos(determinant(mat2(0.0, 0.0, 0.0, 0.0)))), -222.439, -5.8, 3.6, 926.878) + 288.056);
             ivec4(-70507, -71037, 7725, -29004);
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), true && (false || (true))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-446.877)), bool(false)))) / cos(0.0)) < injectionSwitch.y))))
              {
               do
                {
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
                  {
                  }
                 else
                  {
                   mat3x4(mat3(-247.136, _GLF_IDENTITY(5.4, float(mat2x3(5.4, sqrt(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), (_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), mix(vec3(_GLF_FUZZED(-8.5), _GLF_FUZZED((+ 31.93)), _GLF_FUZZED((false ? 597.408 : -51.99))), vec3((vec3(0.0, 1.0, 1.0))[0], (vec3(0.0, 1.0, 1.0))[1], (vec3(0.0, 1.0, 1.0))[2]), bvec3(true, true, true))), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))) / 1.0), abs(determinant(mat2(0.0, 1.0, 0.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(-8.2, mix(float(-8.2), float(_GLF_FUZZED(-1.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(-8.2, mix(float(-8.2), float(_GLF_FUZZED(-1.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) / 1.0), 2.2, 4.9, -9.1, _GLF_IDENTITY(-4755.2073, clamp(-4755.2073, -4755.2073, -4755.2073)), -1867.1174, 50.11));
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
            }
           else
            {
            }
           {
            mat3x2 _GLF_SWITCH_1_15v, _GLF_SWITCH_1_16v, _GLF_SWITCH_1_17v;
            do
             {
              ;
             }
            while(_GLF_WRAPPED_LOOP(false));
            mat3 _GLF_SWITCH_1_18v[24], _GLF_SWITCH_1_19v, _GLF_SWITCH_1_20v;
            vec2 _GLF_SWITCH_1_21v, _GLF_SWITCH_1_22v[4];
            if(_GLF_WRAPPED_IF_TRUE(true))
             {
              uvec2(46076u, 72080u);
             }
            else
             {
             }
            ;
            if(_GLF_WRAPPED_IF_TRUE(true))
             {
              for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) << 0) : _GLF_FUZZED(_injected_loop_counter))))
               {
                ;
               }
             }
            else
             {
             }
           }
          }
         case 78:
         for(         _GLF_IDENTITY(true, ! (! (true)));
 false; (true ^^ false))
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 ;
                }
               while(true);
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           _GLF_IDENTITY(mat2(-94.03, -1.5, _GLF_IDENTITY(9.1, (9.1) + log(determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), 0.7), (mat2(-94.03, -1.5, _GLF_IDENTITY(9.1, (9.1) + log(determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), 0.7)) * mat2(1.0));
           float _GLF_SWITCH_1_23v;
           bvec2 _GLF_SWITCH_1_24v, _GLF_SWITCH_1_25v;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))))))))))))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true)))), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))))))))))))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true)))), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))))))))))))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true)))), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))))))), false)))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))))))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))))))))))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))))))))))), false))))))))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true)))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))))), true, true), true)))))))), true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), length(vec2(0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0))), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), length(vec2(0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0))))))), clamp(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), length(vec2(0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0))), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), length(vec2(0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0))))))), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), length(vec2(0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0))), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), length(vec2(0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0))))))), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), length(vec2(0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0))), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), length(vec2(0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0)))))))))) < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), true))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), true))))))), true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), true))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), true))))))), true)))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), true))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), true))))))), true)))), false)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))))))), false)))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))))))), false)))))))), true)))))))))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true)))), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))), _GLF_IDENTITY(true, false || (true))), true)))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y)))), (bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), true))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), true))))))), true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), true))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), true))))))), true)))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), true))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))), true))))))), true)))), false)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))))))), false)))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))))))), false)))))))), true)))))))))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true)))), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))), _GLF_IDENTITY(true, false || (true))), true)))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))))) && true))))) || false))
              {
               for(mat2x3 _GLF_SWITCH_1_26v[12], _GLF_SWITCH_1_27v; (mat4x3(7.7, 70.49, 16.09, -4939.2444, -464.196, 1135.0360, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, max(-6.6, -6.6)), clamp(_GLF_IDENTITY(-6.6, max(-6.6, -6.6)), _GLF_IDENTITY(-6.6, max(-6.6, -6.6)), _GLF_IDENTITY(-6.6, max(-6.6, -6.6)))), -385.011, 47.70, 4.5, _GLF_IDENTITY(_GLF_IDENTITY(-22.68, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -22.68 : _GLF_FUZZED(7.2))), max(_GLF_IDENTITY(-22.68, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -22.68 : _GLF_FUZZED(7.2))), _GLF_IDENTITY(-22.68, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -22.68 : _GLF_FUZZED(7.2))))), _GLF_IDENTITY(-6192.3160, max(_GLF_IDENTITY(-6192.3160, min(-6192.3160, -6192.3160)), -6192.3160))) != mat4x3(75.90, -1.5, 336.646, 51.69, -5.2, 2.1, -9765.3765, _GLF_IDENTITY(2.3, 1.0 * (_GLF_IDENTITY(2.3, min(_GLF_IDENTITY(2.3, (true ? 2.3 : _GLF_FUZZED(_GLF_SWITCH_1_23v))), 2.3)))), 7.0, 0.8, -21.97, 2.7)); mat4(-591.704, -6480.3578, 3.8, 2.3, 3788.7305, 73.12, -8.4, _GLF_IDENTITY(-6373.0618, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))), (_GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))), ! (! (bool(bvec4(true, false, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))))))) || false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))), (_GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))), ! (! (bool(bvec4(true, false, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))))))) || false)), false, true), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))), (_GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))), ! (! (bool(bvec4(true, false, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))))))) || false)), false, true))))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(-6373.0618, 0.0 + (_GLF_IDENTITY(-6373.0618, (-6373.0618) * 1.0))), max(_GLF_IDENTITY(-6373.0618, float(mat4x2(-6373.0618, 1.0, 0.0, 0.0, 0.0, 0.0, sin(abs(0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), sqrt(0.0), 0.0, sqrt(0.0), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0))))), -6373.0618)) : _GLF_FUZZED(-648.240))), -0.0, -76.83, -3.6, -999.422, _GLF_IDENTITY(-72.98, float(mat2x4(-72.98, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.5, -6.5, -55.14))
                {
                 switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                  {
                   case 0:
                   ;
                   mat3x4 _GLF_SWITCH_1_28v;
                   case 57:
                   ivec4 _GLF_SWITCH_1_29v, _GLF_SWITCH_1_30v;
                   case 46:
                   for(int _injected_loop_counter = (1 & (0 | 1)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0)) | (_injected_loop_counter)) != (0 & 77360)); _injected_loop_counter --)
                    {
                     _GLF_IDENTITY((atomicAdd(workgroup_base, _GLF_struct_replacement_15._f2._f0.read) + uvec3(workgroup_base, uvec2(_GLF_IDENTITY(_GLF_IDENTITY(181506u, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) ? _GLF_FUZZED(workgroup_size) : 181506u)), uint(uvec3(_GLF_IDENTITY(181506u, (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, true && (true)), true, false))) ? _GLF_FUZZED(workgroup_size) : 181506u)), 0u, 1u))), 127368u))), uvec3(0u, 0u, 0u) ^ ((atomicAdd(workgroup_base, _GLF_struct_replacement_15._f2._f0.read) + uvec3(workgroup_base, uvec2(_GLF_IDENTITY(_GLF_IDENTITY(181506u, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) ? _GLF_FUZZED(workgroup_size) : 181506u)), uint(uvec3(_GLF_IDENTITY(181506u, (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))), true, false))) ? _GLF_FUZZED(workgroup_size) : 181506u)), 0u, 1u))), 127368u)))));
                    }
                   case 32:
                   (++ _GLF_SWITCH_1_29v);
                   mat2x3 _GLF_SWITCH_1_31v[45], _GLF_SWITCH_1_32v, _GLF_SWITCH_1_33v;
                   break;
                   case 75:
                   degrees(vec3(0.5, _GLF_IDENTITY(-7246.0693, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8.3) : -7246.0693)), 7.9));
                   default:
                   _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) / 1), 0), max(ivec2(_GLF_IDENTITY(1, (1) / 1), 0), ivec2(_GLF_IDENTITY(1, (1) / 1), 0))))), 1), ivec3(0, 0, 0) | (ivec3(1, 1, 1)))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 1, _GLF_IDENTITY(1, 0 + (1))), ivec3(0, 0, 0) | (ivec3(1, 1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, int(ivec2(1, 0)))))))))), 0 ^ (int(_GLF_IDENTITY(ivec3(1, 1, _GLF_IDENTITY(1, 0 + (1))), ivec3(0, 0, 0) | (ivec3(1, 1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, int(ivec2(1, 0)))))))))))), int(_GLF_IDENTITY(ivec3(1, 1, 1), ivec3(0, 0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-13394)))) | (ivec3(1, 1, 1))))))), int(int(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 1, 1), ivec3(0, 0, 0) | (ivec3(1, 1, 1)))), min(int(_GLF_IDENTITY(ivec3(1, 1, 1), ivec3(0, 0, 0) | (ivec3(1, 1, 1)))), int(_GLF_IDENTITY(ivec3(1, 1, 1), ivec3(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(true ? 0 : _GLF_FUZZED(-13394), (true ? 0 : _GLF_FUZZED(-13394)) ^ 0)))) | (_GLF_IDENTITY(ivec3(1, 1, 1), max(ivec3(1, 1, 1), ivec3(1, 1, 1))))))))))))) * 1);
                  }
                }
              }
             else
              {
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(true)
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     bvec3(false);
                    }
                  }
                }
               else
                {
                }
               do
                {
                 for(int _injected_loop_counter = (((1 ^ 1) | _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED((_injected_loop_counter << _injected_loop_counter)) : _injected_loop_counter ++)))
                  {
                   false;
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, false, true)))), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(true))), true && ((bool(bool(true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! _GLF_IDENTITY((bool(bool(true))), true && ((bool(bool(true))))))))))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   matrixCompMult(mat3(-9741.3378, -3608.6243, 2198.6658, 3.9, 4953.8183, -6.0, -2.7, 2902.0985, 951.615), mat3(-4.6, 4678.4043, -51.89, 332.108, 52.24, 25.81, 8870.4992, -3768.0606, 3317.1427));
                  }
                }
               else
                {
                }
               do
                {
                 vec3(121.781, 25.34, -500.254);
                }
               while(_GLF_WRAPPED_LOOP(false));
               do
                {
                 69531;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
            }
           for(           (mat3x2(-57.31, 4.3, _GLF_IDENTITY(3760.8250, clamp(3760.8250, 3760.8250, 3760.8250)), 2926.6856, _GLF_IDENTITY(-275.241, _GLF_IDENTITY(float(mat4x2(-275.241, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(8859.4914)), float(float(mat4x2(-275.241, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))), bool(true)), mix(float(_GLF_FUZZED(-5.0)), float(mix(float(_GLF_FUZZED(8859.4914)), float(float(mat4x2(-275.241, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))), bool(true))), bool(true))))), -8027.6948) , mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(963.516, clamp(963.516, 963.516, 963.516)), min(_GLF_IDENTITY(963.516, clamp(963.516, 963.516, 963.516)), _GLF_IDENTITY(_GLF_IDENTITY(963.516, clamp(963.516, 963.516, 963.516)), (_GLF_IDENTITY(963.516, clamp(963.516, 963.516, 963.516))) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(7.0, (true ? 7.0 : _GLF_FUZZED(_GLF_SWITCH_1_23v))), -8.7, -11.38, 3.3, 6.9, 4.9, 3.0));
 false; (_GLF_IDENTITY(-1.7, _GLF_IDENTITY((_GLF_IDENTITY(-1.7, clamp(-1.7, _GLF_IDENTITY(-1.7, (-1.7) - 0.0), -1.7))) - 0.0, max((_GLF_IDENTITY(-1.7, clamp(-1.7, _GLF_IDENTITY(-1.7, (-1.7) - 0.0), -1.7))) - 0.0, (_GLF_IDENTITY(-1.7, clamp(-1.7, _GLF_IDENTITY(-1.7, (-1.7) - 0.0), -1.7))) - 0.0))) + mat3(8.1, 241.545, -76.04, 58.62, -7.6, -0.5, _GLF_IDENTITY(6.8, min(6.8, 6.8)), _GLF_IDENTITY(-57.90, max(-57.90, -57.90)), -4.7)))
            {
             uvec4 _GLF_SWITCH_1_34v, _GLF_SWITCH_1_35v;
             do
              {
               mat4(2.1, _GLF_IDENTITY(-1453.5017, clamp(-1453.5017, -1453.5017, _GLF_IDENTITY(_GLF_IDENTITY(-1453.5017, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-6.4), max(_GLF_FUZZED(-6.4), _GLF_FUZZED(-6.4)))), float(-1453.5017), bool(true))), max(_GLF_IDENTITY(_GLF_IDENTITY(-1453.5017, clamp(_GLF_IDENTITY(_GLF_IDENTITY(-1453.5017, min(-1453.5017, -1453.5017)), max(_GLF_IDENTITY(-1453.5017, min(-1453.5017, -1453.5017)), _GLF_IDENTITY(-1453.5017, min(-1453.5017, -1453.5017)))), -1453.5017, _GLF_IDENTITY(-1453.5017, (_GLF_IDENTITY(false ? _GLF_FUZZED(395.185) : -1453.5017, (false ? _GLF_FUZZED(395.185) : -1453.5017) - tan(0.0)))))), (-1453.5017) / 1.0), -1453.5017)))), -0.0, 9.0, -48.14, _GLF_IDENTITY(_GLF_IDENTITY(-198.099, mix(float(_GLF_IDENTITY(-198.099, min(-198.099, -198.099))), float(_GLF_FUZZED(-1204.9992)), bool(false))), (false ? _GLF_FUZZED(9.6) : -198.099)), _GLF_IDENTITY(-4868.2039, min(-4868.2039, -4868.2039)), 52.64, _GLF_IDENTITY(5792.6577, mix(float(5792.6577), float(_GLF_FUZZED(-38.85)), bool(false))), -45.02, -963.183, -3.5, 5.7, _GLF_IDENTITY(5.4, float(_GLF_IDENTITY(mat3x2(5.4, 1.0, 1.0, 0.0, log(1.0), abs(0.0)), (mat3x2(5.4, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (float(_GLF_IDENTITY(float(1.0), min(float(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0)))), (true ? _GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0)))), float(mat2x3(min(1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0)))), 1.0, 0.0, 1.0, 0.0, 1.0))) : _GLF_FUZZED(atan(_GLF_SWITCH_1_23v, -6.8)))))), float(_GLF_FUZZED(-4.5)), bool(false)))), float(1.0))))) * 1.0)), 1.0)), 0.0, log(1.0), abs(0.0))) * mat3(1.0)))), -14.71, 22.70);
              }
             while(_GLF_WRAPPED_LOOP(false));
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) >> 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               mat4x3(33.95, -203.808, 1.3, 291.923, _GLF_IDENTITY(99.09, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(99.09, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(cos(0.0), (_GLF_IDENTITY(cos(0.0), (true ? cos(0.0) : _GLF_FUZZED(_GLF_SWITCH_1_23v)))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), 0.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_ONE(1.0, injectionSwitch.y))), (mat4x2(99.09, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 0.0, 1.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(float(float(_GLF_IDENTITY(mat4x2(99.09, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y))), cos(0.0), 0.0, 1.0), (mat4x2(99.09, 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, abs(1.0), 1.0, cos(0.0), 1.0)), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-9831.7263, 4871.2285)) : vec2(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(abs(1.0), max(abs(1.0), _GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0))))), 1.0, cos(0.0), _GLF_IDENTITY(1.0, float(float(1.0))))), _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-9831.7263, 4871.2285)) : vec2(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), abs(1.0), 1.0, cos(0.0), 1.0))) * mat2(1.0), min(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-9831.7263, 4871.2285), mix(vec2(_GLF_FUZZED(-7747.7819), _GLF_FUZZED(float(88746))), vec2((vec2(-9831.7263, 4871.2285))[0], (vec2(-9831.7263, 4871.2285))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) : vec2(mat4x2(injectionSwitch, 0.0, 1.0, abs(1.0), 1.0, cos(0.0), 1.0))) * mat2(1.0), ((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-9831.7263, 4871.2285), mix(vec2(_GLF_FUZZED(-7747.7819), _GLF_FUZZED(float(88746))), vec2((vec2(-9831.7263, 4871.2285))[0], (vec2(-9831.7263, 4871.2285))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) : vec2(mat4x2(injectionSwitch, 0.0, 1.0, abs(1.0), 1.0, cos(0.0), 1.0))) * mat2(1.0)) * mat2(1.0)), (false ? _GLF_FUZZED(vec2(-9831.7263, 4871.2285)) : _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, abs(1.0), 1.0, cos(_GLF_IDENTITY(0.0, 1.0 * (0.0))), 1.0)), max(_GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, abs(1.0), 1.0, cos(_GLF_IDENTITY(0.0, 1.0 * (0.0))), 1.0)), (true ? vec2(mat4x2(injectionSwitch, 0.0, 1.0, abs(1.0), 1.0, cos(_GLF_IDENTITY(0.0, 1.0 * (0.0))), 1.0)) : _GLF_FUZZED(vec2(-9559.8898, 9.9)))), vec2(mat4x2(injectionSwitch, 0.0, 1.0, abs(1.0), 1.0, cos(_GLF_IDENTITY(0.0, 1.0 * (0.0))), 1.0))))) * mat2(1.0))))))).y), cos(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(-8.1)), bool(false)))), 0.7, -3187.2343, 44.56, -627.865, 944.404, _GLF_IDENTITY(-88.79, mix(float(_GLF_IDENTITY(-88.79, _GLF_IDENTITY(min(-88.79, -88.79), float(mat4x3(_GLF_IDENTITY(min(-88.79, -88.79), (min(-88.79, -88.79)) + 0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, abs(1.0)), vec4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, abs(1.0)), vec4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)), max(dot(vec4(1.0, 1.0, 1.0, abs(1.0)), vec4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, abs(1.0)), vec4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0))))), cos(0.0), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0)), cos(0.0), 1.0, 0.0, 1.0, 1.0))))), float(_GLF_FUZZED(1.5)), _GLF_IDENTITY(bool(false), (bool(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -6.0);
              }
             ivec4 _GLF_SWITCH_1_36v;
             ivec4 _GLF_SWITCH_1_37v, _GLF_SWITCH_1_38v;
             ;
            }
           if(false)
            {
             uint _GLF_SWITCH_1_39v, _GLF_SWITCH_1_40v;
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               (_GLF_SWITCH_1_23v - mat3x4(-402.246, 101.320, 86.57, 4.2, 1.1, -72.49, 6160.4279, -904.644, 2749.9862, 97.24, 9.7, 0.4));
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, min(1, 1))); _injected_loop_counter ++)
                {
                 (ivec4(42411, -23676, -6785, -21498));
                }
              }
             else
              {
              }
            }
           if(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))
            {
             uvec3(_GLF_IDENTITY(121869u, 0u ^ (121869u)), 179433u, 51955u);
             ivec4 _GLF_SWITCH_1_41v[13], _GLF_SWITCH_1_42v;
             bool _GLF_SWITCH_1_43v;
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               (uvec3(116635u, _GLF_IDENTITY(25414u, (25414u) >> 0u), 116266u) ^ uvec3(118188u, 92802u, 72927u));
              }
            }
           else
            {
             do
              {
               do
                {
                 do
                  {
                   true;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
              }
             while(_GLF_WRAPPED_LOOP(false));
             uvec2(_GLF_IDENTITY(_GLF_IDENTITY(27017u, (_GLF_IDENTITY(27017u, _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 0u, 1u))), _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))), 1u)))) * (27017u))) | 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : 27017u), 0u | ((_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(workgroup_base) : 27017u)))), 49414u);
             _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch));
             mat3x2 _GLF_SWITCH_1_44v;
             mat4x2 _GLF_SWITCH_1_45v, _GLF_SWITCH_1_46v, _GLF_SWITCH_1_47v[89];
             ivec4 _GLF_SWITCH_1_48v[51], _GLF_SWITCH_1_49v[37], _GLF_SWITCH_1_50v;
             (false ? (uvec3(189186u, _GLF_IDENTITY(738u, (738u) | (738u)), 59489u) - uvec3(144954u, 140486u, 111860u)) : uvec3(115716u, 153092u, 28451u));
             ivec2 _GLF_SWITCH_1_51v;
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) << (0 >> _GLF_IDENTITY(int(8), int(8)))))))
              {
               do
                {
                 transpose(mat3(490.726, 88.65, -3.5, -586.362, 2.8, -6.5, -0.1, -89.48, -518.605));
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
          }
         default:
         1;
        }
      }
     break;
     case 93:
     {
      vec3 _GLF_SWITCH_2_0v[29], _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v;
      {
       mat3x4 _GLF_SWITCH_2_3v;
      }
     }
     case 84:
     bvec2 _GLF_SWITCH_2_4v, _GLF_SWITCH_2_5v, _GLF_SWITCH_2_6v;
     default:
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))
      {
       1;
      }
     else
      {
      }
    }
  }
 else
  {
  }
}
