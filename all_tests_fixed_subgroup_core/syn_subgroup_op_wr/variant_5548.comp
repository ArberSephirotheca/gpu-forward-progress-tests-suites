#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))));
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x, (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x) | (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u) * workgroup_id, (true ? workgroup_size * workgroup_id : _GLF_FUZZED(workgroup_size)));
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))) + ((subgroup_local_id + 1) % subgroup_size);
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ ((0 << _GLF_IDENTITY(int(1), int(1))) << _GLF_IDENTITY(int(5), int(5)))) < 1); _injected_loop_counter ++)
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) ^ (0 ^ 0)), 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     do
      {
       atomicStore(checker[virtual_gid], read, 4, 64, 4);
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   subgroupAll(false);
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     switch(_GLF_SWITCH(0))
      {
       case 0:
       case 5:
       case 15:
       case 52:
       case 63:
       case 82:
       case 71:
       switch(_GLF_SWITCH(0))
        {
         case 77:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
          return;
         mat3x4 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v[2], _GLF_SWITCH_0_2v;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         case 47:
         if(_GLF_DEAD(false))
          return;
         {
          switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(8), int(8)))))
           {
            case 0:
            bvec3(false, true, false);
            do
             {
              for(int _injected_loop_counter = ((- 63016) & (1 ^ 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
               {
                ivec4(40922, 75829, -86048, -25704);
               }
             }
            while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
            if(_GLF_DEAD(false))
             return;
            case 80:
            for(vec3 _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v; false; mat2(-6.6, 45.09, -779.912, -3.7))
             {
              if(false)
               {
               }
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                do
                 {
                  while(_GLF_IDENTITY(bool(-84457), ! _GLF_IDENTITY((! (bool(-84457))), false || ((! (bool(-84457)))))))
                   {
                    if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
                     {
                      ivec2(45139, 28169);
                     }
                    else
                     {
                     }
                    if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
                     break;
                    if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), false, false)), bool(bool(bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), false, false)))))))
                     {
                      do
                       {
                        if(_GLF_DEAD(false))
                         return;
                       }
                      while(_GLF_WRAPPED_LOOP(false));
                      uint(_GLF_IDENTITY((mat2x4(-6.2, 5640.4089, -9.5, _GLF_IDENTITY(953.749, min(953.749, 953.749)), _GLF_IDENTITY(-2.5, float(_GLF_IDENTITY(vec2(-2.5, log(1.0)), vec2(1.0, 1.0) * (vec2(-2.5, log(1.0)))))), 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, 90.56, -922.433, 2.5, -9.1, _GLF_IDENTITY(0.2, (_GLF_IDENTITY(0.2, 1.0 * (0.2))) + 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((mat2x4(-6.2, 5640.4089, -9.5, _GLF_IDENTITY(953.749, (false ? _GLF_FUZZED(ldexp(2.4, 8895)) : 953.749)), -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(_GLF_IDENTITY(7.8, (7.8) / _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), -635.951, 13.66, 90.56, -922.433, 2.5, -9.1, 0.2)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((mat2x4(-6.2, 5640.4089, -9.5, _GLF_IDENTITY(953.749, (false ? _GLF_FUZZED(ldexp(2.4, 8895)) : 953.749)), -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, _GLF_IDENTITY(-635.951, (true ? -635.951 : _GLF_FUZZED(-2.5))), 13.66, 90.56, -922.433, 2.5, -9.1, _GLF_IDENTITY(0.2, (0.2) / 1.0))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2((mat2x4(-6.2, 5640.4089, -9.5, _GLF_IDENTITY(953.749, (false ? _GLF_FUZZED(ldexp(2.4, 8895)) : 953.749)), -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, _GLF_IDENTITY(-635.951, (true ? -635.951 : _GLF_FUZZED(-2.5))), 13.66, 90.56, -922.433, 2.5, -9.1, _GLF_IDENTITY(0.2, (0.2) / 1.0))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (bool(bvec2((mat2x4(-6.2, 5640.4089, -9.5, _GLF_IDENTITY(953.749, (false ? _GLF_FUZZED(ldexp(2.4, 8895)) : 953.749)), -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, 90.56, -922.433, 2.5, -9.1, 0.2)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true && (_GLF_IDENTITY(bool(bvec2((mat2x4(-6.2, 5640.4089, -9.5, _GLF_IDENTITY(_GLF_IDENTITY(953.749, (false ? _GLF_FUZZED(ldexp(2.4, 8895)) : 953.749)), (_GLF_IDENTITY(_GLF_IDENTITY(953.749, (false ? _GLF_FUZZED(ldexp(2.4, 8895)) : 953.749)), min(_GLF_IDENTITY(_GLF_IDENTITY(953.749, (false ? _GLF_FUZZED(ldexp(2.4, 8895)) : 953.749)), 1.0 * (_GLF_IDENTITY(953.749, (false ? _GLF_FUZZED(ldexp(2.4, 8895)) : 953.749)))), _GLF_IDENTITY(953.749, (false ? _GLF_FUZZED(ldexp(2.4, 8895)) : 953.749))))) - 0.0), -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(_GLF_IDENTITY(7.8, (7.8) / _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, cos(0.0), sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))), 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) / cos(0.0)), 1.0), vec3(0.0, 0.0, 1.0)))), -635.951, 13.66, 90.56, -922.433, 2.5, -9.1, 0.2)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((mat2x4(-6.2, 5640.4089, -9.5, _GLF_IDENTITY(953.749, (false ? _GLF_FUZZED(ldexp(2.4, 8895)) : 953.749)), -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, _GLF_IDENTITY(-635.951, _GLF_IDENTITY((true ? -635.951 : _GLF_FUZZED(-2.5)), 0.0 + ((true ? -635.951 : _GLF_FUZZED(-2.5))))), 13.66, 90.56, -922.433, 2.5, _GLF_IDENTITY(-9.1, min(-9.1, _GLF_IDENTITY(-9.1, _GLF_IDENTITY(float(mat2x3(-9.1, 0.0, 0.0, 0.0, 0.0, 0.0)), (true ? float(mat2x3(-9.1, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(-32.86)))))), _GLF_IDENTITY(0.2, (0.2) / 1.0))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2((mat2x4(-6.2, 5640.4089, -9.5, _GLF_IDENTITY(953.749, (false ? _GLF_FUZZED(ldexp(2.4, 8895)) : _GLF_IDENTITY(953.749, determinant(mat3(1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0)) * (953.749)))), -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, _GLF_IDENTITY(-635.951, (true ? -635.951 : _GLF_FUZZED(-2.5))), 13.66, 90.56, -922.433, 2.5, -9.1, _GLF_IDENTITY(0.2, (0.2) / 1.0))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (bool(bvec2((mat2x4(-6.2, 5640.4089, -9.5, _GLF_IDENTITY(953.749, (false ? _GLF_FUZZED(ldexp(2.4, 8895)) : 953.749)), -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, 90.56, -922.433, 2.5, -9.1, 0.2)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))))))))))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, 90.56, -922.433, 2.5, -9.1, 0.2), bool(bvec4(_GLF_IDENTITY(mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, _GLF_IDENTITY(8219.5279, max(8219.5279, 8219.5279)), -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, _GLF_IDENTITY(90.56, (90.56) * 1.0), -922.433, 2.5, -9.1, 0.2), false || (mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, 90.56, -922.433, 2.5, -9.1, 0.2))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), false, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2((_GLF_IDENTITY(mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, 90.56, -922.433, 2.5, -9.1, 0.2), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, _GLF_IDENTITY(90.56, (90.56) * 1.0), -922.433, 2.5, -9.1, 0.2), false || (mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, 90.56, -922.433, 2.5, -9.1, 0.2))), bool(bvec3(_GLF_IDENTITY(mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, _GLF_IDENTITY(90.56, (90.56) * 1.0), -922.433, 2.5, -9.1, 0.2), false || (mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, 90.56, -922.433, 2.5, -9.1, 0.2))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), false, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2((_GLF_IDENTITY(mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, 90.56, -922.433, 2.5, -9.1, 0.2), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, _GLF_IDENTITY(90.56, (90.56) * 1.0), -922.433, 2.5, -9.1, 0.2), false || (mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, 90.56, -922.433, 2.5, -9.1, 0.2))), bool(bvec3(_GLF_IDENTITY(mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, _GLF_IDENTITY(90.56, (90.56) * 1.0), -922.433, 2.5, -9.1, 0.2), false || (mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, 90.56, -922.433, 2.5, -9.1, 0.2))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), false, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true), bvec3(bvec3(bvec3(bvec2((_GLF_IDENTITY(mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, 90.56, -922.433, 2.5, -9.1, 0.2), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, _GLF_IDENTITY(90.56, (90.56) * 1.0), -922.433, 2.5, -9.1, 0.2), false || (mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, 90.56, -922.433, 2.5, -9.1, 0.2))), bool(bvec3(_GLF_IDENTITY(mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, _GLF_IDENTITY(90.56, (90.56) * 1.0), -922.433, 2.5, -9.1, 0.2), false || (mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, 90.56, -922.433, 2.5, -9.1, 0.2))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), false, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2((_GLF_IDENTITY(mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, 90.56, -922.433, 2.5, -9.1, 0.2), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, _GLF_IDENTITY(90.56, (90.56) * 1.0), -922.433, 2.5, -9.1, 0.2), false || (mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, 90.56, -922.433, 2.5, -9.1, 0.2))), bool(bvec3(_GLF_IDENTITY(mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, _GLF_IDENTITY(90.56, (90.56) * 1.0), -922.433, 2.5, -9.1, 0.2), false || (mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, 90.56, -922.433, 2.5, -9.1, 0.2))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), false, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true), bvec3(bvec3(bvec3(bvec2((_GLF_IDENTITY(mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, 90.56, -922.433, 2.5, -9.1, 0.2), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, _GLF_IDENTITY(90.56, (90.56) * 1.0), -922.433, 2.5, -9.1, 0.2), false || (mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, 90.56, -922.433, 2.5, -9.1, 0.2))), bool(bvec3(_GLF_IDENTITY(mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, _GLF_IDENTITY(90.56, (90.56) * 1.0), -922.433, 2.5, -9.1, 0.2), false || (mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, 90.56, -922.433, 2.5, -9.1, 0.2))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), false, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2((_GLF_IDENTITY(mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, 90.56, -922.433, 2.5, -9.1, 0.2), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, _GLF_IDENTITY(90.56, (90.56) * 1.0), -922.433, 2.5, -9.1, 0.2), false || (mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, 90.56, -922.433, 2.5, -9.1, 0.2))), bool(bvec3(_GLF_IDENTITY(mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, _GLF_IDENTITY(90.56, (90.56) * 1.0), -922.433, 2.5, -9.1, 0.2), false || (mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, 90.56, -922.433, 2.5, -9.1, 0.2))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), false, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true), bvec3(bvec3(bvec3(bvec2((_GLF_IDENTITY(mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, 90.56, -922.433, 2.5, -9.1, 0.2), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, _GLF_IDENTITY(90.56, (90.56) * 1.0), -922.433, 2.5, -9.1, 0.2), false || (mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, 90.56, -922.433, 2.5, -9.1, 0.2))), bool(bvec3(_GLF_IDENTITY(mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, _GLF_IDENTITY(90.56, (90.56) * 1.0), -922.433, 2.5, -9.1, 0.2), false || (mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, 90.56, -922.433, 2.5, -9.1, 0.2))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), false, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))), false)))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2((_GLF_IDENTITY(mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, 90.56, -922.433, 2.5, -9.1, 0.2), bool(bvec4(_GLF_IDENTITY(mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, _GLF_IDENTITY(90.56, (90.56) * 1.0), -922.433, 2.5, -9.1, 0.2), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) || false), false), true, false))))) || (mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, 90.56, _GLF_IDENTITY(-922.433, (-922.433) / 1.0), 2.5, -9.1, 0.2))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), false, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), false)), bvec2(bvec3(bvec2(bvec3(bvec2(bvec3(bvec2((_GLF_IDENTITY(mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, 90.56, -922.433, 2.5, -9.1, 0.2), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, _GLF_IDENTITY(90.56, (90.56) * 1.0), -922.433, 2.5, -9.1, 0.2), false || (mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, 90.56, -922.433, 2.5, -9.1, 0.2))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), false, false)), (bool(bvec4(_GLF_IDENTITY(mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, _GLF_IDENTITY(90.56, (90.56) * 1.0), -922.433, 2.5, -9.1, 0.2), false || (mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, 90.56, -922.433, 2.5, -9.1, 0.2))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), false, false))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), false)), true))))))), false || (_GLF_IDENTITY(bool(bool(bvec2((mat2x4(_GLF_IDENTITY(-6.2, (_GLF_IDENTITY(-6.2, _GLF_IDENTITY(float(mat2x3(-6.2, 1.0, 0.0, 1.0, 1.0, 1.0)), min(float(mat2x3(-6.2, 1.0, 0.0, 1.0, 1.0, 1.0)), float(mat2x3(-6.2, 1.0, 0.0, 1.0, 1.0, 1.0)))))) / 1.0), 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, 90.56, -922.433, 2.5, -9.1, 0.2)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec3(bool(bool(bvec2((mat2x4(-6.2, 5640.4089, -9.5, 953.749, -2.5, 8219.5279, -3030.5175, 71.77) == mat2x4(7.8, -635.951, 13.66, 90.56, -922.433, 2.5, -9.1, 0.2)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, true)))))))));
                      if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (injectionSwitch.x)) > injectionSwitch.y))))
                       return;
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       continue;
                     }
                    else
                     {
                     }
                    _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) - 0u), 0u)))) | (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))))))) | (subgroup_id));
                    for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), (false ? _GLF_FUZZED(-95225) : ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))))); _injected_loop_counter ++)
                     {
                      if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
                       break;
                      do
                       {
                        if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false), true))) && true)))
                         break;
                        switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                         {
                          case 95:
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2091.1174)), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(exp(99.91))))))))
                           {
                            if(_GLF_WRAPPED_IF_FALSE(false))
                             {
                             }
                            else
                             {
                              return;
                              if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
                               break;
                             }
                           }
                          mat3x4 _GLF_SWITCH_1_0v[57];
                          case 13:
                          bvec2 _GLF_SWITCH_1_1v[94], _GLF_SWITCH_1_2v[72];
                          case 0:
                          case 9:
                          case 74:
                          case 25:
                          case 68:
                          case 97:
                          case 4:
                          case 92:
                          case 52:
                          case 1:
                          do
                           {
                            for(int _injected_loop_counter = _GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), 1 * ((0 << _GLF_IDENTITY(int(5), int(5)))))) - 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                             {
                              for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                               {
                                if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
                                 return;
                               }
                             }
                           }
                          while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                          true;
                          break;
                          case 22:
                          mat2x4 _GLF_SWITCH_1_3v, _GLF_SWITCH_1_4v, _GLF_SWITCH_1_5v[49];
                          if(_GLF_DEAD(false))
                           continue;
                          case 58:
                          uvec2 _GLF_SWITCH_1_6v[51], _GLF_SWITCH_1_7v;
                          default:
                          1;
                         }
                       }
                      while(_GLF_WRAPPED_LOOP(false));
                     }
                    if(_GLF_WRAPPED_IF_FALSE(false))
                     {
                      if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                       break;
                     }
                    else
                     {
                      if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
                       {
                        if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true))))))), ! (! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! _GLF_IDENTITY((bool(bvec2(true, true))), false || ((bool(bvec2(true, true))))))))))))))))
                         {
                          return;
                         }
                        else
                         {
                         }
                       }
                      (ivec2(54763, -53124) * 17378);
                     }
                    uvec2(88267u, 88140u);
                    if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x), abs(1.0), abs(1.0), 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), sin(0.0), 0.0, 1.0)), (true ? _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), abs(1.0), 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), sin(0.0), 0.0, 1.0)), clamp(float(mat4x3(injectionSwitch.x, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), abs(1.0), 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(sin(0.0), clamp(sin(0.0), sin(0.0), sin(0.0))), 0.0, 1.0)), float(mat4x3(injectionSwitch.x, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), abs(1.0), 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), sin(0.0), 0.0, 1.0)), _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), abs(1.0), 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), sin(0.0), 0.0, 1.0)), float(float(float(mat4x3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), abs(1.0), 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), sin(0.0), 0.0, 1.0))))))) : _GLF_FUZZED(_GLF_IDENTITY(-5.8, (true ? -5.8 : _GLF_FUZZED(477.301))))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (injectionSwitch.y) - 0.0)))))))
                     break;
                    ivec4(56165, -62117, 24806, _GLF_IDENTITY(-78397, clamp(-78397, -78397, -78397)));
                   }
                  if(_GLF_DEAD(false))
                   continue;
                  if(_GLF_DEAD(false))
                   continue;
                 }
                while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, sqrt(0.0), 0.0), (false ? _GLF_FUZZED(mat2x4(-7249.2926, -782.988, 579.363, 7519.5598, 1.7, -53.61, 5.6, 0.1)) : mat2x4(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, sqrt(0.0), 0.0))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.6), _GLF_FUZZED(7.6)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(41.67) : injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
               }
              else
               {
               }
              (_GLF_IDENTITY(clamp(subgroup_local_id, 180293u, _GLF_IDENTITY(num_workgroup, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(num_workgroup, max(_GLF_IDENTITY(num_workgroup, max(num_workgroup, num_workgroup)), num_workgroup))))), uint(_GLF_IDENTITY(uvec2(clamp(subgroup_local_id, 180293u, _GLF_IDENTITY(num_workgroup, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(num_workgroup, max(_GLF_IDENTITY(num_workgroup, max(num_workgroup, num_workgroup)), num_workgroup))))), 0u), (uvec2(clamp(subgroup_local_id, 180293u, _GLF_IDENTITY(num_workgroup, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(num_workgroup, max(_GLF_IDENTITY(num_workgroup, max(num_workgroup, num_workgroup)), num_workgroup))))), 0u)) * uvec2(1u, 1u)))) >> read);
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_DEAD(false))
               break;
              do
               {
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  if(_GLF_WRAPPED_IF_FALSE(false))
                   {
                   }
                  else
                   {
                    ;
                   }
                 }
                else
                 {
                 }
               }
              while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
              if((-75.65 >= sqrt(-6.1)))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 continue;
                mat3 _GLF_SWITCH_0_5v, _GLF_SWITCH_0_6v[2], _GLF_SWITCH_0_7v;
                mat3x4 _GLF_SWITCH_0_8v;
                for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) >> 0)) | (_GLF_IDENTITY(int(3), max(int(3), int(3))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 0)); _injected_loop_counter ++)
                 {
                  for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                   {
                    (0.9 - mat3x2(-62.13, -7.6, _GLF_IDENTITY(-2.9, min(_GLF_IDENTITY(_GLF_IDENTITY(-2.9, (true ? -2.9 : _GLF_FUZZED(-45.68))), max(-2.9, -2.9)), -2.9)), 4.9, -2006.1412, -73.04));
                   }
                 }
                bool _GLF_SWITCH_0_9v, _GLF_SWITCH_0_10v[28], _GLF_SWITCH_0_11v;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 continue;
                mat3x2 _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v;
                if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
                 {
                  switch(_GLF_SWITCH(0))
                   {
                    case 93:
                    (exp(4728.2184) + mat4x2(45.33, 10.07, -9133.0307, -0.1, -8410.8569, 8.4, 7568.6574, -1398.9120));
                    case 0:
                    case 89:
                    case 91:
                    case 53:
                    case 61:
                    case 42:
                    case 79:
                    case 2:
                    bvec3(true, true, false);
                    break;
                    case 1:
                    int _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v[59], _GLF_SWITCH_2_2v;
                    default:
                    1;
                   }
                 }
                else
                 {
                 }
                if(_GLF_DEAD(false))
                 return;
                _GLF_IDENTITY(vec3(458.390, _GLF_IDENTITY(622.797, mix(float(622.797), float(_GLF_FUZZED(9.6)), bool(false))), -38.51), (vec3(458.390, 622.797, -38.51)) / vec3(1.0, _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, float(vec4(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(996.266)), float(1.0), bool(true))), max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(996.266)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(996.266)), float(1.0), bool(true))))), 0.0, 0.0))), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(_GLF_IDENTITY(normalize(1.0), max(normalize(1.0), _GLF_IDENTITY(normalize(1.0), mix(float(normalize(1.0)), float(_GLF_FUZZED(6.7)), bool(false))))))), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2475.4831) : 0.0))))), 1.0));
                mat3x2 _GLF_SWITCH_0_14v, _GLF_SWITCH_0_15v[71], _GLF_SWITCH_0_16v;
                if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / 1)], injectionSwitch[1])).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, ~ (~ (1)))])).x > injectionSwitch.y))))))
                 {
                  if(_GLF_DEAD(false))
                   break;
                  if(_GLF_DEAD(false))
                   break;
                 }
                else
                 {
                  if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
                   return;
                  _GLF_SWITCH_0_8v;
                  if(_GLF_DEAD(false))
                   break;
                 }
               }
             }
            case 87:
            while(true)
             {
              for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 1.0, 1.0, abs(1.0)), (mat2x3(1.0, 0.0, 0.0, 1.0, 1.0, abs(1.0))) * mat2(1.0))), (float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 1.0, 1.0, abs(1.0)), (mat2x3(1.0, 0.0, 0.0, 1.0, 1.0, abs(1.0))) * mat2(1.0)))) - 0.0)), injectionSwitch.y), max(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), _GLF_ONE(1.0, injectionSwitch.y)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
               {
                if(_GLF_DEAD(false))
                 return;
               }
              for(              bvec4(true, false, _GLF_IDENTITY(true, bool(bvec2(true, true))), true);
 true; mat3x2(-4.2, 6.6, -817.122, 5757.0151, 3808.8698, -6766.0538))
               {
                uvec3 _GLF_SWITCH_0_17v, _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v[74];
                (_GLF_IDENTITY(22177u, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(22177u, uint(uvec3(22177u, 1u, 0u))), (22177u) / 1u))) == workgroup_size);
                vec3(-1368.3607, -5.6, 6.3);
                -732.526;
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
               continue;
              do
               {
                switch(_GLF_IDENTITY(_GLF_SWITCH(_GLF_IDENTITY(0, min(0, 0))), (_GLF_SWITCH(0)) | (_GLF_SWITCH(0))))
                 {
                  case 20:
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_WRAPPED_IF_TRUE(true))
                     {
                      for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                       {
                        return;
                       }
                     }
                    else
                     {
                     }
                   }
                  if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) || false))))))))
                   continue;
                  ;
                  case 65:
                  ;
                  case 0:
                  case 98:
                  case 38:
                  if(_GLF_DEAD(false))
                   break;
                  case 95:
                  bvec4(false, false, false, false);
                  break;
                  case 46:
                  ivec3(-93904, -98932, 79599);
                  case 82:
                  uvec2 _GLF_SWITCH_1_0v[90], _GLF_SWITCH_1_1v[23];
                  default:
                  1;
                 }
               }
              while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), true)))))));
              ivec2 _GLF_SWITCH_0_20v[83];
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                ;
               }
              else
               {
               }
              if(_GLF_WRAPPED_IF_FALSE(false))
               {
               }
              else
               {
                bitCount(50006);
               }
             }
            for(mat4x3 _GLF_SWITCH_0_21v, _GLF_SWITCH_0_22v, _GLF_SWITCH_0_23v; false; (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(true ? subgroup_id : _GLF_FUZZED(workgroup_id), ~ (~ (true ? subgroup_id : _GLF_FUZZED(workgroup_id))))))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) - atomicCompSwap(next_virtual_gid, workgroup_size, next_virtual_gid)))
             {
              true;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               return;
              while(true)
               {
                if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                 {
                  transpose(mat4x2(358.008, -5130.0409, 1.4, 9.0, -9872.6928, 7085.9247, -7.6, -36.68));
                 }
                else
                 {
                 }
                mat2 _GLF_SWITCH_0_24v, _GLF_SWITCH_0_25v, _GLF_SWITCH_0_26v[51];
                ivec3 _GLF_SWITCH_0_27v;
                clamp((uvec3(37519u, 82969u, _GLF_IDENTITY(157226u, (157226u) | (157226u))) | num_workgroup), bitfieldExtract(uvec3(83028u, 38872u, 17393u), 61358, 28418), uvec3(_GLF_IDENTITY(151128u, (151128u) | (151128u)), 158320u, _GLF_IDENTITY(176543u, min(176543u, _GLF_IDENTITY(176543u, uint(_GLF_IDENTITY(uvec4(176543u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), (uvec4(176543u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)) / uvec4(1u, 1u, 1u, 1u))))))));
                if(_GLF_DEAD(false))
                 break;
                for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter < 1, false || (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) < 1))), bool(bvec3(_GLF_IDENTITY(! (_injected_loop_counter < 1), bool(bvec3(! (_injected_loop_counter < 1), false, true))), true, true)))))); _injected_loop_counter ++)
                 {
                  switch(_GLF_SWITCH((1 ^ 1)))
                   {
                    case 0:
                    ;
                    case 58:
                    if(_GLF_DEAD(false))
                     return;
                    break;
                    default:
                    1;
                   }
                 }
                ivec3(-16836, -83315, 65881);
               }
              if(_GLF_DEAD(false))
               continue;
              vec2(9.8, 9.9);
              if((uvec3(121283u, 14397u, 105556u) != uvec3(54758u, 117116u, 36653u)))
               {
                do
                 {
                  mat3(539.778, -50.94, -667.947, -9329.9877, _GLF_IDENTITY(6.3, (6.3) - 0.0), _GLF_IDENTITY(0.5, float(float(0.5))), 6173.8408, _GLF_IDENTITY(59.70, min(59.70, _GLF_IDENTITY(59.70, min(59.70, 59.70)))), 77.83);
                 }
                while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                bvec3 _GLF_SWITCH_0_28v[72], _GLF_SWITCH_0_29v, _GLF_SWITCH_0_30v;
                mat4 _GLF_SWITCH_0_31v[20], _GLF_SWITCH_0_32v;
                if(_GLF_DEAD(false))
                 continue;
                if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
                 {
                  if(_GLF_WRAPPED_IF_FALSE(false))
                   {
                   }
                  else
                   {
                    _GLF_SWITCH_0_23v;
                   }
                 }
                else
                 {
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(11.86), _GLF_FUZZED(-567.333)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(false))
                   break;
                  continue;
                 }
                ;
                for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (-33640 & 0)); _injected_loop_counter --)
                 {
                  do
                   {
                    switch(_GLF_SWITCH(0))
                     {
                      case 41:
                      do
                       {
                        mat4x2(mat2x3(2.3, -5.3, 9.2, 9550.3792, 2586.0043, -48.83));
                       }
                      while(_GLF_WRAPPED_LOOP(false));
                      case 0:
                      case 99:
                      case 15:
                      greaterThanEqual(ivec3(-50062, -89827, -30949), ivec3(-16924, 64688, -19194));
                      break;
                      default:
                      1;
                     }
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                 }
                mat2x3(7137.1381, _GLF_IDENTITY(293.885, (_GLF_IDENTITY(293.885, (293.885) - 0.0)) * 1.0), -7.0, -1531.6641, -1.9, -0.0);
                (_GLF_SWITCH_0_2v);
                if(_GLF_DEAD(false))
                 break;
               }
              else
               {
               }
              do
               {
                do
                 {
                  ;
                 }
                while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))));
               }
              while(_GLF_WRAPPED_LOOP(false));
              if(true)
               {
                switch(_GLF_SWITCH((0 | _GLF_IDENTITY((32939 & 0), 0 + ((32939 & 0))))))
                 {
                  case 59:
                  if(_GLF_WRAPPED_IF_FALSE(false))
                   {
                   }
                  else
                   {
                    (- ivec2(-30572, -2354));
                   }
                  case 0:
                  case 61:
                  case 65:
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_WRAPPED_IF_TRUE(true))
                     {
                      if(_GLF_DEAD(false))
                       return;
                     }
                    else
                     {
                     }
                    continue;
                   }
                  mat4(818.894, -5436.4714, 1938.5527, -685.074, -784.674, _GLF_IDENTITY(2626.4708, (_GLF_IDENTITY(true ? _GLF_IDENTITY(2626.4708, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * _GLF_IDENTITY((_GLF_IDENTITY(2626.4708, max(_GLF_IDENTITY(2626.4708, max(2626.4708, 2626.4708)), 2626.4708))), min((_GLF_IDENTITY(2626.4708, max(_GLF_IDENTITY(2626.4708, max(2626.4708, 2626.4708)), 2626.4708))), _GLF_IDENTITY((_GLF_IDENTITY(2626.4708, max(_GLF_IDENTITY(2626.4708, max(2626.4708, 2626.4708)), 2626.4708))), clamp((_GLF_IDENTITY(2626.4708, max(_GLF_IDENTITY(2626.4708, max(2626.4708, 2626.4708)), 2626.4708))), (_GLF_IDENTITY(2626.4708, max(_GLF_IDENTITY(2626.4708, max(2626.4708, 2626.4708)), 2626.4708))), (_GLF_IDENTITY(2626.4708, max(_GLF_IDENTITY(2626.4708, max(2626.4708, 2626.4708)), 2626.4708)))))))) : _GLF_FUZZED(vec3(6339.4974, _GLF_IDENTITY(-1.6, (-1.6) - 0.0), -1.2)[1]), (true ? _GLF_IDENTITY(2626.4708, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-72.32)), bool(false))), 1.0)) * (_GLF_IDENTITY(2626.4708, _GLF_IDENTITY(max(_GLF_IDENTITY(2626.4708, max(2626.4708, 2626.4708)), 2626.4708), float(vec4(_GLF_IDENTITY(max(_GLF_IDENTITY(2626.4708, max(2626.4708, 2626.4708)), 2626.4708), clamp(max(_GLF_IDENTITY(2626.4708, max(2626.4708, 2626.4708)), 2626.4708), max(_GLF_IDENTITY(2626.4708, max(2626.4708, 2626.4708)), 2626.4708), max(_GLF_IDENTITY(2626.4708, max(2626.4708, 2626.4708)), 2626.4708))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0)))))) : _GLF_FUZZED(vec3(6339.4974, -1.6, -1.2)[1])) / 1.0))), -5239.3709, 4.7, -6.1, 6.7, -8.9, 2.5, -70.08, _GLF_IDENTITY(7.2, min(7.2, 7.2)), 444.238, -6.5);
                  mat4x2 _GLF_SWITCH_0_33v[64], _GLF_SWITCH_0_34v[5];
                  case 19:
                  case 64:
                  mat4 _GLF_SWITCH_0_35v, _GLF_SWITCH_0_36v, _GLF_SWITCH_0_37v;
                  case 71:
                  if(_GLF_WRAPPED_IF_FALSE(false))
                   {
                   }
                  else
                   {
                    normalize(sqrt(vec4(_GLF_IDENTITY(3.5, (_GLF_IDENTITY(3.5, clamp(3.5, 3.5, 3.5))) - 0.0), 4.1, -278.032, 874.888)));
                    for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                     {
                      do
                       {
                        if(_GLF_DEAD(false))
                         return;
                       }
                      while(_GLF_WRAPPED_LOOP(false));
                     }
                   }
                  break;
                  default:
                  if(_GLF_DEAD(false))
                   continue;
                  1;
                 }
               }
              else
               {
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
                   return;
                 }
                switch(_GLF_SWITCH(0))
                 {
                  case 12:
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    workgroup_base;
                   }
                  else
                   {
                   }
                  case 0:
                  case 88:
                  -22.28;
                  case 99:
                  case 71:
                  ivec2 _GLF_SWITCH_0_38v;
                  case 26:
                  if(_GLF_WRAPPED_IF_FALSE(false))
                   {
                   }
                  else
                   {
                    ;
                   }
                  bvec2 _GLF_SWITCH_0_39v[1];
                  if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)))
                   {
                    if(_GLF_WRAPPED_IF_FALSE(false))
                     {
                     }
                    else
                     {
                      return;
                     }
                   }
                  do
                   {
                    switch(_GLF_SWITCH(0))
                     {
                      case 67:
                      ivec3(67632, -60186, -88550);
                      case 0:
                      case 97:
                      case 41:
                      case 93:
                      case 85:
                      case 80:
                      case 94:
                      case 1:
                      bitCount(packUnorm4x8(_GLF_IDENTITY(vec4(3395.7135, _GLF_IDENTITY(68.38, mix(float(68.38), float(_GLF_FUZZED(-5627.0379)), bool(false))), 4.0, 0.2), (vec4(3395.7135, 68.38, 4.0, 0.2)) - tan(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0)))));
                      break;
                      case 58:
                      vec4 _GLF_SWITCH_2_0v;
                      case 69:
                      uvec3 _GLF_SWITCH_2_1v;
                      default:
                      1;
                     }
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                  _GLF_IDENTITY((- mat4(-78.55, -745.389, -3.4, -2834.5475, -0.6, 8877.5657, -7.3, 663.023, -4919.6918, 9703.4422, -318.914, -253.900, 17.84, -807.085, 82.48, -1.9)), transpose(_GLF_IDENTITY(transpose((- mat4(-78.55, -745.389, -3.4, -2834.5475, -0.6, 8877.5657, -7.3, 663.023, -4919.6918, 9703.4422, -318.914, -253.900, 17.84, _GLF_IDENTITY(-807.085, max(-807.085, -807.085)), 82.48, -1.9))), transpose(transpose(transpose(_GLF_IDENTITY((_GLF_IDENTITY(- mat4(-78.55, -745.389, -3.4, -2834.5475, -0.6, 8877.5657, -7.3, 663.023, -4919.6918, 9703.4422, -318.914, -253.900, 17.84, -807.085, 82.48, -1.9), mat4(1.0) * (- _GLF_IDENTITY(mat4(-78.55, -745.389, -3.4, -2834.5475, -0.6, 8877.5657, -7.3, 663.023, -4919.6918, 9703.4422, -318.914, -253.900, 17.84, -807.085, 82.48, -1.9), transpose(transpose(mat4(-78.55, -745.389, -3.4, -2834.5475, -0.6, 8877.5657, -7.3, 663.023, -4919.6918, 9703.4422, -318.914, -253.900, 17.84, -807.085, 82.48, -1.9))))))), ((- mat4(-78.55, -745.389, -3.4, -2834.5475, -0.6, 8877.5657, -7.3, 663.023, -4919.6918, 9703.4422, -318.914, -253.900, _GLF_IDENTITY(17.84, min(17.84, 17.84)), -807.085, 82.48, -1.9))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))));
                  case 3:
                  case 68:
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   return;
                  if(_GLF_DEAD(false))
                   return;
                  case 77:
                  mat4x2(-8.4, _GLF_IDENTITY(-3.0, (-3.0) / 1.0), -9.0, 9.1, -716.356, _GLF_IDENTITY(6.4, (6.4) / 1.0), _GLF_IDENTITY(-4.8, (-4.8) + 0.0), 58.05);
                  if(_GLF_DEAD(false))
                   break;
                  case 73:
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    for(int _injected_loop_counter = _GLF_IDENTITY(((7427 & _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0))))) ^ 0), ~ (~ (((7427 & 0) ^ 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
                     {
                      ;
                     }
                   }
                  else
                   {
                    if(_GLF_DEAD(false))
                     continue;
                   }
                  break;
                  default:
                  _GLF_IDENTITY(1, max(1, 1));
                 }
               }
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-22.15), _GLF_FUZZED(-552.723)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x > injectionSwitch.y))))
               {
               }
              else
               {
                (_GLF_IDENTITY(mat3(29.89, 8021.5371, 9.4, -2.3, -5756.4803, 65.90, 265.832, -3500.5494, _GLF_IDENTITY(6.3, clamp(6.3, 6.3, 6.3))) + mat3(862.372, 99.08, -3.5, -13.06, 996.296, 8.1, 71.05, 96.84, -934.756), (mat3(29.89, 8021.5371, 9.4, _GLF_IDENTITY(-2.3, min(-2.3, -2.3)), _GLF_IDENTITY(-5756.4803, clamp(-5756.4803, -5756.4803, -5756.4803)), 65.90, 265.832, -3500.5494, 6.3) + mat3(862.372, 99.08, _GLF_IDENTITY(-3.5, float(mat3x4(-3.5, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), -13.06, 996.296, 8.1, 71.05, _GLF_IDENTITY(_GLF_IDENTITY(96.84, (96.84) * 1.0), clamp(96.84, _GLF_IDENTITY(96.84, clamp(_GLF_IDENTITY(96.84, (96.84) * 1.0), 96.84, 96.84)), 96.84)), _GLF_IDENTITY(-934.756, clamp(-934.756, -934.756, -934.756)))) / mat3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))));
                if(_GLF_DEAD(false))
                 break;
               }
              while(true)
               {
                mat2(-9.4, _GLF_IDENTITY(-636.133, (false ? _GLF_FUZZED(42.60) : -636.133)), -4.3, -2.3);
                bvec3(false, false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))));
                uvec4(7358u, 178468u, 27174u, _GLF_IDENTITY(178603u, uint(_GLF_IDENTITY(uvec3(178603u, 1u, 0u), (uvec3(178603u, 1u, 0u)) | (uvec3(178603u, 1u, 0u)))))).aabb;
                mat4x2(2.8, _GLF_IDENTITY(-0.9, float(_GLF_IDENTITY(mat3(-0.9, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(mat3(_GLF_IDENTITY(mat3x4(mat3(-0.9, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0)), (true ? mat3x4(mat3(-0.9, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(_GLF_SWITCH_0_0v)))), transpose(transpose(mat3(_GLF_IDENTITY(mat3x4(mat3(-0.9, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0)), (true ? mat3x4(mat3(-0.9, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(_GLF_SWITCH_0_0v)))))))))), _GLF_IDENTITY(-45.44, (_GLF_IDENTITY(true ? -45.44 : _GLF_FUZZED(_GLF_IDENTITY(797.056, clamp(797.056, 797.056, 797.056))), min(_GLF_IDENTITY(true ? -45.44 : _GLF_FUZZED(797.056), (true ? true ? -45.44 : _GLF_FUZZED(797.056) : _GLF_FUZZED(7.4))), true ? _GLF_IDENTITY(-45.44, float(mat3x4(-45.44, 1.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))) : _GLF_FUZZED(797.056))))), 166.988, 2728.0881, -7.8, -116.810, 552.077);
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 continue;
                mat3x4 _GLF_SWITCH_0_40v, _GLF_SWITCH_0_41v;
                do
                 {
                  if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-40.45, -1540.2310)))).x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))) || false))))
                   return;
                 }
                while(_GLF_WRAPPED_LOOP(false));
                ivec3 _GLF_SWITCH_0_42v[99], _GLF_SWITCH_0_43v[86], _GLF_SWITCH_0_44v;
                if(_GLF_DEAD(false))
                 {
                  do
                   {
                    return;
                   }
                  while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((+ sin(injectionSwitch))))).y))))
                 break;
                mat4x3 _GLF_SWITCH_0_45v, _GLF_SWITCH_0_46v, _GLF_SWITCH_0_47v;
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                   return;
                 }
                else
                 {
                 }
               }
              if(_GLF_DEAD(false))
               break;
              {
               bvec4 _GLF_SWITCH_0_48v, _GLF_SWITCH_0_49v[9], _GLF_SWITCH_0_50v[62];
               if(_GLF_DEAD(false))
                return;
               do
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   mat2x3(_GLF_IDENTITY(1.1, (_GLF_IDENTITY(_GLF_IDENTITY(1.1, 1.0 * (_GLF_IDENTITY(1.1, (false ? _GLF_FUZZED((60.98 + -3.0)) : 1.1)))), clamp(1.1, 1.1, 1.1))) / determinant(mat2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(26.75)), float(0.0), bool(true)))) + 0.0), 0.0))), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 1.0))), _GLF_IDENTITY(-4.9, float(vec3(-4.9, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))))), 2801.8661, 8548.0160, -59.04, _GLF_IDENTITY(-4067.9277, min(-4067.9277, -4067.9277)));
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   mat3(3066.2624, 103.735, -9421.9317, -59.54, _GLF_IDENTITY(-9675.6492, clamp(-9675.6492, -9675.6492, _GLF_IDENTITY(-9675.6492, (-9675.6492) / 1.0))), -3.4, _GLF_IDENTITY(-2.0, (true ? -2.0 : _GLF_FUZZED(6.0))), _GLF_IDENTITY(8803.0240, float(mat2x4(_GLF_IDENTITY(8803.0240, clamp(8803.0240, 8803.0240, 8803.0240)), 0.0, 1.0, 1.0, exp(0.0), 0.0, 1.0, 0.0))), _GLF_IDENTITY(10.82, max(10.82, 10.82)));
                  }
                 else
                  {
                  }
                }
               else
                {
                }
               uvec3 _GLF_SWITCH_0_51v, _GLF_SWITCH_0_52v[12], _GLF_SWITCH_0_53v;
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 refract((vec2(8229.7741, _GLF_IDENTITY(-2.1, float(_GLF_IDENTITY(mat4x2(-2.1, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3((vec3(0.0, 1.0, 0.0))[0], _GLF_FUZZED(-9533.6145), _GLF_FUZZED(-971.712)), vec3(_GLF_FUZZED(-11.84), (_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) * mat3(1.0)))[1], _GLF_IDENTITY((vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), 1.0, 0.0))[2], min((vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), 1.0, 0.0))[2], (vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), 1.0, 0.0))[2]))), bvec3(false, _GLF_IDENTITY(true, ! (! (true))), true))), (_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 0.0)) / vec3(1.0, 1.0, 1.0))) - vec3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(8314.4000)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true)), mix(float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(8314.4000)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true)), min(mix(float(_GLF_FUZZED(8314.4000)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true)), mix(float(_GLF_FUZZED(8314.4000)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))))), float(_GLF_FUZZED(-370.478)), bool(false)))), 0.0, 0.0)), 0.0)))), 1.0), transpose(transpose(mat4x2(-2.1, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9097.4803)), float(0.0), bool(true))), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))) + 0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0))))))) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-6.0, (-6.0) + 0.0), _GLF_IDENTITY(967.951, float(_GLF_IDENTITY(mat2x3(967.951, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, 1.0 * (0.0)) : _GLF_IDENTITY(_GLF_FUZZED(400.911), (_GLF_FUZZED(400.911)) / 1.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), (_GLF_IDENTITY(mat2x3(967.951, 0.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), clamp(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), transpose(transpose(mat2x3(967.951, 0.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (true ? _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(mat2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0))) : _GLF_FUZZED(-4.9)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), -6.9, -872.926), (false ? _GLF_FUZZED(mat2(-51.87, -85.99, 29.38, -1.3)) : mat2(_GLF_IDENTITY(-6.0, (-6.0) + 0.0), _GLF_IDENTITY(967.951, float(_GLF_IDENTITY(mat2x3(967.951, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, 1.0 * (0.0)) : _GLF_IDENTITY(_GLF_FUZZED(400.911), (_GLF_FUZZED(400.911)) / 1.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), (_GLF_IDENTITY(mat2x3(967.951, 0.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), clamp(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), transpose(transpose(mat2x3(967.951, 0.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (true ? _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(mat2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0))) : _GLF_FUZZED(-4.9)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), -6.9, -872.926))), transpose(transpose(mat2(_GLF_IDENTITY(-6.0, (-6.0) + 0.0), _GLF_IDENTITY(967.951, float(_GLF_IDENTITY(mat2x3(967.951, 0.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(972.974)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, 1.0 * (0.0)) : _GLF_FUZZED(400.911))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), (_GLF_IDENTITY(mat2x3(967.951, 0.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8139.3763)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), mix(float(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), float(_GLF_FUZZED(293.160)), bool(false))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), transpose(transpose(mat2x3(967.951, 0.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(vec4(vec2(0.0, 1.0), sqrt(0.0), exp(0.0))), mat2(1.0) * (vec2(vec4(vec2(0.0, 1.0), sqrt(0.0), exp(0.0))))))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), -6.9, -872.926))))), vec2(_GLF_IDENTITY(7.9, clamp(7.9, 7.9, 7.9)), 184.719), _GLF_IDENTITY(170.215, max(_GLF_IDENTITY(170.215, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(170.215, (170.215) + 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(343.398) : 170.215, (true ? _GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(343.398) : 170.215 : _GLF_FUZZED(-923.230)))))), float(_GLF_FUZZED(_GLF_IDENTITY(3.0, min(3.0, _GLF_IDENTITY(3.0, float(mat4x3(3.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(mat4(0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.8) : _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.9)), float(1.0), bool(true))), 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))))))), bool(false))), 170.215)));
                }
               else
                {
                }
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   length(-3.6);
                  }
                 else
                  {
                  }
                }
               int _GLF_SWITCH_0_54v[9], _GLF_SWITCH_0_55v, _GLF_SWITCH_0_56v;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             }
            for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
             {
              if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false)))))))
               {
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  return;
                 }
                else
                 {
                 }
               }
             }
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
             }
            else
             {
              do
               {
                mat2x4(_GLF_IDENTITY(-8.9, max(_GLF_IDENTITY(-8.9, (-8.9) / 1.0), _GLF_IDENTITY(-8.9, mix(float(_GLF_FUZZED(-1.4)), float(-8.9), bool(true))))), 5.2, 4416.3767, 5.9, 553.030, -9075.6866, 108.742, -4100.7696);
               }
              while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))));
             }
            if(true)
             {
              for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
               {
                switch(_GLF_IDENTITY(_GLF_SWITCH((((~ -74026)) & 0)), min(_GLF_IDENTITY(_GLF_SWITCH((((~ -74026)) & 0)), (_GLF_SWITCH((((~ -74026)) & 0))) / 1), _GLF_SWITCH((((~ -74026)) & 0)))))
                 {
                  case 57:
                  float _GLF_SWITCH_1_0v[99], _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v;
                  case 0:
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    do
                     {
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true)))
                         {
                         }
                        else
                         {
                          return;
                         }
                       }
                     }
                    while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   }
                  else
                   {
                   }
                  if(_GLF_DEAD(false))
                   {
                    for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
                     {
                      return;
                     }
                   }
                  for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                   {
                    do
                     {
                      bvec2(true, true);
                     }
                    while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   }
                  case 5:
                  min(vec3(4172.3352, -4.8, 2.1), mod(3467.5485, min(_GLF_IDENTITY(-2838.7434, mix(float(_GLF_FUZZED(-5.4)), float(_GLF_IDENTITY(-2838.7434, max(-2838.7434, -2838.7434))), bool(true))), 899.247)));
                  for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
                   {
                    for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) != 1); _injected_loop_counter ++)
                     {
                      switch(_GLF_SWITCH(0))
                       {
                        case 38:
                        vec4(25.77, -8.6, -952.246, 5.7);
                        case 93:
                        vec4 _GLF_SWITCH_2_0v[49];
                        case 0:
                        case 15:
                        case 3:
                        case 5:
                        case 31:
                        case 44:
                        case 84:
                        case 83:
                        case 10:
                        case 49:
                        if((mat3x2(-0.9, _GLF_IDENTITY(-4.2, (_GLF_IDENTITY(_GLF_IDENTITY(-4.2, (true ? -4.2 : _GLF_FUZZED(length(-603.087)))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)) ? -4.2 : _GLF_FUZZED(-789.803)))) + 0.0), 5.3, _GLF_IDENTITY(-7.0, max(-7.0, -7.0)), -136.665, 405.801) != mat3x2(-951.520, -168.624, -6.3, -0.6, -654.540, 0.5)))
                         {
                          if(_GLF_DEAD(false))
                           continue;
                          switch(_GLF_SWITCH(0))
                           {
                            case 0:
                            if(_GLF_DEAD(false))
                             return;
                            case 76:
                            case 77:
                            case 8:
                            if(_GLF_DEAD(false))
                             return;
                            case 85:
                            mat2x3 _GLF_SWITCH_0_57v[84];
                            case 5:
                            case 14:
                            case 89:
                            vec4 _GLF_SWITCH_0_58v[42], _GLF_SWITCH_0_59v, _GLF_SWITCH_0_60v;
                            case 27:
                            float _GLF_SWITCH_0_61v;
                            break;
                            default:
                            for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                             {
                              1;
                             }
                           }
                         }
                        break;
                        case 85:
                        mat2x4 _GLF_SWITCH_2_1v[13];
                        case 32:
                        do
                         {
                          ;
                         }
                        while(_GLF_WRAPPED_LOOP(false));
                        default:
                        if(_GLF_WRAPPED_IF_TRUE(true))
                         {
                          1;
                         }
                        else
                         {
                         }
                       }
                     }
                   }
                  bvec3 _GLF_SWITCH_0_62v, _GLF_SWITCH_0_63v;
                  (false ? mat4x2(-1364.9679, 4381.7220, 3.6, 269.252, 97.70, -6.6, _GLF_IDENTITY(-9.8, abs(1.0) * (_GLF_IDENTITY(-9.8, (-9.8) - 0.0))), 5.8) : mat4x2(-692.627, -945.953, _GLF_IDENTITY(-8.0, max(-8.0, -8.0)), 92.43, _GLF_IDENTITY(260.557, min(260.557, 260.557)), _GLF_IDENTITY(3.8, mix(float(_GLF_IDENTITY(3.8, clamp(3.8, 3.8, 3.8))), float(_GLF_FUZZED(vec2(-2621.4600, 2.3).t)), bool(false))), 9834.0522, 3.0));
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    do
                     {
                      return;
                     }
                    while(_GLF_WRAPPED_LOOP(false));
                   }
                  for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - (64203 & 0)))
                   {
                    (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(! (true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), ! (! (! (true)))), true), false))))), (! _GLF_IDENTITY(_GLF_IDENTITY((true), ! (! ((true)))), ! (! (_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), false || (_GLF_IDENTITY(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), bool(bool(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), false || (_GLF_IDENTITY(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), bool(bool(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))), bool(bvec4(bool(_GLF_IDENTITY(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), false || (_GLF_IDENTITY(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), bool(bool(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))), true, true, true))))))))))) ? (ivec3(-61581, 83752, -16428) - ivec3(-69596, _GLF_IDENTITY(62047, 0 | (62047)), 31710)) : ivec3(-44924, 27913, -86313));
                   }
                  1973.9275;
                  break;
                  default:
                  1;
                 }
               }
              if(_GLF_DEAD(false))
               return;
             }
            break;
            case 7:
            mat4x2 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v[69];
            case 17:
            float _GLF_SWITCH_2_2v, _GLF_SWITCH_2_3v[36];
            default:
            1;
           }
         }
         case 0:
         atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), (_GLF_IDENTITY(64, clamp(64, 64, 64))) | (_GLF_IDENTITY(64, clamp(64, 64, 64)))), 64)), 4);
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           subgroupAll(true);
          }
         break;
         case 54:
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false)))))) && true))
          return;
         ;
         case 80:
         do
          {
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         mat3x2(-48.20, 844.228, 155.694, -7.0, 75.98, -1.8);
         default:
         _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) >> 0)))));
        }
       break;
       case 67:
       ;
       case 64:
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         while(any(bvec3(true, true, true)))
          {
           if(false)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               (uvec2(166885u, 81033u) - workgroup_id);
              }
             mat3 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
             radians(398.188);
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               uvec3(11603u, 82202u, 159905u);
              }
             else
              {
              }
             bvec4 _GLF_SWITCH_2_2v[65];
            }
           else
            {
             bvec2 _GLF_SWITCH_2_3v;
             mat3x2 _GLF_SWITCH_2_4v;
             mat2x4(-9.3, -5.1, -64.37, 27.63, -64.83, 7917.3224, 1701.0914, -854.763);
             ivec3 _GLF_SWITCH_2_5v, _GLF_SWITCH_2_6v;
             mat2x3(mat2(-4.4, 7922.5742, 181.940, 1703.0482));
             bvec3 _GLF_SWITCH_2_7v, _GLF_SWITCH_2_8v[39];
             notEqual(equal(_GLF_SWITCH_2_6v, _GLF_SWITCH_2_5v), _GLF_SWITCH_2_7v);
             vec4 _GLF_SWITCH_2_9v[69], _GLF_SWITCH_2_10v, _GLF_SWITCH_2_11v;
             lessThan(injectionSwitch, vec2(-757.433, -89.93));
            }
          }
        }
       default:
       1;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, int(ivec4(1, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, 0 ^ (0)))), 0, (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(5), int(5))), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(5), int(5))), (int(_GLF_IDENTITY(int(5), int(5)))) | (int(_GLF_IDENTITY(int(5), int(5)))))) | (int(_GLF_IDENTITY(int(5), int(5)))))))))))); _injected_loop_counter ++)
        {
         switch(_GLF_SWITCH(0))
          {
           case 0:
           case 32:
           case 19:
           case 64:
           case 92:
           case 26:
           case 60:
           case 39:
           case 54:
           for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) | (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))))
              continue;
             return;
            }
           break;
           case 96:
           vec4 _GLF_SWITCH_2_0v[21], _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v;
           case 5:
           for(mat3 _GLF_SWITCH_2_3v; (subgroup_id < workgroup_size); mat4x3(7899.4679, -7062.8299, -6.9, -9.4, 4.1, -729.433, 159.705, 9.2, -472.504, -14.35, -68.74, 284.299))
            {
            }
           default:
           1;
          }
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
}
