#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), true && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0))) > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-5.4), _GLF_FUZZED(5.4)), vec2(_GLF_IDENTITY(((injectionSwitch))[0], (true ? ((injectionSwitch))[0] : _GLF_FUZZED(97.83))), ((injectionSwitch))[1]), bvec2(true, true)))[0], _GLF_FUZZED(218.698)), vec2(_GLF_FUZZED(6.5), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y))))
  {
   do
    {
     for(int _injected_loop_counter = (_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 1.0, length(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))), (mat3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 1.0, length(0.0), 0.0, 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 1.0, length(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))), (mat3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 1.0, length(0.0), 0.0, 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 1.0, length(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))), (mat3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 1.0, length(0.0), 0.0, 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) >> 0)) >> (0 ^ 0)) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), min(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) | (_GLF_IDENTITY(int(7), int(7))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) << 0)); _injected_loop_counter ++)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), mix(float(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))), float(_GLF_FUZZED(-2.8)), bool(false)))) - 0.0), injectionSwitch.y))))))) || false)))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(5), int(5))), ~ (~ ((0 >> _GLF_IDENTITY(int(5), int(5))))))); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
        }
       else
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), ~ (~ (int(5)))), int(5))) >> _GLF_IDENTITY(int(5), int(5))), (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), ~ (~ (int(5)))), int(5))) >> _GLF_IDENTITY(int(5), int(5)))) | (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), ~ (~ (int(5)))), int(5))) >> _GLF_IDENTITY(int(5), int(5)))))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && (! (false)))))))
            barrier();
          }
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < injectionSwitch.y))), bool(bvec4(false, _GLF_IDENTITY(true, (true) && true), false, true))), true && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))))), true, true))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(false, false)), false, false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(bvec2(false, false)), false, false)), true), bvec3(bvec4(bvec3(bvec2(bvec4(bvec2(bvec2(false, false)), false, false)), true), true)))))))))) || (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), false, true, true))), (! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(-91602))), bool(false))) > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9755.5081)), bool(false)))) - 0.0) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))))), false, true, _GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), false, true, true))), _GLF_IDENTITY(bool(bvec2((bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), false, true, true))), true)), ! (! (bool(bvec2(_GLF_IDENTITY((bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9563.1303, -7671.2522)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), (true ? mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x4(4139.4919, -910.112, -6.5, 2119.0766, -27.07, -597.878, 1.1, -830.847)))))))).x > injectionSwitch.y)))))))))), false, true, true))), ((bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), false || (false || (injectionSwitch.x > injectionSwitch.y)))) || false)) && true))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(fma(vec2(292.821, 4.3), injectionSwitch, sin(vec2(16.80, 241.788)))))).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))), false, true, true)))) && true), true))))))), true && ((_GLF_IDENTITY((bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), false, true, true))), _GLF_IDENTITY(bool(bvec2((bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), false, true, true))), true)), ! (! (bool(bvec2(_GLF_IDENTITY((bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9563.1303, -7671.2522)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), (true ? mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x4(4139.4919, -910.112, -6.5, 2119.0766, -27.07, -597.878, 1.1, -830.847)))))))).x > injectionSwitch.y)))))))))), false, true, true))), ((bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), false || (false || (injectionSwitch.x > injectionSwitch.y)))) || false)) && true))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(fma(vec2(292.821, 4.3), injectionSwitch, sin(vec2(16.80, 241.788)))))).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))), false, true, true)))) && true), true))))))))), bool(bvec2(! (_GLF_IDENTITY((bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), false, true, true))), _GLF_IDENTITY(bool(bvec2((bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(true, true && (true)) && (true))))), true)), ! (! (bool(bvec2((bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)).y, false || (injectionSwitch.x > injectionSwitch.y)))), false, true, true))), true))))))), true)))))) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false))))))))))), bvec3(bvec3(bvec3(bvec3(false, true, false)))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1248.4500), _GLF_FUZZED(3.0)), bvec2(false, false))).x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               barrier();
              }
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (true) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true, true))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), true))))))))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))))) || false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(4507.9796))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)), true))))), bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(72.77), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], float(vec3((injectionSwitch)[1], 1.0, 1.0)))))), vec2((injectionSwitch)[0], _GLF_FUZZED((3780.1830 / 6971.8244))), bvec2(true, false))).y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), false))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), false))), false)), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)))).y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y))), true, false, true)))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))), true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(429.959)), float(injectionSwitch.x), bool(true))), 1.0, _GLF_ONE(1.0, injectionSwitch.y)))) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))), true), true))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), true), true)))))))))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x)))), float(_GLF_FUZZED(1180.5142)), bool(false))), (_GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) - 0.0)) * 1.0) - _GLF_IDENTITY(0.0, (0.0) - 0.0))) / 1.0) > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, uint(_GLF_IDENTITY(uvec4(workgroup_size * workgroup_id, 0u, 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (0u))), (false ? _GLF_FUZZED(52483u) : (_GLF_IDENTITY(0u, (0u) | (0u))))) | 0u)), (uvec4(workgroup_size * workgroup_id, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(135203u))), 1u, _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(22181u)))))) / _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), (uvec4(1u, _GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : 1u)))), 1u, 1u)) | (uvec4(1u, 1u, 1u, 1u))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), subgroup_id * subgroup_size))) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u)))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))))) / ((1u & 1u) | 0u)) * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), 0u)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u)) | (subgroup_id * subgroup_size)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u)))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)) : _GLF_FUZZED(139489u)))))), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u))))))) / 1u) : _GLF_FUZZED(subgroup_size)))), _GLF_IDENTITY(uint(uvec4(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u))), 0u)))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u))))))) / 1u) : _GLF_FUZZED(subgroup_size)))), 1u, 1u, 0u)), clamp(uint(uvec4(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u)))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u)))))))) | 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u)))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (true ? _GLF_FUZZED(workgroup_id) : _GLF_FUZZED(usubBorrow(subgroup_size, 14766u, workgroup_id)))) : subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u))))))) / 1u) : _GLF_FUZZED(subgroup_size)))), 1u, 1u, 0u)), uint(uvec4(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u)))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u), 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)))) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u))))))) / 1u) : _GLF_FUZZED(subgroup_size)))), 1u, 1u, 0u)), uint(uvec4(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(_GLF_IDENTITY(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u), max(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u), _GLF_IDENTITY(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u), (true ? uvec2(uint(uint(subgroup_id * subgroup_size)), 0u) : _GLF_FUZZED(uvec2(137117u, 128262u))))))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> _GLF_IDENTITY(0u, max(0u, 0u)))) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u)))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(uint(subgroup_id * subgroup_size)), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_id * subgroup_size))), (~ (uint(uint(subgroup_id * subgroup_size)))) | (~ (uint(uint(subgroup_id * subgroup_size))))))), 0u), (uvec2(_GLF_IDENTITY(uint(uint(subgroup_id * subgroup_size)), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_id * subgroup_size))), (~ (uint(uint(subgroup_id * subgroup_size)))) | (~ (uint(uint(subgroup_id * subgroup_size))))))), 0u)) | (uvec2(_GLF_IDENTITY(uint(uint(subgroup_id * subgroup_size)), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_id * subgroup_size))), (~ (uint(uint(subgroup_id * subgroup_size)))) | (~ (uint(uint(subgroup_id * subgroup_size))))))), 0u))))))))) / 1u) : _GLF_FUZZED(subgroup_size)))), 1u, 1u, 0u))))))), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), subgroup_id * subgroup_size))) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u)))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))))) / ((1u & 1u) | 0u)) * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))))) / ((1u & 1u) | 0u)) * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), 0u)))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))))) / ((1u & 1u) | 0u)) * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), 0u)))))), 1u, 0u), ~ (~ (uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))))) / ((1u & 1u) | 0u)) * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), 0u)))))), 1u, 0u))))))) / ((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size) | (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)) : _GLF_FUZZED(workgroup_base))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u)) | (subgroup_id * subgroup_size)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u)))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)) : _GLF_FUZZED(139489u)))))), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), subgroup_id)) * subgroup_size)), 0u))))))) / _GLF_IDENTITY(1u, (1u) | 0u)) : _GLF_FUZZED(subgroup_size)))), _GLF_IDENTITY(uint(uvec4(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), ((0u >> _GLF_IDENTITY(uint(8u), uint(8u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))), 1u, 1u))) * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u))), 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_id)))) | (subgroup_id * subgroup_size)), min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), false || (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u))))))) / 1u) : _GLF_FUZZED(subgroup_size)))), 1u, 1u, 0u)), clamp(uint(uvec4(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u)))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u)))))))) | 0u))), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u)))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u)))))))) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u)))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u)))))))) | 0u))), max(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u)))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u)))))))) | 0u))), _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u)))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u)))))))) | 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u)))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u)))))))) | 0u))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u)))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u)))))))) | 0u))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, uint(uvec4(_GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, ((subgroup_id * subgroup_size) >> 0u) | ((subgroup_id * subgroup_size) >> 0u)), 1u, 1u, 0u))))) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u)))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (true ? _GLF_FUZZED(workgroup_id) : _GLF_FUZZED(usubBorrow(subgroup_size, 14766u, workgroup_id)))) : subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u))))))) / 1u) : _GLF_FUZZED(subgroup_size)))), 1u, 1u, 0u)), uint(uvec4(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size))) << 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)))), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, (true ? _GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, ((subgroup_id * subgroup_size) >> 0u) | ((subgroup_id * subgroup_size) >> 0u)) : _GLF_FUZZED(num_workgroup))))) + 0u))), uint(uvec2(uint(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), max(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), 0u + (uint(subgroup_id * subgroup_size))), _GLF_IDENTITY(uint(subgroup_id * subgroup_size), (uint(subgroup_id * subgroup_size)) >> 0u)))), 0u)))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))), (subgroup_id * subgroup_size) >> 0u)))) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u))))))) / 1u) : _GLF_FUZZED(subgroup_size)))), 1u, 1u, 0u)), uint(uvec4(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(_GLF_IDENTITY(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u), max(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u), _GLF_IDENTITY(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u), (true ? uvec2(uint(uint(subgroup_id * subgroup_size)), 0u) : _GLF_FUZZED(uvec2(137117u, 128262u))))))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) / 1u), max(0u, 0u)))) + 0u))), uint(uvec2(uint(uint(subgroup_id * subgroup_size)), 0u)))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) + 0u), 0u ^ (subgroup_id)) * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) + 0u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(uint(subgroup_id * subgroup_size)), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_id * subgroup_size))), (~ (uint(uint(subgroup_id * subgroup_size)))) | (~ (uint(uint(subgroup_id * subgroup_size))))))), 0u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_id * subgroup_size))), (~ (uint(uint(subgroup_id * subgroup_size)))) | (~ (uint(uint(subgroup_id * subgroup_size))))))), 0u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_id * subgroup_size))), (~ (uint(uint(subgroup_id * subgroup_size)))) | (~ (uint(uint(subgroup_id * subgroup_size))))))), 0u), min(uvec2(_GLF_IDENTITY(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_id * subgroup_size))), (~ (uint(uint(subgroup_id * subgroup_size)))) | (~ (uint(uint(subgroup_id * subgroup_size))))))), 0u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_id * subgroup_size))), (~ (uint(uint(subgroup_id * subgroup_size)))) | (~ (uint(uint(subgroup_id * subgroup_size))))))), 0u), (uvec2(_GLF_IDENTITY(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_id * subgroup_size))), (~ (uint(uint(subgroup_id * subgroup_size)))) | (~ (uint(uint(subgroup_id * subgroup_size))))))), 0u)) >> uvec2(0u, 0u)))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), ~ (~ (uvec3(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_id * subgroup_size))), (~ (uint(uint(subgroup_id * subgroup_size)))) | (~ (uint(uint(subgroup_id * subgroup_size))))))), 0u), min(uvec2(_GLF_IDENTITY(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_id * subgroup_size))), (~ (uint(uint(subgroup_id * subgroup_size)))) | (~ (uint(uint(subgroup_id * subgroup_size))))))), 0u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_id * subgroup_size))), (~ (uint(uint(subgroup_id * subgroup_size)))) | (~ (uint(uint(subgroup_id * subgroup_size))))))), 0u), (uvec2(_GLF_IDENTITY(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_id * subgroup_size))), (~ (uint(uint(subgroup_id * subgroup_size)))) | (~ (uint(uint(subgroup_id * subgroup_size))))))), 0u)) >> uvec2(0u, 0u)))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))))), clamp(uvec2(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_id * subgroup_size))), (~ (uint(uint(subgroup_id * subgroup_size)))) | (~ (uint(uint(subgroup_id * subgroup_size))))))), 0u), min(uvec2(_GLF_IDENTITY(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_id * subgroup_size))), (~ (uint(uint(subgroup_id * subgroup_size)))) | (~ (uint(uint(subgroup_id * subgroup_size))))))), 0u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_id * subgroup_size))), (~ (uint(uint(subgroup_id * subgroup_size)))) | (~ (uint(uint(subgroup_id * subgroup_size))))))), 0u), (uvec2(_GLF_IDENTITY(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_id * subgroup_size))), (~ (uint(uint(subgroup_id * subgroup_size)))) | (~ (uint(uint(subgroup_id * subgroup_size))))))), 0u)) >> uvec2(0u, 0u)))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), ~ (~ (uvec3(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_id * subgroup_size))), (~ (uint(uint(subgroup_id * subgroup_size)))) | (~ (uint(uint(subgroup_id * subgroup_size))))))), 0u), min(uvec2(_GLF_IDENTITY(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_id * subgroup_size))), (~ (uint(uint(subgroup_id * subgroup_size)))) | (~ (uint(uint(subgroup_id * subgroup_size))))))), 0u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_id * subgroup_size))), (~ (uint(uint(subgroup_id * subgroup_size)))) | (~ (uint(uint(subgroup_id * subgroup_size))))))), 0u), (uvec2(_GLF_IDENTITY(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_id * subgroup_size))), (~ (uint(uint(subgroup_id * subgroup_size)))) | (~ (uint(uint(subgroup_id * subgroup_size))))))), 0u)) >> uvec2(0u, 0u)))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))))), uvec2(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_id * subgroup_size))), (~ (uint(uint(subgroup_id * subgroup_size)))) | (~ (uint(uint(subgroup_id * subgroup_size))))))), 0u), min(uvec2(_GLF_IDENTITY(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_id * subgroup_size))), (~ (uint(uint(subgroup_id * subgroup_size)))) | (~ (uint(uint(subgroup_id * subgroup_size))))))), 0u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_id * subgroup_size))), (~ (uint(uint(subgroup_id * subgroup_size)))) | (~ (uint(uint(subgroup_id * subgroup_size))))))), 0u), (uvec2(_GLF_IDENTITY(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_id * subgroup_size))), (~ (uint(uint(subgroup_id * subgroup_size)))) | (~ (uint(uint(subgroup_id * subgroup_size))))))), 0u)) >> uvec2(0u, 0u)))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), ~ (~ (uvec3(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_id * subgroup_size))), (~ (uint(uint(subgroup_id * subgroup_size)))) | (~ (uint(uint(subgroup_id * subgroup_size))))))), 0u), min(uvec2(_GLF_IDENTITY(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_id * subgroup_size))), (~ (uint(uint(subgroup_id * subgroup_size)))) | (~ (uint(uint(subgroup_id * subgroup_size))))))), 0u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_id * subgroup_size))), (~ (uint(uint(subgroup_id * subgroup_size)))) | (~ (uint(uint(subgroup_id * subgroup_size))))))), 0u), (uvec2(_GLF_IDENTITY(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_id * subgroup_size))), (~ (uint(uint(subgroup_id * subgroup_size)))) | (~ (uint(uint(subgroup_id * subgroup_size))))))), 0u)) >> uvec2(0u, 0u)))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))))), uvec2(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_id * subgroup_size))), (~ (uint(uint(subgroup_id * subgroup_size)))) | (~ (uint(uint(subgroup_id * subgroup_size))))))), 0u), min(uvec2(_GLF_IDENTITY(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_id * subgroup_size))), (~ (uint(uint(subgroup_id * subgroup_size)))) | (~ (uint(uint(subgroup_id * subgroup_size))))))), 0u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_id * subgroup_size))), (~ (uint(uint(subgroup_id * subgroup_size)))) | (~ (uint(uint(subgroup_id * subgroup_size))))))), 0u), (uvec2(_GLF_IDENTITY(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_id * subgroup_size))), (~ (uint(uint(subgroup_id * subgroup_size)))) | (~ (uint(uint(subgroup_id * subgroup_size))))))), 0u)) >> uvec2(0u, 0u)))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), ~ (~ (uvec3(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_id * subgroup_size))), (~ (uint(uint(subgroup_id * subgroup_size)))) | (~ (uint(uint(subgroup_id * subgroup_size))))))), 0u), min(uvec2(_GLF_IDENTITY(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_id * subgroup_size))), (~ (uint(uint(subgroup_id * subgroup_size)))) | (~ (uint(uint(subgroup_id * subgroup_size))))))), 0u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_id * subgroup_size))), (~ (uint(uint(subgroup_id * subgroup_size)))) | (~ (uint(uint(subgroup_id * subgroup_size))))))), 0u), (uvec2(_GLF_IDENTITY(uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_id * subgroup_size))), (~ (uint(uint(subgroup_id * subgroup_size)))) | (~ (uint(uint(subgroup_id * subgroup_size))))))), 0u)) >> uvec2(0u, 0u)))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))))))))) | (uvec2(_GLF_IDENTITY(uint(uint(subgroup_id * subgroup_size)), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_id * subgroup_size))), _GLF_IDENTITY((~ (uint(uint(subgroup_id * subgroup_size)))), max((~ (uint(uint(subgroup_id * subgroup_size)))), (~ (uint(uint(subgroup_id * subgroup_size)))))) | (~ (uint(uint(subgroup_id * subgroup_size))))))), 0u))))))))) / 1u) : _GLF_FUZZED(subgroup_size)))), 1u, 1u, 0u)))))))) - 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, false)))))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < int(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, abs(1.0), 1.0))).y), clamp(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, abs(1.0), 1.0))).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, abs(1.0), 1.0))).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, abs(1.0), 1.0))).y)))), ! _GLF_IDENTITY((! (_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)))), false || ((! (_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))))))))) || false); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_DEAD(false)) && true))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec4((subgroup_local_id + 1), 1u, 1u, 1u)))) | 0u) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec4((subgroup_local_id + 1), 1u, 1u, 1u)))) | 0u) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec4((subgroup_local_id + 1), 1u, 1u, 1u)))) | 0u) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))))))) : _GLF_FUZZED(subgroup_local_id)))), max(~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec4((subgroup_local_id + 1), 1u, 1u, 1u)))) | 0u) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec4((subgroup_local_id + 1), 1u, 1u, 1u)))) | 0u) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))))))) : _GLF_FUZZED(subgroup_local_id)))), ~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec4((subgroup_local_id + 1), 1u, 1u, 1u)))) | 0u) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec4((subgroup_local_id + 1), 1u, 1u, 1u)))) | 0u) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))))))) : _GLF_FUZZED(subgroup_local_id))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (64) ^ 0), 64)), 4);
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     barrier();
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (true ? buf[virtual_gid] : _GLF_FUZZED(subgroup_size))), 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (! (_GLF_WRAPPED_IF_TRUE(true))) || false))))
  {
   if(subgroup_local_id + 1 < subgroup_size)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.0)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
                barrier();
              }
             else
              {
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
         barrier();
        }
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
      }
     else
      {
      }
     atomicStore(checker[virtual_gid], read, 4, 64, 4);
     subgroupAll(false);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.0)), vec2(_GLF_FUZZED(-0.6), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-4.4) : (injectionSwitch)[1]))))), bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), true && (! (false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (false), true && (! _GLF_IDENTITY((false), ! (! ((false)))))), false)))))))), true))).y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               barrier();
              }
            }
           else
            {
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
     atomicStore(checker[virtual_gid], read, 4, 64, 4);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       subgroupAll(true);
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
}
