#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_9 {
 float _f0;
} ;

struct _GLF_struct_8 {
 bvec2 _f0;
 mat3x2 _f1;
 mat4x3 _f2;
 mat4x3 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_7 {
 mat4x2 _f0;
 int _f1;
 vec4 _f2;
 mat2 _f3;
 vec3 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_6 {
 mat4x3 _f0;
 uint _f1;
 mat2 _f2;
} ;

struct _GLF_struct_10 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_9 _f3;
} ;

struct _GLF_struct_11 {
 uint workgroup_size;
 vec2 _f0;
 bvec3 _f1;
 _GLF_struct_10 _f2;
} ;

struct _GLF_struct_3 {
 ivec2 _f0;
} ;

struct _GLF_struct_2 {
 uvec3 _f0;
 ivec2 _f1;
 ivec3 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_1 {
 mat3 _f0;
 ivec4 _f1;
 int _f2;
} ;

struct _GLF_struct_0 {
 mat2x4 _f0;
 bool _f1;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 ivec2 _f3;
 _GLF_struct_3 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_5 {
 uvec4 _f0;
 _GLF_struct_4 _f1;
 bvec4 _f2;
 uint workgroup_base;
 uvec2 _f3;
 mat4x3 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), (false || (_GLF_DEAD(false))) && true)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-9556.2467), (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-9556.2467)) + 0.0))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), 0.0, 0.0))))))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-68.91)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0)), (float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0))) / 1.0))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), false, true))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))), ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.2)), bool(false)))), float(_GLF_FUZZED(8.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || false)), (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.5), _GLF_FUZZED((-6053.2250 + 9.1))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y))))))) || false))) && true)))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))), ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.2)), bool(false)))), float(_GLF_FUZZED(8.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || false)), (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.5), _GLF_FUZZED((-6053.2250 + 9.1))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y))))))) || false))) && true)))) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))), ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.2)), bool(false)))), float(_GLF_FUZZED(8.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || false)), (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.5), _GLF_FUZZED((-6053.2250 + 9.1))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y))))))) || false))) && true)))) || false)), bool(bvec4((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))), ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.2)), bool(false)))), float(_GLF_FUZZED(8.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || false)), (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.5), _GLF_FUZZED((-6053.2250 + 9.1))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y))))))) || false))) && true)))) || false)), true, true, false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), ! (! (_GLF_IDENTITY(false, (false) || false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)) : _GLF_FUZZED(28.33)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), true, false), bvec3(bvec4(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), true, false), false))))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, 0.0), vec4(0.0, 0.0, exp(0.0), 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, exp(0.0), 1.0))), 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0), mat3x4(mat3x4(mat3x4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, exp(0.0), 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, exp(0.0), 1.0))), 0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (0.0) - 0.0))), sqrt(0.0), 1.0, 0.0, 1.0, 1.0))))), (vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, exp(0.0), 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - length(vec4(0.0, 0.0, 0.0, 0.0)))) * 1.0), 0.0, exp(0.0), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-414.245)), float(1.0), bool(true))), 1.0))))), 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0), mat3x4(mat3x4(mat3x4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, exp(0.0), 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, exp(0.0), 1.0))), 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0)))))) * mat2(1.0))).x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(44652u)), _GLF_FUZZED(-0.4)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), bool(bvec2((_GLF_IDENTITY(false, bool(bvec2(false, false)))), true))) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))))))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, true, true)))) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(gl_WorkGroupSize.x, vec2(1.0), bvec3(true), _GLF_struct_10(_GLF_struct_6(mat4x3(1.0), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), max(~ (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), ~ (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))))), mat2(1.0)), _GLF_struct_7(mat4x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 1, vec4(1.0), _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)), mat2(1.0) * ((mat2(1.0)))) + mat2(0.0, 0.0, 0.0, 0.0)), vec3(1.0), mat3x4(1.0)), _GLF_struct_8(bvec2(true), mat3x2(1.0), mat4x3(1.0), mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-7491.2962) : 1.0))) - 0.0)) * 1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4((_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-7491.2962) : 1.0))) - 0.0)) * 1.0, 1.0, 1.0, 0.0, log(1.0), 0.0, 0.0, 0.0), mat2x4(mat2x4(mat2x4((_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-7491.2962) : 1.0))) - 0.0)) * 1.0, 1.0, 1.0, 0.0, log(1.0), 0.0, 0.0, 0.0))))), float(mat4x2(float(_GLF_IDENTITY(mat2x4((_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-7491.2962) : 1.0))) - 0.0)) * 1.0, 1.0, 1.0, 0.0, log(1.0), 0.0, 0.0, 0.0), mat2x4(mat2x4(mat2x4((_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6.8) : 1.0)), 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-7491.2962) : 1.0))) - 0.0)) * 1.0, 1.0, 1.0, 0.0, log(1.0), 0.0, 0.0, 0.0))))), 0.0, sin(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)))))), ivec3(1)), _GLF_struct_9(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.8) : 1.0)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(uvec4(1u), _GLF_struct_4(_GLF_struct_0(mat2x4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), true), _GLF_struct_1(mat3(1.0), ivec4(1), 1), _GLF_struct_2(_GLF_IDENTITY(uvec3(1u), min(uvec3(1u), _GLF_IDENTITY(uvec3(1u), (uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | (~ _GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), (false ? _GLF_FUZZED(subgroup_size) : (1u))), (1u))))))), 1u)))) | (_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(0u, 0u, 0u)), min(~ (uvec3(0u, 0u, 0u)), ~ (uvec3(0u, 0u, 0u))))))))))), ivec2(1), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) ^ 0)))), (ivec3(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) ^ 0))))) | ivec3(0, 0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (ivec4(1)) | (ivec4(1))), (ivec4(_GLF_IDENTITY(1, (1) ^ 0))) ^ ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), clamp(vec2(vec4(injectionSwitch, 1.0, 1.0)), vec2(vec4(injectionSwitch, 1.0, 1.0)), vec2(vec4(injectionSwitch, 1.0, 1.0))))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 + (1))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 + (1))), (int(_GLF_IDENTITY(1, 0 + (1)))) * _GLF_IDENTITY(1, (1) << 0)), int(_GLF_IDENTITY(1, 0 + (1))), int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (false ? _GLF_FUZZED(-38996) : _GLF_IDENTITY(1, (1) | (1)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (false ? _GLF_FUZZED(-38996) : _GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (false ? _GLF_FUZZED(-38996) : _GLF_IDENTITY(1, (1) | (1)))))), _GLF_IDENTITY(0 + (1), int(ivec2(_GLF_IDENTITY(0 + (1), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0 + (1), clamp(0 + (1), _GLF_IDENTITY(0 + (1), clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), (0 + (1)) | (0 | 0)))), _GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec4(0, 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0))) + (1), (0 + (1)) / 1))))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(0 + (1), clamp(0 + (1), _GLF_IDENTITY(0 + (1), clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), (0 + (1)) | (0 | 0)))), _GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec4(0, 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0))) + (1), (0 + (1)) / 1))))), clamp((~ (_GLF_IDENTITY(0 + (1), clamp(0 + (1), _GLF_IDENTITY(0 + (1), clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), (0 + (1)) | (0 | 0)))), _GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec4(0, 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0))) + (1), (0 + (1)) / 1))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(0 + (1), clamp(0 + (1), _GLF_IDENTITY(0 + (1), clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), (0 + (1)) | (0 | 0)))), _GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec4(0, 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0))) + (1), (0 + (1)) / 1))))), min((~ (_GLF_IDENTITY(0 + (1), clamp(0 + (1), _GLF_IDENTITY(0 + (1), clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), (0 + (1)) | (0 | 0)))), _GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec4(0, 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0))) + (1), (0 + (1)) / 1))))), (~ (_GLF_IDENTITY(0 + (1), clamp(0 + (1), _GLF_IDENTITY(0 + (1), clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), (0 + (1)) | (0 | 0)))), _GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec4(0, 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0))) + (1), (0 + (1)) / 1))))))), (~ (_GLF_IDENTITY(0 + (1), clamp(0 + (1), _GLF_IDENTITY(0 + (1), clamp(0 + (1), 0 + (1), _GLF_IDENTITY(0 + (1), (0 + (1)) | (0 | 0)))), _GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec4(0, 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0))) + (1), (0 + (1)) / 1))))))) : _GLF_FUZZED(-4729)))), 1)))))))), 0 ^ (_GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) - 0)), (0 + (1)) | (_GLF_IDENTITY(_GLF_IDENTITY(0 + (_GLF_IDENTITY(1, int(ivec3(1, 0, 1)))), (0 + (1)) << 0), (true ? 0 + (1) : _GLF_FUZZED(-42821))))))), clamp(int(_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (1), min(_GLF_IDENTITY(0 + (1), (false ? _GLF_FUZZED(83873) : 0 + (1))), 0 + (1))))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 + (1))), _GLF_IDENTITY((int(_GLF_IDENTITY(1, 0 + (1)))) - 0, 0 | ((int(_GLF_IDENTITY(1, 0 + (1)))) - 0))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 + (1))), _GLF_IDENTITY((int(_GLF_IDENTITY(1, 0 + (1)))) - 0, 0 | _GLF_IDENTITY(((int(_GLF_IDENTITY(1, 0 + (1)))) - 0), (_GLF_IDENTITY(((int(_GLF_IDENTITY(1, 0 + (1)))) - 0), (_GLF_IDENTITY(((int(_GLF_IDENTITY(1, 0 + (1)))) - 0), (((int(_GLF_IDENTITY(1, 0 + (1)))) - 0)) + 0)) + 0)) | (((int(_GLF_IDENTITY(1, 0 + (1)))) - 0))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 + (1))), _GLF_IDENTITY((int(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) + (1)))) - 0, 0 | ((int(_GLF_IDENTITY(1, 0 + (1)))) - 0)))) * 1)), 0 + ((_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 + (1))), _GLF_IDENTITY((int(_GLF_IDENTITY(1, 0 + (1)))) - 0, 0 | _GLF_IDENTITY(((int(_GLF_IDENTITY(1, 0 + (1)))) - 0), (_GLF_IDENTITY(((int(_GLF_IDENTITY(1, 0 + (1)))) - 0), (_GLF_IDENTITY(((int(_GLF_IDENTITY(1, 0 + (1)))) - 0), (((int(_GLF_IDENTITY(1, 0 + (1)))) - 0)) + 0)) + 0)) | (((int(_GLF_IDENTITY(1, 0 + (1)))) - 0))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 + (1))), _GLF_IDENTITY((int(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) + (1)))) - 0, 0 | ((int(_GLF_IDENTITY(1, 0 + (1)))) - 0)))) * 1)))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 + (1))), _GLF_IDENTITY((int(_GLF_IDENTITY(1, 0 + (1)))) - 0, 0 | ((int(_GLF_IDENTITY(1, 0 + (1)))) - 0))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 + (1))), _GLF_IDENTITY((int(_GLF_IDENTITY(1, 0 + (1)))) - 0, 0 | ((int(_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), ((1)) | ((1)))))) - 0))), _GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 + (1))), _GLF_IDENTITY((int(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (0 >> _GLF_IDENTITY(int(0), int(0))) + (_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 ^ (1))))) | (1)))))))) - 0, 0 | ((int(_GLF_IDENTITY(1, 0 + (1)))) - 0))), _GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 + (1))), _GLF_IDENTITY((int(_GLF_IDENTITY(1, 0 + (1)))) - 0, 0 | ((int(_GLF_IDENTITY(1, 0 + (1)))) - 0))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), 0 + (1)))))), _GLF_IDENTITY((int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), 0 + _GLF_IDENTITY((1), int(ivec2(_GLF_IDENTITY((1), ((1)) | 0), (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | (int(6)))))))))), clamp(int(_GLF_IDENTITY(1, 0 + (1))), int(_GLF_IDENTITY(1, 0 + (1))), int(_GLF_IDENTITY(1, 0 + (1))))))) | (int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, 1 * (0)) + (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY((_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), int(ivec3((1), 0, 1))))), ((_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), int(_GLF_IDENTITY(ivec3((1), 0, 1), (ivec3((1), 0, 1)) - (ivec3(99543, -36999, -95151) & (ivec3(0, 0, 0) | ivec3(0, 0, 0))))))))) | ((0 << _GLF_IDENTITY(int(2), int(2))) & -75083)) / 1)) * 1)), clamp(int(_GLF_IDENTITY(1, 0 + (1))), int(_GLF_IDENTITY(1, 0 + (1))), int(_GLF_IDENTITY(1, 0 + (1))))))), ((int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (1), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) >> 0), 1))) ^ 0) * (0 + (1))))), clamp(int(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, max(1, 1)) * (_GLF_IDENTITY(1, 0 + (1))))), int(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, ~ (~ _GLF_IDENTITY(((1) << 0), max(_GLF_IDENTITY((_GLF_IDENTITY((1), (_GLF_IDENTITY((1), int(ivec3((1), 1, 1)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0), ((_GLF_IDENTITY((1), (_GLF_IDENTITY((1), int(ivec3((1), 1, 1)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0)) - (0 & ivec4(-61024, -6824, 29723, 12859).b)), _GLF_IDENTITY(((1) << 0), int(_GLF_IDENTITY(int(((1) << 0)), (int(((1) << 0))) ^ 0)))))))), 0 + (1))), int(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) | (1))))))))) | _GLF_IDENTITY((int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) << 0, 0 | (_GLF_IDENTITY((0) << 0, (_GLF_IDENTITY((0) << 0, int(int((0) << 0)))) | 0)))) + (1))), clamp(int(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), min((1), (1)))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), min((1), (1)))), (_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), min((1), (1))))) >> 0)))), int(_GLF_IDENTITY(1, 0 + (1))), int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y))), 0 + (1))))))), max((int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) << 0, 0 | (_GLF_IDENTITY((0) << 0, (_GLF_IDENTITY((0) << 0, int(int((0) << 0)))) | 0)))) + (1))), clamp(int(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), min((1), (1)))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), min((1), (1)))), (_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), min((1), (1))))) >> 0)))), int(_GLF_IDENTITY(1, 0 + (1))), int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y))), 0 + (1))))))), (int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) << 0, 0 | (_GLF_IDENTITY((0) << 0, (_GLF_IDENTITY((0) << 0, int(int((0) << 0)))) | 0)))) + (1))), clamp(int(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), min((1), (1)))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), min((1), (1)))), (_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), min((1), (1))))) >> 0)))), int(_GLF_IDENTITY(1, 0 + (1))), int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y))), 0 + (1)))))))))) | 0)))))) << _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) / 1))), _GLF_struct_3(ivec2(1)), ivec4(_GLF_IDENTITY(1, max(1, 1)))), bvec4(true), _GLF_struct_replacement_11.workgroup_size * workgroup_id, uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uint(1u))), min(_GLF_IDENTITY(1u, uint(uint(1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uint(1u))), 0u | (_GLF_IDENTITY(1u, uint(uint(1u)))))))) * 1u)), mat4x3(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (true))) && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, _GLF_IDENTITY(0, 0 ^ (0)) + (1))]))), vec2(_GLF_FUZZED((-7.5)), _GLF_FUZZED(683.722)), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec2(48.26, 4.5), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec2(48.26, 4.5) : _GLF_FUZZED(injectionSwitch))).s)), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-48.68)))), bool(true))) > injectionSwitch.y)), false))).x, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, _GLF_IDENTITY(0, 0 ^ (0)) + (1))]))), vec2(_GLF_FUZZED((-7.5)), _GLF_FUZZED(683.722)), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec2(48.26, 4.5), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec2(48.26, 4.5) : _GLF_FUZZED(injectionSwitch))).s)), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-48.68)))), bool(true))) > injectionSwitch.y)), false))).x) - sqrt(0.0)) > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY(_GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), true && ((! (true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), true && ((! (true)))))), (_GLF_IDENTITY((! _GLF_IDENTITY((true), bool(bvec3((true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (_GLF_IDENTITY((! (true)), true && ((! (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), true && (! ((true)))))))))))))) && true))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), true && ((! (true)))))))), (! (_GLF_IDENTITY(true, _GLF_IDENTITY(! _GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), true && ((! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)))))))))), false || (! _GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), true && ((! (true))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_IDENTITY(true, _GLF_IDENTITY(! _GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), _GLF_IDENTITY(true, true && (true)) && ((! (_GLF_IDENTITY(true, (true) && true))))))), ! (! (! _GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), true && ((! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false))))))))))))) && true))) && (false)), (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x4(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat2x3((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-24.87)), bvec2(true, false))))[0], 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), sqrt(0.0), 0.0, 1.0)), mix(float(float(mat2x3((injectionSwitch)[0], 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), min(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-0.8), (vec2(0.0, 0.0))[1]), vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(0.6)), bvec2(true, false))), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0)))))), (vec2(0.0, 0.0)) + vec2(0.0, 0.0)))), vec2(1.0, 1.0))), sqrt(0.0), 0.0, 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED(-67.40)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(tan(750.120)) : float(_GLF_FUZZED(-67.40)))), bool(false)))), 0.0, sqrt(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0))))), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), vec3(1.0, 0.0, 0.0))), 0.0, 0.0))), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))))[1]), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), max(_GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), (mat2(1.0) * ((injectionSwitch))) / vec2(1.0, 1.0)), mat2(1.0) * ((injectionSwitch))))) * mat2(1.0)).y)) ? _GLF_FUZZED(injectionSwitch) : vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(491.768, -71.37)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))[0], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED((-7.5)), float(float(_GLF_FUZZED((-7.5))))), _GLF_FUZZED(683.722)), mix(vec2(_GLF_FUZZED(-1.9), _GLF_FUZZED(-1643.4272)), vec2((vec2(_GLF_IDENTITY(_GLF_FUZZED((-7.5)), float(float(_GLF_FUZZED((-7.5))))), _GLF_FUZZED(683.722)))[0], (vec2(_GLF_IDENTITY(_GLF_FUZZED((-7.5)), float(float(_GLF_FUZZED((-7.5))))), _GLF_FUZZED(683.722)))[1]), bvec2(true, true))), max(vec2(_GLF_FUZZED((-7.5)), _GLF_FUZZED(683.722)), vec2(_GLF_FUZZED((-7.5)), _GLF_FUZZED(683.722)))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)))).x > injectionSwitch.y))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (true))) && (false)), (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 0 + (1))]))), vec2(_GLF_FUZZED((-7.5)), _GLF_FUZZED(683.722)), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec2(48.26, 4.5).s)), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-48.68)))), bool(true))) > injectionSwitch.y)), false))).x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY(_GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), true && ((! (true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), true && ((! (true)))))), (_GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), true && ((! (_GLF_IDENTITY(true, false || (true))))))))) && true))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), true && ((! (true)))))))), (! (_GLF_IDENTITY(true, _GLF_IDENTITY(! _GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), true && ((! (true)))))), false || (! _GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), true && ((! (true))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_IDENTITY(true, _GLF_IDENTITY(! _GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), true && ((! (_GLF_IDENTITY(true, (true) && true))))))), ! (! (! _GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), true && ((! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false))))))))))))) && true))) && (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY(_GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(true, true && (true)))), true && ((! (true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), _GLF_IDENTITY(true, (true) && true) && ((! (true)))))), (_GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), true && ((! (_GLF_IDENTITY(true, false || (true))))))))) && true))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), true && (! (_GLF_IDENTITY(true, ! (! (true))))))), true && (_GLF_IDENTITY((! (true)), true && ((! (true)))))))), (! (_GLF_IDENTITY(true, _GLF_IDENTITY(! _GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (! (! (true))))), true && ((! (true)))))), false || (! _GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), true && ((! (true))))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4.1)), float(injectionSwitch.x), bool(true))), injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y))), (! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), true && ((! (_GLF_IDENTITY(true, (true) && true))))))), bool(bvec2(! _GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), true && ((! (_GLF_IDENTITY(true, (true) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (! _GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), true && ((! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false))))))))))))) && true))) && (false))) || false), (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x4(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat2x3((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-24.87)), bvec2(true, false))))[0], _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), sqrt(0.0), 0.0, 1.0)), mix(float(float(mat2x3((injectionSwitch)[0], 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) + vec2(0.0, 0.0)))), _GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0)), vec2(1.0, 1.0))))), sqrt(0.0), 0.0, 1.0))), float(_GLF_FUZZED(-67.40)), bool(false)))), 0.0, sqrt(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0)), max(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0)))))), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, 1.0 * (0.0)))))), dot(vec3(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), vec3(1.0, 0.0, 0.0))), 0.0, 0.0))), (injectionSwitch)[1]), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), (mat2(1.0) * ((injectionSwitch))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), (mat2(1.0) * ((injectionSwitch))) / vec2(1.0, 1.0))) * mat2(1.0)), mat2(1.0) * ((injectionSwitch))))) * mat2(1.0)).y)) ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) : vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(491.768, -71.37)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))[0], (injectionSwitch)[1]))), _GLF_IDENTITY(vec2(_GLF_FUZZED((-7.5)), _GLF_FUZZED(683.722)), max(vec2(_GLF_FUZZED((-7.5)), _GLF_FUZZED(683.722)), vec2(_GLF_FUZZED((-7.5)), _GLF_FUZZED(683.722)))), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))), false))).x > injectionSwitch.y))) && true))), true && (bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, true))), ! (! (true))) && (false)), (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (1), (0 + (1)) | (0 + (1))))]))), vec2(_GLF_FUZZED((-7.5)), _GLF_FUZZED(683.722)), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec2(48.26, 4.5).s)), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-48.68)))), bool(true))), mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec2(48.26, 4.5).s)), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-48.68)))), bool(true)))), float(_GLF_FUZZED(-4.4)), bool(false))) > injectionSwitch.y)), false))).x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (true), true && (! (true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY((! (true)), true && ((! (true)))), ! (! (_GLF_IDENTITY((! (true)), true && ((! (true))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (true)), _GLF_IDENTITY(true && (_GLF_IDENTITY((! (true)), true && ((! (true))))), bool(bool(true && (_GLF_IDENTITY((! (true)), true && ((! (true))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), true && ((! (_GLF_IDENTITY(true, false || (true)))))))), ! (! (_GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)), true && ((! (_GLF_IDENTITY(true, false || (true)))))))))))) && true))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), true && ((! (true)))))))), (! (_GLF_IDENTITY(true, _GLF_IDENTITY(! _GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), true && ((! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), bool(bvec3(! ((true)), false, true)))))))))), false || (! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && (_GLF_IDENTITY((! (true)), true && ((! (true))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY((! (_GLF_IDENTITY(true, _GLF_IDENTITY(! _GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), true && ((! (_GLF_IDENTITY(true, (true) && true))))))), ! (! (! _GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), true && ((! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false))))))))))))) && true, bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(true, _GLF_IDENTITY(! _GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), true && ((! (_GLF_IDENTITY(true, (true) && true))))))), ! (! (! _GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), true && ((! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false))))))))))))) && true, bool(bvec3((! (_GLF_IDENTITY(true, _GLF_IDENTITY(! _GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), true && ((! (_GLF_IDENTITY(true, (true) && true))))))), ! (! (! _GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), true && ((! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false))))))))))))) && true, false, true))), false, false)))))) && (false)), (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x4(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat2x3((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-24.87)), bvec2(true, false))))[0], 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), sqrt(0.0), 0.0, 1.0)), mix(float(float(mat2x3((injectionSwitch)[0], 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0, 1.0))) * (_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY((vec2(0.0, 0.0)) + vec2(0.0, 0.0), clamp((vec2(0.0, 0.0)) + vec2(0.0, 0.0), (vec2(0.0, 0.0)) + vec2(0.0, 0.0), (vec2(0.0, 0.0)) + vec2(0.0, 0.0)))))), vec2(1.0, 1.0))), sqrt(0.0), 0.0, 1.0))), float(_GLF_FUZZED(-67.40)), bool(false)))), 0.0, _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(404.755)), float(sqrt(0.0)), bool(true))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-47.35)), bool(false))), min(0.0, 0.0)), 1.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), vec3(1.0, 0.0, 0.0))), 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), max(vec2(injectionSwitch), vec2(injectionSwitch))))))[1]), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), max(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY(((injectionSwitch)), max(((injectionSwitch)), ((injectionSwitch)))), (mat2(1.0) * ((injectionSwitch))) / vec2(1.0, 1.0)), mat2(1.0) * ((injectionSwitch))))) * mat2(1.0)).y)) ? _GLF_FUZZED(injectionSwitch) : vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(491.768, -71.37)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))[0], (injectionSwitch)[1]))), _GLF_IDENTITY(vec2(_GLF_FUZZED((-7.5)), _GLF_FUZZED(683.722)), max(vec2(_GLF_FUZZED(_GLF_IDENTITY((-7.5), max(_GLF_IDENTITY((-7.5), float(mat2x4((-7.5), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))), (-7.5)))), _GLF_FUZZED(683.722)), vec2(_GLF_FUZZED((-7.5)), _GLF_FUZZED(683.722)))), bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), false))).x > injectionSwitch.y))) && true))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0, 1.0))).y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base, 0u | (_GLF_struct_replacement_5.workgroup_base)) + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u);
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), 0u))) * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(ivec3(1, 0, 0)))))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 1u, 0u)))) << 0u)), ~ (~ (((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(ivec3(1, 0, 0)))))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 1u, 0u)))) << 0u))))), (_GLF_struct_replacement_5.workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), 0u))) * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(ivec3(1, 0, 0)))))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 1u, 0u)))) << 0u)), ~ (~ (((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(ivec3(1, 0, 0)))))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 1u, 0u)))) << 0u)))))) << 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, clamp(4, 4, 4)))), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(float(-31042)), _GLF_IDENTITY((vec2(0.0, 0.0))[1], clamp(_GLF_IDENTITY((vec2(0.0, 0.0))[1], min((vec2(0.0, 0.0))[1], (vec2(0.0, 0.0))[1])), (vec2(0.0, 0.0))[1], (vec2(0.0, 0.0))[1]))), vec2((_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.5)), bool(false))))))), 0.0), (false ? _GLF_FUZZED(vec2(-1684.0009, -2.6)) : vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.5)), bool(false))))))), 0.0))))[0], _GLF_FUZZED((8.8 - 3526.8473))), bvec2(true, false)))).x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) || false)) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.9)), float(injectionSwitch.x), bool(true))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.9)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.9)), float(injectionSwitch.x), bool(true))))) < injectionSwitch.y))))))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) | (virtual_gid), (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true)) ? _GLF_FUZZED((++ subgroup_id)) : (virtual_gid) | (virtual_gid))))), 0u ^ ((_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) | (virtual_gid), (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bool(true))) && (false)) ? _GLF_FUZZED((++ subgroup_id)) : (virtual_gid) | (virtual_gid))))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) | (virtual_gid), (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true)) ? _GLF_FUZZED((++ subgroup_id)) : (virtual_gid) | (virtual_gid))))), 0u ^ ((_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) | (virtual_gid), (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bool(true))) && (false)) ? _GLF_FUZZED((++ subgroup_id)) : (virtual_gid) | (virtual_gid))))))))) >> (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), ~ (~ (0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, uint(uvec3(8u, 0u, 0u))))))))) * 1u)))], _GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4)))), 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true))), false || (_GLF_IDENTITY(false, false || (false))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))))))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), false, true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))))) && true))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(94497), clamp(_GLF_FUZZED(94497), _GLF_IDENTITY(_GLF_FUZZED(94497), 0 ^ (_GLF_IDENTITY(_GLF_FUZZED(94497), int(ivec4(_GLF_FUZZED(94497), 0, 1, 0))))), _GLF_IDENTITY(_GLF_FUZZED(94497), (true ? _GLF_FUZZED(94497) : _GLF_FUZZED(97108))))))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(94497), clamp(_GLF_FUZZED(94497), _GLF_IDENTITY(_GLF_FUZZED(94497), 0 ^ (_GLF_IDENTITY(_GLF_FUZZED(94497), int(ivec4(_GLF_FUZZED(94497), 0, 1, 0))))), _GLF_IDENTITY(_GLF_FUZZED(94497), (true ? _GLF_FUZZED(94497) : _GLF_FUZZED(97108))))))), (subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(94497), clamp(_GLF_FUZZED(94497), _GLF_IDENTITY(_GLF_FUZZED(94497), 0 ^ (_GLF_IDENTITY(_GLF_FUZZED(94497), int(ivec4(_GLF_FUZZED(94497), 0, 1, 0))))), _GLF_IDENTITY(_GLF_FUZZED(94497), (true ? _GLF_FUZZED(94497) : _GLF_FUZZED(97108)))))))) >> 0u))) < subgroup_size)
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, false)))), _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, false)))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, false)))), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, false)))), false, false), false)))))), true && (true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, false))))))) && true), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, false))), false, false, true)))) && true)), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, false)))), false, false), false)))))))), true && (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, false)))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, false)))), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, false)))), false, false), _GLF_IDENTITY(false, false || (false)))))))), true && (true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (false)), true, true, false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))))))) && true), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, false))), false, false, true)))) && true)), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))), true, true, false)))), false, false), _GLF_IDENTITY(false, (false) || false)))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec4(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), false, true, true))))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (read) | (_GLF_IDENTITY(read, (read) ^ 0u))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) < injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))), false, true, false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec2(bvec2(bvec2(false, true)))))))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, true))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x, cos(0.0) * (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), true))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))))))
      barrier();
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_IDENTITY(true, ! (! (true))) && ((! (_GLF_DEAD(false))))) && true)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), true && ((true))))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), false || (bool(bvec4(false, true, true, false))))), (injectionSwitch.x > injectionSwitch.y)))))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
}
