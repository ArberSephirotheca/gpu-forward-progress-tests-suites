#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, false))), false, false))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x, gl_WorkGroupSize.x))) >> 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), min(_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)), ((uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u)) | (gl_WorkGroupSize))), (uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) | (gl_WorkGroupSize), clamp((uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) | (gl_WorkGroupSize), _GLF_IDENTITY((uvec3(0u, 0u, 0u) | uvec3(0u, _GLF_IDENTITY(0u, (0u) | 0u), 0u)) | (gl_WorkGroupSize), uvec3(0u, 0u, 0u) + ((uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) | (gl_WorkGroupSize))), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) | (gl_WorkGroupSize)))))) ^ uvec3(0u, 0u, 0u))), (true ? uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) | (gl_WorkGroupSize))), (uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) | _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | ((gl_WorkGroupSize)))))) ^ uvec3(0u, 0u, 0u))) : _GLF_FUZZED(min(_GLF_IDENTITY(uvec3(132334u, 84650u, 190087u), uvec3(uvec3(uvec3(132334u, 84650u, 190087u)))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(155934u, (true ? _GLF_IDENTITY(155934u, (155934u) | (155934u)) : _GLF_FUZZED((++ num_workgroup)))), 185944u, 45380u), min(uvec3(155934u, 185944u, 45380u), uvec3(155934u, 185944u, 45380u)))))))).x, gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), min(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), _GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), ~ (~ (_GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), ~ (~ (max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))))))))))) + _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) - 0u)) | ((0u))) - 0u)), _GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_DEAD(false))))) && true))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false)))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) / 1u), (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) / 1u)) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(498.804, clamp(_GLF_IDENTITY(498.804, (true ? 498.804 : _GLF_FUZZED(8.4))), 498.804, 498.804))), _GLF_FUZZED((+ float(-8462)))), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), mat2(1.0) * (vec2((injectionSwitch)[0], (injectionSwitch)[1]))), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)), (subgroup_id) | 0u) * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) * _GLF_IDENTITY(1u, (1u) + 0u), (1u & 1u) * _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), uint(uint(~ (subgroup_id * subgroup_size)))))), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), uint(uint(~ (subgroup_id * subgroup_size))))), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) + (~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), uint(uint(~ (subgroup_id * subgroup_size)))))))), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), uint(uint(~ (subgroup_id * subgroup_size)))))), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), uint(uint(~ (subgroup_id * subgroup_size))))))))) * 1u), (false ? _GLF_FUZZED(uaddCarry(subgroup_id, num_workgroup, workgroup_size)) : ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), uint(uint(~ (subgroup_id * subgroup_size)))))), clamp(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | (subgroup_size)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), uint(uint(~ (subgroup_id * subgroup_size))))), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) + (~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), uint(uint(~ (subgroup_id * subgroup_size)))))))), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), uint(uint(~ (subgroup_id * subgroup_size)))))), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), uint(uint(~ (subgroup_id * subgroup_size))))))))) * 1u))))) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * (1u | 0u));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (false))) || (true)), false)), true && (bool(bvec4(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false), true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false))), false)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), clamp(~ (~ (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), ~ (~ (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), ~ (~ (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))))))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), 0u | (subgroup_id)))))))) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), 0 | (_GLF_IDENTITY(1, (1) / 1)))) % subgroup_size, uint(_GLF_IDENTITY(uvec4((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), 0 | (_GLF_IDENTITY(1, (1) / 1)))) % subgroup_size, 1u, (0u ^ 1u), 1u), (uvec4((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), 0 | (_GLF_IDENTITY(1, (1) / 1)))) % subgroup_size, 1u, (0u ^ 1u), 1u)) - uvec4(0u, 0u, 0u, 0u))))), workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)), (max(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), 0 | (_GLF_IDENTITY(1, (1) / 1)))) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size))) >> 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 + (64))) / 1)), 0 + ((_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, 0 + (64)), (_GLF_IDENTITY(64, 0 + (64))) / 1)) / 1))))), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))), true && (_GLF_IDENTITY(false, (false) && true))))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) || false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), ((! (false))) || false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), ((! (false))) || false), false), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(((! (false))), (((! (false)))) || false) || false), false), false)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), ((! (false))) || false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), ((! (false))) || false), false), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY((! (false)), ((! (false))) || false), false), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))), bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), ((! (false))) || false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), ((! (false))) || false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), ((! (false))) || false), false), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY((! (false)), ((! (false))) || false), false), false)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), ((! (false))) || false), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), ((! (false))) || false), false), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY((! (false)), ((! (false))) || false), false), false))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (false)), ((! (false))) || false), false), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY((! (false)), ((! (false))) || false), false), false))))), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) << 0), 0)), (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (_GLF_IDENTITY(0, (0) >> 0)) / _GLF_IDENTITY(1, (1) << 0))) ^ 0), (0 & -712))), 0 ^ (int(ivec2(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) >> 0)) ^ 0, 0 | ((_GLF_IDENTITY(0, (0) >> 0)) ^ 0))), (0 & _GLF_IDENTITY(-712, (-712) - 0)))))))) | int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0.0, (0.0) * 1.0)) - 0.0, ((_GLF_IDENTITY(0.0, (0.0) * 1.0)) - 0.0) + 0.0), _GLF_IDENTITY(((0.0) - 0.0) / 1.0, (((0.0) - 0.0) / 1.0) * 1.0)))))).x), mix(float(_GLF_FUZZED(-76.12)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0.0, (0.0) * 1.0)) - 0.0, ((_GLF_IDENTITY(0.0, (0.0) * 1.0)) - 0.0) + 0.0), _GLF_IDENTITY(((0.0) - 0.0) / 1.0, (((0.0) - 0.0) / 1.0) * 1.0)))))).x), mix(float(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0.0, (0.0) * 1.0)) - 0.0, ((_GLF_IDENTITY(0.0, (0.0) * 1.0)) - 0.0) + 0.0), _GLF_IDENTITY(((0.0) - 0.0) / 1.0, (((0.0) - 0.0) / 1.0) * 1.0)))))).x)), float(_GLF_FUZZED(-372.203)), bool(false)))), bool(true))))), 0, 0)) ^ (4)), 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(49202) : 1)), min(1, 1)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (_GLF_IDENTITY(1, min(1, 1))) + int(_GLF_ZERO(0.0, injectionSwitch.x)))))), 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), min(min(1, _GLF_IDENTITY(1, (1) | (1))), _GLF_IDENTITY(min(1, 1), max(min(1, 1), _GLF_IDENTITY(min(1, 1), (min(1, 1)) | 0)))))))), _GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), (min(1, 1)) ^ 0)))), 1)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((1), _GLF_IDENTITY((_GLF_IDENTITY((1), max((1), (1)))), ((_GLF_IDENTITY((1), max((1), (1))))) | ((_GLF_IDENTITY((1), max((1), (1)))))) + _GLF_IDENTITY(0, 1 * (0))), (_GLF_IDENTITY(_GLF_IDENTITY((1), _GLF_IDENTITY((_GLF_IDENTITY((1), max((1), (1)))), ((_GLF_IDENTITY((1), max((1), (1))))) | ((_GLF_IDENTITY((1), max((1), (1)))))) + _GLF_IDENTITY(0, 1 * (0))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), _GLF_IDENTITY((_GLF_IDENTITY((1), max((1), (1)))), ((_GLF_IDENTITY((1), max((1), (1))))) | ((_GLF_IDENTITY((1), max((1), (1)))))) + _GLF_IDENTITY(0, 1 * (0))), (_GLF_IDENTITY((1), _GLF_IDENTITY((_GLF_IDENTITY((1), max((1), (1)))), ((_GLF_IDENTITY((1), max((1), (1))))) | ((_GLF_IDENTITY((1), max((1), (1)))))) + _GLF_IDENTITY(0, 1 * (0)))) >> 0))))) ^ 0), max(~ (1), ~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) / 1), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), _GLF_IDENTITY(max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1)))), max(_GLF_IDENTITY(max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1)))), (max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1))))) << 0), max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1))))))), int(ivec2((1), 0))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY((1), _GLF_IDENTITY(max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1)))), max(_GLF_IDENTITY(max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1)))), (max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1))))) << 0), max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1))))))), int(ivec2((1), 0))))), (1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) / 1), max(_GLF_IDENTITY(_GLF_IDENTITY((1), _GLF_IDENTITY(max((1), _GLF_IDENTITY((1), int(_GLF_IDENTITY(ivec4((1), 0, 0, 1), (_GLF_IDENTITY(ivec4((1), 0, 0, 1), min(_GLF_IDENTITY(ivec4((1), 0, 0, 1), (ivec4((1), 0, 0, 1)) / ivec4(1, 1, 1, 1)), ivec4((1), 0, 0, 1)))) | ivec4(0, 0, 0, 0))))), max(_GLF_IDENTITY(max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1)))), (max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1))))) << 0), max((1), _GLF_IDENTITY((1), int(ivec4(_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(-25630))), 0, 0, 1))))))), int(ivec2((1), 0))), (1))), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) / 1), max(_GLF_IDENTITY(_GLF_IDENTITY((1), _GLF_IDENTITY(max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1)))), _GLF_IDENTITY(max(_GLF_IDENTITY(max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1)))), (max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1))))) << 0), max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1))))), (false ? _GLF_FUZZED(93621) : max(_GLF_IDENTITY(max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1)))), (max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1))))) << 0), max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1))))))))), int(ivec2((1), 0))), (1))), min(_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) / 1), max(_GLF_IDENTITY(_GLF_IDENTITY((1), _GLF_IDENTITY(max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1)))), max(_GLF_IDENTITY(max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1)))), (max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1))))) << 0), max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1))))))), int(ivec2((1), 0))), (1))), _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) / 1), max(_GLF_IDENTITY(_GLF_IDENTITY((1), _GLF_IDENTITY(max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1)))), max(_GLF_IDENTITY(max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1)))), (max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1))))) << 0), max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1))))))), int(ivec2((1), 0))), (1))))) : _GLF_FUZZED(61372)), 0 | ((true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) / 1), max(_GLF_IDENTITY(_GLF_IDENTITY((1), _GLF_IDENTITY(max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1)))), _GLF_IDENTITY(max(_GLF_IDENTITY(max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1)))), (max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1))))) << 0), max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1))))), (false ? _GLF_FUZZED(93621) : max(_GLF_IDENTITY(max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1)))), (max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1))))) << 0), max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1))))))))), int(ivec2((1), 0))), (1))), min(_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) / 1), max(_GLF_IDENTITY(_GLF_IDENTITY((1), _GLF_IDENTITY(max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1)))), max(_GLF_IDENTITY(max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1)))), (max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1))))) << 0), max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1))))))), int(ivec2((1), 0))), (1))), _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) / 1), max(_GLF_IDENTITY(_GLF_IDENTITY((1), _GLF_IDENTITY(max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1)))), max(_GLF_IDENTITY(max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1)))), (max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1))))) << 0), max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1))))))), int(ivec2((1), 0))), (1))))) : _GLF_FUZZED(61372)))))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) / 1), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), _GLF_IDENTITY(max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1)))), max(_GLF_IDENTITY(max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1)))), (max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1))))) << 0), max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1))))))), (_GLF_IDENTITY((1), _GLF_IDENTITY(max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1)))), max(_GLF_IDENTITY(max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1)))), (max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1))))) << 0), max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1)))))))) - 0), int(ivec2((1), 0))), (1))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) / 1), max(_GLF_IDENTITY(_GLF_IDENTITY((1), _GLF_IDENTITY(max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1)))), max(_GLF_IDENTITY(max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1)))), (max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1))))) << 0), max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1))))))), int(ivec2((1), 0))), (1))), min(_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) / 1), max(_GLF_IDENTITY(_GLF_IDENTITY((1), _GLF_IDENTITY(max((1), _GLF_IDENTITY((1), int(ivec4((_GLF_IDENTITY(1, 0 + (1))), 0, 0, 1)))), max(_GLF_IDENTITY(max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1)))), (max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1))))) << 0), max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1))))))), int(ivec2((1), 0))), (1))), _GLF_IDENTITY(_GLF_IDENTITY((1), ((_GLF_IDENTITY(1, min(1, 1)))) / 1), max(_GLF_IDENTITY(_GLF_IDENTITY((1), _GLF_IDENTITY(max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1)))), max(_GLF_IDENTITY(_GLF_IDENTITY(max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1)))), clamp(max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1)))), _GLF_IDENTITY(max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1)))), (max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1))))) ^ 0), max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1)))))), (max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1))))) << 0), max((1), _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1))))))), int(ivec2((1), 0))), (1))))) : _GLF_FUZZED(61372)))))))), ~ (~ ((1)))))))), max(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(~ (1), ~ _GLF_IDENTITY((1), ~ (~ ((1)))))))), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(max(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, 0 + (1))))) | 0)), ~ _GLF_IDENTITY((1), ~ (~ ((1))))), (_GLF_IDENTITY(max(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, 0 + (1))))) | 0)), ~ _GLF_IDENTITY((1), ~ (~ ((1))))), clamp(max(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, 0 + (1))))) | 0)), ~ _GLF_IDENTITY((1), ~ (~ ((1))))), _GLF_IDENTITY(max(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, 0 + (1))))) | 0)), ~ _GLF_IDENTITY((1), ~ (~ ((1))))), (max(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), min(_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), int(ivec3((1), 0, 1)))), _GLF_IDENTITY(1, 0 + (1))))) | 0)), ~ _GLF_IDENTITY((1), ~ (~ ((1)))))) >> 0), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, 0 + (1))))) | 0)), ~ _GLF_IDENTITY((1), ~ (~ ((1)))))))) | (max(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (1), ~ (_GLF_IDENTITY(~ (0 + (1)), ~ (~ (~ (0 + (1)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, 0 + (1))))) | 0)), ~ _GLF_IDENTITY((1), ~ (~ ((1)))))))))), min(_GLF_IDENTITY(1, _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(1, max(1, 1))), max(~ _GLF_IDENTITY(_GLF_IDENTITY((1), 0 ^ ((1))), (false ? _GLF_FUZZED(((98191 % 28100) & (-78795 % 9441))) : (1))), ~ _GLF_IDENTITY((1), _GLF_IDENTITY(~ (~ ((1))), 1 * (~ (~ ((1))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (1), max(~ (1), ~ _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1))))))), _GLF_IDENTITY(~ (~ ((1))), (~ (~ ((1)))) | (~ (~ ((1))))))))), ((_GLF_IDENTITY(~ (1), max(_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1))), ~ _GLF_IDENTITY((1), ~ (~ ((1)))))))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0), min(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), max(~ _GLF_IDENTITY((1), (false ? _GLF_FUZZED(((98191 % 28100) & (-78795 % 9441))) : (1))), _GLF_IDENTITY(~ _GLF_IDENTITY((1), ~ (~ ((1)))), max(~ _GLF_IDENTITY((1), ~ (~ ((1)))), ~ _GLF_IDENTITY((1), ~ (~ ((1))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (1), max(~ (1), _GLF_IDENTITY(~ _GLF_IDENTITY((1), ~ (~ ((1)))), max(~ _GLF_IDENTITY((1), ~ (~ ((1)))), ~ _GLF_IDENTITY((1), ~ (~ ((1))))))))), ((_GLF_IDENTITY(~ (1), max(~ (1), ~ _GLF_IDENTITY((1), _GLF_IDENTITY(~ (~ ((1))), (~ (~ ((1)))) | (~ (~ ((1)))))))))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0), clamp(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), max(~ _GLF_IDENTITY((1), (false ? _GLF_FUZZED(((98191 % 28100) & (-78795 % 9441))) : (1))), ~ _GLF_IDENTITY((1), ~ (~ ((1))))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (1), max(~ (1), ~ _GLF_IDENTITY((1), ~ (~ ((1))))))), ((_GLF_IDENTITY(~ (1), max(~ _GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), max((1), (1))), _GLF_IDENTITY((1), _GLF_IDENTITY(~ (~ ((1))), (~ (~ ((1)))) | (~ (~ ((1)))))))), ~ _GLF_IDENTITY((1), ~ (~ ((1)))))))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), max(~ _GLF_IDENTITY((1), (false ? _GLF_FUZZED(((98191 % 28100) & (-78795 % 9441))) : (1))), ~ _GLF_IDENTITY((1), ~ (~ ((1))))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (1), max(~ (1), ~ _GLF_IDENTITY((1), ~ (~ ((1))))))), ((_GLF_IDENTITY(~ (1), max(~ (1), ~ _GLF_IDENTITY((1), ~ (~ ((1)))))))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), max(~ _GLF_IDENTITY((1), _GLF_IDENTITY((false ? _GLF_FUZZED(((98191 % _GLF_IDENTITY(28100, ~ (~ (28100)))) & (-78795 % 9441))) : (1)), max((false ? _GLF_FUZZED(((98191 % 28100) & (-78795 % 9441))) : (1)), _GLF_IDENTITY((false ? _GLF_FUZZED(((98191 % 28100) & (-78795 % 9441))) : (1)), (false ? _GLF_FUZZED(20701) : (false ? _GLF_FUZZED(((98191 % 28100) & (-78795 % 9441))) : (1))))))), ~ _GLF_IDENTITY((1), ~ (~ ((1))))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (1), max(~ (1), ~ _GLF_IDENTITY((1), ~ (~ ((1))))))), ((_GLF_IDENTITY(~ (1), max(~ (1), ~ _GLF_IDENTITY((1), ~ (~ ((1)))))))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), max(~ _GLF_IDENTITY((1), (false ? _GLF_FUZZED(((98191 % 28100) & (-78795 % 9441))) : (1))), ~ _GLF_IDENTITY((1), ~ (~ ((1))))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (1), max(~ (1), ~ _GLF_IDENTITY(_GLF_IDENTITY((1), ~ (~ ((1)))), min(_GLF_IDENTITY((1), ~ (~ ((1)))), _GLF_IDENTITY((1), ~ (~ ((1))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (1), (true ? ~ (1) : _GLF_FUZZED(-34198))), max(~ (1), ~ _GLF_IDENTITY((1), ~ (~ ((1)))))))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0)))), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(~ (1), ~ _GLF_IDENTITY((_GLF_IDENTITY(1, 0 ^ (1))), ~ (~ ((1)))))))))))) < subgroup_size)
  {
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY((4) >> 0, int(ivec2((4) >> 0, 0)))), 64, _GLF_IDENTITY(4, ~ (~ (4))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)))))), true, true), true)), true)))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), bool(bvec4(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (_GLF_IDENTITY(bool(bvec3(false, true, true)), (_GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec4(bool(bvec3(false, true, true)), false, false, true)))) || false)) || false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), true && (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec2(! (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, ! (! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), bool(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(false, true, true))))), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), true)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), true)))), (! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), true))))) || false))))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), false), bvec2(bvec4(bvec2(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), false), false, false))), false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), bool(bvec3(false, true, true))))), bool(bvec2(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, abs(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), float(_GLF_FUZZED(-384.748)), bool(false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))) && true))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) - 0.0))) > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))))))), 0.0)), min(vec2(mat2x4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 0.0)), vec2(mat2x4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 0.0))))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec2((! (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))))))), 0.0)), min(vec2(mat2x4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 0.0)), vec2(mat2x4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 0.0))))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true))))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true)))))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), min(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).y)), bool(bool(injectionSwitch.x > injectionSwitch.y))), false, false)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7384.0351)), bool(false))), 1.0)), 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec2(1.0, 1.0) : _GLF_FUZZED(vec2(-3251.4759, 71.21))))))).x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-5.4, mix(float(_GLF_FUZZED(0.2)), float(-5.4), bool(true)))) : injectionSwitch.x)) > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), true, false)))), ! (! ((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false), false || (_GLF_IDENTITY(false, (false) || false))), true, _GLF_IDENTITY(false, bool(bvec2(false, false)))))))))) && true));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1291.8776), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(-9351))), bvec2(true, false))).y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_IDENTITY(true, true && (true)) && ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), (! (false)) || false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(bvec3(false || (false), true, true))), bool(_GLF_IDENTITY(bool(false || (false)), (bool(false || (false))) && true))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false))) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, abs(_GLF_ZERO(0.0, injectionSwitch.x))))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
}
