#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_12 {
 bvec2 _f0;
 uint _f1;
 float _f2;
} ;

struct _GLF_struct_11 {
 bvec3 _f0;
 ivec3 _f1;
 bvec2 _f2;
 vec2 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_13 {
 mat2x3 _f0;
 _GLF_struct_11 _f1;
 _GLF_struct_12 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_10 {
 mat2x3 _f0;
} ;

struct _GLF_struct_8 {
 ivec2 _f0;
} ;

struct _GLF_struct_7 {
 mat4x3 _f0;
} ;

struct _GLF_struct_9 {
 uvec3 _f0;
 ivec2 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_8 _f3;
} ;

struct _GLF_struct_5 {
 bvec2 _f0;
 bvec4 _f1;
 mat3 _f2;
 vec3 _f3;
 mat2x4 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_4 {
 mat2 _f0;
 mat4 _f1;
 bvec4 _f2;
 ivec2 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_6 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_3 {
 uvec2 _f0;
 ivec3 _f1;
 bvec3 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_1 {
 ivec2 _f0;
 bvec4 _f1;
 mat2 _f2;
 mat2x4 _f3;
 bvec2 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
 mat4x3 _f1;
 float _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 mat2x4 _f1;
 _GLF_struct_1 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_14 {
 _GLF_struct_2 _f0;
 uint subgroup_size;
 _GLF_struct_3 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_9 _f3;
 vec3 _f4;
 _GLF_struct_10 _f5;
 _GLF_struct_13 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(_GLF_struct_2(_GLF_struct_0(bvec3(true), mat4x3(1.0), 1.0, uvec4(1u)), mat2x4(1.0), _GLF_struct_1(ivec2(1), bvec4(true), mat2(1.0), mat2x4(1.0), bvec2(true), mat3x2(1.0)), mat2(1.0)), gl_SubgroupSize, _GLF_struct_3(uvec2(1u), ivec3(1), bvec3(true), mat3(1.0)), _GLF_struct_6(_GLF_struct_4(mat2(1.0), mat4(1.0), bvec4(true), ivec2(1), mat4(1.0)), _GLF_struct_5(bvec2(true), bvec4(true), mat3(1.0), vec3(1.0), mat2x4(1.0), mat4x3(1.0)), bvec2(true)), _GLF_struct_9(uvec3(1u), ivec2(1), _GLF_struct_7(mat4x3(1.0)), _GLF_struct_8(ivec2(1))), vec3(1.0), _GLF_struct_10(mat2x3(1.0)), _GLF_struct_13(mat2x3(1.0), _GLF_struct_11(bvec3(true), ivec3(1), bvec2(true), vec2(1.0), ivec2(1)), _GLF_struct_12(bvec2(true), 1u, 1.0), mat4x2(1.0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   switch(_GLF_SWITCH(0))
    {
     case 16:
     {
      9426.9370;
      while(false)
       {
        uvec4 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v;
       }
      (590.692 - mat2(90.00, 476.194, -40.23, 9.5));
      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
       return;
      if(false)
       {
        if(false)
         {
          mat4x2 _GLF_SWITCH_3_2v;
          vec2 _GLF_SWITCH_3_3v[14], _GLF_SWITCH_3_4v, _GLF_SWITCH_3_5v[9];
          bvec3 _GLF_SWITCH_3_6v[48], _GLF_SWITCH_3_7v;
         }
        else
         {
          104558u;
          uvec3 _GLF_SWITCH_3_8v, _GLF_SWITCH_3_9v[84];
          if(_GLF_DEAD(false))
           barrier();
          int _GLF_SWITCH_3_10v, _GLF_SWITCH_3_11v[48];
          bvec2(bvec3(false, true, false));
          mat2x3(552.773, -779.281, -9.8, -452.104, -63.10, -891.022);
          bvec4 _GLF_SWITCH_3_12v, _GLF_SWITCH_3_13v;
         }
        subgroup_id;
        for(ivec4 _GLF_SWITCH_3_14v; bool(156259u); ivec3(findLSB(ivec2(3678, -5599)), 51657))
         {
          580.074;
          ;
          ((uvec2(196675u, 183365u) + num_workgroup) - uvec2(42003u, 24627u));
          mat2x3(-5808.5006, 57.79, -0.7, 5.3, -4.3, 40.56);
          bitCount(ivec3(-56723, ivec2(-79696, -629)));
          sin(vec4(58.52, 9.3, 2.9, -6454.3314));
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
           }
          else
           {
            ;
           }
         }
        bitfieldExtract(uvec4(173626u, 91686u, 137212u, 38864u), -57083, -42144);
        max(vec4(3374.3728, 3.2, 2.5, 4.3), vec4(-862.768, -3.6, -8.1, 2.3));
        {
         if(_GLF_DEAD(false))
          barrier();
         bool _GLF_SWITCH_3_15v[94], _GLF_SWITCH_3_16v, _GLF_SWITCH_3_17v;
         bvec4 _GLF_SWITCH_3_18v, _GLF_SWITCH_3_19v;
         (injectionSwitch * -3521.2678);
         if(_GLF_DEAD(false))
          barrier();
         vec3 _GLF_SWITCH_3_20v;
         mat2(-242.406, 941.865, 7.6, -59.86);
         abs(_GLF_SWITCH_3_20v);
         ;
         uvec2 _GLF_SWITCH_3_21v;
         uvec4(156282u, 20375u, 113597u, 199910u);
        }
        ((true ? mat2(-123.945, 1561.5297, 2602.2545, 6.8) : mat2(-8615.2476, 0.6, 819.141, -3050.0642)) == (-53.62 - mat2(7261.4167, 0.1, -78.09, 1965.7991)));
        mat4x3(7.7, 39.29, 575.891, -9.2, -778.073, 512.499, 681.732, 2.2, 6.8, -9890.1366, -3229.2373, -1.7);
        mat3x4 _GLF_SWITCH_3_22v, _GLF_SWITCH_3_23v;
       }
      else
       {
        {
         ;
         mat3(mat2x3(vec3(-6127.2601, -5.0, -5.6), vec3(4684.0277, 2.5, -6.5)));
         bool _GLF_SWITCH_3_24v[43];
        }
        if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         {
         }
        else
         {
          if(_GLF_DEAD(false))
           barrier();
          (- 361.782);
         }
       }
      mat3x4(-4.6, 9.0, 1033.9724, 66.92, 2.1, -1432.1408, -31.26, -525.271, -933.963, -7415.4610, -11.00, 49.16);
     }
     case 73:
     if(_GLF_DEAD(false))
      barrier();
     ;
     case 0:
     case 14:
     case 34:
     case 2:
     case 98:
     case 43:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     case 28:
     case 35:
     if(_GLF_DEAD(false))
      barrier();
     case 30:
     case 76:
     barrier();
     break;
     default:
     1;
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))));
 if(_GLF_DEAD(false))
  {
   switch(_GLF_SWITCH((ivec3(-10772, 22881, -8658).t & 0)))
    {
     case 24:
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     do
      {
       switch(_GLF_SWITCH((0 & (+ 87302))))
        {
         case 83:
         injectionSwitch;
         case 34:
         do
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(false)
              {
               mat3x4(4.1, 4665.2325, -9.4, -78.63, 6.8, -251.246, 34.80, 5700.2383, 49.87, -89.60, 676.121, -0.5);
               (uvec2(118831u, 119363u) / workgroup_id);
               uvec4 _GLF_SWITCH_2_0v;
               if(_GLF_DEAD(false))
                barrier();
               ivec4 _GLF_SWITCH_2_1v[98];
               float _GLF_SWITCH_2_2v, _GLF_SWITCH_2_3v, _GLF_SWITCH_2_4v;
               bvec3(true, false, false).tpt;
               ;
              }
             else
              {
               uvec4(190608u, 150712u, 20227u, 167985u);
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, false)))))
                {
                 workgroup_base;
                }
               else
                {
                }
               bitfieldExtract(bitfieldInsert(ivec4(63261, -74716, -3393, -13460), ivec4(13441, 68437, 36744, -9747), 79613, 7215), -57786, -24410);
               (185142u + max(uvec3(182580u, 150292u, 65945u), (uvec3(135747u, 173483u, 62905u) ^ subgroup_id)));
              }
            }
           outerProduct(vec4(-5.0, -27.84, 5.9, -303.697), vec3(-8.8, -57.10, -99.05));
           vec2(7526.6860, -886.033);
           uvec3(82645u, 39454u, 92960u);
           while((mat2(622.479, -7584.5993, -659.806, 9.7) == mat2(-787.144, -2099.8033, -80.42, -245.094)))
            {
             uvec3(62705u, 159657u, 187218u);
             if(_GLF_DEAD(false))
              barrier();
             vec3 _GLF_SWITCH_2_5v, _GLF_SWITCH_2_6v;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             vec2 _GLF_SWITCH_2_7v, _GLF_SWITCH_2_8v, _GLF_SWITCH_2_9v[3];
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             (injectionSwitch * atanh(_GLF_SWITCH_2_7v));
             mat3x2(-725.833);
             -70677;
             (mat4x3(-6.3, -5.2, -47.66, 181.563, -8.4, -3.3, 2.3, -8.1, -9.1, 14.80, 60.50, 384.857) - -31.12);
             if(_GLF_DEAD(false))
              break;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         case 0:
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               while((packHalf2x16(vec2(-5939.8542, -7659.7740)) > num_workgroup))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   break;
                  }
                 bvec3 _GLF_SWITCH_0_0v[78];
                 if((ivec2(46608, -67560) != ivec2(-45464, 80022)))
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     mat2x4(5382.5782, -585.948, 99.24, 2.2, -7.0, 3.6, -5757.7423, 7.5);
                    }
                   uvec3 _GLF_SWITCH_0_1v;
                   mat4x2((mat2x4(-8.0, 264.004, -7.9, -1.9, -25.90, 4.6, -2.5, 540.347) * mat3x2(1456.5679, -920.855, -224.390, -592.542, 44.89, -7.1)));
                   float _GLF_SWITCH_0_2v[30], _GLF_SWITCH_0_3v;
                   if(_GLF_DEAD(false))
                    barrier();
                   equal(ivec4(-68961, 63283, -51607, -61423), (-47913 * ivec4(-57987, 89701, 53213, 70007).psqs));
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   40566;
                   mat3(6583.8914, 630.752, 97.61, 60.51, 8.7, 669.616, -6.0, -9.5, -5449.2505);
                   vec4(2.3, -8.7, 398.731, -1.2).qttq;
                   uint _GLF_SWITCH_0_4v;
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     break;
                    }
                   do
                    {
                     switch(_GLF_SWITCH(_GLF_IDENTITY(0, clamp(0, 0, 0))))
                      {
                       case 0:
                       case 36:
                       case 50:
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           return;
                          }
                         else
                          {
                          }
                        }
                       case 63:
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            continue;
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           barrier();
                          }
                        }
                       case 53:
                       case 10:
                       case 90:
                       case 21:
                       if(_GLF_DEAD(false))
                        return;
                       break;
                       case 79:
                       532.107;
                       default:
                       if(_GLF_DEAD(false))
                        barrier();
                       1;
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       return;
                      }
                    }
                  }
                 else
                  {
                   uvec4 _GLF_SWITCH_0_5v, _GLF_SWITCH_0_6v[5];
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                   injectionSwitch;
                   ;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     continue;
                    }
                   if(_GLF_DEAD(false))
                    return;
                   mat2(mat4(-583.909, -5202.3490, -783.976, -880.464, -742.143, -9.0, -3.2, -94.66, -9.2, 874.871, 2.5, -67.89, 66.83, -38.65, 404.087, 3.7));
                   bvec4(true, false, false, false);
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 do
                  {
                   acosh(vec2(-707.496, -31.19));
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, false)))));
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
              }
             else
              {
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         case 13:
         for(         dot(vec4(-84.31, -691.327, -14.82, -140.087), (vec4(-1.8, -8500.5141, -2.6, 0.5)));
 true; vec3(9.1, 6688.2699, -34.97))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
              return;
             mat2(mat2x3(mat4x2(7.0, 1.9, 20.75, -9223.0788, -449.647, 64.72, 36.94, 848.190)));
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           vec3(0.3, 98.34, 275.097);
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             vec4(-254.838, -826.437, -448.598, -7.8);
            }
           while(_GLF_WRAPPED_LOOP(false));
           for(mat4x3 _GLF_SWITCH_0_7v[68], _GLF_SWITCH_0_8v[54], _GLF_SWITCH_0_9v[15]; (vec3(866.124, 5.9, -931.395) == vec3(5888.3916, -2.6, -0.8)); equal(vec3(-685.703, -6.3, -4.3), vec3(1.9, 3241.8028, 3.5)))
            {
             mat4x2 _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              barrier();
             mat4x3(-9869.4528, 40.97, -3868.2522, -8.4, -587.783, 2.6, 6.2, -1260.3720, 1.3, -885.806, -7186.8121, -0.0);
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
             mat4x3 _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v, _GLF_SWITCH_0_14v[95];
             notEqual(notEqual(vec3(-2.5, 3.6, 5585.8491), vec3(-5.0, -150.732, -9.2)), bvec3(true, false, true));
             vec3 _GLF_SWITCH_0_15v[2], _GLF_SWITCH_0_16v;
             if(_GLF_DEAD(false))
              barrier();
             ;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            continue;
           while(true)
            {
             switch(_GLF_SWITCH(0))
              {
               case 0:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               case 36:
               case 19:
               case 23:
               ;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               case 97:
               case 3:
               case 80:
               case 82:
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 bvec3(true, false, false);
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               break;
               default:
               1;
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           {
            vec4 _GLF_SWITCH_0_17v, _GLF_SWITCH_0_18v[80], _GLF_SWITCH_0_19v;
            for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
             {
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(false))
               barrier();
             }
            for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
             {
              ;
             }
            if(_GLF_DEAD(false))
             break;
            uvec2(1431u, 49842u);
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             break;
            if(_GLF_DEAD(false))
             barrier();
            mat4x3 _GLF_SWITCH_0_20v;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             continue;
            greaterThanEqual(ivec4(30, 93159, 51274, -32855), ivec4(-68968, 87294, -77447, -20333));
           }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), true)))))))
          barrier();
         findLSB(ivec3(-10199, 28412, 49938));
         ivec2(34969, 82726);
         break;
         case 64:
         ((ivec2(93414, -96682) % (-70188 * ivec2(42018, 81460))) + -40538);
         default:
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           1;
          }
         else
          {
          }
        }
      }
     while(false);
     case 5:
     float _GLF_SWITCH_0_21v[37], _GLF_SWITCH_0_22v, _GLF_SWITCH_0_23v[62];
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     case 0:
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     case 49:
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     case 81:
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     case 83:
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               switch(_GLF_SWITCH(0))
                {
                 case 85:
                 if(_GLF_DEAD(false))
                  return;
                 mat3(-401.855, -0.9, 1727.6388, 60.49, -66.25, 3207.5879, -3.2, -7.8, 6443.1457);
                 case 42:
                 (mat4x3(-646.664, -5.7, 6.0, 1497.5698, 6474.9481, 45.87, 969.120, -71.33, -643.003, -5006.9383, -539.311, -6791.3942));
                 case 0:
                 case 71:
                 case 46:
                 case 16:
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   return;
                  }
                 if(_GLF_DEAD(false))
                  return;
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 break;
                 case 70:
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(true)
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       subgroup_id;
                      }
                     bvec2 _GLF_SWITCH_2_0v[47];
                     bvec3 _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v, _GLF_SWITCH_2_3v[98];
                     if(_GLF_DEAD(false))
                      return;
                     mat2(injectionSwitch, mat2(-9108.8666, 8685.7466, 6.2, 7512.9834)[0]);
                     mat3 _GLF_SWITCH_2_4v;
                     vec4(-542.590, -2614.9860, -8611.6238, 6737.1654);
                     fma(determinant(mat2(3298.2870, -8.7, -3.0, -5.2)), intBitsToFloat(51644), _GLF_SWITCH_0_22v);
                     (_GLF_SWITCH_0_22v < _GLF_SWITCH_0_22v);
                     (_GLF_SWITCH_2_4v);
                    }
                   else
                    {
                     mat2 _GLF_SWITCH_2_5v, _GLF_SWITCH_2_6v;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                     (matrixCompMult(mat4(8378.2747, -488.277, 5.7, 38.81, -3459.8314, -4107.0253, -3209.0348, -8239.9877, 71.29, -800.256, -1782.7378, 49.16, 6.3, 0.1, -5.1, -109.454), mat4(-70.59, 240.894, 5.1, 29.31, 21.27, -99.95, 8787.1312, -282.783, 20.32, 5.0, -434.739, 6.2, -9126.2108, 709.629, 5.6, -46.14)) == mat4(0.0, -1667.2135, 9680.4068, -42.22, 1.8, 670.890, 0.1, 7.4, -78.88, 31.24, 8.8, 3.9, -80.05, -60.89, -561.382, 86.53));
                     greaterThanEqual(injectionSwitch, injectionSwitch);
                     vec4(-5589.7403, -6.8, -7.7, -748.277);
                     uvec3(145316u, 96963u, 3782u).p;
                     ivec3(-36730, -25105, -72210);
                     int _GLF_SWITCH_2_7v[65];
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                      {
                       if(_GLF_DEAD(false))
                        break;
                       mat4(-6887.5937, -9887.4352, 8.7, 66.47, 0.6, 9.5, 8.2, 86.85, -8.6, -5.4, 9.4, 4.6, -229.910, 8.2, -5473.0762, -9.6);
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     uvec2 _GLF_SWITCH_2_8v;
                    }
                  }
                 else
                  {
                  }
                 default:
                 1;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       return;
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     break;
     if(_GLF_DEAD(false))
      barrier();
     case 70:
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if((mat4x2(4725.3639, 38.76, -6.3, 0.0, 4144.5258, -4.9, -5503.3737, 2.4) != (mat4x2(-83.54, 7919.7459, 232.652, 636.621, -243.367, -6384.1146, 29.23, -814.902) - sin(318.586))))
      {
       switch(_GLF_SWITCH(0))
        {
         case 0:
         if(_GLF_DEAD(false))
          return;
         {
          if(_GLF_DEAD(false))
           return;
          if(false)
           {
            if(_GLF_DEAD(false))
             {
              for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (((1 & int(_GLF_ONE(1.0, injectionSwitch.y))) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  break;
                 }
                for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                 {
                  if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     continue;
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                   }
                  else
                   {
                    if(_GLF_DEAD(false))
                     continue;
                    if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
                     {
                     }
                    else
                     {
                      if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                       }
                      else
                       {
                       }
                     }
                    barrier();
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                        if(_GLF_DEAD(false))
                         break;
                       }
                      else
                       {
                        barrier();
                       }
                      if(_GLF_DEAD(false))
                       break;
                      if(_GLF_DEAD(false))
                       break;
                     }
                   }
                  if(_GLF_DEAD(false))
                   continue;
                 }
               }
             }
            mat4(-788.814, 93.03, 9318.6766, -866.988, 16.93, -9.2, 5.6, 8.1, -5.9, 9.2, -7.2, -12.11, 10.37, -989.300, -3.4, -5585.4307);
           }
          else
           {
            for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
             {
              if(_GLF_DEAD(false))
               break;
              mat2(56.47, -1499.1022, -848.788, -0.4);
             }
            if(_GLF_DEAD(false))
             {
              for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
               {
                switch(_GLF_SWITCH(0))
                 {
                  case 10:
                  mat4x2(mat3x4(2.0, 3462.1086, 0.8, -0.8, -9.2, -2.5, -8852.6750, 1578.3967, 37.52, 567.050, 1.8, -55.82));
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  case 0:
                  case 85:
                  if(_GLF_DEAD(false))
                   break;
                  case 35:
                  case 16:
                  return;
                  break;
                  case 46:
                  mat4x2 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v[36], _GLF_SWITCH_2_2v;
                  case 28:
                  ;
                  default:
                  1;
                 }
               }
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            54570;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            workgroup_base;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            if(_GLF_DEAD(false))
             barrier();
            false;
            greaterThanEqual((ivec2(63372, -82259) % ivec2(18290, 19007)), ivec2(-82369, 18876));
            if(_GLF_DEAD(false))
             barrier();
            do
             {
              if(_GLF_DEAD(false))
               barrier();
             }
            while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            mat2x4(80.80, 9.5, -5.7, -9311.0187, 5167.5892, 5.5, -551.837, 3122.7185);
            bvec4 _GLF_SWITCH_0_24v[61], _GLF_SWITCH_0_25v, _GLF_SWITCH_0_26v[14];
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                 }
                else
                 {
                  barrier();
                 }
               }
              do
               {
                if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
                 barrier();
                switch(_GLF_SWITCH(0))
                 {
                  case 0:
                  if(_GLF_DEAD(false))
                   continue;
                  case 94:
                  case 63:
                  case 5:
                  if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                   barrier();
                  if(_GLF_DEAD(false))
                   continue;
                  case 84:
                  case 81:
                  if(_GLF_DEAD(false))
                   continue;
                  case 29:
                  return;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  break;
                  default:
                  1;
                  if(_GLF_DEAD(false))
                   barrier();
                 }
               }
              while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
             }
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               return;
              barrier();
             }
            ;
           }
          while(true)
           {
            if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
             barrier();
            if(_GLF_DEAD(false))
             return;
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
              if(_GLF_DEAD(false))
               barrier();
             }
            else
             {
              ;
             }
            mat4x2(-439.957, -382.383, -69.12, 67.07, -55.34, 178.927, 3.3, 4.1);
            if(_GLF_DEAD(false))
             barrier();
            mat4(-0.9, 9178.2769, 6.1, -6.8, 37.11, -5.8, -9.7, 104.957, -5427.4583, 6.0, -199.784, 6067.0310, -655.611, -5908.9971, 6.4, 0.7);
           }
          packSnorm4x8(step(12.92, vec4(-824.492, 8947.4092, 4.9, -698.249)));
          if(_GLF_DEAD(false))
           barrier();
          ;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
             {
             }
            else
             {
              barrier();
             }
           }
          for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, min(0, 0))); _injected_loop_counter --)
           {
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
               {
                if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                 {
                  return;
                 }
                else
                 {
                 }
               }
             }
           }
          if(_GLF_DEAD(false))
           barrier();
          if((bvec3(false, true, false) != bvec3(false, true, false)))
           {
            mat4(6913.1761, 8852.5979, -556.574, 77.03, 6.8, 234.079, -904.563, -8.1, 0.1, -92.88, 13.23, -132.375, -118.334, 4.7, -64.30, 68.12);
            if(_GLF_DEAD(false))
             return;
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
             }
            else
             {
              bvec4(mix(bvec3(true, false, false), bvec3(false, false, true), bvec3(true, false, false)), (bvec3(false, false, true) == bvec3(true, true, false)));
             }
           }
          else
           {
            uvec4 _GLF_SWITCH_0_27v;
           }
          for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
           {
            if(_GLF_DEAD(false))
             continue;
            while((bvec4(false, true, true, false) == bvec4(true, true, true, false)))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              ivec2 _GLF_SWITCH_0_28v;
             }
           }
          if(_GLF_WRAPPED_IF_TRUE(true))
           {
            if(_GLF_DEAD(false))
             barrier();
           }
          else
           {
           }
          if(_GLF_DEAD(false))
           barrier();
         }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 return;
                }
              }
             else
              {
              }
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(           (ivec3(37040, -69605, -45430).p / -38294);
 true; (-- _GLF_SWITCH_0_22v))
            {
             if(_GLF_DEAD(false))
              barrier();
             ;
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               return;
              }
             bvec4 _GLF_SWITCH_0_29v, _GLF_SWITCH_0_30v;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               break;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if((bvec3(false, false, false) == bvec3(true, false, false)))
              {
              }
             else
              {
               (_GLF_SWITCH_0_22v - (mat2x4(-2.3, 6.8, -7.2, -32.54, 13.01, -9644.9213, 6.2, -1318.2837) + -5.4));
               bvec2 _GLF_SWITCH_0_31v, _GLF_SWITCH_0_32v;
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   if(_GLF_DEAD(false))
                    barrier();
                   break;
                  }
                 (76246 | ivec2(83391, -34419));
                }
               ivec4 _GLF_SWITCH_0_33v, _GLF_SWITCH_0_34v;
               bool _GLF_SWITCH_0_35v[96];
               (mat4(65.16, -6035.0510, -967.391, 4.8, 72.63, -1166.2613, -3.1, -89.00, -3.3, 97.21, -227.611, 803.960, -71.38, 6.1, -179.978, -7.0) * mat2x4(86.59, 126.741, -5655.9758, -11.78, 2.2, -1.1, -95.94, -0.6));
               uvec4 _GLF_SWITCH_0_36v;
               mat2x4 _GLF_SWITCH_0_37v[5], _GLF_SWITCH_0_38v[37], _GLF_SWITCH_0_39v;
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             float _GLF_SWITCH_0_40v[21], _GLF_SWITCH_0_41v[30], _GLF_SWITCH_0_42v;
             if((mat3x2(8.3, -6.9, -5759.9778, 93.83, 6687.3375, 525.982) == mat3x2(-160.494, -68.47, 6.0, 8.9, 5.5, 8.8)))
              {
               mat4x2 _GLF_SWITCH_0_43v[81], _GLF_SWITCH_0_44v[96], _GLF_SWITCH_0_45v;
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 _GLF_SWITCH_0_29v;
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               do
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   true;
                  }
                 if(_GLF_DEAD(false))
                  return;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 vec4(8.5, -4098.8390, -26.73, -9.8);
                }
               mat2x3(3910.3229, -3.0, -2.4, 0.1, -772.513, -414.457);
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               uvec4 _GLF_SWITCH_0_46v[60], _GLF_SWITCH_0_47v[87];
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(false))
                barrier();
               ivec2 _GLF_SWITCH_0_48v[32], _GLF_SWITCH_0_49v[61], _GLF_SWITCH_0_50v;
               do
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    return;
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  return;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               mat2 _GLF_SWITCH_0_51v, _GLF_SWITCH_0_52v;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             for(mat3x2 _GLF_SWITCH_0_53v[69], _GLF_SWITCH_0_54v, _GLF_SWITCH_0_55v; mix(false, (mat4x2(-7.6, -903.058, 9.3, 8714.3312, 870.359, -5.4, 1844.6411, -4.0) != mat4x2(-5611.8185, -1.3, 2.5, -5.5, -0.8, -89.26, -6.6, -1.6)), (injectionSwitch != injectionSwitch)); workgroup_size)
              {
               ivec4(-56523, -30916, 78415, -52981);
               ((mat2x3(877.062, 235.918, 9.9, 63.66, -3797.2869, -9.9) - _GLF_SWITCH_0_42v) , ivec2(29316, -98816));
               bvec3 _GLF_SWITCH_0_56v, _GLF_SWITCH_0_57v[49];
               uvec2 _GLF_SWITCH_0_58v;
               min(atomicAnd(workgroup_size, max(workgroup_base, subgroup_local_id)), 37688u);
               min(uvec4(29907u, 68296u, 96166u, 78822u), num_workgroup).zx;
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                barrier();
               mat2x4 _GLF_SWITCH_0_59v, _GLF_SWITCH_0_60v, _GLF_SWITCH_0_61v[25];
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             uvec4 _GLF_SWITCH_0_62v, _GLF_SWITCH_0_63v, _GLF_SWITCH_0_64v;
             mat2x4(mat3(-9.7, 0.6, 3.0, -652.625, -0.8, 9.4, -33.00, 1.5, 0.9));
            }
          }
         else
          {
          }
         uvec3(134218u, 2165u, 88376u);
         mat2x4 _GLF_SWITCH_0_65v, _GLF_SWITCH_0_66v;
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           mat2x3(5209.9805, -5.7, -1594.8977, 7010.6895, -6.1, 113.706);
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 return;
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
            }
           else
            {
            }
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
          }
         break;
         case 23:
         if(_GLF_DEAD(false))
          barrier();
         mat3x2 _GLF_SWITCH_3_0v[79], _GLF_SWITCH_3_1v[36], _GLF_SWITCH_3_2v;
         case 1:
         if((uvec2(41690u, 108264u) != uvec2(120267u, 187814u)))
          {
           ;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(             matrixCompMult(mat4(991.931, -5.0, -1985.2638, 3.5, -377.301, 6814.1616, 6.6, -5440.5594, -956.415, -268.589, 9.4, 401.836, 98.47, -2220.6540, -2.0, 9719.6318), mat4(-0.1, 75.28, 701.304, -4.9, -74.26, 738.514, 8.8, 150.706, 6405.6823, -1.6, -1.9, 1.7, 5100.9271, -5925.0560, -6.4, -2015.8225));
 false; mat2(-9.6, 1.4, 8.6, 9.9))
              {
               mat3x2 _GLF_SWITCH_3_3v[91];
               vec3(40.23, 198.121, -0.9);
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 workgroup_id;
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                barrier();
               ivec3(92860, -72757, 86440);
              }
            }
           ivec4(99843, 94890, 69691, -18834);
           for(           (uvec2(48529u, 17128u) - uvec2(45845u, 1538u));
 true; acosh(vec3(-4.0, 1.6, -5.6)))
            {
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               false;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             int _GLF_SWITCH_3_4v;
             mat2x3 _GLF_SWITCH_3_5v, _GLF_SWITCH_3_6v[15], _GLF_SWITCH_3_7v;
             vec3 _GLF_SWITCH_3_8v[68], _GLF_SWITCH_3_9v;
             -1.0;
             (mat2(-3.1, 5.0, -2450.0772, -2.5) * mat2(-6.2, -7.2, -5406.2559, -9.1));
             ivec4 _GLF_SWITCH_3_10v[6], _GLF_SWITCH_3_11v;
            }
           if(_GLF_DEAD(false))
            barrier();
           if(bool(-6.6))
            {
             ivec4 _GLF_SWITCH_3_12v, _GLF_SWITCH_3_13v[77], _GLF_SWITCH_3_14v[63];
             mix(vec4(-64.29, -6.7, -1.1, 2120.4322), vec4(9.4, -6.7, 7.3, 7.3), bvec4(true, false, false, true));
             (_GLF_SWITCH_0_22v + _GLF_SWITCH_0_22v);
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               ;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             bvec3 _GLF_SWITCH_3_15v;
            }
          }
         else
          {
           while(true)
            {
            }
           ;
          }
         default:
         1;
        }
      }
     default:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     do
      {
       1;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
      {
       case 16:
       mat4x2 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v[26], _GLF_SWITCH_3_2v;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       case 10:
       if((injectionSwitch != vec2(755.838, 865.172)))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         for(uvec2 _GLF_SWITCH_3_3v[31]; false; injectionSwitch)
          {
           uint _GLF_SWITCH_3_4v[69], _GLF_SWITCH_3_5v;
           greaterThan(ivec3(20049, -27739, -49226), (ivec3(-92914, 72325, -91069) / 4506));
           if(_GLF_DEAD(false))
            barrier();
           uvec4(7355u, 54190u, 147112u, 182506u);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           mat2(-403.802, 46.89, -523.335, -6382.1936);
           if(_GLF_DEAD(false))
            barrier();
           ivec2 _GLF_SWITCH_3_6v;
           if(_GLF_DEAD(false))
            return;
          }
         for(mat4 _GLF_SWITCH_3_7v; true; 94302)
          {
          }
         if(true)
          {
           ;
           lessThanEqual(ivec3(-92357, -62437, 87134), (ivec3(-80539, -65691, 35019)));
           int(7.3);
           for(           lessThan(injectionSwitch, vec2(-20.85, -479.705));
 true; (uvec3(87465u, 34906u, 67364u) << uvec3(29565u, 41747u, 75902u)))
            {
             bvec4(true, false, false, true);
             uvec3(170187u, 49072u, 120091u);
             9002.1254;
            }
          }
         ;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
          barrier();
         mat3x2 _GLF_SWITCH_3_8v;
         while(true)
          {
           for(mat3x2 _GLF_SWITCH_3_9v, _GLF_SWITCH_3_10v[66]; false; injectionSwitch)
            {
            }
           if(true)
            {
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               inverse((mat4(6755.2533, 8.6, -9.8, -9.0, -8396.0719, -7806.2825, -0.7, 6.1, 0.5, 244.158, 69.41, -357.751, 908.064, 1280.8019, 456.269, 26.60) - -7.7));
              }
             while(_GLF_WRAPPED_LOOP(false));
             uvec2 _GLF_SWITCH_3_11v[7], _GLF_SWITCH_3_12v[50];
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               mat4(9.0, 2226.8528, -2.3, -7.4, -16.21, -8.9, 8705.6125, 8.5, -3.3, 0.2, 3.7, -20.88, 721.479, -4.6, 88.89, -9176.6916);
              }
             if(_GLF_DEAD(false))
              barrier();
             vec4 _GLF_SWITCH_3_13v;
             mat3x2 _GLF_SWITCH_3_14v, _GLF_SWITCH_3_15v[15], _GLF_SWITCH_3_16v;
             mat3(mat4(9.0, -75.24, 6926.9265, -53.15, 5.0, -988.140, -5107.6487, -7.2, -7785.5325, -2.4, 1.8, -8.3, 3.0, -9.2, 7.8, 4.2));
             mat3x4 _GLF_SWITCH_3_17v[62], _GLF_SWITCH_3_18v;
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              {
              }
             else
              {
               ivec4(-64890, -3269, -47223, 49712);
              }
            }
           while(true)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             mat4 _GLF_SWITCH_3_19v, _GLF_SWITCH_3_20v;
             uvec3(127070u, 68316u, 54363u);
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               ;
              }
             roundEven(vec4(-0.9, 758.131, 48.11, -6.7));
             bvec2(true, false);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             bool _GLF_SWITCH_3_21v[22], _GLF_SWITCH_3_22v[8], _GLF_SWITCH_3_23v;
             if(_GLF_DEAD(false))
              barrier();
             mat3x4 _GLF_SWITCH_3_24v[38], _GLF_SWITCH_3_25v[50], _GLF_SWITCH_3_26v[14];
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               true;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
            }
           mat3((_GLF_SWITCH_3_8v / mat3x2(5690.9342, -24.26, -95.17, 52.75, 62.29, 5067.9292)));
           bvec2(bvec3(false, true, true));
           if(bvec4(true, true, false, true)[1])
            {
             mat2x3 _GLF_SWITCH_3_27v;
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              break;
             ;
             lessThan(vec4(-5861.1397, 4.5, 818.513, -91.81), vec4(vec2(-9.3, -26.23), -0.7, 9.4));
             floatBitsToInt((mat2(6.5, -818.270, -4857.5461, 80.46) * inversesqrt(vec2(956.880, 470.753))));
            }
           else
            {
             (uvec2(99671u, 111030u) << num_workgroup);
            }
           ivec4(-92744, -16729, -85182, 66186).yx;
          }
         mat4x3 _GLF_SWITCH_3_28v, _GLF_SWITCH_3_29v, _GLF_SWITCH_3_30v;
        }
       case 0:
       case 47:
       case 54:
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       case 8:
       case 96:
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(-92741))))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       break;
       case 85:
       bvec3(false, false, false);
       if(_GLF_DEAD(false))
        return;
       case 39:
       if(_GLF_DEAD(false))
        return;
       ;
       default:
       1;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_14.subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_14.subgroup_size + ((subgroup_local_id + 1) % _GLF_struct_replacement_14.subgroup_size);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))))
    barrier();
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(subgroup_local_id + 1 < _GLF_struct_replacement_14.subgroup_size)
      {
       do
        {
         switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
          {
           case 0:
           case 7:
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               continue;
              }
             if(_GLF_DEAD(false))
              break;
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), ~ (~ (int(0))))))))
              {
               case 0:
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                barrier();
               atomicStore(checker[virtual_gid], read, 4, 64, 4);
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               case 74:
               do
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   do
                    {
                     subgroupAll(false);
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               break;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               default:
               1;
               for(int _injected_loop_counter = (0 & -44275); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (int(0)))))); _injected_loop_counter ++)
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    return;
                  }
                 if(_GLF_DEAD(false))
                  break;
                }
              }
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           case 68:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           ;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
            }
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           default:
           1;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
       switch(_GLF_SWITCH((0 ^ 0)))
        {
         case 98:
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 do
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   for(                   true;
 true; (uvec4(121090u, 42509u, 84927u, 168804u) | max(uvec4(100565u, 176194u, 31114u, 104535u), subgroup_id)))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       bvec2(true, false).grrr;
                      }
                     do
                      {
                       mat4x2(92.75, 6.6, -0.1, 76.05, -41.59, 3.5, 66.31, -8.5);
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             for(             (next_virtual_gid / uvec2(194229u, 155852u));
 true; (false ? mat3x4(34.33, 89.00, -5.7, 219.579, -8.8, -5.5, 425.542, 895.042, -5.6, 820.658, -6.2, 194.525) : mat3x4(-980.510, -0.8, -5.2, 7131.3421, -40.20, 723.419, 70.16, 6.4, -7.6, -3.3, -2.2, 2357.4031)))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             bvec4(false, false, true, false);
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                continue;
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             vec2 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v[64];
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               false;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               else
                {
                }
              }
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                do
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                while(_GLF_WRAPPED_LOOP(false));
                if(_GLF_DEAD(false))
                 barrier();
               }
              if(bvec3(true, true, false)[2])
               {
                do
                 {
                  if(_GLF_DEAD(false))
                   return;
                 }
                while(_GLF_WRAPPED_LOOP(false));
                switch(_GLF_SWITCH(((0 | 0) >> _GLF_IDENTITY(int(4), int(4)))))
                 {
                  case 44:
                  vec3 _GLF_SWITCH_0_0v;
                  case 0:
                  case 97:
                  ;
                  mat2 _GLF_SWITCH_1_2v, _GLF_SWITCH_1_3v, _GLF_SWITCH_1_4v;
                  for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                   {
                    if(_GLF_DEAD(false))
                     break;
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                    if(_GLF_DEAD(false))
                     barrier();
                   }
                  do
                   {
                    mat4x3(62.00, 0.5, 631.064, 3316.1801, 10.08, -5182.4583, -6.0, 27.47, -7372.4501, 302.988, -3.9, -40.60);
                   }
                  while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  case 46:
                  case 53:
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                      break;
                     }
                    barrier();
                   }
                  case 27:
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                     {
                      if(_GLF_DEAD(false))
                       return;
                     }
                    else
                     {
                     }
                    break;
                   }
                  (false ? (mat2x3(590.743, 3410.5151, 57.60, -5.8, 424.514, -3.6)) : mat2x3(4.3, -28.46, -4.9, 24.06, -648.120, -56.96));
                  uvec4(59490u, 32851u, 125918u, 52315u);
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                  vec2 _GLF_SWITCH_1_5v;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   return;
                  break;
                  default:
                  1;
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       break;
                      if(_GLF_DEAD(false))
                       barrier();
                     }
                    else
                     {
                      barrier();
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                     }
                   }
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
               }
              else
               {
                if(_GLF_DEAD(false))
                 {
                  for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                   {
                    barrier();
                   }
                 }
                (mat2(-957.475, -939.054, 260.099, -3.7));
               }
              if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                if(_GLF_DEAD(false))
                 {
                  do
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(false))
                     {
                      for(int _injected_loop_counter = (-20392 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
                       {
                        barrier();
                       }
                     }
                    if(_GLF_DEAD(false))
                     barrier();
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_WRAPPED_IF_TRUE(true))
                     {
                      barrier();
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       continue;
                     }
                    else
                     {
                     }
                   }
                  if(_GLF_DEAD(false))
                   barrier();
                  barrier();
                 }
                if(_GLF_DEAD(false))
                 continue;
               }
              else
               {
                if(_GLF_DEAD(false))
                 return;
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  mat2x4(-6014.7747, 0.0, -0.2, -8.6, -84.82, -1808.1111, 47.65, 675.744);
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                 }
                else
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                if(_GLF_DEAD(false))
                 break;
                if(_GLF_DEAD(false))
                 barrier();
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              float _GLF_SWITCH_1_6v, _GLF_SWITCH_1_7v;
              if(_GLF_DEAD(false))
               barrier();
              if(true)
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  break;
                 }
               }
              else
               {
                if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   return;
                  do
                   {
                    barrier();
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       return;
                      barrier();
                     }
                    else
                     {
                     }
                   }
                 }
                (- fract(vec3(7860.2868, -257.282, 7386.1620)));
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                   barrier();
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   break;
                  barrier();
                 }
                mat3x4(-40.99, 844.500, 984.803, -8176.6106, -0.0, -47.66, 9.9, -6.9, -9.5, -2696.8007, 8.5, 99.67);
                (+ 64203);
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  continue;
                 }
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                    return;
                   }
                  barrier();
                 }
                if(_GLF_DEAD(false))
                 continue;
                if(_GLF_DEAD(false))
                 break;
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_DEAD(false))
               {
                for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 << _GLF_IDENTITY(int(6), int(6))) ^ 0)); _injected_loop_counter --)
                 {
                  if(_GLF_DEAD(false))
                   break;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                 }
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                     }
                    else
                     {
                      do
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                        barrier();
                       }
                      while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                     }
                   }
                  continue;
                 }
                barrier();
               }
              if(true)
               {
                ;
                if(_GLF_DEAD(false))
                 break;
                for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) | (int(5))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                 {
                  mat3x2(2.1, -4.2, -8328.1552, 1.5, 2.8, 4.3);
                 }
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(false))
                     break;
                    if(_GLF_DEAD(false))
                     barrier();
                    break;
                   }
                  continue;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   return;
                 }
                vec3 _GLF_SWITCH_1_8v, _GLF_SWITCH_1_9v;
                if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, bool(bvec2(true, true)))))))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(false))
                     break;
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                    do
                     {
                      switch(_GLF_SWITCH(0))
                       {
                        case 0:
                        case 3:
                        case 63:
                        barrier();
                        break;
                        default:
                        1;
                       }
                     }
                    while(_GLF_WRAPPED_LOOP(false));
                   }
                 }
                else
                 {
                 }
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                else
                 {
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    for(int _injected_loop_counter = (0 ^ (1 | 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                     {
                      barrier();
                     }
                    if(_GLF_DEAD(false))
                     {
                      switch(_GLF_SWITCH(0))
                       {
                        case 34:
                        ;
                        if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                         barrier();
                        case 0:
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         break;
                        case 71:
                        case 53:
                        case 15:
                        case 43:
                        if(_GLF_WRAPPED_IF_FALSE(false))
                         {
                         }
                        else
                         {
                          barrier();
                          if(_GLF_DEAD(false))
                           return;
                         }
                        if(_GLF_DEAD(false))
                         return;
                        if(_GLF_DEAD(false))
                         barrier();
                        break;
                        default:
                        if(_GLF_DEAD(false))
                         continue;
                        1;
                       }
                     }
                   }
                  vec4((_GLF_SWITCH_1_9v - _GLF_SWITCH_1_9v), _GLF_SWITCH_1_7v);
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(false))
                     break;
                    barrier();
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                   }
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     continue;
                    barrier();
                   }
                 }
                81579;
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  greaterThan((ivec2(-41010, -92373) & 36748), ivec2(36335, 58334));
                 }
                else
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                 }
               }
              else
               {
                mat3x2(5257.8319, -7828.2602, -7.8, -9.0, 570.644, -6.5);
                if(_GLF_DEAD(false))
                 barrier();
                do
                 {
                  do
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(false))
                     break;
                    -60664;
                    for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                     {
                      switch(_GLF_SWITCH(_GLF_IDENTITY(0, (0) ^ 0)))
                       {
                        case 29:
                        mat2x4(9.6, 3.1, 22.18, 12.80, 219.276, 17.55, -19.51, -7819.4276);
                        case 0:
                        case 95:
                        case 28:
                        case 90:
                        if(_GLF_DEAD(false))
                         continue;
                        case 67:
                        case 73:
                        case 55:
                        if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true)))))
                         return;
                        case 61:
                        case 80:
                        case 64:
                        if(_GLF_DEAD(false))
                         barrier();
                        break;
                        case 79:
                        mat4(-85.63, -378.534, 9.0, 149.681, -2718.8755, 5416.1930, -5.0, 9.9, 46.04, 4755.8321, -869.949, 7604.7065, -308.565, -0.7, 0.2, -9.6);
                        default:
                        1;
                       }
                     }
                    if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
                     barrier();
                   }
                  while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 }
                while(_GLF_WRAPPED_LOOP(false));
               }
              vec3(-23.97, 2989.8535, -6236.3270);
              for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
               {
                if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
                 {
                 }
                else
                 {
                  30752;
                 }
               }
              ivec4 _GLF_SWITCH_1_10v, _GLF_SWITCH_1_11v;
              (vec4(-9.6, -330.493, -48.96, -3192.2955) + _GLF_SWITCH_1_6v);
             }
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               for(               mat3x2(6.3, 2.6, -4717.9825, 2.9, -9.9, 8340.2117);
 true; bvec3(true, false, false))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 bvec4 _GLF_SWITCH_1_12v[81], _GLF_SWITCH_1_13v;
                 ;
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  continue;
                 (mat2x4(-2.3, 5.0, 87.22, -4680.3571, 693.137, 9.1, 321.050, -223.768) + -7533.5620);
                 do
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     return;
                     if(_GLF_DEAD(false))
                      break;
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 while(all(bvec2(false, true)))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 do
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         return;
                        }
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) ^ 0)))); _injected_loop_counter ++)
                        {
                         barrier();
                        }
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
            }
           while(true);
          }
         case 0:
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               return;
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              return;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         case 55:
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            break;
          }
         while(_GLF_WRAPPED_LOOP(false));
         case 68:
         case 74:
         case 80:
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
            {
             return;
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           atomicStore(checker[virtual_gid], read, 4, 64, 4);
          }
         else
          {
          }
         case 25:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         case 53:
         case 77:
         case 12:
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))))
            {
             return;
            }
           else
            {
            }
          }
         subgroupAll(true);
         break;
         default:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
         1;
        }
      }
    }
   else
    {
    }
  }
}
