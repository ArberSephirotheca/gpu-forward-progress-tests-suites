#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  return;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, (_injected_loop_counter != 1) && true)), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bool(_injected_loop_counter != 1))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bool(_injected_loop_counter != 1))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bool(_injected_loop_counter != 1))), true && (_GLF_IDENTITY(_injected_loop_counter != 1, bool(bool(_injected_loop_counter != 1)))))))))))) || false); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) ^ 0))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))) || false)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec2(false, true))) || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))), bvec2(bvec4(_GLF_IDENTITY(bvec2((false), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2((false), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec2(bvec2((false), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))))))))), false, true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))), bvec2(bvec4(_GLF_IDENTITY(bvec2((false), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2((false), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec2(bvec2((false), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))))))))), false, true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))), bvec2(bvec4(_GLF_IDENTITY(bvec2((false), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2((false), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec2(bvec2((false), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))))))))), false, true)))), ! (! (bool(_GLF_IDENTITY(bvec2((false), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))), bvec2(bvec4(_GLF_IDENTITY(bvec2((false), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2((false), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec2(bvec2((false), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))))))))), false, true)))))))) || false)))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false))))), bool(bool(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false))))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false))))), bool(bool(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false)))))))))) || false)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false))))), bool(bool(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false))))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false))))), bool(bool(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false)))))))))) || false))))) && true)))), false || (! (_GLF_IDENTITY((false), _GLF_IDENTITY(true && (_GLF_IDENTITY((false), false || ((false)))), bool(bvec4(_GLF_IDENTITY(true && (_GLF_IDENTITY((false), false || ((false)))), true && (true && (_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) && true)))))), true, true, true)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(false))), false || _GLF_IDENTITY((false), bool(bool((false)))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(false))), false || _GLF_IDENTITY((false), bool(bool((false)))))) || false), ! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(false))), false || _GLF_IDENTITY((false), bool(bool((false)))))) || false), bool(bvec4(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(false))), false || _GLF_IDENTITY((false), bool(bool((false)))))) || false), true, _GLF_IDENTITY(true, false || (true)), false)))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(false, ! (! (false))) || ((false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false)))))), false || (! (_GLF_IDENTITY((false), _GLF_IDENTITY(true && (_GLF_IDENTITY((false), false || ((false)))), bool(bvec4(_GLF_IDENTITY(true && (_GLF_IDENTITY((false), false || ((false)))), _GLF_IDENTITY(true && (true && (_GLF_IDENTITY((false), false || ((false))))), false || (true && (true && (_GLF_IDENTITY((false), false || ((false)))))))), true, true, true)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(false))), false || _GLF_IDENTITY((false), bool(bool((false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(false))), false || _GLF_IDENTITY((false), bool(bool((false)))))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))), bool(bool(false))), false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), bool(_GLF_IDENTITY(bvec3(bool(bool((false))), false, true), bvec3(bvec3(bvec3(bool(bool((false))), false, true))))))))) || _GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(false))), false || _GLF_IDENTITY((false), bool(bool((false)))))) || false), bool(bvec4(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(false))), false || _GLF_IDENTITY((false), bool(bool((false)))))) || false), true, true, false))))))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), false, false), true)))))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize), ~ (~ (_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize))))))) ^ uvec3(0u, 0u, 0u))), gl_WorkGroupSize)).x, _GLF_IDENTITY(((1u ^ 1u) << _GLF_IDENTITY(uint(1u), uint(1u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(((1u ^ 1u) << _GLF_IDENTITY(uint(1u), uint(1u))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(((_GLF_IDENTITY(1u ^ _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, 0u | (1u)))))), _GLF_IDENTITY(_GLF_IDENTITY((1u ^ 1u) - (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u | ((1u ^ 1u) - (0u << _GLF_IDENTITY(uint(5u), uint(5u))))), ((1u ^ 1u) - (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) << (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(uvec2(uint(8u), 1u)), uint(uvec4(uint(uvec2(uint(8u), 1u)), 0u, 1u, 0u)))))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << _GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), uint(uvec3(uint(1u), 0u, (1u & 1u))))) | (uint(1u)))), (_GLF_IDENTITY(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))), 0u ^ ((1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))))), 0u ^ (_GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))), 0u ^ ((1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))))))))) | 0u))) | 0u))), uint(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(0.2))), injectionSwitch.y))), (uvec2(_GLF_IDENTITY(((1u ^ 1u) << _GLF_IDENTITY(uint(1u), uint(1u))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(((_GLF_IDENTITY(1u ^ _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, 0u | (1u)))))), _GLF_IDENTITY(_GLF_IDENTITY((1u ^ 1u) - (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u | ((1u ^ 1u) - (0u << _GLF_IDENTITY(uint(5u), uint(5u))))), ((1u ^ 1u) - (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) << (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(uvec2(uint(8u), 1u)), uint(uvec4(uint(uvec2(uint(8u), 1u)), 0u, 1u, 0u)))))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << _GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), uint(uvec3(uint(1u), 0u, (1u & 1u))))) | (uint(1u)))), (_GLF_IDENTITY(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))), 0u ^ ((1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))))), 0u ^ (_GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))), 0u ^ ((1u ^ _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))))))))) | 0u))) | 0u))), uint(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(0.2))), injectionSwitch.y)))) / uvec2(1u, 1u)))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))), min(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u)) << 0u)) << 0u), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))), uint(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(gl_WorkGroupSize[2], gl_WorkGroupSize[2], gl_WorkGroupSize[2])))).x)))))))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))).x)), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))) ? _GLF_FUZZED(123940u) : _GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))), (_GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))).x)), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))) ? _GLF_FUZZED(123940u) : _GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))), uint(uvec4(max(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))).x)), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))) ? _GLF_FUZZED(123940u) : _GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))), 0u, 1u, 0u)))) * 1u))) - 0u)));
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2456.7846, 584.944)) : injectionSwitch)), injectionSwitch)).y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))), false, true, true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), true, true))) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (1u ^ _GLF_IDENTITY(1u, (1u) | (1u))) | (gl_WorkGroupID.x));
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u), max(workgroup_size * workgroup_id, workgroup_size * workgroup_id));
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 0u, 1u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), min(_GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(0u, (0u) - 0u))))), 1u)))), (0u ^ 0u) ^ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), min(_GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(0u, (0u) - 0u))))), 1u)))))))))) + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))));
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u)], uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)) < injectionSwitch.y, true && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)) < injectionSwitch.y, true && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))) ? _GLF_IDENTITY(1, (false ? _GLF_FUZZED(ivec4(-35336, 19409, -22012, 930)[2]) : 1)) : _GLF_FUZZED(33808), max(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2520.8744) : injectionSwitch.x))) + 0.0) > injectionSwitch.y)) ? _GLF_FUZZED(-30.55) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1])).y, max(injectionSwitch.y, injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-5.7)))) * 1.0, (false ? _GLF_FUZZED(-55.12) : (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, injectionSwitch.y))) - 0.0), (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), mix(float(max(injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(-131.567)), bool(false)))) / _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(-5.7)))) * 1.0))))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(24.16), _GLF_FUZZED(-0.5)), bvec2(false, false))), injectionSwitch)).y, injectionSwitch.y)))))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-30.55) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 0.0))))), (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-5.7)))), float(mat4x2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 0.0))))), (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(-5.7)))), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 1.0))) * 1.0))), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.4) : injectionSwitch.y)), max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-30.55) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-5.7)))) * 1.0)), (false ? _GLF_FUZZED(_GLF_IDENTITY(-246.169, mix(float(-246.169), float(_GLF_FUZZED(2.4)), bool(false)))) : (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(-30.55) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(29055)), _GLF_IDENTITY(_GLF_FUZZED(-711.528), min(_GLF_FUZZED(-711.528), _GLF_FUZZED(-711.528)))), bvec2(false, false))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(29055)), _GLF_IDENTITY(_GLF_FUZZED(-711.528), min(_GLF_FUZZED(-711.528), _GLF_FUZZED(-711.528)))), bvec2(false, false))).y, float(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(29055)), _GLF_IDENTITY(_GLF_FUZZED(-711.528), min(_GLF_FUZZED(-711.528), _GLF_FUZZED(-711.528)))), bvec2(false, false))).y))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(29055)), _GLF_IDENTITY(_GLF_FUZZED(-711.528), min(_GLF_FUZZED(-711.528), _GLF_FUZZED(-711.528)))), bvec2(false, false))).y)), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-5.7)))) * 1.0))))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(-9.1))))) ? _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(2), int(2))) ^ (1)) : _GLF_FUZZED(33808), (false ? _GLF_FUZZED(78673) : _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2520.8744) : injectionSwitch.x))) + 0.0) > injectionSwitch.y)) ? _GLF_FUZZED(-30.55) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1])).y, max(injectionSwitch.y, injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-5.7)))) * 1.0, (false ? _GLF_FUZZED(-55.12) : (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, injectionSwitch.y))) - 0.0), (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), mix(float(max(injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(-131.567)), bool(false)))) / _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(-5.7)))) * 1.0))))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(24.16), _GLF_FUZZED(-0.5)), bvec2(false, false))), injectionSwitch)).y, injectionSwitch.y)))))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-30.55) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 0.0))))), (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-5.7)))), float(mat4x2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 0.0))))), (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(-5.7)))), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 1.0))) * 1.0))), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.4) : injectionSwitch.y)), max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-30.55) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-5.7)))) * 1.0)), (false ? _GLF_FUZZED(_GLF_IDENTITY(-246.169, mix(float(-246.169), float(_GLF_FUZZED(2.4)), bool(false)))) : (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(-30.55) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(29055)), _GLF_IDENTITY(_GLF_FUZZED(-711.528), min(_GLF_FUZZED(-711.528), _GLF_FUZZED(-711.528)))), bvec2(false, false))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(29055)), _GLF_IDENTITY(_GLF_FUZZED(-711.528), min(_GLF_FUZZED(-711.528), _GLF_FUZZED(-711.528)))), bvec2(false, false))).y, float(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(29055)), _GLF_IDENTITY(_GLF_FUZZED(-711.528), min(_GLF_FUZZED(-711.528), _GLF_FUZZED(-711.528)))), bvec2(false, false))).y))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(29055)), _GLF_IDENTITY(_GLF_FUZZED(-711.528), min(_GLF_FUZZED(-711.528), _GLF_FUZZED(-711.528)))), bvec2(false, false))).y)), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-5.7)))) * 1.0))))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(-9.1))))) ? _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(2), int(2))) ^ (1)) : _GLF_FUZZED(33808))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2561.2364)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), true && (bool(true))))))), min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2561.2364)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), true && (bool(true))))))), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2561.2364)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), true && (bool(true))))))))))), injectionSwitch.x)))), (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2561.2364)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), true && (bool(true))))))), min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2561.2364)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), true && (bool(true))))))), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2561.2364)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), true && (bool(true))))))))))), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2561.2364)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), true && (bool(true))))))), min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2561.2364)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), true && (bool(true))))))), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2561.2364)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), true && (bool(true))))))))))), 0.0, 1.0, 0.0, 1.0, 0.0)), float(mat2(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2561.2364)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), true && (bool(true))))))), min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2561.2364)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), true && (bool(true))))))), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2561.2364)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), true && (bool(true))))))))))), 0.0, 1.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 0.0)))), injectionSwitch.x)))) : _GLF_FUZZED(36.56))) < injectionSwitch.y)) ? 1 : _GLF_FUZZED(33808)))))), 4, 64, 4);
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) ^ 0), 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(subgroup_local_id + 1 < subgroup_size)
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false))), ! (_GLF_IDENTITY(! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), false || (bool(true))))), (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (false) || false)))), ! (! (! (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(ldexp(vec2(380.782, 9947.7540), ivec2(62846, -33039))) : injectionSwitch)).x > injectionSwitch.y)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false))))))))))) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - _GLF_IDENTITY(sin(vec2(0.0, 0.0)), (_GLF_IDENTITY(sin(vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(4.9), _GLF_FUZZED(vec2(3.6, 3.5).y)), vec2((sin(vec2(0.0, 0.0)))[0], (sin(vec2(0.0, 0.0)))[1]), bvec2(true, true)))) + vec2(0.0, 0.0)), max(_GLF_IDENTITY((injectionSwitch) - _GLF_IDENTITY(sin(vec2(0.0, 0.0)), (_GLF_IDENTITY(sin(vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(4.9), _GLF_FUZZED(vec2(3.6, 3.5).y)), vec2((sin(vec2(0.0, 0.0)))[0], (sin(vec2(0.0, 0.0)))[1]), bvec2(true, true)))) + vec2(0.0, 0.0)), max((injectionSwitch) - _GLF_IDENTITY(sin(vec2(0.0, 0.0)), (_GLF_IDENTITY(sin(vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(4.9), _GLF_FUZZED(vec2(3.6, 3.5).y)), vec2((sin(vec2(0.0, 0.0)))[0], (sin(vec2(0.0, 0.0)))[1]), bvec2(true, true)))) + vec2(0.0, 0.0)), _GLF_IDENTITY((injectionSwitch) - _GLF_IDENTITY(sin(vec2(0.0, 0.0)), (_GLF_IDENTITY(sin(vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(4.9), _GLF_FUZZED(vec2(3.6, 3.5).y)), vec2((sin(vec2(0.0, 0.0)))[0], (sin(vec2(0.0, 0.0)))[1]), bvec2(true, true)))) + vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(5.4), ((injectionSwitch) - _GLF_IDENTITY(sin(vec2(0.0, 0.0)), (_GLF_IDENTITY(sin(vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(4.9), _GLF_FUZZED(vec2(3.6, 3.5).y)), vec2((sin(vec2(0.0, 0.0)))[0], (sin(vec2(0.0, 0.0)))[1]), bvec2(true, true)))) + vec2(0.0, 0.0)))[1]), vec2(((injectionSwitch) - _GLF_IDENTITY(sin(vec2(0.0, 0.0)), (_GLF_IDENTITY(sin(vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(4.9), _GLF_FUZZED(vec2(3.6, 3.5).y)), vec2((sin(vec2(0.0, 0.0)))[0], (sin(vec2(0.0, 0.0)))[1]), bvec2(true, true)))) + vec2(0.0, 0.0)))[0], _GLF_FUZZED(45.95)), bvec2(true, false))))), _GLF_IDENTITY((injectionSwitch) - _GLF_IDENTITY(sin(vec2(0.0, 0.0)), (_GLF_IDENTITY(sin(vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(4.9), _GLF_FUZZED(vec2(3.6, 3.5).y)), vec2((sin(vec2(0.0, 0.0)))[0], (sin(vec2(0.0, 0.0)))[1]), bvec2(true, true)))) + vec2(0.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(796.765, 5.7)) : (injectionSwitch) - _GLF_IDENTITY(sin(vec2(0.0, 0.0)), (_GLF_IDENTITY(sin(vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(4.9), _GLF_FUZZED(vec2(3.6, 3.5).y)), vec2((sin(vec2(0.0, 0.0)))[0], (sin(vec2(0.0, 0.0)))[1]), bvec2(true, true)))) + vec2(0.0, 0.0))))))))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (injectionSwitch) - sin(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(sin(vec2(0.0, 0.0)), (_GLF_IDENTITY(sin(vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(4.9), _GLF_FUZZED(vec2(3.6, 3.5).y)), vec2((sin(vec2(0.0, 0.0)))[0], _GLF_IDENTITY((sin(vec2(0.0, 0.0)))[1], min((sin(vec2(0.0, 0.0)))[1], _GLF_IDENTITY((sin(vec2(0.0, 0.0)))[1], (_GLF_IDENTITY((sin(vec2(0.0, 0.0)))[1], ((sin(vec2(0.0, 0.0)))[1]) - 0.0)) / 1.0)))), bvec2(true, true)))) + vec2(0.0, 0.0))))).x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(sin(vec2(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.1)), float(0.0), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8.5))))), (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8.5)))))) - 0.0), 0.0)))), (_GLF_IDENTITY(sin(vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(4.9), _GLF_FUZZED(vec2(3.6, 3.5).y)), vec2((sin(vec2(0.0, 0.0)))[0], (sin(vec2(0.0, 0.0)))[1]), bvec2(true, true)))) + vec2(0.0, 0.0))))).x > injectionSwitch.y)))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(exp(0.0), 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(exp(0.0), 1.0, 1.0)))) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0)).x > injectionSwitch.y))))
            return;
           return;
          }
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), (_GLF_IDENTITY(max(4, 4), clamp(max(4, 4), max(4, 4), max(4, 4)))) | (max(4, 4)))), 0 ^ (4)), 64, 4);
     subgroupAll(false);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false))), _GLF_IDENTITY(false || (! (false)), (_GLF_IDENTITY(false || (! (false)), ! (! (false || (! (false)))))) || false))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false))), _GLF_IDENTITY(false || (! (false)), (_GLF_IDENTITY(false || (! (false)), ! (! (false || (! (false)))))) || false))))))))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     atomicStore(checker[_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 0u, 0u))), virtual_gid)), _GLF_IDENTITY(1u * (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 0u, 0u))), virtual_gid)), max(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 0u, 0u))), virtual_gid)), _GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 0u, 0u))), virtual_gid))))), min(1u * (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 0u, 0u))), virtual_gid)), max(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 0u, 0u))), virtual_gid)), _GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 0u, 0u))), virtual_gid))))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 0u, 0u))), virtual_gid)), max(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 0u, 0u))), virtual_gid)), _GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 0u, 0u))), virtual_gid)))))))), virtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(subgroup_id)))) + 0u)))], read, 4, 64, 4);
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), true && (true))), true && (true && _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true && (true), false || (_GLF_IDENTITY(true && (true), bool(_GLF_IDENTITY(bvec3(true && (true), true, false), bvec3(bvec3(bvec3(true && (true), true, false)))))))), ! (! (true && (true)))), _GLF_IDENTITY((_GLF_IDENTITY(true && (true), ! (! (true && (true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(((_GLF_IDENTITY(true && (true), ! (! (true && (true))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), _GLF_IDENTITY(false, true && (false)) || (((_GLF_IDENTITY(true && (true), ! (! (true && (true))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))) && true)))), ((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true && (true), false || (_GLF_IDENTITY(true && (true), bool(_GLF_IDENTITY(bvec3(true && (true), true, false), bvec3(bvec3(bvec3(true && (true), true, false)))))))), ! (! (true && (true)))), _GLF_IDENTITY((_GLF_IDENTITY(true && (true), ! (! (true && (true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(((_GLF_IDENTITY(true && (true), ! (! (true && (true))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), _GLF_IDENTITY(false, true && (false)) || (((_GLF_IDENTITY(true && (true), ! (! (true && (true))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))) && true))))) && true)))))) || false))
      {
       if(_GLF_DEAD(false))
        return;
       subgroupAll(true);
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch), vec2(mat3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) * vec2(1.0, 1.0))))))), injectionSwitch)))).y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
}
