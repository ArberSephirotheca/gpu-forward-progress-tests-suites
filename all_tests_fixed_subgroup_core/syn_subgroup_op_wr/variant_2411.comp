#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-57.66)), bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7091.4579, -511.724)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) - vec2(0.0, 0.0)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), max(0.0 + (injectionSwitch.y), 0.0 + (injectionSwitch.y))))) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))) || false), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)))).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mix(vec2(_GLF_FUZZED(-0.0), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[0], _GLF_FUZZED(58.08)), bvec2(true, false))), 1.0, 1.0, cos(0.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y)))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat4(mat2(1.0))))).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))) || false), false, true), true))), true)))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), float(_GLF_FUZZED(-9.6)), bool(false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false), false, _GLF_IDENTITY(true, ! (! (true))))), false || _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), ((bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))) || false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, true)), false, false, false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, false, true)))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), float(mat3x4(injectionSwitch.y, 0.0, cos(length(0.0)), cos(0.0), 1.0, sqrt(1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), true && (! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))))))), bool(bool(! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(183.804)), bvec2(true, false)))) + vec2(0.0, 0.0)).x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)) && (! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))))))), bool(bool(! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))) && true))) || (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> 0u))), min(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u) * workgroup_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x)))) / 1.0, max((_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x)))) / 1.0, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x)))) / 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x)))), mix(float(_GLF_FUZZED(-498.749)), float((_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) / 1.0, max((_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x)))) / 1.0, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x)))) / 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x)))) / 1.0, ((_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x)))) / 1.0) - 0.0)))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) << _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, _GLF_IDENTITY(2u, min(2u, 2u))))), uint(_GLF_IDENTITY(2u, 0u | (2u))))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, _GLF_IDENTITY(clamp(2u, 2u, _GLF_IDENTITY(2u, min(2u, 2u))), (true ? clamp(2u, 2u, _GLF_IDENTITY(2u, min(2u, 2u))) : _GLF_FUZZED(workgroup_id))))), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(uint(2u), 0u, 0u), (_GLF_IDENTITY(uvec3(uint(_GLF_IDENTITY(2u, (2u) / 1u)), 0u, 0u), max(_GLF_IDENTITY(uvec3(uint(_GLF_IDENTITY(2u, (2u) / 1u)), 0u, 0u), (true ? _GLF_IDENTITY(uvec3(uint(_GLF_IDENTITY(2u, (2u) / 1u)), 0u, 0u), max(uvec3(uint(_GLF_IDENTITY(2u, (2u) / 1u)), 0u, 0u), uvec3(uint(_GLF_IDENTITY(2u, (2u) / 1u)), 0u, 0u))) : _GLF_FUZZED(uvec3(56822u, 156953u, 87707u)))), uvec3(uint(_GLF_IDENTITY(2u, (2u) / 1u)), 0u, 0u)))) | (uvec3(uint(2u), 0u, 0u)))), (uint(_GLF_IDENTITY(uvec3(uint(2u), _GLF_IDENTITY(0u, min(0u, 0u)), 0u), (uvec3(uint(2u), 0u, 0u)) | (uvec3(uint(2u), 0u, 0u))))) / 1u)))), _GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), 0u + (min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))) | (_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, _GLF_IDENTITY(2u, min(2u, 2u))))), uint(2u)), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, _GLF_IDENTITY(2u, min(2u, 2u))))), uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, _GLF_IDENTITY(2u, min(2u, 2u))))), (uint(_GLF_IDENTITY(2u, clamp(2u, 2u, _GLF_IDENTITY(2u, min(2u, 2u)))))) | 0u), _GLF_IDENTITY(uint(2u), (true ? uint(2u) : _GLF_FUZZED(subgroup_local_id)))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, _GLF_IDENTITY(2u, min(2u, 2u))))), uint(2u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, _GLF_IDENTITY(2u, min(2u, 2u))))), uint(2u))))), max((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, _GLF_IDENTITY(2u, min(2u, 2u))))), uint(_GLF_IDENTITY(2u, uint(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, 2u)))))))), (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, _GLF_IDENTITY(2u, min(2u, 2u))))), uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) >> 0u), (_GLF_IDENTITY(2u, (2u) >> 0u)) >> 0u)) | (_GLF_IDENTITY(2u, min(_GLF_IDENTITY(2u, ~ (~ (2u))), 2u)))))))))))) | ((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, _GLF_IDENTITY(2u, min(2u, 2u))))), max(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, _GLF_IDENTITY(2u, min(2u, 2u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, _GLF_IDENTITY(2u, min(2u, 2u))))), (uint(_GLF_IDENTITY(2u, clamp(2u, 2u, _GLF_IDENTITY(2u, min(2u, 2u)))))) - 0u))), uint(_GLF_IDENTITY(2u, 1u * (_GLF_IDENTITY(2u, (2u) | 0u)))))))), (_GLF_IDENTITY((subgroup_size) << (_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0u, ~ (~ (0u))))) >> _GLF_IDENTITY(uint(2u), uint(2u))), (false ? _GLF_FUZZED(workgroup_size) : (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))) | (_GLF_IDENTITY((subgroup_size) << (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))))) + 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : subgroup_size))) / (1u & 1u)), max(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))))), _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size))))) << (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) * _GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(2u, (2u) * _GLF_IDENTITY(1u, uint(uvec2(1u, 1u))))))), min(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(2u))), uint(2u)))) / 1u)))), 1u * (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), (_GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) | (min(subgroup_size, subgroup_size)))) + 0u)), 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u, 0u))))), _GLF_IDENTITY((subgroup_size) << (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), 0u ^ (_GLF_IDENTITY(uint(2u), uint(2u))))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) << (_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), min((subgroup_size) << (_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), (subgroup_size) << (_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(num_workgroup))), (subgroup_size))) << _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), uint(2u))), ((0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) / 1u), (false ? _GLF_FUZZED(145506u) : _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(num_workgroup))), (subgroup_size))) << _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), uint(2u))), ((0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) / 1u), (_GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(num_workgroup))), (subgroup_size))) << _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), uint(2u))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), uint(2u))), ((0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))) / 1u)) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), (true ? _GLF_IDENTITY((subgroup_size), max((subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u))) : _GLF_FUZZED(num_workgroup))), (subgroup_size))) << _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), uint(2u))), ((0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) / 1u), (_GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), (true ? _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size)))) >> 0u) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY((subgroup_size), uint(uvec4((subgroup_size), (1u | 1u), 1u, 1u))))) << _GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), uint(2u))), ((0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), uint(2u))), ((0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) / 1u), 0u ^ (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), uint(2u))), ((0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) / 1u))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), uint(2u))), ((0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) / 1u)))) ^ 0u)) << 0u)))) | (_GLF_IDENTITY((subgroup_size) << (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(2u), (uint(2u)) >> 0u)), ((false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(2u), (uint(2u)) >> 0u))) | ((false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(2u), (uint(2u)) >> 0u))))), max(uint(2u), uint(2u))), 0u, 1u)), uint(uvec4(uint(uvec3(_GLF_IDENTITY(uint(2u), max(uint(2u), uint(2u))), 0u, 1u)), 0u, _GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | 0u), 1u, 0u))), 0u))), (true ? _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(max(uint(2u), uint(2u)), max(_GLF_IDENTITY(max(uint(2u), uint(2u)), (max(uint(2u), uint(2u))) * 1u), max(uint(2u), uint(2u))))), 0u, 1u)), uint(_GLF_IDENTITY(uvec4(uint(uvec3(_GLF_IDENTITY(uint(2u), max(_GLF_IDENTITY(uint(2u), (uint(2u)) - 0u), uint(2u))), 0u, 1u)), 0u, 1u, 0u), (uvec4(uint(uvec3(_GLF_IDENTITY(uint(2u), max(_GLF_IDENTITY(uint(2u), (uint(2u)) - 0u), uint(2u))), 0u, 1u)), 0u, 1u, 0u)) | (uvec4(uint(uvec3(_GLF_IDENTITY(uint(2u), max(_GLF_IDENTITY(uint(2u), (uint(2u)) - 0u), uint(2u))), 0u, 1u)), 0u, 1u, 0u))))) : _GLF_FUZZED(subgroup_size)))))), uint(2u))) + 0u)), ((subgroup_size) << (_GLF_IDENTITY(0u, 0u | (0u)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))), uint(2u))), uint(2u)))) / 1u)))))), 0u ^ (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) << _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, _GLF_IDENTITY(2u, min(2u, 2u))))), uint(_GLF_IDENTITY(2u, 0u | (2u))))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, _GLF_IDENTITY(2u, min(2u, 2u))))), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(uint(2u), 0u, 0u), (uvec3(uint(_GLF_IDENTITY(2u, (2u) / 1u)), 0u, 0u)) | (uvec3(uint(2u), 0u, 0u)))), (uint(_GLF_IDENTITY(uvec3(uint(2u), 0u, 0u), (uvec3(uint(2u), 0u, 0u)) | (uvec3(uint(2u), 0u, 0u))))) / 1u)))), _GLF_IDENTITY(0u, min(0u, 0u)) | (_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, _GLF_IDENTITY(2u, min(2u, 2u))))), uint(2u)), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, _GLF_IDENTITY(2u, min(2u, 2u))))), uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, _GLF_IDENTITY(2u, min(2u, 2u))))), uint(2u)), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, _GLF_IDENTITY(2u, min(2u, 2u))))), uint(2u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, _GLF_IDENTITY(2u, min(2u, 2u))))), uint(2u))))), max((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, _GLF_IDENTITY(2u, min(2u, 2u))))), uint(_GLF_IDENTITY(2u, uint(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, 2u)))))))), (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, _GLF_IDENTITY(2u, min(2u, 2u))))), uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) >> 0u), (_GLF_IDENTITY(2u, (2u) >> 0u)) >> 0u)) | (_GLF_IDENTITY(2u, min(_GLF_IDENTITY(2u, ~ (~ (2u))), 2u)))))))))))) | ((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, _GLF_IDENTITY(2u, min(2u, 2u))))), uint(2u))))), (_GLF_IDENTITY((subgroup_size) << (_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0u, ~ (~ (0u))))) >> _GLF_IDENTITY(uint(2u), uint(2u))), (false ? _GLF_FUZZED(workgroup_size) : (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))) | (_GLF_IDENTITY((subgroup_size) << (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))))) + 0u)), ((_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size))))) << (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) * _GLF_IDENTITY(1u, uint(uvec2(1u, 1u))))), min(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(2u))), uint(2u)))) / 1u))), 0u | (_GLF_IDENTITY((subgroup_size) << _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, _GLF_IDENTITY(2u, min(2u, 2u))))), uint(_GLF_IDENTITY(2u, 0u | (2u))))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, _GLF_IDENTITY(2u, min(2u, 2u))))), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(uint(2u), 0u, 0u), (uvec3(uint(_GLF_IDENTITY(2u, (2u) / 1u)), 0u, 0u)) | (uvec3(uint(2u), 0u, 0u)))), (uint(_GLF_IDENTITY(uvec3(uint(2u), 0u, 0u), (uvec3(uint(2u), 0u, 0u)) | (uvec3(uint(2u), 0u, 0u))))) / 1u)))), _GLF_IDENTITY(0u, min(0u, 0u)) | (_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, _GLF_IDENTITY(2u, min(2u, 2u))))), uint(2u)), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, _GLF_IDENTITY(2u, min(2u, 2u))))), uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, _GLF_IDENTITY(2u, min(2u, 2u))))), uint(2u)), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, _GLF_IDENTITY(2u, min(2u, 2u))))), uint(2u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, _GLF_IDENTITY(2u, min(2u, 2u))))), uint(2u))))), max((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, _GLF_IDENTITY(2u, min(2u, 2u))))), uint(_GLF_IDENTITY(2u, uint(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, 2u)))))))), (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, _GLF_IDENTITY(2u, min(2u, 2u))))), uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) >> 0u), (_GLF_IDENTITY(2u, (2u) >> 0u)) >> 0u)) | (_GLF_IDENTITY(2u, min(_GLF_IDENTITY(2u, ~ (~ (2u))), 2u)))))))))))) | ((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, _GLF_IDENTITY(2u, min(2u, 2u))))), uint(2u))))), (_GLF_IDENTITY((subgroup_size) << (_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0u, ~ (~ (0u))))) >> _GLF_IDENTITY(uint(2u), uint(2u))), (false ? _GLF_FUZZED(workgroup_size) : (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))) | (_GLF_IDENTITY((subgroup_size) << (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))))) + 0u)), ((_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size))))) << (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) * _GLF_IDENTITY(1u, uint(uvec2(1u, 1u))))), min(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(2u))), uint(2u)))) / 1u)))))), 1u * (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), (_GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) | (min(subgroup_size, subgroup_size)))) + 0u)), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), (_GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) | (min(subgroup_size, subgroup_size)))) + 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), (_GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) | (min(subgroup_size, subgroup_size)))) + 0u)), min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), (_GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) | (min(subgroup_size, subgroup_size)))) + 0u)), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), (_GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) | (min(subgroup_size, subgroup_size)))) + 0u)))))), 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u, 0u))))), _GLF_IDENTITY((subgroup_size) << (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), 0u ^ (_GLF_IDENTITY(uint(2u), uint(2u))))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) << (_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(num_workgroup))), (subgroup_size))) << _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), uint(2u))), ((0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(num_workgroup))), (subgroup_size))) << _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), uint(2u))), ((0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) / 1u), (_GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(num_workgroup))), (subgroup_size))) << _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), uint(2u))), ((0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) / 1u)) ^ 0u)) << 0u))), (_GLF_IDENTITY((subgroup_size) << (_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(num_workgroup))), (subgroup_size))) << _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), uint(2u))), ((0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(num_workgroup))), (subgroup_size))) << _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), uint(2u))), ((0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) / 1u), (_GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(num_workgroup))), (subgroup_size))) << _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), uint(2u))), ((0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) / 1u)) ^ 0u)) << 0u)))) << 0u)) | (_GLF_IDENTITY((subgroup_size) << (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(2u), (uint(2u)) >> 0u))), max(uint(2u), uint(2u))), 0u, 1u)), uint(uvec4(uint(uvec3(_GLF_IDENTITY(uint(2u), max(uint(2u), _GLF_IDENTITY(uint(2u), max(uint(2u), uint(2u))))), 0u, 1u)), 0u, _GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) | 0u), 1u, 0u))), 0u))), (true ? _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(max(uint(_GLF_IDENTITY(2u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (2u))), uint(2u)), _GLF_IDENTITY(max(_GLF_IDENTITY(max(uint(2u), uint(2u)), (max(uint(2u), uint(2u))) * 1u), max(uint(2u), uint(2u))), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(max(uint(2u), uint(2u)), (max(uint(2u), uint(2u))) * 1u), max(uint(2u), uint(2u))), uint(uint(max(_GLF_IDENTITY(max(uint(2u), uint(2u)), (max(uint(2u), uint(2u))) * 1u), max(uint(2u), uint(2u)))))), max(_GLF_IDENTITY(max(uint(2u), uint(2u)), (max(uint(2u), uint(2u))) * 1u), max(uint(2u), uint(2u))), max(_GLF_IDENTITY(max(uint(2u), uint(2u)), (max(uint(2u), uint(2u))) * 1u), max(uint(2u), uint(2u))))))), 0u, 1u)), uint(uvec4(uint(uvec3(_GLF_IDENTITY(uint(2u), max(uint(2u), uint(2u))), 0u, 1u)), 0u, 1u, 0u))) : _GLF_FUZZED(subgroup_size)))))), uint(2u))) + 0u)), _GLF_IDENTITY(((subgroup_size) << (_GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), ((0u)) | (_GLF_IDENTITY((0u), uint(uint((0u))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))), uint(2u))), uint(2u)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(((subgroup_size) << (_GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), ((0u)) | (_GLF_IDENTITY((0u), uint(uint((0u))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))), uint(2u))), uint(2u)))), (_GLF_IDENTITY(((subgroup_size) << (_GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), ((0u)) | (_GLF_IDENTITY((0u), uint(uint((0u))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))), uint(2u))), uint(2u)))), (((subgroup_size) << (_GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), ((0u)) | (_GLF_IDENTITY((0u), uint(uint((0u))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))), uint(2u))), uint(2u))))) | (((subgroup_size) << (_GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), ((0u)) | (_GLF_IDENTITY((0u), uint(uint((0u))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))), uint(2u))), uint(2u))))))) | (((subgroup_size) << (_GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), ((0u)) | (_GLF_IDENTITY((0u), uint(uint((0u))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))), uint(2u))), uint(2u)))))))) / 1u)))))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(~ (~ _GLF_IDENTITY(((subgroup_local_id)), (((subgroup_local_id))) / 1u)), (_GLF_IDENTITY(~ (~ _GLF_IDENTITY(((subgroup_local_id)), (((subgroup_local_id))) / 1u)), ~ (_GLF_IDENTITY(~ (~ (~ _GLF_IDENTITY(((subgroup_local_id)), (((subgroup_local_id))) / 1u))), (~ (~ (~ _GLF_IDENTITY(((subgroup_local_id)), (((subgroup_local_id))) / 1u)))) >> 0u)))) * 1u)) | (subgroup_local_id)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))) | (subgroup_local_id))))), (false ? _GLF_FUZZED(workgroup_base) : ~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))) | (subgroup_local_id))))))), 0u + (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) - 0u), ~ _GLF_IDENTITY((~ ((subgroup_local_id))), _GLF_IDENTITY(uint(uvec2((~ ((subgroup_local_id))), 1u)), clamp(uint(uvec2((~ ((subgroup_local_id))), 1u)), uint(uvec2((~ ((subgroup_local_id))), 1u)), uint(uvec2((~ ((subgroup_local_id))), 1u)))))) | (subgroup_local_id)))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) ^ 0u, min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 0u ^ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), clamp(_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))))) ^ 0u))) ^ 0u, ((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) ^ 0u) | _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), 0u ^ (workgroup_base))) ^ 0u, _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))), min(~ (_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))), ~ (_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))))))))) ^ 0u), (_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) ^ 0u), max(((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec4(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 0u, 1u, 0u))), 0u ^ (workgroup_base))) ^ 0u), ((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) ^ 0u)))) * 1u) | 0u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), min(_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), min(_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))))))) ^ 0u), (_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) ^ 0u), max(((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) ^ 0u), ((_GLF_IDENTITY(workgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) + (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) - 0u))))) ^ 0u)))) * 1u) | 0u)))), max((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), 0u ^ (workgroup_base))) ^ 0u, _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) ^ 0u), (_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) ^ 0u), max(((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, 0u | (0u)) ^ (workgroup_base))) ^ 0u), ((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) ^ 0u)))) * 1u) | 0u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) >> 0u)))) ^ 0u), (_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) ^ 0u), max(((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) ^ _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) | (0u))))), ((_GLF_IDENTITY(workgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) + (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) ^ 0u)))) * 1u) | 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), 0u ^ (workgroup_base))) ^ 0u, _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) ^ 0u), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), clamp(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))), _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))))) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), min(uint(uint(0u)), uint(uint(0u)))))), max(((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) ^ 0u), ((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) ^ 0u)))) * 1u) | 0u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), 0u ^ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))) ^ 0u), (_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) ^ 0u), max(((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) ^ 0u), ((_GLF_IDENTITY(workgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) + _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(2u), uint(2u))), (false ? _GLF_FUZZED(workgroup_size) : (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))))) ^ 0u)))) * 1u) | 0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) / 1u)), (false ? _GLF_FUZZED(virtual_gid) : uint(_GLF_IDENTITY(uint(0u), (uint(0u)) / 1u))))) ^ (workgroup_base))) ^ 0u, (true ? (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) / 1u)), clamp(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) / 1u)), uint(_GLF_IDENTITY(uint(0u), (uint(0u)) / 1u)), uint(_GLF_IDENTITY(uint(0u), (uint(0u)) / 1u)))), (false ? _GLF_FUZZED(virtual_gid) : uint(_GLF_IDENTITY(uint(0u), (uint(0u)) / 1u))))) ^ (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))) ^ 0u : _GLF_FUZZED(199193u)))))) + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) * _GLF_IDENTITY(((1u & 1u) & uint(_GLF_ONE(1.0, injectionSwitch.y))), (((1u & 1u) & uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (0u ^ 0u))), max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY((true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), uvec3(0u, 0u, 0u) + (uvec3(subgroup_local_id, 0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))))) + 1), 0u ^ ((subgroup_local_id + 1))) % subgroup_size : _GLF_FUZZED(85322u)), ((true ? _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0)), 0u ^ ((subgroup_local_id + 1))) % subgroup_size : _GLF_FUZZED(85322u))) * 1u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) * (((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ _GLF_IDENTITY(0u, ~ (~ (0u))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), (next_virtual_gid) * (((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2u : _GLF_FUZZED(atomicExchange(workgroup_size, subgroup_size))))), uint(2u))) ^ 0u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) * (((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ 0u)), 0u, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) << 0u)), (uvec4(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) * (((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ 0u)), 0u, 0u, 1u)) >> uvec4(0u, 0u, 0u, 0u)))), 1u), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) * (((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ 0u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) * (((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ 0u)), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) * (((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ 0u)), 0u, 0u, 1u)) >> uvec4(0u, 0u, 0u, 0u)))), 1u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) * (((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ 0u), (_GLF_IDENTITY((next_virtual_gid) * (((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ 0u), (true ? (next_virtual_gid) * (((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ 0u) : _GLF_FUZZED(next_virtual_gid)))) | ((next_virtual_gid) * (((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ 0u)))), (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) * (((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, min(_GLF_IDENTITY(2u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((workgroup_id / num_workgroup)) : 2u)), _GLF_IDENTITY(2u, uint(uint(2u))))))), clamp(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) | (0u | (0u ^ 0u))), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, _GLF_IDENTITY((_GLF_IDENTITY(2u, (2u) | (_GLF_IDENTITY(2u, 0u + (2u))))) | (_GLF_IDENTITY(2u, max(_GLF_IDENTITY(2u, (2u) | 0u), 2u))), clamp((_GLF_IDENTITY(2u, (2u) | (_GLF_IDENTITY(2u, 0u + (2u))))) | (_GLF_IDENTITY(2u, max(_GLF_IDENTITY(2u, (2u) | 0u), 2u))), (_GLF_IDENTITY(2u, (2u) | (_GLF_IDENTITY(2u, 0u + (2u))))) | (_GLF_IDENTITY(2u, max(_GLF_IDENTITY(2u, (2u) | 0u), 2u))), _GLF_IDENTITY((_GLF_IDENTITY(2u, (2u) | (_GLF_IDENTITY(2u, 0u + (2u))))) | (_GLF_IDENTITY(2u, max(_GLF_IDENTITY(2u, (2u) | 0u), 2u))), ((_GLF_IDENTITY(2u, (2u) | (_GLF_IDENTITY(2u, 0u + (2u))))) | (_GLF_IDENTITY(2u, max(_GLF_IDENTITY(2u, (2u) | 0u), 2u)))) << 0u))))), uint(2u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, min(_GLF_IDENTITY(2u, (true ? _GLF_IDENTITY(2u, uint(uint(2u))) : _GLF_FUZZED(workgroup_size))), 2u))), uint(2u))))) >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) * (((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ 0u)), _GLF_IDENTITY((true ? _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) * _GLF_IDENTITY((((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u), (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u), 1u * (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(2u), uint(2u))), ((_GLF_IDENTITY(uint(2u), uint(2u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) >> 0u)))) | (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, 0u ^ (2u))) + 0u)), uint(_GLF_IDENTITY(2u, min(2u, 2u))))) ^ 0u), ~ (_GLF_IDENTITY(~ ((((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, max(_GLF_IDENTITY(2u, (2u) | 0u), _GLF_IDENTITY(2u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) + (2u))))), uint(2u))) >> _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u | (0u)), 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) ^ 0u)) >> 0u), 1u * (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)))) | _GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)), clamp((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)))))) >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ 0u)), (~ ((((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u), 1u * (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)))) | (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)), clamp((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u), 1u * (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)))) | (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)), (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u), 1u * (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)))) | (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)), (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u), 1u * (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)))) | (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)))))) >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ 0u))) ^ _GLF_IDENTITY(0u, min(0u, 0u)))))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))), max((true ? _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) * _GLF_IDENTITY((((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u), (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u), 1u * (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(2u), uint(2u))), ((_GLF_IDENTITY(uint(2u), uint(2u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) >> 0u)))) | (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, 0u ^ (2u))) + 0u)), uint(_GLF_IDENTITY(2u, min(2u, 2u))))) ^ 0u), ~ (_GLF_IDENTITY(~ ((((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, max(_GLF_IDENTITY(2u, (2u) | 0u), _GLF_IDENTITY(2u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) + (2u))))), uint(2u))) >> _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u | (0u)), 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) ^ 0u)) >> 0u), 1u * (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)))) | _GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)), clamp((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)))))) >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ 0u)), (~ ((((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u), 1u * (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)))) | (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)), clamp((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u), 1u * (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)))) | (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)), (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u), 1u * (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)))) | (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)), (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u), 1u * (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)))) | (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)))))) >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ 0u))) ^ _GLF_IDENTITY(0u, min(0u, 0u)))))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))), (true ? _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) * _GLF_IDENTITY((((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u), (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u), 1u * (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(2u), uint(2u))), ((_GLF_IDENTITY(uint(2u), uint(2u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) >> 0u)))) | (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, 0u ^ (2u))) + 0u)), uint(_GLF_IDENTITY(2u, min(2u, 2u))))) ^ 0u), ~ (_GLF_IDENTITY(~ ((((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, max(_GLF_IDENTITY(2u, (2u) | 0u), _GLF_IDENTITY(2u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) + (2u))))), uint(2u))) >> _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u | (0u)), 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) ^ 0u)) >> 0u), 1u * (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)))) | _GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)), clamp((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)))))) >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ 0u)), (~ ((((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u), 1u * (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)))) | (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)), clamp((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u), 1u * (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)))) | (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)), (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u), 1u * (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)))) | (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)), (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u), 1u * (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)))) | (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)))))) >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ 0u))) ^ _GLF_IDENTITY(0u, min(0u, 0u)))))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))))))), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) * (((_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, (1u) / 1u), _GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << _GLF_IDENTITY(uint(2u), uint(2u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, (1u) / 1u), _GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(vec2(-157.100, -97.65).x) : 0.0)), injectionSwitch.x))))) << _GLF_IDENTITY(uint(2u), uint(2u)), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, (1u) / 1u), _GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << _GLF_IDENTITY(uint(2u), uint(2u)), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, (1u) / 1u), _GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << _GLF_IDENTITY(uint(2u), uint(2u)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, (1u) / 1u), _GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << _GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, (1u) / 1u), _GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << _GLF_IDENTITY(uint(2u), uint(2u))) / 1u))), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, (1u) / 1u), _GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u ^ (1u)), _GLF_IDENTITY(1u, (1u) / 1u), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) - 0u)))) << _GLF_IDENTITY(uint(2u), uint(2u))))))) >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ _GLF_IDENTITY(0u, (0u) << 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u), (next_virtual_gid) * (((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(_GLF_IDENTITY(2u, (2u) << 0u))) - 0u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, ~ (~ (_GLF_IDENTITY(2u, min(2u, 2u)))))))) ^ 0u)), clamp(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) * (((_GLF_IDENTITY(1u, (1u) / 1u) << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | (2u))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, min(_GLF_IDENTITY((0u) | 0u, ((0u) | 0u) ^ 0u), (0u) | 0u))))))), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) * (((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u), _GLF_IDENTITY((next_virtual_gid), (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))) ^ _GLF_IDENTITY((_GLF_IDENTITY((next_virtual_gid), ~ (_GLF_IDENTITY(~ ((next_virtual_gid)), clamp(~ ((next_virtual_gid)), ~ ((next_virtual_gid)), ~ ((next_virtual_gid))))))), ((_GLF_IDENTITY((next_virtual_gid), ~ (_GLF_IDENTITY(~ ((next_virtual_gid)), _GLF_IDENTITY(clamp(~ ((next_virtual_gid)), ~ ((next_virtual_gid)), ~ ((next_virtual_gid))), 0u + (_GLF_IDENTITY(clamp(~ ((next_virtual_gid)), ~ ((next_virtual_gid)), ~ ((next_virtual_gid))), (_GLF_IDENTITY(clamp(~ ((next_virtual_gid)), ~ ((next_virtual_gid)), ~ ((next_virtual_gid))), max(clamp(~ ((next_virtual_gid)), ~ ((next_virtual_gid)), ~ ((next_virtual_gid))), clamp(~ ((next_virtual_gid)), ~ ((next_virtual_gid)), ~ ((next_virtual_gid)))))) / 1u)))))))) + 0u)) * ((_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), uint(uvec2((1u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), uint(uvec2((1u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) | (2u))))), 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), uint(uvec2((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, 0u ^ (2u))) * 1u)), uint(2u))), 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(2u), 0u ^ (uint(2u))), 1u, 1u), (uvec3(_GLF_IDENTITY(uint(2u), 0u ^ (uint(2u))), 1u, 1u)) | uvec3(0u, 0u, 0u)))), uint(2u))), uint(uvec2((1u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) + 0u)) ^ 0u))))))], uint(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), min((_GLF_IDENTITY(1, clamp(1, 1, 1))), (_GLF_IDENTITY(1, clamp(1, 1, 1))))) << ((1 ^ _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(int(1), 1 * (int(1))), min(_GLF_IDENTITY(int(1), 1 * (int(1))), _GLF_IDENTITY(int(1), 1 * (int(1)))))))))) >> _GLF_IDENTITY(int(8), int(8))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))) && true), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true)))), false || (bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), _GLF_IDENTITY(true, (true) || false))))))))), false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 0, 0, 0), ivec4(0, 0, 0, 0) ^ (ivec4(0, 0, 0, 0)))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1.0))), injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED((- 893.165))), float(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0)))), bool(true))) > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true)) && true)), (bool((injectionSwitch.x > injectionSwitch.y))) || false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)), bool(_GLF_IDENTITY(bool(bool(bvec4((_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-675.257, -4.1)) : injectionSwitch)).x > injectionSwitch.y), false, false, false))), bool(_GLF_IDENTITY(bool(bool(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bool(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)))), true && (bool(bool(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(bool(bool(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)))), true && (bool(bool(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-17.53)), float(injectionSwitch.y), bool(true)))))) || false), (_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(9.7)), float(injectionSwitch.y), bool(true)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(9.7)), float(injectionSwitch.y), bool(true))))) && true)), (bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), ! (! (false || (injectionSwitch.x > injectionSwitch.y)))))))))) || false)) || false)), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)), bool(_GLF_IDENTITY(bool(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))), bool(bool(bool(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)))))))))), (bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-17.53)), float(injectionSwitch.y), bool(true))), mix(float(_GLF_FUZZED(89.69)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-17.53)), float(injectionSwitch.y), bool(true)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false), (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))) || false)) || false)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, max(4, 4)), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), true && (true)))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))), ((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true))))) && true), false, false)))))))
    barrier();
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false), false)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false), false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, _GLF_IDENTITY(false, bool(bvec2(false, false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) || false)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true)))))))))), false)))), false, false, true)))), true && ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false), false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, _GLF_IDENTITY(false, bool(bvec2(false, false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) || false)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true)))))))))), false)))), false, false, true))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.08), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(219.441)), bvec2(true, false)))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, (4) - 0));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), false, true))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false)))), ! (! (! (_GLF_IDENTITY((false), false || ((false)))))))))))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.8)), bool(false))), injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.8)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), injectionSwitch.x)), injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.8)), bool(false))), injectionSwitch.x)), injectionSwitch.x)) : _GLF_IDENTITY(_GLF_FUZZED(-88.75), (_GLF_FUZZED(-88.75)) + 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))), log(1.0))), 1.0 * (float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.8)), bool(false))), injectionSwitch.x)), injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.8)), bool(false))), injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(-0.8)), 0.0 + (float(_GLF_FUZZED(-0.8)))), bool(false))), injectionSwitch.x)), injectionSwitch.x)))), (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(log(injectionSwitch)))).x, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-568.648, -592.535)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, injectionSwitch.x))), _GLF_IDENTITY(float(_GLF_FUZZED(-0.8)), max(_GLF_IDENTITY(float(_GLF_FUZZED(-0.8)), (float(_GLF_FUZZED(-0.8))) + 0.0), _GLF_IDENTITY(float(_GLF_FUZZED(-0.8)), mix(float(float(_GLF_FUZZED(-0.8))), float(_GLF_FUZZED((-148.518 / -597.946))), bool(false))))), bool(false))), injectionSwitch.x)), injectionSwitch.x)) : _GLF_FUZZED(-88.75))), 1.0, 1.0, 1.0, 0.0, 0.0, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))), log(1.0)))))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6696.6596)), vec2(_GLF_FUZZED(-973.098), (injectionSwitch)[1]), bvec2(false, true))).y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)) && true))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec2(-39.95, -45.30).s)), bool(false))), max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, sqrt(0.0), 0.0, abs(1.0), 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), transpose(transpose(_GLF_IDENTITY(mat4(injectionSwitch, sqrt(0.0), 0.0, abs(1.0), 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), (true ? mat4(injectionSwitch, sqrt(0.0), 0.0, abs(1.0), 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0) : _GLF_FUZZED(mat4(0.9, -8502.5148, 6297.5442, 9.9, 945.268, -3.6, 3704.4542, 7.0, 7.4, 31.39, -2.0, -326.976, -8.3, -8989.4165, -3.1, 6.2))))))))).y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), 0.0 + (float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec2(-39.95, -45.30).s)), bool(false))), max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, sqrt(0.0), 0.0, abs(1.0), 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), transpose(transpose(_GLF_IDENTITY(mat4(injectionSwitch, sqrt(0.0), 0.0, abs(1.0), 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), (true ? mat4(injectionSwitch, sqrt(0.0), 0.0, abs(1.0), 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0) : _GLF_FUZZED(mat4(0.9, -8502.5148, 6297.5442, 9.9, 945.268, -3.6, 3704.4542, 7.0, 7.4, 31.39, -2.0, -326.976, -8.3, -8989.4165, -3.1, 6.2))))))))).y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-0.8))), max(injectionSwitch.y, injectionSwitch.y)))) - 0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), min(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)))), injectionSwitch.y)))))))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), max(injectionSwitch.y, injectionSwitch.y)))) - 0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), min(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(886.149)), vec2(_GLF_FUZZED(2.8), (injectionSwitch)[1]), bvec2(false, true))))), injectionSwitch)).y, injectionSwitch.y)))))))), false, true))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), injectionSwitch, injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
}
