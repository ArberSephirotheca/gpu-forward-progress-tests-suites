#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))[0]) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), (false ? _GLF_FUZZED(48.98) : _GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(3162.6287) : (injectionSwitch)[0]))) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), min(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0))))), _GLF_FUZZED(-479.510)), vec2(_GLF_FUZZED(8.3), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))[0]) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), (false ? _GLF_FUZZED(48.98) : _GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(3162.6287) : (injectionSwitch)[0]))) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), min(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0))))), _GLF_FUZZED(-479.510)), vec2(_GLF_FUZZED(8.3), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))[0]) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), (false ? _GLF_FUZZED(48.98) : _GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(3162.6287) : (injectionSwitch)[0]))) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), min(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0))))), _GLF_FUZZED(-479.510)), vec2(_GLF_FUZZED(8.3), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))[0]) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), (false ? _GLF_FUZZED(48.98) : _GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(3162.6287) : (injectionSwitch)[0]))) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), min(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0))))), _GLF_FUZZED(-479.510)), vec2(_GLF_FUZZED(8.3), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y)))))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))[0]) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), (false ? _GLF_FUZZED(48.98) : _GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(3162.6287) : (injectionSwitch)[0]))) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), min(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0))))), _GLF_FUZZED(-479.510)), vec2(_GLF_FUZZED(8.3), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), (bool(bool(bool(false)))) && true))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), (bool(bool(bool(false)))) && true)))), ! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), (bool(bool(bool(false)))) && true))))), false || (! (! (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), (bool(bool(bool(false)))) && true))))))))))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(true, true && (true))))) && (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true && (_GLF_DEAD(false))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), min(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(9158.5680, min(_GLF_IDENTITY(9158.5680, clamp(9158.5680, 9158.5680, 9158.5680)), 9158.5680)))))))), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(sin(-64.16)))) > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), (bool(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)), bool(bool(bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))))))))), bool(bool(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))))))))))))) && true))) && true)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), min(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(9158.5680, min(_GLF_IDENTITY(9158.5680, clamp(9158.5680, 9158.5680, 9158.5680)), 9158.5680)))))))), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(sin(-64.16)))) > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), (bool(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)), bool(bool(bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))))))))), bool(bool(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))))))))))))) && true))) && true))), false || (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 0.0))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 0.0))), float(float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 0.0))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 0.0))))))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(9158.5680, min(_GLF_IDENTITY(9158.5680, clamp(9158.5680, 9158.5680, 9158.5680)), 9158.5680)))))))), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(sin(-64.16)))) > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), (bool(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)), bool(bool(bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))))))))), bool(bool(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))))))))))))) && true))) && true, false || (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(sin(-64.16), max(_GLF_IDENTITY(sin(-64.16), float(float(sin(-64.16)))), sin(-64.16)))))) > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bool(! ((injectionSwitch.x < injectionSwitch.y))))))))))), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)), bool(bool(bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))))))))), _GLF_IDENTITY(bool(bool(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))), false, false, false))))))))))), ! (_GLF_IDENTITY(! (bool(bool(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))), false, false, false)))))))))))), bool(bvec4(! (bool(bool(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))), false, false, false)))))))))))), true, true, false))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)), bool(bool(bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))))))))), _GLF_IDENTITY(bool(bool(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))), false, false, false))))))))))), ! (_GLF_IDENTITY(! (bool(bool(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))), false, false, false)))))))))))), bool(bvec4(! (bool(bool(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))), false, false, false)))))))))))), true, true, false)))))))), false || (! ((_GLF_IDENTITY(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)), bool(bool(bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))))))))), _GLF_IDENTITY(bool(bool(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))), false, false, false))))))))))), ! (_GLF_IDENTITY(! (bool(bool(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))), false, false, false)))))))))))), bool(bvec4(! (bool(bool(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))), false, false, false)))))))))))), true, true, false)))))))))))))), (bool(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)), bool(bool(bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))))))))), _GLF_IDENTITY(bool(bool(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))), false, false, false))))))))))), ! (_GLF_IDENTITY(! (bool(bool(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))), false, false, false)))))))))))), bool(bvec4(! (bool(bool(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))), false, false, false)))))))))))), true, true, false))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)), bool(bool(bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))))))))), _GLF_IDENTITY(bool(bool(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))), false, false, false))))))))))), ! (_GLF_IDENTITY(! (bool(bool(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))), false, false, false)))))))))))), bool(bvec4(! (bool(bool(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))), false, false, false)))))))))))), true, true, false)))))))), false || (! ((_GLF_IDENTITY(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)), bool(bool(bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))))))))), _GLF_IDENTITY(bool(bool(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))), false, false, false))))))))))), ! (_GLF_IDENTITY(! (bool(bool(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))), false, false, false)))))))))))), bool(bvec4(! (bool(bool(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))), false, false, false)))))))))))), true, true, false))))))))))))))) && true)) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true))))))))) && true)))))))))))
      barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))) * vec2(1.0, 1.0))).y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), 1.0)), (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))), 1.0))) + _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0), (vec4(injectionSwitch, 1.0, 0.0)) * mat4(1.0)))).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id)) * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, 0u + _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))) + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(29349, (29349) | (29349)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-47664) : _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(29349)), ((true ? 1 : _GLF_FUZZED(29349))) | (_GLF_IDENTITY((true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(29349), (_GLF_FUZZED(29349)) - 0)), _GLF_IDENTITY(min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349))), (min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))) | 0)))), (false ? _GLF_FUZZED(-47664) : _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(29349)), ((true ? 1 : _GLF_FUZZED(29349))) | (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(29349, (29349) >> 0))), _GLF_IDENTITY(min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349))), _GLF_IDENTITY((min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))), clamp((min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))), (min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))), (min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))))), _GLF_IDENTITY(0, (0) | (0))), ~ (~ (ivec2(_GLF_IDENTITY((min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))), clamp((min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))), (min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))), (min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))))), _GLF_IDENTITY(0, (0) | (0)))))))) | 0))))) >> (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) / 1)), max(int(_GLF_IDENTITY(8, (8) / 1)), int(_GLF_IDENTITY(8, (8) / 1)))))))))), max(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (1) ^ 0))), ~ (_GLF_IDENTITY(~ (int(int(_GLF_IDENTITY(1, (1) ^ 0)))), ~ _GLF_IDENTITY((~ (~ (int(int(_GLF_IDENTITY(1, (1) ^ 0)))))), ((~ (~ (int(int(_GLF_IDENTITY(1, (1) ^ 0))))))) - 0))))), 1))), max(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(29349, (29349) | (29349)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-47664) : _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(29349)), ((true ? 1 : _GLF_FUZZED(29349))) | (_GLF_IDENTITY((true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(29349), (_GLF_FUZZED(29349)) - 0)), _GLF_IDENTITY(min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349))), (min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))) | 0)))), (false ? _GLF_FUZZED(-47664) : _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(29349)), ((true ? 1 : _GLF_FUZZED(29349))) | (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(29349, (29349) >> 0))), _GLF_IDENTITY(min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349))), _GLF_IDENTITY((min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))), clamp((min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))), (min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))), (min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))))), _GLF_IDENTITY(0, (0) | (0))), ~ (~ (ivec2(_GLF_IDENTITY((min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))), clamp((min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))), (min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))), (min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))))), _GLF_IDENTITY(0, (0) | (0)))))))) | 0))))) >> (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) / 1)), max(int(_GLF_IDENTITY(8, (8) / 1)), int(_GLF_IDENTITY(8, (8) / 1)))))))))), max(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (1) ^ 0))), ~ (_GLF_IDENTITY(~ (int(int(_GLF_IDENTITY(1, (1) ^ 0)))), ~ _GLF_IDENTITY((~ (~ (int(int(_GLF_IDENTITY(1, (1) ^ 0)))))), ((~ (~ (int(int(_GLF_IDENTITY(1, (1) ^ 0))))))) - 0))))), 1))), ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(29349, (29349) | (29349)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-47664) : _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(29349)), ((true ? 1 : _GLF_FUZZED(29349))) | (_GLF_IDENTITY((true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(29349), (_GLF_FUZZED(29349)) - 0)), _GLF_IDENTITY(min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349))), (min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))) | 0)))), (false ? _GLF_FUZZED(-47664) : _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(29349)), ((true ? 1 : _GLF_FUZZED(29349))) | (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(29349, (29349) >> 0))), _GLF_IDENTITY(min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349))), _GLF_IDENTITY((min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))), clamp((min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))), (min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))), (min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))))), _GLF_IDENTITY(0, (0) | (0))), ~ (~ (ivec2(_GLF_IDENTITY((min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))), clamp((min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))), (min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))), (min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))))), _GLF_IDENTITY(0, (0) | (0)))))))) | 0))))) >> (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) / 1)), max(int(_GLF_IDENTITY(8, (8) / 1)), int(_GLF_IDENTITY(8, (8) / 1)))))))))), max(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (1) ^ 0))), ~ (_GLF_IDENTITY(~ (int(int(_GLF_IDENTITY(1, (1) ^ 0)))), ~ _GLF_IDENTITY((~ (~ (int(int(_GLF_IDENTITY(1, (1) ^ 0)))))), ((~ (~ (int(int(_GLF_IDENTITY(1, (1) ^ 0))))))) - 0))))), 1)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(29349, (29349) | (29349)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-47664) : _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(29349)), ((true ? 1 : _GLF_FUZZED(29349))) | (_GLF_IDENTITY((true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(29349), (_GLF_FUZZED(29349)) - 0)), _GLF_IDENTITY(min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349))), (min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))) | 0)))), (false ? _GLF_FUZZED(-47664) : _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(29349)), ((true ? 1 : _GLF_FUZZED(29349))) | (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(29349, (29349) >> 0))), _GLF_IDENTITY(min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349))), _GLF_IDENTITY((min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))), clamp((min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))), (min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))), (min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))))), _GLF_IDENTITY(0, (0) | (0))), ~ (~ (ivec2(_GLF_IDENTITY((min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))), clamp((min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))), (min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))), (min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))))), _GLF_IDENTITY(0, (0) | (0)))))))) | 0))))) >> (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) / 1)), max(int(_GLF_IDENTITY(8, (8) / 1)), int(_GLF_IDENTITY(8, (8) / 1)))))))))), max(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (1) ^ 0))), ~ (_GLF_IDENTITY(~ (int(int(_GLF_IDENTITY(1, (1) ^ 0)))), ~ _GLF_IDENTITY((~ (~ (int(int(_GLF_IDENTITY(1, (1) ^ 0)))))), ((~ (~ (int(int(_GLF_IDENTITY(1, (1) ^ 0))))))) - 0))))), 1))), ~ (~ ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(29349, (29349) | (29349)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-47664) : _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(29349)), ((true ? 1 : _GLF_FUZZED(29349))) | (_GLF_IDENTITY((true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(29349), (_GLF_FUZZED(29349)) - 0)), _GLF_IDENTITY(min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349))), (min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))) | 0)))), (false ? _GLF_FUZZED(-47664) : _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(29349)), ((true ? 1 : _GLF_FUZZED(29349))) | (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(29349, (29349) >> 0))), _GLF_IDENTITY(min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349))), _GLF_IDENTITY((min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))), clamp((min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))), (min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))), (min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))))), _GLF_IDENTITY(0, (0) | (0))), ~ (~ (ivec2(_GLF_IDENTITY((min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))), clamp((min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))), (min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))), (min((true ? 1 : _GLF_FUZZED(29349)), (true ? 1 : _GLF_FUZZED(29349)))))), _GLF_IDENTITY(0, (0) | (0)))))))) | 0))))) >> (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) / 1)), max(int(_GLF_IDENTITY(8, (8) / 1)), int(_GLF_IDENTITY(8, (8) / 1)))))))))), max(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (1) ^ 0))), ~ (_GLF_IDENTITY(~ (int(int(_GLF_IDENTITY(1, (1) ^ 0)))), ~ _GLF_IDENTITY((~ (~ (int(int(_GLF_IDENTITY(1, (1) ^ 0)))))), ((~ (~ (int(int(_GLF_IDENTITY(1, (1) ^ 0))))))) - 0))))), 1)))))))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || (injectionSwitch.x > injectionSwitch.y))))) && true), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), bool(bvec4(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), true, true, true))))))))), (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))) && true)) && true)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) + (139725u & 0u))], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   subgroupAll(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), true && (! (false))))))));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))).x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, exp(0.0), 1.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), cos(0.0), 1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0)))) - vec2(0.0, 0.0)))) / vec2(1.0, 1.0))).x > injectionSwitch.y)), (bool(bool(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, log(1.0), length(determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), cos(0.0), 0.0, 1.0, sin(length(vec2(0.0, 0.0))))), 0.0 + (float(mat3x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, log(1.0), length(determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), cos(0.0), 0.0, 1.0, sin(length(vec2(0.0, 0.0))))))))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), min(injectionSwitch, injectionSwitch)).y))) && true))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))).x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))).x > injectionSwitch.y)), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))).x > injectionSwitch.y))) && true))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))).x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))).x > injectionSwitch.y)), (bool(bool(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))).x > injectionSwitch.y))) && true)))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))).x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))) * determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))).x > injectionSwitch.y)), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))).x > injectionSwitch.y) && true)))) && true)))))))))), false, true))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))))], read, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 | (4))) ^ 0), 4)), 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, _GLF_IDENTITY(true, true && (true))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((+ 9.8))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false || ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), false, false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false || ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), false, false)), true, false)))) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true)), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), true, true, false)))))) && true))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)), mix(vec2(_GLF_FUZZED(-686.085), _GLF_FUZZED(-5.8)), vec2((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) << 0), 0, 0)))))], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-686.085), _GLF_FUZZED(-5.8)), vec2((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) << 0), 0, 0)))))], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-686.085), _GLF_FUZZED(-5.8)), vec2((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) << 0), 0, 0)))))], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))) || false), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))) || false) && true)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-686.085), _GLF_FUZZED(-5.8)), vec2((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, _GLF_IDENTITY((0) << 0, clamp((0) << 0, (0) << 0, (0) << 0))), 0, 0)))))], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), clamp(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))), injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))) || false) && true)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-686.085), _GLF_FUZZED(-5.8)), vec2((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, _GLF_IDENTITY((0) << 0, clamp((0) << 0, (0) << 0, (0) << 0))), 0, 0)))))], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), clamp(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))), injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))), false)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), false, false, true))), true, false))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((length(vec3(9.8, 77.54, 6111.8023)) + injectionSwitch)))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-83.63)), bool(false))))), ! _GLF_IDENTITY((! (((injectionSwitch.x > injectionSwitch.y)))), ! (! ((! (((injectionSwitch.x > injectionSwitch.y))))))))), bool(bool((_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-83.63)), bool(false))))), ! _GLF_IDENTITY((! (((injectionSwitch.x > injectionSwitch.y)))), ! (! ((! (((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.1), _GLF_FUZZED(2.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))))))))))))), bool(bvec3((! _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))))), false, true)), false || (bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))))), false, true)))))), true, false))))) || false), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), false, false, true))), true, false))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((length(vec3(9.8, 77.54, 6111.8023)) + injectionSwitch)))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-83.63)), bool(false))))), ! _GLF_IDENTITY((! (((injectionSwitch.x > injectionSwitch.y)))), ! (! ((! (((injectionSwitch.x > injectionSwitch.y))))))))), bool(bool((_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-83.63)), bool(false))))), ! _GLF_IDENTITY((! (((injectionSwitch.x > injectionSwitch.y)))), ! (! ((! (((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.1), _GLF_FUZZED(2.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))))))))))))), bool(bvec3((! _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))))), false, true)), false || (bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))))), false, true)))))), true, false))))) || false), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), false, false, true))), true, false))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((length(vec3(9.8, 77.54, 6111.8023)) + injectionSwitch)))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-83.63)), bool(false))))), ! _GLF_IDENTITY((! (((injectionSwitch.x > injectionSwitch.y)))), ! (! ((! (((injectionSwitch.x > injectionSwitch.y))))))))), bool(bool((_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-83.63)), bool(false))))), ! _GLF_IDENTITY((! (((injectionSwitch.x > injectionSwitch.y)))), ! (! ((! (((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.1), _GLF_FUZZED(2.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))))))))))))), bool(bvec3((! _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))))), false, true)), false || (bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))))), false, true)))))), true, false))))) || false), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)), true))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), false, false, true))), true, false))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((length(vec3(9.8, 77.54, 6111.8023)) + injectionSwitch)))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-83.63)), bool(false))))), ! _GLF_IDENTITY((! (((injectionSwitch.x > injectionSwitch.y)))), ! (! ((! (((injectionSwitch.x > injectionSwitch.y))))))))), bool(bool((_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-83.63)), bool(false))))), ! _GLF_IDENTITY((! (((injectionSwitch.x > injectionSwitch.y)))), ! (! ((! (((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.1), _GLF_FUZZED(2.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))))))))))))), bool(bvec3((! _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))))), false, true)), false || (bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))))), false, true)))))), true, false))))) || false), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)), true)))))))))))))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))), (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
      return;
     barrier();
    }
   subgroupAll(true);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
}
