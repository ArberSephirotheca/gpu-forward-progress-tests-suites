#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))) - 0u) * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (0u | 0u), 1u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (0u | 0u), 1u), (false ? _GLF_FUZZED(uvec3(41776u, 171125u, 10144u)) : uvec3(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (0u | 0u), 1u)))) | uvec3(0u, 0u, 0u))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (subgroup_local_id + 1))) % subgroup_size);
 for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     do
      {
       do
        {
         atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false)))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(atanh(3.4)))) > injectionSwitch.y)))))))
    {
    }
   else
    {
     if(subgroup_local_id + 1 < subgroup_size)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 atomicStore(checker[virtual_gid], read, 4, 64, 4);
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
        }
       else
        {
        }
       for(int _injected_loop_counter = _GLF_IDENTITY(0, int(ivec2(0, 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   subgroupAll(false);
                  }
                 else
                  {
                  }
                }
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
        }
      }
     else
      {
       do
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, 0 ^ (1))); _GLF_IDENTITY(_injected_loop_counter ++, ~ (_GLF_IDENTITY(~ (_injected_loop_counter ++), ~ (~ (~ (_injected_loop_counter ++)))))))
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               switch(_GLF_SWITCH((_GLF_IDENTITY((1 ^ 1) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(min(6, _GLF_IDENTITY(6, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(6, 1, 1), min(ivec3(6, 1, 1), ivec3(6, _GLF_IDENTITY(1, (1) >> 0), 1)))), clamp(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(6, 1, 1), _GLF_IDENTITY(min(ivec3(6, 1, 1), ivec3(6, 1, 1)), (min(ivec3(6, 1, 1), ivec3(6, 1, 1))) >> ivec3(0, 0, 0))), _GLF_IDENTITY(ivec3(ivec3(_GLF_IDENTITY(ivec3(6, 1, 1), min(ivec3(6, 1, 1), ivec3(6, 1, 1))))), clamp(ivec3(ivec3(_GLF_IDENTITY(ivec3(6, 1, 1), min(ivec3(6, 1, _GLF_IDENTITY(1, (1) + 0)), ivec3(6, _GLF_IDENTITY(1, (1) ^ (-43650 & 0)), 1))))), _GLF_IDENTITY(ivec3(ivec3(_GLF_IDENTITY(ivec3(6, 1, 1), min(ivec3(6, 1, 1), _GLF_IDENTITY(ivec3(6, 1, 1), min(_GLF_IDENTITY(ivec3(6, 1, 1), ~ (~ (ivec3(6, 1, 1)))), ivec3(6, 1, 1))))))), ivec3(0, 0, 0) + (ivec3(ivec3(_GLF_IDENTITY(ivec3(6, 1, 1), min(ivec3(6, 1, 1), ivec3(6, 1, 1))))))), ivec3(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(6, 1, 1), min(ivec3(6, 1, 1), ivec3(6, 1, 1))), (ivec3(_GLF_IDENTITY(6, (6) * 1), 1, 1)) | (_GLF_IDENTITY(ivec3(6, 1, 1), (ivec3(6, 1, 1)) | ivec3(0, 0, 0)))), min(ivec3(6, 1, 1), ivec3(6, 1, 1))))))))), int(_GLF_IDENTITY(ivec3(6, 1, 1), min(ivec3(6, 1, 1), ivec3(6, 1, 1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(6, clamp(6, 6, _GLF_IDENTITY(6, (6) >> 0))), 1, 1), min(ivec3(6, 1, 1), ivec3(6, 1, 1)))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(6, clamp(6, 6, _GLF_IDENTITY(6, (6) >> 0))), 1, 1), min(ivec3(6, 1, 1), ivec3(6, 1, 1))))) - 0))))), (min(6, _GLF_IDENTITY(6, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(6, 1, 1), min(ivec3(6, 1, 1), ivec3(6, _GLF_IDENTITY(1, (1) >> 0), 1)))), clamp(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(6, 1, 1), _GLF_IDENTITY(min(ivec3(6, 1, 1), ivec3(6, 1, 1)), (min(ivec3(6, 1, 1), ivec3(6, 1, 1))) >> ivec3(0, 0, 0))), _GLF_IDENTITY(ivec3(ivec3(_GLF_IDENTITY(ivec3(6, 1, 1), min(ivec3(6, 1, 1), ivec3(6, 1, 1))))), clamp(ivec3(ivec3(_GLF_IDENTITY(ivec3(6, 1, 1), min(ivec3(6, 1, _GLF_IDENTITY(1, (1) + 0)), ivec3(6, _GLF_IDENTITY(1, (1) ^ (-43650 & 0)), 1))))), _GLF_IDENTITY(ivec3(ivec3(_GLF_IDENTITY(ivec3(6, 1, 1), min(ivec3(6, 1, 1), _GLF_IDENTITY(ivec3(6, 1, 1), min(_GLF_IDENTITY(ivec3(6, 1, 1), ~ (~ (ivec3(6, 1, 1)))), ivec3(6, 1, 1))))))), ivec3(0, 0, 0) + (ivec3(ivec3(_GLF_IDENTITY(ivec3(6, 1, 1), min(ivec3(6, 1, 1), ivec3(6, 1, 1))))))), ivec3(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(6, 1, 1), min(ivec3(6, 1, 1), ivec3(6, 1, 1))), (ivec3(_GLF_IDENTITY(6, (6) * 1), 1, 1)) | (_GLF_IDENTITY(ivec3(6, 1, 1), (ivec3(6, 1, 1)) | ivec3(0, 0, 0)))), min(ivec3(6, 1, 1), ivec3(6, 1, 1))))))))), int(_GLF_IDENTITY(ivec3(6, 1, 1), min(ivec3(6, 1, 1), ivec3(6, 1, 1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(6, clamp(6, 6, _GLF_IDENTITY(6, (6) >> 0))), 1, 1), min(ivec3(6, 1, 1), ivec3(6, 1, 1)))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(6, clamp(6, 6, _GLF_IDENTITY(6, (6) >> 0))), 1, 1), min(ivec3(6, 1, 1), ivec3(6, 1, 1))))) - 0)))))) >> 0))), int(6)), (_GLF_IDENTITY(int(6), int(6))) >> 0), _GLF_IDENTITY(clamp((1 ^ 1) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, 0 | (6))), int(6)), (_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, 0 + (_GLF_IDENTITY(6, ~ (~ (_GLF_IDENTITY(6, (false ? _GLF_FUZZED(-62905) : 6)))))))))) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) ^ 0)) << 0)), (1 ^ 1) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(clamp(6, 6, _GLF_IDENTITY(6, (6) << 0)), clamp(clamp(6, 6, _GLF_IDENTITY(6, (6) << 0)), clamp(6, 6, _GLF_IDENTITY(6, (6) << 0)), clamp(6, 6, _GLF_IDENTITY(6, (6) << 0)))), int(ivec2(clamp(6, 6, _GLF_IDENTITY(6, (6) << 0)), (0 | 0)))))), int(6))) >> 0), (1 ^ 1) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(int(6), int(6))) >> 0)), int(ivec2(clamp((1 ^ 1) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, 0 + (_GLF_IDENTITY(6, ~ (~ (6)))))))) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) ^ 0)) << 0)), (1 ^ 1) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(clamp(6, 6, _GLF_IDENTITY(6, (6) << 0)), int(ivec2(clamp(6, 6, _GLF_IDENTITY(6, (6) << 0)), (0 | 0)))))), int(6))) >> 0), (1 ^ 1) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(int(6), int(6))) >> 0)), 0)))))))
                {
                 case 59:
                 mat3 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v[20];
                 case 0:
                 atomicStore(checker[virtual_gid], read, 4, 64, 4);
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   subgroupAll(_GLF_IDENTITY(true, true && (true)));
                  }
                 break;
                 case 46:
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = ((43567 & int(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                      {
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                        {
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((true ? _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 | (0)))) : _GLF_FUZZED(_GLF_IDENTITY(65304, (_GLF_IDENTITY(65304, (65304) ^ 0)) + int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)))), float(_GLF_FUZZED(-7.8)), bool(false))), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))), _GLF_ZERO(0.0, injectionSwitch.x))))))), (false ? _GLF_FUZZED(41718) : _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 | (0)))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(65304, _GLF_IDENTITY((_GLF_IDENTITY(65304, _GLF_IDENTITY((65304) ^ 0, int(ivec3((65304) ^ 0, 1, (0 ^ 0)))))), 0 ^ ((_GLF_IDENTITY(65304, _GLF_IDENTITY((65304) ^ 0, int(ivec3((65304) ^ 0, 1, (0 ^ 0)))))))) + int(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(65304, _GLF_IDENTITY((_GLF_IDENTITY(65304, _GLF_IDENTITY((65304) ^ 0, int(ivec3((65304) ^ 0, 1, (0 ^ 0)))))), 0 ^ ((_GLF_IDENTITY(65304, _GLF_IDENTITY((65304) ^ 0, int(ivec3((65304) ^ 0, 1, (0 ^ 0)))))))) + int(_GLF_ZERO(0.0, injectionSwitch.x)))), min(_GLF_FUZZED(_GLF_IDENTITY(65304, _GLF_IDENTITY((_GLF_IDENTITY(65304, _GLF_IDENTITY((65304) ^ 0, int(ivec3((65304) ^ 0, 1, (0 ^ 0)))))), 0 ^ ((_GLF_IDENTITY(65304, _GLF_IDENTITY((65304) ^ 0, int(ivec3((65304) ^ 0, 1, (0 ^ 0)))))))) + int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_FUZZED(_GLF_IDENTITY(65304, _GLF_IDENTITY((_GLF_IDENTITY(65304, _GLF_IDENTITY((65304) ^ 0, int(ivec3((65304) ^ 0, 1, (0 ^ 0)))))), 0 ^ ((_GLF_IDENTITY(65304, _GLF_IDENTITY((65304) ^ 0, int(ivec3((65304) ^ 0, 1, (0 ^ 0)))))))) + int(_GLF_ZERO(0.0, injectionSwitch.x))))))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 | (0)))) : _GLF_FUZZED(_GLF_IDENTITY(65304, _GLF_IDENTITY((_GLF_IDENTITY(65304, _GLF_IDENTITY((65304) ^ 0, int(ivec3((65304) ^ 0, 1, (0 ^ 0)))))), 0 ^ ((_GLF_IDENTITY(65304, _GLF_IDENTITY((65304) ^ 0, int(ivec3((65304) ^ 0, 1, (_GLF_IDENTITY(0, ~ (~ (0))) ^ 0)))))))) + int(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(true ? _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 | (0)))) : _GLF_FUZZED(_GLF_IDENTITY(65304, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(65304, _GLF_IDENTITY((65304) ^ 0, int(ivec3((65304) ^ 0, 1, (0 ^ 0))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(65304, _GLF_IDENTITY((65304) ^ 0, int(ivec3((65304) ^ 0, 1, (0 ^ 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(65304, _GLF_IDENTITY((65304) ^ 0, int(ivec3((65304) ^ 0, 1, (0 ^ 0))))), ~ (~ (_GLF_IDENTITY(65304, _GLF_IDENTITY((65304) ^ 0, int(ivec3((65304) ^ 0, 1, (0 ^ 0))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(65304, _GLF_IDENTITY((65304) ^ 0, int(ivec3((65304) ^ 0, 1, (0 ^ 0))))), int(int(_GLF_IDENTITY(65304, _GLF_IDENTITY((65304) ^ 0, int(ivec3((65304) ^ 0, 1, (0 ^ 0)))))))))) : _GLF_FUZZED(_injected_loop_counter)))), 0 ^ ((_GLF_IDENTITY(65304, _GLF_IDENTITY((65304) ^ 0, int(ivec3((65304) ^ 0, 1, _GLF_IDENTITY((0 ^ 0), (_GLF_IDENTITY((0 ^ 0), int(ivec3((0 ^ 0), 1, 1)))) | ((0 ^ 0)))))))))) + int(_GLF_ZERO(0.0, injectionSwitch.x)))), true ? _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 | (0)))) : _GLF_FUZZED(_GLF_IDENTITY(65304, _GLF_IDENTITY((_GLF_IDENTITY(65304, _GLF_IDENTITY((65304) ^ 0, int(ivec3((65304) ^ 0, 1, (0 ^ 0)))))), 0 ^ ((_GLF_IDENTITY(65304, _GLF_IDENTITY((65304) ^ 0, int(ivec3(_GLF_IDENTITY((65304) ^ 0, (0 << _GLF_IDENTITY(int(0), int(0))) ^ ((65304) ^ 0)), 1, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(int(0))), 0)) ^ 0)))))))) + int(_GLF_ZERO(0.0, injectionSwitch.x)))), true ? _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 | (0)))) : _GLF_FUZZED(_GLF_IDENTITY(65304, _GLF_IDENTITY((_GLF_IDENTITY(65304, _GLF_IDENTITY((65304) ^ 0, int(ivec3((65304) ^ 0, 1, (0 ^ 0)))))), 0 ^ ((_GLF_IDENTITY(65304, _GLF_IDENTITY((65304) ^ 0, int(ivec3((65304) ^ 0, _GLF_IDENTITY(1, (1) - 0), (0 ^ 0)))))))) + int(_GLF_ZERO(0.0, injectionSwitch.x))))))) | 0)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(_injected_loop_counter))), 0 | (0)))) : _GLF_FUZZED(_GLF_IDENTITY(65304, (_GLF_IDENTITY(_GLF_IDENTITY(65304, int(int(_GLF_IDENTITY(65304, (65304) / 1)))), (65304) ^ 0)) + int(_GLF_ZERO(0.0, injectionSwitch.x))))), int(ivec2((true ? _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 | (0)))) : _GLF_FUZZED(_GLF_IDENTITY(65304, (_GLF_IDENTITY(65304, _GLF_IDENTITY((65304) ^ 0, 0 ^ ((65304) ^ 0)))) + int(_GLF_ZERO(0.0, injectionSwitch.x))))), 0)))) | ((true ? _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 | (0)))) : _GLF_FUZZED(_GLF_IDENTITY(65304, (_GLF_IDENTITY(65304, (65304) ^ 0)) + int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), ~ (_GLF_IDENTITY(~ (0), _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(_injected_loop_counter) : ~ (0)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) ? (false ? _GLF_FUZZED(_injected_loop_counter) : ~ (_GLF_IDENTITY(0, max(0, 0)))) : _GLF_FUZZED(_injected_loop_counter)))))), ! (! (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), ~ (_GLF_IDENTITY(~ (max(0, 0)), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (max(0, 0)), 0 | (~ (max(0, 0)))), _GLF_IDENTITY(~ (max(0, 0)), clamp(~ (max(0, 0)), ~ (max(0, 0)), ~ (max(0, 0))))), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(~ (max(0, 0)), 0 | (~ (max(0, 0)))), _GLF_IDENTITY(~ (max(0, 0)), clamp(~ (max(0, 0)), ~ (max(0, 0)), ~ (max(0, 0))))), ~ (~ (max(_GLF_IDENTITY(~ (max(0, 0)), 0 | (~ (max(0, 0)))), _GLF_IDENTITY(_GLF_IDENTITY(~ (max(0, 0)), clamp(~ (max(0, 0)), ~ (max(0, 0)), ~ (max(0, 0)))), clamp(_GLF_IDENTITY(~ (max(0, 0)), (~ (max(0, 0))) - (0 << _GLF_IDENTITY(int(6), int(6)))), ~ (max(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, int(ivec3(0, 0, 0))))), 0)), ~ (max(0, 0)))))))), max(_GLF_IDENTITY(~ (max(0, 0)), 0 | (~ (max(0, 0)))), _GLF_IDENTITY(~ (max(0, 0)), clamp(~ (max(0, 0)), ~ (max(0, 0)), ~ (max(0, 0))))), max(_GLF_IDENTITY(~ (max(0, 0)), 0 | (~ (max(0, 0)))), _GLF_IDENTITY(~ (max(0, 0)), clamp(~ (max(0, 0)), ~ (max(0, 0)), ~ (_GLF_IDENTITY(max(0, 0), clamp(max(0, 0), max(0, 0), max(0, 0))))))))))))) : _GLF_FUZZED(65304))), ~ (~ (0))), (_injected_loop_counter > _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (max(0, 0)), min(~ (max(0, 0)), _GLF_IDENTITY(~ (max(0, 0)), (~ (max(0, 0))) | 0))), max(_GLF_IDENTITY(~ (max(0, 0)), 0 | (~ (max(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)) - 0))), _GLF_IDENTITY(0, ~ (~ (0))))))), _GLF_IDENTITY(~ (max(0, 0)), _GLF_IDENTITY(clamp(~ _GLF_IDENTITY((max(0, 0)), int(int((max(0, 0))))), ~ (max(0, 0)), _GLF_IDENTITY(~ (max(0, _GLF_IDENTITY(0, min(0, 0)))), int(ivec3(~ (max(0, 0)), 0, 1)))), _GLF_IDENTITY((_GLF_IDENTITY(clamp(~ _GLF_IDENTITY(_GLF_IDENTITY((max(0, 0)), min(_GLF_IDENTITY((max(0, 0)), max((max(0, 0)), (max(0, 0)))), _GLF_IDENTITY((max(0, 0)), (0 << _GLF_IDENTITY(int(6), int(6))) ^ (_GLF_IDENTITY((max(0, 0)), ((max(0, 0))) << 0))))), int(int((max(0, 0))))), ~ (max(0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(~ (max(0, 0)), int(ivec3(~ (max(0, 0)), 0, 1))), (_GLF_IDENTITY(~ (max(0, 0)), int(ivec3(~ (max(0, 0)), 0, 1)))) | (_GLF_IDENTITY(~ (max(0, 0)), int(ivec3(~ (max(0, 0)), 0, 1)))))), (clamp(~ _GLF_IDENTITY((max(0, 0)), int(int((max(0, 0))))), ~ (max(0, 0)), _GLF_IDENTITY(~ (max(0, 0)), int(ivec3(~ (max(0, 0)), 0, 1))))) / 1)), clamp((_GLF_IDENTITY(clamp(~ _GLF_IDENTITY(_GLF_IDENTITY((max(0, 0)), min(_GLF_IDENTITY((max(0, 0)), max((max(0, 0)), (max(0, 0)))), _GLF_IDENTITY((max(0, 0)), (0 << _GLF_IDENTITY(int(6), int(6))) ^ (_GLF_IDENTITY((max(0, 0)), ((max(0, 0))) << 0))))), int(int((max(0, 0))))), ~ (max(0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(~ (max(0, 0)), int(ivec3(~ (max(0, 0)), 0, 1))), (_GLF_IDENTITY(~ (max(0, 0)), int(ivec3(~ (max(0, 0)), 0, 1)))) | (_GLF_IDENTITY(~ (max(0, 0)), int(ivec3(~ (max(0, 0)), 0, 1)))))), (clamp(~ _GLF_IDENTITY((max(0, 0)), int(int((max(0, 0))))), ~ (max(0, 0)), _GLF_IDENTITY(~ (max(0, 0)), int(ivec3(~ (max(0, 0)), 0, 1))))) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(clamp(~ _GLF_IDENTITY(_GLF_IDENTITY((max(0, 0)), min(_GLF_IDENTITY((max(0, 0)), max((max(0, 0)), (max(0, 0)))), _GLF_IDENTITY((max(0, 0)), (0 << _GLF_IDENTITY(int(6), int(6))) ^ (_GLF_IDENTITY((max(0, 0)), ((max(0, 0))) << 0))))), int(int((max(0, 0))))), ~ (max(0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(~ (max(0, 0)), int(ivec3(~ (max(0, 0)), 0, 1))), (_GLF_IDENTITY(~ (max(0, 0)), int(ivec3(~ (max(0, 0)), 0, 1)))) | (_GLF_IDENTITY(~ (max(0, 0)), int(ivec3(~ (max(0, 0)), 0, 1)))))), (clamp(~ _GLF_IDENTITY((max(0, 0)), int(int((max(0, 0))))), ~ (max(0, 0)), _GLF_IDENTITY(~ (max(0, 0)), int(ivec3(~ (max(0, 0)), 0, 1))))) / 1)), ((_GLF_IDENTITY(clamp(~ _GLF_IDENTITY(_GLF_IDENTITY((max(0, 0)), min(_GLF_IDENTITY((max(0, 0)), max((max(0, 0)), (max(0, 0)))), _GLF_IDENTITY((max(0, 0)), (0 << _GLF_IDENTITY(int(6), int(6))) ^ (_GLF_IDENTITY((max(0, 0)), ((max(0, 0))) << 0))))), int(int((max(0, 0))))), ~ (max(0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(~ (max(0, 0)), int(ivec3(~ (max(0, 0)), 0, 1))), (_GLF_IDENTITY(~ (max(0, 0)), int(ivec3(~ (max(0, 0)), 0, 1)))) | (_GLF_IDENTITY(~ (max(0, 0)), int(ivec3(~ (max(0, 0)), 0, 1)))))), (clamp(~ _GLF_IDENTITY((max(0, 0)), int(int((max(0, 0))))), ~ (max(0, 0)), _GLF_IDENTITY(~ (max(0, 0)), int(ivec3(~ (max(0, 0)), 0, 1))))) / 1))) / 1), (_GLF_IDENTITY(clamp(~ _GLF_IDENTITY(_GLF_IDENTITY((max(0, 0)), min(_GLF_IDENTITY((max(0, 0)), max((max(0, 0)), (max(0, 0)))), _GLF_IDENTITY((max(0, 0)), (0 << _GLF_IDENTITY(int(6), int(6))) ^ (_GLF_IDENTITY((max(0, 0)), ((max(0, 0))) << 0))))), int(int((max(0, 0))))), ~ (max(0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(~ (max(0, 0)), int(ivec3(~ (max(0, 0)), 0, 1))), (_GLF_IDENTITY(~ (max(0, 0)), int(ivec3(~ (max(0, 0)), 0, 1)))) | (_GLF_IDENTITY(~ (max(0, 0)), int(ivec3(~ (max(0, 0)), 0, 1)))))), (clamp(~ _GLF_IDENTITY((max(0, 0)), int(int((max(0, 0))))), ~ (max(0, 0)), _GLF_IDENTITY(~ (max(0, 0)), int(ivec3(~ (max(0, 0)), 0, 1))))) / 1)))) << 0))))))) : _GLF_FUZZED(65304))), ~ (_GLF_IDENTITY(~ (0), clamp(_GLF_IDENTITY(~ (0), max(~ (0), ~ _GLF_IDENTITY((0), clamp((0), (0), _GLF_IDENTITY((0), ((0)) - 0))))), ~ (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) ^ 0))))), _GLF_IDENTITY(~ (0), (_GLF_IDENTITY(~ (0), 0 | (~ (0)))) | 0)))))) && true))))); _injected_loop_counter --)
                          {
                           do
                            {
                             do
                              {
                               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5)))) ^ 0)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5)))) ^ 0)), (_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5)))) ^ 0))) ^ 0)) / 1))); _injected_loop_counter --)
                                {
                                 for(mat2x3 _GLF_SWITCH_0_2v; _GLF_IDENTITY(true, (true) || false); _GLF_IDENTITY(ivec4(-61399, _GLF_IDENTITY(-89742, _GLF_IDENTITY((-89742) | _GLF_IDENTITY((-89742), clamp((-89742), (_GLF_IDENTITY(-89742, min(-89742, -89742))), (-89742))), _GLF_IDENTITY((_GLF_IDENTITY((-89742) | _GLF_IDENTITY((-89742), _GLF_IDENTITY(~ (~ ((-89742))), (0 & _GLF_IDENTITY(-92238, ~ (~ (-92238)))) ^ (_GLF_IDENTITY(~ (~ ((-89742))), clamp(~ (~ ((-89742))), _GLF_IDENTITY(~ (~ ((-89742))), int(ivec4(~ (~ ((-89742))), 1, 1, 0))), ~ (~ ((-89742)))))))), 0 ^ ((_GLF_IDENTITY(-89742, (_GLF_IDENTITY(-89742, int(int(-89742)))) / 1)) | (-89742)))), ((_GLF_IDENTITY((-89742) | _GLF_IDENTITY((-89742), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ ((-89742))), (0 & -92238) ^ (_GLF_IDENTITY(~ (~ ((-89742))), clamp(~ (~ ((-89742))), _GLF_IDENTITY(~ (~ ((-89742))), int(ivec4(~ (~ ((-89742))), 1, 1, 0))), ~ (~ ((-89742))))))), clamp(_GLF_IDENTITY(~ (~ ((-89742))), (0 & -92238) ^ (_GLF_IDENTITY(~ (~ ((-89742))), clamp(~ (~ ((-89742))), _GLF_IDENTITY(~ (~ ((-89742))), int(ivec4(~ (~ ((-89742))), 1, 1, 0))), ~ (~ ((-89742))))))), _GLF_IDENTITY(~ (~ ((-89742))), (0 & -92238) ^ (_GLF_IDENTITY(~ (~ ((-89742))), clamp(~ (~ ((-89742))), _GLF_IDENTITY(~ (~ ((-89742))), int(ivec4(~ (~ ((-89742))), 1, 1, 0))), ~ (~ ((-89742))))))), _GLF_IDENTITY(~ (~ ((-89742))), (0 & -92238) ^ (_GLF_IDENTITY(~ (~ ((-89742))), clamp(~ (~ ((-89742))), _GLF_IDENTITY(~ (~ ((-89742))), int(ivec4(~ (~ ((-89742))), 1, 1, 0))), ~ (~ ((-89742)))))))))), 0 ^ ((_GLF_IDENTITY(-89742, (_GLF_IDENTITY(-89742, int(int(-89742)))) / 1)) | (-89742))))) >> 0) / 1)), -75865, -60925), (true ? ivec4(-61399, _GLF_IDENTITY(_GLF_IDENTITY(-89742, _GLF_IDENTITY((-89742) | _GLF_IDENTITY((-89742), clamp((-89742), (_GLF_IDENTITY(-89742, min(-89742, -89742))), (-89742))), _GLF_IDENTITY((_GLF_IDENTITY((-89742) | _GLF_IDENTITY((-89742), _GLF_IDENTITY(~ (~ ((-89742))), (0 & -92238) ^ (_GLF_IDENTITY(~ (~ ((-89742))), clamp(~ (~ ((-89742))), _GLF_IDENTITY(~ (~ ((-89742))), int(ivec4(~ (~ ((-89742))), 1, 1, 0))), ~ (~ ((-89742)))))))), 0 ^ ((_GLF_IDENTITY(-89742, (_GLF_IDENTITY(-89742, int(int(-89742)))) / 1)) | (-89742)))), ((_GLF_IDENTITY((-89742) | _GLF_IDENTITY((-89742), _GLF_IDENTITY(~ (~ ((-89742))), (0 & -92238) ^ (_GLF_IDENTITY(~ (~ ((-89742))), clamp(~ (~ ((-89742))), _GLF_IDENTITY(~ (~ ((-89742))), int(ivec4(~ (~ ((-89742))), 1, 1, 0))), ~ (~ ((-89742)))))))), 0 ^ ((_GLF_IDENTITY(-89742, (_GLF_IDENTITY(-89742, int(int(-89742)))) / 1)) | (-89742))))) >> 0) / 1)), min(_GLF_IDENTITY(_GLF_IDENTITY(-89742, _GLF_IDENTITY((-89742) | _GLF_IDENTITY((-89742), clamp((-89742), (_GLF_IDENTITY(-89742, min(-89742, -89742))), (-89742))), _GLF_IDENTITY((_GLF_IDENTITY((-89742) | _GLF_IDENTITY((-89742), _GLF_IDENTITY(~ (~ ((-89742))), (0 & -92238) ^ (_GLF_IDENTITY(~ (~ ((-89742))), clamp(~ (~ ((-89742))), _GLF_IDENTITY(~ (~ ((-89742))), int(ivec4(~ (~ ((-89742))), 1, 1, 0))), ~ (~ ((-89742)))))))), 0 ^ ((_GLF_IDENTITY(-89742, (_GLF_IDENTITY(-89742, int(int(-89742)))) / 1)) | (-89742)))), ((_GLF_IDENTITY((-89742) | _GLF_IDENTITY((-89742), _GLF_IDENTITY(~ (~ ((-89742))), (0 & -92238) ^ (_GLF_IDENTITY(~ (~ ((-89742))), clamp(~ (~ ((-89742))), _GLF_IDENTITY(~ (~ ((-89742))), int(ivec4(~ (~ ((-89742))), 1, 1, 0))), ~ (~ ((-89742)))))))), 0 ^ ((_GLF_IDENTITY(-89742, (_GLF_IDENTITY(-89742, int(int(-89742)))) / 1)) | (-89742))))) >> 0) / 1)), ~ (~ (_GLF_IDENTITY(-89742, _GLF_IDENTITY((-89742) | _GLF_IDENTITY((-89742), clamp((-89742), (_GLF_IDENTITY(-89742, min(-89742, -89742))), (-89742))), _GLF_IDENTITY((_GLF_IDENTITY((-89742) | _GLF_IDENTITY((-89742), _GLF_IDENTITY(~ (~ ((-89742))), (0 & -92238) ^ (_GLF_IDENTITY(~ (~ ((-89742))), clamp(~ (~ ((-89742))), _GLF_IDENTITY(~ (~ ((-89742))), int(ivec4(~ (~ ((-89742))), 1, 1, 0))), ~ (~ ((-89742)))))))), 0 ^ ((_GLF_IDENTITY(-89742, (_GLF_IDENTITY(-89742, int(int(-89742)))) / 1)) | (-89742)))), ((_GLF_IDENTITY((-89742) | _GLF_IDENTITY((-89742), _GLF_IDENTITY(~ (~ ((-89742))), (0 & -92238) ^ (_GLF_IDENTITY(~ (~ ((-89742))), clamp(~ (~ ((-89742))), _GLF_IDENTITY(~ (~ ((-89742))), int(ivec4(~ (~ ((-89742))), 1, 1, 0))), ~ (~ ((-89742)))))))), 0 ^ ((_GLF_IDENTITY(-89742, (_GLF_IDENTITY(-89742, int(int(-89742)))) / 1)) | (-89742))))) >> 0) / 1))))), _GLF_IDENTITY(-89742, _GLF_IDENTITY((-89742) | _GLF_IDENTITY((-89742), clamp((-89742), (_GLF_IDENTITY(-89742, min(-89742, -89742))), (-89742))), _GLF_IDENTITY((_GLF_IDENTITY((-89742) | _GLF_IDENTITY((-89742), _GLF_IDENTITY(~ (~ ((-89742))), (0 & -92238) ^ (_GLF_IDENTITY(~ (~ ((-89742))), clamp(~ (~ ((-89742))), _GLF_IDENTITY(~ (~ ((-89742))), int(ivec4(~ (~ ((-89742))), 1, 1, 0))), ~ (~ ((-89742)))))))), 0 ^ ((_GLF_IDENTITY(-89742, (_GLF_IDENTITY(-89742, int(int(-89742)))) / 1)) | (-89742)))), ((_GLF_IDENTITY((-89742) | _GLF_IDENTITY((-89742), _GLF_IDENTITY(~ (~ ((-89742))), (0 & -92238) ^ (_GLF_IDENTITY(~ (~ ((-89742))), clamp(~ (~ ((-89742))), _GLF_IDENTITY(~ (~ ((-89742))), int(ivec4(~ (~ ((-89742))), 1, 1, 0))), ~ (~ ((-89742)))))))), 0 ^ ((_GLF_IDENTITY(-89742, (_GLF_IDENTITY(-89742, int(int(-89742)))) / 1)) | (-89742))))) >> 0) / 1)))), -75865, -60925) : _GLF_FUZZED(bitfieldInsert(ivec4(-66833, 55817, -69137, 2782), ivec4(-51665, 34901, 33358, -19764), _injected_loop_counter, (_injected_loop_counter - _injected_loop_counter))))))
                                  {
                                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                    {
                                     do
                                      {
                                       while(false)
                                        {
                                         ;
                                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                          {
                                           do
                                            {
                                             _GLF_IDENTITY(uvec3(119975u, _GLF_IDENTITY(162827u, _GLF_IDENTITY(uint(uint(162827u)), _GLF_IDENTITY((uint(uint(162827u))), min(_GLF_IDENTITY((uint(uint(162827u))), uint(uvec4((uint(uint(162827u))), 0u, 1u, 1u))), _GLF_IDENTITY((uint(uint(162827u))), max((uint(uint(162827u))), (uint(uint(162827u))))))) * 1u)), 139147u), min(uvec3(119975u, _GLF_IDENTITY(162827u, uint(uint(162827u))), 139147u), _GLF_IDENTITY(uvec3(119975u, _GLF_IDENTITY(162827u, uint(uint(162827u))), _GLF_IDENTITY(139147u, uint(uvec2(_GLF_IDENTITY(139147u, ~ (~ (139147u))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))))), uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u))) ^ (_GLF_IDENTITY(uvec3(119975u, _GLF_IDENTITY(162827u, uint(uint(162827u))), 139147u), min(uvec3(119975u, _GLF_IDENTITY(162827u, uint(uint(162827u))), 139147u), uvec3(119975u, _GLF_IDENTITY(162827u, uint(uint(162827u))), 139147u)))))));
                                            }
                                           while(_GLF_WRAPPED_LOOP(false));
                                          }
                                         mix(bvec4(true, true, true, false), bvec4(true, true, false, true), greaterThanEqual(ivec4(39375, _GLF_IDENTITY(_GLF_IDENTITY(-46189, 0 ^ _GLF_IDENTITY((-46189), ((-46189)) << 0)), int(ivec2(_GLF_IDENTITY(-46189, 0 ^ _GLF_IDENTITY((-46189), ((-46189)) << 0)), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))))), -31194, -14885), _GLF_IDENTITY(ivec4(84129, 35606, -71867, 94747), (ivec4(84129, 35606, -71867, 94747)) << ivec4(0, _GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), clamp(_GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), 0, _GLF_IDENTITY(0, min(0, 0)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), int(ivec3(_GLF_IDENTITY(0, (0) | (0)), 0, 1))), _GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, (0) | (0)))))), (_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), clamp(_GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), 0 ^ ((0) | (0)))), _GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, (0) | (0))))))) | 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) << 0), 0))))));
                                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                          {
                                          }
                                         else
                                          {
                                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), false, true), bvec3(bvec4(bvec3(! (false), false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))))))) || ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, sin(0.0), 1.0, cos(0.0))), min(float(mat2x4(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, sin(0.0), 1.0, cos(0.0))), float(mat2x4(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, sin(0.0), 1.0, cos(0.0)))))) > injectionSwitch.y))))))
                                            {
                                            }
                                           else
                                            {
                                             mat3x2(39.89, -6.5, _GLF_IDENTITY(-8.3, _GLF_IDENTITY((-8.3) * 1.0, min(_GLF_IDENTITY(_GLF_IDENTITY((-8.3) * 1.0, clamp((-8.3) * 1.0, (-8.3) * 1.0, (-8.3) * 1.0)), max((-8.3) * 1.0, (-8.3) * 1.0)), (-8.3) * 1.0))), -3.4, -589.137, 6.8);
                                            }
                                          }
                                        }
                                      }
                                     while(_GLF_WRAPPED_LOOP(false));
                                    }
                                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & -69118)); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0), (1 | ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(ivec4(int(3), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), (1 ^ 0)), clamp(_GLF_IDENTITY(ivec4(int(3), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), (1 ^ 0)), (ivec4(int(3), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), (1 ^ 0))) | (ivec4(int(3), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), (1 ^ 0)))), ivec4(int(3), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), (1 ^ 0)), ivec4(int(3), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), (1 ^ 0))))))))) * (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0), (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0)) >> 0)) - 0))))
                                    {
                                     (mat2(mat3x2(-222.277, -74.98, _GLF_IDENTITY(-314.678, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -314.678 : _GLF_FUZZED(-2552.4793))), 1346.5812, -0.6, -8.7)) * mat3x2(0.7, 53.28, _GLF_IDENTITY(_GLF_IDENTITY(-5.7, clamp(_GLF_IDENTITY(-5.7, (-5.7) / 1.0), _GLF_IDENTITY(-5.7, 0.0 + (_GLF_IDENTITY(-5.7, (true ? -5.7 : _GLF_FUZZED(7.5))))), -5.7)), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(-5.7, clamp(_GLF_IDENTITY(-5.7, (_GLF_IDENTITY(-5.7, (true ? -5.7 : _GLF_FUZZED(vec3(-0.9, 1.1, 7.2)[1])))) / 1.0), _GLF_IDENTITY(-5.7, 0.0 + (_GLF_IDENTITY(-5.7, (true ? -5.7 : _GLF_FUZZED(7.5))))), -5.7)), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x), 1.0, 1.0), (false ? _GLF_FUZZED(mat3(-9195.3100, 4.7, 88.62, 568.458, -3.8, -3003.1368, _GLF_IDENTITY(88.27, clamp(88.27, 88.27, _GLF_IDENTITY(88.27, (false ? _GLF_FUZZED(4.6) : 88.27)))), -885.146, 5.7)) : mat3(_GLF_IDENTITY(-5.7, clamp(_GLF_IDENTITY(-5.7, (-5.7) / 1.0), _GLF_IDENTITY(-5.7, 0.0 + (_GLF_IDENTITY(-5.7, (true ? -5.7 : _GLF_FUZZED(7.5))))), -5.7)), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 0.0, 0.0, 0.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch, 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 0.0, 0.0, 0.0))))).x), 1.0, 1.0))))), -402.149, -786.793, 869.850));
                                    }
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), false))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, (false) && true)), bvec3(bvec3(bvec3(false, true, false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))), true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))), true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))), true)))), false))), _GLF_IDENTITY(false, true && (false))))))), true)))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), true && (! (true)))))))), false))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(false, true, false))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(false, true, false))))), true)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, false), false)), true))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, false), false)), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, false), false)), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, false), false)), true))))))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))), false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, false))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)))))))))))))))))
                                      {
                                      }
                                     else
                                      {
                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                        {
                                         do
                                          {
                                           do
                                            {
                                             mat2 _GLF_SWITCH_0_3v[74], _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v;
                                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 & -56950), _GLF_IDENTITY((_GLF_IDENTITY((0 & -56950), ((0 & -56950)) - 0)), ((_GLF_IDENTITY((0 & -56950), ((0 & -56950)) - 0))) >> 0) / 1)); _injected_loop_counter --)
                                              {
                                               do
                                                {
                                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                                  {
                                                   for(                                                   equal(injectionSwitch, injectionSwitch);
 _GLF_IDENTITY((_GLF_SWITCH_0_0v == _GLF_SWITCH_0_0v), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-68.00)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.1), _GLF_FUZZED(-12.69)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)), bvec2(true, true))).y)))))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-68.00)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.1), _GLF_FUZZED(-12.69)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)), bvec2(true, true))).y))))))))))) || false) || ((_GLF_IDENTITY(_GLF_SWITCH_0_0v == _GLF_SWITCH_0_0v, ! (! (_GLF_SWITCH_0_0v == _GLF_SWITCH_0_0v)))))); mix(notEqual(_GLF_IDENTITY(vec3(-6.5, 844.648, 81.63), vec3(mat4x2(_GLF_IDENTITY(vec3(-6.5, 844.648, 81.63), max(vec3(-6.5, 844.648, 81.63), vec3(-6.5, 844.648, 81.63))), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0)))), atan(vec3(-875.711, -6.5, 6379.7851), _GLF_IDENTITY(vec3(1.0, -74.82, 353.205), mix(vec3(_GLF_IDENTITY(_GLF_FUZZED(-9.9), max(_GLF_FUZZED(-9.9), _GLF_FUZZED(-9.9))), _GLF_FUZZED((1935.8992 - 1.1)), _GLF_FUZZED(-15.82)), vec3((vec3(1.0, -74.82, _GLF_IDENTITY(353.205, min(353.205, _GLF_IDENTITY(353.205, min(353.205, 353.205))))))[0], (vec3(1.0, -74.82, 353.205))[1], _GLF_IDENTITY((vec3(1.0, -74.82, 353.205)), max((vec3(1.0, -74.82, 353.205)), (vec3(1.0, -74.82, 353.205))))[2]), bvec3(true, true, true))))), _GLF_IDENTITY(_GLF_IDENTITY(not(bvec3(false, false, true)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(not(bvec3(false, false, true)), _GLF_IDENTITY(bvec3(bvec4(not(bvec3(false, false, true)), true)), bvec3(bvec4(bvec3(bvec4(not(bvec3(false, false, true)), true)), true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(not(bvec3(false, false, true)), _GLF_IDENTITY(bvec3(bvec4(not(bvec3(false, false, true)), true)), bvec3(bvec4(bvec3(bvec4(not(bvec3(false, false, true)), true)), true))))), false))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(not(bvec3(false, false, true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(not(bvec3(false, false, true))), bvec3(bvec3(bvec3(not(bvec3(false, false, true)))))))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(not(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), true, true, true))), false, true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(not(bvec3(false, false, true))), bvec3(bvec3(bvec3(not(bvec3(false, false, true)))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(not(bvec3(false, false, true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(not(bvec3(false, false, true))), bvec3(bvec3(bvec3(not(bvec3(false, false, true))))))))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(not(bvec3(false, false, true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(not(bvec3(false, false, true))), bvec3(bvec3(bvec3(not(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(not(bvec3(_GLF_IDENTITY(false, false || (false)), false, true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(not(bvec3(false, false, true))), bvec3(bvec3(bvec3(not(bvec3(false, false, true)))))))))))))))))))), equal(bvec3(true, _GLF_IDENTITY(true, (true) && true), true), bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, true && (true)), false))))
                                                    {
                                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                                      {
                                                      }
                                                     else
                                                      {
                                                       ;
                                                      }
                                                     ivec3 _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v, _GLF_SWITCH_0_8v[99];
                                                     (mat4x3(_GLF_IDENTITY(-382.873, (false ? _GLF_IDENTITY(_GLF_FUZZED(6610.5834), max(_GLF_FUZZED(6610.5834), _GLF_FUZZED(6610.5834))) : _GLF_IDENTITY(-382.873, mix(float(-382.873), float(_GLF_FUZZED(23.99)), _GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), ! (! (! (bool(false)))))), ((_GLF_IDENTITY(! (bool(false)), ! (! (! (bool(false))))))) && true))), true && (_GLF_IDENTITY(! (bool(false)), ! (! (! (bool(false))))))))))))), 1725.8801, 9564.5562, _GLF_IDENTITY(61.64, mix(float(61.64), float(_GLF_FUZZED(_GLF_IDENTITY(float(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(false, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(78797, int(ivec2(_GLF_IDENTITY(78797, (78797) | (78797)), 1))), (_GLF_IDENTITY(78797, int(ivec2(_GLF_IDENTITY(78797, (78797) | (78797)), 1)))) >> 0) : -90185), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(false, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(78797, int(ivec2(_GLF_IDENTITY(78797, (78797) | (78797)), 1))), (_GLF_IDENTITY(78797, int(ivec2(_GLF_IDENTITY(78797, (78797) | (78797)), 1)))) >> 0) : -90185), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(false, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(78797, int(ivec2(_GLF_IDENTITY(78797, (78797) | (78797)), 1))), (_GLF_IDENTITY(78797, int(ivec2(_GLF_IDENTITY(78797, (78797) | (78797)), 1)))) >> 0) : -90185), 0 | ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(false, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(78797, int(ivec2(_GLF_IDENTITY(78797, (78797) | (78797)), 1))), (_GLF_IDENTITY(78797, int(ivec2(_GLF_IDENTITY(78797, (78797) | (78797)), 1)))) >> 0) : -90185))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(false, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(78797, int(ivec2(_GLF_IDENTITY(78797, (78797) | (78797)), 1))), (_GLF_IDENTITY(78797, int(ivec2(_GLF_IDENTITY(78797, (78797) | (78797)), 1)))) >> 0) : -90185), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(false, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(78797, int(ivec2(_GLF_IDENTITY(78797, (78797) | (78797)), 1))), (_GLF_IDENTITY(78797, int(ivec2(_GLF_IDENTITY(78797, (78797) | (78797)), 1)))) >> 0) : -90185)))))), mix(float(float((_GLF_IDENTITY(false, bool(bvec2(false, false))) ? _GLF_IDENTITY(78797, int(ivec2(_GLF_IDENTITY(78797, (78797) | (78797)), 1))) : -90185))), float(_GLF_FUZZED(-1.6)), bool(false))))), bool(false))), -37.29, -4056.4065, 544.927, 4.4, 8.5, _GLF_IDENTITY(9113.5788, (9113.5788) / 1.0), -742.467, 6.7) , mat2x4(-9622.8125, -1.2, -37.98, _GLF_IDENTITY(727.866, clamp(_GLF_IDENTITY(_GLF_IDENTITY(727.866, clamp(_GLF_IDENTITY(727.866, _GLF_IDENTITY(max(727.866, _GLF_IDENTITY(727.866, (false ? _GLF_FUZZED(log(1387.9937)) : _GLF_IDENTITY(727.866, clamp(_GLF_IDENTITY(727.866, min(727.866, 727.866)), 727.866, 727.866))))), (true ? max(727.866, 727.866) : _GLF_FUZZED(-20.08)))), _GLF_IDENTITY(727.866, (727.866) / 1.0), 727.866)), (_GLF_IDENTITY(true, ! (! (true))) ? 727.866 : _GLF_FUZZED(7.4))), 727.866, _GLF_IDENTITY(727.866, (727.866) + _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0)))))))), -6.2, -3.3, 4.5, 614.848));
                                                     mat2(6.9, -51.67, 46.49, 62.20);
                                                     ;
                                                     ;
                                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                                      {
                                                       (-248.699 - (mat3x2(_GLF_IDENTITY(-4.4, max(-4.4, _GLF_IDENTITY(-4.4, clamp(-4.4, _GLF_IDENTITY(-4.4, float(_GLF_IDENTITY(mat2x3(-4.4, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, cos(0.0), 1.0), mat2x3(mat2x3(mat2x3(-4.4, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, cos(0.0), 1.0)))))), -4.4)))), 4733.0204, 669.817, 3.2, 9.0, 461.076) - mat3x2(1619.5770, -900.592, -2.7, _GLF_IDENTITY(-2.2, clamp(-2.2, -2.2, -2.2)), -727.164, -6.5)));
                                                      }
                                                     else
                                                      {
                                                      }
                                                     uvec2 _GLF_SWITCH_0_9v, _GLF_SWITCH_0_10v[91];
                                                    }
                                                  }
                                                 else
                                                  {
                                                  }
                                                }
                                               while(_GLF_WRAPPED_LOOP(false));
                                              }
                                             if(_GLF_WRAPPED_IF_FALSE(false))
                                              {
                                              }
                                             else
                                              {
                                               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                                {
                                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                                  {
                                                  }
                                                 else
                                                  {
                                                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
                                                    {
                                                     _GLF_IDENTITY(exp2(-1.7), max(_GLF_IDENTITY(exp2(-1.7), clamp(exp2(-1.7), exp2(-1.7), exp2(-1.7))), exp2(-1.7)));
                                                    }
                                                   else
                                                    {
                                                    }
                                                  }
                                                }
                                              }
                                             do
                                              {
                                               for(                                               bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true), false);
 _GLF_IDENTITY((! false), ! (! _GLF_IDENTITY(((! false)), (((! false))) && true))); mat3x2(7113.7526, 2627.2530, 2.3, -823.528, _GLF_IDENTITY(1901.2567, max(1901.2567, 1901.2567)), 9.4))
                                                {
                                                 (- mat2(_GLF_IDENTITY(744.299, (true ? 744.299 : _GLF_FUZZED(-61.55))), 19.06, -6565.4786, -891.995));
                                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                                  {
                                                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))) || (injectionSwitch.x < injectionSwitch.y))))))
                                                    {
                                                     do
                                                      {
                                                       if(_GLF_WRAPPED_IF_FALSE(false))
                                                        {
                                                        }
                                                       else
                                                        {
                                                         if(_GLF_WRAPPED_IF_FALSE(false))
                                                          {
                                                          }
                                                         else
                                                          {
                                                           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true, false)))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true, false)))))))
                                                            {
                                                             for(int _injected_loop_counter = ((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) << 0)), _GLF_IDENTITY(int(8), (int(8)) - 0))) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                                              {
                                                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                                {
                                                                }
                                                               else
                                                                {
                                                                 mat3x2(801.189, 91.28, -3.0, -9.4, _GLF_IDENTITY(-8.1, (-8.1) - determinant(mat4(length(0.0), log(1.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), max(_GLF_IDENTITY(min(0.0, 0.0), max(min(0.0, 0.0), min(0.0, 0.0))), min(0.0, 0.0)))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 1.0, tan(0.0)))), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / exp(0.0)), 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), (_GLF_IDENTITY(max(0.0, 0.0), (false ? _GLF_FUZZED(-5.6) : _GLF_IDENTITY(max(0.0, 0.0), max(max(0.0, 0.0), max(0.0, 0.0)))))) - sin(sin(0.0))))), max((_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), (max(0.0, 0.0)) - sin(sin(0.0)))), min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), (max(0.0, 0.0)) - sin(sin(0.0)))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), (max(0.0, 0.0)) - sin(sin(0.0))))))), (_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), (max(0.0, 0.0)) - sin(sin(0.0))))))) + 0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), _GLF_IDENTITY(float(_GLF_FUZZED(-80.69)), mix(float(_GLF_FUZZED(-83.96)), float(_GLF_IDENTITY(float(_GLF_FUZZED(-80.69)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-9.1, min(-9.1, _GLF_IDENTITY(-9.1, min(-9.1, -9.1)))))), float(_GLF_IDENTITY(float(_GLF_FUZZED(-80.69)), max(float(_GLF_FUZZED(-80.69)), float(_GLF_FUZZED(-80.69))))), bool(true)))), bool(true))), bool(false))), 0.0)), 1.0, 1.0, 1.0, 0.0))), -72.81);
                                                                }
                                                              }
                                                            }
                                                           else
                                                            {
                                                            }
                                                          }
                                                        }
                                                      }
                                                     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (true && (false))))));
                                                    }
                                                   else
                                                    {
                                                    }
                                                  }
                                                 else
                                                  {
                                                  }
                                                 do
                                                  {
                                                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                                    {
                                                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                      {
                                                      }
                                                     else
                                                      {
                                                       ;
                                                      }
                                                    }
                                                  }
                                                 while(_GLF_WRAPPED_LOOP(false));
                                                 bvec4 _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v;
                                                 mat4x3(512.358, 9.7, -24.62, 1.0, -0.4, 337.168, -15.09, -6.6, -63.96, _GLF_IDENTITY(48.10, clamp(_GLF_IDENTITY(48.10, (48.10) * _GLF_ONE(1.0, injectionSwitch.y)), 48.10, 48.10)), 9535.0097, -7.6);
                                                }
                                              }
                                             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
                                             bool _GLF_SWITCH_0_13v[52];
                                             mat4x2 _GLF_SWITCH_0_14v, _GLF_SWITCH_0_15v[31];
                                             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
                                              {
                                               if(_GLF_WRAPPED_IF_TRUE(true))
                                                {
                                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false)))
                                                  {
                                                   do
                                                    {
                                                     do
                                                      {
                                                       ;
                                                      }
                                                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                                    }
                                                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                                  }
                                                 else
                                                  {
                                                  }
                                                }
                                               else
                                                {
                                                }
                                               ivec3 _GLF_SWITCH_0_16v, _GLF_SWITCH_0_17v;
                                               mat4 _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v;
                                              }
                                             vec2 _GLF_SWITCH_0_20v;
                                            }
                                           while(false);
                                          }
                                         while(_GLF_WRAPPED_LOOP(false));
                                        }
                                       else
                                        {
                                        }
                                      }
                                    }
                                   else
                                    {
                                    }
                                   ivec3 _GLF_SWITCH_0_21v[66];
                                   43479;
                                  }
                                }
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((_GLF_IDENTITY(false, false || (false)))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((_GLF_IDENTITY(false, false || (false))))))) || false)))), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(false, false || (false)))), true && _GLF_IDENTITY((((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))))), ((((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))));
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                          }
                        }
                      }
                    }
                  }
                 else
                  {
                  }
                 default:
                 1;
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
}
