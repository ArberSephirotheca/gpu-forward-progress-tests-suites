#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       switch(_GLF_SWITCH(0))
        {
         case 53:
         while(false)
          {
           while((vec3(38.99, 9600.9600, 2587.8382) == vec3(123.789, -955.943, -877.198)))
            {
            }
           {
            {
             ivec3(50606, 36604, 20477);
            }
            if((false ^^ false))
             {
              vec3(-59.38, 2.7, 1.2);
              mat4(-9813.3357, -13.46, 6.7, 2.1, 3.2, -8943.4063, 3.6, -437.699, 63.46, 4.2, 1.2, -57.68, -61.30, -33.06, 0.0, 93.02);
              ;
              77289;
              ivec3 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v[70], _GLF_SWITCH_5_2v;
             }
            uvec4 _GLF_SWITCH_5_3v[40];
            uvec4 _GLF_SWITCH_5_4v;
           }
           ivec2(90652, 9993);
           if(true)
            {
             if(true)
              {
              }
             else
              {
               (mat2(-9042.0040, 9470.3620, -343.993, -0.3) * vec2(17.09, 6.1));
               (988.297 / mat3x2(-0.2, -4.0, 277.655, -67.63, 558.154, 2.7));
              }
             {
              bvec4 _GLF_SWITCH_5_5v, _GLF_SWITCH_5_6v, _GLF_SWITCH_5_7v;
              (ivec4(13553, -50281, 57317, -5582) | ivec4(93863, 55127, 16059, -77984));
              bool _GLF_SWITCH_5_8v, _GLF_SWITCH_5_9v[32];
              uvec2(117137u, 126045u);
              acosh(vec4(4.0, 712.292, -9.6, -995.487));
              mat3x4 _GLF_SWITCH_5_10v[33], _GLF_SWITCH_5_11v, _GLF_SWITCH_5_12v;
              mat2x4 _GLF_SWITCH_5_13v, _GLF_SWITCH_5_14v, _GLF_SWITCH_5_15v;
              (-33477 ^ -26111);
             }
             for(int _GLF_SWITCH_5_16v, _GLF_SWITCH_5_17v; true; vec4(-9786.6534, 204.395, -53.89, 8.1))
              {
               mat4x2 _GLF_SWITCH_5_18v, _GLF_SWITCH_5_19v;
               ;
               mat3(mat4x3(18.40, 597.274, 68.48, 974.614, -623.621, -3.6, -21.62, -5957.3522, 9.3, -0.4, 24.39, 17.91));
               vec3 _GLF_SWITCH_5_20v, _GLF_SWITCH_5_21v[90], _GLF_SWITCH_5_22v[27];
               mat4(mat4x2(95.50, -9.9, 7.0, 151.333, -5868.2651, 463.141, 93.31, -5.7));
               vec4 _GLF_SWITCH_5_23v, _GLF_SWITCH_5_24v[63];
               mat3(22.04, 8374.4828, 65.41, 6.1, -762.828, 3461.7375, -6.6, -9246.8258, -43.86);
              }
             {
              ;
              matrixCompMult(mat2x3(14.01, -602.143, -893.537, -60.02, -0.0, -7.8), mat2x3(-6.0, -59.53, -9.4, -1937.4041, 380.256, 79.06));
             }
             24407u;
             vec4 _GLF_SWITCH_5_25v;
             if(any(bvec3(false, true, false)))
              {
               (ivec3(-84857, 74162, -40049) >> ivec3(76219, -44614, 34258));
               mat3x2 _GLF_SWITCH_5_26v;
               ivec3(-30931, -81781, -85012);
               greaterThanEqual(uintBitsToFloat((194569u - GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_size)), _GLF_SWITCH_5_25v);
               ;
               (mat3x4(0.1, 7212.6389, -7650.2552, 2.5, -0.3, 3.0, -5.5, 8860.5016, -8.6, 85.44, -955.584, 25.38) + -4.3);
               (GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_size | GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_size)[2];
               41611u;
              }
             for(             atan(8.2);
 isinf(6.7); (193553u ^ 183592u))
              {
               mat4x2 _GLF_SWITCH_5_27v;
               ;
               mat4x3 _GLF_SWITCH_5_28v, _GLF_SWITCH_5_29v;
               mat4 _GLF_SWITCH_5_30v[63];
               bvec2 _GLF_SWITCH_5_31v[1];
               float _GLF_SWITCH_5_32v;
              }
             mat2x4(-4.7, -7.4, -4.6, 16.38, -4.1, -26.82, -4.3, -8.4);
            }
           for(mat2x4 _GLF_SWITCH_5_33v[66]; (bvec2(true, false) == bvec2(false, true)); min(clamp(uvec2(73702u, 46332u), uvec2(195238u, 119873u), uvec2(95738u, 195668u)), 174975u))
            {
             mat3x2 _GLF_SWITCH_5_34v, _GLF_SWITCH_5_35v, _GLF_SWITCH_5_36v;
            }
           packUnorm4x8((vec4(-5599.0525, 51.49, 84.05, -885.688) - vec4(2.4, 714.792, -4.5, 579.803)));
          }
         case 23:
         for(         uvec4(142917u, 118943u, 10472u, 90699u);
 false; uvec3(137297u, 91957u, 36212u))
          {
          }
         case 0:
         case 9:
         case 83:
         case 82:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         case 17:
         return;
         break;
         case 6:
         (-38622 * findMSB(uvec4(178473u, 31362u, 50041u, 32747u)));
         case 58:
         for(ivec4 _GLF_SWITCH_5_37v, _GLF_SWITCH_5_38v, _GLF_SWITCH_5_39v; false; mat3((mat2x4(-40.38, 89.93, 781.544, 1566.6545, 6.7, -5.9, 34.01, -109.533))))
          {
           if(true)
            {
             77438u;
             mat4(-225.377);
             for(mat4x3 _GLF_SWITCH_5_40v; true; (mat2x3(55.06, -720.810, -1478.6302, 977.686, -440.657, -1418.8236) * mat2(2.2, 6.9, 1.3, -0.9)))
              {
               ;
               lessThanEqual((vec4(-4.5, -3.9, -0.5, 99.87) + vec4(-9990.2489, 761.629, 1732.7252, 293.931)), vec4(-701.647, -9.9, -1.3, -763.915));
               mat4x2 _GLF_SWITCH_5_41v;
               (mat3x2(-8.2, -5.7, 5.1, 856.549, -7034.2774, -42.26) * mat2x3(-0.6, -61.23, -1.2, -49.79, 198.838, -339.042));
               ;
               clamp(uvec3(138036u, 95912u, 37326u), uvec3(124162u, 53030u, 140806u), uvec3(135536u, 146564u, 123554u));
               ;
              }
             while(true)
              {
               mat2(mat2x3(96.50, -9.5, -3.1, -2.0, -7.5, 8.2));
               mat3(mat3x4(6.3, 5.3, -1.6, 538.264, -9.9, 548.175, -4.4, 8.4, 1533.2768, -5113.7232, 81.09, 912.602));
              }
            }
           else
            {
             for(mat2 _GLF_SWITCH_5_42v[14], _GLF_SWITCH_5_43v, _GLF_SWITCH_5_44v; (true == false); bvec2(false, false))
              {
               bvec3(true, true, false)[0];
               mat4x3(mat2x4(-6482.8963, -8712.6972, -6925.8127, -88.20, 278.938, -6.5, 2.2, -2.3));
               mat2x4 _GLF_SWITCH_5_45v[36], _GLF_SWITCH_5_46v;
               (mat4(4.8, -7208.2104, -567.339, 4.3, 9.2, 0.5, 82.68, -9301.0346, -2.9, -4.4, 5.3, -8.3, -774.600, -6.6, 4614.6305, -94.37) * mat4(mat3x2(6.7, -3739.1183, 0.8, -611.199, -8.6, 930.377)));
               vec2 _GLF_SWITCH_5_47v[79], _GLF_SWITCH_5_48v, _GLF_SWITCH_5_49v;
               ivec3(97097, 22652, 20225);
               mat2x4(-8096.1108, -8444.2497, 2.9, -95.77, -897.269, 5145.0735, -682.166, -64.28);
               mat4(70.75, -7848.2897, 9384.0174, -0.1, 55.59, -6486.0226, 29.31, -56.45, 156.847, 6.8, 6.3, -16.78, -1.8, -0.0, -7.7, 4.5);
              }
             min(uvec4(138048u, 184949u, 9283u, 73373u), subgroup_id);
             {
              (subgroup_id ^ (++ GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_size));
              mat3x2(-8.1, 6.9, 3304.9298, 419.915, -53.73, 7533.5146);
              (444.100 + mat4(86.87, 65.08, 452.240, -7.2, 6.8, -8973.1753, -61.63, 1.9, -7937.6984, 9480.1116, -2.2, 3117.2169, 7567.4984, 461.996, 9108.6713, -85.30));
              mat3x2(mat2x3(5.9, 78.22, -6288.9084, -56.81, -1.8, -5.9));
             }
             {
              uvec2 _GLF_SWITCH_5_50v, _GLF_SWITCH_5_51v[81];
              ivec3 _GLF_SWITCH_5_52v[21], _GLF_SWITCH_5_53v, _GLF_SWITCH_5_54v;
              int _GLF_SWITCH_5_55v;
              mat4x3 _GLF_SWITCH_5_56v;
              injectionSwitch;
              vec3(-8.2, 179.349, -4.6);
              mat2x3 _GLF_SWITCH_5_57v[28], _GLF_SWITCH_5_58v, _GLF_SWITCH_5_59v;
              (false ? mat3x2(-7.4, 4.6, -331.680, -4.2, 1.7, 596.384) : mat3x2(mat2x4(-3101.3082, -4.2, -5.7, -6021.8512, -32.46, -0.8, 6290.9876, -723.183)));
              mat3 _GLF_SWITCH_5_60v, _GLF_SWITCH_5_61v;
             }
             for(             (uvec4(94458u, 85117u, 38157u, 157423u) & min(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_size, GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_size));
 false; vec3(-5766.8948))
              {
               vec3(-6713.3780, 4113.2646, -222.045);
               mat4x2(2883.9936, 2123.1815, 342.216, 760.227, 3.2, -581.931, 15.98, -6.2);
               mat2x4(mat3x4(-94.11, -7.2, 3651.6972, -3568.4705, -4.4, 37.63, 9.4, 8.4, 1.5, -7.4, 4.3, 85.90));
               (true != false);
              }
            }
           for(           false;
 bvec2(false, false)[1]; ivec3(-35970, -67431, -93171))
            {
             for(mat3 _GLF_SWITCH_5_62v[15], _GLF_SWITCH_5_63v, _GLF_SWITCH_5_64v; false; injectionSwitch)
              {
               mat2x3(-0.4, 7753.5508, -518.878, 808.429, 4.2, -5.4);
               ((ivec3(-33830, -27916, 43884) / ivec3(40719, 46802, 31704)) << ivec3(-28563, 56864, -95852));
               matrixCompMult(mat4(31.38, 83.02, 9.5, 8796.5741, -5.7, -9.4, 8.9, 5930.7362, 0.4, 4152.0229, -99.28, -460.516, -4931.1111, -8.1, 975.281, 33.73), mat4(-7.0, -9778.5787, -59.58, 526.160, 9556.8919, 6064.9107, 3.6, -7.9, -8.6, 3.9, 190.901, 309.391, -4310.0292, -112.312, 1.7, 5389.5586));
               unpackHalf2x16(187392u);
               uvec4(109673u, 29449u, 76173u, 107158u);
               mat3(normalize(-45.31));
               mat2x4(98.59, 9501.3105, -8989.5108, -9.8, 864.270, -51.12, -77.97, -2846.4733);
              }
            }
           while((-28862 < -20114))
            {
             mat3x4(mat4x3(min(vec3(-615.525, 36.24, 3.0), vec3(3.6, -59.37, -55.35)), vec3(-9.8, 91.98, -1825.9731), vec3(-1.5, 6.3, 79.63), vec3(-181.259, -9.3, -8.1)));
             bvec4 _GLF_SWITCH_5_65v[60];
             for(mat2x4 _GLF_SWITCH_5_66v, _GLF_SWITCH_5_67v; ((79421u > 143218u) ? false : false); mat4x2(8.3, 36.31, -30.27, -96.27, -6.5, 1098.1927, -593.649, -91.82))
              {
               vec4 _GLF_SWITCH_5_68v, _GLF_SWITCH_5_69v[35], _GLF_SWITCH_5_70v;
               uvec3(107671u, 21268u, 49180u);
              }
             ;
             mat2x3(-4224.0909, 742.142, 7.5, 2383.5670, -51.49, -1.1);
            }
           while(bvec2(true, true)[0])
            {
            }
           -5.4;
           if((mat2x4(43.32, -0.2, -21.24, -397.040, -970.485, 1608.5122, 60.03, 2.4) == mat2x4(-7.2, 6.0, 0.9, 2.1, -34.80, -1.9, -7.0, -2.2)))
            {
             (mat4(868.203, -5.6, -886.455, 8284.4152, -1967.1175, -880.677, 27.53, 2.0, 990.221, -717.416, 1417.8306, 805.605, 526.316, 935.890, 6398.9211, -8.5) == mat4(3465.6744, 9.5, -3752.0783, -4.8, 300.577, -9583.6407, 17.02, 8286.7093, -7905.9330, -1601.1744, 127.980, -2.3, 3.9, -999.614, -384.423, -711.044));
             if((max(vec3(-4.5, 980.559, 29.88), -3.5) == (injectionSwitch * mat3x2(mat4(9.9, 4334.3568, 67.55, 732.279, 92.68, 1.5, -5.6, 3.2, 9.9, -8095.4399, 3.5, 6.4, 80.03, -1139.1820, -6.4, -866.898)))))
              {
               ivec2(-87720, -83523);
               bvec4 _GLF_SWITCH_5_71v;
               mat4(-3.0, -76.68, -5.4, 20.33, 5.6, 6.8, -2.4, 3.3, 6310.4285, -2514.5465, -5.1, -0.9, -1301.1027, 2028.4093, 6.1, 630.542);
               vec3(82.44, 5.6, -161.043);
               ;
              }
             else
              {
               bvec3 _GLF_SWITCH_5_72v, _GLF_SWITCH_5_73v[48];
               bvec2(bvec3(false, false, false));
               ;
               uvec2((86993u & (163406u / 78518u)), subgroup_id);
               mix(atan(injectionSwitch), log2(vec2(4.2, -4.5)), 80.67);
              }
             uvec2(117142u, 19628u);
             {
              (vec4(7.7, 7516.5326, 5873.4121, 4916.5018) / mod(-678.753, 3.2));
              ivec2(56169, -6803);
              bool _GLF_SWITCH_5_74v, _GLF_SWITCH_5_75v;
              uvec2(122213u, 89041u);
              ivec2(17377, -83047);
              bool _GLF_SWITCH_5_76v;
              ((mat4x2(-2.6, 83.93, -8.4, 81.21, -7.5, -6.1, -3278.1759, -3256.3005) * mat2x4(85.62, 4.8, 3.4, 8818.3414, 365.423, 53.53, 171.460, 8192.6066)) * outerProduct(fract(vec2(-923.375, -1.8)), vec4(-1.4, -5762.7878, -258.526, -6.5)));
             }
             while(true)
              {
               bvec2(true, false);
              }
             if((true))
              {
               bvec3(false, true, false);
               mat4(274.314, 328.728, -4540.3992, 1.3, 9463.7982, 96.82, -4.0, 996.916, -1.2, -9.4, -595.378, -3.3, -4624.8104, 25.86, -939.925, 252.507);
               bvec4 _GLF_SWITCH_5_77v, _GLF_SWITCH_5_78v;
               ;
               uint _GLF_SWITCH_5_79v[90];
               vec2 _GLF_SWITCH_5_80v[83], _GLF_SWITCH_5_81v, _GLF_SWITCH_5_82v[40];
               vec4 _GLF_SWITCH_5_83v[69], _GLF_SWITCH_5_84v[38], _GLF_SWITCH_5_85v;
               bvec2 _GLF_SWITCH_5_86v;
              }
             else
              {
               outerProduct(vec3(434.120, 85.62, -58.57), vec3(41.20, -8.1, -8243.1878));
               ;
               mat3x4 _GLF_SWITCH_5_87v;
               uvec2 _GLF_SWITCH_5_88v[2], _GLF_SWITCH_5_89v, _GLF_SWITCH_5_90v;
               mat4 _GLF_SWITCH_5_91v, _GLF_SWITCH_5_92v;
              }
             ivec2(30277, 76000);
             mat2(642.936, -9.2, 2970.2723, 5469.2593);
            }
           if((ivec2(-61850, 72633) != (-91674 * (ivec2(-35475, 69545) >> -2927))))
            {
             if(false)
              {
               greaterThan(ivec2(8105, -56706), ((bvec4(true, false, false, false) , ivec2(70303, 26978)) ^ 3937));
               mat4 _GLF_SWITCH_5_93v, _GLF_SWITCH_5_94v[77], _GLF_SWITCH_5_95v[90];
               bvec2(false, true);
               float _GLF_SWITCH_5_96v[5], _GLF_SWITCH_5_97v[8], _GLF_SWITCH_5_98v;
               ;
               bool _GLF_SWITCH_5_99v[93];
               true;
               (uvec2(11173u, 22558u) % 152337u);
               uvec3(155633u, 150764u, 111614u);
              }
            }
           for(mat2x3 _GLF_SWITCH_5_100v; (bvec3(true, true, false) == bvec3(true, false, false)); isinf(vec4(560.070, 26.28, 7375.5351, -1138.1123)))
            {
             ;
             _GLF_SWITCH_5_39v;
             uvec3 _GLF_SWITCH_5_101v, _GLF_SWITCH_5_102v;
             {
              mat4 _GLF_SWITCH_5_103v[97], _GLF_SWITCH_5_104v[44], _GLF_SWITCH_5_105v;
              subgroup_id;
              (distance(smoothstep(vec4(-14.54, 2.8, -4.5, -7671.4251), vec4(-5.1, 430.003, 1735.5189, -42.78), vec4(-785.056, -33.37, -28.19, 9276.9322)), vec4(-8.2, 6053.6090, -4.0, -7.9)) , equal(bvec3(false, true, true), bvec3(false, false, true)));
             }
             ;
             while((ivec3(34126, 44126, 23152) == ivec3(-93934, 94935, 17109)))
              {
               _GLF_SWITCH_5_100v;
               findLSB(_GLF_SWITCH_5_37v);
              }
            }
          }
         default:
         1;
        }
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   switch(_GLF_SWITCH(0))
    {
     case 0:
     case 70:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     case 88:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     case 24:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     break;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     case 35:
     while((-867.957 == -704.733))
      {
      }
     default:
     1;
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_size.z = subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_size.w = workgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_size.w * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   switch(_GLF_SWITCH((1 ^ 1)))
    {
     case 18:
     do
      {
       for(mat3x2 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v[41], _GLF_SWITCH_5_2v; (mat4(mat2x3(849.792, 733.627, -7223.2271, -245.985, 878.318, -367.920)) == mat4(-4096.1184, -46.28, -64.82, -508.194, 264.808, 2184.0372, -60.77, 5.3, -626.621, 1.0, -20.72, -3582.1644, -3.4, 3.7, 9391.8530, 1831.4232)); greaterThanEqual(uvec4(136165u, 132780u, 157867u, 53007u), (GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_size - uvec4(112613u, 186813u, 71434u, 22799u))))
        {
         mat4x2(3.1, 5798.8299, -3.9, -55.36, -132.257, -89.94, 49.20, 24.63);
         ((mat4x3(247.073, -96.26, -9.5, 6024.1925, 21.95, -1.3, 50.03, -7.4, -279.347, 16.78, 8879.9345, 227.773) - 5.9) / mat4x3(-0.8, -7.8, 2.3, 7.6, -204.026, 761.837, -7474.3178, -1595.9939, -44.59, 1.3, 4.3, -1.9));
         for(bvec4 _GLF_SWITCH_5_3v[40]; (vec4(1.0, -997.557, -66.87, -806.660) == vec4(2460.2563, 9009.9850, -2.0, -8.0)); uvec3(71877u, 53762u, 124923u))
          {
           uvec4(145264u, 107766u, 75829u, 162156u)[3];
           uvec4 _GLF_SWITCH_5_4v;
           bvec2 _GLF_SWITCH_5_5v;
          }
        }
       if((uvec2(23926u, 15434u) == uvec2(50432u, 16296u)))
        {
         vec3(-206.706, 349.834, -69.36);
         if(true)
          {
          }
         else
          {
           mat3(3744.4587, -941.826, -7133.8970, -1.7, -2421.4784, 918.869, 128.489, -3.2, 140.216);
           (mat4x3(-2322.8322, 684.387, 33.13, -4.0, -5.5, 25.53, 4761.1945, 89.33, 12.33, -635.080, 80.58, 3.5) , mat4(2.2, 2.1, -41.03, -5.6, 16.17, 3750.4977, -8.6, -1218.6620, -1501.2418, -5130.8792, 550.313, 7712.6711, 668.794, 731.250, 138.301, 1.2));
           findLSB(max(-48267, 88978));
           ivec4(79984, -10379, -33881, -94482);
           mat2x4(2044.5000, -8.2, -4340.4833, -63.90, -2718.7312, -443.517, -3.3, -9.0);
           mat2x3(-5715.8807, -841.239, -518.971, -8183.3577, -8.3, 789.385);
           ;
           bvec4 _GLF_SWITCH_5_6v, _GLF_SWITCH_5_7v, _GLF_SWITCH_5_8v;
           mat2 _GLF_SWITCH_5_9v, _GLF_SWITCH_5_10v;
          }
         mat4x2(-7134.1722, 53.31, 34.73, 22.32, -1624.5171, 27.63, 90.97, -3.6);
         mat4(764.086, 5.8, 4.2, 7554.9250, -35.75, 64.28, 4672.3558, 669.595, -8500.2595, 7.3, 6617.9627, -2.1, 52.21, 380.178, -9.8, -31.61);
         mat4x3 _GLF_SWITCH_5_11v, _GLF_SWITCH_5_12v;
         _GLF_SWITCH_5_12v;
        }
       else
        {
         if(true)
          {
           (mat2x4(9.2, 3901.5328, -2.2, 43.16, 3.9, 9.1, 6.4, -90.98) * mat2(225.084, -146.753, 99.41, 7.3));
           ;
          }
         max(uvec2(166144u, 168426u), uvec2(49626u, 150364u));
        }
       {
        if(true)
         {
          bvec3 _GLF_SWITCH_5_13v, _GLF_SWITCH_5_14v;
          (mat4(3862.9341, -2.5, -7.0, -278.298, -65.77, 8.0, 7.0, -3.8, -9669.6800, -2509.9750, 436.004, 8.5, -41.69, 5.7, 912.719, 8.6) * (+ mat2x4(2.5, 8.0, -24.85, 833.188, -2.8, -7.0, -0.0, 415.444)));
         }
        else
         {
          bvec2 _GLF_SWITCH_5_15v[73], _GLF_SWITCH_5_16v;
          mat3x4 _GLF_SWITCH_5_17v[66];
          uvec2 _GLF_SWITCH_5_18v;
          bvec4 _GLF_SWITCH_5_19v, _GLF_SWITCH_5_20v, _GLF_SWITCH_5_21v[58];
          (mat3(9499.5924, 4.3, -5257.3114, -9.6, -1.7, 2.6, 4.6, -699.404, 3.3) * mat3(-2598.4894, 7.2, 1.3, -8218.9369, 89.46, -4.0, 417.809, -29.87, 6.1));
         }
        mat2x3(-2.1, 5.0, -57.69, -19.86, -3603.9786, 350.702);
        uvec2(131264u, 147952u);
        while((mat4x2(-6231.4115, 5.7, 2.9, -0.9, -2892.0248, 189.904, -22.31, -5.0) != mat4x2(7.7, 16.34, -40.67, 79.47, -4.9, 62.43, -9.4, -8253.3241)))
         {
          ;
          uvec3 _GLF_SWITCH_5_22v[52], _GLF_SWITCH_5_23v, _GLF_SWITCH_5_24v[66];
          uint _GLF_SWITCH_5_25v, _GLF_SWITCH_5_26v;
          ;
          smoothstep(vec4(1.9, 6.6, -5.1, -49.83), vec4(-8.6, 615.574, -5.2, 9095.7794), vec4(-29.11, -920.155, 1.2, 96.11));
          bvec4 _GLF_SWITCH_5_27v;
          mat4x2(-0.9, 118.618, -661.957, 2791.4214, 3748.9769, -298.898, 2588.8529, 4.5);
          ;
         }
        bvec2 _GLF_SWITCH_5_28v;
        bvec4(notEqual(injectionSwitch, atanh(injectionSwitch)), _GLF_SWITCH_5_28v);
        mat4 _GLF_SWITCH_5_29v[32], _GLF_SWITCH_5_30v[74], _GLF_SWITCH_5_31v;
        {
         (_GLF_SWITCH_5_31v * outerProduct(vec4(3701.7874, -489.989, 5.8, -5745.4541), injectionSwitch));
         mat3x4 _GLF_SWITCH_5_32v;
         atanh(vec4(-268.274, -8988.0234, 0.0, 7.6));
         bool _GLF_SWITCH_5_33v[32], _GLF_SWITCH_5_34v;
         ;
        }
       }
       mat2x4 _GLF_SWITCH_5_35v[62], _GLF_SWITCH_5_36v, _GLF_SWITCH_5_37v[60];
       mat4x2(4.4, -5240.7374, 391.748, 326.566, 6.8, 2.1, -11.43, 2077.6328);
       while(true)
        {
         for(mat3 _GLF_SWITCH_5_38v, _GLF_SWITCH_5_39v; true; ivec4((ivec3(34534, 88607, -87702) - -70874), -32746))
          {
           ivec4 _GLF_SWITCH_5_40v, _GLF_SWITCH_5_41v[43];
           mat4x3 _GLF_SWITCH_5_42v, _GLF_SWITCH_5_43v[12], _GLF_SWITCH_5_44v;
          }
         for(         mat4x3(-39.93, -24.64, 1.3, -0.8, 58.04, -496.944, 3.5, 890.669, -455.352, 0.3, -48.21, -151.042);
 true; (max(ivec4(-93678, 17207, -20333, -8065), ivec4(-74121, -21279, 56209, 8543)) / -10268))
          {
          }
         ivec4(-82744, 48693, 25021, 28640);
         ivec2 _GLF_SWITCH_5_45v;
         mat2x4(mat2x3(mat2(2.7, 194.380, -210.886, 6.5)));
        }
       ;
       if((ldexp(667.359, -92710) < roundEven(0.5)))
        {
         mat3(454.928, -57.99, -3845.1295, -57.27, -5.4, 7.1, -32.25, 64.30, -182.240);
         ivec4(47045, 18205, 66980, -37487);
         for(ivec3 _GLF_SWITCH_5_46v, _GLF_SWITCH_5_47v; false; mat4x3(35.98, 1513.1037, 842.736, 5.9, -1058.5957, 1107.8265, 4.6, 478.858, 0.1, 4.0, -8600.2967, -190.509))
          {
           isnan(vec4(-5.1, 36.37, 3.9, 959.562));
           GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_size;
           (- mat3(-5.2, -4.5, -6.4, 37.67, -5.7, -32.29, 0.7, -1.7, -54.30));
           ivec4 _GLF_SWITCH_5_48v, _GLF_SWITCH_5_49v[25];
           mat4x2 _GLF_SWITCH_5_50v, _GLF_SWITCH_5_51v, _GLF_SWITCH_5_52v;
           bool _GLF_SWITCH_5_53v[15], _GLF_SWITCH_5_54v, _GLF_SWITCH_5_55v;
          }
         bvec3(true, true, true);
         {
          uvec4((138141u - subgroup_local_id), (uvec2(92318u, 3771u) * workgroup_id), subgroup_local_id);
          mat3 _GLF_SWITCH_5_56v;
         }
        }
       else
        {
         {
          mat4x2 _GLF_SWITCH_5_57v, _GLF_SWITCH_5_58v[78], _GLF_SWITCH_5_59v;
         }
         mat2x3(-7.2, -3202.8838, -99.29, 5.1, 88.63, 523.516);
         uvec3 _GLF_SWITCH_5_60v;
        }
       -69437;
      }
     while(true);
     case 21:
     for(     vec4(-0.1, 8.8, 315.466, 6.0);
 true; (-2.1 + mat4x2(1.6, -5.8, -5.1, 30.41, 8.2, 9183.5789, -793.210, -5.3)))
      {
      }
     case 0:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     case 56:
     case 45:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     case 97:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
      }
     case 66:
     return;
     break;
     case 65:
     ivec3(65191, -6369, 69785);
     case 15:
     ivec4 _GLF_SWITCH_5_61v, _GLF_SWITCH_5_62v;
     default:
     1;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_size.z;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     barrier();
    }
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_size.z + 1) % subgroup_size);
 GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_size.x = next_virtual_gid;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_size.x], uint(1), 4, 64, 4);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_size.y = read;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
      {
       case 0:
       case 51:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       case 3:
       if(_GLF_DEAD(false))
        return;
       case 11:
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true)))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       break;
       case 19:
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       {
        switch(_GLF_SWITCH(0))
         {
          case 81:
          for(int _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v[93]; true; uvec2(43146u, 104172u))
           {
            mat3(-5928.5323, 8.0, -0.6, 672.308, 281.048, -16.00, -38.32, 46.46, -0.2);
            bvec2(false);
            while(true)
             {
              mix(_GLF_SWITCH_5_0v, (++ _GLF_SWITCH_5_0v), false);
             }
            uint _GLF_SWITCH_5_2v[16];
            if(false)
             {
              mat2 _GLF_SWITCH_5_3v;
              bool _GLF_SWITCH_5_4v, _GLF_SWITCH_5_5v;
              mat2x4 _GLF_SWITCH_5_6v[45], _GLF_SWITCH_5_7v, _GLF_SWITCH_5_8v;
              bvec4(true, true, false, false);
              mat4 _GLF_SWITCH_5_9v[39], _GLF_SWITCH_5_10v, _GLF_SWITCH_5_11v;
             }
            mat2x3(29.88, -6972.0953, -8.9, 6965.3268, -493.425, -986.116);
            ((true ? mat2x4(3331.6964, 805.404, -4.4, -7052.3024, 669.667, -3.5, 126.801, 818.510) : mat2x4(-6.1, 7.1, -3713.5228, -3.1, 9.9, -9826.0117, -3093.2495, 197.607)) - -7.4);
           }
          case 78:
          if((-5232.4825 != 90.61))
           {
            ;
            mat3(19.59, -71.51, -3.6, 6742.8972, 933.989, 0.8, -3.9, -1.8, 909.059);
            {
             vec3(-40.89, -1890.3386, -86.93);
            }
            {
             mix(false, (subgroup_size > subgroup_size), (false || false));
             ivec3 _GLF_SWITCH_5_12v, _GLF_SWITCH_5_13v[16], _GLF_SWITCH_5_14v;
             ;
             bool _GLF_SWITCH_5_15v;
            }
            if(true)
             {
              vec2 _GLF_SWITCH_5_16v;
              bvec2(false, true);
              (injectionSwitch);
              ivec4 _GLF_SWITCH_5_17v[44], _GLF_SWITCH_5_18v, _GLF_SWITCH_5_19v[23];
              mat4x3 _GLF_SWITCH_5_20v;
              mat3x4 _GLF_SWITCH_5_21v, _GLF_SWITCH_5_22v;
             }
           }
          case 0:
          if(_GLF_DEAD(false))
           return;
          {
           while((mat4x3(9.6, 7.0, 6.6, 2.3, 61.15, 9.0, -743.531, -21.49, 86.25, -3.5, 2.8, -4327.4107) != mat4x3(74.96, 884.974, 49.39, 1.9, -0.3, -5.4, 5.6, 5.5, -765.534, -7849.3710, 0.6, -4.2)))
            {
            }
           (-736.943 < length(vec3(2.3, -5.2, 4649.5420)));
           vec4 _GLF_SWITCH_4_0v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           for(vec4 _GLF_SWITCH_4_1v; (uvec4(34483u, 99752u, 60662u, 69332u) != GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_size); mat4x3(9.4, 72.40, 7839.7001, 872.868, 5.8, -8.2, 53.49, -34.63, -531.276, -2062.8637, 9.0, -8282.0521))
            {
             ;
             (49578 - bitfieldInsert(ivec2(-33590, 43768), ivec2(-32402, -47479), bitCount(-85833), -6619));
             if(_GLF_DEAD(false))
              continue;
             uvec4 _GLF_SWITCH_4_2v, _GLF_SWITCH_4_3v[36], _GLF_SWITCH_4_4v;
             workgroup_base;
             mat4 _GLF_SWITCH_4_5v[21], _GLF_SWITCH_4_6v[24], _GLF_SWITCH_4_7v;
             GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_size.sq;
             mat3 _GLF_SWITCH_4_8v;
            }
           {
            944.143;
            if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
             return;
            mat4x3 _GLF_SWITCH_4_9v, _GLF_SWITCH_4_10v[62];
            ivec3(-82287, -95535, -51216);
            ;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            (mat2(-83.07, 8.7, -6791.0392, 3494.7283) + 9.9);
           }
           for(           lessThanEqual(_GLF_SWITCH_4_0v, _GLF_SWITCH_4_0v);
 false; mat4(800.558, 514.765, 6151.1918, 2.5, 649.082, 9480.5859, 695.756, 9.0, -9.8, -7140.9281, 7008.0313, -6.1, 600.157, -5402.4514, 8646.0920, 282.028))
            {
             ;
             reflect(asinh(-7.6), -2365.1651);
             (- vec3(vec2(86.38, -3.6), 6079.0591));
             reflect(mix(vec3(-97.88, -7018.9069, 15.81), vec3(2.3, 15.52, -0.4), vec3(-6.6, -2340.9683, -5.6)), (vec3(-133.210, -6566.1485, -170.146) - vec3(1.1, -79.78, 72.78)));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             vec3(-30.43, -91.60, -604.087);
             mat3x4 _GLF_SWITCH_4_11v[10];
             mat3 _GLF_SWITCH_4_12v;
            }
           if(bool(75.75))
            {
             mat3x2 _GLF_SWITCH_4_13v, _GLF_SWITCH_4_14v[4], _GLF_SWITCH_4_15v;
             mat2x3(-8191.4214, -31.37, 0.2, 3705.4995, 8140.2161, -6804.4214);
             mat4(9933.2799, 78.34, -767.491, 14.44, 354.890, 1.8, 912.540, -547.044, -1.7, -6.6, -0.4, -1.8, 654.643, 6.5, -3244.5823, 8983.0539);
             uvec2(27743u, 118558u);
            }
           (mat3x4(-37.47, 35.09, 9.8, -83.82, 9.4, -60.01, 8.9, -7200.8207, 5782.0507, -4142.1422, 4.7, 4.8) / 1074.6971);
           if(any(bvec3(false, true, true)))
            {
             -0.2;
             ;
             ;
             ivec4 _GLF_SWITCH_4_16v[68], _GLF_SWITCH_4_17v;
             (_GLF_SWITCH_4_0v - 6.7);
             mat3x2 _GLF_SWITCH_4_18v[51];
             ;
             bvec2 _GLF_SWITCH_4_19v;
            }
           else
            {
             uvec3(17285u, 58960u, 123742u);
             mat3x4 _GLF_SWITCH_4_20v;
             false;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             workgroup_base;
            }
          }
          if(_GLF_DEAD(false))
           return;
          mat2x4 _GLF_SWITCH_4_21v[45], _GLF_SWITCH_4_22v;
          {
           if(false)
            {
             mat3x2(498.559, -58.28, -0.2, 75.46, -861.355, 560.028);
             ;
             mat3x4 _GLF_SWITCH_4_23v, _GLF_SWITCH_4_24v;
             if(_GLF_DEAD(false))
              return;
             ivec4 _GLF_SWITCH_4_25v[57];
             bvec4(bvec2(true, false), bvec2(false, true)).yzzx;
             vec3(804.235, 3.0, 0.3);
             vec3(-3459.9947, -111.409, -5.5);
            }
           mat2x3 _GLF_SWITCH_4_26v, _GLF_SWITCH_4_27v, _GLF_SWITCH_4_28v;
           uvec4(122301u, 35898u, 114020u, 55790u);
           if(true)
            {
             mat2(-783.759, 1156.3197, 9727.7555, 3746.6141);
             ivec2(-53262, -88247);
             vec3 _GLF_SWITCH_4_29v[21];
             24852u;
            }
           else
            {
            }
           ivec2(-54709, 46996).tsst;
          }
          case 13:
          case 91:
          case 49:
          case 82:
          ;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
          if(true)
           {
            {
             mat3x4(1.2, -9183.1170, 14.31, 5.9, -5.6, -58.04, 9649.9209, 8758.0476, 5.9, -9.3, 4056.2897, 337.771);
             mat3x2 _GLF_SWITCH_4_30v, _GLF_SWITCH_4_31v[29], _GLF_SWITCH_4_32v;
             float _GLF_SWITCH_4_33v, _GLF_SWITCH_4_34v, _GLF_SWITCH_4_35v[13];
             (greaterThanEqual(ivec4(55330, 96428, -67234, 54522), ivec4(-96729, 99926, -83672, -54233)).w ? (ivec2(-58705, 91636) / ivec2(87886, -89136)) : ivec2(-67036, 32613));
             mat3 _GLF_SWITCH_4_36v[42], _GLF_SWITCH_4_37v[78];
            }
            if(true)
             {
              mat4x3(91.10, 366.958, 9.1, 5831.3675, 3.6, 0.8, -8.9, 7567.3599, -59.67, -724.260, 0.8, 8495.4387);
              bool _GLF_SWITCH_4_38v;
              (ivec2(40875, -97370) ^ ivec4(67488, 23296, 93370, 16556).w);
              uint _GLF_SWITCH_4_39v, _GLF_SWITCH_4_40v[61];
              (vec3(396.223, 3.8, 21.58) / vec3(2.1, 1.0, -87.33));
             }
            {
             mat2x4 _GLF_SWITCH_4_41v, _GLF_SWITCH_4_42v, _GLF_SWITCH_4_43v;
             ;
             ;
             mat4x2(-6.3, 4677.6603, -951.557, -7.2, 35.34, -90.71, -8.4, -3696.6028);
             if(_GLF_DEAD(false))
              return;
            }
            {
             mat2x4 _GLF_SWITCH_4_44v[15], _GLF_SWITCH_4_45v[9];
             ivec2(36803, -49561);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
            (9110.3733 / mat3x2(-862.209, -1.0, -89.94, -8.1, 777.924, 1440.7612));
           }
          else
           {
            bool _GLF_SWITCH_4_46v;
            while((vec2(-435.575, 34.95) != atan(injectionSwitch)))
             {
             }
            mat2x3 _GLF_SWITCH_4_47v[75], _GLF_SWITCH_4_48v[18];
            bvec4(true, false, false, true);
           }
          case 94:
          ivec4 _GLF_SWITCH_4_49v, _GLF_SWITCH_4_50v[12];
          break;
          default:
          1;
         }
       }
       case 87:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       vec2(1.9, 8.8);
       default:
       1;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     switch(_GLF_SWITCH(0))
      {
       case 20:
       log(radians(vec4(-36.66, 8.9, 5.1, -4.7)));
       case 0:
       case 53:
       case 63:
       case 8:
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       case 49:
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       case 4:
       case 45:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       case 62:
       if(_GLF_DEAD(false))
        return;
       case 46:
       case 70:
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       case 33:
       mat2(-7218.6397, -2.6, -4058.3073, -4.6);
       if(_GLF_DEAD(false))
        barrier();
       default:
       1;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_size.z + 1 < subgroup_size)
  {
   switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(_GLF_IDENTITY(int(0), ~ (~ (int(0)))), int(0)))))))
    {
     case 34:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     {
      if(_GLF_DEAD(false))
       {
        switch(_GLF_SWITCH(0))
         {
          case 42:
          bvec3 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v;
          case 0:
          case 59:
          case 8:
          case 86:
          if(_GLF_DEAD(false))
           return;
          case 50:
          case 60:
          barrier();
          break;
          default:
          1;
         }
       }
      if(_GLF_DEAD(false))
       return;
      if(_GLF_DEAD(false))
       {
        switch(_GLF_SWITCH(0))
         {
          case 57:
          if(_GLF_DEAD(false))
           return;
          -849.683;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
          case 1:
          vec3 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v[51];
          case 0:
          case 42:
          case 30:
          if(_GLF_DEAD(false))
           barrier();
          case 6:
          case 54:
          barrier();
          break;
          default:
          if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
           return;
          1;
         }
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         return;
       }
      switch(_GLF_SWITCH(0))
       {
        case 64:
        bvec3(false, false, false);
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               return;
              return;
             }
            return;
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
          barrier();
         }
        if(_GLF_DEAD(false))
         {
          switch(_GLF_SWITCH(0))
           {
            case 0:
            case 2:
            if(_GLF_DEAD(false))
             barrier();
            case 34:
            barrier();
            break;
            case 35:
            mat4x2 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v[32];
            case 15:
            ;
            default:
            1;
           }
         }
        if(_GLF_DEAD(false))
         {
          switch(_GLF_SWITCH((0 | 0)))
           {
            case 54:
            ;
            case 78:
            bool _GLF_SWITCH_5_0v[54];
            case 0:
            switch(_GLF_SWITCH(0))
             {
              case 12:
              -3410;
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 return;
                barrier();
               }
              if(_GLF_DEAD(false))
               barrier();
              case 53:
              mat3 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v;
              case 0:
              case 23:
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 return;
                barrier();
               }
              case 30:
              case 52:
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 return;
                return;
               }
              if(_GLF_DEAD(false))
               barrier();
              case 70:
              case 39:
              if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true)), true, true))))))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 return;
                barrier();
               }
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
               {
                if(_GLF_DEAD(false))
                 return;
                return;
               }
              case 86:
              case 87:
              case 22:
              if(_GLF_DEAD(false))
               return;
              return;
              if(_GLF_DEAD(false))
               return;
              break;
              default:
              if(_GLF_DEAD(false))
               {
                switch(_GLF_SWITCH(0))
                 {
                  case 49:
                  _GLF_SWITCH_3_1v[1];
                  case 0:
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
                     barrier();
                    return;
                   }
                  barrier();
                  break;
                  case 5:
                  uvec3(56965u, 21997u, 92157u);
                  default:
                  1;
                 }
               }
              1;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 return;
                barrier();
               }
             }
            break;
            case 89:
            true;
            default:
            1;
           }
         }
        case 32:
        if(_GLF_DEAD(false))
         return;
        if(_GLF_DEAD(false))
         return;
        bool _GLF_SWITCH_1_0v;
        case 0:
        case 69:
        case 59:
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(false))
           return;
          return;
         }
        if(_GLF_DEAD(false))
         return;
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         return;
        if(_GLF_DEAD(false))
         return;
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
          barrier();
          if(_GLF_DEAD(false))
           return;
         }
        if(_GLF_DEAD(false))
         return;
        case 73:
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(false))
           return;
          return;
         }
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         return;
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(false))
           return;
          barrier();
         }
        break;
        case 91:
        for(        ivec3(57799, -92005, -83945);
 false; injectionSwitch)
         {
          injectionSwitch.yyyx;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           continue;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             return;
            continue;
           }
          bvec3(false, false, true);
          ;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             break;
            barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               continue;
              return;
             }
           }
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             continue;
            if(_GLF_DEAD(false))
             barrier();
            break;
           }
          mat2x4 _GLF_SWITCH_1_1v[57];
          vec4(989.478, 273.459, 4415.7846, -5.3);
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
          mat4 _GLF_SWITCH_1_2v, _GLF_SWITCH_1_3v;
          if(_GLF_DEAD(false))
           return;
          ivec4 _GLF_SWITCH_1_4v, _GLF_SWITCH_1_5v;
         }
        default:
        if(_GLF_DEAD(false))
         return;
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
          return;
         }
        if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
         return;
        1;
       }
     }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     case 24:
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     vec2 _GLF_SWITCH_0_0v;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     case 0:
     case 21:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     case 29:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     case 3:
     if(_GLF_DEAD(false))
      return;
     case 16:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     atomicStore(checker[virtual_gid], GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_size.y, 4, 64, 4);
     case 26:
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     case 50:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     case 20:
     if(_GLF_DEAD(false))
      return;
     case 36:
     subgroupAll(false);
     break;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     default:
     1;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       switch(_GLF_SWITCH((0 ^ 0)))
        {
         case 88:
         uint _GLF_SWITCH_4_0v;
         case 0:
         switch(_GLF_SWITCH(_GLF_IDENTITY(0, max(0, 0))))
          {
           case 0:
           case 14:
           case 62:
           if(_GLF_DEAD(false))
            return;
           case 64:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           case 30:
           case 60:
           case 84:
           case 80:
           case 53:
           return;
           break;
           case 50:
           {
            max(ivec4(-4241, -99105, 92222, 10030), 27156);
            uvec3(138932u, 8953u, 136570u);
            (5.9 == -7062.8129);
            bvec3(true, false, true);
            ;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            int _GLF_SWITCH_3_0v[5];
            uvec2(44146u, 96055u)[1];
            if(_GLF_DEAD(false))
             return;
            mat4x2 _GLF_SWITCH_3_1v;
            bvec3 _GLF_SWITCH_3_2v, _GLF_SWITCH_3_3v;
           }
           if(_GLF_DEAD(false))
            return;
           default:
           1;
          }
         break;
         case 23:
         if(_GLF_DEAD(false))
          return;
         for(uint _GLF_SWITCH_4_1v[1]; true; -33596)
          {
           bvec4(true, false, false, true);
           mat2(-442.312, 2.7, -2.8, 3.4);
          }
         case 49:
         if(_GLF_DEAD(false))
          return;
         {
          mat3(-5.3, 4.5, 74.96, 85.70, -5.1, -2.3, -3888.3764, -9.3, 2.1);
          uvec2 _GLF_SWITCH_4_2v;
          uvec3 _GLF_SWITCH_4_3v;
         }
         default:
         1;
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     switch(_GLF_SWITCH((0 & 28769)))
      {
       case 26:
       if(false)
        {
         while(true)
          {
           mat3x2 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v;
           ;
           mat2 _GLF_SWITCH_5_3v[54];
          }
         mat4x3(355.025, -3.0, 0.8, -955.692, 133.241, 2.6, -2.3, 8.7, -908.684, 93.50, -28.81, -149.614);
         if(true)
          {
           ;
           mat3x2(mat4(7.8, 0.9, 6.8, 21.67, 16.58, -606.259, 805.062, 9895.1275, -8.6, 3.7, 7.5, 2.3, -7.2, 2.3, 90.38, -1.6));
           bvec3(false, true, true);
           (0.5 * injectionSwitch);
           vec2 _GLF_SWITCH_5_4v, _GLF_SWITCH_5_5v;
          }
         ;
         int _GLF_SWITCH_5_6v;
         bvec2 _GLF_SWITCH_5_7v, _GLF_SWITCH_5_8v, _GLF_SWITCH_5_9v;
         mat2x3 _GLF_SWITCH_5_10v;
         while(false)
          {
          }
         while(lessThanEqual(vec4(994.194, -515.754, 21.66, -2783.8659), vec4(-868.865, -6.5, 491.080, -77.72)).z)
          {
           (vec3(-1.5, 5566.1119, 9194.3930) / -9161.3152);
           ;
           bool _GLF_SWITCH_5_11v, _GLF_SWITCH_5_12v;
           inverse(mat3(-815.133, 762.781, -377.107, 5445.6781, 160.251, -3525.0973, 26.23, -9.6, -8.8));
           bvec4 _GLF_SWITCH_5_13v[59], _GLF_SWITCH_5_14v;
           mat2(3583.7034, 4.3, 5.5, -161.739);
           mat4x2 _GLF_SWITCH_5_15v, _GLF_SWITCH_5_16v, _GLF_SWITCH_5_17v[67];
          }
        }
       case 41:
       {
        if(true)
         {
          uvec4 _GLF_SWITCH_5_18v, _GLF_SWITCH_5_19v[57];
          uvec2 _GLF_SWITCH_5_20v, _GLF_SWITCH_5_21v[25], _GLF_SWITCH_5_22v;
          (7.6 / (mat2(-113.391, -3.0, -495.296, 1.8)));
          mat3x2 _GLF_SWITCH_5_23v;
          mat3x4 _GLF_SWITCH_5_24v;
          mat3 _GLF_SWITCH_5_25v;
          mat4x2(-7.8, -5.7, 563.329, -6.9, 3.4, 690.837, 986.015, -8.5);
          next_virtual_gid;
          vec3 _GLF_SWITCH_5_26v[54], _GLF_SWITCH_5_27v, _GLF_SWITCH_5_28v;
         }
        else
         {
          mat2x4(556.817, 0.8, 3.9, 9.8, 355.976, 6685.4664, 1.4, -723.229);
          (outerProduct(injectionSwitch, (vec4(-3931.5995, -4.4, -82.60, -0.9))) * mat2x4(vec4(5.6, 4994.0949, 1755.9009, -0.3), vec4(-2.3, -8378.4338, 4884.1480, 8.2)));
          ivec4 _GLF_SWITCH_5_29v, _GLF_SWITCH_5_30v[19], _GLF_SWITCH_5_31v;
         }
        bvec4 _GLF_SWITCH_5_32v, _GLF_SWITCH_5_33v, _GLF_SWITCH_5_34v[37];
        do
         {
          ivec3(84907, -68688, 32376);
          bvec4 _GLF_SWITCH_5_35v, _GLF_SWITCH_5_36v;
          length(-9274.8769);
          max((true ? ivec4(-46693, -32076, 79730, 89408) : ivec4(-82394, -78863, -2381, 55664)), -79326);
          mat2x3 _GLF_SWITCH_5_37v[70];
         }
        while(true);
        {
         ivec4(48410, -1009, 2971, -4309);
        }
        ivec4 _GLF_SWITCH_5_38v, _GLF_SWITCH_5_39v[45], _GLF_SWITCH_5_40v;
       }
       case 0:
       case 48:
       case 60:
       case 81:
       case 10:
       case 76:
       switch(_GLF_SWITCH(0))
        {
         case 0:
         case 21:
         case 1:
         if(_GLF_DEAD(false))
          return;
         barrier();
         break;
         case 61:
         (89480 & 22536);
         case 3:
         (GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_size / GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_size.w);
         default:
         1;
         if(_GLF_DEAD(false))
          return;
        }
       break;
       case 34:
       mat2(mat4(vec4(-476.277, -1.9, -4105.1185, 63.13), sign(vec4(-736.984, -6704.9297, -19.16, -0.0)), (vec4(6.3, -8.4, 3.7, -0.4) - 173.457), vec4(-400.162, 64.12, -999.431, 686.559)));
       default:
       1;
      }
    }
   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
    {
     case 99:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     injectionSwitch;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     case 0:
     if(_GLF_DEAD(false))
      barrier();
     case 32:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     case 52:
     case 22:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     case 39:
     switch(_GLF_SWITCH(0))
      {
       case 37:
       vec4(-4430.8579, -6.3, 2.0, -8073.2132);
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
          {
           case 0:
           if(_GLF_DEAD(false))
            return;
           case 4:
           case 13:
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             switch(_GLF_SWITCH(0))
              {
               case 67:
               ivec4 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v;
               case 12:
               uint _GLF_SWITCH_3_2v, _GLF_SWITCH_3_3v;
               case 0:
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 barrier();
                }
               if(_GLF_DEAD(false))
                return;
               case 9:
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 return;
                }
               case 96:
               case 48:
               case 35:
               case 75:
               case 95:
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                return;
               case 15:
               case 46:
               case 47:
               if(_GLF_DEAD(false))
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 22:
                   uvec2(118148u, 68486u);
                   case 14:
                   mat3x4 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v;
                   case 0:
                   case 71:
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      return;
                     return;
                    }
                   case 4:
                   case 12:
                   case 38:
                   case 78:
                   case 10:
                   case 32:
                   barrier();
                   break;
                   default:
                   1;
                  }
                }
               return;
               break;
               case 2:
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                return;
               85198;
               default:
               1;
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           case 97:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           case 89:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
           break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
                return;
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           case 26:
           if(_GLF_DEAD(false))
            return;
           for(ivec3 _GLF_SWITCH_2_0v; false; (mat4x3(3.0, -810.503, 7230.9130, -1.5, -31.13, 6.3, 72.76, -3379.4562, 7.3, 112.291, -148.037, -6.8) * mat4(-42.12, -9331.4468, -332.387, -20.52, -5.0, 2.5, 856.541, -5.1, -1.6, -8679.8714, 66.62, 9.1, -4847.8600, 7857.5190, -1.9, 9.5)))
            {
             switch(_GLF_SWITCH(0))
              {
               case 13:
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), false || (bool(bvec3(false, true, false)))))))
                  return;
                 barrier();
                }
               if(_GLF_DEAD(false))
                return;
               ivec4(65014, -29306, -12470, -39194);
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                return;
               case 0:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               case 43:
               if(_GLF_DEAD(false))
                return;
               case 69:
               case 37:
               case 89:
               case 92:
               case 90:
               case 84:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               float _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v;
               case 71:
               (true ? bvec4(false, true, true, true) : lessThan(vec4(557.930, 9.1, -651.491, 8.4), mod(vec4(-1.6, 7.8, -7.3, -24.49), _GLF_SWITCH_2_1v)));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               break;
               if(_GLF_DEAD(false))
                return;
               case 8:
               vec2 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v;
               default:
               1;
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           case 42:
           for(vec4 _GLF_SWITCH_2_3v[19]; bvec2(false, true)[0]; uvec3(12328u, 34774u, 197065u))
            {
            }
           default:
           1;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
              return;
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       case 0:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       case 61:
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         switch(_GLF_SWITCH((0 ^ 0)))
          {
           case 3:
           ivec2 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v;
           case 81:
           mat3x4 _GLF_SWITCH_5_3v, _GLF_SWITCH_5_4v, _GLF_SWITCH_5_5v;
           case 0:
           case 68:
           case 39:
           case 16:
           case 86:
           case 50:
           if(_GLF_DEAD(false))
            return;
           case 77:
           return;
           break;
           case 79:
           (read --);
           case 41:
           int _GLF_SWITCH_5_6v[37], _GLF_SWITCH_5_7v[24], _GLF_SWITCH_5_8v;
           default:
           1;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         switch(_GLF_SWITCH(0))
          {
           case 28:
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))))))
            return;
           ivec4(66405, 68287, -83095, 47427);
           case 12:
           mat2 _GLF_SWITCH_4_0v;
           case 0:
           case 99:
           case 59:
           case 11:
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           case 14:
           return;
           break;
           case 94:
           -91871;
           default:
           1;
          }
        }
       case 62:
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       case 53:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       atomicStore(checker[virtual_gid], GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_size.y, 4, 64, 4);
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       case 87:
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        return;
       if(_GLF_DEAD(false))
        return;
       case 95:
       case 27:
       if(_GLF_DEAD(false))
        barrier();
       subgroupAll(true);
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       default:
       1;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     break;
     case 69:
     (true ? mat4(7590.4770, -5.2, 2072.8896, -66.47, -6.8, 5171.8950, 4.2, -6054.9279, -4.4, 0.2, 0.9, 1006.1508, -442.008, 3.0, 8.9, -34.95) : outerProduct(vec4(696.950, 0.9, 7.7, 9.2), vec4(-184.759, -9.9, -1.5, 8385.6393)));
     case 43:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     for(mat4x3 _GLF_SWITCH_2_0v[89]; true; (bvec2(false, true) == bvec2(false, false)))
      {
       mat2 _GLF_SWITCH_2_1v[71];
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       mix(uvec2(94735u, 64529u), (uvec2(85004u, 110549u) << uvec2(100762u, 38949u)), bvec2(true, false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       ;
       7088.7588;
       for(       step(-3.8, 4.2);
 bvec2(bvec4(false, true, true, true)).t; mat3x2(92.12, 1922.9484, 29.82, -1.9, -0.3, 912.302))
        {
         switch(_GLF_SWITCH(0))
          {
           case 0:
           case 27:
           for(uvec4 _GLF_SWITCH_2_2v, _GLF_SWITCH_2_3v; true; (bvec3(false, true, true).y , (mat4x2(1.6, 1016.5264, -6.9, 7.0, -3.2, -9536.0087, 9.5, 2.3) * mat3x4(5.8, -1.7, 9031.9823, -2542.6731, 8.4, -9409.9730, 2.4, -3.8, 4702.7312, -5.6, -14.72, -68.78))))
            {
            }
           case 78:
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            continue;
           case 56:
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           bvec3(true, false, true);
           case 76:
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            continue;
           ;
           mat3(0.5, -0.7, -1809.9996, -0.8, -8.2, -70.96, 9.6, 4645.2400, 6076.8105);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           bvec2(false, false);
           break;
           case 35:
           normalize(307.957);
           case 9:
           mat4((mat3x4(2469.2805, 5.6, 669.307, -1.2, -9.2, 6.8, -87.94, -1.0, 3.8, -4.4, -6.0, 38.78) , mat4x3(-2786.1765, -3309.6267, 97.66, 560.519, 3965.3672, -6.8, 4438.4582, -3.3, -1.3, 46.07, -291.145, 992.307)));
           default:
           1;
          }
        }
       if(_GLF_DEAD(false))
        continue;
       uvec3(113980u, 160687u, 78348u);
       (mat3x2(-888.924, 9632.4971, -6.3, -7.5, 46.25, -63.07) - -839.212);
       if(_GLF_DEAD(false))
        break;
       for(ivec3 _GLF_SWITCH_2_4v, _GLF_SWITCH_2_5v, _GLF_SWITCH_2_6v[12]; false; float(workgroup_base))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         vec3(-2.3, -584.958, -8.3);
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           continue;
          }
         for(uvec2 _GLF_SWITCH_2_7v; false; uvec3(163617u, 73343u, 140299u))
          {
           switch(_GLF_SWITCH(0))
            {
             case 0:
             mat2(5.0, -9.5, -556.626, 2.3);
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             ;
             (mat3(-6394.0352, 9.8, -75.20, 0.2, -2.6, 8983.6965, 73.51, -509.477, -618.259) - -87.29);
             if(_GLF_DEAD(false))
              barrier();
             uvec3 _GLF_SWITCH_2_8v, _GLF_SWITCH_2_9v;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               return;
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               barrier();
              }
             mat3(-223.580, -74.62, 4.1, -8.2, 8.5, 598.032, -383.395, -234.969, -7447.4527);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             (40842 / ivec4(37074, 25408, -30053, 5156));
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              return;
             uvec3(72558u, 166204u, 69175u);
             break;
             default:
             1;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          break;
         mat4 _GLF_SWITCH_2_10v;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         do
          {
           switch(_GLF_SWITCH(0))
            {
             case 77:
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              continue;
             ((mat3x2(-49.93, 9461.0400, 424.344, -32.17, -0.6, -7.0) / -25.16) == mat3x2(6071.8033, -72.90, -48.11, 109.952, -9955.7268, 39.70));
             case 22:
             ;
             case 0:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             switch(_GLF_SWITCH(0))
              {
               case 0:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               ;
               case 72:
               case 14:
               case 35:
               mat4x3(65.18, -632.793, -869.571, -8111.6030, 0.6, -347.222, -497.577, -9.5, -1.8, -8.5, 3838.3228, 8558.4131);
               case 93:
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 switch(_GLF_SWITCH((0 ^ 0)))
                  {
                   case 95:
                   uvec3(173985u, 47491u, 26762u);
                   case 0:
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                     barrier();
                    }
                   case 21:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      return;
                     return;
                    }
                   case 45:
                   case 16:
                   barrier();
                   break;
                   case 24:
                   mat2 _GLF_SWITCH_4_0v;
                   default:
                   1;
                  }
                }
               break;
               case 57:
               mat2x4(4.7, -0.7, -59.53, 9321.2919, -62.69, 487.317, 262.410, -77.74);
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                break;
               case 62:
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               mat4x2(-6.0, -3.1, -80.06, 5487.3183, 7.4, -4.8, -257.066, -4289.3317);
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               default:
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               1;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             break;
             case 17:
             mat2(-996.647, 96.39, 193.282, 2057.1387);
             default:
             1;
             if(_GLF_DEAD(false))
              continue;
            }
          }
         while(greaterThan(vec4(6173.1720, 65.51, 82.71, -805.549), vec4(96.85, 5.1, -3.6, 71.96)).a);
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          break;
         transpose(mat3x2(-325.085, -15.06, -99.22, -207.672, 6.0, -335.985));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           continue;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           barrier();
          }
         {
          switch(_GLF_SWITCH(0))
           {
            case 0:
            uvec2(51980u, 120438u);
            float _GLF_SWITCH_2_11v[32], _GLF_SWITCH_2_12v, _GLF_SWITCH_2_13v;
            break;
            default:
            1;
           }
         }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              break;
             break;
             if(_GLF_DEAD(false))
              break;
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         for(         inversesqrt(injectionSwitch);
 true; usubBorrow(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_size, (uvec4(3413u, 45375u, 96498u, 106710u) | workgroup_size), GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_size))
          {
           distance(injectionSwitch, vec2(7647.3670, -7199.6710));
           if(_GLF_DEAD(false))
            return;
          }
         ivec2(1495, -12502);
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         while((floatBitsToInt(-3697.0870) < -87609))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             barrier();
            }
           ;
           ;
           -32178;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             barrier();
            }
           vec4(9.0, -1.7, 9.5, 0.8);
           if(_GLF_DEAD(false))
            break;
           bitfieldReverse(subgroup_id);
           vec4 _GLF_SWITCH_2_14v, _GLF_SWITCH_2_15v[1], _GLF_SWITCH_2_16v;
           mat2x3 _GLF_SWITCH_2_17v[33];
           if(_GLF_DEAD(false))
            continue;
           mat3(211.601, -506.598, 6.6, -4.8, -2.9, -65.95, -8182.2762, -5.4, -193.913);
           if(_GLF_DEAD(false))
            break;
           mat4x3(6892.5400, 5.4, -8.4, -2.6, -4.0, -9258.8182, -5.4, -83.28, 7.1, -8735.4862, 6957.4799, 8390.4217);
          }
        }
       {
        while(true)
         {
          if(_GLF_DEAD(false))
           continue;
          bvec2 _GLF_SWITCH_2_18v, _GLF_SWITCH_2_19v;
          mat3(-3.4, -9.1, 8588.2926, -5736.9701, -0.9, -724.642, -3.5, -130.515, 1915.2814);
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           break;
          ivec4 _GLF_SWITCH_2_20v;
          mat3x2(9.0, 194.041, 4.3, 2.8, 0.4, -4.2);
         }
        {
         switch(_GLF_SWITCH(0))
          {
           case 52:
           if(_GLF_DEAD(false))
            break;
           int _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v;
           case 0:
           case 51:
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           case 74:
           case 42:
           if(_GLF_DEAD(false))
            barrier();
           uvec4 _GLF_SWITCH_2_21v, _GLF_SWITCH_2_22v;
           case 66:
           case 48:
           if(_GLF_DEAD(false))
            break;
           uint _GLF_SWITCH_2_23v;
           bvec4 _GLF_SWITCH_2_24v, _GLF_SWITCH_2_25v;
           if(_GLF_DEAD(false))
            continue;
           case 70:
           (mat4x3(5.8, -37.78, 47.91, -9642.5268, -4.8, -192.541, 6.2, -0.4, -637.844, 2.2, -4901.0596, 2800.8592) - mat4x3(-76.21, -987.434, -5.3, -2.8, 2921.8459, 1788.8954, -414.057, 2709.7594, -9865.4318, -1.4, -6892.8457, 987.505));
           case 35:
           (vec4(-9.6, -24.70, 425.089, 4.4) + (mat2x3(-3423.7323, 58.28, 60.04, -8.0, -3.0, -6.2) , -2.3));
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            continue;
           case 38:
           if(_GLF_DEAD(false))
            break;
           mat3(206.039, 9565.1606, 405.916, 4.8, 6687.4396, 9.3, -8.1, 2.4, 37.69);
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           break;
           case 98:
           mat3(-84.40, 28.00, -6644.2474, -1.1, 27.18, -334.779, -7649.6238, -2.3, -697.919);
           case 36:
           ;
           default:
           1;
          }
        }
        if(_GLF_DEAD(false))
         break;
        mat4x2(-78.43, 40.86, -4927.1584, 9.8, -615.668, 10.50, 7235.0508, -9259.7187);
        if(_GLF_DEAD(false))
         barrier();
        while((distance(vec4(9.5, 46.93, 1.2, 74.11), vec4(-8.0, 432.178, 5974.7376, 773.588)) < 8.7))
         {
          bvec4(true, false, false, false);
          if(_GLF_DEAD(false))
           return;
          mat3x4 _GLF_SWITCH_2_26v[91];
          ;
          bvec4 _GLF_SWITCH_2_27v, _GLF_SWITCH_2_28v[59], _GLF_SWITCH_2_29v;
          ;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             break;
            return;
           }
          uint _GLF_SWITCH_2_30v;
         }
        bvec3(false, true, true);
        if(_GLF_DEAD(false))
         break;
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(false))
           break;
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           break;
          return;
         }
        if(_GLF_DEAD(false))
         return;
        bvec3 _GLF_SWITCH_2_31v, _GLF_SWITCH_2_32v, _GLF_SWITCH_2_33v;
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         continue;
        if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           continue;
          barrier();
         }
        for(        mat3(-7108.4586, 4781.4927, -5124.5712, 0.1, -63.75, 25.86, 809.211, 33.34, 5.6);
 bool(read); (+ mat4x2(45.52, -16.20, -8.8, -2.7, 7.2, -0.1, -1331.8024, -5697.4928)))
         {
          mat3 _GLF_SWITCH_2_34v[98];
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             break;
            barrier();
           }
          if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
           continue;
          if(_GLF_DEAD(false))
           break;
          mat2(570.340, -333.050, -6.2, -13.94);
         }
        while((uint(-5.5) > virtual_gid))
         {
          ;
          ;
         }
       }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     default:
     1;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
}
