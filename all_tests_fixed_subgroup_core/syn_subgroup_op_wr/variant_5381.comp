#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id;
 uvec4 GLF_merged4_0_1_11_1_1_11_2_1_14_3_1_12subgroup_idvirtual_gidworkgroup_baseworkgroup_id;
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_size;
 uvec4 GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id;
 uvec3 GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size;
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_11_1_1_11_2_1_14_3_1_12subgroup_idvirtual_gidworkgroup_baseworkgroup_id.x = subgroup_id;
 do
  {
   GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.x = GLF_merged4_0_1_11_1_1_11_2_1_14_3_1_12subgroup_idvirtual_gidworkgroup_baseworkgroup_id.x;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
  {
   GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w = GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.x;
  }
 else
  {
  }
uint subgroup_size = 16;
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_size.w = subgroup_size;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.y = GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_size.w;
  }
 else
  {
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size.y = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_size.y = num_workgroup;
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.y = GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_size.y;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size.z = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.z = workgroup_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged4_0_1_11_1_1_11_2_1_14_3_1_12subgroup_idvirtual_gidworkgroup_baseworkgroup_id.w = GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.z;
  }
 else
  {
  }
 GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.w = GLF_merged4_0_1_11_1_1_11_2_1_14_3_1_12subgroup_idvirtual_gidworkgroup_baseworkgroup_id.w;
 uint workgroup_base = GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size.z * GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.w;
 GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.y = workgroup_base;
 GLF_merged4_0_1_11_1_1_11_2_1_14_3_1_12subgroup_idvirtual_gidworkgroup_baseworkgroup_id.z = GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.y;
 GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.z = GLF_merged4_0_1_11_1_1_11_2_1_14_3_1_12subgroup_idvirtual_gidworkgroup_baseworkgroup_id.z;
 uint virtual_gid = GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.z + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.y + GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size.y;
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((((((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ (int(7)))))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
  {
   GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.x = virtual_gid;
  }
 GLF_merged4_0_1_11_1_1_11_2_1_14_3_1_12subgroup_idvirtual_gidworkgroup_baseworkgroup_id.y = GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.x;
 uint next_virtual_gid = GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.z + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.y + ((GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size.y + 1) % GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.y);
 do
  {
   GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_size.x = next_virtual_gid;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size.x = GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_size.x;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.x = GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size.x;
    }
  }
 atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.x], uint(1), 4, 64, 4);
 uint read = atomicLoad(buf[GLF_merged4_0_1_11_1_1_11_2_1_14_3_1_12subgroup_idvirtual_gidworkgroup_baseworkgroup_id.y], 4, 64, 0);
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_size.z = read;
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.z = GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_size.z;
 if(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size.y + 1 < GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.y)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     atomicStore(checker[GLF_merged4_0_1_11_1_1_11_2_1_14_3_1_12subgroup_idvirtual_gidworkgroup_baseworkgroup_id.y], GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.z, 4, 64, 4);
    }
   subgroupAll(false);
  }
 else
  {
   atomicStore(checker[GLF_merged4_0_1_11_1_1_11_2_1_14_3_1_12subgroup_idvirtual_gidworkgroup_baseworkgroup_id.y], GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.z, 4, 64, 4);
   subgroupAll(true);
  }
}
