#version 460
struct _GLF_struct_15 {
 mat2x3 _f0;
 mat4x2 _f1;
 bvec4 _f2;
 mat4x2 _f3;
 uvec4 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_14 {
 mat3x4 _f0;
 int _f1;
 ivec4 _f2;
 mat2x3 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_13 {
 vec3 _f0;
 uvec3 _f1;
 vec3 _f2;
 vec4 _f3;
 vec2 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_12 {
 mat4x3 _f0;
 bvec2 _f1;
 mat2x3 _f2;
 uvec2 _f3;
 uint _f4;
} ;

struct _GLF_struct_11 {
 int _f0;
} ;

struct _GLF_struct_10 {
 mat3 _f0;
 ivec4 _f1;
 vec4 _f2;
 uvec2 _f3;
 ivec2 _f4;
 int _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_16 {
 vec3 _f0;
 _GLF_struct_10 _f1;
 _GLF_struct_11 _f2;
 _GLF_struct_12 _f3;
 _GLF_struct_13 _f4;
 _GLF_struct_14 _f5;
 _GLF_struct_15 _f6;
} ;

struct _GLF_struct_8 {
 mat3x2 _f0;
 uvec3 _f1;
 ivec3 _f2;
 float _f3;
 uvec3 _f4;
 float _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_7 {
 mat3 _f0;
 float _f1;
 bvec2 _f2;
 mat3 _f3;
 float _f4;
} ;

struct _GLF_struct_9 {
 _GLF_struct_7 _f0;
 int _f1;
 _GLF_struct_8 _f2;
 bvec3 _f3;
 mat4x2 _f4;
 mat4x2 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_5 {
 mat4x3 _f0;
 vec3 _f1;
 int _f2;
 mat4 _f3;
} ;

struct _GLF_struct_6 {
 _GLF_struct_5 _f0;
} ;

struct _GLF_struct_4 {
 mat2x4 _f0;
} ;

struct _GLF_struct_2 {
 mat4 _f0;
} ;

struct _GLF_struct_1 {
 mat2x4 _f0;
 bvec3 _f1;
 mat2x3 _f2;
 uint _f3;
 bvec4 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_0 {
 mat3 _f0;
 mat2 _f1;
 uvec4 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 int _f3;
 bool _f4;
 mat2 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_17 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_9 _f3;
 _GLF_struct_16 _f4;
 uint workgroup_size;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id;
 uvec2 GLF_merged2_0_1_4_1_1_13readsubgroup_size;
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 GLF_merged2_0_1_4_1_1_13readsubgroup_size.y = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(_GLF_struct_3(_GLF_struct_0(mat3(1.0), mat2(1.0), uvec4(1u), mat3x2(1.0)), _GLF_struct_1(mat2x4(1.0), bvec3(true), mat2x3(1.0), 1u, bvec4(true), bvec3(true)), _GLF_struct_2(mat4(1.0)), 1, true, mat2(1.0), mat4x3(1.0)), _GLF_struct_4(mat2x4(1.0)), _GLF_struct_6(_GLF_struct_5(mat4x3(1.0), vec3(1.0), 1, mat4(1.0))), _GLF_struct_9(_GLF_struct_7(mat3(1.0), 1.0, bvec2(true), mat3(1.0), 1.0), 1, _GLF_struct_8(mat3x2(1.0), uvec3(1u), ivec3(1), 1.0, uvec3(1u), 1.0, bvec2(true)), bvec3(true), mat4x2(1.0), mat4x2(1.0), mat2x4(1.0)), _GLF_struct_16(vec3(1.0), _GLF_struct_10(mat3(1.0), ivec4(1), vec4(1.0), uvec2(1u), ivec2(1), 1, uvec2(1u)), _GLF_struct_11(1), _GLF_struct_12(mat4x3(1.0), bvec2(true), mat2x3(1.0), uvec2(1u), 1u), _GLF_struct_13(vec3(1.0), uvec3(1u), vec3(1.0), vec4(1.0), vec2(1.0), ivec2(1)), _GLF_struct_14(mat3x4(1.0), 1, ivec4(1), mat2x3(1.0), mat4x2(1.0)), _GLF_struct_15(mat2x3(1.0), mat4x2(1.0), bvec4(true), mat4x2(1.0), uvec4(1u), mat2(1.0))), gl_WorkGroupSize.x);
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.z = workgroup_id;
 uint workgroup_base = _GLF_struct_replacement_17.workgroup_size * GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.z;
 GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.y = workgroup_base;
 uint virtual_gid = GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_4_1_1_13readsubgroup_size.y + subgroup_local_id;
 GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.x = virtual_gid;
 uint next_virtual_gid = GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_4_1_1_13readsubgroup_size.y + ((subgroup_local_id + 1) % GLF_merged2_0_1_4_1_1_13readsubgroup_size.y);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read = atomicLoad(buf[GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.x], 4, 64, 0);
 GLF_merged2_0_1_4_1_1_13readsubgroup_size.x = read;
 if(subgroup_local_id + 1 < GLF_merged2_0_1_4_1_1_13readsubgroup_size.y)
  {
   atomicStore(checker[GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.x], GLF_merged2_0_1_4_1_1_13readsubgroup_size.x, 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   atomicStore(checker[GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.x], GLF_merged2_0_1_4_1_1_13readsubgroup_size.x, 4, 64, 4);
   subgroupAll(true);
  }
}
