#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), ((! (_GLF_IDENTITY(false, ! (! (false)))))) || false))))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) << 0) << _GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(1, (false ? _GLF_FUZZED((ivec4(-83145, 27991, -80684, -92242) * _injected_loop_counter).p) : 1)) << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), int(ivec4(_GLF_IDENTITY(int(6), int(6)), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))), 1, 0, 0)), ~ (~ (int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), int(ivec4(_GLF_IDENTITY(int(6), int(6)), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))), 1, 0, 0))))))), (min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) << 0) << _GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(1, (false ? _GLF_FUZZED((ivec4(-83145, 27991, -80684, -92242) * _injected_loop_counter).p) : 1)) << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), int(ivec4(_GLF_IDENTITY(int(6), int(6)), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))), 1, 0, 0)), ~ (~ (int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), int(ivec4(_GLF_IDENTITY(int(6), int(6)), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))), 1, 0, 0)))))))) >> 0))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, 1, 1, 1))) > _GLF_IDENTITY((_GLF_IDENTITY(0 | 0, (0 | 0) ^ 0)), 0 | _GLF_IDENTITY(((0 | 0)), int(int(((0 | 0))))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) && true)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) && true)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) && true)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec4(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, true, true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 1.0, 1.0, 1.0)))))).x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (! (true)))))), (bool(bvec3(false, false, _GLF_IDENTITY(true, (true) && true)))) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED((-7303.1050 / 5256.4367)))) > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))))) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))) || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)), ~ (~ _GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY(uvec3(uvec4((gl_WorkGroupSize), 1u)), (uvec3(uvec4((gl_WorkGroupSize), 1u))) / uvec3(1u, 1u, 1u))))), (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)).x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(64.82)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) / cos(vec2(0.0, 0.0))), min(injectionSwitch, injectionSwitch)).x), bool(true))) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 0.0, 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(64.82)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) / cos(vec2(0.0, 0.0))), min(injectionSwitch, injectionSwitch)).x), bool(true))) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 0.0, 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y))))))))))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))), injectionSwitch)).x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(64.82)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) / cos(vec2(0.0, 0.0))), min(injectionSwitch, injectionSwitch)).x), bool(true))) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 0.0, 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y)))))))))))))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))), false)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), clamp((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) + vec2(0.0, 0.0)).x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y)) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))) || false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) || false))), true && _GLF_IDENTITY((false), bool(bvec3((false), false, false)))))), bool(bvec2(false, false)))))))) || false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, (false) && true))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && true)))) || false))), true && _GLF_IDENTITY((false), bool(bvec3((false), false, false)))))), bool(bvec2(false, false)))))))) || false))))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))), false || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), (false ? _GLF_FUZZED(-5.1) : float(injectionSwitch.x))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(908.588, max(_GLF_IDENTITY(908.588, clamp(908.588, 908.588, 908.588)), 908.588)), -4.3)) : _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(-9.3) : injectionSwitch[0])), injectionSwitch[1])), injectionSwitch), max(_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch), max(min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(1)))))])), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (true ? vec2(injectionSwitch[0], injectionSwitch[1]) : _GLF_FUZZED(vec2(521.945, -12.65)))), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) * vec2(1.0, 1.0))))), max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) * mat2(1.0))))[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(94.55))), _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]) / 1.0, min((injectionSwitch[1]) / 1.0, (injectionSwitch[1]) / 1.0)))) / 1.0)))[0], injectionSwitch[1])))), injectionSwitch)))).y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], (_GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) | (gl_WorkGroupID[2]))) * 1u))).x, _GLF_IDENTITY((gl_WorkGroupID.x) | 0u, _GLF_IDENTITY(((gl_WorkGroupID.x) | 0u) - 0u, (((gl_WorkGroupID.x) | 0u) - 0u) / 1u)));
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(0u + (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(0u + (workgroup_size * workgroup_id), (0u + (workgroup_size * workgroup_id)) - 0u))))), ~ (~ ((_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(0u + (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(0u + (workgroup_size * workgroup_id), (0u + (workgroup_size * workgroup_id)) - 0u)))))))) / _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) | (1u)))));
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(true, ! (! (true))) ? subgroup_id : _GLF_FUZZED(subgroup_size))) * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) - _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) >> 0u, ((0u) >> 0u) ^ 0u)), 0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(1u * (0u), (1u * (0u)) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, 1u * (0u))), 0u + (~ (_GLF_IDENTITY(0u, 1u * (0u)))))))) >> 0u), max(0u, 0u))))) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((subgroup_id), clamp((subgroup_id), _GLF_IDENTITY((subgroup_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((subgroup_id))), (subgroup_id)))) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | 0u), 0u | (workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((subgroup_id), clamp((subgroup_id), _GLF_IDENTITY((subgroup_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((subgroup_id))), (subgroup_id)))) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (workgroup_base) | 0u) + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) >> 0u))))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)) : _GLF_FUZZED(num_workgroup), 0u | (true ? _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), clamp(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup)))))))))), max(subgroup_local_id, subgroup_local_id))) / 1u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)) : _GLF_FUZZED(num_workgroup), 0u | (true ? _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)) : _GLF_FUZZED(num_workgroup))))), max(subgroup_local_id, subgroup_local_id))) / 1u) : _GLF_FUZZED(uvec2(166818u, 148013u)[0]))) + 1) % subgroup_size), max(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) / 1u) + _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | 0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), subgroup_size))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size))), ~ (~ ((_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size))))))) / 1u) - uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) / 1u) + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) / 1u) + 1)))) % subgroup_size))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))));
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), 0 + (int(int(4))))), 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, true)), true && (bool(bvec4(_GLF_DEAD(false), false, false, true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, bool(bvec2(false, true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-94.40)), vec2(_GLF_FUZZED(9.1), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true))))).y, false || (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))))))), bool(bool(! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))))))))))), (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)), true && (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.6)), bool(false)))), float(_GLF_FUZZED(-2.5)), bool(false))) > injectionSwitch.y)))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(-1.6, min(-1.6, _GLF_IDENTITY(-1.6, float(vec2(-1.6, 0.0))))))), bool(false)))), _GLF_IDENTITY(float(_GLF_FUZZED(-2.5)), max(float(_GLF_FUZZED(-2.5)), _GLF_IDENTITY(float(_GLF_FUZZED(-2.5)), (false ? _GLF_FUZZED(-6416.6671) : _GLF_IDENTITY(float(_GLF_FUZZED(-2.5)), (float(_GLF_FUZZED(-2.5))) * 1.0))))), bool(false))) > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.6)), bool(false)))), max(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.6)), bool(false)))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.6)), bool(false)))))), float(_GLF_FUZZED(-2.5)), bool(false))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(vec3(9.6, -76.46, 87.29)[1]) : injectionSwitch.x)), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.6)), bool(false)))), max(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.6)), bool(false)))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.6)), bool(false)))))), float(_GLF_FUZZED(-2.5)), bool(false))) > injectionSwitch.y)))))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.0) : injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (true) || false) ? injectionSwitch : _GLF_FUZZED(vec2(-3.9, 3393.0535)))) : _GLF_FUZZED(round(intBitsToFloat(ivec2(_GLF_IDENTITY(10115, (10115) | 0), 7344)))))).y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), true, true)))))))) && true)) || false, true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.6)), bool(false)))), float(_GLF_FUZZED(-2.5)), bool(false))) > injectionSwitch.y)))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(-1.6, min(-1.6, _GLF_IDENTITY(-1.6, float(vec2(-1.6, 0.0))))))), bool(false)))), _GLF_IDENTITY(float(_GLF_FUZZED(-2.5)), max(float(_GLF_FUZZED(-2.5)), _GLF_IDENTITY(float(_GLF_FUZZED(-2.5)), (false ? _GLF_FUZZED(-6416.6671) : _GLF_IDENTITY(float(_GLF_FUZZED(-2.5)), (float(_GLF_FUZZED(-2.5))) * 1.0))))), bool(false))) > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.6)), bool(false)))), max(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.6)), bool(false)))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.6)), bool(false)))))), float(_GLF_FUZZED(-2.5)), bool(false))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(vec3(9.6, -76.46, 87.29)[1]) : injectionSwitch.x)), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.6)), bool(false)))), max(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.6)), bool(false)))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.6)), bool(false)))))), float(_GLF_FUZZED(-2.5)), bool(false))) > injectionSwitch.y)))))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.0) : injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (true) || false) ? injectionSwitch : _GLF_FUZZED(vec2(-3.9, 3393.0535)))) : _GLF_FUZZED(round(intBitsToFloat(ivec2(_GLF_IDENTITY(10115, (10115) | 0), 7344)))))).y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), true, true)))))))) && true)) || false, bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.6)), bool(false)))), float(_GLF_FUZZED(-2.5)), bool(false))) > injectionSwitch.y)))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(-1.6, min(-1.6, _GLF_IDENTITY(-1.6, float(vec2(-1.6, 0.0))))))), bool(false)))), _GLF_IDENTITY(float(_GLF_FUZZED(-2.5)), max(float(_GLF_FUZZED(-2.5)), _GLF_IDENTITY(float(_GLF_FUZZED(-2.5)), (false ? _GLF_FUZZED(-6416.6671) : _GLF_IDENTITY(float(_GLF_FUZZED(-2.5)), (float(_GLF_FUZZED(-2.5))) * 1.0))))), bool(false))) > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.6)), bool(false)))), max(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.6)), bool(false)))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.6)), bool(false)))))), float(_GLF_FUZZED(-2.5)), bool(false))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(vec3(9.6, -76.46, 87.29)[1]) : injectionSwitch.x)), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.6)), bool(false)))), max(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.6)), bool(false)))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.6)), bool(false)))))), float(_GLF_FUZZED(-2.5)), bool(false))) > injectionSwitch.y)))))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.0) : injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (true) || false) ? injectionSwitch : _GLF_FUZZED(vec2(-3.9, 3393.0535)))) : _GLF_FUZZED(round(intBitsToFloat(ivec2(_GLF_IDENTITY(10115, (10115) | 0), 7344)))))).y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), true, true)))))))) && true)) || false, false, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.6)), bool(false)))), float(_GLF_FUZZED(-2.5)), bool(false))) > injectionSwitch.y)))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(-1.6, min(-1.6, _GLF_IDENTITY(-1.6, float(vec2(-1.6, 0.0))))))), bool(false)))), _GLF_IDENTITY(float(_GLF_FUZZED(-2.5)), max(float(_GLF_FUZZED(-2.5)), _GLF_IDENTITY(float(_GLF_FUZZED(-2.5)), (false ? _GLF_FUZZED(-6416.6671) : _GLF_IDENTITY(float(_GLF_FUZZED(-2.5)), (float(_GLF_FUZZED(-2.5))) * 1.0))))), bool(false))) > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.6)), bool(false)))), max(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.6)), bool(false)))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.6)), bool(false)))))), float(_GLF_FUZZED(-2.5)), bool(false))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(vec3(9.6, -76.46, 87.29)[1]) : injectionSwitch.x)), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.6)), bool(false)))), max(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.6)), bool(false)))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.6)), bool(false)))))), float(_GLF_FUZZED(-2.5)), bool(false))) > injectionSwitch.y)))))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.0) : injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (true) || false) ? injectionSwitch : _GLF_FUZZED(vec2(-3.9, 3393.0535)))) : _GLF_FUZZED(round(intBitsToFloat(ivec2(_GLF_IDENTITY(10115, (10115) | 0), 7344)))))).y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), true, true)))))))) && true)) || false, false, false))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))), true && (bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4186.4883)), float(injectionSwitch.y), bool(true))))), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4186.4883)), float(injectionSwitch.y), bool(true))))), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4186.4883)), float(injectionSwitch.y), bool(true))))), false), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4186.4883)), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(true))))), false), false))))))))), false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), ~ (~ (uint(1)))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(1), ~ (~ (uint(1)))), _GLF_IDENTITY(min(_GLF_IDENTITY(uint(1), ~ (~ (uint(1)))), _GLF_IDENTITY(uint(1), ~ (~ (uint(1))))), max(min(_GLF_IDENTITY(uint(1), ~ (_GLF_IDENTITY(~ (uint(1)), (_GLF_IDENTITY(~ (uint(1)), max(~ (uint(1)), ~ (uint(1))))) << 0u))), _GLF_IDENTITY(uint(1), ~ (~ (uint(1))))), min(_GLF_IDENTITY(uint(1), ~ (~ (uint(1)))), _GLF_IDENTITY(uint(1), ~ (~ (uint(1)))))))) : _GLF_FUZZED(_GLF_IDENTITY(atomicAnd(subgroup_local_id, uvec3(_GLF_IDENTITY(44462u, _GLF_IDENTITY((false ? _GLF_FUZZED(113277u) : 44462u), min(_GLF_IDENTITY((false ? _GLF_FUZZED(113277u) : 44462u), ((false ? _GLF_FUZZED(113277u) : 44462u)) * 1u), (false ? _GLF_FUZZED(113277u) : 44462u)))), 146213u, 179928u).y), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (atomicAnd(subgroup_local_id, uvec3(_GLF_IDENTITY(44462u, _GLF_IDENTITY(uint(uvec2(44462u, 1u)), 0u | (uint(uvec2(44462u, 1u))))), 146213u, 179928u).y)), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(~ (~ (uint(3u))), max(~ (~ (uint(3u))), _GLF_IDENTITY(~ (~ (uint(3u))), (~ (~ (uint(3u)))) | 0u)))))) * (~ (atomicAnd(subgroup_local_id, _GLF_IDENTITY(uvec3(44462u, 146213u, 179928u).y, uint(uvec2(uvec3(44462u, 146213u, 179928u).y, 0u)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (atomicAnd(subgroup_local_id, uvec3(44462u, 146213u, 179928u).y)), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), (1u << _GLF_IDENTITY(uint(3u), uint(3u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (~ (atomicAnd(subgroup_local_id, _GLF_IDENTITY(uvec3(44462u, 146213u, 179928u).y, uint(uvec2(uvec3(44462u, 146213u, _GLF_IDENTITY(179928u, (false ? _GLF_FUZZED(virtual_gid) : 179928u))).y, 0u))))))), (_GLF_IDENTITY(~ (atomicAnd(subgroup_local_id, uvec3(44462u, 146213u, 179928u).y)), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), (1u << _GLF_IDENTITY(uint(3u), uint(3u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (~ (atomicAnd(subgroup_local_id, _GLF_IDENTITY(uvec3(44462u, 146213u, 179928u).y, uint(uvec2(uvec3(44462u, 146213u, _GLF_IDENTITY(179928u, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))) ? _GLF_FUZZED(virtual_gid) : 179928u))).y, 0u)))))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1u))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(1), ~ (~ (_GLF_IDENTITY(uint(1), (true ? uint(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | 0)))) : _GLF_FUZZED(bitfieldReverse(virtual_gid))))))), min(_GLF_IDENTITY(uint(1), ~ (~ (uint(1)))), _GLF_IDENTITY(uint(1), ~ (~ (uint(1)))))) : _GLF_FUZZED(_GLF_IDENTITY(atomicAnd(subgroup_local_id, _GLF_IDENTITY(uvec3(44462u, 146213u, _GLF_IDENTITY(179928u, (_GLF_IDENTITY(179928u, uint(uint(179928u)))) | (179928u))).y, (uvec3(44462u, 146213u, _GLF_IDENTITY(_GLF_IDENTITY(179928u, _GLF_IDENTITY((_GLF_IDENTITY(179928u, uint(uint(179928u)))) | (179928u), _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY(179928u, uint(uint(179928u)))) | (179928u), 1u)), (uint(uvec2((_GLF_IDENTITY(179928u, uint(uint(179928u)))) | (179928u), 1u))) * 1u))), (_GLF_IDENTITY(179928u, (_GLF_IDENTITY(179928u, uint(uint(179928u)))) | (179928u))) << 0u)).y) | (uvec3(44462u, 146213u, _GLF_IDENTITY(179928u, (_GLF_IDENTITY(_GLF_IDENTITY(179928u, uint(uint(179928u))), min(_GLF_IDENTITY(_GLF_IDENTITY(179928u, _GLF_IDENTITY(uint(uint(179928u)), (uint(uint(179928u))) | (uint(uint(179928u))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(179928u, uint(uint(179928u))), clamp(_GLF_IDENTITY(179928u, uint(uint(179928u))), _GLF_IDENTITY(179928u, uint(uint(179928u))), _GLF_IDENTITY(179928u, uint(uint(179928u)))))) << 0u, (false ? _GLF_FUZZED(107369u) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(179928u, uint(uint(179928u))), clamp(_GLF_IDENTITY(179928u, uint(uint(179928u))), _GLF_IDENTITY(179928u, uint(uint(179928u))), _GLF_IDENTITY(179928u, uint(uint(179928u)))))) << 0u, uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(179928u, uint(uint(179928u))), clamp(_GLF_IDENTITY(179928u, uint(uint(179928u))), _GLF_IDENTITY(179928u, uint(uint(179928u))), _GLF_IDENTITY(179928u, uint(uint(179928u)))))) << 0u)))))), _GLF_IDENTITY(179928u, uint(uint(179928u)))))) | (179928u))).y))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (atomicAnd(subgroup_local_id, uvec3(44462u, 146213u, 179928u).y)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), 0u | (_GLF_IDENTITY(uint(3u), uint(3u)))))), _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (~ (atomicAnd(subgroup_local_id, _GLF_IDENTITY(uvec3(44462u, 146213u, 179928u).y, uint(uvec2(uvec3(44462u, 146213u, 179928u).y, 0u)))))))), ((_GLF_IDENTITY(~ (atomicAnd(subgroup_local_id, uvec3(44462u, 146213u, 179928u).y)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(uvec2(uint(3u), 0u))), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (~ (atomicAnd(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(44462u, 146213u, 179928u).y, uint(uvec2(uvec3(44462u, 146213u, 179928u).y, 0u))), (_GLF_IDENTITY(uvec3(44462u, 146213u, 179928u).y, uint(uvec2(uvec3(44462u, 146213u, 179928u).y, 0u)))) - 0u))))))) / 1u))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(1), ~ (~ (_GLF_IDENTITY(uint(1), (true ? uint(1) : _GLF_FUZZED(bitfieldReverse(virtual_gid))))))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) * ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))), ~ (~ (uint(1)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) * 1)), ~ _GLF_IDENTITY((~ (uint(1))), (false ? _GLF_FUZZED(packUnorm2x16(injectionSwitch)) : _GLF_IDENTITY((~ (uint(1))), ((~ (uint(1)))) | ((~ (uint(1)))))))))) : _GLF_FUZZED(_GLF_IDENTITY(atomicAnd(subgroup_local_id, _GLF_IDENTITY(uvec3(44462u, 146213u, _GLF_IDENTITY(179928u, (_GLF_IDENTITY(179928u, uint(uint(179928u)))) | (179928u))).y, (uvec3(44462u, 146213u, _GLF_IDENTITY(_GLF_IDENTITY(179928u, (_GLF_IDENTITY(_GLF_IDENTITY(179928u, uint(uint(179928u))), min(_GLF_IDENTITY(179928u, uint(uint(179928u))), _GLF_IDENTITY(179928u, uint(uint(179928u)))))) | (179928u)), (_GLF_IDENTITY(179928u, (_GLF_IDENTITY(179928u, uint(uint(179928u)))) | (179928u))) << 0u)).y) | (uvec3(44462u, 146213u, _GLF_IDENTITY(179928u, (_GLF_IDENTITY(_GLF_IDENTITY(179928u, uint(uint(179928u))), min(_GLF_IDENTITY(_GLF_IDENTITY(179928u, uint(uint(179928u))), (_GLF_IDENTITY(_GLF_IDENTITY(179928u, uint(_GLF_IDENTITY(uint(179928u), (_GLF_IDENTITY(uint(179928u), ~ (~ (uint(179928u))))) | (uint(179928u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(179928u, uint(uint(179928u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(179928u, (179928u) / 1u), uint(uint(179928u))) : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY(_GLF_IDENTITY(179928u, uint(uint(179928u))), (_GLF_IDENTITY(179928u, uint(uint(179928u)))) / 1u), _GLF_IDENTITY(179928u, uint(uint(179928u)))))) << 0u), _GLF_IDENTITY(179928u, uint(uint(179928u)))))) | (179928u))).y))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (atomicAnd(subgroup_local_id, uvec3(44462u, 146213u, 179928u).y)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), 0u | (_GLF_IDENTITY(uint(3u), uint(3u)))))), _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (~ (atomicAnd(subgroup_local_id, _GLF_IDENTITY(uvec3(44462u, 146213u, 179928u).y, uint(uvec2(uvec3(44462u, 146213u, 179928u).y, 0u)))))))), ((_GLF_IDENTITY(~ (atomicAnd(subgroup_local_id, uvec3(44462u, 146213u, 179928u).y)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(uvec2(uint(3u), 0u))), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * _GLF_IDENTITY((~ (atomicAnd(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(44462u, 146213u, 179928u).y, uint(uvec2(uvec3(44462u, 146213u, 179928u).y, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(44462u, 146213u, 179928u).y, (uvec3(44462u, 146213u, 179928u).y) >> (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), uint(uvec2(uvec3(44462u, 146213u, 179928u).y, 0u)))) - 0u)))), ((~ (atomicAnd(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(44462u, 146213u, 179928u).y, uint(uvec2(uvec3(44462u, 146213u, 179928u).y, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(44462u, 146213u, 179928u).y, (uvec3(44462u, 146213u, 179928u).y) >> (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), uint(uvec2(uvec3(44462u, 146213u, 179928u).y, 0u)))) - 0u))))) | 0u)))) / 1u))), ~ (~ (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(1), ~ (~ (_GLF_IDENTITY(uint(1), (true ? uint(1) : _GLF_FUZZED(bitfieldReverse(virtual_gid))))))), _GLF_IDENTITY(min(_GLF_IDENTITY(uint(1), ~ (~ (uint(1)))), _GLF_IDENTITY(uint(1), ~ (~ (uint(1))))), ~ (_GLF_IDENTITY(~ (min(_GLF_IDENTITY(uint(1), ~ (~ (uint(1)))), _GLF_IDENTITY(uint(1), ~ (~ (uint(1)))))), (~ (min(_GLF_IDENTITY(uint(1), ~ (~ (uint(1)))), _GLF_IDENTITY(uint(1), ~ _GLF_IDENTITY((~ (uint(1))), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) | ((~ (uint(1))))))))) / 1u)))) : _GLF_FUZZED(_GLF_IDENTITY(atomicAnd(subgroup_local_id, _GLF_IDENTITY(uvec3(44462u, 146213u, _GLF_IDENTITY(179928u, (_GLF_IDENTITY(179928u, uint(uint(179928u)))) | (179928u))).y, (uvec3(44462u, 146213u, _GLF_IDENTITY(_GLF_IDENTITY(179928u, (_GLF_IDENTITY(179928u, uint(uint(179928u)))) | (179928u)), (_GLF_IDENTITY(179928u, (_GLF_IDENTITY(179928u, uint(uint(179928u)))) | (179928u))) << 0u)).y) | (uvec3(44462u, 146213u, _GLF_IDENTITY(_GLF_IDENTITY(179928u, (_GLF_IDENTITY(_GLF_IDENTITY(179928u, uint(uint(179928u))), min(_GLF_IDENTITY(_GLF_IDENTITY(179928u, uint(uint(179928u))), (_GLF_IDENTITY(_GLF_IDENTITY(179928u, uint(uint(179928u))), clamp(_GLF_IDENTITY(179928u, uint(uint(179928u))), _GLF_IDENTITY(179928u, uint(uint(179928u))), _GLF_IDENTITY(179928u, uint(uint(179928u)))))) << 0u), _GLF_IDENTITY(179928u, uint(uint(179928u)))))) | (179928u)), (_GLF_IDENTITY(179928u, (_GLF_IDENTITY(_GLF_IDENTITY(179928u, uint(uint(179928u))), min(_GLF_IDENTITY(_GLF_IDENTITY(179928u, uint(uint(179928u))), (_GLF_IDENTITY(_GLF_IDENTITY(179928u, uint(uint(_GLF_IDENTITY(179928u, (179928u) | (179928u))))), clamp(_GLF_IDENTITY(179928u, uint(uint(179928u))), _GLF_IDENTITY(179928u, uint(uint(179928u))), _GLF_IDENTITY(179928u, uint(uint(179928u)))))) << 0u), _GLF_IDENTITY(179928u, uint(uint(179928u)))))) | (179928u))) + 0u)).y))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (atomicAnd(subgroup_local_id, uvec3(44462u, 146213u, 179928u).y)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), 0u | (_GLF_IDENTITY(uint(3u), uint(3u)))))), _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (~ (atomicAnd(subgroup_local_id, _GLF_IDENTITY(uvec3(44462u, 146213u, 179928u).y, uint(uvec2(uvec3(44462u, 146213u, 179928u).y, 0u)))))))), ((_GLF_IDENTITY(~ (atomicAnd(subgroup_local_id, uvec3(44462u, 146213u, 179928u).y)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(uvec2(uint(3u), 0u))), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (~ (atomicAnd(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(44462u, 146213u, 179928u).y, uint(uvec2(uvec3(44462u, 146213u, 179928u).y, 0u))), (_GLF_IDENTITY(uvec3(44462u, 146213u, 179928u).y, uint(uvec2(uvec3(44462u, 146213u, 179928u).y, 0u)))) - 0u))))))) / 1u))))))))) / 1u))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_IDENTITY(_GLF_FUZZED(31269), 1 * (_GLF_FUZZED(31269))) : 64)))), min(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(31269), (false ? _GLF_FUZZED(-59915) : _GLF_IDENTITY(_GLF_FUZZED(31269), (_GLF_FUZZED(31269)) / 1))) : 64)))), _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(min(64, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(31269) : 64))), max(min(64, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(31269) : 64))), min(64, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(31269) : 64)))))), ~ (~ (_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(31269) : _GLF_IDENTITY(64, 0 | (64))))))))))), 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) && true)))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}
