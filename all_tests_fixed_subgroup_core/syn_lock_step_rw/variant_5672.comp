#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5102.2743)), bool(false))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2611.3151)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(false)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true), false))), true)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true), _GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), true))))), ! (! ((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true), _GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), true)))))))) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec4((false) || false, true, false, false)))), true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(98.55, -6.6)))), injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(0.1)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, sqrt(0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, sqrt(0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) + 0.0) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))) && true, ! (! ((bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))) && true)))))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), _GLF_IDENTITY(true, ! (! (true))))), false || (_GLF_IDENTITY(bool(bvec2(! (false), _GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bvec4(_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, true, false))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false))))), false, true))), (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), bool(bvec4(! (true), true, true, false))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bvec4(_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, true, false))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(! (true), bool(bvec4(_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, true, false))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) || false)))), bool(bvec3(bool(bvec2(! (false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, true, false))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))), _GLF_IDENTITY(! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y)) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), _GLF_IDENTITY(true, (true) || false), true, true))))))))), ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, true, true)))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)), injectionSwitch)).y)) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false))))))))), _GLF_IDENTITY(true, (true) || false), true, true))))))))), ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, true, true)))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))))), (! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), (injectionSwitch) * vec2(1.0, 1.0)))).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4468.1211), _GLF_FUZZED(-6808.8360)), bvec2(false, _GLF_IDENTITY(false, (false) && true)))).y)))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.1), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-0.9, 21.98)))))[0], _GLF_FUZZED(-9.5)), bvec2(true, false))).y)))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(6.1), (injectionSwitch)[1]), mix(vec2((vec2(_GLF_FUZZED(6.1), (injectionSwitch)[1]))[0], (vec2(_GLF_FUZZED(6.1), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | 0)], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7.0), _GLF_FUZZED(2.4)), bvec2(false, false)))), vec2(0.0, 0.0) + ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7.0), _GLF_FUZZED(2.4)), bvec2(false, false))))))[1]))[1]), vec2(_GLF_FUZZED(float(45138u)), _GLF_FUZZED(41.70)), bvec2(false, false))), vec2((injectionSwitch)[0], _GLF_FUZZED(-9.5)), bvec2(true, false))), clamp(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(6.1), (injectionSwitch)[1]), mix(vec2((vec2(_GLF_FUZZED(6.1), (injectionSwitch)[1]))[0], (vec2(_GLF_FUZZED(6.1), _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1]))))[1]), vec2(_GLF_FUZZED(float(45138u)), _GLF_FUZZED(41.70)), bvec2(false, false))), vec2((injectionSwitch)[0], _GLF_FUZZED(-9.5)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(6.1), (injectionSwitch)[1]), mix(vec2((vec2(_GLF_FUZZED(6.1), (injectionSwitch)[1]))[0], (vec2(_GLF_FUZZED(6.1), (injectionSwitch)[1]))[1]), vec2(_GLF_FUZZED(float(45138u)), _GLF_FUZZED(41.70)), bvec2(false, false))), vec2((injectionSwitch)[0], _GLF_FUZZED(-9.5)), bvec2(true, false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(6.1), (injectionSwitch)[1]), mix(vec2((vec2(_GLF_FUZZED(6.1), (injectionSwitch)[1]))[0], (vec2(_GLF_FUZZED(6.1), (injectionSwitch)[1]))[1]), vec2(_GLF_FUZZED(float(45138u)), _GLF_IDENTITY(_GLF_FUZZED(41.70), float(mat3x2(_GLF_FUZZED(41.70), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0)))), bvec2(false, false))), vec2((injectionSwitch)[0], _GLF_FUZZED(-9.5)), bvec2(true, false))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(6.1), (injectionSwitch)[1]), mix(_GLF_IDENTITY(vec2((vec2(_GLF_FUZZED(6.1), (injectionSwitch)[1]))[0], (vec2(_GLF_FUZZED(6.1), (injectionSwitch)[1]))[1]), vec2(mat3(vec2((vec2(_GLF_FUZZED(6.1), (injectionSwitch)[1]))[0], (vec2(_GLF_FUZZED(6.1), (injectionSwitch)[1]))[1]), sin(0.0), determinant(mat2(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), 1.0, 0.0, 1.0, 1.0, cos(0.0)))), vec2(_GLF_FUZZED(float(45138u)), _GLF_FUZZED(41.70)), bvec2(false, false))), vec2((injectionSwitch)[0], _GLF_FUZZED(-9.5)), bvec2(true, false))))))).y)))))))))))))), _GLF_IDENTITY(true, (true) || false), true, true))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))))))))))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))))))))))), _GLF_IDENTITY(false, ! (! (false))), false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))), true))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))), true)))))) && true)))))))))))), false, false))))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))) && true))))))), ! (! ((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))))), ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))) && true), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)) + (injectionSwitch.y)))) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(6.1, float(vec2(6.1, 0.0))), (false ? _GLF_FUZZED(769.545) : 6.1))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9.5)), bvec2(true, false))).y)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), ((_GLF_IDENTITY(true, (true) || false))) && true)), true, true)))), (bool(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false))))))) && true)))), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(6.1, (false ? _GLF_FUZZED(769.545) : 6.1))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9.5)), bvec2(true, false))).y)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)))), true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, (true) || false)))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, (true) || false)))), true)))), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), true && (! (_GLF_IDENTITY(true, (true) || false)))))), true), true, true)), true)))))), true, true))))) && true)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! (bool(bvec2(_GLF_DEAD(false), false)))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, true, true))))))), bool(bvec2(! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, true, _GLF_IDENTITY(true, true && (true))))))))), false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(874.665)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)) || (false), (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec4(true && (false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || (false)) && true))), (bool(_GLF_IDENTITY(false, false || (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(atan(-742.680)))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((! (false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false))), true && (! ((! (false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! ((! (false))), true && (! ((! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(! ((! (false))), true && (! ((! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false))))) && true)), ! (! ((_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) && true)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))), false)), true && (bool(bvec2(_GLF_DEAD(false), false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])))).y), float(_GLF_FUZZED(53.70)), bool(false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), false, false))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY((gl_WorkGroupID), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupID)), (~ ((gl_WorkGroupID))) | (~ ((gl_WorkGroupID)))))) | (gl_WorkGroupID)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-741.423)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), bool(true))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true, false, false)))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))), false))), true))))))))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))), (true && (_GLF_IDENTITY(true, bool(bvec3(true, true, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(9160.2274)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false, true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true, true)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5.9)), float(injectionSwitch.y), bool(true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true)))))))) || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(false, (false) || false) || (true))), ! (! (bool(_GLF_IDENTITY(true, false || (true))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))) && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true)))))))) || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), true, true))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(atan(injectionSwitch)))).x < injectionSwitch.y))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(atan(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))))).x < injectionSwitch.y))))), true, true), false)))))))))) || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))) && true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), false), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), false), false), false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)), (true ? _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)), vec2(1.0, 1.0) * (vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))) : _GLF_FUZZED(exp2(vec2(58.22, -6.3)))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0) + (injectionSwitch.y))))) || _GLF_IDENTITY(false, ! (! (false))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), tan(0.0) + (max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))) || _GLF_IDENTITY(false, ! (! (false)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(40.61), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(((mat4x3(449.268, -42.25, 759.547, 1.4, -4395.6423, 59.57, -271.262, -9918.0075, 4.3, 876.634, 841.987, 2703.4396) != mat4x3(8772.2401, -59.35, 31.49, -189.538, 17.43, 120.218, 9.4, 3.5, 24.32, 937.006, -9.1, 1141.3961)) ? 48.10 : 99.04))), bvec2(true, false))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, uint(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u)))) + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), true && (! (_GLF_DEAD(false))))))), bool(bvec4(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), true && (! (_GLF_DEAD(false))))))), (true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))), (! (_GLF_DEAD(false))) && true)), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))), (! (_GLF_DEAD(false))) && true)), false || (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))), (! (_GLF_DEAD(false))) && true)))), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)) && (! (_GLF_DEAD(false)))))))) || false), false, false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), true && (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat2x3(injectionSwitch[1], 0.0, 1.0, 0.0, 0.0, 0.0))))).x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 1u, 1u))))), ((~ (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 1u, 1u, 1u), (uvec4(subgroup_id, 1u, 1u, 1u)) << uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))) ^ 0u), (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 1u, 1u))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 1u, 1u, 1u), (uvec4(subgroup_id, 1u, 1u, 1u)) << uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 1u, 1u, 1u), (uvec4(subgroup_id, 1u, 1u, 1u)) << uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), (1u | 1u), 1u), (uvec3(~ (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 1u, 1u, 1u), (uvec4(subgroup_id, 1u, 1u, 1u)) << uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), (1u | 1u), 1u)) | uvec3(0u, 0u, 0u)))))) ^ 0u)) ^ 0u) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, _GLF_IDENTITY((4u) | (4u), ~ _GLF_IDENTITY((~ ((4u) | (4u))), 1u * ((~ ((4u) | (4u)))))))), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))))))), ((_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(4u), uint(4u)), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) >> 0u)) ^ (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 0u, 0u, 0u), clamp(_GLF_IDENTITY(uvec4(subgroup_id, 0u, 0u, 0u), (uvec4(subgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)), uvec4(subgroup_id, 0u, 0u, 0u), uvec4(subgroup_id, 0u, 0u, 0u))))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(4u), uint(4u)), 0u + (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(4u), uint(4u)), ~ (~ (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))) - 0u)))) ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))), ((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u))))) | 0u), ((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(4u), uint(4u)), uint(uint(0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))) | (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(4u), uint(4u)), (true ? 0u >> _GLF_IDENTITY(uint(4u), uint(4u)) : _GLF_FUZZED(subgroup_size)))))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u))))) / (_GLF_IDENTITY(0u ^ 1u, (_GLF_IDENTITY(0u ^ 1u, (true ? 0u ^ 1u : _GLF_FUZZED(num_workgroup)))) / 1u))))))), ((_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))), 0u | ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u))))))) | 0u), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))), ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u))))) | ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u))))))) | 0u)))))) | ((_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 0u, 0u)), (uint(uvec4(subgroup_id, 0u, 0u, 0u))) ^ (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))))))))))) + (0u ^ 0u), clamp((subgroup_id) + (0u ^ 0u), (subgroup_id) + (0u ^ 0u), (subgroup_id) + (0u ^ 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, _GLF_IDENTITY((4u) | (4u), ~ (~ ((4u) | (4u)))))), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))))))), ((_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 0u, 0u, 0u), clamp(_GLF_IDENTITY(uvec4(subgroup_id, 0u, 0u, 0u), (uvec4(subgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)), uvec4(subgroup_id, 0u, 0u, 0u), uvec4(subgroup_id, 0u, 0u, 0u))))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))), ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u))))) / (0u ^ 1u))), 0u | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))), ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u))))) / (0u ^ 1u)))))))), ((_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u))))), max(_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u))))), _GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u))))))))))) | ((_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) - 0u))))), ~ (~ (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) - 0u))))))))), _GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u)))))))))))))) + (0u ^ 0u), clamp((subgroup_id) + (0u ^ 0u), (subgroup_id) + (0u ^ 0u), (subgroup_id) + (0u ^ 0u)))), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, _GLF_IDENTITY((4u) | (4u), ~ (~ ((4u) | (4u)))))), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))))))), ((_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 0u, 0u, 0u), clamp(_GLF_IDENTITY(uvec4(subgroup_id, 0u, 0u, 0u), (uvec4(subgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)), uvec4(subgroup_id, 0u, 0u, 0u), uvec4(subgroup_id, 0u, 0u, 0u))))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))), ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u))))) / (0u ^ 1u))), 0u | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))), ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u))))) / (0u ^ 1u)))))))), ((_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u))))), max(_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u))))), _GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u))))))))))) | ((_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) - 0u))))), ~ (~ (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) - 0u))))))))), _GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u)))))))))))))) + (0u ^ 0u), clamp((subgroup_id) + (0u ^ 0u), (subgroup_id) + (0u ^ 0u), (subgroup_id) + (0u ^ 0u)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, _GLF_IDENTITY((4u) | (4u), ~ (~ ((4u) | (4u)))))), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))))))), ((_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 0u, 0u, 0u), clamp(_GLF_IDENTITY(uvec4(subgroup_id, 0u, 0u, 0u), (uvec4(subgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)), uvec4(subgroup_id, 0u, 0u, 0u), uvec4(subgroup_id, 0u, 0u, 0u))))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))), ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u))))) / (0u ^ 1u))), 0u | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))), ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u))))) / (0u ^ 1u)))))))), ((_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u))))), max(_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u))))), _GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u))))))))))) | ((_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) - 0u))))), ~ (~ (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) - 0u))))))))), _GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u)))))))))))))) + (0u ^ 0u), clamp((subgroup_id) + (0u ^ 0u), (subgroup_id) + (0u ^ 0u), (subgroup_id) + (0u ^ 0u)))), 0u | (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, _GLF_IDENTITY((4u) | (4u), ~ (~ ((4u) | (4u)))))), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))))))), ((_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 0u, 0u, 0u), clamp(_GLF_IDENTITY(uvec4(subgroup_id, 0u, 0u, 0u), (uvec4(subgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)), uvec4(subgroup_id, 0u, 0u, 0u), uvec4(subgroup_id, 0u, 0u, 0u))))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))), ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u))))) / (0u ^ 1u))), 0u | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))), ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u))))) / (0u ^ 1u)))))))), ((_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u))))), max(_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u))))), _GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u))))))))))) | ((_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) - 0u))))), ~ (~ (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) - 0u))))))))), _GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u)))))))))))))) + (0u ^ 0u), clamp((subgroup_id) + (0u ^ 0u), (subgroup_id) + (0u ^ 0u), (subgroup_id) + (0u ^ 0u)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, _GLF_IDENTITY((4u) | (4u), ~ (~ ((4u) | (4u)))))), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))))))), ((_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 0u, 0u, 0u), clamp(_GLF_IDENTITY(uvec4(subgroup_id, 0u, 0u, 0u), (uvec4(subgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)), uvec4(subgroup_id, 0u, 0u, 0u), uvec4(subgroup_id, 0u, 0u, 0u))))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))), ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u))))) / (0u ^ 1u))), 0u | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))), ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u))))) / (0u ^ 1u)))))))), ((_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u))))), max(_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u))))), _GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u))))))))))) | ((_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) - 0u))))), ~ (~ (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) - 0u))))))))), _GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u)))))))))))))) + (0u ^ 0u), clamp((subgroup_id) + (0u ^ 0u), (subgroup_id) + (0u ^ 0u), (subgroup_id) + (0u ^ 0u))))))))) * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)) << 0u, max(((subgroup_local_id)) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) ^ _GLF_IDENTITY(0u, max(0u, 0u))), ((subgroup_local_id)) << 0u))) ^ 0u), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))), _GLF_IDENTITY(~ (~ (subgroup_local_id)), (~ (~ (subgroup_local_id))) ^ (0u & 159094u))) + _GLF_IDENTITY(1, (1) >> 0)) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(1), _GLF_IDENTITY(0u, ~ (~ (0u)))), uvec2(0u, 0u) + (uvec2(uint(1), 0u)))), 0u + (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(1), 0u), uvec2(0u, 0u) + (uvec2(uint(_GLF_IDENTITY(1, min(1, 1))), 0u)))), _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(1), 0u), _GLF_IDENTITY((uvec2(uint(1), 0u)), ~ (~ ((uvec2(uint(1), 0u))))) - (uvec2(0u, 0u) | uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), uvec2(0u, _GLF_IDENTITY(0u, (0u) | (0u))) + (uvec2(uint(1), 0u))))), clamp((uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(1), 0u), (uvec2(uint(1), 0u)) - (uvec2(0u, 0u) | uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), uvec2(0u, 0u) + (uvec2(uint(1), 0u))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(1), 0u), (uvec2(uint(1), 0u)) - (uvec2(0u, 0u) | uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), uvec2(0u, 0u) + (uvec2(uint(1), 0u))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(1), 0u), (uvec2(uint(1), 0u)) - (uvec2(0u, 0u) | uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), uvec2(0u, 0u) + (uvec2(uint(1), 0u))))))) / 1u)))), 4, 64, 4);
 atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), ~ (~ (_GLF_IDENTITY(4, clamp(4, 4, 4))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((_GLF_IDENTITY(! (false), false || (! (false))))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (false)), ((_GLF_IDENTITY(! (false), false || (! (false))))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((! (false)), ((_GLF_IDENTITY(! (false), false || (! (false))))) || false), false, true), true)))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((_GLF_IDENTITY(! (false), false || (! (false))))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (false)), ((_GLF_IDENTITY(! (false), false || (! (false))))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((! (false)), ((_GLF_IDENTITY(! (false), false || (! (false))))) || false), false, true), true)))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), false, false, false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))) || false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), true && (true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), ! (! (true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))))), (_GLF_IDENTITY(true && (_GLF_DEAD(false)), bool(bvec4(true && (_GLF_DEAD(false)), true, true, true)))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), true && (true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))), ! (! (true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))))), (_GLF_IDENTITY(true && (_GLF_DEAD(false)), bool(bvec4(true && (_GLF_DEAD(false)), true, true, true)))) || false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))))), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), (_GLF_IDENTITY(true && (_GLF_DEAD(false)), bool(bvec4(true && (_GLF_DEAD(false)), true, true, true)))) || false)))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true) && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), (_GLF_IDENTITY(true && (_GLF_DEAD(false)), bool(bvec4(true && (_GLF_DEAD(false)), true, true, true)))) || _GLF_IDENTITY(false, (false) || false))))), false)))) || false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))), false || (_GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))), (_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))), bool(bvec3(bool((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (true && (_GLF_DEAD(false))) || false))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), bool(_GLF_IDENTITY(bvec3((! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), true, false), bvec3(bvec4(bvec3((! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), true, false), true))))))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
