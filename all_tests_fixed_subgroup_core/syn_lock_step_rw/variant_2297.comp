#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), false, true)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
           if(_GLF_DEAD(false))
            continue;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false), true)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false), true)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))), true))))))))))))
              return;
            }
          }
         else
          {
          }
        }
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))))))
          {
          }
         else
          {
           return;
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
              return;
            }
           else
            {
            }
          }
        }
      }
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             return;
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-454.027), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-2.2)), bvec2(true, false))).x > injectionSwitch.y))));
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, abs(_GLF_IDENTITY(0.0, float(mat2x4(0.0, length(0.0), abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0)))), 1.0, 1.0, exp(0.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(94.49)), bool(false))), 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(28.38)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) + 0.0), 0.0, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), 1.0, 1.0), (false ? _GLF_FUZZED(mat4(-5.0, 475.651, _GLF_IDENTITY(6024.4769, min(6024.4769, _GLF_IDENTITY(6024.4769, (false ? _GLF_FUZZED(-5.8) : _GLF_IDENTITY(6024.4769, (false ? _GLF_FUZZED(-165.007) : 6024.4769)))))), -4952.5260, -795.337, _GLF_IDENTITY(98.65, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 98.65 : _GLF_FUZZED(-9.6))), 238.052, -5578.0748, 72.83, 3874.5585, -9041.6010, -6.0, 7629.2268, _GLF_IDENTITY(-8.7, max(_GLF_IDENTITY(-8.7, clamp(_GLF_IDENTITY(-8.7, mix(float(-8.7), float(_GLF_FUZZED(-6.6)), bool(false))), -8.7, -8.7)), -8.7)), 69.96, -1.5)) : mat4(injectionSwitch, abs(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.4), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(0.4), clamp(_GLF_FUZZED(0.4), _GLF_FUZZED(0.4), _GLF_FUZZED(0.4)))))), float(0.0), bool(true)))), 1.0, 1.0, exp(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)))), clamp(vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_IDENTITY(abs(0.0), (abs(0.0)) / _GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, length(vec4(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.3)), float(0.0), bool(true))), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.8) : 0.0)))), 0.0, 0.0)) + (1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 0.0, 1.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0))), 1.0), (false ? _GLF_FUZZED(mat4(-5.0, 475.651, 6024.4769, -4952.5260, -795.337, 98.65, 238.052, -5578.0748, 72.83, 3874.5585, -9041.6010, -6.0, 7629.2268, -8.7, 69.96, -1.5)) : mat4(injectionSwitch, abs(0.0), 1.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)))), vec2(_GLF_IDENTITY(mat4(injectionSwitch, abs(0.0), 1.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0), (false ? _GLF_FUZZED(mat4(-5.0, 475.651, 6024.4769, -4952.5260, -795.337, 98.65, 238.052, -5578.0748, 72.83, 3874.5585, -9041.6010, -6.0, 7629.2268, -8.7, 69.96, -1.5)) : mat4(injectionSwitch, abs(_GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(float(-93337)), max(_GLF_FUZZED(float(-93337)), _GLF_IDENTITY(_GLF_FUZZED(float(-93337)), min(_GLF_FUZZED(float(-93337)), _GLF_FUZZED(float(-93337)))))) : 0.0))), 1.0, 1.0, exp(0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), max(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, sqrt(1.0), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.3)), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true))), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.7) : 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-86.32) : _GLF_IDENTITY(float(mat4x3(1.0, sqrt(1.0), 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(float(vec4(float(mat4x3(1.0, sqrt(1.0), 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0)), min(float(vec4(float(mat4x3(1.0, sqrt(1.0), 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0)), float(vec4(float(mat4x3(1.0, sqrt(1.0), 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0)))))))), injectionSwitch.y), 1.0, 1.0)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, abs(0.0), 1.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 0.0), (mat2(1.0, 0.0, 1.0, 0.0)) * mat2(1.0))), mix(float(_GLF_FUZZED(9686.0264)), float(float(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 0.0), (mat2(1.0, 0.0, 1.0, 0.0)) * mat2(1.0)))), bool(true)))), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0))), injectionSwitch.y), 1.0, 1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(mat4(-5.0, 475.651, 6024.4769, -4952.5260, -795.337, 98.65, 238.052, -5578.0748, 72.83, 3874.5585, -9041.6010, -6.0, _GLF_IDENTITY(7629.2268, clamp(7629.2268, _GLF_IDENTITY(7629.2268, max(7629.2268, _GLF_IDENTITY(7629.2268, clamp(7629.2268, 7629.2268, 7629.2268)))), _GLF_IDENTITY(7629.2268, max(7629.2268, 7629.2268)))), -8.7, 69.96, -1.5), transpose(transpose(_GLF_IDENTITY(mat4(-5.0, 475.651, 6024.4769, -4952.5260, -795.337, 98.65, 238.052, -5578.0748, 72.83, 3874.5585, -9041.6010, -6.0, _GLF_IDENTITY(_GLF_IDENTITY(7629.2268, (7629.2268) * _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, sqrt(0.0)), vec4(0.0, 0.0, sqrt(1.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, sqrt(0.0)), vec4(0.0, 0.0, sqrt(1.0), 0.0)))), clamp(7629.2268, _GLF_IDENTITY(7629.2268, max(7629.2268, _GLF_IDENTITY(7629.2268, clamp(7629.2268, 7629.2268, 7629.2268)))), _GLF_IDENTITY(7629.2268, max(7629.2268, 7629.2268)))), -8.7, 69.96, -1.5), (mat4(-5.0, 475.651, 6024.4769, -4952.5260, -795.337, 98.65, 238.052, -5578.0748, 72.83, 3874.5585, _GLF_IDENTITY(-9041.6010, clamp(_GLF_IDENTITY(-9041.6010, max(-9041.6010, -9041.6010)), -9041.6010, -9041.6010)), -6.0, _GLF_IDENTITY(7629.2268, clamp(7629.2268, _GLF_IDENTITY(_GLF_IDENTITY(7629.2268, max(7629.2268, _GLF_IDENTITY(7629.2268, clamp(7629.2268, 7629.2268, 7629.2268)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(7629.2268, max(7629.2268, _GLF_IDENTITY(7629.2268, clamp(7629.2268, 7629.2268, 7629.2268)))), (false ? _GLF_FUZZED(mix(3.0, 4.4, -6.0)) : _GLF_IDENTITY(7629.2268, max(7629.2268, _GLF_IDENTITY(7629.2268, clamp(7629.2268, 7629.2268, 7629.2268)))))), _GLF_IDENTITY(7629.2268, max(7629.2268, _GLF_IDENTITY(7629.2268, clamp(7629.2268, 7629.2268, 7629.2268)))), _GLF_IDENTITY(7629.2268, max(7629.2268, _GLF_IDENTITY(7629.2268, clamp(7629.2268, 7629.2268, 7629.2268)))))), _GLF_IDENTITY(_GLF_IDENTITY(7629.2268, (7629.2268) * 1.0), max(7629.2268, 7629.2268)))), -8.7, 69.96, -1.5)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) : mat4(injectionSwitch, _GLF_IDENTITY(abs(0.0), (false ? _GLF_FUZZED(-312.007) : abs(0.0))), 1.0, 1.0, exp(0.0), 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), vec4(mat4x3(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(8994.4000))), injectionSwitch.y))), 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))))), (vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_IDENTITY(abs(_GLF_IDENTITY(0.0, max(0.0, 0.0))), (true ? abs(0.0) : _GLF_FUZZED(7.4))), 1.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(14.78)), bool(false))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0), (false ? _GLF_FUZZED(mat4(-5.0, 475.651, 6024.4769, -4952.5260, -795.337, 98.65, 238.052, -5578.0748, 72.83, 3874.5585, -9041.6010, -6.0, 7629.2268, -8.7, 69.96, -1.5)) : mat4(injectionSwitch, abs(0.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0, exp(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)), 0.0, 1.0)), float(mat4(float(mat3x2(1.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)), 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0))))) / vec2(1.0, 1.0))))).x, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, abs(_GLF_IDENTITY(0.0, float(mat2x4(0.0, length(0.0), abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0)))), 1.0, 1.0, exp(0.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(94.49)), bool(false))), 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(28.38)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) + 0.0), 0.0, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), 1.0, 1.0), (false ? _GLF_FUZZED(mat4(-5.0, 475.651, _GLF_IDENTITY(6024.4769, min(6024.4769, _GLF_IDENTITY(6024.4769, (false ? _GLF_FUZZED(-5.8) : _GLF_IDENTITY(6024.4769, (false ? _GLF_FUZZED(-165.007) : 6024.4769)))))), -4952.5260, -795.337, _GLF_IDENTITY(98.65, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 98.65 : _GLF_FUZZED(-9.6))), 238.052, -5578.0748, 72.83, 3874.5585, -9041.6010, -6.0, 7629.2268, _GLF_IDENTITY(-8.7, max(_GLF_IDENTITY(-8.7, clamp(_GLF_IDENTITY(-8.7, mix(float(-8.7), float(_GLF_FUZZED(-6.6)), bool(false))), -8.7, -8.7)), -8.7)), 69.96, -1.5)) : mat4(injectionSwitch, abs(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.4), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(0.4), clamp(_GLF_FUZZED(0.4), _GLF_FUZZED(0.4), _GLF_FUZZED(0.4)))))), float(0.0), bool(true)))), 1.0, 1.0, exp(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)))), clamp(vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_IDENTITY(abs(0.0), (abs(0.0)) / _GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, length(vec4(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.3)), float(0.0), bool(true))), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.8) : 0.0)))), 0.0, 0.0)) + (1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 0.0, 1.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0))), 1.0), (false ? _GLF_FUZZED(mat4(-5.0, 475.651, 6024.4769, -4952.5260, -795.337, 98.65, 238.052, -5578.0748, 72.83, 3874.5585, -9041.6010, -6.0, 7629.2268, -8.7, 69.96, -1.5)) : mat4(injectionSwitch, abs(0.0), 1.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)))), vec2(_GLF_IDENTITY(mat4(injectionSwitch, abs(0.0), 1.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0), (false ? _GLF_FUZZED(mat4(-5.0, 475.651, 6024.4769, -4952.5260, -795.337, 98.65, 238.052, -5578.0748, 72.83, 3874.5585, -9041.6010, -6.0, 7629.2268, -8.7, 69.96, -1.5)) : mat4(injectionSwitch, abs(_GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(float(-93337)), max(_GLF_FUZZED(float(-93337)), _GLF_IDENTITY(_GLF_FUZZED(float(-93337)), min(_GLF_FUZZED(float(-93337)), _GLF_FUZZED(float(-93337)))))) : 0.0))), 1.0, 1.0, exp(0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), max(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, sqrt(1.0), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.3)), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true))), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.7) : 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-86.32) : _GLF_IDENTITY(float(mat4x3(1.0, sqrt(1.0), 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(float(vec4(float(mat4x3(1.0, sqrt(1.0), 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0)), min(float(vec4(float(mat4x3(1.0, sqrt(1.0), 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0)), float(vec4(float(mat4x3(1.0, sqrt(1.0), 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0)))))))), injectionSwitch.y), 1.0, 1.0)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, abs(0.0), 1.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 0.0), (mat2(1.0, 0.0, 1.0, 0.0)) * mat2(1.0))), mix(float(_GLF_FUZZED(9686.0264)), float(float(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 0.0), (mat2(1.0, 0.0, 1.0, 0.0)) * mat2(1.0)))), bool(true)))), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0))), injectionSwitch.y), 1.0, 1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(mat4(-5.0, 475.651, 6024.4769, -4952.5260, -795.337, 98.65, 238.052, -5578.0748, 72.83, 3874.5585, -9041.6010, -6.0, _GLF_IDENTITY(7629.2268, clamp(7629.2268, _GLF_IDENTITY(7629.2268, max(7629.2268, _GLF_IDENTITY(7629.2268, clamp(7629.2268, 7629.2268, 7629.2268)))), _GLF_IDENTITY(7629.2268, max(7629.2268, 7629.2268)))), -8.7, 69.96, -1.5), transpose(transpose(_GLF_IDENTITY(mat4(-5.0, 475.651, 6024.4769, -4952.5260, -795.337, 98.65, 238.052, -5578.0748, 72.83, 3874.5585, -9041.6010, -6.0, _GLF_IDENTITY(_GLF_IDENTITY(7629.2268, (7629.2268) * _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, sqrt(0.0)), vec4(0.0, 0.0, sqrt(1.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, sqrt(0.0)), vec4(0.0, 0.0, sqrt(1.0), 0.0)))), clamp(7629.2268, _GLF_IDENTITY(7629.2268, max(7629.2268, _GLF_IDENTITY(7629.2268, clamp(7629.2268, 7629.2268, 7629.2268)))), _GLF_IDENTITY(7629.2268, max(7629.2268, 7629.2268)))), -8.7, 69.96, -1.5), (mat4(-5.0, 475.651, 6024.4769, -4952.5260, -795.337, 98.65, 238.052, -5578.0748, 72.83, 3874.5585, _GLF_IDENTITY(-9041.6010, clamp(_GLF_IDENTITY(-9041.6010, max(-9041.6010, -9041.6010)), -9041.6010, -9041.6010)), -6.0, _GLF_IDENTITY(7629.2268, clamp(7629.2268, _GLF_IDENTITY(_GLF_IDENTITY(7629.2268, max(7629.2268, _GLF_IDENTITY(7629.2268, clamp(7629.2268, 7629.2268, 7629.2268)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(7629.2268, max(7629.2268, _GLF_IDENTITY(7629.2268, clamp(7629.2268, 7629.2268, 7629.2268)))), (false ? _GLF_FUZZED(mix(3.0, 4.4, -6.0)) : _GLF_IDENTITY(7629.2268, max(7629.2268, _GLF_IDENTITY(7629.2268, clamp(7629.2268, 7629.2268, 7629.2268)))))), _GLF_IDENTITY(7629.2268, max(7629.2268, _GLF_IDENTITY(7629.2268, clamp(7629.2268, 7629.2268, 7629.2268)))), _GLF_IDENTITY(7629.2268, max(7629.2268, _GLF_IDENTITY(7629.2268, clamp(7629.2268, 7629.2268, 7629.2268)))))), _GLF_IDENTITY(_GLF_IDENTITY(7629.2268, (7629.2268) * 1.0), max(7629.2268, 7629.2268)))), -8.7, 69.96, -1.5)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) : mat4(injectionSwitch, _GLF_IDENTITY(abs(0.0), (false ? _GLF_FUZZED(-312.007) : abs(0.0))), 1.0, 1.0, exp(0.0), 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), vec4(mat4x3(vec4(1.0, 1.0, 1.0, 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(8994.4000))), injectionSwitch.y))), 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))))), (vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_IDENTITY(abs(_GLF_IDENTITY(0.0, max(0.0, 0.0))), (true ? abs(0.0) : _GLF_FUZZED(7.4))), 1.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(14.78)), bool(false))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0), (false ? _GLF_FUZZED(mat4(-5.0, 475.651, 6024.4769, -4952.5260, -795.337, 98.65, 238.052, -5578.0748, 72.83, 3874.5585, -9041.6010, -6.0, 7629.2268, -8.7, 69.96, -1.5)) : mat4(injectionSwitch, abs(0.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0, exp(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)), 0.0, 1.0)), float(mat4(float(mat3x2(1.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)), 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0))))) / vec2(1.0, 1.0))))).x : _GLF_FUZZED(vec2(3.0, -6.1).s))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  return;
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = ((0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) | _GLF_IDENTITY((0 ^ 0), min((0 ^ 0), (0 ^ 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), false || ((false)))))))))))) || false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) << 0, (_GLF_IDENTITY((int(4)) << 0, ~ (~ ((int(4)) << 0)))) | 0))))); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), ((_GLF_WRAPPED_IF_TRUE(true))) && true)))))))
      {
       do
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_FALSE(false))), ! (! (bool(bool(_GLF_WRAPPED_IF_FALSE(false)))))), _GLF_IDENTITY(true, bool(bvec2(true, false))) && (_GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_FALSE(false))), _GLF_IDENTITY(! (! (bool(bool(_GLF_WRAPPED_IF_FALSE(false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (bool(bool(_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! (bool(bool(_GLF_WRAPPED_IF_FALSE(false))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (bool(bool(_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! (bool(bool(_GLF_WRAPPED_IF_FALSE(false))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! (bool(bool(_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! (bool(bool(_GLF_WRAPPED_IF_FALSE(false)))))))))), false || (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((! (bool(bool(_GLF_WRAPPED_IF_FALSE(false))))), ! (! ((! (bool(bool(_GLF_WRAPPED_IF_FALSE(false)))))))), ! (! (! (! (bool(bool(_GLF_WRAPPED_IF_FALSE(false))))))))))))))) && true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_FALSE(false))), ! (! (bool(bool(_GLF_WRAPPED_IF_FALSE(false)))))), bool(bvec2(_GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_FALSE(false))), ! (! (bool(bool(_GLF_WRAPPED_IF_FALSE(false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(true, bool(bvec2(true, false))) && (_GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_FALSE(false))), _GLF_IDENTITY(! (! _GLF_IDENTITY((bool(bool(_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! ((bool(bool(_GLF_WRAPPED_IF_FALSE(false))))), bool(bvec2(_GLF_IDENTITY(! ((bool(bool(_GLF_WRAPPED_IF_FALSE(false))))), false || (! ((bool(bool(_GLF_WRAPPED_IF_FALSE(false))))))), false)))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), (bool(_GLF_WRAPPED_IF_FALSE(false))) && true)))), ! (! (! (! (bool(bool(_GLF_WRAPPED_IF_FALSE(false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), (bool(_GLF_WRAPPED_IF_FALSE(false))) && true)))), ! (! (! (! (bool(bool(_GLF_WRAPPED_IF_FALSE(false))))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (bool(bool(_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! (bool(bool(_GLF_WRAPPED_IF_FALSE(false))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! (bool(bool(_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! (bool(bool(_GLF_WRAPPED_IF_FALSE(false)))))))))), false || (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((! (bool(bool(_GLF_WRAPPED_IF_FALSE(false))))), ! (! ((! _GLF_IDENTITY((bool(bool(_GLF_WRAPPED_IF_FALSE(false)))), ((bool(bool(_GLF_WRAPPED_IF_FALSE(false))))) || false))))), ! (! (! (! (bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), (bool(_GLF_WRAPPED_IF_FALSE(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))) && true))))))) && true)))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))))
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
              }
            }
           else
            {
            }
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))))))))))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))))) && true))))))
            return;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
      }
     else
      {
      }
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat4x3(injectionSwitch[1], 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))))).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   do
    {
     do
      {
       for(int _injected_loop_counter = _GLF_IDENTITY((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(4), int(4)), 0 ^ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(4), int(4)), ~ (~ (0 >> _GLF_IDENTITY(int(4), int(4)))))))), ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(4), int(4))), ~ (~ (int(_GLF_IDENTITY(int(4), int(4)))))))), _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), clamp(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4)))), ((0 & -24371) | 0) ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), clamp(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4))))))) | (0 << _GLF_IDENTITY(int(0), int(0))))) | 0))) + 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0))) < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true)))))))), (! (false)) || false)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true), _GLF_IDENTITY(false, true && (false)), true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true), false, true)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true), false, true))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true), false, true)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true), false, true))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true), false, true)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true), false, true))))))), bool(bvec3(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true), false, true)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true), false, true))))))), true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))))))
          return;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))));
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
            }
           else
            {
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))) && (false))))
                return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-5645.3045))))) > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, tan(sqrt(0.0))))) > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, tan(sqrt(0.0))))) > injectionSwitch.y))))))))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)))))), (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = ((0 ^ 0) | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         return;
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & -22115)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         for(int _injected_loop_counter = ((~ -43949) & 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1)))); _injected_loop_counter ++)
          {
           return;
          }
        }
      }
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (_GLF_IDENTITY(gl_WorkGroupSize[0], (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))[0]) | (gl_WorkGroupSize[0]))) | _GLF_IDENTITY(0u, (0u) >> 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u))))[0], (gl_WorkGroupSize[0]) | 0u), _GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))[0]) | 0u, ((gl_WorkGroupSize[0]) | 0u) + 0u)), (_GLF_IDENTITY(gl_WorkGroupSize[0], _GLF_IDENTITY((gl_WorkGroupSize[0]) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * ((_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0u)))) - 0u))), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], (_GLF_IDENTITY(gl_WorkGroupSize[2], ~ (~ (gl_WorkGroupSize[2])))) | (gl_WorkGroupSize[2]))), (true ? uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), clamp(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), _GLF_IDENTITY(gl_WorkGroupSize[0], (_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | (0u | 0u))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), (_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u)) - 0u), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), (_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u)) - 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))[2]) : _GLF_FUZZED(uvec3(152802u, 63072u, 173310u)))), _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(6u), uvec3(_GLF_IDENTITY(6u, (6u) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(6u), uvec3(_GLF_IDENTITY(6u, (6u) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) + uvec3(0u, 0u, 0u)) + (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (_GLF_IDENTITY(gl_WorkGroupSize[0], max(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | (gl_WorkGroupSize[0])), gl_WorkGroupSize[0]))) | 0u), clamp(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), _GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | _GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), (_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, max(0, 0))]) | 0u)) - _GLF_IDENTITY(0u, (0u) + 0u)))), gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(true ? uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, max(0, 0))]) | 0u), clamp(_GLF_IDENTITY(gl_WorkGroupSize[0], _GLF_IDENTITY((gl_WorkGroupSize[_GLF_IDENTITY(0, 0 | (0))]) | 0u, ((gl_WorkGroupSize[_GLF_IDENTITY(0, _GLF_IDENTITY(0, (0) ^ 0) | (_GLF_IDENTITY(0, (0) >> 0)))]) | 0u) - 0u)), _GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), (_GLF_IDENTITY(0, _GLF_IDENTITY((0), min((0), (0))) / int(_GLF_ONE(1.0, injectionSwitch.y)))) >> 0)]) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), (_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(0, 0))))], (gl_WorkGroupSize[0]) | 0u)) - 0u))), gl_WorkGroupSize[1], gl_WorkGroupSize[2]) : _GLF_FUZZED(uvec3(152802u, 63072u, 173310u)), (_GLF_IDENTITY(true ? uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, max(0, 0))]) | 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, 0 | (0))]) | 0u), max(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, 0 | (0))]) | 0u), _GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, 0 | (0))]) | 0u))), _GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).y)))) >> 0)]) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(0, 0))))], (gl_WorkGroupSize[0]) | 0u)), ((_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(0, 0))))], (gl_WorkGroupSize[0]) | 0u))) | ((_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(0, 0))))], (gl_WorkGroupSize[0]) | 0u)))) - 0u))), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) | 0u)) : _GLF_FUZZED(uvec3(152802u, 63072u, 173310u)), ~ (~ (true ? uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, max(0, 0))]) | 0u), (_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, max(0, 0))]) | 0u)) | (_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, max(0, 0))]) | 0u))), clamp(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, 0 | (0))]) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(8260u) : 0u))), _GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))) >> 0)]) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], _GLF_IDENTITY((gl_WorkGroupSize[0]) | 0u, 0u | (_GLF_IDENTITY((gl_WorkGroupSize[0]) | 0u, clamp((gl_WorkGroupSize[0]) | 0u, (gl_WorkGroupSize[0]) | 0u, (gl_WorkGroupSize[0]) | 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(0, 0)))), (_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(0, 0))))) | (_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(0, 0))))))], (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(0u, 0u, 0u) | (~ (gl_WorkGroupSize)))))))[_GLF_IDENTITY(0, ~ (~ (0)))]) | 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(0, 0)))), (_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(0, 0))))) | (_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(0, 0))))))], (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) | (_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(0u, 0u, 0u) | (~ (gl_WorkGroupSize)))))))[_GLF_IDENTITY(0, ~ (~ (0)))]) | 0u))) ^ 0u) - _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u)), 0u))))), gl_WorkGroupSize[1], gl_WorkGroupSize[2]) : _GLF_FUZZED(uvec3(152802u, 63072u, 173310u)))))) | (true ? uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, max(0, 0))]) | 0u), clamp(_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(23052)))) >> 0)], _GLF_IDENTITY((gl_WorkGroupSize[_GLF_IDENTITY(0, 0 | (0))]) | 0u, ~ (~ ((gl_WorkGroupSize[_GLF_IDENTITY(0, 0 | (0))]) | 0u)))), _GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))) >> 0), clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))) >> 0), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))) >> 0), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))) >> 0)))]) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(-79902)))))))], (true ? gl_WorkGroupSize[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(-79902)))))))] : _GLF_FUZZED(139361u))), (gl_WorkGroupSize[0]) | 0u)) - 0u))), gl_WorkGroupSize[1], gl_WorkGroupSize[2]) : _GLF_FUZZED(uvec3(152802u, 63072u, 173310u)))))), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], _GLF_IDENTITY((gl_WorkGroupSize[0]) | 0u, uint(uvec4((gl_WorkGroupSize[0]) | 0u, 1u, 1u, 0u)))), clamp(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))))[0], (_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED((uvec3(156372u, 119906u, 785u) + subgroup_id)) : _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u))))[0]) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))[0]) | 0u), (_GLF_IDENTITY(gl_WorkGroupSize[0], _GLF_IDENTITY((gl_WorkGroupSize[0]), 1u * ((gl_WorkGroupSize[0]))) | 0u)) - 0u))), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))) << uvec3(0u, 0u, 0u))[2]), (true ? uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], _GLF_IDENTITY((gl_WorkGroupSize[0]), ~ (~ (_GLF_IDENTITY((gl_WorkGroupSize[0]), (_GLF_IDENTITY((gl_WorkGroupSize[0]), 1u * ((gl_WorkGroupSize[0])))) / 1u)))) | 0u), clamp(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), _GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], 0u + (_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[0]), (~ (gl_WorkGroupSize[0])) ^ 0u))))), (gl_WorkGroupSize[0]) | 0u), (_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 1, 1, 1)), int(int(int(ivec4(0, 1, 1, 1))))))]) | 0u)) - 0u))), gl_WorkGroupSize[1], gl_WorkGroupSize[2]) : _GLF_FUZZED(uvec3(152802u, 63072u, 173310u)))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (false ? _GLF_FUZZED(uvec3(57113u, 124807u, 65474u)) : uvec3(uvec3(gl_WorkGroupSize)))))[0]) | 0u), clamp(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), _GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, (0) | 0)]) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (_GLF_IDENTITY(gl_WorkGroupSize[0], uint(uint(gl_WorkGroupSize[0])))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], max(gl_WorkGroupSize[0], gl_WorkGroupSize[0])), (gl_WorkGroupSize[0]) | 0u)) - 0u))), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, 0 | _GLF_IDENTITY((_GLF_IDENTITY(2, int(int(_GLF_IDENTITY(2, 0 ^ (2)))))), (_GLF_IDENTITY((_GLF_IDENTITY(2, int(int(_GLF_IDENTITY(2, 0 ^ (2)))))), ((_GLF_IDENTITY(2, int(int(_GLF_IDENTITY(2, 0 ^ (2))))))) - 0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))], max(gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, 0 + (0)))) | (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(_GLF_IDENTITY(2, _GLF_IDENTITY(0 ^ (2), (true ? 0 ^ (2) : _GLF_FUZZED(-77425)))))), max(int(int(_GLF_IDENTITY(2, _GLF_IDENTITY(0 ^ (2), (true ? 0 ^ (2) : _GLF_FUZZED(-77425)))))), int(int(_GLF_IDENTITY(2, _GLF_IDENTITY(0 ^ (2), (true ? 0 ^ (2) : _GLF_FUZZED(-77425)))))))))))], gl_WorkGroupSize[_GLF_IDENTITY(2, 0 | (_GLF_IDENTITY(2, int(int(_GLF_IDENTITY(2, 0 ^ (2)))))))]))), (true ? uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) - 0u), gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[0], (gl_WorkGroupSize[0]) | 0u), clamp(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) - 0u), (gl_WorkGroupSize[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (~ (0))), 0))]) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), (_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u)) - 0u))), gl_WorkGroupSize[1], gl_WorkGroupSize[2]) : _GLF_FUZZED(uvec3(152802u, 63072u, 173310u)))))))), (uvec3(0u, 0u, 0u) & uvec3(74189u, 38744u, 32389u)) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | (gl_WorkGroupSize[0]))) | _GLF_IDENTITY(0u, (0u) >> 0u)), clamp(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), _GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], _GLF_IDENTITY((gl_WorkGroupSize[0]) | 0u, ((gl_WorkGroupSize[0]) | 0u) + 0u)), (_GLF_IDENTITY(gl_WorkGroupSize[0], _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize[0]) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * ((gl_WorkGroupSize[0]) | 0u)), max(_GLF_IDENTITY((gl_WorkGroupSize[0]) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * ((gl_WorkGroupSize[0]) | 0u)), _GLF_IDENTITY((gl_WorkGroupSize[0]) | 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * ((gl_WorkGroupSize[0]) | 0u)))))) - 0u))), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], (_GLF_IDENTITY(gl_WorkGroupSize[2], ~ (~ (gl_WorkGroupSize[2])))) | (gl_WorkGroupSize[2]))), (true ? uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) << 0u), (gl_WorkGroupSize[0]) | 0u), _GLF_IDENTITY(gl_WorkGroupSize[0], (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), 0u)), ~ (~ (uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), 0u))))))[0], (gl_WorkGroupSize[0]) | (0u | 0u))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), (_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u)) - 0u))), gl_WorkGroupSize[1], gl_WorkGroupSize[2]) : _GLF_FUZZED(uvec3(152802u, _GLF_IDENTITY(63072u, clamp(_GLF_IDENTITY(63072u, min(63072u, 63072u)), 63072u, _GLF_IDENTITY(63072u, (63072u) << 0u))), 173310u)))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), _GLF_IDENTITY(uvec3(8u), min(uvec3(8u), uvec3(8u)))))) << _GLF_IDENTITY(uvec3(6u), uvec3(_GLF_IDENTITY(6u, (6u) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(0, (0) / 1)], max(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | (gl_WorkGroupSize[0])), gl_WorkGroupSize[0]))) | 0u), clamp(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), _GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), (_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u)) - _GLF_IDENTITY(0u, (0u) + 0u)))), _GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) / 1u), gl_WorkGroupSize[2]), (_GLF_IDENTITY(true ? uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, max(0, 0))]) | 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u))[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-75373) : 0)) | (0))]) | 0u), _GLF_IDENTITY(gl_WorkGroupSize[0], (_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), max(~ (0), ~ (0))))), (_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))) >> 0)], (true ? gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), max(~ (0), ~ (0))))), (_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))) >> 0)] : _GLF_FUZZED((41861u << subgroup_size))))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), (_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(0, 0))))], (gl_WorkGroupSize[0]) | 0u)) - 0u))), gl_WorkGroupSize[1], gl_WorkGroupSize[2]) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(152802u, min(152802u, 152802u)), 63072u, 173310u)), (_GLF_IDENTITY(true ? uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, max(0, 0))]) | 0u), clamp(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, 0 | (0))]) | 0u), _GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))) >> 0)]) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, clamp(0, 0, 0))]) | 0u), (_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(0, 0))))], (gl_WorkGroupSize[0]) | 0u)) - 0u))), gl_WorkGroupSize[1], gl_WorkGroupSize[2]) : _GLF_FUZZED(uvec3(152802u, 63072u, 173310u)), ~ (~ (true ? uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, max(0, 0))]) | 0u), clamp(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, 0 | (0))]) | 0u), _GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))))))) >> 0)]) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), (_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, ~ (~ (0))))), (0) | (_GLF_IDENTITY(0, max(0, 0))))], (gl_WorkGroupSize[0]) | 0u)) - 0u))), gl_WorkGroupSize[1], gl_WorkGroupSize[2]) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(152802u, 63072u, 173310u)), max(_GLF_FUZZED(uvec3(152802u, 63072u, 173310u)), _GLF_IDENTITY(_GLF_FUZZED(uvec3(152802u, 63072u, 173310u)), clamp(_GLF_FUZZED(uvec3(152802u, 63072u, 173310u)), _GLF_FUZZED(uvec3(152802u, 63072u, 173310u)), _GLF_FUZZED(uvec3(152802u, 63072u, 173310u)))))))))) | (true ? uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), (true ? max(0, 0) : _GLF_FUZZED(34667))))]) | 0u), clamp(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, 0 | (0))]) | 0u), _GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(-82111) : int(_GLF_ONE(1.0, injectionSwitch.y)))))) >> 0)]) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), (_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(0, 0))))], (gl_WorkGroupSize[0]) | 0u)) - 0u))), gl_WorkGroupSize[1], gl_WorkGroupSize[2]) : _GLF_FUZZED(uvec3(152802u, 63072u, 173310u)))))), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), clamp(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), _GLF_IDENTITY(gl_WorkGroupSize[0], (_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED((uvec3(156372u, 119906u, 785u) + subgroup_id)) : _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u))))[0]) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))[0]) | 0u), (_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u)) - 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), clamp(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), _GLF_IDENTITY(gl_WorkGroupSize[0], (_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED((uvec3(156372u, 119906u, 785u) + subgroup_id)) : _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u))))[0]) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))[0]) | 0u), (_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u)) - 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), clamp(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), _GLF_IDENTITY(gl_WorkGroupSize[0], (_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED((uvec3(156372u, 119906u, 785u) + subgroup_id)) : _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u))))[0]) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))[0]) | 0u), (_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u)) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), clamp(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), _GLF_IDENTITY(gl_WorkGroupSize[0], (_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED((uvec3(156372u, 119906u, 785u) + subgroup_id)) : _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u))))[0]) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))[0]) | 0u), (_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u)) - 0u)))))))), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) | (gl_WorkGroupSize), min((gl_WorkGroupSize) | (gl_WorkGroupSize), (gl_WorkGroupSize) | (gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 0u | (~ (0u))))), 0u))[2]), (true ? uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), clamp(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), _GLF_IDENTITY(gl_WorkGroupSize[0], (_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) << 0u)) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], 0u + (_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[_GLF_IDENTITY(0, (false ? _GLF_FUZZED((30585 >> -63344)) : 0))]), (~ (gl_WorkGroupSize[0])) ^ 0u))))), (gl_WorkGroupSize[0]) | 0u), (_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u)) - 0u))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u))[1], gl_WorkGroupSize[2]) : _GLF_FUZZED(uvec3(152802u, 63072u, 173310u)))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], _GLF_IDENTITY((gl_WorkGroupSize[0]) | 0u, ((gl_WorkGroupSize[0]) | 0u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), _GLF_IDENTITY(gl_WorkGroupSize[0], _GLF_IDENTITY((gl_WorkGroupSize[_GLF_IDENTITY(0, max(0, 0))]), ((gl_WorkGroupSize[_GLF_IDENTITY(0, max(0, 0))])) | ((gl_WorkGroupSize[_GLF_IDENTITY(0, max(0, 0))]))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], _GLF_IDENTITY((gl_WorkGroupSize[0]), ((gl_WorkGroupSize[0])) ^ 0u) | _GLF_IDENTITY(0u, 0u | (0u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], max(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[0], 0u + (gl_WorkGroupSize[0])))), (gl_WorkGroupSize[0]) | 0u)) - 0u))), gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))[_GLF_IDENTITY(2, 0 | (_GLF_IDENTITY(2, int(int(_GLF_IDENTITY(2, 0 ^ (2)))))))], max(gl_WorkGroupSize[_GLF_IDENTITY(2, 0 | (_GLF_IDENTITY(2, int(int(_GLF_IDENTITY(2, 0 ^ (2)))))))], gl_WorkGroupSize[_GLF_IDENTITY(2, 0 | (_GLF_IDENTITY(2, int(int(_GLF_IDENTITY(2, 0 ^ (2)))))))]))), (true ? uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), clamp(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-75901) : 0))]) | 0u), _GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (~ (0))), 0))]) | _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) - (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u)) - 0u, clamp((_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u)) - 0u, (_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u)) - 0u, (_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u)) - 0u))))), gl_WorkGroupSize[1], gl_WorkGroupSize[2]) : _GLF_FUZZED(uvec3(152802u, 63072u, 173310u))))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(0, (0) / 1)], max(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | (gl_WorkGroupSize[0])), gl_WorkGroupSize[0]))) | 0u), clamp(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), _GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), (_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u)) - _GLF_IDENTITY(0u, (0u) + 0u)))), _GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) / 1u), gl_WorkGroupSize[2]), (_GLF_IDENTITY(true ? uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, max(0, 0))]) | 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u))[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-75373) : 0)) | (0))]) | 0u), _GLF_IDENTITY(gl_WorkGroupSize[0], (_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), max(~ (0), ~ (0))))), (_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))) >> 0)], (true ? gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), max(~ (0), ~ (0))))), (_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))) >> 0)] : _GLF_FUZZED((41861u << subgroup_size))))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), (_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(0, 0))))], (gl_WorkGroupSize[0]) | 0u)) - 0u))), gl_WorkGroupSize[1], gl_WorkGroupSize[2]) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(152802u, min(152802u, 152802u)), 63072u, 173310u)), (_GLF_IDENTITY(true ? uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, max(0, 0))]) | 0u), clamp(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, 0 | (0))]) | 0u), _GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))) >> 0)]) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, clamp(0, 0, 0))]) | 0u), (_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(0, 0))))], (gl_WorkGroupSize[0]) | 0u)) - 0u))), gl_WorkGroupSize[1], gl_WorkGroupSize[2]) : _GLF_FUZZED(uvec3(152802u, 63072u, 173310u)), ~ (~ (true ? uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, max(0, 0))]) | 0u), clamp(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, 0 | (0))]) | 0u), _GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))))))) >> 0)]) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), (_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, ~ (~ (0))))), (0) | (_GLF_IDENTITY(0, max(0, 0))))], (gl_WorkGroupSize[0]) | 0u)) - 0u))), gl_WorkGroupSize[1], gl_WorkGroupSize[2]) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(152802u, 63072u, 173310u)), max(_GLF_FUZZED(uvec3(152802u, 63072u, 173310u)), _GLF_IDENTITY(_GLF_FUZZED(uvec3(152802u, 63072u, 173310u)), clamp(_GLF_FUZZED(uvec3(152802u, 63072u, 173310u)), _GLF_FUZZED(uvec3(152802u, 63072u, 173310u)), _GLF_FUZZED(uvec3(152802u, 63072u, 173310u)))))))))) | (true ? uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), (true ? max(0, 0) : _GLF_FUZZED(34667))))]) | 0u), clamp(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, 0 | (0))]) | 0u), _GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(-82111) : int(_GLF_ONE(1.0, injectionSwitch.y)))))) >> 0)]) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), (_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(0, 0))))], (gl_WorkGroupSize[0]) | 0u)) - 0u))), gl_WorkGroupSize[1], gl_WorkGroupSize[2]) : _GLF_FUZZED(uvec3(152802u, 63072u, 173310u)))))), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), clamp(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), _GLF_IDENTITY(gl_WorkGroupSize[0], (_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED((uvec3(156372u, 119906u, 785u) + subgroup_id)) : _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u))))[0]) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))[0]) | 0u), (_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u)) - 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), clamp(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), _GLF_IDENTITY(gl_WorkGroupSize[0], (_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED((uvec3(156372u, 119906u, 785u) + subgroup_id)) : _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u))))[0]) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))[0]) | 0u), (_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u)) - 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), clamp(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), _GLF_IDENTITY(gl_WorkGroupSize[0], (_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED((uvec3(156372u, 119906u, 785u) + subgroup_id)) : _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u))))[0]) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))[0]) | 0u), (_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u)) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), clamp(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), _GLF_IDENTITY(gl_WorkGroupSize[0], (_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED((uvec3(156372u, 119906u, 785u) + subgroup_id)) : _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u))))[0]) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))[0]) | 0u), (_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u)) - 0u)))))))), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) | (gl_WorkGroupSize), min((gl_WorkGroupSize) | (gl_WorkGroupSize), (gl_WorkGroupSize) | (gl_WorkGroupSize))))) << uvec3(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 0u | (~ (0u))))), 0u))[2]), (true ? uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), clamp(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), _GLF_IDENTITY(gl_WorkGroupSize[0], (_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) << 0u)) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], 0u + (_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[_GLF_IDENTITY(0, (false ? _GLF_FUZZED((30585 >> -63344)) : 0))]), (~ (gl_WorkGroupSize[0])) ^ 0u))))), (gl_WorkGroupSize[0]) | 0u), (_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u)) - 0u))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u))[1], gl_WorkGroupSize[2]) : _GLF_FUZZED(uvec3(152802u, 63072u, 173310u)))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], _GLF_IDENTITY((gl_WorkGroupSize[0]) | 0u, ((gl_WorkGroupSize[0]) | 0u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), _GLF_IDENTITY(gl_WorkGroupSize[0], _GLF_IDENTITY((gl_WorkGroupSize[_GLF_IDENTITY(0, max(0, 0))]), ((gl_WorkGroupSize[_GLF_IDENTITY(0, max(0, 0))])) | ((gl_WorkGroupSize[_GLF_IDENTITY(0, max(0, 0))]))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], _GLF_IDENTITY((gl_WorkGroupSize[0]), ((gl_WorkGroupSize[0])) ^ 0u) | _GLF_IDENTITY(0u, 0u | (0u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], max(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[0], 0u + (gl_WorkGroupSize[0])))), (gl_WorkGroupSize[0]) | 0u)) - 0u))), gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))[_GLF_IDENTITY(2, 0 | (_GLF_IDENTITY(2, int(int(_GLF_IDENTITY(2, 0 ^ (2)))))))], max(gl_WorkGroupSize[_GLF_IDENTITY(2, 0 | (_GLF_IDENTITY(2, int(int(_GLF_IDENTITY(2, 0 ^ (2)))))))], gl_WorkGroupSize[_GLF_IDENTITY(2, 0 | (_GLF_IDENTITY(2, int(int(_GLF_IDENTITY(2, 0 ^ (2)))))))]))), (true ? uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), clamp(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-75901) : 0))]) | 0u), _GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (~ (0))), 0))]) | _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) - (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u)) - 0u, clamp((_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u)) - 0u, (_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u)) - 0u, (_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u)) - 0u))))), gl_WorkGroupSize[1], gl_WorkGroupSize[2]) : _GLF_FUZZED(uvec3(152802u, 63072u, 173310u))))))))))))))) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) - 0u))), _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u | (0u)))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(1u, (1u) | 0u)), (uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(_GLF_IDENTITY(0u, 1u * (0u)), 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(0u, 0u))) | _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(0u, 0u ^ (0u))))), uint(uvec2(uint(uint((_GLF_IDENTITY(0u, 0u ^ (0u))))), 1u)))), (_GLF_IDENTITY(0u, 0u ^ (0u))), (_GLF_IDENTITY(0u, 0u ^ (0u)))))))), 1u)) | uvec4(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) * 1u), 0u)), 0u, 0u, 0u))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) * 1u), 0u))), (false ? _GLF_FUZZED(uvec3(112693u, 175707u, 190981u)) : uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))))))), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u)), 1u), (uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))), 1u)) | uvec4(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (uint(uint(0u))))), 0u, 0u, 0u))), clamp(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u)) >> uvec3(0u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))), 0u), uvec3(uvec4((uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u)) >> uvec3(0u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))), 0u), 1u)))), 1u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), ((0u)) ^ 0u))), 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), ((0u)) ^ 0u))), 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), ((0u)) ^ 0u))), 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), ((0u)) ^ 0u))), 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))))) | (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), ((0u)) ^ 0u))), 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u)))), 1u)) | uvec4(0u, 0u, 0u, 0u))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY((uvec3(0u, 0u, 0u)), max((uvec3(0u, 0u, 0u)), (uvec3(0u, 0u, 0u)))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(1u, (1u) ^ 0u)), (uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY((uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u), ((uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))), 1u)) | uvec4(0u, 0u, 0u, 0u))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), (true ? uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u) : _GLF_FUZZED(uvec3(53976u, 115405u, 74444u))))))) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u)))), min(uvec3(uvec3(_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), 0u), (uvec3(0u, 0u, 0u)) >> uvec3(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u)))), uvec3(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u)))))))), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(7u), uint(7u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(7u), uint(7u)))), clamp(_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(7u), uint(7u)))), _GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(7u), uint(7u)))), _GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))), _GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))) >> uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(0u, 0u | (0u)))), 0u, 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u)), _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(subgroup_local_id))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), 0u)))) >> uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u))) >> uvec3(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u)))) >> uvec3(0u, 0u, 0u)))))), 1u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | (_GLF_IDENTITY(0u, (0u) >> 0u)))), (uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, ~ (~ (0u))))))), 1u), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u), (uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u)), 1u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)) << uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u)), 1u)) / uvec4(1u, 1u, 1u, 1u)), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u)), 1u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u)), 1u)) / uvec4(1u, 1u, 1u, 1u))))) | uvec4(0u, 0u, 0u, 0u)))))) << uvec3(0u, 0u, 0u)))).x;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, clamp(1, 1, 1))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      continue;
     break;
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))))))) && true)));
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (1u ^ 0u) * (_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u))) * _GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u);
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size), 0u + ((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size))) << 0u))) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u + ((subgroup_local_id + 1) % subgroup_size))) - _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), min((0u), (0u)))) | (_GLF_IDENTITY((0u), ((0u)) | 0u))) << 0u))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) | _GLF_IDENTITY((_GLF_IDENTITY((0u), ((0u)) | 0u)), ((_GLF_IDENTITY((0u), ((0u)) | 0u))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) << 0u)))), min(~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec2((subgroup_local_id + 1), 0u)), (uint(uvec2((subgroup_local_id + 1), 0u))) ^ 0u)) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) | (_GLF_IDENTITY((0u), ((0u)) | 0u))) << 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec2((subgroup_local_id + 1), 0u)), (uint(uvec2((subgroup_local_id + 1), 0u))) ^ 0u)) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) | (_GLF_IDENTITY((0u), ((0u)) | 0u))) << 0u)), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec2((subgroup_local_id + 1), 0u)), (uint(uvec2((subgroup_local_id + 1), 0u))) ^ 0u)) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) | (_GLF_IDENTITY((0u), ((0u)) | 0u))) << 0u))) >> 0u)))))), _GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size)), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) % subgroup_size) - _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) | (_GLF_IDENTITY((0u), ((0u)) | 0u))) << 0u)))), (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), uint(uint((subgroup_local_id + _GLF_IDENTITY(1, 1 * (1)))))) % subgroup_size), min((_GLF_IDENTITY((subgroup_local_id + 1), uint(uint((subgroup_local_id + _GLF_IDENTITY(1, 1 * (1)))))) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1), uint(uint((subgroup_local_id + _GLF_IDENTITY(1, 1 * (1)))))) % subgroup_size))) - _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), ((0u)) | (_GLF_IDENTITY((0u), ((0u)) | 0u))) << 0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), ((0u)) | (_GLF_IDENTITY((0u), ((0u)) | 0u))) << 0u), ~ (~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((0u), min((0u), (0u))), ((0u)) | (_GLF_IDENTITY(_GLF_IDENTITY((0u), ((0u)) | 0u), min(_GLF_IDENTITY((0u), ((0u)) | 0u), _GLF_IDENTITY((0u), ((0u)) | 0u))))) << 0u), _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY((0u), min((0u), (0u))), ((0u)) | (_GLF_IDENTITY(_GLF_IDENTITY((0u), ((0u)) | 0u), min(_GLF_IDENTITY((0u), ((0u)) | 0u), _GLF_IDENTITY((0u), ((0u)) | 0u))))) << 0u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u ^ (uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY((0u), min((0u), (0u))), ((0u)) | (_GLF_IDENTITY(_GLF_IDENTITY((0u), ((0u)) | 0u), min(_GLF_IDENTITY((0u), ((0u)) | 0u), _GLF_IDENTITY((0u), ((0u)) | 0u))))) << 0u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), uint(uint((subgroup_local_id + _GLF_IDENTITY(1, 1 * (1)))))) % subgroup_size), min((_GLF_IDENTITY((subgroup_local_id + 1), uint(uint((subgroup_local_id + _GLF_IDENTITY(1, 1 * (1)))))) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1), uint(uint((subgroup_local_id + _GLF_IDENTITY(1, 1 * (1)))))) % subgroup_size))) - _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), ((0u)) | (_GLF_IDENTITY((0u), ((0u)) | 0u))) << 0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), ((0u)) | (_GLF_IDENTITY((0u), ((0u)) | 0u))) << 0u), ~ (~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((0u), min((0u), (0u))), ((0u)) | (_GLF_IDENTITY(_GLF_IDENTITY((0u), ((0u)) | 0u), min(_GLF_IDENTITY((0u), ((0u)) | 0u), _GLF_IDENTITY((0u), ((0u)) | 0u))))) << 0u), _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY((0u), min((0u), (0u))), ((0u)) | (_GLF_IDENTITY(_GLF_IDENTITY((0u), ((0u)) | 0u), min(_GLF_IDENTITY((0u), ((0u)) | 0u), _GLF_IDENTITY((0u), ((0u)) | 0u))))) << 0u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u ^ (uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY((0u), min((0u), (0u))), ((0u)) | (_GLF_IDENTITY(_GLF_IDENTITY((0u), ((0u)) | 0u), min(_GLF_IDENTITY((0u), ((0u)) | 0u), _GLF_IDENTITY((0u), ((0u)) | 0u))))) << 0u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))))))), 0u | ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), uint(uint((subgroup_local_id + _GLF_IDENTITY(1, 1 * (1)))))) % subgroup_size), min((_GLF_IDENTITY((subgroup_local_id + 1), uint(uint((subgroup_local_id + _GLF_IDENTITY(1, 1 * (1)))))) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1), uint(uint((subgroup_local_id + _GLF_IDENTITY(1, 1 * (1)))))) % subgroup_size))) - _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), ((0u)) | (_GLF_IDENTITY((0u), ((0u)) | 0u))) << 0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), ((0u)) | (_GLF_IDENTITY((0u), ((0u)) | 0u))) << 0u), ~ (~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((0u), min((0u), (0u))), ((0u)) | (_GLF_IDENTITY(_GLF_IDENTITY((0u), ((0u)) | 0u), min(_GLF_IDENTITY((0u), ((0u)) | 0u), _GLF_IDENTITY((0u), ((0u)) | 0u))))) << 0u), _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY((0u), min((0u), (0u))), ((0u)) | (_GLF_IDENTITY(_GLF_IDENTITY((0u), ((0u)) | 0u), min(_GLF_IDENTITY((0u), ((0u)) | 0u), _GLF_IDENTITY((0u), ((0u)) | 0u))))) << 0u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u ^ (uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY((0u), min((0u), (0u))), ((0u)) | (_GLF_IDENTITY(_GLF_IDENTITY((0u), ((0u)) | 0u), min(_GLF_IDENTITY((0u), ((0u)) | 0u), _GLF_IDENTITY((0u), ((0u)) | 0u))))) << 0u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))))))))) * 1u))) << 0u)))));
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64), (_GLF_IDENTITY((64), ((64)) * 1)) ^ 0) | _GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((64)), ~ (~ (_GLF_IDENTITY(~ ((64)), 0 ^ (~ ((64)))))))))), 0);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! _GLF_IDENTITY((false), ((false)) && true))))))) || false)))
  {
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))))) < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
                  {
                  }
                 else
                  {
                   return;
                  }
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) && (true)), false)), _GLF_IDENTITY(! (! (bool(bvec4(false, true, true, false)))), _GLF_IDENTITY((! (! (bool(bvec4(false, true, true, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, false)))))))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(bool(bvec2((! (! (bool(bvec4(false, true, true, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, false)))))))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false)), bool(bool(bool(bvec2((! (! (bool(bvec4(false, true, true, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, false)))))))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false)))))))))))
                  {
                   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), true, true))))
                    {
                    }
                   else
                    {
                     do
                      {
                       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
                        break;
                       return;
                      }
                     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))));
                    }
                   do
                    {
                     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))
                      return;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               if(_GLF_DEAD(false))
                return;
               for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))) * (_injected_loop_counter)) != 1); _injected_loop_counter ++)
                {
                 return;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.2)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     return;
                    }
                  }
                 return;
                 if(_GLF_DEAD(false))
                  return;
                }
              }
             else
              {
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            return;
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         do
          {
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         return;
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(float(virtual_gid)))), 1.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0)))) - 0.0) < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, float(vec4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0))))), max(injectionSwitch.y, injectionSwitch.y))), false || ((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, float(vec4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-80.24)), bool(false))), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0))))), max(injectionSwitch.y, injectionSwitch.y)))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, float(vec4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0))))), max(injectionSwitch.y, injectionSwitch.y))), false || ((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, float(vec4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-80.24)), bool(false))), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0))))), max(injectionSwitch.y, injectionSwitch.y))))))), false || (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, float(vec4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0))))), max(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, float(vec4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0))))), max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, float(vec4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0))))), max(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(987.724) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, float(vec4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0))))), max(injectionSwitch.y, injectionSwitch.y))))) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, float(vec4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0))))), max(injectionSwitch.y, injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, float(vec4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0))))), max(injectionSwitch.y, injectionSwitch.y))))))), false || ((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, float(vec4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-80.24)), bool(false))), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0))))), max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, float(vec4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-80.24)), bool(false))), 1.0, _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0)), clamp(_GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0)), 1.0 * (determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0))))))), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(0.0))))) - 0.0))))))))))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! _GLF_IDENTITY((true), bool(bvec4((true), false, true, false)))))))), false, false)))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ _GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) != 1); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            continue;
          }
        }
       else
        {
        }
       do
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) - 0.0), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), length(vec4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(3.4)), bool(false))), 0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0)), clamp(float(mat3(injectionSwitch.x, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0)), float(mat3(injectionSwitch.x, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), (true ? length(vec4(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(8025.0638))), 1.0, 1.0, 1.0, 0.0, 0.0)), float(mat3(injectionSwitch.x, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 1.0, sin(0.0), 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0))))))) > injectionSwitch.y))))
            return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   for(int _injected_loop_counter = _GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), 0 + (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), min((0 << _GLF_IDENTITY(int(5), int(5))), (0 << _GLF_IDENTITY(int(5), int(5)))))))) >> 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      break;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), ~ (~ (uint(1)))), 4, 64, 4);
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(28421u))), vec2(_GLF_FUZZED(-88.98), (injectionSwitch)[1]), bvec2(false, true))).y)) && (false))), false || (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(28421u))), vec2(_GLF_FUZZED(-88.98), (injectionSwitch)[1]), bvec2(false, true))).y)) && (false))))), false || (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))));
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), false))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4((false), true, false, false)))) || false) && true)), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4((false), true, false, false)))) || false) && true))))))
  {
  }
 else
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       atomicStore(checker[virtual_gid], read, 4, 64, 4);
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec2(-4.5, -5.7)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec2(true, true)))) || false), (injectionSwitch.x < injectionSwitch.y)))) && true), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec2(-4.5, -5.7)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec2(true, true)))) || false), (injectionSwitch.x < injectionSwitch.y)))) && true), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec2(-4.5, -5.7)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec2(true, true)))) || false), (injectionSwitch.x < injectionSwitch.y)))) && true), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))
      {
       if(_GLF_DEAD(false))
        continue;
       do
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat3(injectionSwitch[1], 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))).x > injectionSwitch.y))))))
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        {
         do
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0)); _injected_loop_counter --)
                {
                 return;
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
         return;
        }
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1), ~ (~ (ivec2(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1), ~ (~ (ivec2(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))), clamp(_GLF_IDENTITY(ivec2(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1), ~ (~ (ivec2(int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-7.9, -6880.8089)) : injectionSwitch)).x, cos(0.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-7.9, -6880.8089)) : injectionSwitch)).x)))), 1)))), _GLF_IDENTITY(ivec2(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1), ~ (~ (ivec2(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))), _GLF_IDENTITY(ivec2(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1), ~ (~ (ivec2(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED((float(-76814) + -47.66))), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))), 1), ~ (~ (ivec2(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))), clamp(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-75.48)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), int(ivec3(_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-75.48)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), clamp(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-75.48)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-75.48)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-75.48)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), 1, 1))), 1), ~ (~ (ivec2(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))), _GLF_IDENTITY(ivec2(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1), ~ (~ (_GLF_IDENTITY(ivec2(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ivec2(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1) : _GLF_FUZZED(ivec2(93027, 93059))))))), _GLF_IDENTITY(ivec2(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1), ~ (~ (ivec2(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))))))) + ivec2(0, 0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) ^ 0)))))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(0))) + (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0)), float(mat3x4(float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0)))))) / 1)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
         return;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | 0), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | 0), ~ (~ (_GLF_IDENTITY(int(2), (int(2)) | 0)))), _GLF_IDENTITY(int(2), (int(2)) | 0))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | 0), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | 0), ~ (~ (_GLF_IDENTITY(int(2), (int(2)) | _GLF_IDENTITY(0, (0) >> 0))))), _GLF_IDENTITY(int(2), (int(2)) | 0))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | 0), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | 0), ~ (~ (_GLF_IDENTITY(int(2), (int(2)) | 0)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | 0), ~ (~ (_GLF_IDENTITY(int(2), (int(2)) | 0)))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | 0), ~ (~ (_GLF_IDENTITY(int(2), (int(2)) | 0)))), 0)))))), _GLF_IDENTITY(int(2), (int(2)) | 0))), 0))), 1, ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(_injected_loop_counter) : int(0))))))))) | 0)))); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true && (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true && (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true && (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))), false))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
      }
     else
      {
      }
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      continue;
     return;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
}
