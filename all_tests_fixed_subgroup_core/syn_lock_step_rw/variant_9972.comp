#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_36 {
 bvec4 _f0;
 uint _f1;
 mat3x4 _f2;
 mat3x2 _f3;
 mat3 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_37 {
 _GLF_struct_36 _f0;
} ;

struct _GLF_struct_34 {
 mat3x2 _f0;
 mat2x4 _f1;
 float _f2;
} ;

struct _GLF_struct_33 {
 mat3x2 _f0;
 mat3x2 _f1;
 mat2x4 _f2;
 mat2x3 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_32 {
 vec2 _f0;
 uvec4 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_31 {
 uvec2 _f0;
 uvec4 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_30 {
 mat4x2 _f0;
 mat2x4 _f1;
 uvec2 _f2;
 bvec4 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_35 {
 _GLF_struct_30 _f0;
 _GLF_struct_31 _f1;
 _GLF_struct_32 _f2;
 _GLF_struct_33 _f3;
 mat4 _f4;
 mat2x3 _f5;
 _GLF_struct_34 _f6;
} ;

struct _GLF_struct_38 {
 _GLF_struct_35 _f0;
 uvec3 _f1;
 mat2 _f2;
 mat3 _f3;
 mat2x3 _f4;
 _GLF_struct_37 _f5;
 uint next_virtual_gid;
} ;

struct _GLF_struct_27 {
 bvec2 _f0;
 mat4x2 _f1;
 mat3 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_28 {
 _GLF_struct_27 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_25 {
 ivec3 _f0;
} ;

struct _GLF_struct_24 {
 mat4 _f0;
 mat2 _f1;
 vec4 _f2;
 uvec2 _f3;
 uvec2 _f4;
 bool _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_26 {
 bvec2 _f0;
 float _f1;
 mat2 _f2;
 _GLF_struct_24 _f3;
 _GLF_struct_25 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_22 {
 vec3 _f0;
 float _f1;
 mat2x3 _f2;
 ivec2 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_21 {
 vec3 _f0;
 mat4x3 _f1;
 uvec2 _f2;
 mat4x3 _f3;
 mat3x2 _f4;
 vec4 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_20 {
 ivec3 _f0;
 ivec2 _f1;
 ivec4 _f2;
 bvec4 _f3;
 mat2x3 _f4;
 uint _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_23 {
 _GLF_struct_20 _f0;
 _GLF_struct_21 _f1;
 _GLF_struct_22 _f2;
} ;

struct _GLF_struct_29 {
 _GLF_struct_23 _f0;
 _GLF_struct_26 _f1;
 mat2x4 _f2;
 _GLF_struct_28 _f3;
 uint workgroup_base;
 bvec4 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_17 {
 mat3x2 _f0;
 mat2x4 _f1;
 mat3x2 _f2;
 vec3 _f3;
 mat4x2 _f4;
 mat2x4 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_18 {
 _GLF_struct_17 _f0;
} ;

struct _GLF_struct_15 {
 mat2x3 _f0;
} ;

struct _GLF_struct_16 {
 _GLF_struct_15 _f0;
} ;

struct _GLF_struct_13 {
 mat2 _f0;
 bvec4 _f1;
 mat3x4 _f2;
 int _f3;
 mat2x4 _f4;
 mat4x2 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_12 {
 mat4 _f0;
} ;

struct _GLF_struct_11 {
 vec3 _f0;
} ;

struct _GLF_struct_14 {
 ivec4 _f0;
 _GLF_struct_11 _f1;
 _GLF_struct_12 _f2;
 mat4x3 _f3;
 _GLF_struct_13 _f4;
} ;

struct _GLF_struct_9 {
 int _f0;
} ;

struct _GLF_struct_8 {
 vec2 _f0;
 ivec4 _f1;
 vec3 _f2;
 float _f3;
 mat4x3 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_7 {
 mat4x3 _f0;
 mat3x2 _f1;
 bvec2 _f2;
 ivec4 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_10 {
 bvec3 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_8 _f2;
 mat3x2 _f3;
 _GLF_struct_9 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_5 {
 vec4 _f0;
} ;

struct _GLF_struct_4 {
 mat2x3 _f0;
 float _f1;
} ;

struct _GLF_struct_6 {
 mat4x2 _f0;
 _GLF_struct_4 _f1;
 uvec3 _f2;
 _GLF_struct_5 _f3;
} ;

struct _GLF_struct_19 {
 _GLF_struct_6 _f0;
 _GLF_struct_10 _f1;
 _GLF_struct_14 _f2;
 _GLF_struct_16 _f3;
 mat2 _f4;
 uint workgroup_size;
 _GLF_struct_18 _f5;
} ;

struct _GLF_struct_1 {
 vec3 _f0;
} ;

struct _GLF_struct_0 {
 mat4x2 _f0;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 uint num_workgroup;
 _GLF_struct_1 _f1;
 vec3 _f2;
 mat3 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 vec2 _f1;
 mat4x2 _f2;
 mat2x3 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))) && true), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(false)) || false)), (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))) && true)) && true))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, _GLF_IDENTITY(true, ! (! (true))))), (bool(bvec4(_GLF_DEAD(false), true, false, _GLF_IDENTITY(true, ! (! (true)))))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), ! (! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), ! (! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-97.32)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(_GLF_struct_0(mat4x2(1.0)), gl_NumWorkGroups.x, _GLF_struct_1(vec3(1.0)), vec3(1.0), mat3(1.0), vec2(1.0)), vec2(1.0), mat4x2(1.0), mat2x3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(mix(64.80, -8.3, 33.29))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(6649.8230)), bvec2(false, false)))))).x, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))))) - _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_size)) : _GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat4x3(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))), length(vec3(0.0, 0.0, 0.0)), sin(0.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sin(0.0), 0.0, 1.0, 1.0, cos(0.0), 0.0)))))), injectionSwitch)).x)) > _GLF_IDENTITY(injectionSwitch.y, log(1.0) + (injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(6649.8230)), bvec2(false, false)))))).x, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))))) - _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_size)) : _GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat4x3(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))), length(vec3(0.0, 0.0, 0.0)), sin(0.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sin(0.0), 0.0, 1.0, 1.0, cos(0.0), 0.0)))))), injectionSwitch)).x)) > _GLF_IDENTITY(injectionSwitch.y, log(1.0) + (injectionSwitch.y)), false))), _GLF_IDENTITY(false, bool(bvec2(false, true))) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(6649.8230)), bvec2(false, false)))))).x, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))))) - _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_size)) : _GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat4x3(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))), length(vec3(0.0, 0.0, 0.0)), sin(0.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sin(0.0), 0.0, 1.0, 1.0, cos(0.0), 0.0)))))), injectionSwitch)).x)) > _GLF_IDENTITY(injectionSwitch.y, log(1.0) + (injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0), mat2x3(mat4(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)))))))[1]), vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(6649.8230)), bvec2(false, false)))))).x, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))))) - _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_size)) : _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat4x3(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))), length(vec3(0.0, 0.0, 0.0)), sin(0.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sin(0.0), 0.0, 1.0, 1.0, cos(0.0), 0.0))), mix(vec2((_GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat4x3(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))), length(vec3(0.0, 0.0, 0.0)), sin(0.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sin(0.0), 0.0, 1.0, 1.0, cos(0.0), 0.0))))[0], _GLF_FUZZED((236.887))), vec2(_GLF_FUZZED(-68.68), (_GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat4x3(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))), length(vec3(0.0, 0.0, 0.0)), sin(0.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sin(0.0), 0.0, 1.0, 1.0, cos(0.0), 0.0))))[1]), bvec2(false, true)))))), injectionSwitch)).x)) > _GLF_IDENTITY(injectionSwitch.y, log(1.0) + (injectionSwitch.y)), false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, true)), false || _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, false, true))), ! (! ((bool(bvec4(_GLF_DEAD(false), false, false, true)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-653.527), (mat2(1.0) * (injectionSwitch))[1]), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-8.0)), bvec2(true, false)))).x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (! ((_GLF_IDENTITY(false, (false) || false))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))), bool(bool(false)))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, false)), (bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, false))) || false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_19 _GLF_struct_replacement_19 = _GLF_struct_19(_GLF_struct_6(mat4x2(1.0), _GLF_struct_4(mat2x3(1.0), 1.0), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(_GLF_IDENTITY(uvec4(uvec3(1u), 1u), clamp(uvec4(uvec3(1u), 1u), uvec4(uvec3(1u), 1u), uvec4(uvec3(1u), 1u))))), _GLF_struct_5(vec4(1.0))), _GLF_struct_10(bvec3(true), _GLF_struct_7(mat4x3(1.0), mat3x2(1.0), bvec2(true), ivec4(1), mat3x4(1.0)), _GLF_struct_8(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), ivec4(1), _GLF_IDENTITY(vec3(1.0), (vec3(1.0)) + cross(vec3(8.5, _GLF_IDENTITY(-0.6, mix(float(-0.6), float(_GLF_FUZZED(-1.7)), bool(false))), 40.58), vec3(_GLF_IDENTITY(8.5, (8.5) * 1.0), -0.6, 40.58))), 1.0, mat4x3(1.0), mat3x2(1.0)), mat3x2(1.0), _GLF_struct_9(1), ivec3(1)), _GLF_struct_14(_GLF_IDENTITY(ivec4(1), (ivec4(1)) - ivec4(0, 0, 0, 0)), _GLF_struct_11(vec3(1.0)), _GLF_struct_12(mat4(1.0)), mat4x3(1.0), _GLF_struct_13(mat2(1.0), bvec4(true), mat3x4(1.0), 1, mat2x4(1.0), mat4x2(1.0), bvec2(true))), _GLF_struct_16(_GLF_struct_15(mat2x3(1.0))), mat2(1.0), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))).x, _GLF_struct_18(_GLF_struct_17(mat3x2(1.0), mat2x4(1.0), mat3x2(1.0), vec3(1.0), mat4x2(1.0), mat2x4(1.0), mat3x2(1.0))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_29 _GLF_struct_replacement_29 = _GLF_struct_29(_GLF_struct_23(_GLF_struct_20(ivec3(1), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(30646) : 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(30646) : 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)), 1))) ^ 0)), ivec4(1), bvec4(true), mat2x3(1.0), 1u, mat2x4(1.0)), _GLF_struct_21(vec3(1.0), mat4x3(1.0), uvec2(1u), mat4x3(1.0), mat3x2(1.0), vec4(1.0), vec4(1.0)), _GLF_struct_22(vec3(1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-0.3))), clamp(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-495.617)), float(1.0), bool(true))))), 1.0, 1.0))), ivec2(1), ivec4(1))), _GLF_struct_26(bvec2(true), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, abs(1.0) * (1.0)), float(mat2x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-154.914)), float(1.0), bool(true)), (mix(float(_GLF_FUZZED(-154.914)), float(1.0), bool(true))) + 0.0), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(-154.914)), float(1.0), bool(true)), (mix(float(_GLF_FUZZED(-154.914)), float(1.0), bool(true))) + 0.0)) - 0.0)), 1.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 1.0))), min(_GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-154.914)), float(1.0), bool(true))), 1.0, _GLF_IDENTITY(exp(0.0), (true ? exp(0.0) : _GLF_FUZZED(210.641))), 0.0, 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), float(mat2x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-154.914)), float(1.0), bool(true))), 1.0, _GLF_IDENTITY(exp(0.0), mix(float(_GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(-652.638)), float(exp(0.0)), bool(true)))), float(_GLF_FUZZED(4.2)), bool(false))), 0.0, 1.0, 0.0, 0.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-4.0)))) - _GLF_IDENTITY(0.0, max(0.0, 0.0))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-154.914)), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(-154.914)), min(float(_GLF_FUZZED(-154.914)), float(_GLF_FUZZED(-154.914)))), _GLF_IDENTITY(float(_GLF_FUZZED(-154.914)), (float(_GLF_FUZZED(-154.914))) - 0.0), float(_GLF_FUZZED(-154.914)))), float(1.0), bool(true))), 1.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 1.0))), (false ? _GLF_FUZZED(-0.7) : _GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-154.914), 0.0 + (_GLF_FUZZED(-154.914)))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-154.914), 0.0 + (_GLF_FUZZED(-154.914)))), (float(_GLF_IDENTITY(_GLF_FUZZED(-154.914), 0.0 + (_GLF_FUZZED(-154.914))))) - 0.0), float(_GLF_IDENTITY(_GLF_FUZZED(-154.914), 0.0 + (_GLF_FUZZED(-154.914)))), float(_GLF_IDENTITY(_GLF_FUZZED(-154.914), 0.0 + (_GLF_FUZZED(-154.914)))))), float(1.0), bool(true))), 1.0, exp(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y))))), 1.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2.9)), float(1.0), bool(true))) : _GLF_FUZZED(-4.0)))) - 0.0), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-154.914)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(float(_GLF_FUZZED(-154.914)), min(float(_GLF_FUZZED(-154.914)), float(_GLF_FUZZED(-154.914)))), _GLF_IDENTITY(float(_GLF_FUZZED(-154.914)), (float(_GLF_FUZZED(-154.914))) - 0.0), float(_GLF_FUZZED(-154.914))), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY(float(_GLF_FUZZED(-154.914)), min(float(_GLF_FUZZED(-154.914)), float(_GLF_FUZZED(-154.914)))), _GLF_IDENTITY(float(_GLF_FUZZED(-154.914)), (float(_GLF_FUZZED(-154.914))) - 0.0), float(_GLF_FUZZED(-154.914))), (true ? clamp(_GLF_IDENTITY(float(_GLF_FUZZED(-154.914)), min(float(_GLF_FUZZED(-154.914)), float(_GLF_FUZZED(-154.914)))), _GLF_IDENTITY(float(_GLF_FUZZED(-154.914)), (float(_GLF_FUZZED(-154.914))) - 0.0), float(_GLF_FUZZED(-154.914))) : _GLF_FUZZED(2.7))), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(-154.914)), min(float(_GLF_FUZZED(-154.914)), float(_GLF_FUZZED(-154.914)))), _GLF_IDENTITY(float(_GLF_FUZZED(-154.914)), (float(_GLF_FUZZED(-154.914))) - 0.0), float(_GLF_FUZZED(-154.914)))))), float(1.0), bool(true))), 1.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 1.0))), (false ? _GLF_FUZZED(-0.7) : _GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-154.914)), float(1.0), bool(true))), 1.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-4.0)))) - 0.0), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-154.914)), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(-154.914)), min(float(_GLF_FUZZED(-154.914)), float(_GLF_FUZZED(-154.914)))), _GLF_IDENTITY(float(_GLF_FUZZED(-154.914)), _GLF_IDENTITY((float(_GLF_FUZZED(-154.914))) - 0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0))) + ((float(_GLF_FUZZED(-154.914))) - 0.0))), float(_GLF_FUZZED(-154.914)))), float(1.0), bool(true))), 1.0, exp(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, sin(0.0), tan(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0)))), _GLF_IDENTITY(0.0, (0.0) * 1.0))), 1.0))), (false ? _GLF_FUZZED(-0.7) : _GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-154.914)), float(1.0), bool(true))), 1.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 1.0)))))))) + 0.0), mix(float(_GLF_FUZZED(vec2(-226.957, -939.495).t)), float(_GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-154.914)), float(1.0), bool(true))), 1.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 1.0)))), bool(true))))), mat2(1.0), _GLF_struct_24(mat4(1.0), mat2(1.0), vec4(1.0), uvec2(1u), uvec2(1u), true, uvec3(1u)), _GLF_struct_25(ivec3(1)), mat3x2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0), mix(_GLF_IDENTITY(vec3((vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))[0], _GLF_FUZZED(-4561.5122), _GLF_FUZZED(1.4)), (vec3((vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))[0], _GLF_FUZZED(-4561.5122), _GLF_FUZZED(1.4))) - vec3(0.0, 0.0, 0.0)), vec3(_GLF_FUZZED(_GLF_IDENTITY(467.406, (467.406) - 0.0)), (vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))[1], (vec3(1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), float(vec2(round(length(normalize(vec2(1.0, 1.0)))), cos(0.0)))), 1.0))[2]), bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(vec3(6.8, -63.63, -536.947)) : _GLF_IDENTITY(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0), mix(vec3((vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))[0], _GLF_FUZZED(-4561.5122), _GLF_FUZZED(1.4)), vec3(_GLF_FUZZED(467.406), (vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))[1], (vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))[2]), bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), true, true))))))))), mat2x4(1.0), _GLF_struct_28(_GLF_struct_27(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! _GLF_IDENTITY(((true)), bool(bvec4(_GLF_IDENTITY(((true)), ! (! (((true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mat4x2(1.0), mat3(1.0), ivec4(1)), bvec4(true)), _GLF_struct_replacement_19.workgroup_size * workgroup_id, bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), false, _GLF_IDENTITY(false, (false) || false), true)))), false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(true, ! (! (true)))))))), false))), (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))), (! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), ! (! (! (true))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, false)), (bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y))))))))), ! (! (! (true)))))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))) || false), false, true))))) && true))), ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))), (! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, false)), (bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-32.06)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), min(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) / 1.0), float(injectionSwitch.y))), float(injectionSwitch.y))))), injectionSwitch.y))))))))), ! (! (! (true)))))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))) || false), false, true))))) && true)))) || false))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), bool(bvec4(true, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(! (! (! (! (true)))), true && (! (! (! (! (true)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (! (true)))))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))) || false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))))))))) && true, false || (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), bool(bvec4(true, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(! (! (! (! (true)))), true && (! (! (! (! (true)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (! (true)))))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))) || false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))))))))) && true, ((! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), bool(bvec4(true, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(! (! (! (! (true)))), true && (! (! (! (! (true)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (! (true)))))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))) || false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (true)))))))))))) && true) && true)))))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(913.777, -20.81)) : injectionSwitch)).x > injectionSwitch.y)), false)), ! (! (bool(bvec4((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))), (! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), ! _GLF_IDENTITY((! (! (true))), false || ((! (! (true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (! (true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), ! (! (! ((true))))))), ! (! (! (true)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))), true)))) || false), false, true))))) && _GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))), false)))) && true)))), vec3(1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_struct_replacement_29.workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_38 _GLF_struct_replacement_38 = _GLF_struct_38(_GLF_struct_35(_GLF_struct_30(mat4x2(1.0), mat2x4(1.0), uvec2(1u), bvec4(true), uvec2(1u)), _GLF_struct_31(uvec2(1u), uvec4(1u), mat3x4(1.0)), _GLF_struct_32(vec2(1.0), uvec4(1u), mat2x4(1.0)), _GLF_struct_33(mat3x2(1.0), mat3x2(1.0), mat2x4(1.0), mat2x3(1.0), uvec2(1u)), mat4(1.0), mat2x3(1.0), _GLF_struct_34(mat3x2(1.0), mat2x4(1.0), 1.0)), uvec3(1u), mat2(1.0), mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat2x3(1.0), _GLF_struct_37(_GLF_struct_36(bvec4(true), 1u, mat3x4(1.0), mat3x2(1.0), mat3(1.0), mat4x2(1.0))), _GLF_struct_replacement_29.workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), max(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))) | (subgroup_local_id)), subgroup_local_id)) + 1, subgroup_local_id + 1)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(min(subgroup_local_id + 1, subgroup_local_id + 1), (min(subgroup_local_id + 1, subgroup_local_id + 1)) - 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size))) + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)) + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)) : _GLF_FUZZED(subgroup_local_id)))) + _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, 0u ^ (0u))))))))) % _GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-365.391)), float(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 0.0, 0.0, 1.0))), bool(true)))))) > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
  }
 atomicStore(buf[_GLF_struct_replacement_38.next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
