#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), (true && (false)) || false)) || false)), true, false)), (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, true && (false)), true, false)), bool(bvec3(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true), true, false)), true, false)))) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec4(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))), false), false, false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), ((_GLF_IDENTITY(! (false), false || (! (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), true && (bool(bvec3(false, false, false)))))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - sin(vec2(0.0, 0.0))).y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false)))))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))), ! (! (false)))), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (true && (_GLF_DEAD(false))), ! (! (! (true && (_GLF_DEAD(false)))))))))))) || _GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), ! (! (! (_GLF_IDENTITY(true, (true) && true))))))))), (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))), ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (true && (_GLF_DEAD(false))), ! (! (! (true && _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false))))))))))) || _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x) * cos(0.0)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false || (true), (false || (true)) && true), (_GLF_IDENTITY(false || (true), (false || (true)) && true)) && true)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))), false || (bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), ! (! (bool((false)))))), ! _GLF_IDENTITY((! (bool(bool((false))))), false || ((! (bool(bool((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))))))))))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), (_GLF_IDENTITY((false), ((false)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || ((! (bool(bool((false))))))), (_GLF_IDENTITY(_GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY((false), ((false)) && true))))), false || ((! (bool(bool((false))))))), false || (_GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, true && (((false)) && true))))))), false || ((! (bool(bool((false)))))))))) && true)))) || false), bool(bvec4(_GLF_IDENTITY(! (false), (! _GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false))))), _GLF_IDENTITY(bool(bool((false))), ! _GLF_IDENTITY((! (bool(bool((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), bool(bvec3(! (! (_GLF_IDENTITY(false, bool(bool(false))))), false, true)))) || false)) && true))))))), false || ((! (bool(bool((false)))))))))) || false), true, _GLF_IDENTITY(false, bool(bvec2(false, false))), true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), true && ((false))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), true && ((false))), true, false)))))))), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool((false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool((false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool((false))))), false, true), bvec3(bvec3(bvec3(bool(bool((false))), false, true)))))))), false || ((! (bool(bool((false))))))), bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool((false))), bool(_GLF_IDENTITY(bvec3(bool(bool((false))), false, true), bvec3(bvec3(bvec3(bool(bool((false))), false, true))))))), ! (! (! (_GLF_IDENTITY(bool(bool((false))), bool(_GLF_IDENTITY(bvec3(bool(bool((false))), false, true), bvec3(bvec3(bvec3(bool(bool((false))), false, true))))))))))), false || ((! (bool(bool((false))))))), bool(bool(! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool((false))), bool(_GLF_IDENTITY(bvec3(bool(bool((false))), false, true), bvec3(bvec3(bvec3(bool(bool((false))), false, true)))))))), false || ((! (bool(bool((false))))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool((false))), bool(_GLF_IDENTITY(bvec3(bool(bool((false))), false, true), bvec3(bvec3(bvec3(bool(bool((false))), false, true)))))))), false || ((! (bool(bool((false)))))))))))), true, true, _GLF_IDENTITY(false, false || (false)))))), (_GLF_IDENTITY(bool(bool((false))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((false))), ! (! (bool(bool((false)))))), bool(_GLF_IDENTITY(bvec3(bool(bool((_GLF_IDENTITY(false, false || (false))))), false, true), bvec3(bvec3(bvec3(bool(bool((false))), false, _GLF_IDENTITY(true, bool(bvec3(true, false, true))))))))))), false || ((! (bool(bool((false))))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool((false))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool(bool((false))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(bool((false))), false, true), bvec3(bvec3(bvec3(bool(bool((false))), false, true))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(bool((false))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(bool((false))), false, true), bvec3(bvec3(bvec3(bool(bool((false))), false, true)))))))))))))), false || ((! (bool(bool((false))))))))))) || false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool((false))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY((false), bool(bvec4((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bool((false))), false, true)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bool((false))), false, true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bool((false))), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(bool(bool((false))), false, true))))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bool((false))), false, true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bool((false))), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(bool(bool((false))), false, true))))))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bool((false))), false, true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bool((false))), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(bool(bool((false))), false, true))))))))), false)), true)))))))))))), false || ((! (_GLF_IDENTITY(bool(bool((false))), true && (bool(bool((false)))))))))))), false), bvec2(bvec4(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool((false))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool(bool((false))), false, true), bvec3(bvec3(bvec3(bool(bool((false))), false, true)))), bvec3(bvec3(bvec3(bool(bool((false))), false, true)))))))), false || ((! (bool(bool((false)))))))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false)))))))))), true, true)))), (bool(_GLF_IDENTITY(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false)))))))), bool(_GLF_IDENTITY(bvec3(bool(bool((false))), false, true), bvec3(bvec3(bvec3(bool(bool((false))), false, true)))))))), false || ((! (bool(bool((false)))))))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool((false))), bool(_GLF_IDENTITY(bvec3(bool(bool((false))), false, true), bvec3(bvec3(bvec3(bool(bool((false))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, true))), true)))))))), _GLF_IDENTITY(false || ((! (bool(bool((false)))))), (false || ((! (bool(bool((false))))))) || false))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool((false))), bool(_GLF_IDENTITY(bvec3(bool(bool((false))), false, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), false, true)))))))), false || ((! (bool(bool((false)))))))))), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), true && (! (! ((false))))))))))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), true && (! (! ((false))))))))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), true && (! (! ((false)))))))))))) && true))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool((false))), bool(_GLF_IDENTITY(bvec3(bool(bool((false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), false, true)))))))), false || ((! (bool(bool((false)))))))))), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool((false))), bool(_GLF_IDENTITY(bvec3(bool(bool((false))), _GLF_IDENTITY(false, ! (! (false))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), false, true)))))))), false || ((! (bool(bool((false)))))))))), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool((false))), bool(_GLF_IDENTITY(bvec3(bool(bool((false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), false, true)))))))), false || ((! (bool(bool((false)))))))))), false), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * sqrt(1.0)) > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool((false))), bool(_GLF_IDENTITY(bvec3(bool(bool((false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), false, true)))))))), false || ((! (bool(bool((false)))))))))), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))), true))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool((false))), bool(_GLF_IDENTITY(bvec3(bool(bool((false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), false, true)))))))), false || ((! (bool(bool((_GLF_IDENTITY(false, bool(bool(false))))))))))))), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), (bool((false))) || false)), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), false || ((false)))), ! (! (bool(_GLF_IDENTITY((false), false || ((false)))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), ! (! (_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false))))))))), false, true)))))))), false || ((! (bool(bool((false)))))))))), false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), (bool((false))) || false)), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), false || ((false)))), ! (! (bool(_GLF_IDENTITY((false), false || ((false)))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), ! (! (_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false))))))))), false, true)))))))), false || ((! (bool(bool((false)))))))))), false), bvec2(bvec3(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), (bool((false))) || false)), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), false || ((false)))), ! (! (bool(_GLF_IDENTITY((false), false || ((false)))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), ! (! (_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false))))))))), false, true)))))))), false || ((! (bool(bool((false)))))))))), false), false))), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), (bool((false))) || false)), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), false || ((false)))), ! (! (bool(_GLF_IDENTITY((false), false || ((false)))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), ! (! (_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false))))))))), false, true)))))))), false || ((! (bool(bool((false)))))))))), false), bvec2(bvec3(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), (bool((false))) || false)), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), false || ((false)))), ! (! (bool(_GLF_IDENTITY((false), false || ((false)))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), ! (! (_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false))))))))), false, true)))))))), false || ((! (bool(bool((false)))))))))), false), false))), true)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), (bool((false))) || false)), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), false || ((false)))), ! (! (bool(_GLF_IDENTITY((false), false || ((false)))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), ! (! (_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false))))))))), false, true)))))))), false || ((! (bool(bool((false)))))))))), false), bvec2(bvec3(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), (bool((false))) || false)), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), false || ((false)))), ! (! (bool(_GLF_IDENTITY((false), false || ((false)))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), ! (! (_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false))))))))), false, true)))))))), false || ((! (bool(bool((false)))))))))), false), false))), true)), false))), true, false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))), true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool((false))), bool(_GLF_IDENTITY(bvec3(bool(bool((false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), false, true)))))))), false || ((! (bool(bool((_GLF_IDENTITY(false, bool(bool(false))))))))))))), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), (bool((false))) || false)), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), false || ((false)))), ! (! (bool(_GLF_IDENTITY((false), false || ((false)))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), ! (! (_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false))))))))), false, true)))))))), false || ((! (bool(bool((false)))))))))), false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), (bool((false))) || false)), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), false || ((false)))), ! (! (bool(_GLF_IDENTITY((false), false || ((false)))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), ! (! (_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false))))))))), false, true)))))))), false || ((! (bool(bool((false)))))))))), false), bvec2(bvec3(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), (bool((false))) || false)), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), false || ((false)))), ! (! (bool(_GLF_IDENTITY((false), false || ((false)))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), ! (! (_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false))))))))), false, true)))))))), false || ((! (bool(bool((false)))))))))), false), false))), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), (bool((false))) || false)), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), false || ((false)))), ! (! (bool(_GLF_IDENTITY((false), false || ((false)))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), ! (! (_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false))))))))), false, true)))))))), false || ((! (bool(bool((false)))))))))), false), bvec2(bvec3(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), (bool((false))) || false)), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), false || ((false)))), ! (! (bool(_GLF_IDENTITY((false), false || ((false)))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), ! (! (_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false))))))))), false, true)))))))), false || ((! (bool(bool((false)))))))))), false), false))), true)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), (bool((false))) || false)), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), false || ((false)))), ! (! (bool(_GLF_IDENTITY((false), false || ((false)))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), ! (! (_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false))))))))), false, true)))))))), false || ((! (bool(bool((false)))))))))), false), bvec2(bvec3(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), (bool((false))) || false)), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), false || ((false)))), ! (! (bool(_GLF_IDENTITY((false), false || ((false)))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), ! (! (_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false))))))))), false, true)))))))), false || ((! (bool(bool((false)))))))))), false), false))), true)), false))), true, false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))), true)), false)))), false))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool((false))), bool(_GLF_IDENTITY(bvec3(bool(bool((false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), false, true)))))))), _GLF_IDENTITY(false || ((! (bool(bool((false)))))), (false || ((! (bool(bool((false))))))) || false))))), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool((false))), bool(_GLF_IDENTITY(bvec3(bool(bool((false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), false, true)))))))), false || ((! (bool(bool((false)))))))))), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))), true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool((false))), bool(_GLF_IDENTITY(bvec3(bool(bool((false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), false, true)))))))), false || ((! (bool(bool((false)))))))))), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool((false))), bool(_GLF_IDENTITY(bvec3(bool(bool((false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), false, true)))))))), false || ((! (bool(bool((false)))))))))), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool((false))), bool(_GLF_IDENTITY(bvec3(bool(bool((false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), false, true)))))))), false || ((! (bool(bool((false)))))))))), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool((false))), bool(_GLF_IDENTITY(bvec3(bool(bool((false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), false, true)))))))), false || ((! (bool(bool((false)))))))))), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))), true))), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool((false))), bool(_GLF_IDENTITY(bvec3(bool(bool((false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), false, true)))))))), false || ((! (bool(bool((false)))))))))), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool((false))), bool(_GLF_IDENTITY(bvec3(bool(bool((false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), false, true)))))))), false || ((! (bool(bool((false)))))))))), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool((false))), bool(_GLF_IDENTITY(bvec3(bool(bool((false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), false, true)))))))), false || ((! (bool(bool((false)))))))))), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool((false))), bool(_GLF_IDENTITY(bvec3(bool(bool((false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), false, true)))))))), false || ((! (bool(bool((false)))))))))), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))), true))), false)))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool((false))), bool(_GLF_IDENTITY(bvec3(bool(bool((false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), false, true)))))))), _GLF_IDENTITY(false || ((! (bool(bool((false)))))), (false || ((! (bool(bool((false))))))) || false))))), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool((false))), bool(_GLF_IDENTITY(bvec3(bool(bool((false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), false, true)))))))), false || ((! (bool(bool((false)))))))))), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))), true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool((false))), bool(_GLF_IDENTITY(bvec3(bool(bool((false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), false, true)))))))), false || ((! (bool(bool((false)))))))))), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool((false))), bool(_GLF_IDENTITY(bvec3(bool(bool((false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), false, true)))))))), false || ((! (bool(bool((false)))))))))), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool((false))), bool(_GLF_IDENTITY(bvec3(bool(bool((false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), false, true)))))))), false || ((! (bool(bool((false)))))))))), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool((false))), bool(_GLF_IDENTITY(bvec3(bool(bool((false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), false, true)))))))), false || ((! (bool(bool((false)))))))))), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))), true))), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool((false))), bool(_GLF_IDENTITY(bvec3(bool(bool((false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), false, true)))))))), false || ((! (bool(bool((false)))))))))), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool((false))), bool(_GLF_IDENTITY(bvec3(bool(bool((false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), false, true)))))))), false || ((! (bool(bool((false)))))))))), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool((false))), bool(_GLF_IDENTITY(bvec3(bool(bool((false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), false, true)))))))), false || ((! (bool(bool((false)))))))))), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(bvec2((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool((false))), bool(_GLF_IDENTITY(bvec3(bool(bool((false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))), false, true)))))))), false || ((! (bool(bool((false)))))))))), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))), true))), false)))))))), false, true)))))))), true, true))))) || false)) || false), bool(bvec4(_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), ! _GLF_IDENTITY((! (bool(bool((false))))), false || ((! (bool(bool((false)))))))))) || false), true, false, true))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x < injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec3(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), false, false))))))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec3(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), true, false))))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), true, false), bvec3(bvec4(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), true, false), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), true, false), bvec3(bvec4(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), true, false), false))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))), true, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) + log(vec2(1.0, 1.0)))) / vec2(1.0, 1.0))).y))), true, false)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), true, false)), false))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), true, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), true, false)), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(true, ! (! (true))), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(true, ! (! (true))), false))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(true, ! (! (true))), false))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(true, ! (! (true))), false))))))))))), false))))))), false)))), bvec3(bvec4(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), true && (bool(bvec2(true, false))))), false), false)))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((bool(_GLF_IDENTITY(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec3(bvec3(bool(bool((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), true, false))))))), ! (! (bool((bool(_GLF_IDENTITY(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec3(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), true, false))))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true))))) || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0), (true ? mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat4(-4.7, 2.1, 620.479, 8.8, -49.27, -4.6, 2.9, -278.627, 45.74, 462.274, 939.580, -4270.9683, -5.1, 8.5, -52.26, -66.22))))))) + vec2(0.0, 0.0))), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) / vec2(1.0, 1.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), true && (bool(bvec4(true, false, false, false))))), false)), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(_GLF_IDENTITY(mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y))), mat2(1.0) * (mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y)))))) + mat2(0.0, 0.0, 0.0, 0.0)))) * (injectionSwitch), (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) + 0.0)) * (injectionSwitch)) / vec2(1.0, 1.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(_GLF_IDENTITY(mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y))), mat2(1.0) * (mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y)))))) + mat2(0.0, 0.0, 0.0, 0.0)))) * (injectionSwitch), (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) + 0.0)) * (injectionSwitch)) / vec2(1.0, 1.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), false), bvec3(bvec4(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(_GLF_IDENTITY(mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y))), mat2(1.0) * (mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y)))))) + mat2(0.0, 0.0, 0.0, 0.0)))) * (injectionSwitch), (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) + 0.0)) * (injectionSwitch)) / vec2(1.0, 1.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), false), true))), true)))), false)))))))), ! (! (bool((bool(_GLF_IDENTITY(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))), true && (bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))))))))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(bool(bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, false, false, false)))))), true, false)))))))))))))), (bool(_GLF_IDENTITY(bool((bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0), (true ? mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat4(-4.7, 2.1, 620.479, 8.8, -49.27, -4.6, 2.9, -278.627, 45.74, 462.274, 939.580, -4270.9683, -5.1, 8.5, -52.26, -66.22))))))) + vec2(0.0, 0.0))), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) / vec2(1.0, 1.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), true && (bool(bvec4(true, false, false, false))))), false)), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(_GLF_IDENTITY(mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y))), mat2(1.0) * (mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y)))))) + mat2(0.0, 0.0, 0.0, 0.0)))) * (injectionSwitch), (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) + 0.0)) * (injectionSwitch)) / vec2(1.0, 1.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(_GLF_IDENTITY(mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y))), mat2(1.0) * (mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y)))))) + mat2(0.0, 0.0, 0.0, 0.0)))) * (injectionSwitch), (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) + 0.0)) * (injectionSwitch)) / vec2(1.0, 1.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), false), bvec3(bvec4(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(_GLF_IDENTITY(mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y))), mat2(1.0) * (mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y)))))) + mat2(0.0, 0.0, 0.0, 0.0)))) * (injectionSwitch), (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) + 0.0)) * (injectionSwitch)) / vec2(1.0, 1.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), false), true))), true)))), false)))))))), ! (! (bool((bool(_GLF_IDENTITY(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))), true && (bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))))))))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(bool(bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, false, false, false)))))), true, false))))))))))))))) && true))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((bool(_GLF_IDENTITY(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec3(bvec3(bool(bool((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), true, false))))))), ! (! (bool((bool(_GLF_IDENTITY(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec3(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), true, false))))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true))))) || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true && (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(834.421) : _GLF_ONE(1.0, injectionSwitch.y)))) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0), (true ? mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat4(-4.7, 2.1, 620.479, 8.8, -49.27, -4.6, 2.9, -278.627, 45.74, 462.274, 939.580, -4270.9683, -5.1, 8.5, -52.26, -66.22)))), (_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(778.058) : 0.0))) + 0.0), 0.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0), (true ? mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat4(-4.7, 2.1, 620.479, 8.8, -49.27, -4.6, 2.9, -278.627, 45.74, 462.274, 939.580, -4270.9683, -5.1, 8.5, -52.26, -66.22))))) * mat4(1.0))))) + vec2(0.0, 0.0))), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) / vec2(1.0, 1.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), true && (bool(bvec4(true, false, false, false))))), false)), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(_GLF_IDENTITY(mat2(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), (_GLF_IDENTITY(mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y))), mat2(1.0) * (mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y)))))) + mat2(0.0, 0.0, 0.0, 0.0)))) * (injectionSwitch), (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) + 0.0)) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(921.353)), vec2(_GLF_FUZZED(506.546), (injectionSwitch)[1]), bvec2(false, true))))) / vec2(1.0, 1.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(_GLF_IDENTITY(mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(mat2(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), mat2(1.0) * (mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y)))))) + mat2(0.0, 0.0, 0.0, 0.0)))) * (injectionSwitch), (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))) + 0.0)) * (injectionSwitch)) / vec2(1.0, 1.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), false), bvec3(bvec4(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(_GLF_IDENTITY(mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(mat2(1.0) * (mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(mat2(mat2(mat2(1.0) * (mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y)))))), (mat2(mat2(mat2(1.0) * (mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y))))))) * mat2(1.0))))) + mat2(0.0, 0.0, 0.0, 0.0)))) * (injectionSwitch), (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) + _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 0.0, sin(0.0), 1.0, sin(determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x)))))) * (injectionSwitch)) / vec2(1.0, 1.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), false), true))), true)))), false)))))))), ! (! (bool((bool(_GLF_IDENTITY(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, false))), bvec2(bvec3(bvec2(true, false), false)))))), true && (bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))))))))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(bool(bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, false, false, false)))))), true, false)))))))))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool((bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bool((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.1)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0), (true ? mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat4(-4.7, 2.1, 620.479, 8.8, -49.27, -4.6, 2.9, -278.627, 45.74, 462.274, 939.580, -4270.9683, -5.1, 8.5, -52.26, -66.22))))))) + vec2(0.0, 0.0))), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) / vec2(1.0, 1.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0), (true ? mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat4(-4.7, 2.1, 620.479, 8.8, -49.27, -4.6, 2.9, _GLF_IDENTITY(-278.627, float(mat3x2(_GLF_IDENTITY(-278.627, round(length(normalize(1.0))) * (-278.627)), 0.0, 0.0, 0.0, 1.0, 1.0))), 45.74, 462.274, 939.580, -4270.9683, -5.1, 8.5, -52.26, -66.22))))))) + vec2(0.0, 0.0))), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) / vec2(1.0, 1.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).y))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), true && (bool(bvec4(true, false, false, false))))), false)), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(_GLF_IDENTITY(mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y))), mat2(1.0) * (mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y)))))) + mat2(0.0, 0.0, 0.0, 0.0)))) * (injectionSwitch), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) + 0.0)) * (injectionSwitch), min(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) + 0.0)) * (injectionSwitch), mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) + 0.0)) * (injectionSwitch)))) / vec2(1.0, 1.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(_GLF_IDENTITY(mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y))), mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) * (mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y)))))) + mat2(0.0, 0.0, 0.0, 0.0)))) * (injectionSwitch), (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) + 0.0)) * (injectionSwitch)) / vec2(1.0, 1.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), false), bvec3(bvec4(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(_GLF_IDENTITY(mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y))), mat2(1.0) * (mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y)))))) + mat2(0.0, 0.0, 0.0, 0.0)))) * (injectionSwitch), (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) + 0.0)) * (injectionSwitch)) / vec2(1.0, 1.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), false), true))), true)))), false)))))))), ! (! (bool((bool(_GLF_IDENTITY(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))), true && (bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))))))), true && (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))), true && (bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))), true && (bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))), true && (bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))))))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(bool(bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, false, false, false)), true && (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, false, false, false)), (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, false, false, false)), bool(bvec4(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, false, false, false)), false, false, false)))) && true))))))), true, false))))))))))))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool((bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bool((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.1)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0), (true ? mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat4(-4.7, 2.1, 620.479, 8.8, -49.27, -4.6, 2.9, -278.627, 45.74, 462.274, 939.580, -4270.9683, -5.1, 8.5, -52.26, -66.22))))))) + vec2(0.0, 0.0))), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) / vec2(1.0, 1.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0), (true ? mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat4(-4.7, 2.1, 620.479, 8.8, -49.27, -4.6, 2.9, _GLF_IDENTITY(-278.627, float(mat3x2(_GLF_IDENTITY(-278.627, round(length(normalize(1.0))) * (-278.627)), 0.0, 0.0, 0.0, 1.0, 1.0))), 45.74, 462.274, 939.580, -4270.9683, -5.1, 8.5, -52.26, -66.22))))))) + vec2(0.0, 0.0))), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) / vec2(1.0, 1.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).y))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), true && (bool(bvec4(true, false, false, false))))), false)), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(_GLF_IDENTITY(mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y))), mat2(1.0) * (mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y)))))) + mat2(0.0, 0.0, 0.0, 0.0)))) * (injectionSwitch), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) + 0.0)) * (injectionSwitch), min(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) + 0.0)) * (injectionSwitch), mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) + 0.0)) * (injectionSwitch)))) / vec2(1.0, 1.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(_GLF_IDENTITY(mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y))), mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) * (mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y)))))) + mat2(0.0, 0.0, 0.0, 0.0)))) * (injectionSwitch), (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) + 0.0)) * (injectionSwitch)) / vec2(1.0, 1.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), false), bvec3(bvec4(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(_GLF_IDENTITY(mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y))), mat2(1.0) * (mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y)))))) + mat2(0.0, 0.0, 0.0, 0.0)))) * (injectionSwitch), (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) + 0.0)) * (injectionSwitch)) / vec2(1.0, 1.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), false), true))), true)))), false)))))))), ! (! (bool((bool(_GLF_IDENTITY(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))), true && (bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))))))), true && (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))), true && (bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))), true && (bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))), true && (bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))))))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(bool(bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, false, false, false)), true && (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, false, false, false)), (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, false, false, false)), bool(bvec4(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, false, false, false)), false, false, false)))) && true))))))), true, false))))))))))))))), ((bool(_GLF_IDENTITY(bool((bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bool((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.1)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0), (true ? mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat4(-4.7, 2.1, 620.479, 8.8, -49.27, -4.6, 2.9, -278.627, 45.74, 462.274, 939.580, -4270.9683, -5.1, 8.5, -52.26, -66.22))))))) + vec2(0.0, 0.0))), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) / vec2(1.0, 1.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0), (true ? mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat4(-4.7, 2.1, 620.479, 8.8, -49.27, -4.6, 2.9, _GLF_IDENTITY(-278.627, float(mat3x2(_GLF_IDENTITY(-278.627, round(length(normalize(1.0))) * (-278.627)), 0.0, 0.0, 0.0, 1.0, 1.0))), 45.74, 462.274, 939.580, -4270.9683, -5.1, 8.5, -52.26, -66.22))))))) + vec2(0.0, 0.0))), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) / vec2(1.0, 1.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).y))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), true && (bool(bvec4(true, false, false, false))))), false)), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(_GLF_IDENTITY(mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y))), mat2(1.0) * (mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y)))))) + mat2(0.0, 0.0, 0.0, 0.0)))) * (injectionSwitch), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) + 0.0)) * (injectionSwitch), min(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) + 0.0)) * (injectionSwitch), mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) + 0.0)) * (injectionSwitch)))) / vec2(1.0, 1.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(_GLF_IDENTITY(mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y))), mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) * (mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y)))))) + mat2(0.0, 0.0, 0.0, 0.0)))) * (injectionSwitch), (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) + 0.0)) * (injectionSwitch)) / vec2(1.0, 1.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), false), bvec3(bvec4(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(_GLF_IDENTITY(mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y))), mat2(1.0) * (mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y)))))) + mat2(0.0, 0.0, 0.0, 0.0)))) * (injectionSwitch), (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) + 0.0)) * (injectionSwitch)) / vec2(1.0, 1.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), false), true))), true)))), false)))))))), ! (! (bool((bool(_GLF_IDENTITY(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))), true && (bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))))))), true && (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))), true && (bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))), true && (bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))), true && (bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))))))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(bool(bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, false, false, false)), true && (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, false, false, false)), (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, false, false, false)), bool(bvec4(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, false, false, false)), false, false, false)))) && true))))))), true, false)))))))))))))))) && true)))) && true)))) || false))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), log(vec2(1.0, 1.0)) + _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(9.2), _GLF_FUZZED(4.5)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))).y), float(_GLF_FUZZED(-7.3)), bool(false))))))))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), true, true))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7.3)), bool(false))), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7.3)), bool(false)))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7.3)), bool(false)))))))), true, _GLF_IDENTITY(true, bool(bvec2(true, false)))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec2(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))[0], _GLF_FUZZED(7387.1581)), vec2(_GLF_FUZZED(3.8), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y), float(_GLF_FUZZED(-7.3)), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(bool(false), false, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(bool(false), false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), true, true, true))))), bool(bvec3(bool(bvec3(_GLF_IDENTITY(bool(false), true && (bool(false))), false, true)), true, true))), true, false)))))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), false || (_GLF_IDENTITY((bool(false)), ! (! ((bool(false))))))) || false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7.3)), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(_GLF_IDENTITY(false, true && (false)))))) && true))))), bool(bvec3(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) && true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))))), ! (! (! ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7.3)), bool(false)))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), float(_GLF_FUZZED(-7.3)), bool(false)))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7.3)), bool(false)))))))) && true)))), true && (! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7.3)), bool(false)))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-7.3), mix(float(_GLF_FUZZED(0.4)), float(_GLF_FUZZED(-7.3)), bool(true)))), bool(false)))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-7.3), mix(float(_GLF_FUZZED(0.4)), float(_GLF_FUZZED(-7.3)), bool(true)))), bool(false)))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-7.3), mix(float(_GLF_FUZZED(0.4)), float(_GLF_FUZZED(-7.3)), bool(true)))), bool(false)))))))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7.3)), bool(false)))))))) && true))))))))))))))))))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) && true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])).y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false || (_GLF_DEAD(false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.3), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-433.775, 5.1)) : injectionSwitch))))), max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-433.775, 5.1)) : injectionSwitch))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-433.775, 5.1)) : injectionSwitch))))), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-433.775, 5.1)) : injectionSwitch)))))) / vec2(1.0, 1.0))))[_GLF_IDENTITY(1, 0 + (1))]), vec2((injectionSwitch)[_GLF_IDENTITY(0, min(0, 0))], _GLF_FUZZED(-6968.9961)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.3), (injectionSwitch)[_GLF_IDENTITY(1, 0 + (1))]), vec2((injectionSwitch)[_GLF_IDENTITY(0, min(0, 0))], _GLF_FUZZED(-6968.9961)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y)), false))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.3), (injectionSwitch)[_GLF_IDENTITY(1, 0 + (1))]), vec2((injectionSwitch)[_GLF_IDENTITY(0, min(0, 0))], _GLF_FUZZED(-6968.9961)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.3), (injectionSwitch)[_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0 << _GLF_IDENTITY(int(1), int(1))) ^ (_GLF_IDENTITY(0, int(int(0))))) + (1))]), vec2((injectionSwitch)[_GLF_IDENTITY(0, min(0, 0))], _GLF_FUZZED(-6968.9961)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) - tan(sqrt(vec2(0.0, 0.0)))).x > injectionSwitch.y), true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))))), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(max(184.844, 69.81)) : injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(max(184.844, 69.81)) : injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x < injectionSwitch.y)))))))), true && (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(max(184.844, 69.81)) : injectionSwitch.y))), min(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(max(184.844, 69.81)) : injectionSwitch.y))), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(max(184.844, 69.81)) : injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), ! (! (bool(bool(injectionSwitch.x < injectionSwitch.y))))))))))))), false)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(true, (true) && true) && ((_GLF_DEAD(false)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(8.2, clamp(_GLF_IDENTITY(8.2, (8.2) - 0.0), 8.2, _GLF_IDENTITY(8.2, min(8.2, _GLF_IDENTITY(8.2, min(8.2, 8.2)))))))), min(float(_GLF_FUZZED(_GLF_IDENTITY(8.2, clamp(_GLF_IDENTITY(8.2, (8.2) - 0.0), 8.2, _GLF_IDENTITY(8.2, min(8.2, _GLF_IDENTITY(8.2, min(8.2, 8.2)))))))), float(_GLF_FUZZED(_GLF_IDENTITY(8.2, clamp(_GLF_IDENTITY(8.2, (8.2) - 0.0), 8.2, _GLF_IDENTITY(8.2, min(8.2, _GLF_IDENTITY(8.2, min(8.2, 8.2)))))))))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).x, mix(float(_GLF_FUZZED(8.2)), _GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(bool((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.2)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)))))))) > injectionSwitch.y)), false, true, false)), bool(bvec3(bool(bvec4(bool((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.2)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false)), false, true)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-10.67)), bool(false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), uint(uvec3(workgroup_base, 1u, 1u))) + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(true ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))) : _GLF_FUZZED((workgroup_size - subgroup_size)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_base)) + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) ^ 0u))))), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (0u ^ 0u)))))) + subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY((workgroup_size - subgroup_size), ((workgroup_size - subgroup_size)) + 0u)), (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(true ? workgroup_base + subgroup_id * subgroup_size + subgroup_local_id : _GLF_FUZZED((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, ~ (_GLF_IDENTITY(~ (workgroup_size), uint(uvec2(_GLF_IDENTITY(~ (workgroup_size), (~ (workgroup_size)) | (~ (workgroup_size))), 0u)))))), uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(workgroup_size, ~ (_GLF_IDENTITY(~ (workgroup_size), uint(uvec2(_GLF_IDENTITY(~ (workgroup_size), (~ (workgroup_size)) | (~ (workgroup_size))), 0u)))))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3((_GLF_IDENTITY(workgroup_size, ~ (_GLF_IDENTITY(~ (workgroup_size), uint(uvec2(_GLF_IDENTITY(~ (workgroup_size), (~ (workgroup_size)) | (~ (workgroup_size))), 0u)))))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3((_GLF_IDENTITY(workgroup_size, ~ (_GLF_IDENTITY(~ (workgroup_size), uint(uvec2(_GLF_IDENTITY(~ (workgroup_size), (~ (workgroup_size)) | (~ (workgroup_size))), 0u)))))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))) | 0u) - _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), uint(uint(true ? workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size + subgroup_local_id : _GLF_FUZZED((workgroup_size - _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))) : _GLF_FUZZED(workgroup_size)))) + (0u ^ 0u))));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec3(bvec3(bvec3(false, true, true)))))))))) || false, bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec3(bvec3(bvec3(false, true, true)))))))))) || false, bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec3(bvec3(bvec3(false, true, true)))))))))) || false, bool(bvec2((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec3(bvec3(bvec3(false, true, true)))))))))) || false, false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), false, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), false, false), true))))))), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), false)))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)))).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)))).y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), ~ (~ (uint(1)))), 4, 64, _GLF_IDENTITY(4, max(4, 4)));
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
