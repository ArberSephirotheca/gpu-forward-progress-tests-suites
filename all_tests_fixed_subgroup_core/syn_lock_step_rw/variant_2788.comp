#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), mix(float(_GLF_FUZZED(-314.572)), float(_GLF_IDENTITY(1.0 * (injectionSwitch.y), mix(float(1.0 * (injectionSwitch.y)), float(_GLF_FUZZED(9.5)), bool(false)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * _GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(1.1)), bool(false))), mix(float(_GLF_FUZZED(-314.572)), float(_GLF_IDENTITY(1.0 * (injectionSwitch.y), _GLF_IDENTITY(mix(float(1.0 * (injectionSwitch.y)), float(_GLF_FUZZED(9.5)), bool(false)), (mix(float(1.0 * (injectionSwitch.y)), float(_GLF_FUZZED(9.5)), _GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), (_GLF_IDENTITY(! (bool(false)), (! (bool(false))) || false)) && true))))) - length(vec4(0.0, 0.0, 0.0, 0.0))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> 0u);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((true ? -1.3 : 1.6))), vec2(_GLF_FUZZED(22.81), (injectionSwitch)[1]), bvec2(false, true))), 0.0, tan(0.0), 0.0, 1.0, 1.0, 0.0)), min(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((true ? -1.3 : 1.6))), vec2(_GLF_FUZZED(22.81), (injectionSwitch)[1]), bvec2(false, true))), 0.0, tan(0.0), 0.0, 1.0, 1.0, 0.0)), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((true ? -1.3 : 1.6))), vec2(_GLF_FUZZED(22.81), (injectionSwitch)[1]), bvec2(false, true))), 0.0, tan(0.0), 0.0, 1.0, 1.0, 0.0))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), clamp((injectionSwitch) - vec2(0.0, 0.0), _GLF_IDENTITY((injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch))) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0)))), injectionSwitch, injectionSwitch), max(clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch))) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(52.98), _GLF_FUZZED(7970.0220)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch), (clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.4)), float(0.0), bool(true))))), injectionSwitch, injectionSwitch)) * mat2(1.0))))).y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), clamp((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0))), clamp(_GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), clamp((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), clamp((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0))), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), clamp((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0))), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), clamp((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0))), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)) * mat4(1.0)))), _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), clamp((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0)))))), injectionSwitch, injectionSwitch), max(clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch))) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(52.98), _GLF_FUZZED(7970.0220)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch), (clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(0.4)), min(float(_GLF_FUZZED(0.4)), float(_GLF_FUZZED(0.4)))), float(0.0), bool(true))))), injectionSwitch, injectionSwitch)) * mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), clamp((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0)))), injectionSwitch, injectionSwitch), max(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch))) - vec2(0.0, 0.0), _GLF_IDENTITY(vec2(mat2x3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch))) - vec2(0.0, 0.0), length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0)), max(vec2(mat2x3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch))) - vec2(0.0, 0.0), length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0)), _GLF_IDENTITY(vec2(mat2x3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch))) - vec2(0.0, 0.0), length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0)), min(vec2(mat2x3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch))) - vec2(0.0, 0.0), length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0)), vec2(mat2x3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch))) - vec2(0.0, 0.0), length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0)))))))), injectionSwitch, injectionSwitch), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(83.63)), bvec2(true, false))), 1.0), mix(vec3((vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(83.63)), bvec2(true, false))), 1.0))[0], _GLF_FUZZED(-2.4), _GLF_FUZZED(-466.964)), vec3(_GLF_FUZZED(0.4), (vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(83.63)), bvec2(true, false))), 1.0))[1], (vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(83.63)), bvec2(true, false))), 1.0))[2]), bvec3(false, true, true)))), (true ? vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(83.63)), bvec2(true, false))), 1.0), mix(vec3((vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(83.63)), bvec2(true, false))), 1.0))[0], _GLF_FUZZED(-2.4), _GLF_FUZZED(-466.964)), vec3(_GLF_FUZZED(0.4), (vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(83.63)), bvec2(true, false))), 1.0))[1], (vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(83.63)), bvec2(true, false))), 1.0))[2]), bvec3(false, true, true)))) : _GLF_FUZZED(injectionSwitch)))))), _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(52.98), _GLF_FUZZED(7970.0220)), _GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, length(vec2(0.0, 0.0)), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0)), 0.0, 0.0, sin(sin(0.0)), 1.0, sin(0.0), 0.0, 1.0, 1.0))).y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, length(vec2(0.0, 0.0)), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0)), 0.0, 0.0, sin(sin(0.0)), 1.0, sin(0.0), 0.0, 1.0, 1.0))).y)))))))) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), injectionSwitch, injectionSwitch), (clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.4)), float(0.0), bool(true))))), injectionSwitch, injectionSwitch)) * mat2(1.0))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), clamp(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch), max(clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))), injectionSwitch))) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(52.98), _GLF_FUZZED(7970.0220)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch), (clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.4), (_GLF_FUZZED(0.4)) - 0.0)), float(0.0), bool(true)))), max(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.4), (_GLF_FUZZED(0.4)) - 0.0)), float(0.0), bool(true)))), vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.4), (_GLF_FUZZED(0.4)) - 0.0)), float(0.0), bool(true))))))), injectionSwitch, injectionSwitch)) * mat2(1.0))))).y)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(6051.8211, (_GLF_IDENTITY(6051.8211, 1.0 * (6051.8211))) * 1.0)), _GLF_IDENTITY(float(mat2(_GLF_FUZZED(_GLF_IDENTITY(6051.8211, (_GLF_IDENTITY(6051.8211, 1.0 * (6051.8211))) * 1.0)), 1.0, 0.0, 0.0)), max(_GLF_IDENTITY(float(mat2(_GLF_FUZZED(_GLF_IDENTITY(6051.8211, (_GLF_IDENTITY(6051.8211, 1.0 * (6051.8211))) * 1.0)), 1.0, 0.0, 0.0)), max(float(mat2(_GLF_FUZZED(_GLF_IDENTITY(6051.8211, (_GLF_IDENTITY(6051.8211, 1.0 * (6051.8211))) * 1.0)), 1.0, 0.0, 0.0)), float(mat2(_GLF_FUZZED(_GLF_IDENTITY(6051.8211, (_GLF_IDENTITY(6051.8211, 1.0 * (6051.8211))) * 1.0)), 1.0, 0.0, 0.0)))), float(mat2(_GLF_FUZZED(_GLF_IDENTITY(6051.8211, (_GLF_IDENTITY(6051.8211, 1.0 * (6051.8211))) * 1.0)), 1.0, 0.0, 0.0))))), mix(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(6051.8211)), (true ? float(_GLF_FUZZED(6051.8211)) : _GLF_FUZZED(vec3(-8088.3304, 7.6, 32.65).b))), mix(float(_GLF_IDENTITY(float(_GLF_FUZZED(6051.8211)), _GLF_IDENTITY((true ? float(_GLF_FUZZED(6051.8211)) : _GLF_FUZZED(750.701)), min((true ? float(_GLF_FUZZED(6051.8211)) : _GLF_FUZZED(750.701)), _GLF_IDENTITY((true ? float(_GLF_FUZZED(6051.8211)) : _GLF_FUZZED(750.701)), ((true ? float(_GLF_FUZZED(6051.8211)) : _GLF_FUZZED(750.701))) - 0.0))))), float(_GLF_FUZZED(9894.7565)), bool(false))), float(_GLF_FUZZED(1305.5753)), bool(false)))), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch), max(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(1223.6602), clamp(_GLF_FUZZED(1223.6602), _GLF_FUZZED(1223.6602), _GLF_FUZZED(1223.6602))), (vec2(0.0, 0.0))[1]), vec2((vec2(0.0, _GLF_IDENTITY(0.0, tan(0.0) + (_GLF_IDENTITY(0.0, 1.0 * (0.0))))))[0], _GLF_FUZZED(3.3)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(vec2(313.209, 585.861).x), _GLF_FUZZED(72.05)), vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY((vec2(0.0, 0.0))[1], max((vec2(0.0, 0.0))[1], (vec2(0.0, 0.0))[1]))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), injectionSwitch, injectionSwitch), (clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, exp(0.0), sqrt(1.0))), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, exp(0.0), sqrt(1.0)))), exp(0.0), sqrt(0.0)))), injectionSwitch)) * mat2(1.0))))).y), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec3((false), true, true))))) || false)), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec3((false), true, true))))) || false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(bvec3((false), true, true), true))))))) || false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))), true && _GLF_IDENTITY((false), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)) || ((false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, false, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))).x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), ((injectionSwitch.x > injectionSwitch.y)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))) + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) ^ 0u)));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))), clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))), clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) * 1))), ((_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) * 1)))) * 1), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) + (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(3), int(3))), min((1) + (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(3), int(3))), (1) + (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(3), int(3))))))) >> 0))) + 0)))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))), clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))), clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) * 1))), ((_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) * 1)))) * 1), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) + (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(3), int(3))), min((1) + (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(3), int(3))), (1) + (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(3), int(3))))))) >> 0))) + 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))), clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))), clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) * 1))), ((_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) * 1)))) * 1), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) + (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(3), int(3))), min((1) + (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(3), int(3))), (1) + (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(3), int(3))))))) >> 0))) + 0))))) << 0u), 0u)))) % subgroup_size), clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false))), true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) || false), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)))))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) || false), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false))))))) && true)), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) || ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))))) || false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! ((false) && true), ! (! (_GLF_IDENTITY(! ((false) && true), true && (! ((false) && true)))))))))) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false))))) && true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) || false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false))))) && true))))), false, false), bvec3(bvec3(bvec3(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) || false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true))))) || false)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false))))) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false))))) && true, _GLF_IDENTITY(bool(bool((_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false))))) && true)), (bool(bool((_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false))))) && true))) && true)))))))))), true && ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) || false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true))))) || false)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false))))) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false))))) && true, _GLF_IDENTITY(bool(bool((_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false))))) && true)), (bool(bool((_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false))))) && true))) && true)))))))))))), false, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) || false), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false))))) && true)), bool(bvec4((! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false))))) && true)), true, false, true)))))), false, false), bvec3(bvec3(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) || false, ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && _GLF_IDENTITY(true, true && (true)), bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false))))) && true))))))), false, false))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) || false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false))))) && true))))), false, false), bvec3(bvec3(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) || false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false))))) && true))))), false, false)))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) || false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false))))) && true))))), false, false), bvec3(bvec3(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) || false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false))))) && true))))), false, false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) || false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false))))) && true))))), false, false), bvec3(bvec3(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) || false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false))))) && true))))), false, false)))), true)))))))))), bool(bvec2(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) || false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))), (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), _GLF_IDENTITY(false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false))), false || (false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false))))))) && true))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) || false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false))))) && true))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) || false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false))))) && true))))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) || false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false))))) && true)))))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false, false))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, (false) && true)) && true)))) || false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false))))) && true))))), false, false), bvec3(bvec3(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, (false) && true)) && true)))) || false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false))))) && true))))), false, false)))), bvec3(bvec3(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true)))) && true)) && true)) || false), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), true))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))))))) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false))))) && true)), ((! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), true))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))))))) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false))))) && true))) && true)))), false, false)))))))), true))))))))), bool(bvec2(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))), (false) && true)) && true))) && true) || false), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))) && true, bool(bvec4((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec2((false), true)))), bool(bvec3(! (_GLF_IDENTITY((false), bool(bvec2((false), true)))), false, false))))) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false))))))), false || _GLF_IDENTITY(((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) || false), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(-2010.4351)), bool(false))), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), float(mat3(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, 0.0, abs(1.0), cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), clamp(float(mat3x4(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(-2010.4351)), bool(false))), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), float(mat3(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, 0.0, abs(1.0), cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(-2010.4351)), bool(false))), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), float(mat3(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, 0.0, abs(1.0), cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), min(float(mat3x4(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(-2010.4351)), bool(false))), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), float(mat3(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, 0.0, abs(1.0), cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), float(mat3x4(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(-2010.4351)), bool(false))), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), float(mat3(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, 0.0, abs(1.0), cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), float(mat3x4(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(-2010.4351)), bool(false))), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), float(mat3(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, 0.0, abs(1.0), cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))))), true))))) || false)))))))), bool(bvec2(((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) || false), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (false) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(-2010.4351)), bool(false))), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), float(mat3(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, 0.0, abs(1.0), cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), clamp(float(mat3x4(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(-2010.4351)), bool(false))), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), float(mat3(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, 0.0, abs(1.0), cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(-2010.4351)), bool(false))), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), float(mat3(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, 0.0, abs(1.0), cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), min(float(mat3x4(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(-2010.4351)), bool(false))), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), float(mat3(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, 0.0, abs(1.0), cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), float(mat3x4(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(-2010.4351)), bool(false))), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), float(mat3(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, 0.0, abs(1.0), cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), float(mat3x4(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(-2010.4351)), bool(false))), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), float(mat3(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, 0.0, abs(1.0), cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))))), true))))) || false)))))))), true)))), false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], clamp(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (0u | 0u))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid])))), (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (0u | 0u))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid])))), (_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (0u | 0u))) | (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid]))))) ^ 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid])), buf[virtual_gid])), 4, 64, 0);
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(uvec3(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid)), 1u, 0u)))], uint(1), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, _GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(-94432) : int(1))))))), max(_GLF_IDENTITY(min(4, _GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(-94432) : int(1))))))), _GLF_IDENTITY((min(4, _GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(-94432) : _GLF_IDENTITY(int(1), (int(1)) | (int(1)))))))))), min((min(4, _GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(-94432) : _GLF_IDENTITY(int(1), (int(1)) | (int(1)))))))))), (min(4, _GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(-94432) : _GLF_IDENTITY(int(1), (int(1)) | (int(1)))))))))))) - 0), _GLF_IDENTITY(min(4, _GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(-94432) : int(1))))))), ~ (~ (min(4, _GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(1), _GLF_IDENTITY((false ? _GLF_FUZZED(-94432) : int(1)), 0 | ((false ? _GLF_FUZZED(-94432) : int(1)))))), (int(_GLF_IDENTITY(int(1), _GLF_IDENTITY((false ? _GLF_FUZZED(-94432) : int(1)), 0 | ((false ? _GLF_FUZZED(-94432) : int(1))))))) - 0)))))))))), (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) / 1)))) / 1)), (_GLF_IDENTITY((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(38837)))) ^ _GLF_IDENTITY(0, (0) >> 0)), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), ~ (~ (_GLF_IDENTITY(int(8), int(8)))))) ^ (_GLF_IDENTITY(4, (4) / 1)))))), ((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(38837)))) ^ _GLF_IDENTITY(0, (0) >> 0)), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), ~ (~ (_GLF_IDENTITY(int(8), int(8)))))) ^ (_GLF_IDENTITY(4, (4) / 1))))))) - (0 >> _GLF_IDENTITY(int(4), int(4))))) >> 0)))), (false ? _GLF_FUZZED(-58063) : (_GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, _GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(-94432) : int(1))))))), max(_GLF_IDENTITY(min(4, _GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(-94432) : int(1))))))), _GLF_IDENTITY((min(4, _GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(-94432) : _GLF_IDENTITY(int(1), (int(1)) | (int(1)))))))))), min((min(4, _GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(-94432) : _GLF_IDENTITY(int(1), (int(1)) | (int(1)))))))))), (min(4, _GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(-94432) : _GLF_IDENTITY(int(1), (int(1)) | (int(1)))))))))))) - 0), _GLF_IDENTITY(min(4, _GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(-94432) : int(1))))))), ~ (~ (min(4, _GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(1), _GLF_IDENTITY((false ? _GLF_FUZZED(-94432) : int(1)), 0 | ((false ? _GLF_FUZZED(-94432) : int(1)))))), (int(_GLF_IDENTITY(int(1), _GLF_IDENTITY((false ? _GLF_FUZZED(-94432) : int(1)), 0 | ((false ? _GLF_FUZZED(-94432) : int(1))))))) - 0)))))))))), (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) / 1)))) / 1)), (_GLF_IDENTITY((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(38837)))) ^ _GLF_IDENTITY(0, (0) >> 0)), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), ~ (~ (_GLF_IDENTITY(int(8), int(8)))))) ^ (_GLF_IDENTITY(4, (4) / 1)))))), ((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(38837)))) ^ _GLF_IDENTITY(0, (0) >> 0)), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), ~ (~ (_GLF_IDENTITY(int(8), int(8)))))) ^ (_GLF_IDENTITY(4, (4) / 1))))))) - (0 >> _GLF_IDENTITY(int(4), int(4))))) >> 0)))))) << 0));
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read, min(read, read)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(read, min(read, read)), clamp(_GLF_IDENTITY(read, min(read, read)), _GLF_IDENTITY(read, min(read, read)), _GLF_IDENTITY(read, min(read, read))))))), _GLF_IDENTITY(1u * (_GLF_IDENTITY((_GLF_IDENTITY(read, min(read, read))), ((_GLF_IDENTITY(read, min(read, read)))) - 0u)), (1u * (_GLF_IDENTITY((_GLF_IDENTITY(read, min(read, read))), ((_GLF_IDENTITY(read, min(read, read)))) - 0u))) | 0u)), (~ (_GLF_IDENTITY(read, min(read, read)))) >> 0u))), 4, 64, 4);
}
