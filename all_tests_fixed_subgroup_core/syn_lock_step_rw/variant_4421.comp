#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 mat4 _f0;
 mat3x4 _f1;
 uint read;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(7671.6877)), bool(false))), true, true)))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5.1) : injectionSwitch.y)))))), (false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5.1) : injectionSwitch.y))))))) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), _GLF_IDENTITY(true, false || (true)), true, false))))))), false, false, true)))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))), false, false, true))))))), _GLF_IDENTITY(bool(bvec4(! (bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))), false, false, true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(! (bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))), false, false, true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)))))))), (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && true))) || false)))), (_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), _GLF_IDENTITY(true, false || (true)), true, false))))))), false, false, true)))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))), false, false, true))))))), _GLF_IDENTITY(bool(bvec4(! (bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))), false, false, true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(! (bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))), false, false, true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)))))))), (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && true))) || false)))), ! (! ((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), _GLF_IDENTITY(true, false || (true)), true, false))))))), false, false, true)))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))), false, false, true))))))), _GLF_IDENTITY(bool(bvec4(! (bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))), false, false, true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(! (bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))), false, false, true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)))))))), (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && true))) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec3(bool(bvec2(false, true)), true, false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0)), clamp(float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0)), float(mat2(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3.8) : _GLF_IDENTITY(1.0, (1.0) + 0.0))), (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1841.6231)), float(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 1.0)))), bool(true)))) * 1.0), 1.0, 0.0)), float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), float(_GLF_IDENTITY(mat4(float(float(injectionSwitch.y)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4(float(float(injectionSwitch.y)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 1.0, 0.0)))))))))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) >> 0u)))))) * subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((~ subgroup_size)) : subgroup_size))), ~ (~ ((subgroup_id * subgroup_size)))) | 0u), subgroup_id * subgroup_size), ~ (~ (min(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((~ subgroup_size)) : subgroup_size))), ~ (~ ((subgroup_id * subgroup_size)))) | 0u), subgroup_id * subgroup_size)))))) + _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(6u))), (false ? _GLF_FUZZED(subgroup_size) : (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY(((_GLF_IDENTITY(1u, (1u) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), clamp(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (0u | 0u)), uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u, ((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u) * 1u))) ^ 0u)))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY(((_GLF_IDENTITY(1u, (1u) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), clamp(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (0u | 0u)), uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u, ((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u) * 1u))) ^ 0u))), ~ (~ (0u ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY(((_GLF_IDENTITY(1u, (1u) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), clamp(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (0u | 0u)), uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u, ((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u) * 1u))) ^ 0u))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY(((_GLF_IDENTITY(1u, (1u) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), clamp(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (0u | 0u)), uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) / 1u)) ^ 0u)))), _GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u, ((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u) * 1u))) ^ 0u)))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY(((_GLF_IDENTITY(1u, (1u) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), clamp(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (0u | 0u)), uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u, ((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u) * 1u))) ^ 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY(((_GLF_IDENTITY(1u, (1u) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), clamp(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (0u | 0u)), uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u, ((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u) * 1u))) ^ 0u), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY(((_GLF_IDENTITY(1u, (1u) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), clamp(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (0u | 0u)), uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u, ((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u) * 1u))) ^ 0u), ((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY(((_GLF_IDENTITY(1u, (1u) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), clamp(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (0u | 0u)), uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u, ((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u) * 1u))) ^ 0u)) ^ 0u)))) - (0u | 0u))))))), (false ? _GLF_FUZZED(workgroup_base) : uint(uint(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY(((_GLF_IDENTITY(1u, (1u) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), clamp(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (0u | 0u)), uint(0u))), uint(0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), clamp(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (0u | 0u)), uint(0u))), uint(0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), clamp(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (0u | 0u)), uint(0u))), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), clamp(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (0u | 0u)), uint(0u))), uint(0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), clamp(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (0u | 0u)), uint(0u))), uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0u, 0u ^ (0u)))))))) | 0u, ((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | _GLF_IDENTITY(0u, min(0u, 0u))) * 1u))) ^ 0u)))))))))))), (1u & 1u)), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(1u, (1u) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), clamp(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (0u | 0u)), uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (((_GLF_IDENTITY(1u, (1u) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), clamp(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (0u | 0u)), uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) - 0u), _GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), uint(uvec4(uint(0u), 0u, (0u ^ 1u), 0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u, ((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u) * 1u))) ^ 0u)))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY(((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))) | ((1u))) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), clamp(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (0u | 0u)), uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u, ((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u) * 1u))) ^ 0u))), clamp(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY(((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))) | ((1u))) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), clamp(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (0u | 0u)), uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u, ((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u) * 1u))) ^ 0u))), (0u ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY(((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))) | ((1u))) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), clamp(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (0u | 0u)), uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u, ((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u) * 1u))) ^ 0u)))) >> 0u), 0u ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY(((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))) | ((1u))) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), clamp(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (0u | 0u)), uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u, ((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u) * 1u))) ^ 0u))), 0u ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY(((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))) | ((1u))) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), clamp(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (0u | 0u)), uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u, ((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u) * 1u))) ^ 0u)))))))), min((~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY(((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))) | ((1u))) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), clamp(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (0u | 0u)), uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u, ((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u) * 1u))) ^ 0u))), clamp(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY(((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))) | ((1u))) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), clamp(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (0u | 0u)), uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u, ((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u) * 1u))) ^ 0u))), (0u ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY(((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))) | ((1u))) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), clamp(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (0u | 0u)), uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u, ((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u) * 1u))) ^ 0u)))) >> 0u), 0u ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY(((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))) | ((1u))) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), clamp(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (0u | 0u)), uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u, ((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u) * 1u))) ^ 0u))), 0u ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY(((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))) | ((1u))) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), clamp(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (0u | 0u)), uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u, ((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u) * 1u))) ^ 0u)))))))), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY(((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))) | ((1u))) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), clamp(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (0u | 0u)), uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u, ((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u) * 1u))) ^ 0u))), clamp(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY(((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))) | ((1u))) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), clamp(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (0u | 0u)), uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u, ((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u) * 1u))) ^ 0u))), (0u ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY(((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))) | ((1u))) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), clamp(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (0u | 0u)), uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u, ((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u) * 1u))) ^ 0u)))) >> 0u), 0u ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY(((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))) | ((1u))) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), clamp(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (0u | 0u)), uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u, ((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u) * 1u))) ^ 0u))), 0u ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY(((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))) | ((1u))) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), clamp(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (0u | 0u)), uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u, ((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u) * 1u))) ^ 0u))))))))))), (1u & 1u))) >> uvec2(0u, 0u)))) * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))), uint(uvec2(0u, 0u)))), subgroup_id * subgroup_size))) + _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(6u))), uint(uvec4(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u ^ ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))))), 0u, 0u, 1u))))) - _GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), uint(7u))), (true ? (0u << _GLF_IDENTITY(uint(7u), uint(7u))) : _GLF_FUZZED(subgroup_id))), min(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), uint(7u))), (true ? (0u << _GLF_IDENTITY(uint(7u), uint(7u))) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), uint(7u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), uint(7u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), uint(7u))), ((0u << _GLF_IDENTITY(uint(7u), uint(7u)))) ^ 0u)) ^ (0u | 0u))) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), (true ? (0u << _GLF_IDENTITY(uint(7u), uint(7u))) : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), uint(7u))), (true ? (0u << _GLF_IDENTITY(uint(7u), uint(7u))) : _GLF_FUZZED(subgroup_id)))) << 0u)))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))) % subgroup_size, (0u & 103561u) | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))) % subgroup_size)))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (false)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-303.430) : injectionSwitch.x)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-303.430) : injectionSwitch.x)) : _GLF_FUZZED(84.20), (true ? _GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-303.430) : injectionSwitch.x)) : _GLF_FUZZED(84.20)) + 0.0))))) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-303.430) : _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), (true ? float(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(-4.7)))))))) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.4) : injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(736.514)), bool(false))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(mat4(1.0), mat3x4(1.0), atomicLoad(buf[virtual_gid], 4, 64, 0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (false ? _GLF_FUZZED(73047u) : next_virtual_gid))], uint(1), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, ~ (~ (64)))), ((_GLF_IDENTITY(64, ~ (~ (64))))) | ((_GLF_IDENTITY(64, ~ (~ (64)))))) ^ 0), max(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, ~ (~ (64)))), ((_GLF_IDENTITY(64, ~ (~ (64))))) | ((_GLF_IDENTITY(64, ~ (~ (64)))))) ^ 0), _GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, ~ (~ (64)))), ((_GLF_IDENTITY(64, ~ (~ (64))))) | ((_GLF_IDENTITY(64, ~ (~ (64)))))) ^ 0))), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), mix(vec2((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))[0], _GLF_FUZZED(3828.8613)), vec2(_GLF_FUZZED(274.616), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))[1]), bvec2(false, true))))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6711.7322)), float(injectionSwitch.y), bool(true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 atomicStore(checker[virtual_gid], _GLF_struct_replacement_0.read, 4, _GLF_IDENTITY(64, 0 ^ (64)), 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0), transpose(transpose(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)))))).y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) || false), true), false, false))))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))) || false)), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), true)))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(0.4, mix(float(_GLF_FUZZED(-7.3)), float(0.4), bool(true)))) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)))) > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))), (bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))) && _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), (injectionSwitch.x < injectionSwitch.y)))))) || false))), true, true)), bool(bool(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))), ((_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))) || false))), true, true)), bool(bool(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), true, true))))))) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
}
