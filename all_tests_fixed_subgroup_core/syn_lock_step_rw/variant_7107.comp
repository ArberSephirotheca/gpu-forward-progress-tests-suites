#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec4(bool(_GLF_DEAD(false)), true, false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, abs(0.0) + (injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, abs(0.0) + (injectionSwitch.x)) > injectionSwitch.y)) || false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, tan(0.0)), vec3(1.0, abs(1.0), 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, tan(0.0)), vec3(1.0, abs(1.0), 1.0)), (false ? _GLF_FUZZED(-18.47) : dot(vec3(0.0, 0.0, tan(0.0)), vec3(1.0, abs(1.0), 1.0)))))), (mat4x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, tan(0.0)), vec3(1.0, abs(1.0), 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, tan(0.0)), vec3(1.0, abs(1.0), 1.0)), (false ? _GLF_FUZZED(-18.47) : dot(vec3(0.0, 0.0, tan(0.0)), vec3(1.0, abs(1.0), 1.0))))))) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, tan(0.0)), vec3(1.0, abs(1.0), 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, tan(0.0)), vec3(1.0, abs(1.0), 1.0)), (false ? _GLF_FUZZED(-18.47) : dot(vec3(0.0, 0.0, tan(0.0)), vec3(1.0, abs(1.0), 1.0)))))), (mat4x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, tan(0.0)), vec3(1.0, abs(1.0), 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, tan(0.0)), vec3(1.0, abs(1.0), 1.0)), (false ? _GLF_FUZZED(-18.47) : dot(vec3(0.0, 0.0, tan(0.0)), vec3(1.0, abs(1.0), 1.0))))))) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0 + (float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, tan(0.0)), vec3(1.0, abs(1.0), 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, tan(0.0)), vec3(1.0, abs(1.0), 1.0)), (false ? _GLF_FUZZED(-18.47) : dot(vec3(0.0, 0.0, tan(0.0)), vec3(1.0, abs(1.0), 1.0)))))), (mat4x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, tan(0.0)), vec3(1.0, abs(1.0), 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, tan(0.0)), vec3(1.0, abs(1.0), 1.0)), (false ? _GLF_FUZZED(-18.47) : dot(vec3(0.0, 0.0, tan(0.0)), vec3(1.0, abs(1.0), 1.0))))))) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, tan(0.0)), vec3(1.0, abs(1.0), 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, tan(0.0)), vec3(1.0, abs(1.0), 1.0)), (false ? _GLF_FUZZED(-18.47) : dot(vec3(0.0, 0.0, tan(0.0)), vec3(1.0, abs(1.0), 1.0)))))), (mat4x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, tan(0.0)), vec3(1.0, abs(1.0), 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, tan(0.0)), vec3(1.0, abs(1.0), 1.0)), (false ? _GLF_FUZZED(-18.47) : dot(vec3(0.0, 0.0, tan(0.0)), vec3(1.0, abs(1.0), 1.0))))))) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true)))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true) && (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.6)), bool(false))))) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-1.2, -4777.8777)) : injectionSwitch)).x > injectionSwitch.y))) && true))) && true), true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true)))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true, false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec2(bool(bvec4(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (_GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true), false)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), true && (! (true)))) && true))), false, true), false))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch)), vec2(1.0, 1.0) * (vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch)))))).x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec2(-7.8, -9.7) + log2(vec2(-25.73, 25.35)))))).y))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))))).y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.3)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.9)))), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.3)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.9)))), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.3)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.9)))), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.3)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.9)))), bool(true))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(7u), uvec3(7u)))), (gl_NumWorkGroups) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(150614u, 125580u, 105332u)) : gl_NumWorkGroups))) / uvec3(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u, 1u)), ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) ^ 0u))), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), clamp(uvec3(194056u, 67567u, 101613u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(83862u, 80063u, 135578u), uvec3(0u, 0u, 0u) ^ (uvec3(83862u, 80063u, 135578u)))) : _GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), (uvec3(194056u, 67567u, 101613u)) << uvec3(0u, 0u, 0u)))), (uvec3(194056u, _GLF_IDENTITY(67567u, (true ? _GLF_IDENTITY(67567u, (67567u) - 0u) : _GLF_FUZZED(subgroup_size))), 101613u)) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))) && true), (false) && true) ? _GLF_FUZZED((~ uvec3(164008u, 139959u, _GLF_IDENTITY(2928u, _GLF_IDENTITY(0u ^ (2928u), (0u ^ (2928u)) << 0u))))) : _GLF_IDENTITY(uvec3(194056u, _GLF_IDENTITY(67567u, _GLF_IDENTITY((67567u) | (67567u), clamp((67567u) | (67567u), (67567u) | (67567u), (67567u) | (67567u)))), 101613u), (true ? uvec3(194056u, 67567u, 101613u) : _GLF_FUZZED(uvec3(129468u, 57497u, 41548u))))))))) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), clamp(uvec3(194056u, 67567u, 101613u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(194056u, min(194056u, 194056u)), _GLF_IDENTITY(67567u, 0u | (67567u)), 101613u), (uvec3(194056u, 67567u, 101613u)) ^ uvec3(0u, 0u, 0u)), uvec3(194056u, 67567u, 101613u)))) : _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)), gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))), uvec3(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u) ^ (_GLF_IDENTITY((gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) + ((gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)))))))))))) / uvec3(1u, 1u, 1u)), max(false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(194056u, _GLF_IDENTITY(67567u, clamp(67567u, 67567u, 67567u)), 101613u), clamp(_GLF_IDENTITY(uvec3(194056u, _GLF_IDENTITY(67567u, (_GLF_IDENTITY(67567u, (67567u) - 0u)) | 0u), 101613u), max(_GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), min(uvec3(194056u, 67567u, 101613u), uvec3(194056u, 67567u, 101613u))), uvec3(194056u, 67567u, 101613u))), _GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), (uvec3(194056u, 67567u, 101613u)) ^ uvec3(0u, 0u, 0u)), uvec3(194056u, 67567u, 101613u)))) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, 0u ^ (1u)))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), clamp(uvec3(194056u, 67567u, 101613u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(194056u, uint(uvec2(194056u, 0u))), 67567u, 101613u), (uvec3(194056u, 67567u, 101613u)) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), (true ? uvec3(194056u, 67567u, 101613u) : _GLF_FUZZED(uvec3(186319u, 133371u, 145475u))))))) : _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) / uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ ((gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))), uvec3(1u, 1u, 1u) * (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), clamp(uvec3(194056u, 67567u, 101613u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(194056u, uint(uvec2(194056u, 0u))), 67567u, 101613u), (uvec3(194056u, 67567u, 101613u)) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), (true ? uvec3(194056u, 67567u, 101613u) : _GLF_FUZZED(uvec3(186319u, 133371u, 145475u))))))) : _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) / uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ ((gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))))), max(false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), clamp(uvec3(194056u, 67567u, 101613u), _GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), (_GLF_IDENTITY(uvec3(194056u, 67567u, _GLF_IDENTITY(101613u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (101613u))), max(_GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), max(uvec3(194056u, 67567u, 101613u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), min(uvec3(194056u, 67567u, 101613u), uvec3(194056u, 67567u, 101613u))), max(_GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), min(uvec3(194056u, 67567u, 101613u), uvec3(194056u, 67567u, 101613u))), _GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), min(uvec3(194056u, 67567u, 101613u), uvec3(194056u, 67567u, 101613u))))))), _GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), (uvec3(194056u, 67567u, 101613u)) << uvec3(0u, 0u, 0u))))) ^ uvec3(0u, 0u, 0u)), uvec3(194056u, 67567u, 101613u)))) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(194056u, 0u ^ (194056u)), 67567u, 101613u), clamp(uvec3(194056u, 67567u, 101613u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), (uvec3(194056u, 67567u, 101613u)) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), (uvec3(194056u, 67567u, 101613u)) ^ uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)), uvec3(194056u, 67567u, 101613u)))) : _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups))) ^ uvec3(0u, 0u, 0u)), gl_NumWorkGroups)), (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))))))) | uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), max(_GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min((0u), (0u))))), _GLF_IDENTITY(0u, ~ (~ (0u))))), 0u)))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) ^ 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), clamp(uvec3(194056u, 67567u, 101613u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(83862u, 80063u, 135578u)) : _GLF_IDENTITY(uvec3(194056u, _GLF_IDENTITY(67567u, (_GLF_IDENTITY(67567u, clamp(67567u, 67567u, 67567u))) ^ 0u), 101613u), (uvec3(194056u, 67567u, 101613u)) << uvec3(0u, 0u, 0u)))), (uvec3(194056u, _GLF_IDENTITY(67567u, (true ? _GLF_IDENTITY(67567u, (67567u) - 0u) : _GLF_FUZZED(subgroup_size))), 101613u)) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED((~ uvec3(164008u, 139959u, _GLF_IDENTITY(2928u, 0u ^ (2928u))))) : _GLF_IDENTITY(uvec3(194056u, _GLF_IDENTITY(67567u, (67567u) | (67567u)), 101613u), (true ? uvec3(194056u, 67567u, 101613u) : _GLF_FUZZED(uvec3(129468u, 57497u, 41548u)))))), ~ (~ (_GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED((~ uvec3(164008u, 139959u, _GLF_IDENTITY(2928u, 0u ^ (2928u))))) : _GLF_IDENTITY(uvec3(194056u, _GLF_IDENTITY(67567u, (67567u) | (67567u)), 101613u), (true ? uvec3(194056u, 67567u, 101613u) : _GLF_FUZZED(uvec3(129468u, 57497u, 41548u)))))))))))) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), clamp(uvec3(194056u, 67567u, 101613u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(194056u, min(194056u, 194056u)), 67567u, 101613u), (uvec3(194056u, 67567u, 101613u)) ^ uvec3(0u, 0u, 0u)), uvec3(194056u, 67567u, 101613u))), (_GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), clamp(uvec3(194056u, 67567u, 101613u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(194056u, min(194056u, 194056u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(194056u, min(194056u, 194056u)), (_GLF_IDENTITY(194056u, min(194056u, 194056u))) >> 0u))), 67567u, 101613u), (uvec3(194056u, 67567u, 101613u)) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))), uvec3(194056u, 67567u, 101613u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)))) : _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)))))))) / uvec3(1u, 1u, 1u)), max(false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), clamp(uvec3(194056u, 67567u, 101613u), _GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), (uvec3(194056u, 67567u, 101613u)) ^ uvec3(0u, 0u, 0u)), uvec3(194056u, 67567u, 101613u)))) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, 0u ^ (1u)))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)))), _GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), min(uvec3(194056u, 67567u, 101613u), uvec3(194056u, 67567u, 101613u))), clamp(uvec3(194056u, 67567u, 101613u), _GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), (uvec3(194056u, 67567u, 101613u)) ^ uvec3(0u, 0u, 0u)), uvec3(194056u, 67567u, 101613u)))) : _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) / uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((gl_NumWorkGroups) / uvec3(1u, 1u, 1u), ((gl_NumWorkGroups) / uvec3(1u, 1u, 1u)) >> (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))))), max(false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), clamp(uvec3(194056u, 67567u, 101613u), _GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), (uvec3(194056u, 67567u, 101613u)) ^ uvec3(0u, 0u, 0u)), uvec3(194056u, 67567u, 101613u)))) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(194056u, 0u ^ (194056u)), 67567u, 101613u), clamp(uvec3(194056u, 67567u, 101613u), _GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), (uvec3(194056u, 67567u, 101613u)) ^ uvec3(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, uint(uvec2(0u, 1u))), 0u)))), 0u, 0u)), uvec3(194056u, 67567u, 101613u)))) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))))))) | uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), max(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), ~ (~ (0u))))), 0u))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), 0u | ((1u))) ^ 0u))), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), clamp(uvec3(194056u, 67567u, 101613u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(83862u, 80063u, 135578u)) : _GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), (uvec3(194056u, 67567u, 101613u)) << uvec3(0u, 0u, 0u)))), (uvec3(194056u, _GLF_IDENTITY(67567u, (true ? _GLF_IDENTITY(67567u, _GLF_IDENTITY((67567u), (_GLF_IDENTITY((67567u), 0u + ((67567u)))) >> 0u) - 0u) : _GLF_FUZZED(subgroup_size))), 101613u)) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED((~ uvec3(164008u, 139959u, _GLF_IDENTITY(2928u, 0u ^ (2928u))))) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(194056u, _GLF_IDENTITY(67567u, (67567u) | (67567u)), 101613u), max(_GLF_IDENTITY(uvec3(194056u, _GLF_IDENTITY(67567u, (67567u) | (67567u)), 101613u), (uvec3(194056u, _GLF_IDENTITY(67567u, (67567u) | (67567u)), 101613u)) >> uvec3(0u, 0u, 0u)), uvec3(194056u, _GLF_IDENTITY(67567u, (67567u) | (67567u)), 101613u))), (true ? uvec3(194056u, 67567u, 101613u) : _GLF_FUZZED(uvec3(129468u, 57497u, 41548u))))))))) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), clamp(uvec3(194056u, 67567u, 101613u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(194056u, min(194056u, 194056u)), 67567u, 101613u), (uvec3(194056u, 67567u, _GLF_IDENTITY(101613u, (101613u) / 1u))) ^ uvec3(0u, 0u, 0u)), uvec3(194056u, 67567u, 101613u)))) : _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)))))))) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (gl_NumWorkGroups)), uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)))), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))))))))))) / _GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) / 1u)), max(_GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) / 1u)), uvec3(0u, 0u, 0u) + (uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) / 1u)))), uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) / 1u)))))) - uvec3(0u, 0u, 0u)), max(false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), clamp(uvec3(194056u, 67567u, 101613u), _GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), (uvec3(194056u, 67567u, 101613u)) ^ uvec3(0u, 0u, 0u)), uvec3(194056u, 67567u, 101613u)))) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, 0u ^ (1u)))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)))), _GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), clamp(uvec3(194056u, 67567u, 101613u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(194056u, (194056u) << 0u), 67567u, 101613u), (uvec3(194056u, _GLF_IDENTITY(67567u, _GLF_IDENTITY(uint(uvec3(67567u, 0u, 0u)), (false ? _GLF_FUZZED(uvec3(12451u, 144844u, 148731u).x) : uint(uvec3(67567u, 0u, 0u))))), 101613u)) ^ uvec3(0u, 0u, 0u)), uvec3(194056u, 67567u, 101613u)))) : _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) / uvec3(1u, 1u, 1u), uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))) ^ ((gl_NumWorkGroups) / uvec3(1u, _GLF_IDENTITY(1u, (1u) - 0u), 1u)))), max(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))) ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), clamp(uvec3(194056u, 67567u, 101613u), _GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), (uvec3(194056u, 67567u, 101613u)) ^ uvec3(0u, 0u, 0u)), uvec3(194056u, 67567u, 101613u)))) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, _GLF_IDENTITY(1u, (1u) | (1u)), 1u)), false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(194056u, 0u ^ (194056u)), 67567u, 101613u), clamp(uvec3(194056u, _GLF_IDENTITY(67567u, 1u * (67567u)), _GLF_IDENTITY(101613u, (true ? 101613u : _GLF_FUZZED(bitfieldReverse(subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(194056u, 67567u, 101613u), (uvec3(194056u, 67567u, 101613u)) | (uvec3(194056u, 67567u, 101613u))))), (uvec3(194056u, 67567u, 101613u)) ^ uvec3(0u, 0u, 0u)), uvec3(194056u, 67567u, 101613u)))) : _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> (uvec3(0u, 0u, 0u) & uvec3(63333u, 72417u, 119021u)))) / uvec3(1u, 1u, 1u))))))) | uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0u, (0u) + 0u))), max(~ (~ (_GLF_IDENTITY(0u, (0u) + 0u))), ~ (~ (_GLF_IDENTITY(0u, (0u) + 0u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, ~ (~ (0u)))), (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))) | (~ (_GLF_IDENTITY(0u, ~ (~ (0u)))))))), _GLF_IDENTITY(0u, ~ (~ (0u))))), 0u)))))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u)))), 0u, 0u)))))) >> uvec3(0u, 0u, 0u)), (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) | (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) ^ 0u))))) | (1u)))), 1u, 1u)), (false ? _GLF_FUZZED(uvec3(194056u, _GLF_IDENTITY(67567u, (_GLF_IDENTITY(67567u, ~ (~ (67567u)))) | (67567u)), 101613u)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), (false ? _GLF_FUZZED(uvec3(194056u, 67567u, 101613u)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))) | (gl_NumWorkGroups))) ^ ((uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) & uvec3(149343u, 45442u, 187941u))), (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(uvec3(194056u, 67567u, 101613u)) : _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) / uvec3(1u, 1u, 1u), ((gl_NumWorkGroups) / uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | (_GLF_IDENTITY(1u, max(1u, 1u)))))) ^ uvec3(0u, 0u, 0u)))), ((_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(uvec3(194056u, 67567u, 101613u)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))) / uvec3(1u, 1u, 1u)))))) >> uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (0u)))), 0u))) << uvec3(0u, 0u, 0u))))))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), log(1.0), sin(0.0), 0.0, 1.0))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) && true)), bool(bvec3(! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) && true)), false, false))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), float(_GLF_FUZZED(vec2(-0.8, -7.1).g)), bool(false))) > injectionSwitch.y)) && true))), (injectionSwitch.x > injectionSwitch.y) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - abs(vec2(0.0, 0.0))).y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))) && true))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))) && true))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), false))))), ! (! (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), false)))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), false), bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false)))))) && true)))))) || false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))) && true))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))) && true)), ! (! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false)))))) && true))))))))) || false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), false))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))) && true))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(93599u))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))), false))))), (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), false)))))) && true)))))) || false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 0.0)), max(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 0.0)), min(float(mat2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 0.0)), float(mat2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 0.0)))), float(mat2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 0.0))))) > injectionSwitch.y), false))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, bool(bvec2(false, false)))), bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), false))))), (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))) && true))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), false))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))) && true)))))) || false), true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), float(_GLF_FUZZED(4.3)), bool(false)))))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && true)))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)) | (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && ((false) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, injectionSwitch.x)) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, injectionSwitch.x)) > injectionSwitch.y))))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(-30.10)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y))) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(subgroup_id), ~ (~ (bitfieldReverse(subgroup_id))))) : workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id, clamp(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) | (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(5.0), mix(float(true ? injectionSwitch.x : _GLF_FUZZED(5.0)), float(_GLF_FUZZED(-6.2)), bool(false))))) > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u), max(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id), 0u | ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id))) << 0u, clamp(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6321.4323), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-2.0)), bvec2(true, false))).x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u, (0u ^ _GLF_IDENTITY(0u, (0u) | 0u)) ^ ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << _GLF_IDENTITY(0u, (0u) * 1u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), ~ (~ (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))))))) - 0u), 0u ^ ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), ~ (~ (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))))))) - 0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : _GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))) << 0u), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) ? injectionSwitch.x : _GLF_FUZZED(pow(-17.98, -107.264)))) > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) | (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(4.3, 5866.3646)) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.2)), vec2(_GLF_FUZZED(5.4), (injectionSwitch)[1]), bvec2(false, true))).y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u)))))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), uint(uvec3((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(subgroup_id), ~ (~ (bitfieldReverse(subgroup_id))))) : workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id, clamp(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) | (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5.0))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5.0))) > injectionSwitch.y)))) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u), max(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u, clamp(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) - (0u & 155256u)) ^ 0u) ^ _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u), min(_GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u), (_GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u), max(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u)))) | 0u), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(subgroup_id)), uint(uvec4(_GLF_FUZZED(bitfieldReverse(subgroup_id)), (1u & 1u), 0u, 0u))) : workgroup_id) << 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), ~ (~ (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))))))) - 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : _GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))) << 0u), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(pow(-17.98, -107.264)))) > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))))))) : workgroup_id) | (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(4.3, 5866.3646)) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.2)), vec2(_GLF_FUZZED(5.4), (injectionSwitch)[1]), bvec2(false, true))).y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u)))))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), 0u, 1u))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(subgroup_id), ~ (~ (bitfieldReverse(subgroup_id))))) : workgroup_id, (true ? _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(subgroup_id), ~ (~ (bitfieldReverse(subgroup_id))))) : workgroup_id : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id, clamp(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(subgroup_id)), (_GLF_FUZZED(bitfieldReverse(subgroup_id))) | (0u | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : workgroup_id, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(subgroup_id), (bitfieldReverse(subgroup_id)) | 0u)) : workgroup_id)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) | (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5.0))) > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u, clamp(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u, (0u ^ 0u) ^ (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u, min(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u, ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u) / 1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), ~ (~ (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))))))) - 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : _GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))) << 0u), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) ? _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, length(0.0), sqrt(1.0), abs(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)), abs(1.0)))).x : _GLF_FUZZED(pow(-17.98, -107.264)))) > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4.9) : injectionSwitch.y)))) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) | (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(4.3, 5866.3646)) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.2)), vec2(_GLF_FUZZED(5.4), (injectionSwitch)[1]), bvec2(false, true))).y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u)))))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(subgroup_id), ~ (~ (bitfieldReverse(subgroup_id))))) : workgroup_id, (true ? _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(subgroup_id), ~ (~ (bitfieldReverse(subgroup_id))))) : workgroup_id : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id, clamp(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(subgroup_id)), (_GLF_FUZZED(bitfieldReverse(subgroup_id))) | (0u | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : workgroup_id, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(subgroup_id), (bitfieldReverse(subgroup_id)) | 0u)) : workgroup_id)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) | (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5.0))) > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u, clamp(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u, (0u ^ 0u) ^ (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u, min(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u, ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u) / 1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), ~ (~ (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))))))) - 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : _GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))) << 0u), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) ? _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, length(0.0), sqrt(1.0), abs(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)), abs(1.0)))).x : _GLF_FUZZED(pow(-17.98, -107.264)))) > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4.9) : injectionSwitch.y)))) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) | (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(4.3, 5866.3646)) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.2)), vec2(_GLF_FUZZED(5.4), (injectionSwitch)[1]), bvec2(false, true))).y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u)))))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u))))))), uint(uvec3((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 0u)), clamp(_GLF_IDENTITY(uint(uvec3(subgroup_id, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 0u)), (uint(uvec3(subgroup_id, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 0u))) | (uint(uvec3(subgroup_id, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 0u)))), uint(uvec3(subgroup_id, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 0u)), uint(uvec3(subgroup_id, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 0u)))))), ~ (~ _GLF_IDENTITY((bitfieldReverse(subgroup_id)), ~ (~ ((bitfieldReverse(subgroup_id)))))))) : workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id, clamp(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(subgroup_id)), (_GLF_FUZZED(bitfieldReverse(subgroup_id))) ^ 0u) : workgroup_id, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) | (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, sin(0.0), 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0, abs(0.0), 0.0), mat4x3(mat4(mat4x3(injectionSwitch.y, sin(0.0), 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0, abs(0.0), 0.0)))))))) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5.0))) > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u), max(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id), clamp(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id)) + 0u)) / 1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id))) << 0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id)) | ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id))) << 0u, (0u ^ 0u) ^ ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : _GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))) << 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(subgroup_id), min(_GLF_IDENTITY(bitfieldReverse(subgroup_id), (bitfieldReverse(subgroup_id)) - 0u), bitfieldReverse(subgroup_id)))) : workgroup_id) << 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id), clamp(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id), (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id)) + 0u)) / 1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_local_id))))) : workgroup_id), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id))) << 0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id)) | _GLF_IDENTITY(((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)))))) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id)), _GLF_IDENTITY(uint(uvec3(((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)))))) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), max(uint(uvec3(((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)))))) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), uint(uvec3(((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)))))) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))))) << 0u, (0u ^ 0u) ^ _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : _GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), clamp(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))) << 0u), min(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : _GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), clamp(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))) << 0u), _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : _GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), clamp(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))) << 0u), (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : _GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), clamp(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))) << 0u)) ^ 0u)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(_GLF_IDENTITY(subgroup_id, (subgroup_id) << (1u ^ 1u))), min(_GLF_IDENTITY(bitfieldReverse(subgroup_id), (bitfieldReverse(subgroup_id)) - 0u), bitfieldReverse(subgroup_id)))) : workgroup_id) << _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 0u | (~ (0u))))))) : _GLF_FUZZED(subgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id, (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y)))) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, _GLF_IDENTITY(0u, 0u ^ (0u))), min(max(0u, _GLF_IDENTITY(0u, 0u ^ (0u))), _GLF_IDENTITY(max(0u, _GLF_IDENTITY(0u, 0u ^ (0u))), ~ (~ (max(0u, _GLF_IDENTITY(0u, 0u ^ (0u))))))))))))) - 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(0u, min(0u, 0u)) | (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u)) >> 0u)))) << 0u), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id, (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) ? injectionSwitch.x : _GLF_FUZZED(pow(-17.98, -107.264)))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))))) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) | (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(4.3, _GLF_IDENTITY(5866.3646, float(vec2(5866.3646, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))))) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-6.2, max(_GLF_IDENTITY(-6.2, min(-6.2, -6.2)), _GLF_IDENTITY(-6.2, clamp(-6.2, -6.2, -6.2)))))), vec2(_GLF_FUZZED(5.4), (injectionSwitch)[1]), bvec2(false, true))).y)) ? _GLF_FUZZED(bitfieldReverse(subgroup_id)) : workgroup_id) << 0u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, max(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)), 3u))))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) + (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, max(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)), 3u))))), clamp((0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, max(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)), 3u))))), (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, max(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)), 3u))))), (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, max(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)), 3u))))))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, max(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)), 3u))))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) + (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, max(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)), 3u))))), clamp((0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, max(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)), 3u))))), (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, max(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)), 3u))))), (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, max(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)), 3u))))))))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, max(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)), 3u))))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) + (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, max(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)), 3u))))), clamp((0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, max(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)), 3u))))), (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, max(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)), 3u))))), (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, max(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)), 3u)))))))))) / 1u))))), 0u, 1u)))))));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))) + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), subgroup_local_id)), (subgroup_local_id) | 0u);
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mix(vec2(_GLF_FUZZED(6.2), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, int(int(0)))], _GLF_FUZZED((_GLF_IDENTITY(false, false || (false)) ? -476.148 : -59.91))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
  return;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (1) >> 0)), 4, 64, 4);
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)], read, _GLF_IDENTITY(4, 0 ^ (4)), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), sqrt(abs(1.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(vec2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 0.0)))), abs(1.0)), mat3(mat3(mat3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), sqrt(abs(1.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(vec2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 0.0)))), abs(1.0)))))), max(vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), sqrt(abs(1.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(vec2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 0.0)))), abs(1.0)), mat3(mat3(mat3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), sqrt(abs(1.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(vec2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 0.0)))), abs(1.0)))))), vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), sqrt(abs(1.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(vec2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 0.0)))), abs(1.0)), mat3(mat3(mat3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), sqrt(abs(1.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(vec2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 0.0)))), abs(1.0))))))))).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7.2, -703.863)) : injectionSwitch))[0], injectionSwitch[0])), injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ((false)) || false))), (bool(bool(_GLF_IDENTITY((false), ((false)) || false)))) || false))), false || ((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ((false)) || false))), (bool(bool(_GLF_IDENTITY((false), ((false)) || false)))) || false))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.8)), bool(false))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-560.507) : injectionSwitch.x)) > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
}
