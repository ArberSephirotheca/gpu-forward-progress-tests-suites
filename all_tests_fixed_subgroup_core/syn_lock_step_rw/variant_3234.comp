#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_9 {
 ivec2 _f0;
 mat2x4 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_10 {
 bvec4 _f0;
 mat3x4 _f1;
 _GLF_struct_9 _f2;
} ;

struct _GLF_struct_11 {
 uint _f0;
 uint workgroup_id;
 bvec4 _f1;
 bool _f2;
 _GLF_struct_10 _f3;
 float _f4;
 float _f5;
} ;

struct _GLF_struct_6 {
 uvec2 _f0;
 bool _f1;
} ;

struct _GLF_struct_5 {
 bool _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_4 {
 bvec3 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_3 {
 ivec4 _f0;
} ;

struct _GLF_struct_7 {
 ivec4 _f0;
 bvec3 _f1;
 _GLF_struct_3 _f2;
 mat2 _f3;
 _GLF_struct_4 _f4;
 _GLF_struct_5 _f5;
 _GLF_struct_6 _f6;
} ;

struct _GLF_struct_1 {
 vec2 _f0;
 vec4 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_0 {
 vec4 _f0;
 bvec3 _f1;
 bool _f2;
 mat4x2 _f3;
 float _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_2 {
 uvec3 _f0;
 mat2x4 _f1;
 ivec2 _f2;
 mat2x3 _f3;
 bvec4 _f4;
 _GLF_struct_0 _f5;
 _GLF_struct_1 _f6;
} ;

struct _GLF_struct_8 {
 mat4 _f0;
 uint read;
 _GLF_struct_2 _f1;
 _GLF_struct_7 _f2;
 vec2 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, cos(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), true)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), (vec3(injectionSwitch.x, 1.0, 0.0)) / vec3(1.0, 1.0, 1.0))), (_GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), (vec3(injectionSwitch.x, 1.0, 0.0)) / vec3(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))), clamp(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 1.0, 0.0, 1.0, 1.0, 0.0)), float(mat2x3(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 1.0, 0.0, 1.0, 1.0, 0.0)), abs(0.0), 0.0, 1.0, 1.0, 1.0)))), 1.0, 0.0), (vec3(injectionSwitch.x, 1.0, 0.0)) / vec3(1.0, 1.0, 1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), _GLF_IDENTITY((vec3(injectionSwitch.x, 1.0, 0.0)), mat3(1.0) * ((vec3(injectionSwitch.x, 1.0, 0.0)))) / vec3(1.0, 1.0, 1.0))), (float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), _GLF_IDENTITY((vec3(injectionSwitch.x, 1.0, 0.0)), mat3(1.0) * ((vec3(injectionSwitch.x, 1.0, 0.0)))) / vec3(1.0, 1.0, 1.0)))) / 1.0), float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), (vec3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-652.673))))), 1.0, 0.0)) / vec3(1.0, 1.0, 1.0)))))) * 1.0)) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)) && true), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)) && true))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true))))), (_GLF_DEAD(false)) || false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true, true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false, (false) || false), true))))), true && (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))) || false)))))), true)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true, bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))) && true, (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))) && true, bool(bool((bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))) && true)))) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(false, false, true))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), true && (_GLF_IDENTITY(false, bool(bool(false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(false, true))) || ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), true && (_GLF_IDENTITY(false, bool(bool(false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(bool(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), true))))))))), (injectionSwitch.x > injectionSwitch.y))))), false, false)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0)), mix(vec2((vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0)))[0], (vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(1556.9216), _GLF_FUZZED(87.44)), bvec2(false, false)))).x > injectionSwitch.y))))), false, false)))), (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), (vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))) / sqrt(vec2(1.0, 1.0)))).x, injectionSwitch.x)))) > injectionSwitch.y))))), false, false))) || false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bvec2(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (injectionSwitch.x > injectionSwitch.y)) || (false)), false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(22.81)))), false || ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))), (injectionSwitch.x > injectionSwitch.y)))))))), false, false)))))), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-474.267)), bool(false))), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-474.267)), bool(false)))), min(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-474.267)), bool(false)))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-474.267)), bool(false)))))), float(_GLF_FUZZED(_GLF_IDENTITY(17.73, 0.0 + (_GLF_IDENTITY(17.73, min(17.73, 17.73)))))), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-474.267)), bool(false))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x : _GLF_FUZZED(-2745.8117))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-474.267)), bool(false)))), float(_GLF_FUZZED(17.73)), bool(false))) : _GLF_FUZZED(-2.3))) > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), true && (! (false))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)), (_GLF_IDENTITY(false, true && (false))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) << 0)])), injectionSwitch)).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), max(_GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), ((injectionSwitch) * vec2(1.0, 1.0)) - vec2(0.0, 0.0)), (injectionSwitch) * vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y), (false ? _GLF_FUZZED(-69.13) : (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), ((injectionSwitch) * vec2(1.0, 1.0)) - vec2(0.0, 0.0)), vec2(vec4(_GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), ((injectionSwitch) * vec2(1.0, 1.0)) - vec2(0.0, 0.0)), 0.0, 1.0))), (injectionSwitch) * vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y))) - 0.0)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (true && (false))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(-5654.3698)), bool(false))), 1.0, round(length(normalize(1.0)))))) > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), (_GLF_DEAD(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), clamp(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(99881u))), bool(false))), 0.0)), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, round(length(normalize(1.0)))))) > injectionSwitch.y))))), ((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, round(length(normalize(1.0)))))) > injectionSwitch.y)))))) || false)), true && (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.5) : 1.0)), 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(53.83))), 0.0)), 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), clamp(float(0.0), float(0.0), float(0.0))))), 0.0, abs(0.0), 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, round(length(normalize(1.0))))), mix(float(_GLF_FUZZED(-5.2)), float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.5) : 1.0)), 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(53.83))), 0.0)), 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), clamp(float(0.0), float(0.0), float(0.0))))), 0.0, abs(0.0), 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, round(length(normalize(1.0)))))), bool(true)))) > injectionSwitch.y)), true && ((_GLF_DEAD(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), determinant(_GLF_IDENTITY(mat4(length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (vec3(0.0, 0.0, 0.0)) - vec3(0.0, 0.0, 0.0))) - vec3(0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), clamp(float(0.0), float(0.0), float(0.0))))), 0.0, abs(0.0), 0.0, 0.0, 0.0), transpose(transpose(mat4(length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (vec3(0.0, 0.0, 0.0)) - vec3(0.0, 0.0, 0.0))) - vec3(0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), clamp(float(0.0), float(0.0), float(0.0))))), 0.0, abs(0.0), 0.0, 0.0, 0.0))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, round(length(normalize(1.0)))))) > injectionSwitch.y))))))), _GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-467.161) : _GLF_ZERO(0.0, injectionSwitch.x))), determinant(mat4(length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, round(length(normalize(1.0)))))) > injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-467.161) : _GLF_ZERO(0.0, injectionSwitch.x))), determinant(mat4(length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, round(length(normalize(1.0)))))) > injectionSwitch.y)))))), ! (! (((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-467.161) : _GLF_ZERO(0.0, injectionSwitch.x))), determinant(mat4(length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, round(length(normalize(1.0)))))) > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, round(length(normalize(1.0)))))) > injectionSwitch.y))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_DEAD(false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(! (bool(bvec4(_GLF_DEAD(false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_DEAD(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0), 0.0, 0.0)), 0.0, 0.0, 0.0, abs(0.0), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 0.0, 1.0, 1.0, 0.0, 1.0)), (float(mat3x2(0.0, 0.0, 1.0, 1.0, 0.0, 1.0))) / 1.0)), 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, round(length(normalize(1.0)))))) > injectionSwitch.y)))))) || false), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (1.0) / _GLF_ONE(1.0, injectionSwitch.y)), round(length(normalize(1.0)))))) > injectionSwitch.y))))), ((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, round(length(normalize(1.0)))))) > injectionSwitch.y)))))) || false)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))).x, float(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(round(length(normalize(1.0))), (round(length(normalize(1.0)))) - 0.0)))) > injectionSwitch.y))))), ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), true && (_GLF_IDENTITY(! ((_GLF_DEAD(false))), ! (! (! ((_GLF_DEAD(false)))))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, round(length(normalize(1.0)))))) > injectionSwitch.y)))))) || false), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, round(length(normalize(1.0)))))) > injectionSwitch.y))))), ((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4681.6990)), float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(0.8) : _GLF_IDENTITY(0.0, (0.0) - 0.0)))) * _GLF_IDENTITY(1.0, 1.0 * (1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0)), 0.0, 0.0, 0.0, abs(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0)))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9107.0620) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0))), injectionSwitch.y, injectionSwitch.y))))), 1.0, round(length(normalize(1.0)))))) > injectionSwitch.y)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4681.6990)), float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(0.8) : _GLF_IDENTITY(0.0, (0.0) - 0.0)))) * _GLF_IDENTITY(1.0, 1.0 * (1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0)), 0.0, 0.0, 0.0, abs(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0)))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9107.0620) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0))), injectionSwitch.y, injectionSwitch.y))))), 1.0, round(length(normalize(1.0)))))) > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4681.6990)), float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(0.8) : _GLF_IDENTITY(0.0, (0.0) - 0.0)))) * _GLF_IDENTITY(1.0, 1.0 * (1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0)), 0.0, 0.0, 0.0, abs(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0)))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9107.0620) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0))), injectionSwitch.y, injectionSwitch.y))))), 1.0, round(length(normalize(1.0)))))) > injectionSwitch.y))))), ! (! (! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4681.6990)), float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(0.8) : _GLF_IDENTITY(0.0, (0.0) - 0.0)))) * _GLF_IDENTITY(1.0, 1.0 * (1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0)), 0.0, 0.0, 0.0, abs(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0)))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9107.0620) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0))), injectionSwitch.y, injectionSwitch.y))))), 1.0, round(length(normalize(1.0)))))) > injectionSwitch.y)))))))))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4681.6990)), float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(0.8) : _GLF_IDENTITY(0.0, (0.0) - 0.0)))) * 1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0)), 0.0, 0.0, 0.0, abs(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0)))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9107.0620) : injectionSwitch.y))), 1.0, round(length(normalize(1.0)))))) > injectionSwitch.y)))))), bool(bool(bool(bool((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4681.6990)), float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(0.8) : _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, float(mat3((0.0) - 0.0, cos(log(1.0)), 0.0, sqrt(1.0), sqrt(0.0), 0.0, 0.0, 1.0, 0.0))))))) * 1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0)), 0.0, 0.0, 0.0, abs(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat3(float(mat2x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), (float(mat3(float(mat2x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))) * 1.0))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0)))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9107.0620) : injectionSwitch.y))), 1.0, round(length(normalize(1.0)))))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))))))) || false)))), false), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, sqrt(1.0), cos(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))))), clamp(vec3(0.0, sqrt(1.0), cos(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))))), vec3(0.0, sqrt(1.0), cos(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))))), vec3(0.0, sqrt(1.0), cos(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))))))))), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 1.0)), max(float(vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 1.0)), mix(float(float(vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 1.0))), float(_GLF_FUZZED(-70.48)), bool(false)))))))), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, round(length(normalize(1.0)))))) > injectionSwitch.y)), true && (_GLF_IDENTITY((_GLF_DEAD(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, round(length(normalize(1.0)))))) > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, round(length(normalize(1.0)))))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, round(length(normalize(1.0)))))) > injectionSwitch.y) && true))), true)))))))), ((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, round(length(normalize(1.0)))))) > injectionSwitch.y)))))) || false), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, round(length(normalize(1.0)))))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.8) : injectionSwitch.y))))))), ((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), determinant(_GLF_IDENTITY(mat4(length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0), transpose(transpose(mat4(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (true ? _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat3x4(length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), float(mat3x4(float(mat3x4(length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))) : _GLF_FUZZED(log2(1.7)))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, round(length(normalize(1.0)))))) > injectionSwitch.y)))))) || false)))), false), false))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(1u, gl_WorkGroupID.x, bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))), true, _GLF_struct_10(bvec4(true), mat3x4(1.0), _GLF_struct_9(ivec2(1), mat2x4(1.0), mat2x4(1.0))), 1.0, 1.0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_11.workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(false)) || false), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true)) && _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), true))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-0.8) : injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-28.58))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 1u))), ((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 1u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(subgroup_local_id), (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 1u))), ((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 1u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(subgroup_local_id)) << 0u))) + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(uvec3(23319u, 28329u, 181378u).r))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(workgroup_base, 1u), _GLF_IDENTITY((uvec2(workgroup_base, 1u)) | uvec2(0u, 0u), (false ? _GLF_FUZZED(uvec2(66611u, 67351u)) : (uvec2(workgroup_base, 1u)) | uvec2(0u, 0u))))), ~ _GLF_IDENTITY((~ (uint(uvec2(workgroup_base, 1u)))), max((~ (uint(uvec2(workgroup_base, 1u)))), (~ (uint(uvec2(workgroup_base, 1u)))))))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(mat4(1.0), atomicLoad(buf[virtual_gid], 4, 64, 0), _GLF_struct_2(uvec3(1u), mat2x4(1.0), _GLF_IDENTITY(ivec2(1), clamp(ivec2(1), ivec2(1), _GLF_IDENTITY(ivec2(1), (false ? _GLF_FUZZED(ivec2(_GLF_IDENTITY(-63204, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(-63204, (-63204) | (_GLF_IDENTITY(-63204, _GLF_IDENTITY((-63204) >> _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) ^ 0) + _GLF_IDENTITY(0, min(0, 0))), clamp((-63204) >> _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) ^ 0) + _GLF_IDENTITY(0, min(0, 0))), (-63204) >> _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) ^ 0) + _GLF_IDENTITY(0, min(0, 0))), (-63204) >> _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) ^ 0) + _GLF_IDENTITY(0, min(0, 0)))))))), (_GLF_IDENTITY(-63204, (-63204) | (_GLF_IDENTITY(-63204, (-63204) >> 0)))) | (_GLF_IDENTITY(-63204, _GLF_IDENTITY((-63204), min((-63204), (-63204))) | _GLF_IDENTITY((_GLF_IDENTITY(-63204, (-63204) >> 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(-63204, (-63204) >> 0)), ((_GLF_IDENTITY(-63204, (-63204) >> 0))) | ((_GLF_IDENTITY(-63204, (-63204) >> 0))))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(-63204, (-63204) >> 0)), ((_GLF_IDENTITY(-63204, (-63204) >> 0))) | ((_GLF_IDENTITY(-63204, (-63204) >> 0))))), int(_GLF_IDENTITY(ivec2(~ (_GLF_IDENTITY((_GLF_IDENTITY(-63204, (-63204) >> 0)), ((_GLF_IDENTITY(-63204, (-63204) >> 0))) | ((_GLF_IDENTITY(-63204, (-63204) >> 0))))), 1), min(ivec2(~ (_GLF_IDENTITY((_GLF_IDENTITY(-63204, (-63204) >> 0)), ((_GLF_IDENTITY(-63204, (-63204) >> 0))) | ((_GLF_IDENTITY(-63204, (-63204) >> 0))))), 1), ivec2(~ (_GLF_IDENTITY((_GLF_IDENTITY(-63204, (-63204) >> 0)), ((_GLF_IDENTITY(-63204, (-63204) >> 0))) | ((_GLF_IDENTITY(-63204, (-63204) >> 0))))), 1))))), ~ (_GLF_IDENTITY((_GLF_IDENTITY(-63204, (-63204) >> 0)), ((_GLF_IDENTITY(-63204, (-63204) >> 0))) | ((_GLF_IDENTITY(-63204, (-63204) >> 0))))))))))))), max(~ (_GLF_IDENTITY(-63204, (-63204) | (_GLF_IDENTITY(-63204, (-63204) >> 0)))), ~ (_GLF_IDENTITY(-63204, (-63204) | (_GLF_IDENTITY(-63204, (-63204) >> 0)))))))), 43207)) : ivec2(1))))), mat2x3(1.0), bvec4(true), _GLF_struct_0(_GLF_IDENTITY(vec4(1.0), min(vec4(1.0), vec4(1.0))), bvec3(true), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))) && true), mat4x2(1.0), 1.0, bvec4(true)), _GLF_struct_1(vec2(1.0), vec4(1.0), _GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec2(bvec2(bvec2(true)))))))), bvec2(bvec3(bvec2(bvec2(true)), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec4(bvec2(bvec2(true)), true, true))), true)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), true, true))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), false))), true)))), bvec2(bvec3(bvec2(bvec2(true)), true)))))))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true))))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true))))), false, true))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true)))), false))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true)))), false)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true)))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))))), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))))), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))))), true)), bvec3(bvec4(bvec3(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))))), true)), false)))))), true))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec2(true)), true)), bvec3(bvec4(bvec3(bvec3(bvec2(bvec2(true)), true)), false))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)))), true)))))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), ! (! (true))), true)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))))), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))))), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))))), true)), bvec3(bvec4(bvec3(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))))), true)), false)))))), true))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec2(true)), true)), bvec3(bvec4(bvec3(bvec3(bvec2(bvec2(true)), true)), false))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)))), true)))))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), ! (! (true))), true)))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))))), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))))), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))))), true)), bvec3(bvec4(bvec3(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))))), true)), false)))))), true))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec2(true)), true)), bvec3(bvec4(bvec3(bvec3(bvec2(bvec2(true)), true)), false))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)))), true)))))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), ! (! (true))), true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))))), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))))), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))))), true)), bvec3(bvec4(bvec3(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))))), true)), false)))))), true))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec2(true)), true)), bvec3(bvec4(bvec3(bvec3(bvec2(bvec2(true)), true)), false))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)))), true)))))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), ! (! (true))), true)))), false))), true, false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))))), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))))), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))))), true)), bvec3(bvec4(bvec3(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))))), true)), false)))))), true))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec2(true)), true)), bvec3(bvec4(bvec3(bvec3(bvec2(bvec2(true)), true)), false))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)))), true)))))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), ! (! (true))), true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))))), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))))), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))))), true)), bvec3(bvec4(bvec3(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))))), true)), false)))))), true))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec2(true)), true)), bvec3(bvec4(bvec3(bvec3(bvec2(bvec2(true)), true)), false))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)))), true)))))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), ! (! (true))), true)))), false))), true, false)), false, false)))), false, true))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))) || (true))) && true))), true)))))))))), false))), false, false)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true)))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))))), bvec2(bvec3(bvec2(bvec2(true)), true)))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(true)), true), bvec3(bvec3(bvec3(bvec2(bvec2(true)), true))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true), false || ((true)))), (! (_GLF_IDENTITY((true), false || ((true))))) || false))))))), true)))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(true), true)), false))))), bvec2(bvec3(bvec2(bvec2(true)), true))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(true), true)), false))))), bvec2(bvec3(bvec2(bvec2(true)), true))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(true), true)), false))))), bvec2(bvec3(bvec2(bvec2(true)), true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(true), true)), false))))), bvec2(bvec3(bvec2(bvec2(true)), true)))))), true))), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, false, false))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(true)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(true)))), false)))), true, false))), bvec2(bvec3(bvec2(bvec2(true)), true)))))))), true))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(true)), true), bvec3(bvec4(bvec3(bvec2(bvec2(true)), true), true)))))))))))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(true), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), true), bvec3(bvec3(bvec3(bvec2(true), true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), true), bvec3(bvec3(bvec3(bvec2(true), true)))))))))))))), true, true)))), false)))), true)))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))))))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))))))))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(true, (true) && true))), bvec2(bvec3(bvec2(bvec2(true)), true))))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(true, (true) && true))), bvec2(bvec3(bvec2(bvec2(true)), true))))))), false)))))), false))), false, false)), false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true)))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true)))))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true)))))))), false, true))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bvec2(bvec3(bvec2(bvec2(true)), true)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true), true, true)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(true), true, true))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(true), true, true))))), true))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(true), true, true))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(true), true, true))))), true))))), true)))))), bvec2(bvec3(bvec2(bvec2(true)), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true))), true, true)))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (true)))) || false))))))), true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bool(! (true)), _GLF_IDENTITY(false, ! (! (false))) || (bool(! (true)))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bool(! (true)), false || (bool(! (true))))))))), true && (_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bool(! (true)), false || (bool(! (true))))))))), true && ((bool(bool(_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bool(! (true)), false || (bool(! (true))))))))))))), bool(bool(_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bool(! (true)), false || (bool(! (true))))))))), bool(bvec2(_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bool(! (true)), false || (bool(! (true))))))))), ! (! (! (bool(bool(_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bool(! (true)), false || (bool(! (true)))))))))))), true))))))))))))), true), bvec3(bvec3(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))))), true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec2(true)), true)), bvec3(bvec4(bvec3(bvec3(bvec2(bvec2(true)), true)), false))))))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true))), _GLF_IDENTITY(false, (false) && true), false)))))), _GLF_IDENTITY(true, ! (! (true))), true)))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, (true) && true))), true)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), bool(bvec2(bool(bvec4(true, true, true, false)), true)))), (true) && true))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))), true && (! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, (true) && true))), true))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, (true) && true))), true))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, (true) && true))), true))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))), false, true)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, (true) && true))), true))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, (true) && true))), true))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))), false, true)), true)))), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, (true) && true))), true))))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), false, true)))))))))))), false))), false, false)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, true))))), bvec2(bvec3(bvec2(bvec2(true)), true)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(bvec2(true))), false))))))), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true))), true, true)))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (true), bool(bool(! (true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (true), bool(bool(! (true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_IDENTITY(! (true), bool(bool(! (true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false || (! (! (true))))))))), true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bool(! (true)), false || (bool(! (true)))))))), ! (! (bool(bool(_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))))), false || (bool(! (true)))))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bool(! (true)), false || (bool(! (true)))))))), ! (! (bool(bool(_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))))), false || (bool(! (true)))))))))))))), bool(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bool(! (true)), false || (bool(! (true)))))))), ! (! (bool(bool(_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))))), false || (bool(! (true)))))))))))))), false, true))))))), true), bvec3(bvec3(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))))), true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), false))), true)), bvec3(bvec4(bvec3(bvec3(bvec2(bvec2(true)), true)), false))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true)))))), _GLF_IDENTITY(true, ! (! (true))), true)))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, (true) && true))), true)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, (true) && true))), true)))), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, (true) && true))), true)))), true, true)), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, (true) && true))), true))))))))))))), _GLF_IDENTITY(false, true && (false))))), false, false))))), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true)))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(true))), true)))) || false))), bvec2(bvec3(bvec2(bvec2(true)), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true)))))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true)))))))), true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true)))))))), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true)))))))), _GLF_IDENTITY(true, ! (! (true))))), true, true))))))))), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(true)), true), bvec3(bvec4(bvec3(bvec2(bvec2(true)), true), true)))))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(true)), true), bvec3(bvec4(bvec3(bvec2(bvec2(true)), true), true)))))))))), false))))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(true))), true)))) || false))), bvec2(bvec3(bvec2(bvec2(true)), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true)))))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true)))))))), true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true)))))))), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true)))))))), _GLF_IDENTITY(true, ! (! (true))))), true, true))))))))), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(true)), true), bvec3(bvec4(bvec3(bvec2(bvec2(true)), true), true)))))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(true)), true), bvec3(bvec4(bvec3(bvec2(bvec2(true)), true), true)))))))))), false))))), true))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec3(bvec2(bvec2(bvec2(true))), false))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(true), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), true), bvec3(bvec3(bvec3(bvec2(true), true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), true), bvec3(bvec3(bvec3(bvec2(true), true)))))))))))))), true, true)))), false)))), true))))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec3(bvec2(bvec2(bvec2(true))), false))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(true), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), true), bvec3(bvec3(bvec3(bvec2(true), true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), true), bvec3(bvec3(bvec3(bvec2(true), true)))))))))))))), true, true)))), false)))), true))))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec3(bvec2(bvec2(bvec2(true))), false))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(true), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), true), bvec3(bvec3(bvec3(bvec2(true), true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), true), bvec3(bvec3(bvec3(bvec2(true), true)))))))))))))), true, true)))), false)))), true))))), true)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec3(bvec2(bvec2(bvec2(true))), false))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(true), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), true), bvec3(bvec3(bvec3(bvec2(true), true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), true), bvec3(bvec3(bvec3(bvec2(true), true)))))))))))))), true, true)))), false)))), true))))), true)), true, true)))), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(true, (true) && true))), bvec2(bvec3(bvec2(bvec2(true)), true)))))))))), false))), false, false)), false)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false)) && true), false)))))), _GLF_struct_7(ivec4(1), bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, true))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(true, true)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(true, true)))), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(true, true)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(true, true)))), true))))))))))) && (true))), _GLF_struct_3(ivec4(1)), mat2(1.0), _GLF_struct_4(bvec3(true), mat4x3(1.0)), _GLF_struct_5(true, uvec4(1u)), _GLF_struct_6(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) - uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), true)), vec2(1.0));
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) + 0), min(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, int(ivec4(64, 1, 0, 1))))), 64)), _GLF_IDENTITY(4, (4) * 1));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(cos(injectionSwitch)) : (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), min(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(cos(injectionSwitch)) : (injectionSwitch) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y)))))), _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(cos(injectionSwitch)) : (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], _GLF_struct_replacement_8.read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), (! ((false))) || false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY((! ((false))), false || ((! ((false))))) || false)))), (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false))))) || false), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))), (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false))))) || false), false), true)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 0.0), max(vec4(injectionSwitch.y, 0.0, 0.0, 0.0), vec4(injectionSwitch.y, 0.0, 0.0, 0.0)))), clamp(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 0.0), max(vec4(injectionSwitch.y, 0.0, 0.0, 0.0), vec4(injectionSwitch.y, 0.0, 0.0, 0.0)))), float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 0.0), max(vec4(injectionSwitch.y, 0.0, 0.0, 0.0), vec4(injectionSwitch.y, 0.0, 0.0, 0.0)))), float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 0.0), max(vec4(injectionSwitch.y, 0.0, 0.0, 0.0), vec4(injectionSwitch.y, 0.0, 0.0, 0.0))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), 0.0, 0.0, log(1.0), 0.0, 0.0, 0.0, 1.0), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), 0.0, 0.0, log(1.0), 0.0, 0.0, 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))).x), float(_GLF_FUZZED(9.4)), bool(false)))) - tan(0.0)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(1.6), _GLF_FUZZED(5179.2900)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, (true) && true))), mix(vec2((mix(vec2(_GLF_FUZZED(1.6), _GLF_FUZZED(5179.2900)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, (true) && true))))[0], _GLF_FUZZED(90.41)), vec2(_GLF_FUZZED((+ (-69.37 - 1.8))), (mix(vec2(_GLF_FUZZED(1.6), _GLF_FUZZED(5179.2900)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))), (true) && true))))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))).y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false)))))))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
