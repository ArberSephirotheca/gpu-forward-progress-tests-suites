#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))) && true), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || false)) && _GLF_IDENTITY(true, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), (injectionSwitch.x < injectionSwitch.y)) && (true))))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)))), clamp(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(0.0, cos(0.0) * (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))))))).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)))), clamp(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(0.0, cos(0.0) * (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))))))).x > injectionSwitch.y), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)))), clamp(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(0.0, cos(0.0) * (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))))))).x > injectionSwitch.y), (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)))), clamp(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0))))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(0.0, cos(0.0) * (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))))))).x > injectionSwitch.y)) || false))))))))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0)), clamp(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(vec3(22.06, 9.4, -487.101).z)), bool(false))), 1.0, 1.0, 0.0, 0.0, 0.0)), float(mat3x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0)), float(mat3x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))), false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), injectionSwitch)), injectionSwitch))) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y, (false ? _GLF_FUZZED(-3230.8495) : injectionSwitch.y))) / 1.0))) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), injectionSwitch)), injectionSwitch))) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y, (false ? _GLF_FUZZED(-3230.8495) : injectionSwitch.y))) / 1.0))) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), injectionSwitch)), injectionSwitch))) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y, (false ? _GLF_FUZZED(-3230.8495) : injectionSwitch.y))) / 1.0))) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) && true))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, abs(1.0), 0.0, round(length(normalize(_GLF_ONE(1.0, injectionSwitch.y))))))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7197.6245)), float(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), bool(true))), max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), ! (! (bool((false))))))) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false)))))), (! (_GLF_IDENTITY(false, (false) || false))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (1)))))]), vec2(_GLF_FUZZED(1.7), _GLF_FUZZED(0.5)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3019.1404) : injectionSwitch.y)), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3019.1404) : injectionSwitch.y)), 1.0, 1.0), (vec3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3019.1404) : injectionSwitch.y)), 1.0, 1.0)) + vec3(0.0, 0.0, 0.0))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((false), true && ((false)))))) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)))) || false)), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)))) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)))) || false))) || false)), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)))) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)))) || false))) || false))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false), false))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || false)), bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))) || false)), true)))), (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || false)), bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || false)), true))))) || false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(false, bool(bool(false)))), false, true)), _GLF_IDENTITY(bool(bool(bool(bvec3(! (_GLF_IDENTITY(false, bool(bool(false)))), false, true)))), false || (bool(bool(bool(bvec3(! (_GLF_IDENTITY(false, bool(bool(false)))), false, true))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(110.058, 5.8)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[1]))) + vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y), false, true), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, true)), true && (bool(bvec4(true, false, false, true)))))), _GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(! (! (_GLF_IDENTITY((true), bool(bvec4((true), false, true, true))))), bool(bvec2(! (! (_GLF_IDENTITY((true), bool(bvec4((true), false, true, true))))), true)))) && true)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))) : _GLF_FUZZED(vec2(-457.558, -436.936)))).y))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-944.076))) > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0))), 0.0, 1.0, 1.0))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(fma(9.6, -0.9, -29.21)))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(mat3(8.5, -2.8, _GLF_IDENTITY(-57.86, float(vec2(-57.86, 1.0))), 5043.6192, 9.7, -0.2, 457.691, -821.427, -2.2)) : mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0))))), _GLF_IDENTITY(_GLF_IDENTITY((vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)), (_GLF_IDENTITY(false, bool(bvec3(false, false, true))) ? _GLF_FUZZED(_GLF_IDENTITY(mat3(8.5, -2.8, -57.86, 5043.6192, 9.7, -0.2, 457.691, -821.427, -2.2), transpose(transpose(_GLF_IDENTITY(mat3(8.5, -2.8, -57.86, 5043.6192, _GLF_IDENTITY(9.7, mix(float(9.7), float(_GLF_FUZZED(-93.03)), bool(false))), -0.2, 457.691, -821.427, -2.2), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(8.5, -2.8, -57.86, 5043.6192, 9.7, -0.2, 457.691, -821.427, -2.2))))))) : mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)))))) * mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0)))), _GLF_IDENTITY((_GLF_IDENTITY((vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)), (false ? _GLF_FUZZED(mat3(8.5, -2.8, -57.86, 5043.6192, 9.7, -0.2, 457.691, -821.427, -2.2)) : mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(abs(1.0), min(abs(1.0), _GLF_IDENTITY(abs(1.0), max(abs(1.0), abs(1.0)))))))))) * mat2(1.0), _GLF_IDENTITY(mat2(1.0) * ((vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)), (false ? _GLF_FUZZED(mat3(8.5, -2.8, -57.86, 5043.6192, 9.7, -0.2, 457.691, -821.427, -2.2)) : mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(abs(1.0), min(abs(1.0), _GLF_IDENTITY(abs(1.0), max(abs(1.0), abs(1.0)))))))))) * mat2(1.0)), min(mat2(1.0) * ((vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)), (false ? _GLF_FUZZED(mat3(8.5, -2.8, -57.86, 5043.6192, 9.7, -0.2, 457.691, -821.427, -2.2)) : mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(abs(1.0), min(abs(1.0), _GLF_IDENTITY(abs(1.0), max(abs(1.0), abs(1.0)))))))))) * mat2(1.0)), mat2(1.0) * ((vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)), (false ? _GLF_FUZZED(mat3(8.5, -2.8, -57.86, 5043.6192, 9.7, -0.2, 457.691, -821.427, -2.2)) : mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(abs(1.0), min(abs(1.0), _GLF_IDENTITY(abs(1.0), max(abs(1.0), abs(1.0)))))))))) * mat2(1.0)))))), (true ? ((vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)), (false ? _GLF_FUZZED(mat3(8.5, -2.8, -57.86, 5043.6192, 9.7, -0.2, 457.691, -821.427, -2.2)) : mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)))))) * mat2(1.0)) : _GLF_FUZZED(vec2(-8.7, 2.9)))) - vec2(0.0, 0.0)), min(_GLF_IDENTITY((vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)), (false ? _GLF_FUZZED(mat3(8.5, -2.8, -57.86, 5043.6192, 9.7, -0.2, 457.691, -821.427, -2.2)) : mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)))))) * mat2(1.0), ((vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - abs(0.0)), 1.0, abs(1.0)), (false ? _GLF_FUZZED(mat3(8.5, -2.8, -57.86, 5043.6192, 9.7, -0.2, 457.691, -821.427, -2.2)) : mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)))))) * mat2(1.0)) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 0.0, 1.0, 1.0, abs(1.0)), (false ? _GLF_FUZZED(mat3(8.5, -2.8, -57.86, 5043.6192, 9.7, -0.2, 457.691, -821.427, -2.2)) : mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)))))) * mat2(1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 0.0, 1.0, 1.0, abs(1.0)), (false ? _GLF_FUZZED(mat3(8.5, -2.8, -57.86, 5043.6192, 9.7, -0.2, 457.691, -821.427, -2.2)) : mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)))))) * mat2(1.0))), (_GLF_IDENTITY((vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)), (false ? _GLF_FUZZED(mat3(8.5, _GLF_IDENTITY(_GLF_IDENTITY(-2.8, _GLF_IDENTITY(float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), (float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))) - 0.0), float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -2.8 : _GLF_FUZZED(5127.4020))), -57.86, 5043.6192, 9.7, -0.2, 457.691, -821.427, -2.2)) : mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)), mat3(mat4(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0))))), (false ? _GLF_FUZZED(mat3(8.5, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-2.8, _GLF_IDENTITY(float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), (float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))) - 0.0), float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -2.8 : _GLF_FUZZED(5127.4020))), (false ? _GLF_FUZZED(1.4) : _GLF_IDENTITY(_GLF_IDENTITY(-2.8, _GLF_IDENTITY(float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(float(mat4x2(-2.8, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 0.0)), (float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))) - 0.0), float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) ? -2.8 : _GLF_FUZZED(5127.4020))))), -57.86, 5043.6192, 9.7, -0.2, 457.691, -821.427, -2.2)) : mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0))))), (vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)), mat3(mat4(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0))))), (false ? _GLF_FUZZED(mat3(8.5, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-2.8, _GLF_IDENTITY(float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), (float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))) - 0.0), float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -2.8 : _GLF_FUZZED(5127.4020))), (false ? _GLF_FUZZED(1.4) : _GLF_IDENTITY(_GLF_IDENTITY(-2.8, _GLF_IDENTITY(float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(float(mat4x2(-2.8, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 0.0)), (float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))) - 0.0), float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) ? -2.8 : _GLF_FUZZED(5127.4020))))), -57.86, 5043.6192, 9.7, -0.2, 457.691, -821.427, -2.2)) : mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)))))) * mat2(1.0))), clamp(_GLF_IDENTITY((vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)), (false ? _GLF_FUZZED(mat3(8.5, _GLF_IDENTITY(_GLF_IDENTITY(-2.8, _GLF_IDENTITY(float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0)), (float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))) - 0.0), float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -2.8 : _GLF_FUZZED(5127.4020))), -57.86, 5043.6192, 9.7, -0.2, 457.691, -821.427, -2.2)) : mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)))))), vec2(vec3((vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)), (false ? _GLF_FUZZED(mat3(8.5, _GLF_IDENTITY(_GLF_IDENTITY(-2.8, _GLF_IDENTITY(float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), (float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))) - 0.0), _GLF_IDENTITY(float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.5)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0)), (_GLF_IDENTITY(float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.5)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0)), 1.0 * (float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.5)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0))))) / abs(sqrt(1.0))), float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -2.8 : _GLF_IDENTITY(_GLF_FUZZED(5127.4020), float(mat3x2(_GLF_IDENTITY(_GLF_FUZZED(5127.4020), float(mat4(_GLF_FUZZED(5127.4020), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0))), exp(0.0), 0.0, 1.0, 0.0, 1.0))))), -57.86, 5043.6192, 9.7, -0.2, 457.691, -821.427, -2.2)) : mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)))))), 0.0))), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)), (false ? _GLF_FUZZED(mat3(8.5, _GLF_IDENTITY(_GLF_IDENTITY(-2.8, _GLF_IDENTITY(float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), (float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))) - 0.0), float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -2.8 : _GLF_FUZZED(5127.4020))), -57.86, 5043.6192, 9.7, -0.2, 457.691, -821.427, -2.2)) : mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)))))), (false ? _GLF_FUZZED(vec2(-3411.5996, -875.421)) : (vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)), (false ? _GLF_FUZZED(mat3(8.5, _GLF_IDENTITY(_GLF_IDENTITY(-2.8, _GLF_IDENTITY(float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), (float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))) - 0.0), float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -2.8 : _GLF_FUZZED(5127.4020))), -57.86, 5043.6192, 9.7, -0.2, 457.691, -821.427, -2.2)) : mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)))))))), (vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)), (false ? _GLF_FUZZED(mat3(8.5, _GLF_IDENTITY(_GLF_IDENTITY(-2.8, _GLF_IDENTITY(float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), (float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))) - 0.0), float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -2.8 : _GLF_FUZZED(5127.4020))), -57.86, 5043.6192, 9.7, -0.2, 457.691, -821.427, -2.2)) : mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)))))))), (vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)), (false ? _GLF_FUZZED(mat3(8.5, _GLF_IDENTITY(_GLF_IDENTITY(-2.8, _GLF_IDENTITY(float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), (float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))) - 0.0), float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), float(mat4x2(-2.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -2.8 : _GLF_FUZZED(5127.4020), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -2.8 : _GLF_FUZZED(5127.4020)) / 1.0))), -57.86, 5043.6192, 9.7, -0.2, 457.691, -821.427, -2.2)) : mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)))))))) * mat2(1.0)) - vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-17.33), _GLF_FUZZED((4435.4126 / -938.824))), vec2((_GLF_IDENTITY(_GLF_IDENTITY((vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 0.0, 1.0, 1.0, abs(1.0)), (false ? _GLF_FUZZED(mat3(8.5, -2.8, -57.86, 5043.6192, 9.7, -0.2, 457.691, -821.427, -2.2)) : mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)))))) * mat2(1.0), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 0.0, 1.0, 1.0, abs(1.0)), (false ? _GLF_FUZZED(mat3(8.5, -2.8, -57.86, 5043.6192, 9.7, -0.2, 457.691, -821.427, -2.2)) : mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, max(1.0, 1.0)))))))) * mat2(1.0)), mix(vec2(_GLF_FUZZED(-2084.1004), _GLF_FUZZED(-4.4)), vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 0.0, 1.0, 1.0, abs(1.0)), (false ? _GLF_FUZZED(mat3(8.5, -2.8, -57.86, 5043.6192, 9.7, -0.2, 457.691, -821.427, -2.2)) : mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0))))), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 0.0, 1.0, 1.0, abs(1.0)), (false ? _GLF_FUZZED(mat3(8.5, -2.8, -57.86, 5043.6192, 9.7, -0.2, 457.691, -821.427, -2.2)) : mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0))))), (vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 0.0, 1.0, 1.0, abs(1.0)), (false ? _GLF_FUZZED(mat3(8.5, -2.8, -57.86, 5043.6192, 9.7, -0.2, 457.691, -821.427, -2.2)) : mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)))))) - vec2(0.0, 0.0)), vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 0.0, 1.0, 1.0, abs(1.0)), (false ? _GLF_FUZZED(mat3(8.5, -2.8, -57.86, 5043.6192, 9.7, -0.2, 457.691, -821.427, -2.2)) : mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 0.0, 1.0, 1.0, abs(1.0)), (false ? _GLF_FUZZED(mat3(8.5, -2.8, -57.86, 5043.6192, 9.7, -0.2, 457.691, -821.427, -2.2)) : mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0))))), (vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 0.0, 1.0, 1.0, abs(1.0)), (false ? _GLF_FUZZED(mat3(8.5, -2.8, -57.86, 5043.6192, 9.7, -0.2, 457.691, -821.427, -2.2)) : mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)))))) / vec2(1.0, 1.0))))) * mat2(1.0)))[0], (mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.8)), bool(false)))) - 0.0))))) * ((vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) * 1.0), 1.0, 0.0, 1.0, 1.0, abs(1.0)), (false ? _GLF_FUZZED(mat3(8.5, -2.8, -57.86, 5043.6192, 9.7, _GLF_IDENTITY(-0.2, max(_GLF_IDENTITY(-0.2, (-0.2) / 1.0), -0.2)), 457.691, -821.427, -2.2)) : mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)))))) * mat2(1.0)))[1]), bvec2(true, true)))), ((vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)), (false ? _GLF_FUZZED(mat3(8.5, _GLF_IDENTITY(-2.8, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -2.8 : _GLF_FUZZED(5127.4020))), -57.86, 5043.6192, 9.7, -0.2, 457.691, -821.427, -2.2)) : mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)))))) * mat2(1.0)) - vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(_GLF_IDENTITY((vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) * 1.0, float(mat2x4((1.0) * 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0))))), 1.0, 0.0, 1.0, 1.0, abs(1.0)), (false ? _GLF_FUZZED(mat3(8.5, -2.8, -57.86, 5043.6192, 9.7, -0.2, 457.691, -821.427, -2.2)) : mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)))))) * mat2(1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 0.0, 1.0, 1.0, abs(1.0)), (false ? _GLF_FUZZED(mat3(8.5, -2.8, -57.86, 5043.6192, 9.7, -0.2, 457.691, -821.427, -2.2)) : mat3(injectionSwitch, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, abs(1.0)))))) * mat2(1.0))), ((vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat3(8.5, _GLF_IDENTITY(-2.8, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -2.8 : _GLF_FUZZED(5127.4020))), -57.86, 5043.6192, 9.7, -0.2, 457.691, -821.427, -2.2)), transpose(transpose(_GLF_FUZZED(mat3(8.5, _GLF_IDENTITY(-2.8, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -2.8 : _GLF_FUZZED(5127.4020))), -57.86, 5043.6192, 9.7, -0.2, 457.691, -821.427, -2.2))))) : mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)))))) * mat2(1.0)) - vec2(0.0, 0.0)))[1]), bvec2(true, true))))))), _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0))), 1.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, cos(0.0))), 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), clamp(vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sqrt(1.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.2) : 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0))) + 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0))), 1.0, _GLF_IDENTITY(determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8279.2630) : 1.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2675.4539))), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), 0.0), (mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0)) * mat3(1.0))), min(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0), (mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0)) * mat3(1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0), (mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0)) * mat3(1.0))), (float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0), (mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0)) * mat3(1.0)))) - 0.0)))), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, cos(0.0))), min(determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8279.2630) : 1.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2675.4539))), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), 0.0), (mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0)) * mat3(1.0))), mix(float(_GLF_FUZZED(2.0)), float(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), 0.0), (mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0)) * mat3(1.0)))), bool(true))), min(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0), (mat3x2(1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_FUZZED(1.3))), 0.0)) * mat3(1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0), (mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0)) * mat3(1.0))), (float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0), (mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0)) * mat3(1.0)))) - _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-3.1)), bool(false))))))), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, cos(0.0))), _GLF_IDENTITY(determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8279.2630) : 1.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2675.4539))), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(7.5))))), 0.0), (mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0)) * mat3(1.0))), min(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0), (mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))) * mat3(1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0), (mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0)) * mat3(1.0))), (float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0), (mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0)) * mat3(1.0)))) - 0.0)))), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, cos(0.0))), clamp(_GLF_IDENTITY(determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(-8279.2630) : 1.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2675.4539))), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), 0.0), (mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0)) * mat3(1.0))), min(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0), (mat3x2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9185.9289)), bool(false))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4.6) : 1.0)))), 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0)) * mat3(1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0), (mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0)) * mat3(1.0))), (float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0), (mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0)) * mat3(1.0)))) - 0.0)))), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, cos(0.0))), (determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8279.2630) : 1.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2675.4539))), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), 0.0), (mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0)) * mat3(1.0))), min(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0), (mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0)) * mat3(1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0), (mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0)) * mat3(1.0))), (float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0), (mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0)) * mat3(1.0)))) - 0.0)))), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, cos(0.0)))) - 0.0), determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8279.2630) : 1.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2675.4539))), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), 0.0), (mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0)) * mat3(1.0))), min(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(-96270))), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 1.0, 0.0), (mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0)) * mat3(1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0), (mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0)) * mat3(1.0))), (float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0), (mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0)) * mat3(1.0)))) - 0.0)))), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, cos(0.0))), determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8279.2630) : 1.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true) ? 0.0 : _GLF_FUZZED(-2675.4539))), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), 0.0), (mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0)) * mat3(1.0))), min(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0), (mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0)) * mat3(1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0), (mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0)) * mat3(1.0))), (float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0), (mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0)) * mat3(1.0)))) - 0.0)))), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, cos(0.0))))))), 1.0, 0.0, 0.0, round(length(normalize(vec4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(float((vec3(-46.54, 4.6, 2200.5585) != vec3(2226.2119, 263.842, -9.4)))))), 1.0, 1.0, 1.0)))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), _GLF_ZERO(0.0, injectionSwitch.x))), mix(float(_GLF_FUZZED(-8.7)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), bool(true))), 1.0)), vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0))), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4446.8623)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))), 0.0, 0.0, 0.0, sqrt(1.0))), 1.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, (0.0) + 0.0)), 0.0)), 0.0, cos(0.0))), 1.0, 0.0, 0.0, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(vec4(-4.7, 3.8, 829.681, -6636.2350)) : normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sqrt(1.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-93.54)), bool(false))), determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, cos(0.0))), 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(17.08))), 1.0)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, true, true))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, true, true))))), true, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, true, true))), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, true, true))), true, false, false))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true))))), (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && true), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(! (false), true), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))), bvec3(bvec4(bvec3(bvec2(! (false), true), true), true)))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0))).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).y, float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).y)), 0.0, 0.0)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) + sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (subgroup_id))))) * subgroup_size, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, _GLF_IDENTITY(1u, min(1u, 1u)) * (0u)))) + (subgroup_id * subgroup_size))) ^ 0u), (workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size))) ^ 0u)) + 0u) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))), false)), false)))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - tan(0.0)), (false ? _GLF_FUZZED(400.429) : _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(0.7, 8.8)) : injectionSwitch)).x) + _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0))), (false ? _GLF_FUZZED(-69.93) : float(mat2x3(0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0)))))), mix(float(_GLF_FUZZED(67.87)), float((injectionSwitch.x) + 0.0), bool(true)))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, false)), true, true, false))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), true, false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, (true) || false))))))) && true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), 4, _GLF_IDENTITY(64, (64) / 1), 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), bool(bool(_GLF_IDENTITY((false), ((false)) && true)))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(28.16, -13.82)))), injectionSwitch)).x > injectionSwitch.y)) || (false)))) && true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, true)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, log(1.0), 0.0))), max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, log(1.0), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, log(1.0), 0.0))), (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, log(1.0), 0.0)))) - vec2(0.0, 0.0)))).x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) * mat2(1.0), (true ? ((injectionSwitch) * mat2(1.0)) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) * mat2(1.0), (true ? ((injectionSwitch) * mat2(1.0)) * mat2(1.0) : _GLF_FUZZED(injectionSwitch))))), (mat2(1.0) * (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) * mat2(1.0), (true ? ((injectionSwitch) * mat2(1.0)) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))))) / vec2(1.0, 1.0))), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) * _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat2(mat2(1.0))), transpose(transpose(mat2(mat2(mat2(1.0))))))), (true ? ((injectionSwitch) * mat2(1.0)) * mat2(1.0) : _GLF_FUZZED(injectionSwitch))))) * mat2(1.0), ((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) * mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6697.3436)), float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), bool(true)))), (true ? ((injectionSwitch) * mat2(1.0)) * mat2(1.0) : _GLF_FUZZED(injectionSwitch))))) * mat2(1.0)) / vec2(1.0, 1.0)))).y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) * mat2(1.0), (_GLF_IDENTITY(true ? ((injectionSwitch) * mat2(1.0)) * mat2(1.0) : _GLF_FUZZED(injectionSwitch), (true ? ((injectionSwitch) * mat2(1.0)) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)) - vec2(0.0, 0.0)))))).y, injectionSwitch.y))) - 0.0), mix(float(_GLF_FUZZED(7.2)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) * mat2(1.0), (true ? ((injectionSwitch) * mat2(1.0)) * mat2(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, sqrt(0.0), exp(0.0), 0.0, 1.0)))) : _GLF_FUZZED(injectionSwitch)))), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) * mat2(1.0), (true ? ((injectionSwitch) * mat2(1.0)) * mat2(1.0) : _GLF_FUZZED(injectionSwitch))))) * mat2(1.0), ((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) * mat2(1.0), (true ? ((injectionSwitch) * mat2(1.0)) * mat2(1.0) : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3883.4475)), vec2(_GLF_FUZZED(8347.4985), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))))))) * mat2(1.0)) / vec2(1.0, 1.0)))).y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) * mat2(1.0), (true ? ((injectionSwitch) * mat2(1.0)) * mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2((_GLF_FUZZED(injectionSwitch))[0], _GLF_FUZZED(20.68)), vec2(_GLF_FUZZED(float(true)), (_GLF_FUZZED(injectionSwitch))[1]), bvec2(false, true))))))).y, injectionSwitch.y))) - 0.0)), bool(true)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, log(1.0), 0.0))).x, 1.0 * _GLF_IDENTITY((injectionSwitch.x), max(_GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_FUZZED(7095.0744)), float((injectionSwitch.x)), bool(true))), (injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (1.0) * 1.0)), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(1.0, (1.0) * 1.0)))), (true ? ((injectionSwitch) * mat2(1.0)) * mat2(1.0) : _GLF_FUZZED(injectionSwitch))))).y, injectionSwitch.y)))))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8676.5398), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7684.6793)), bvec2(true, false))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), _GLF_IDENTITY(true, (true) && true))))))))) && true)))), (false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))) && true))))) && _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (true)), bool(bvec2(_GLF_IDENTITY((! (true)), ! (! ((! (true))))), true))), true, true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) || false)))), bool(bvec2(_GLF_IDENTITY((! (true)), ! (! ((! (true))))), true))), ! (! (_GLF_IDENTITY((! (true)), bool(bvec2(_GLF_IDENTITY((! (true)), ! (! ((! (true))))), true)))))), true, true, true))) && true))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))), false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(false, true && (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.2)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true)))) / 1.0), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), false || (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), max(_GLF_IDENTITY(4, 0 ^ (4)), _GLF_IDENTITY(4, 0 ^ (4)))), _GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (64) ^ 0), 4);
}
