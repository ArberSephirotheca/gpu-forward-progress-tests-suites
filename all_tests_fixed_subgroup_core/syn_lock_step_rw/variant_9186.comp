#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) && true), ! (! (_GLF_IDENTITY(bool(true), (bool(true)) && true)))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), (_GLF_DEAD(false)) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((false)))))))))))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6076.4545)), float(injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_IDENTITY(true, ! (! (true))), false)), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))), true)))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true, false)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), true)))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), true)))))), false, true, true)))) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)) && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), true && (false))) || false, _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), true && (false))) || false)), true && (bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), true && (false))) || false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true)))))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, true && (true)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false)))))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-430.244), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(-430.244, clamp(-430.244, -430.244, -430.244)))), min(_GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(-430.244, clamp(-430.244, -430.244, -430.244)))), float(vec2((_GLF_FUZZED(_GLF_IDENTITY(-430.244, clamp(-430.244, -430.244, -430.244)))), 0.0))), (_GLF_FUZZED(_GLF_IDENTITY(-430.244, clamp(-430.244, -430.244, -430.244)))))), 0.0 + (_GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(-430.244, clamp(-430.244, -430.244, -430.244)))), min((_GLF_FUZZED(_GLF_IDENTITY(-430.244, clamp(-430.244, -430.244, -430.244)))), _GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(-430.244, clamp(-430.244, -430.244, -430.244)))), ((_GLF_FUZZED(_GLF_IDENTITY(-430.244, clamp(-430.244, -430.244, -430.244))))) - 0.0))))) / cos(0.0))), float(injectionSwitch.x), bool(true)))) - 0.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true)), false)))))))))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true, _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true, false, false)), ! (! (_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true, false, false)), _GLF_IDENTITY(! (! (bool(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(vec2(797.101, -5731.2422)) : injectionSwitch))) - vec2(0.0, 0.0)).y))))) && true, false, false)))), true && (! (! (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false || (! ((injectionSwitch.x > injectionSwitch.y))))))) && true, ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false || (! ((injectionSwitch.x > injectionSwitch.y))))))) && true) && true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))), false))))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))).y), ((injectionSwitch.x < injectionSwitch.y)) && true))), bvec3(bvec4(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))), false)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-82.00) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), ! (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.4, -49.28)) : injectionSwitch)), 0.0, 0.0, sin(0.0), 0.0)), min(vec2(mat2x3(injectionSwitch, 0.0, 0.0, sin(0.0), 0.0)), vec2(mat2x3(injectionSwitch, 0.0, 0.0, sin(0.0), 0.0))))).x > injectionSwitch.y))))) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bvec3(bvec3(bvec3(bvec4(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(989.565) : injectionSwitch.y))), float(_GLF_FUZZED(9058.2987)), bool(false))))), float(vec3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(989.565) : injectionSwitch.y))), float(_GLF_FUZZED(9058.2987)), bool(false))))), 1.0, 1.0))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(989.565) : injectionSwitch.y))), float(_GLF_FUZZED(9058.2987)), bool(false))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(989.565) : injectionSwitch.y))), float(_GLF_FUZZED(9058.2987)), bool(false)))))), false || (bool(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, determinant(mat2(1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(989.565) : injectionSwitch.y))), float(_GLF_FUZZED(9058.2987)), bool(false)))))))))))))), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)))))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).y)), false, false))))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))) && true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (injectionSwitch.x)) < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2.6), _GLF_FUZZED(5019.0581)), bvec2(_GLF_IDENTITY(false, ! (! (false))), false))).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)), false))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))))))))))))))) || false, ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true, bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)), _GLF_IDENTITY(bvec3(bvec4(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bvec3(bvec3(bvec3(bvec4(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))))))))))))) || false) || false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! (bool(bvec2(_GLF_DEAD(false), false)))))), true, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! (bool(bvec2(_GLF_DEAD(false), false)))))), true, false)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! (bool(bvec2(_GLF_DEAD(false), false)))))), true, false))))) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.5), _GLF_FUZZED(6.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2658.4637), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(31.57)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 1.0 * (injectionSwitch[1])))).y), max(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[0], injectionSwitch[1])).y), max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(-779.286, 926.552)))).y)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x < injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(! (! (bool(bool(injectionSwitch.x < injectionSwitch.y)))), (! (! (bool(bool(injectionSwitch.x < injectionSwitch.y))))) && true)), (bool(bool(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), min(injectionSwitch.y, injectionSwitch.y))))) || false)))))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, _GLF_IDENTITY(true, ! (! (true))))))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))) || false)))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true)))))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), true && (bool(bvec4(false, false, true, false))))), bool(bvec4(false, true, false, true)))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false)), false, true))))))
          return;
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, mix(float(_GLF_FUZZED(-432.449)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, (true) && true)))) > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(-47.11)))))))).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.7), _GLF_FUZZED(6.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), (_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))) / sqrt(1.0)), 0.0, sqrt(0.0), log(1.0), 1.0, 1.0, sqrt(0.0), length(cross(vec3(-63.86, -0.1, 0.7), vec3(-63.86, -0.1, 0.7))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, sin(0.0)), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, sin(0.0)), vec3(1.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 1.0))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false))))))))))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, false || (false)))))), ! (! ((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false))))))), true))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY(false, true && (false))) || false), bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))), _GLF_IDENTITY(true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true, false)), (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))), false, true, false)), bool(_GLF_IDENTITY(bool(bool(bvec4(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))), false, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(bvec4(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))), false, true, false)))))))) || false))), true && (true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))), false, true, false)), (bool(bvec4(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))), false, true, false))) || false)))))))))), (_GLF_IDENTITY(bool((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))))), bool(bvec4(bool((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))), false, true, _GLF_IDENTITY(false, (false) && true))))) || false))))))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), false))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((true ? -9.2 : -342.502)), _GLF_FUZZED(-5.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(unpackSnorm2x16(40369u)))).y)))))), bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(unpackSnorm2x16(40369u)))).y)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(unpackSnorm2x16(40369u)))).y)))))), ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(unpackSnorm2x16(40369u)))).y))))))) || false)), true && (! (_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(unpackSnorm2x16(40369u)))).y)))))), ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(unpackSnorm2x16(40369u)))).y))))))) || false))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(unpackSnorm2x16(40369u)))).y)))))), ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(unpackSnorm2x16(40369u)))).y))))))) || false)), true && (! (_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(unpackSnorm2x16(40369u)))).y)))))), ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(unpackSnorm2x16(40369u)))).y))))))) || false))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(unpackSnorm2x16(40369u)))).y)))))), ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(unpackSnorm2x16(40369u)))).y))))))) || false)), true && (! (_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(unpackSnorm2x16(40369u)))).y)))))), ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(unpackSnorm2x16(40369u)))).y))))))) || false))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(unpackSnorm2x16(40369u)))).y)))))), ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(unpackSnorm2x16(40369u)))).y))))))) || false)), true && (! (_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(unpackSnorm2x16(40369u)))).y)))))), ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(unpackSnorm2x16(40369u)))).y))))))) || false)))))))))))))), false, false, true)))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) || _GLF_IDENTITY(false, false || (false))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), vec2(mat3((injectionSwitch), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, log(1.0))))[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-2231.8398, min(-2231.8398, -2231.8398))), _GLF_FUZZED(785.041)), bvec2(false, false)))) / vec2(1.0, 1.0)), injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true, false))), true, false)))))))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 0.0, sqrt(cos(0.0)), sqrt(1.0), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9514.5477))), 1.0)))), _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0), vec4(0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0)), dot(vec4(1.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED((-9506.5981 / -1246.8938))), bool(false))), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), (true ? vec2(0.0, 1.0) : _GLF_FUZZED(vec2(-3.0, -742.062)))))), 1.0), vec4(0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), 0.0), (false ? _GLF_FUZZED(mat4x3(0.1, 9.7, _GLF_IDENTITY(-8.2, max(-8.2, _GLF_IDENTITY(-8.2, float(vec3(-8.2, 1.0, 0.0))))), 870.666, -0.4, 253.520, 6.2, 1280.9320, 3.3, 7.3, -0.8, -3.1)) : mat4x3(injectionSwitch.y, 1.0, 0.0, sqrt(cos(0.0)), sqrt(1.0), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0), vec4(0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0)), dot(vec4(1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.1) : 0.0)), 1.0)), _GLF_IDENTITY(float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) * 1.0))), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED(5.1), _GLF_FUZZED(-9836.3854)), vec2(_GLF_IDENTITY((vec2(0.0, 1.0))[0], max((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[0])), (vec2(0.0, 1.0))[1]), bvec2(true, true))), vec2(0.0, 1.0)), (_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED(5.1), _GLF_FUZZED(-9836.3854)), vec2(_GLF_IDENTITY((vec2(0.0, 1.0))[0], max((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[0])), (vec2(0.0, 1.0))[1]), bvec2(true, true))), vec2(0.0, 1.0)), min(dot(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED(5.1), _GLF_FUZZED(-9836.3854)), vec2(_GLF_IDENTITY((vec2(0.0, 1.0))[0], max((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[0])), (vec2(0.0, 1.0))[1]), bvec2(true, true))), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED(5.1), _GLF_FUZZED(-9836.3854)), vec2(_GLF_IDENTITY((vec2(0.0, 1.0))[0], max((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[0])), (vec2(0.0, 1.0))[1]), bvec2(true, true))), vec2(0.0, 1.0))))) - 0.0), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0)), (true ? float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0)) : _GLF_FUZZED(5.8))), _GLF_IDENTITY(float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0)), (float(mat4x2(dot(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED(-2426.1043), (vec2(0.0, 1.0))[1]), vec2((vec2(0.0, 1.0))[0], _GLF_FUZZED(-2.1)), bvec2(true, false))), vec2(0.0, 1.0)), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0))) / 1.0), float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0))), float(mat4x3(_GLF_IDENTITY(clamp(_GLF_IDENTITY(float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0)), (true ? float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.9) : 1.0)), tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0)) : _GLF_FUZZED(5.8))), _GLF_IDENTITY(float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0)), (float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0))) / 1.0), float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0))), clamp(clamp(_GLF_IDENTITY(float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0)), (true ? float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(0.9)))) + 0.0))), 1.0, tan(log(1.0)), 1.0, _GLF_IDENTITY(cos(0.0), mix(float(_GLF_FUZZED(77.77)), float(cos(0.0)), bool(true))), 0.0, 1.0, 0.0)) : _GLF_FUZZED(5.8))), _GLF_IDENTITY(float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0)), (float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0))) / 1.0), float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0))), clamp(_GLF_IDENTITY(float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0)), (true ? float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0)) : _GLF_FUZZED(5.8))), _GLF_IDENTITY(float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0)), (float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0))) / 1.0), float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0))), clamp(_GLF_IDENTITY(float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0)), (true ? float(mat4x2(dot(_GLF_IDENTITY(vec2(0.0, 1.0), mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), float(_GLF_FUZZED(9.1)), bool(false)))) - 0.0)) * (vec2(0.0, 1.0))), vec2(0.0, 1.0)), 1.0, tan(log(1.0)), 1.0, cos(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0, 1.0, 0.0)) : _GLF_FUZZED(5.8))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, _GLF_IDENTITY(tan(log(1.0)), (false ? _GLF_FUZZED(594.666) : tan(log(1.0)))), 1.0, cos(0.0), 0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(6700.5010)), float(float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0))), bool(true))), (float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, tan(log(_GLF_IDENTITY(1.0, _GLF_ONE(1.0, injectionSwitch.y) * (1.0)))), 1.0, cos(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0))))) / 1.0), float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0))))), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(abs(1.0), (abs(1.0)) - log(1.0)), 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat4(1.0) * (vec4(1.0, 0.0, 0.0, 0.0)), (mat4(1.0) * (vec4(1.0, 0.0, 0.0, 0.0))) * mat4(1.0)))), dot(vec4(abs(1.0), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, sqrt(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), clamp(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)) + (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), 1.0)))))), 1.0), vec4(0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0))), float(mat4(_GLF_IDENTITY(dot(vec4(1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0), vec4(0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0)), dot(vec4(1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.1) : 0.0)), 1.0)), _GLF_IDENTITY(float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) * 1.0))), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED(5.1), _GLF_FUZZED(-9836.3854)), vec2(_GLF_IDENTITY((vec2(0.0, 1.0))[0], max((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[0])), (vec2(0.0, 1.0))[1]), bvec2(true, true))), vec2(0.0, 1.0)), (_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED(5.1), _GLF_FUZZED(-9836.3854)), vec2(_GLF_IDENTITY((vec2(0.0, 1.0))[0], max((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[0])), (vec2(0.0, 1.0))[1]), bvec2(true, true))), vec2(0.0, 1.0)), min(dot(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED(5.1), _GLF_FUZZED(-9836.3854)), vec2(_GLF_IDENTITY((vec2(0.0, 1.0))[0], max((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[0])), (vec2(0.0, 1.0))[1]), bvec2(true, true))), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED(5.1), _GLF_FUZZED(-9836.3854)), vec2(_GLF_IDENTITY((vec2(0.0, 1.0))[0], max((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[0])), (vec2(0.0, 1.0))[1]), bvec2(true, true))), vec2(0.0, 1.0))))) - 0.0), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0)), (true ? float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0)) : _GLF_FUZZED(5.8))), _GLF_IDENTITY(float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0)), (float(mat4x2(dot(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED(-2426.1043), (vec2(0.0, 1.0))[1]), vec2((vec2(0.0, 1.0))[0], _GLF_FUZZED(-2.1)), bvec2(true, false))), vec2(0.0, 1.0)), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0))) / 1.0), float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0))), float(mat4x3(_GLF_IDENTITY(clamp(_GLF_IDENTITY(float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0)), (true ? float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.9) : 1.0)), tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0)) : _GLF_FUZZED(5.8))), _GLF_IDENTITY(float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0)), (float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0))) / 1.0), float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0))), clamp(clamp(_GLF_IDENTITY(float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0)), (true ? float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(0.9)))) + 0.0))), 1.0, tan(log(1.0)), 1.0, _GLF_IDENTITY(cos(0.0), mix(float(_GLF_FUZZED(77.77)), float(cos(0.0)), bool(true))), 0.0, 1.0, 0.0)) : _GLF_FUZZED(5.8))), _GLF_IDENTITY(float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0)), (float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0))) / 1.0), float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0))), clamp(_GLF_IDENTITY(float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0)), (true ? float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0)) : _GLF_FUZZED(5.8))), _GLF_IDENTITY(float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0)), (float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0))) / 1.0), float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0))), clamp(_GLF_IDENTITY(float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0)), (true ? float(mat4x2(dot(_GLF_IDENTITY(vec2(0.0, 1.0), mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), float(_GLF_FUZZED(9.1)), bool(false)))) - 0.0)) * (vec2(0.0, 1.0))), vec2(0.0, 1.0)), 1.0, tan(log(1.0)), 1.0, cos(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0, 1.0, 0.0)) : _GLF_FUZZED(5.8))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, _GLF_IDENTITY(tan(log(1.0)), (false ? _GLF_FUZZED(594.666) : tan(log(1.0)))), 1.0, cos(0.0), 0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(6700.5010)), float(float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0))), bool(true))), (float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, tan(log(_GLF_IDENTITY(1.0, _GLF_ONE(1.0, injectionSwitch.y) * (1.0)))), 1.0, cos(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0))))) / 1.0), float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, tan(log(1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0))))), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(abs(1.0), (abs(1.0)) - log(1.0)), 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat4(1.0) * (vec4(1.0, 0.0, 0.0, 0.0)), (mat4(1.0) * (vec4(1.0, 0.0, 0.0, 0.0))) * mat4(1.0)))), dot(vec4(abs(1.0), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, sqrt(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), clamp(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)) + (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), 1.0)))))), 1.0), vec4(0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0))), 1.0, log(1.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, tan(0.0), sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 0.0, 1.0))), 0.0, 0.0)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_size)))) << _GLF_IDENTITY(0u, (0u) >> 0u))) | _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) + 1) % subgroup_size), uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) + 1) % subgroup_size, clamp((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) + 1) % subgroup_size)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) + 1) % subgroup_size, clamp((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) + 1) % subgroup_size))) >> (0u << _GLF_IDENTITY(uint(8u), uint(8u))))), (0u ^ 0u))))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((- 300.200))), float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), bool(true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, round(length(normalize(1.0))), 1.0)))))))))))), false)), true)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), false))))) || false))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec3(bvec3(bvec3(false, true, true)))))))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec3(bvec3(bvec3(false, true, true)))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(true, ! (! (true)))))), true)), bvec3(bvec3(bvec3(bvec3(false, true, true)))))))))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec3(bvec3(bvec3(false, true, true)))))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec3(bvec3(bvec3(false, true, true)))))))))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec3(bvec3(bvec3(false, true, true)))))))))), true)), true)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))), injectionSwitch)).x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), abs(0.0), 1.0, 1.0, 1.0, tan(0.0), 1.0))).y))))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true)))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true, true, true)), bool(bvec2(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true, true, true)), false)))))))
    return;
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) * 1.0)))))
  return;
}
