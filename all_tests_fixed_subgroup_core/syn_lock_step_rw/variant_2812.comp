#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, tan(0.0), 1.0, 1.0, 1.0))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (true) && true))), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (false) || false), true)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true))))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(661.098)), float(injectionSwitch.x), bool(true)), _GLF_IDENTITY(float(mat4x3(mix(float(_GLF_FUZZED(661.098)), float(injectionSwitch.x), bool(true)), 0.0, sin(0.0), 0.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), min(float(mat4x3(mix(float(_GLF_FUZZED(661.098)), float(injectionSwitch.x), bool(true)), 0.0, sin(0.0), 0.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), float(mat4x3(mix(float(_GLF_FUZZED(661.098)), float(injectionSwitch.x), bool(true)), 0.0, sin(0.0), 0.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) + sin(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))))).y, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((+ -1.4))), float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), bool(true))), 1.0, _GLF_IDENTITY(abs(0.0), (abs(0.0)) / 1.0)), vec3(0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), (false ? _GLF_FUZZED(length(vec3(-78.50, 74.39, 6.9))) : _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0), vec2(1.0, 0.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, abs(0.0)), vec3(0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), (dot(vec3(0.0, 1.0, abs(0.0)), vec3(0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))))) / 1.0), clamp(_GLF_IDENTITY(dot(vec3(0.0, 1.0, abs(0.0)), vec3(0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), float(mat4x2(float(float(0.0)), 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 0.0))))), (vec2(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), float(mat4x2(float(float(0.0)), 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 0.0)))))) + sin(vec2(0.0, 0.0)))), dot(vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), vec2(1.0, 0.0))))), (dot(vec3(0.0, 1.0, abs(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), vec3(0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, abs(0.0)), vec3(0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), min(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0))))))), (dot(vec3(0.0, 1.0, abs(0.0)), vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))))) / 1.0), (_GLF_IDENTITY(dot(vec3(0.0, 1.0, abs(0.0)), vec3(0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), (dot(vec3(0.0, 1.0, abs(0.0)), vec3(0.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(mat2x3(vec2(0.0, 1.0), 1.0, 0.0, 0.0, 0.0), mat2x3(mat2x4(_GLF_IDENTITY(mat2x3(vec2(0.0, 1.0), 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat2x3(vec2(0.0, 1.0), 1.0, 0.0, 0.0, 0.0))))))))), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2((vec2(1.0, 0.0))[0], _GLF_FUZZED((+ 74.51))), vec2(_GLF_FUZZED(1.1), (vec2(1.0, 0.0))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) / 1.0)) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, abs(0.0)), vec3(0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))) - 0.0))), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), (dot(vec3(0.0, 1.0, abs(0.0)), vec3(0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))), vec2(1.0, 0.0)))))) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, abs(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1241.2962)), bool(false))))), vec3(0.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), clamp(vec2(0.0, 1.0), vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), vec2(0.0, 1.0))))), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), (dot(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, abs(0.0)), vec3(0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(1.0, 0.0), _GLF_IDENTITY((vec2(1.0, 0.0)) * mat2(1.0), ((vec2(1.0, 0.0)) * mat2(1.0)) * vec2(1.0, 1.0)))), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))))) / _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))), float(vec4(_GLF_IDENTITY(dot(vec3(0.0, 1.0, abs(0.0)), vec3(0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), (dot(vec3(0.0, 1.0, abs(0.0)), vec3(0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.2)), float(1.0), bool(true)))) + sin(0.0))), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))))))) / 1.0), 0.0, 1.0, 1.0)))) / 1.0)))) * (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(7779.5708)))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))) || false), false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)) && true))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u), _GLF_IDENTITY(0u, max(0u, 0u)) + (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), true, false))), true))))), (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), false, true)))))))) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || false), (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || false), (_GLF_IDENTITY(false, false || (false))) || false))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, (false) || false))), bool(bvec2(bool((_GLF_IDENTITY(false, (false) || false))), true))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), (_GLF_IDENTITY(0u, (0u) << 0u)) | (_GLF_IDENTITY(0u, (0u) << 0u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), min(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, (0u) << 0u))), (_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), ~ (~ (uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), 0u | (uint(0u))))), (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u)))) << 0u)))), _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), min(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, (0u) << 0u))), (_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), ~ (~ (uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), 0u | (uint(0u))))), (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u)))) << 0u)))), 0u)), min(uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), min(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, (0u) << 0u))), (_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), ~ (~ (uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), 0u | (uint(0u))))), (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u)))) << 0u)))), 0u)), uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), min(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, (0u) << 0u))), (_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), ~ (~ (uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), 0u | (uint(0u))))), (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u)))) << 0u)))), 0u)))))))), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), (_GLF_IDENTITY(0u, (0u) << 0u)) | (_GLF_IDENTITY(0u, (0u) << 0u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), min(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, (0u) << 0u))), (_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), ~ (~ (_GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), ~ (~ (uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), 0u | (uint(0u))))), (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), 0u | (uint(0u))))), (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u)))) << 0u)) | 0u)))), _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), min(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, (0u) << 0u))), (_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), ~ (~ (uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(0u | (uint(0u)), (0u | (uint(0u))) ^ (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u))))))), (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u)))) << 0u)))), 0u)), min(uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), min(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), (_GLF_IDENTITY(0u, (0u) << 0u)) >> 0u))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, uint(uint(0u)))))) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, (0u) | (0u)), 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), ~ _GLF_IDENTITY((~ (uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))), (_GLF_IDENTITY((~ (uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))), 1u * ((~ (uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))))))) * ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), 0u | (uint(0u))))), (_GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, _GLF_IDENTITY(0u, (0u) | 0u)), 0u ^ (max(0u, _GLF_IDENTITY(0u, (0u) | 0u)))))) << 0u)))), 0u), (uvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), min(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), (_GLF_IDENTITY(0u, (0u) << 0u)) >> 0u))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, uint(uint(0u)))))) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, (0u) | (0u)), 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), ~ _GLF_IDENTITY((~ (uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))), (_GLF_IDENTITY((~ (uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))), 1u * ((~ (uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))))))) * ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), 0u | (uint(0u))))), (_GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, _GLF_IDENTITY(0u, (0u) | 0u)), 0u ^ (max(0u, _GLF_IDENTITY(0u, (0u) | 0u)))))) << 0u)))), 0u)) ^ uvec2(0u, 0u))), uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), min(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, (0u) << 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), uint(uvec2(_GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), uint(uvec2(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), (0u & 174220u)))), (0u | 0u)))), ~ (~ (uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(uvec4(uint(3u), 0u, 0u, 1u))), _GLF_IDENTITY(uint(3u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(3u) : _GLF_FUZZED(subgroup_id))))))))))))), ((_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), uint(uvec2(_GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), uint(uvec2(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), (0u & 174220u)))), (0u | 0u)))), ~ (~ (uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(uvec4(uint(3u), 0u, 0u, 1u))), _GLF_IDENTITY(uint(3u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(3u) : _GLF_FUZZED(subgroup_id)))))))))))))) | 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), 0u | (uint(0u)))), 0u | (uint(_GLF_IDENTITY(uint(0u), 0u | (uint(0u))))))), (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u)))) << 0u)))), 0u), min(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), min(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, (0u) << 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), uint(uvec2(_GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), uint(uvec2(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), (0u & 174220u)))), (0u | 0u)))), ~ (~ (uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(uvec4(uint(3u), 0u, 0u, 1u))), _GLF_IDENTITY(uint(3u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(3u) : _GLF_FUZZED(subgroup_id))))))))))))), ((_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), uint(uvec2(_GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), uint(uvec2(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), (0u & 174220u)))), (0u | 0u)))), ~ (~ (uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(uvec4(uint(3u), 0u, 0u, 1u))), _GLF_IDENTITY(uint(3u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(3u) : _GLF_FUZZED(subgroup_id)))))))))))))) | 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), 0u | (uint(0u)))), 0u | (uint(_GLF_IDENTITY(uint(0u), 0u | (uint(0u))))))), (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u)))) << 0u)))), 0u), _GLF_IDENTITY(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), min(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, (0u) << 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), uint(uvec2(_GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), uint(uvec2(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), (0u & 174220u)))), (0u | 0u)))), ~ (~ (uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(uvec4(uint(3u), 0u, 0u, 1u))), _GLF_IDENTITY(uint(3u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(3u) : _GLF_FUZZED(subgroup_id))))))))))))), ((_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), uint(uvec2(_GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), uint(uvec2(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), (0u & 174220u)))), (0u | 0u)))), ~ (~ (uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(uvec4(uint(3u), 0u, 0u, 1u))), _GLF_IDENTITY(uint(3u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(3u) : _GLF_FUZZED(subgroup_id)))))))))))))) | 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), 0u | (uint(0u)))), 0u | (uint(_GLF_IDENTITY(uint(0u), 0u | (uint(0u))))))), (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u)))) << 0u)))), 0u), ~ (~ (uvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), min(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, (0u) << 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), uint(uvec2(_GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), uint(uvec2(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), (0u & 174220u)))), (0u | 0u)))), ~ (~ (uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(uvec4(uint(3u), 0u, 0u, 1u))), _GLF_IDENTITY(uint(3u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(3u) : _GLF_FUZZED(subgroup_id))))))))))))), ((_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), uint(uvec2(_GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), uint(uvec2(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), (0u & 174220u)))), (0u | 0u)))), ~ (~ (uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(uvec4(uint(3u), 0u, 0u, 1u))), _GLF_IDENTITY(uint(3u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(3u) : _GLF_FUZZED(subgroup_id)))))))))))))) | 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), 0u | (uint(0u)))), 0u | (uint(_GLF_IDENTITY(uint(0u), 0u | (uint(0u))))))), (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u)))) << 0u)))), 0u)))))))))))))) + 0u) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_size, (workgroup_size) | _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), (_GLF_IDENTITY(0u, (0u) << 0u)) | (_GLF_IDENTITY(0u, (0u) << 0u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), min(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, ((0u) << 0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(0u, (0u) << 0u))), (_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(uvec3(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), 0u, 0u))), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), ~ (~ (uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))) | (uint(0u))))), _GLF_IDENTITY((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u)))) << 0u, 0u + ((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u)))) << 0u)))))), _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), min(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, (0u) << 0u))), (_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), ~ (~ (uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), 0u | (uint(0u))))), (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u)))) << 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), 0u | (_GLF_IDENTITY(0u, (0u) << 0u))), min(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, (0u) << 0u))), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), ~ (~ (uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))), 0u | ((0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), ~ (~ (uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), 0u | (uint(0u))))), (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u)))) << 0u)))) - 0u)), 0u)), min(uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), min(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, (0u) << 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), (0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(min(uint(3u), uint(3u)), min(_GLF_IDENTITY(min(uint(3u), uint(3u)), (min(uint(3u), uint(3u))) << (0u | 0u)), min(uint(3u), uint(3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), ~ (~ (uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), 0u | (uint(0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), max(0u, _GLF_IDENTITY(0u, (0u) | 0u)))) << 0u)))), 0u)), uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), min(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, (0u) << 0u))), (_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), ~ (~ (uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(min(uint(3u), uint(3u)), (min(uint(3u), uint(3u))) | (min(uint(3u), uint(3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), 0u | (_GLF_IDENTITY(uint(0u), (uint(0u)) + 0u))))), (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u)))) << 0u)))), 0u)))))))) : _GLF_FUZZED(num_workgroup), 0u | (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_size, (workgroup_size) | _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), (_GLF_IDENTITY(0u, (0u) << 0u)) | (_GLF_IDENTITY(0u, (0u) << 0u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), min(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, ((0u) << 0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(0u, (0u) << 0u))), (_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(uvec3(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), 0u, 0u))), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), ~ (~ (uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))) | (uint(0u))))), _GLF_IDENTITY((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u)))) << 0u, 0u + ((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u)))) << 0u)))))), _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), min(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, (0u) << 0u))), (_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), ~ (~ (uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), 0u | (uint(0u))))), (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u)))) << 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), 0u | (_GLF_IDENTITY(0u, (0u) << 0u))), min(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, (0u) << 0u))), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), ~ (~ (uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))), 0u | ((0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), ~ (~ (uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), 0u | (uint(0u))))), (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u)))) << 0u)))) - 0u)), 0u)), min(uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), min(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, (0u) << 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), (0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(min(uint(3u), uint(3u)), min(_GLF_IDENTITY(min(uint(3u), uint(3u)), (min(uint(3u), uint(3u))) << (0u | 0u)), min(uint(3u), uint(3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), ~ (~ (uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), 0u | (uint(0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), max(0u, _GLF_IDENTITY(0u, (0u) | 0u)))) << 0u)))), 0u)), uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), min(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, (0u) << 0u))), (_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), ~ (~ (uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(min(uint(3u), uint(3u)), (min(uint(3u), uint(3u))) | (min(uint(3u), uint(3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), 0u | (_GLF_IDENTITY(uint(0u), (uint(0u)) + 0u))))), (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u)))) << 0u)))), 0u)))))))) : _GLF_FUZZED(num_workgroup)))))) | (_GLF_IDENTITY(workgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), (_GLF_IDENTITY(0u, (0u) << 0u)) | (_GLF_IDENTITY(0u, (0u) << 0u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), min(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, (0u) << 0u))), (_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), ~ (~ (uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), 0u | (uint(0u))))), (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u)))) << 0u)))), _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), min(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, (0u) << 0u))), (_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), ~ (~ (uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), 0u | (uint(0u))))), (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u)))) << 0u)))), 0u)), min(uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), min(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, (0u) << 0u))), (_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), ~ (~ (uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), 0u | (uint(0u))))), (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u)))) << 0u)))), 0u)), uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), min(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, (0u) << 0u))), (_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), ~ (~ (uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), 0u | (uint(0u))))), (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u)))) << 0u)))), 0u)))))))), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), (_GLF_IDENTITY(0u, (0u) << 0u)) | (_GLF_IDENTITY(0u, (0u) << 0u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), min(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, (0u) << 0u))), (_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), ~ (~ (uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), 0u | (uint(0u))))), (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u)))) << 0u)))), _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), min(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, (0u) << 0u))), (_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), ~ (~ (uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), 0u | (uint(0u))))), (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u)))) << 0u)))), 0u)), min(uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), min(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, (0u) << 0u))), (_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), ~ (~ (uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), 0u | (uint(0u))))), (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u)))) << 0u)))), 0u)), uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), min(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, (0u) << 0u))), (_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), ~ (~ (uint(uvec4(0u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), 0u | (uint(0u))))), (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u)))) << 0u)))), 0u))))))))) >> (0u << _GLF_IDENTITY(uint(2u), uint(2u)))) : _GLF_FUZZED(num_workgroup))))) * _GLF_IDENTITY(workgroup_id, (workgroup_id) | _GLF_IDENTITY((0u | 0u), ~ (~ (_GLF_IDENTITY((0u | 0u), min((0u | 0u), (0u | 0u)))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-784.569)) : injectionSwitch.y))))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))))), (subgroup_size) | _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 1u * (0u))), (uint(_GLF_IDENTITY(0u, 1u * (0u)))) - 0u)), min(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 1u * (0u))), (uint(_GLF_IDENTITY(0u, 1u * (0u)))) - 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 1u * (0u))), (uint(_GLF_IDENTITY(0u, 1u * (0u)))) - 0u)), 0u | (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 1u * (0u))), (uint(_GLF_IDENTITY(0u, 1u * (0u)))) - 0u))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), min(_GLF_FUZZED(workgroup_id), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) * 1u), 0u | (_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) * 1u))))) : 0u)))))) + _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (subgroup_local_id) ^ 0u) : _GLF_FUZZED((num_workgroup * subgroup_size)))), subgroup_local_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), false, false)))) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false)))) ? _GLF_FUZZED(-1.3) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.8)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.8)), float(injectionSwitch.x), bool(true))), injectionSwitch.x))) - 0.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (false ? _GLF_FUZZED(dot(-4.1, -6559.5124)) : injectionSwitch.y))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)) || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size, subgroup_size), max(clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size, subgroup_size), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size, subgroup_size), ~ (~ (clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size, subgroup_size))))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) * 1u, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size))) * 1u, ((subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) * _GLF_IDENTITY(1u, (1u) >> 0u)) << 0u), 0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(_GLF_IDENTITY((subgroup_id * subgroup_size) * 1u, ((subgroup_id * subgroup_size) * 1u) << _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (0u) / 1u)))))), 0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(1u, 1u, 1u, 1u)))))))))) + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u)) % _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), uint(uvec2(~ (subgroup_size), 0u))))), (false ? _GLF_FUZZED(workgroup_size) : (subgroup_local_id + 1) % subgroup_size))), 0u ^ (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u, 0u), (false ? _GLF_FUZZED(uvec3(144090u, 171783u, 43150u)) : uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), uint(uint(~ (~ (subgroup_size)))))), 0u, 0u))))))))) * 1u))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), uint(uvec2(~ (subgroup_size), 0u))))), (false ? _GLF_FUZZED(workgroup_size) : (subgroup_local_id + 1) % subgroup_size))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u, 0u), (false ? _GLF_FUZZED(uvec3(144090u, 171783u, 43150u)) : uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), uint(uint(~ (~ (subgroup_size)))))), 0u, 0u))))))))) * 1u), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) ^ (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), ~ (~ (subgroup_size))), 0u, 0u), (false ? _GLF_FUZZED(uvec3(144090u, 171783u, 43150u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), uint(uint(~ (~ (subgroup_size)))))), 0u, 0u), max(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), uint(uint(~ (~ (subgroup_size)))))), 0u, 0u), uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), uint(uint(~ (~ (subgroup_size)))))), 0u, 0u))))))))))) * 1u)))))) - (0u ^ 0u)), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(subgroup_id, (0u << _GLF_IDENTITY(uint(0u), uint(0u))))), (uint(uvec2(subgroup_id, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) / 1u)))) * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (subgroup_size))), (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (subgroup_size))), ((subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (subgroup_size)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + 0u))), subgroup_id * subgroup_size)))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(uint(uvec2(subgroup_id, (0u << _GLF_IDENTITY(uint(0u), uint(0u))))), _GLF_IDENTITY((uint(uvec2(subgroup_id, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) / 1u, max(_GLF_IDENTITY((uint(uvec2(subgroup_id, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) / 1u, ((uint(uvec2(subgroup_id, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) / 1u) + 0u), _GLF_IDENTITY((uint(uvec2(subgroup_id, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) / 1u, (false ? _GLF_FUZZED(num_workgroup) : (uint(uvec2(subgroup_id, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) / 1u)))))))) * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), max((_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) | (subgroup_size))), (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (subgroup_size))), ((subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (subgroup_size)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + 0u))), subgroup_id * subgroup_size)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), (true ? (subgroup_id * subgroup_size) : _GLF_FUZZED(subgroup_size))), min(_GLF_IDENTITY((subgroup_id * subgroup_size), (true ? (subgroup_id * subgroup_size) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY((subgroup_id * subgroup_size), (true ? (subgroup_id * subgroup_size) : _GLF_FUZZED(subgroup_size))))) * _GLF_IDENTITY(1u, (1u) / 1u)))))), clamp(clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (subgroup_size))) | (subgroup_id * subgroup_size))) * 1u))))), _GLF_IDENTITY(clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) * 1u))))), clamp(clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) * 1u))))), _GLF_IDENTITY(clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) * 1u))))), 0u | (clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) * 1u))))))), clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) * 1u))))))), clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u)) / 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size, (subgroup_id * subgroup_size) + 0u)) / 1u) * _GLF_IDENTITY((1u ^ 0u), ((1u ^ 0u)) | ((1u ^ 0u))))), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u)), min((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u))))), 0u + (~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u)))))))))) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)), min(_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3((subgroup_local_id + 1), 0u, (0u ^ 1u)), ~ (~ (uvec3((subgroup_local_id + 1), 0u, (0u ^ 1u))))))), (subgroup_local_id + 1))), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u))) % subgroup_size), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(0u, uint(uint(0u))))) << _GLF_IDENTITY(uint(5u), uint(5u)))), (subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))))) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) * 1u, _GLF_IDENTITY(((((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size)) * 1u) << 0u, (((((subgroup_local_id + 1) % subgroup_size)) * 1u) << 0u) ^ 0u)))))) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)), _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) ^ 0u)), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, max((0u) ^ 0u, (0u) ^ 0u)))), ((_GLF_IDENTITY(0u, (0u) ^ 0u))) - uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))))) * 1u)) / _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u | (_GLF_IDENTITY((virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ ((virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))], _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, 0 + (4))) - 0, clamp((_GLF_IDENTITY(4, 0 + (4))) - 0, (_GLF_IDENTITY(4, 0 + (4))) - 0, (_GLF_IDENTITY(4, 0 + (4))) - 0))))), 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), false, false), true)))), bool(bool(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y))))))) && true))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bool(bool(bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool(bool(false))), bool(bvec4(bool(bool(bool(false))), true, false, false))))))))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u)))], uint(1), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, 1 * (4)), 4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, 1 * (4)), 4, 4)), int(ivec4(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, 1 * (4)), 4, 4)), 0, 1, 1)))) | 0), _GLF_IDENTITY(64, _GLF_IDENTITY(0 ^ (64), int(_GLF_IDENTITY(ivec2(0 ^ (64), 1), min(ivec2(0 ^ (64), 1), _GLF_IDENTITY(ivec2(0 ^ (64), 1), ivec2(0, 0) | (ivec2(0 ^ (64), _GLF_IDENTITY(1, 0 | (1)))))))))), 4);
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))), false || (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_DEAD(false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec4(bool(bool(_GLF_DEAD(false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(true && (bool(bvec4(bool(bool(_GLF_DEAD(false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (true && (bool(bvec4(bool(bool(_GLF_DEAD(false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_DEAD(false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec4(bool(bool(_GLF_DEAD(false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(true && (bool(bvec4(bool(bool(_GLF_DEAD(false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (true && (bool(bvec4(bool(bool(_GLF_DEAD(false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true)))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_DEAD(false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec4(bool(bool(_GLF_DEAD(false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(true && (bool(bvec4(bool(bool(_GLF_DEAD(false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (true && (bool(bvec4(bool(bool(_GLF_DEAD(false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true)))))), true, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(21.79), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.2)), bvec2(true, false))), injectionSwitch)).x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, true))))), true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))), false, false))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), false)))))), (_GLF_DEAD(false)) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), false)))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), false)))))))), (_GLF_DEAD(false)) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), false)))))), (_GLF_DEAD(false)) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), false)))))), (_GLF_DEAD(false)) || false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))))))))))))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(bvec2(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), false))), true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))))), ! (! (bool(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(false))))))) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))) && true))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), true && (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, false, true))))) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) || false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) || false)) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))))))))) && true)))) || false))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, max(0, 0))], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-94.89), _GLF_FUZZED(-418.493)), bvec2(false, false))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true)))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, 0 + (4)), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) - _GLF_IDENTITY(0.0, min(0.0, 0.0))) < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(! (false), false || (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec3((_GLF_IDENTITY(! (false), false || (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false))))), false, true))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8034.3514)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-11.30) : injectionSwitch.y))))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true)), true, _GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, true && (true)), true, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, true && (true)), true, false), _GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (! (false || (true))))))), true)))))), (injectionSwitch.x < injectionSwitch.y)), false)), true && (bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED((-13.39 / -9852.7295)) : injectionSwitch.y)), true, false)))))))), false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
}
