#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.3)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.3)), bool(false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.3)), bool(false)))) * 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.3)), bool(false))))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-105.119)), bool(false))), injectionSwitch.x)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(mat3x4(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))).x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.1)), bool(false)))) / 1.0)) / 1.0) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec3(bool(bvec3(false, true, false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))), true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(_GLF_DEAD(false), true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((vec2(-4.5, -24.29).y + -3974.7453))), float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x))), bool(true))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), true, false, false))), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), true))), false, true)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-1420.5091), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(4.9, 72.17, 4.5, 9511.9730).z)), bvec2(_GLF_IDENTITY(true, true && (true)), false)), max(mix(vec2(_GLF_FUZZED(-1420.5091), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(4.9, 72.17, 4.5, 9511.9730).z)), bvec2(_GLF_IDENTITY(true, true && (true)), false)), mix(vec2(_GLF_FUZZED(-1420.5091), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(4.9, 72.17, 4.5, 9511.9730).z)), bvec2(_GLF_IDENTITY(true, true && (true)), false))))).y))) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y) - tan(0.0))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.7)), vec2(_GLF_FUZZED(vec4(-67.28, 277.203, 3.8, 5.6).g), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))) > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false)) && true))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))) || _GLF_IDENTITY((false), bool(bvec4((false), false, true, false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, false || (false)), true))))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), clamp(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups))))), (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))[1], ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) - (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) - (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u))))) << uvec3(0u, 0u, 0u)))[1]))), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2]))), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups[1], _GLF_IDENTITY(uint(uvec4(gl_NumWorkGroups[1], 0u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u)), ~ (~ (uint(uvec4(gl_NumWorkGroups[1], 0u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u)))))), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2]))), (uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(2, (1 ^ 1) + (2))], 0u | (gl_NumWorkGroups[2])), _GLF_IDENTITY(max(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(2, (1 ^ 1) + (2))], 0u | (gl_NumWorkGroups[2])), _GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(2, (1 ^ 1) + (2))], 0u | (gl_NumWorkGroups[2]))), min(max(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(2, (1 ^ 1) + (2))], 0u | (gl_NumWorkGroups[2])), _GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(2, (1 ^ 1) + (2))], 0u | (gl_NumWorkGroups[2]))), _GLF_IDENTITY(max(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(2, (1 ^ 1) + (2))], 0u | (gl_NumWorkGroups[2])), _GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(2, (1 ^ 1) + (2))], 0u | (gl_NumWorkGroups[2]))), min(max(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(2, (1 ^ 1) + (2))], 0u | (gl_NumWorkGroups[2])), _GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(2, (1 ^ 1) + (2))], 0u | (gl_NumWorkGroups[2]))), max(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(2, (1 ^ 1) + (2))], 0u | (gl_NumWorkGroups[2])), _GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(2, (1 ^ 1) + (2))], 0u | (gl_NumWorkGroups[2])))))))))) ^ uvec3(0u, 0u, 0u))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u))) / uvec3(1u, 1u, 1u))[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2]))), (uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], (_GLF_IDENTITY(gl_NumWorkGroups[2], (gl_NumWorkGroups[2]) ^ 0u)) / (0u ^ 1u)), 0u | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))[2])))) ^ uvec3(0u, 0u, 0u)))), uvec3(uvec4(_GLF_IDENTITY(~ ((_GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2]))), _GLF_IDENTITY((uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))[2])))) ^ uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u), uvec3(uvec3((uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))[2])))) ^ uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u))))))), (~ ((_GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))))[2]))), (uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))[_GLF_IDENTITY(2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2 : _GLF_FUZZED(82364)))])))) ^ uvec3(0u, 0u, 0u))))) | (~ ((_GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | _GLF_IDENTITY((gl_NumWorkGroups[2]), (_GLF_IDENTITY((gl_NumWorkGroups[2]), (true ? (gl_NumWorkGroups[2]) : _GLF_FUZZED(subgroup_local_id)))) << (0u | 0u)))), (uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))[2])))) ^ uvec3(0u, 0u, 0u)))))), 0u)))), uvec3(uvec4((_GLF_IDENTITY(~ ((_GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u))) / uvec3(1u, 1u, 1u))[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2]))), (uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], (_GLF_IDENTITY(gl_NumWorkGroups[2], (gl_NumWorkGroups[2]) ^ 0u)) / (0u ^ 1u)), 0u | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))[2])))) ^ uvec3(0u, 0u, 0u)))), uvec3(uvec4(_GLF_IDENTITY(~ ((_GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2]))), _GLF_IDENTITY((uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))[2])))) ^ uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u), uvec3(uvec3((uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))[2])))) ^ uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u))))))), (~ ((_GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))))[2]))), (uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))[_GLF_IDENTITY(2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2 : _GLF_FUZZED(82364)))])))) ^ uvec3(0u, 0u, 0u))))) | (~ ((_GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | _GLF_IDENTITY((gl_NumWorkGroups[2]), (_GLF_IDENTITY((gl_NumWorkGroups[2]), (true ? (gl_NumWorkGroups[2]) : _GLF_FUZZED(subgroup_local_id)))) << (0u | 0u)))), (uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))[2])))) ^ uvec3(0u, 0u, 0u)))))), 0u)))), 1u)))) ^ ((uvec3(16049u, 67895u, 19992u) | uvec3(75660u, 145978u, 35733u)) & uvec3(0u, 0u, 0u))))), (false ? _GLF_FUZZED(uvec3(118214u, _GLF_IDENTITY(93230u, 0u | (93230u)), _GLF_IDENTITY(38822u, (38822u) | (38822u)))) : uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / 1u, ~ (~ ((0u) / 1u)))), 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-3339))), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-93273) : _GLF_IDENTITY(1, int(int(1)))))))], ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))[1]))), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (_GLF_IDENTITY(gl_NumWorkGroups[2], _GLF_IDENTITY(uint(uvec4(gl_NumWorkGroups[2], 0u, (0u | (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), 1u)), clamp(_GLF_IDENTITY(uint(uvec4(gl_NumWorkGroups[2], 0u, (0u | (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), 1u)), (uint(uvec4(gl_NumWorkGroups[2], 0u, (0u | (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), 1u))) | (uint(uvec4(gl_NumWorkGroups[2], 0u, (0u | (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), 1u)))), uint(uvec4(gl_NumWorkGroups[2], 0u, (0u | (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), 1u)), _GLF_IDENTITY(uint(uvec4(gl_NumWorkGroups[2], 0u, (0u | (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), 1u)), (uint(uvec4(gl_NumWorkGroups[2], 0u, (0u | (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), 1u))) | (uint(uvec4(gl_NumWorkGroups[2], 0u, (0u | (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), 1u)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2]))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | _GLF_IDENTITY((gl_NumWorkGroups[2]), clamp(_GLF_IDENTITY((gl_NumWorkGroups[2]), 0u ^ ((gl_NumWorkGroups[2]))), _GLF_IDENTITY((gl_NumWorkGroups[2]), min((gl_NumWorkGroups[2]), (gl_NumWorkGroups[2]))), (gl_NumWorkGroups[2])))))) ^ uvec3(0u, 0u, 0u), ((uvec3(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | _GLF_IDENTITY((gl_NumWorkGroups[2]), clamp(_GLF_IDENTITY((gl_NumWorkGroups[2]), 0u ^ ((gl_NumWorkGroups[2]))), _GLF_IDENTITY((gl_NumWorkGroups[2]), min((gl_NumWorkGroups[2]), (gl_NumWorkGroups[2]))), (gl_NumWorkGroups[2])))))) ^ uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | _GLF_IDENTITY((gl_NumWorkGroups[2]), clamp(_GLF_IDENTITY((gl_NumWorkGroups[2]), 0u ^ ((gl_NumWorkGroups[2]))), _GLF_IDENTITY((gl_NumWorkGroups[2]), min((gl_NumWorkGroups[2]), (gl_NumWorkGroups[2]))), (gl_NumWorkGroups[2])))))) ^ uvec3(0u, 0u, 0u), ((uvec3(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | _GLF_IDENTITY((gl_NumWorkGroups[2]), clamp(_GLF_IDENTITY((gl_NumWorkGroups[2]), 0u ^ ((gl_NumWorkGroups[2]))), _GLF_IDENTITY((gl_NumWorkGroups[2]), min((gl_NumWorkGroups[2]), (gl_NumWorkGroups[2]))), (gl_NumWorkGroups[2])))))) ^ uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[_GLF_IDENTITY(2, (2) * 1)]))), (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) | (_GLF_IDENTITY(1u, 1u * (1u))))) * (gl_NumWorkGroups), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(56437u, 92823u, 64036u)) : uvec3(1u, 1u, 1u))) * (gl_NumWorkGroups))), uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))))[2], clamp(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))), _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), ~ (~ (uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)))))))[2], _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))), uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))))[2], _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))), uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))))[2])), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))), uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))))[2], clamp(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))), uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))))[2], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 0u))))) ^ (_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), max(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), max(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))))))), uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))))[2], (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 0u))))) ^ (_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), max(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), max(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))))))), uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))))[2]) / 1u), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u) ^ (uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))), uvec3(1u, 1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) >> 0u)))) * (gl_NumWorkGroups))))[2])), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))), uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))))[2], clamp(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 0u, 1u))), 1u, 1u) * (gl_NumWorkGroups), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))), uvec3(1u, 1u, 1u) * _GLF_IDENTITY((gl_NumWorkGroups), (uvec3(1u, 1u, 1u) & ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))) >> _GLF_IDENTITY(uvec3(4u), uvec3(4u)))) * ((gl_NumWorkGroups))))))[2], _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))), uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))))[2], _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))), uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))))[2])))))))) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2]))), (uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)), (_GLF_IDENTITY((uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)), max((uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)), _GLF_IDENTITY((uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)), ((uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))) | uvec3(0u, 0u, 0u))))) << uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)), (_GLF_IDENTITY((uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)), max((uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)), _GLF_IDENTITY((uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)), ((uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))) | uvec3(0u, 0u, 0u))))) << uvec3(0u, 0u, 0u)))) << (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u)))), uvec3(1u, 1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) / 1u), 1u))) * (gl_NumWorkGroups))))[2], clamp(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))), _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u))) * (gl_NumWorkGroups))))[2], _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u)), 1u, 1u) * _GLF_IDENTITY((gl_NumWorkGroups), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) ^ (uvec3((gl_NumWorkGroups))))), ~ (~ (uvec3(_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) ^ (uvec3((gl_NumWorkGroups))))))))), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), max(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), max(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))))))))), uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))))[2], _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)))), (false ? _GLF_FUZZED(mix(uvec3(130645u, 24945u, 39498u), uvec3(37266u, 40749u, 31448u), bvec3(false, false, true))) : ~ (_GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) / 1u)) * (gl_NumWorkGroups), uvec3(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, min(0u, 0u)))), 0u, 0u) ^ (uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)))), (false ? _GLF_FUZZED(mix(uvec3(130645u, 24945u, 39498u), uvec3(37266u, 40749u, 31448u), bvec3(false, false, true))) : ~ (_GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) / 1u)) * (gl_NumWorkGroups), uvec3(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, min(0u, 0u)))), 0u, 0u) ^ (uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))))))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)))), (false ? _GLF_FUZZED(mix(uvec3(130645u, 24945u, 39498u), uvec3(37266u, 40749u, 31448u), bvec3(false, false, true))) : ~ (_GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) / 1u)) * (gl_NumWorkGroups), uvec3(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, min(0u, 0u)))), 0u, 0u) ^ (uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)))))))) >> uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))), uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))))[2])))))) ^ uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[_GLF_IDENTITY(2, (2) | (2))]))), (uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) ^ (uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))), uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))))[2], clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))), (false ? _GLF_FUZZED(uvec3(71407u, 28217u, 124190u)) : _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))))), uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))))[2], max(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))), (false ? _GLF_FUZZED(uvec3(71407u, 28217u, 124190u)) : _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))))), uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))))[2], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))), (false ? _GLF_FUZZED(uvec3(71407u, 28217u, 124190u)) : _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))))), uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))))[2], (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))), (false ? _GLF_FUZZED(uvec3(71407u, 28217u, 124190u)) : _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))))), uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))))[2]) - 0u))), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))), _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), uvec3(uvec4(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), 0u))))))[2], _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) / 1u)) ^ (uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))), uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))))[2])))))) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | _GLF_IDENTITY((gl_NumWorkGroups[2]), 1u * (_GLF_IDENTITY((gl_NumWorkGroups[2]), clamp((gl_NumWorkGroups[2]), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))[2]), (gl_NumWorkGroups[2]))))))), (uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * _GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec4(_GLF_IDENTITY((gl_NumWorkGroups), clamp((gl_NumWorkGroups), (gl_NumWorkGroups), (gl_NumWorkGroups))), 0u))), uvec3(0u, 0u, 0u) ^ (uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))), uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))))[2], clamp(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * _GLF_IDENTITY((gl_NumWorkGroups), _GLF_IDENTITY(max(_GLF_IDENTITY((gl_NumWorkGroups), max((gl_NumWorkGroups), (gl_NumWorkGroups))), (gl_NumWorkGroups)), (false ? _GLF_FUZZED(uvec3(163054u, 54002u, 22491u)) : max(_GLF_IDENTITY((gl_NumWorkGroups), max((gl_NumWorkGroups), (gl_NumWorkGroups))), (gl_NumWorkGroups))))), uvec3(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))) ^ (uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))), uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))))[2], _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))) * 1u), 0u, 0u) ^ (_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), clamp(uvec3(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u, 1u) * (gl_NumWorkGroups), uvec3(1u, 1u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(1u, (1u) | (1u)))), 1u))) * (gl_NumWorkGroups), _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), (uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)) << uvec3(0u, 0u, 0u)))))), uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))))[2], _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))), uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))))[2])))))) ^ uvec3(0u, 0u, 0u)))))) ^ uvec3(0u, 0u, 0u))), min(~ _GLF_IDENTITY(((_GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2]))), (uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(67117) : 1))], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)), uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))[2])))) ^ uvec3(0u, 0u, 0u)))), min(((_GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2]))), (uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(67117) : 1))], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 1u, 0u), clamp(uvec3(0u, 1u, 0u), uvec3(0u, 1u, 0u), uvec3(0u, 1u, 0u))))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) + 0u))), 0u)), uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) * 1u), 1u) * (gl_NumWorkGroups))[2])))) ^ uvec3(0u, 0u, 0u)))), ((_GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2]))), (uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(67117) : 1))], _GLF_IDENTITY(gl_NumWorkGroups[2], _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)), uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))[2]), (_GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)), uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))[2]), min(0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)), uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))[2]), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)), uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))[2])))) << 0u)))) ^ uvec3(0u, 0u, 0u)))))), ~ (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2]))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? _GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(50779u, 125449u, 155275u)))), (_GLF_IDENTITY(gl_NumWorkGroups, (true ? _GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(50779u, 125449u, 155275u))))) | (_GLF_IDENTITY(gl_NumWorkGroups, (true ? _GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(gl_NumWorkGroups[0], (gl_NumWorkGroups[0]) << 0u), gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(50779u, 125449u, 155275u))))))[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) | (0u & 12797u)), (1u | 1u)), min(uvec2(_GLF_IDENTITY(1u, (1u) | (0u & 12797u)), (1u | 1u)), uvec2(_GLF_IDENTITY(1u, (1u) | (0u & 12797u)), (1u | 1u)))))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) * (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))))[2])))) ^ uvec3(_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 0u))), 0u, 0u))), uvec3(1u, 1u, 1u) * ((_GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2]))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? _GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(50779u, 125449u, 155275u)))), (_GLF_IDENTITY(gl_NumWorkGroups, (true ? _GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(50779u, 125449u, 155275u))))) | (_GLF_IDENTITY(gl_NumWorkGroups, (true ? _GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(gl_NumWorkGroups[0], (gl_NumWorkGroups[0]) << 0u), gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(50779u, 125449u, 155275u))))))[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) | (0u & 12797u)), (1u | 1u)), min(uvec2(_GLF_IDENTITY(1u, (1u) | (0u & 12797u)), (1u | 1u)), uvec2(_GLF_IDENTITY(1u, (1u) | (0u & 12797u)), (1u | 1u)))))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) * (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))))[2])))) ^ uvec3(_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 0u))), 0u, 0u)))))))))) ^ ((uvec3(16049u, 67895u, 19992u) | uvec3(75660u, 145978u, 35733u)) & uvec3(0u, 0u, 0u)))))))).x, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), max(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))) >> 0u), 1u, 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(0u, 1u, 0u), min(uvec3(0u, 1u, 0u), uvec3(0u, 1u, 0u)))), (uint(uvec3(0u, 1u, 0u))) >> 0u)) ^ 0u))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | _GLF_IDENTITY((gl_NumWorkGroups[2]), ((gl_NumWorkGroups[2])) | 0u)))))).x) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))[2]) + uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - sqrt(0.0)), 0.0, 0.0)))), float(_GLF_FUZZED(vec3(-651.090, 3.9, 5.2).t)), bool(false))))), 0u | (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))))).x, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))[2]) + uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - sqrt(0.0)), 0.0, 0.0)))), float(_GLF_FUZZED(vec3(-651.090, 3.9, 5.2).t)), bool(false))))), 0u | (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[2])))))).x) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) << 0u))) | (0u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[_GLF_IDENTITY(2, clamp(2, 2, 2))])))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2]))))) - uvec3(0u, 0u, 0u)))), max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) | (0u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], (gl_NumWorkGroups[_GLF_IDENTITY(2, 0 | (2))]) | (gl_NumWorkGroups[2])), 0u | (gl_NumWorkGroups[2])))), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2]))))), min((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2]))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2])))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2])))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2]))))) + uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(uvec4(64712u, 152501u, 90566u, 28250u)))))))) - uvec3(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, max(0u, 0u)), 0u)), 0u)))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) | (0u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) | 0u)))) + 0u) | (gl_NumWorkGroups[2])))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2]))))) - uvec3(0u, 0u, 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) << 0u))) | (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[_GLF_IDENTITY(2, clamp(2, 2, 2))])))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2])), clamp(_GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2])), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2])), _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2]))))))) - uvec3(0u, 0u, 0u)))), max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u), 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) | (0u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(2, (2) / 1)], (gl_NumWorkGroups[_GLF_IDENTITY(2, 0 | (2))]) | (gl_NumWorkGroups[2])), 0u | (gl_NumWorkGroups[2])))), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(mix(54779, -57238, any(bvec4(false, false, true, false))))))], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2]))))), min((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), ~ (~ (ivec2(1, 1))))))], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2]))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2])))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2])))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2]))))) + uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(uvec4(64712u, 152501u, 90566u, 28250u)))))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2])))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2])))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2]))))) + uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(uvec4(64712u, 152501u, 90566u, 28250u)))))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2])))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2])))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2]))))) + uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(uvec4(64712u, 152501u, 90566u, 28250u))))))))), (uvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2])))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2])))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2]))))) + uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(uvec4(64712u, 152501u, 90566u, 28250u)))))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2])))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2])))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2]))))) + uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(uvec4(64712u, 152501u, 90566u, 28250u)))))))))) - uvec3(0u, 0u, 0u)))))) - uvec3(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), max(0u, 0u)), 0u)), 0u)))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) | (0u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) | 0u)))) + 0u) | (gl_NumWorkGroups[2])))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2]))))) - uvec3(0u, 0u, 0u))))))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u)))).x) / 1u)), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups[1], max(gl_NumWorkGroups[1], gl_NumWorkGroups[1])), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], (gl_NumWorkGroups[2]) + uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(vec3(-651.090, 3.9, 5.2).t)), bool(false))))), 0u | (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[_GLF_IDENTITY(2, clamp(2, 2, 2))])))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) | (0u))) ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2])))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u)) | (gl_NumWorkGroups[2]))))) - uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))))[_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(2, 0, 1)), (int(ivec3(2, 0, 1))) + 0))])))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u)) | (gl_NumWorkGroups[2]))))) - uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u))), max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) | (0u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2])))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2]))))) - uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), ~ (~ ((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))) | (0u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, ~ (~ (0)))))], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2])))), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], _GLF_IDENTITY(0u, (0u) << (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))) | (gl_NumWorkGroups[2])), (_GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2]))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) - uvec3(0u, 0u, 0u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2]))))), min((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2]))))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2]))))))) - uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u))), 0u))) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), 0u), (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2]))))), min((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2]))))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2]))))))) - uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u))), 0u))) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), 0u)) / uvec3(1u, 1u, 1u))) | ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2]))))) - uvec3(0u, 0u, 0u)))))))).x) / 1u)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))) || false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false)))))) && true)) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, bool(_GLF_IDENTITY(bool((true) || false), (bool((true) || false)) || false))))))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))) || false)))), _GLF_IDENTITY(bool(bvec4((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec2(true, false))), true, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true, true)), (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true, true))), (! (bool(bvec4((false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, true)))) || false)))) && true), true, true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << (0u | 0u)) | _GLF_IDENTITY((workgroup_id), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)), (~ (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u))) * 1u))));
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ 0u))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true, false))))))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true, false))))))) || false, ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true, false))))))) || false)))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true, false))))))) || false, ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true, false))))))) || false)))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false)))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0)))) / 1.0))) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, _GLF_IDENTITY(bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))) && true))), true && (_GLF_IDENTITY(bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false || (bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))) ? _GLF_FUZZED((- 51027)) : _GLF_IDENTITY(1, 0 | (1)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(498.977)), bool(false))))))))) && true, bool(bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))) ? _GLF_FUZZED((- 51027)) : _GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.9), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-8.3)), float((injectionSwitch)[0]), bool(true))), _GLF_FUZZED(float(40619))), bvec2(_GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(4.3)), vec2(_GLF_FUZZED(395.047), (injectionSwitch)[1]), bvec2(false, true))).y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))) ? _GLF_FUZZED((- 51027)) : _GLF_IDENTITY(1, 0 | (1))) / 1), _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), false, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), false, false, false)), (bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), false, false, false))) || false)))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY(true, true && (true)), bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))) ? _GLF_FUZZED((- 51027)) : _GLF_IDENTITY(1, 0 | (1))))))) % subgroup_size, min((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))), (1) - 0)) | (1)), 1)), 1, 1)), 1)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) ? _GLF_FUZZED((- 51027)) : _GLF_IDENTITY(1, 0 | (1))))) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) ? _GLF_FUZZED((- 51027)) : _GLF_IDENTITY(1, 0 | (1)))), (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))) ? _GLF_IDENTITY(_GLF_FUZZED((- 51027)), clamp(_GLF_IDENTITY(_GLF_FUZZED((- 51027)), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-94124, (-94124) | (_GLF_IDENTITY(-94124, (_GLF_IDENTITY(-94124, (-94124) | 0)) ^ (0 << _GLF_IDENTITY(int(4), int(4))))))) : _GLF_FUZZED((- 51027)), min(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-94124, (-94124) | (_GLF_IDENTITY(-94124, (_GLF_IDENTITY(-94124, (-94124) | 0)) ^ (0 << _GLF_IDENTITY(int(4), int(4))))))) : _GLF_FUZZED((- 51027)), 0 ^ (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-94124, (-94124) | (_GLF_IDENTITY(-94124, (_GLF_IDENTITY(-94124, (-94124) | 0)) ^ (0 << _GLF_IDENTITY(int(4), int(4))))))) : _GLF_FUZZED((- 51027)), (false ? _GLF_FUZZED(54429) : false ? _GLF_FUZZED(_GLF_IDENTITY(-94124, (-94124) | (_GLF_IDENTITY(-94124, (_GLF_IDENTITY(-94124, (-94124) | 0)) ^ (0 << _GLF_IDENTITY(int(4), int(4))))))) : _GLF_FUZZED((- 51027)))))), false ? _GLF_FUZZED(_GLF_IDENTITY(-94124, (-94124) | (_GLF_IDENTITY(-94124, (_GLF_IDENTITY(-94124, (-94124) | 0)) ^ (0 << _GLF_IDENTITY(int(4), int(4))))))) : _GLF_FUZZED((- 51027)))))), _GLF_FUZZED((- 51027)), _GLF_FUZZED((- 51027)))) : _GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), ((1)) + 0))))) * _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))))))) % subgroup_size)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-74.93)))))))))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(_GLF_FUZZED(38.30)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), bool(true))), _GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (-52743 & 0) ^ (4)), 64, _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, ~ (~ (4))), 4)), clamp(4, 4, 4)))));
 atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, clamp(4, 4, 4)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), true, false))), false), true), bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(false), false), true)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
}
