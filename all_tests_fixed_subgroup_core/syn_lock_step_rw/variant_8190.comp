#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 uint subgroup_size;
 ivec2 _f0;
 bvec2 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_2 {
 ivec2 _f0;
 ivec2 _f1;
 _GLF_struct_1 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-59.37), _GLF_IDENTITY(_GLF_FUZZED(-22.58), min(_GLF_FUZZED(-22.58), _GLF_FUZZED(-22.58)))), vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[0], (injectionSwitch)[_GLF_IDENTITY(1, max(1, 1))]), bvec2(true, true))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))))))))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(ivec2(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), 1))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), max(ivec2(1), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((+ -92186)) : _GLF_IDENTITY(1, (1) - 0))), 1), (ivec3(_GLF_IDENTITY(1, max(1, 1)), 1, 1)) / ivec3(1, 1, 1))))), (ivec2(1)) + ivec2(0, 0)))), ivec2(ivec3(_GLF_IDENTITY(ivec2(1), max(ivec2(1), _GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (ivec2(1)) + ivec2(0, 0)), min(_GLF_IDENTITY(ivec2(1), (ivec2(1)) + ivec2(0, 0)), _GLF_IDENTITY(ivec2(1), (ivec2(1)) + ivec2(0, 0))))) + ivec2(0, 0)))), 0))), _GLF_struct_1(_GLF_struct_0(gl_SubgroupSize, ivec2(1), bvec2(true), mat4x2(1.0))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - ((59929u & 0u) | 0u), ~ (~ ((0u) - (_GLF_IDENTITY((59929u & 0u) | 0u, (_GLF_IDENTITY((59929u & 0u) | 0u, ((59929u & 0u) | 0u) + 0u)) | ((59929u & 0u) | 0u))))))), (0u) / 1u), 0u, 0u) | (gl_NumWorkGroups), max(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - ((_GLF_IDENTITY(59929u & 0u, (_GLF_IDENTITY(59929u & 0u, (59929u & 0u) + 0u)) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | _GLF_IDENTITY(0u, 0u | (0u)))), _GLF_IDENTITY((0u) / 1u, ~ (~ ((0u) / 1u)))), 0u, 0u) | (gl_NumWorkGroups), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, max(0u, 0u))) - ((59929u & 0u) | 0u), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(0u, max(0u, 0u))) - ((59929u & 0u) | 0u), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(0u, max(0u, 0u))) - ((59929u & 0u) | 0u))), 1u, 0u, 0u)))), (0u) / 1u), 0u, 0u) | (gl_NumWorkGroups))))) | uvec3(0u, 0u, 0u))), ~ (~ (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - ((59929u & 0u) | 0u), ~ (~ ((0u) - (_GLF_IDENTITY((59929u & 0u) | 0u, (_GLF_IDENTITY((59929u & 0u) | 0u, ((59929u & 0u) | 0u) + 0u)) | ((59929u & 0u) | 0u))))))), (0u) / 1u), 0u, 0u) | (gl_NumWorkGroups), max(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - ((_GLF_IDENTITY(59929u & 0u, (_GLF_IDENTITY(59929u & 0u, (59929u & 0u) + 0u)) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | _GLF_IDENTITY(0u, 0u | (0u)))), _GLF_IDENTITY((0u) / 1u, ~ (~ ((0u) / 1u)))), 0u, 0u) | (gl_NumWorkGroups), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, max(0u, 0u))) - ((59929u & 0u) | 0u), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(0u, max(0u, 0u))) - ((59929u & 0u) | 0u), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(0u, max(0u, 0u))) - ((59929u & 0u) | 0u))), 1u, 0u, 0u)))), (0u) / 1u), 0u, 0u) | (gl_NumWorkGroups))))) | uvec3(0u, 0u, 0u)))))), ~ _GLF_IDENTITY((~ (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) + uvec3(0u, _GLF_IDENTITY(0u, (0u) ^ (0u | 0u)), 0u)) | (gl_NumWorkGroups))) | uvec3(0u, 0u, 0u))))), ~ (~ ((~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (gl_NumWorkGroups), min(uvec3(0u, 0u, 0u) | (gl_NumWorkGroups), uvec3(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u) | (gl_NumWorkGroups))))) | uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (gl_NumWorkGroups), min(uvec3(0u, 0u, 0u) | (gl_NumWorkGroups), uvec3(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u) | (gl_NumWorkGroups))))) | uvec3(0u, 0u, 0u))), ~ (~ (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (gl_NumWorkGroups), min(uvec3(0u, 0u, 0u) | (gl_NumWorkGroups), uvec3(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u) | (gl_NumWorkGroups))))) | uvec3(0u, 0u, 0u))))))) | (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (gl_NumWorkGroups), min(uvec3(0u, 0u, 0u) | (gl_NumWorkGroups), uvec3(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u) | (gl_NumWorkGroups))))) | uvec3(0u, 0u, 0u))))))))))))), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(29126u, 25805u, 126726u) & (uvec3(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u) & uvec3(152461u, 165467u, 25809u))) ^ (gl_NumWorkGroups)), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), max((0u), (0u)))) | 0u) - ((59929u & 0u) | 0u)), (0u) / 1u), 0u, 0u) | (gl_NumWorkGroups)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(29126u, 25805u, 126726u) & (uvec3(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u) & uvec3(152461u, 165467u, 25809u))) ^ (gl_NumWorkGroups)), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), max((0u), (0u)))) | 0u) - ((59929u & 0u) | 0u)), (0u) / 1u), 0u, 0u) | (gl_NumWorkGroups))) | uvec3(0u, 0u, 0u))) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u)))), ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u)), (uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u))) | (uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u))))))))), min((~ (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), 0u, 0u) | (uvec3(0u, 0u, 0u))))))), (~ (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) | _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u)))))))))), ~ (~ ((~ (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)))))) | uvec3(0u, 0u, 0u)))))))))))), uvec3(uvec4((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(29126u, 25805u, 126726u) & (uvec3(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u) & uvec3(152461u, 165467u, 25809u))) ^ (gl_NumWorkGroups)), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), max((0u), (0u)))) | 0u) - ((59929u & 0u) | 0u)), (0u) / 1u), 0u, 0u) | (gl_NumWorkGroups)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(29126u, 25805u, 126726u) & (uvec3(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u) & uvec3(152461u, 165467u, 25809u))) ^ (gl_NumWorkGroups)), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), max((0u), (0u)))) | 0u) - ((59929u & 0u) | 0u)), (0u) / 1u), 0u, 0u) | (gl_NumWorkGroups))) | uvec3(0u, 0u, 0u))) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u)))), ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u)), (uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u))) | (uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u))))))))), min((~ (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), 0u, 0u) | (uvec3(0u, 0u, 0u))))))), (~ (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) | _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u)))))))))), ~ (~ ((~ (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)))))) | uvec3(0u, 0u, 0u)))))))))))), (1u ^ 1u))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), true, false)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), _GLF_IDENTITY(true, _GLF_IDENTITY(false, (false) || false) || (true)) && (bool((false)))))), false || (true && _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), _GLF_IDENTITY(true, false || (true)) && (bool((false))))))))), false || (! (true && (false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) && (false), (_GLF_IDENTITY(true, true && (true)) && (false)) || false)))))))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | 0), _GLF_IDENTITY(0, (0) - 0) + (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(vec2(-78.92, 6.0))))).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true))))))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(false, true)))), ! (! ((_GLF_IDENTITY(false, bool(bvec2(false, true))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false)))))), ! (! (true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))) || false)) && true)))), _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true))), true)), (bool(bvec4(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false)))))), ! (! (true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))) || false)) && true)))), _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true))), true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, false)))), bool(bvec4(true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))), false, true, true))), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(bvec4(true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))), false, _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false), false)))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), true, false, true))))), true && _GLF_IDENTITY((! (_GLF_IDENTITY(true, (true) && true))), ((! (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))))))) || false))))))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true), _GLF_IDENTITY(false, ! (! (false))), false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, true), false, false)), false), bvec3(bvec4(bvec3(bvec2(bvec4(bvec2(false, true), false, false)), false), true))))))))))), false || ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, true), false)), false)))))))))))), bool(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))))), false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), true, false, true))))), true && _GLF_IDENTITY((! (_GLF_IDENTITY(true, (true) && true))), ((! (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))))))) || false))))))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true), _GLF_IDENTITY(false, ! (! (false))), false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, true), false, false)), false), bvec3(bvec4(bvec3(bvec2(bvec4(bvec2(false, true), false, false)), false), true))))))))))), false || ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, true), false)), false)))))))))))), bool(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))))), false, false))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), true, false, true))))), true && _GLF_IDENTITY((! (_GLF_IDENTITY(true, (true) && true))), ((! _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))))), ! (! ((_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))))))))))))) || false))))))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true), _GLF_IDENTITY(false, ! (! (false))), false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, true), false, false)), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(bvec4(bvec2(false, true), false, false)), false), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(bvec4(bvec2(false, true), false, false)), false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(bvec4(bvec2(false, true), false, false)), false), true)), true))), false)))))))))))), false || ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, true), false)), false)))))))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))))) && true)), false, false)))) && true)) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))))))))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), false || _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2)))) - 0.0))) && true) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2), clamp(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2), mix(float(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2)), float(_GLF_FUZZED(6197.7087)), bool(false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2), mix(float(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2)), float(_GLF_FUZZED((-5.5))), bool(false)))))), 1.0 * (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2), clamp(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2), mix(float(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2)), float(_GLF_FUZZED(6197.7087)), bool(false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2), mix(float(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2)), float(_GLF_FUZZED((-5.5))), bool(false)))))), min((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2), clamp(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2), mix(float(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2)), float(_GLF_FUZZED(6197.7087)), bool(false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2), mix(float(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2)), float(_GLF_FUZZED((-5.5))), bool(false)))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2), clamp(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2), mix(float(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2)), float(_GLF_FUZZED(6197.7087)), bool(false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2), mix(float(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2)), float(_GLF_FUZZED((-5.5))), bool(false)))))))))))) - 0.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2), clamp(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2), mix(float(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2)), float(_GLF_FUZZED(6197.7087)), bool(false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2), mix(float(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2)), float(_GLF_FUZZED((-5.5))), bool(false)))))), 1.0 * (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2), clamp(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2), mix(float(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2)), float(_GLF_FUZZED(6197.7087)), bool(false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2), mix(float(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2)), float(_GLF_FUZZED((-5.5))), bool(false)))))), min((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2), clamp(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2), mix(float(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2)), float(_GLF_FUZZED(6197.7087)), bool(false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2), mix(float(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2)), float(_GLF_FUZZED((-5.5))), bool(false)))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2), clamp(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2), mix(float(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2)), float(_GLF_FUZZED(6197.7087)), bool(false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2), mix(float(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2)), float(_GLF_FUZZED((-5.5))), bool(false)))))))))))) - 0.0)))))) && true) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(34.05)))) - 0.0))) && true))))))) || (! (false)))), ! (! ((_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), (! (! (_GLF_IDENTITY(false, ! (! (false)))))) && true)))))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true), false || _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2)))) - 0.0))) && true) || false, (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.2)))) - 0.0))) && true) || false) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, sqrt(0.0), 0.0, 0.0), (vec4(injectionSwitch.y, sqrt(0.0), 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)))) : _GLF_FUZZED(_GLF_IDENTITY(34.05, (true ? _GLF_IDENTITY(34.05, mix(float(_GLF_FUZZED(-668.629)), float(34.05), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(-899.322))))))) - 0.0))) && true))))))) || (! (false)))), ! (! ((_GLF_IDENTITY(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-44.48, -51.91), _GLF_IDENTITY(vec2(mat4x3(vec2(-44.48, -51.91), 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)), (vec2(mat4x3(vec2(-44.48, -51.91), 0.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))) * mat2(1.0)))) : injectionSwitch)))).x > injectionSwitch.y)) || (! (false)))))))))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(52.64, -0.2)))).x < injectionSwitch.y)))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.0)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(float(_GLF_IDENTITY(179531u, (179531u) >> 0u))), min(_GLF_FUZZED(float(179531u)), _GLF_FUZZED(float(179531u)))), (_GLF_IDENTITY(_GLF_FUZZED(float(179531u)), (true ? _GLF_IDENTITY(_GLF_FUZZED(float(179531u)), (false ? _GLF_FUZZED(494.602) : _GLF_FUZZED(float(179531u)))) : _GLF_FUZZED(1.9)))) / _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-95.72)), max(float(_GLF_FUZZED(-95.72)), float(_GLF_FUZZED(-95.72)))), float(1.0), _GLF_IDENTITY(bool(true), true && (_GLF_IDENTITY(bool(true), false || (bool(true)))))))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true, true))), true, true))))).y)) || _GLF_IDENTITY((! (false)), ((! (false))) && true)))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))) && true))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))), (bool(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))) || false))), bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))), bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || _GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))) || false)))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1)))))])).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), clamp((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), max((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0)).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0)).x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) && true), true))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) | _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY(((gl_WorkGroupSize)) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) + uvec3(0u, 0u, 0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), uvec3(6u)), max(_GLF_IDENTITY(uvec3(6u), uvec3(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), uvec3(6u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), uvec3(6u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), uvec3(6u)), ~ (~ (_GLF_IDENTITY(uvec3(6u), uvec3(6u))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), uvec3(6u)), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(uvec3(6u), uvec3(6u)))))), _GLF_IDENTITY(uvec3(6u), uvec3(6u))))))), uvec3(1u, 1u, 1u) * (((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), _GLF_FUZZED(-5.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y), _GLF_ONE(1.0, injectionSwitch.y))))) / ((uvec3(1u, _GLF_IDENTITY(1u, uint(uvec4(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, 0u, 0u))), 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) + uvec3(0u, 0u, 0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), (_GLF_IDENTITY(uvec3(6u), (uvec3(6u)) << uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u)), uvec3(6u)), max(_GLF_IDENTITY(uvec3(6u), uvec3(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), uvec3(6u)), min(_GLF_IDENTITY(uvec3(6u), uvec3(6u)), _GLF_IDENTITY(uvec3(6u), uvec3(6u)))))))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u) + ((gl_WorkGroupSize)), max(_GLF_IDENTITY(uvec3(0u, 0u, 0u) + ((gl_WorkGroupSize)), (uvec3(0u, 0u, 0u) + ((gl_WorkGroupSize))) ^ uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) + ((gl_WorkGroupSize))))), uvec3(uvec3(_GLF_IDENTITY((gl_WorkGroupSize) | (gl_WorkGroupSize), min((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))) | _GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY((gl_WorkGroupSize), max((gl_WorkGroupSize), (gl_WorkGroupSize))))), (false ? _GLF_FUZZED(uvec3(131194u, 70547u, 62330u)) : uvec3(uvec3(_GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY(max((gl_WorkGroupSize), (gl_WorkGroupSize)), (_GLF_IDENTITY(max((gl_WorkGroupSize), (gl_WorkGroupSize)), (max((gl_WorkGroupSize), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(uvec3(uvec3(gl_WorkGroupSize))))))))) | (_GLF_IDENTITY(max((gl_WorkGroupSize), (gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (max((gl_WorkGroupSize), (gl_WorkGroupSize))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec3(0u, 0u, 0u) | (max((gl_WorkGroupSize), (gl_WorkGroupSize))) : _GLF_FUZZED((uvec3(82817u, 14264u, 13386u))))))))) | (max((gl_WorkGroupSize), (gl_WorkGroupSize)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], (_GLF_IDENTITY(gl_WorkGroupSize[2], max(_GLF_IDENTITY(gl_WorkGroupSize[2], ~ (~ (gl_WorkGroupSize[2]))), gl_WorkGroupSize[2]))) - 0u), ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (~ (gl_WorkGroupSize[2])) ^ 0u)))))) | (gl_WorkGroupSize), uvec3(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) - 0u), ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (~ (gl_WorkGroupSize[2])) + 0u)) ^ 0u)))))) | (gl_WorkGroupSize), min((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) - 0u), ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (~ (gl_WorkGroupSize[_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, max(2, 2)))), _GLF_IDENTITY(2, int(ivec3(2, 0, 1))), 2))])) ^ 0u)))))) | (gl_WorkGroupSize), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (true ? _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)) : _GLF_FUZZED(((uvec3(88695u, 34252u, 127239u) & subgroup_id) + uvec3(66902u, 32558u, 70328u)))))[2], (gl_WorkGroupSize[2]) - 0u), ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (~ (gl_WorkGroupSize[2])) ^ 0u)))))), min((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (true ? _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)) : _GLF_FUZZED(((uvec3(88695u, 34252u, 127239u) & subgroup_id) + uvec3(66902u, 32558u, 70328u)))))[2], (gl_WorkGroupSize[2]) - 0u), ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (~ (gl_WorkGroupSize[2])) ^ 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (true ? _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)) : _GLF_FUZZED(((uvec3(88695u, 34252u, 127239u) & subgroup_id) + uvec3(66902u, 32558u, 70328u)))))[2], (gl_WorkGroupSize[2]) - 0u), ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (~ (gl_WorkGroupSize[2])) ^ 0u)))))), ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (true ? _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)) : _GLF_FUZZED(((uvec3(88695u, 34252u, 127239u) & subgroup_id) + uvec3(66902u, 32558u, 70328u)))))[2], (gl_WorkGroupSize[2]) - 0u), ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (~ (gl_WorkGroupSize[2])) ^ 0u))))))) | ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (true ? _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)) : _GLF_FUZZED(((uvec3(88695u, 34252u, 127239u) & subgroup_id) + uvec3(66902u, 32558u, 70328u)))))[2], (gl_WorkGroupSize[2]) - 0u), ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (~ (gl_WorkGroupSize[2])) ^ 0u)))))))))) | (gl_WorkGroupSize))), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))).x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) | _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY(((gl_WorkGroupSize)) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) + uvec3(0u, 0u, 0u)))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u))), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY((gl_WorkGroupSize), clamp((gl_WorkGroupSize), (gl_WorkGroupSize), (gl_WorkGroupSize)))) / ((uvec3(1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u, 1u))), 1u)), 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) + uvec3(0u, 0u, 0u)))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))))), uvec3(0u, 0u, 0u) + ((gl_WorkGroupSize))), uvec3(uvec3(_GLF_IDENTITY((gl_WorkGroupSize) | (gl_WorkGroupSize), min((gl_WorkGroupSize) | (gl_WorkGroupSize), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (~ (gl_WorkGroupSize[2])) >> 0u)) | (~ (gl_WorkGroupSize[2]))), (~ (gl_WorkGroupSize[2])) ^ 0u))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (~ (gl_WorkGroupSize[2])) ^ 0u))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), min(_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (~ (gl_WorkGroupSize[2])) | 0u), ~ (gl_WorkGroupSize[2]))), (~ (gl_WorkGroupSize[2])) ^ 0u)))))) - uvec3(0u, 0u, 0u))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (~ (gl_WorkGroupSize[2])) ^ 0u))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (~ (gl_WorkGroupSize[2])) ^ 0u)))))) - uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u))))) | (gl_WorkGroupSize))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) | _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, max(6u, 6u))), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) + uvec3(0u, 0u, 0u)))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))), uvec3(0u, 0u, 0u) + ((gl_WorkGroupSize))), min((gl_WorkGroupSize) | _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) + uvec3(0u, 0u, 0u)))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))))) - uvec3(0u, 0u, 0u)) + _GLF_IDENTITY(((gl_WorkGroupSize)), uvec3(0u, 0u, 0u) ^ (((gl_WorkGroupSize))))), (gl_WorkGroupSize) | _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) - 0u)) | (_GLF_IDENTITY(6u, (6u) / 1u)))), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) + uvec3(0u, 0u, 0u)))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))), _GLF_IDENTITY(uvec3(0u, 0u, 0u) + ((gl_WorkGroupSize)), (uvec3(0u, 0u, 0u) + ((gl_WorkGroupSize))) / uvec3(1u, 1u, 1u))))), uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), max((gl_WorkGroupSize), (gl_WorkGroupSize))) | (gl_WorkGroupSize), min((gl_WorkGroupSize) | (gl_WorkGroupSize), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (~ (gl_WorkGroupSize[2])) ^ 0u)))))) | (gl_WorkGroupSize))))))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) | _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), min(uvec3(6u), uvec3(6u))), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) + uvec3(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 0u)))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))), uvec3(0u, 0u, 0u) + ((gl_WorkGroupSize))), uvec3(uvec3(_GLF_IDENTITY((gl_WorkGroupSize) | (gl_WorkGroupSize), min((gl_WorkGroupSize) | (gl_WorkGroupSize), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)))) | (_GLF_IDENTITY(0, (0) >> 0)))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | 0), clamp(2, 2, 2))]), (~ _GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) * 1u)) ^ 0u)))), min(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)))) | (_GLF_IDENTITY(0, (0) >> 0)))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | 0), clamp(2, 2, 2))]), (~ _GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) * 1u)) ^ 0u)))), _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)))) | (_GLF_IDENTITY(0, (0) >> 0)))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | 0), clamp(2, 2, 2))]), (~ _GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) * 1u)) ^ 0u)))), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)))) | (_GLF_IDENTITY(0, (0) >> 0)))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | 0), clamp(2, 2, 2))]), (~ _GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) * 1u)) ^ 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))))))) | (gl_WorkGroupSize)))))))))) | (uvec3(165858u, 41652u, 92983u) & uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))).x) | 0u, clamp((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) | _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) / (_GLF_IDENTITY((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) + uvec3(0u, 0u, 0u)))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)), max((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) + uvec3(0u, 0u, 0u)))) >> _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) | uvec3(0u, 0u, 0u))), (uvec3(1u, _GLF_IDENTITY(1u, (1u) * 1u), 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) + uvec3(0u, 0u, 0u)))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, 0u | (6u)))))), uvec3(6u)))))), uvec3(0u, 0u, 0u) + _GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), ~ (~ (_GLF_IDENTITY(((gl_WorkGroupSize)), uvec3(uvec4(((gl_WorkGroupSize)), 0u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), ~ (~ (_GLF_IDENTITY(((gl_WorkGroupSize)), uvec3(uvec4(((gl_WorkGroupSize)), 0u)))))), clamp(_GLF_IDENTITY(((gl_WorkGroupSize)), ~ (~ (_GLF_IDENTITY(((gl_WorkGroupSize)), uvec3(uvec4(((gl_WorkGroupSize)), 0u)))))), _GLF_IDENTITY(((gl_WorkGroupSize)), ~ (~ (_GLF_IDENTITY(((gl_WorkGroupSize)), uvec3(uvec4(((gl_WorkGroupSize)), 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), ~ (~ (_GLF_IDENTITY(((gl_WorkGroupSize)), uvec3(uvec4(((gl_WorkGroupSize)), 0u)))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(((gl_WorkGroupSize)), ~ (~ (_GLF_IDENTITY(((gl_WorkGroupSize)), uvec3(uvec4(((gl_WorkGroupSize)), 0u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), ~ (~ (_GLF_IDENTITY(((gl_WorkGroupSize)), uvec3(uvec4(((gl_WorkGroupSize)), 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupSize)), ~ (~ (_GLF_IDENTITY(((gl_WorkGroupSize)), uvec3(uvec4(((gl_WorkGroupSize)), 0u)))))), (_GLF_IDENTITY(((gl_WorkGroupSize)), ~ (~ (_GLF_IDENTITY(((gl_WorkGroupSize)), uvec3(uvec4(((gl_WorkGroupSize)), 0u))))))) >> uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(((gl_WorkGroupSize)), ~ (~ (_GLF_IDENTITY(((gl_WorkGroupSize)), uvec3(uvec4(((gl_WorkGroupSize)), 0u))))))))))), uvec3(uvec3(_GLF_IDENTITY((gl_WorkGroupSize) | (gl_WorkGroupSize), min((gl_WorkGroupSize) | (gl_WorkGroupSize), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))[2], ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) << 0u), (~ (gl_WorkGroupSize[2])) ^ 0u)))))) | (gl_WorkGroupSize))))))).x) | 0u, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) | _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) / ((uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) + uvec3(0u, 0u, 0u)))) >> _GLF_IDENTITY(uvec3(6u), uvec3(_GLF_IDENTITY(6u, 0u ^ (6u)))))), uvec3(0u, 0u, 0u) + ((gl_WorkGroupSize))), uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) | (gl_WorkGroupSize), min((gl_WorkGroupSize) | (gl_WorkGroupSize), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (~ (gl_WorkGroupSize[2])) ^ 0u)))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (~ (gl_WorkGroupSize[2])) ^ 0u))))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (~ (gl_WorkGroupSize[2])) ^ 0u))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (~ (gl_WorkGroupSize[2])) ^ 0u))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (~ (gl_WorkGroupSize[2])) ^ 0u)))))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (~ (gl_WorkGroupSize[2])) ^ 0u)))))), ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (~ (gl_WorkGroupSize[2])) ^ 0u)), (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (~ (gl_WorkGroupSize[2])) ^ 0u))) | (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (~ (gl_WorkGroupSize[2])) ^ 0u))))))))) << (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), (_GLF_IDENTITY(uvec3(5u), uvec3(5u))) ^ uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (~ (gl_WorkGroupSize[2])) ^ 0u)))))))) | (gl_WorkGroupSize))), (_GLF_IDENTITY((gl_WorkGroupSize) | (gl_WorkGroupSize), min((gl_WorkGroupSize) | (gl_WorkGroupSize), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (~ (gl_WorkGroupSize[2])) ^ 0u)))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (~ (gl_WorkGroupSize[2])) ^ 0u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (~ (gl_WorkGroupSize[2])) ^ 0u))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], clamp(_GLF_IDENTITY(gl_WorkGroupSize[1], clamp(_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) << 0u), gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1])))), _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (~ (gl_WorkGroupSize[2])) ^ _GLF_IDENTITY(0u, (0u) / 1u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (~ (gl_WorkGroupSize[2])) ^ 0u)))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (~ (gl_WorkGroupSize[2])) ^ 0u)))))), ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (~ (gl_WorkGroupSize[2])) ^ 0u)), (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (~ (gl_WorkGroupSize[2])) ^ 0u))) | (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (~ (gl_WorkGroupSize[2])) ^ 0u))))))))) << (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), (_GLF_IDENTITY(uvec3(5u), uvec3(5u))) ^ uvec3(0u, 0u, 0u)))), uvec3(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (~ (gl_WorkGroupSize[2])) ^ 0u)))))), ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (~ (gl_WorkGroupSize[2])) ^ 0u)), (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (~ (gl_WorkGroupSize[2])) ^ 0u))) | (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (~ (gl_WorkGroupSize[2])) ^ 0u))))))))) << (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), (_GLF_IDENTITY(uvec3(5u), uvec3(5u))) ^ uvec3(0u, 0u, 0u))))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (~ (gl_WorkGroupSize[2])) ^ 0u)))))))) | (gl_WorkGroupSize)))) - uvec3(0u, 0u, 0u)))))).x) | 0u, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), clamp((gl_WorkGroupSize), (gl_WorkGroupSize), (gl_WorkGroupSize))) | _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) + uvec3(0u, 0u, 0u)))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))) + _GLF_IDENTITY(((gl_WorkGroupSize)), uvec3(uvec4(((_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))), 0u)))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((gl_WorkGroupSize) | (gl_WorkGroupSize), min(_GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? (gl_WorkGroupSize) : _GLF_FUZZED(uvec3(118305u, 148181u, 115577u)))) | (gl_WorkGroupSize), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) | (_GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) >> 0u))), (~ (gl_WorkGroupSize[2])) ^ 0u)), ~ (~ ((_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) ^ 0u)), ((gl_WorkGroupSize[2])) | (_GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) >> 0u))), (~ (gl_WorkGroupSize[2])) ^ 0u))))), uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) | (_GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) >> 0u))), (~ (gl_WorkGroupSize[2])) ^ 0u)), ~ (~ ((_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) ^ 0u)), ((gl_WorkGroupSize[2])) | (_GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) >> 0u))), (~ (gl_WorkGroupSize[2])) ^ 0u)))))))))))) | (gl_WorkGroupSize)))), _GLF_IDENTITY(uvec3(uvec4(uvec3(_GLF_IDENTITY((gl_WorkGroupSize) | (gl_WorkGroupSize), min((gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) | (_GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) >> 0u))), (~ (gl_WorkGroupSize[2])) ^ 0u)), max(_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) | (_GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) >> 0u))), (~ (gl_WorkGroupSize[2])) ^ 0u)), uint(uint((_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) | (_GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) >> 0u))), (~ (gl_WorkGroupSize[2])) ^ 0u))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) | (_GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) >> 0u))), (~ (gl_WorkGroupSize[2])) ^ 0u)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) | (_GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) >> 0u))), (~ (gl_WorkGroupSize[2])) ^ 0u), (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) | (_GLF_IDENTITY((gl_WorkGroupSize[2]), ((_GLF_IDENTITY(gl_WorkGroupSize[2], (false ? _GLF_FUZZED(92024u) : gl_WorkGroupSize[2])))) >> 0u))), (~ (gl_WorkGroupSize[2])) ^ 0u)) - 0u)))))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) | (_GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) >> 0u))), (~ (gl_WorkGroupSize[2])) ^ 0u)), max(_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) | (_GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) >> 0u))), (~ (gl_WorkGroupSize[2])) ^ 0u)), uint(uint((_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) | (_GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) >> 0u))), (~ (gl_WorkGroupSize[2])) ^ 0u))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) | (_GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) >> 0u))), (~ (gl_WorkGroupSize[2])) ^ 0u)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) | (_GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) >> 0u))), (~ (gl_WorkGroupSize[2])) ^ 0u), (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) | (_GLF_IDENTITY((gl_WorkGroupSize[2]), ((_GLF_IDENTITY(gl_WorkGroupSize[2], (false ? _GLF_FUZZED(92024u) : gl_WorkGroupSize[2])))) >> 0u))), (~ (gl_WorkGroupSize[2])) ^ 0u)) - 0u))))))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))) | (gl_WorkGroupSize)))), 0u)), (uvec3(uvec4(uvec3(_GLF_IDENTITY((gl_WorkGroupSize) | (gl_WorkGroupSize), min((gl_WorkGroupSize) | (gl_WorkGroupSize), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) | (_GLF_IDENTITY((gl_WorkGroupSize[2]), ((_GLF_IDENTITY(gl_WorkGroupSize[2], (false ? _GLF_FUZZED(subgroup_local_id) : gl_WorkGroupSize[2])))) >> 0u))), (~ (gl_WorkGroupSize[2])) ^ 0u)), ~ (~ ((_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) | (_GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) >> 0u))), (~ (gl_WorkGroupSize[2])) ^ 0u))))))))) | (gl_WorkGroupSize), ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) | (_GLF_IDENTITY((gl_WorkGroupSize[2]), ((_GLF_IDENTITY(gl_WorkGroupSize[2], (false ? _GLF_FUZZED(subgroup_local_id) : gl_WorkGroupSize[2])))) >> 0u))), (~ (gl_WorkGroupSize[2])) ^ 0u)), ~ (~ ((_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) | (_GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) >> 0u))), (~ (gl_WorkGroupSize[2])) ^ 0u))))))))) | (gl_WorkGroupSize)) | uvec3(0u, 0u, 0u))))), 0u))) | (uvec3(uvec4(uvec3(_GLF_IDENTITY((gl_WorkGroupSize) | (gl_WorkGroupSize), min((gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) | _GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) >> 0u)), uint(uvec3((_GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) >> 0u)), 1u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))), (~ (gl_WorkGroupSize[2])) ^ 0u)), ~ (~ ((_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) | (_GLF_IDENTITY((gl_WorkGroupSize[2]), ((gl_WorkGroupSize[2])) >> 0u))), _GLF_IDENTITY((~ (gl_WorkGroupSize[2])), ((~ (gl_WorkGroupSize[_GLF_IDENTITY(2, 0 | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, clamp(2, 2, 2))) << 0)))]))) | ((~ (gl_WorkGroupSize[2])))) ^ 0u))))))))) | (gl_WorkGroupSize)))), 0u)))))))).x) | 0u)));
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0))))) > injectionSwitch.y)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false)), (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(atomicCompSwap(subgroup_local_id, _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size))) | (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))) | 0u))), subgroup_local_id)) : _GLF_IDENTITY(workgroup_id, uint(uvec4(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), 1u, 1u, 1u)))));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_2._f2._f0.subgroup_size, (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_2._f2._f0.subgroup_size, clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)))) | (subgroup_id)) * _GLF_struct_replacement_2._f2._f0.subgroup_size, subgroup_id * _GLF_struct_replacement_2._f2._f0.subgroup_size, subgroup_id * _GLF_struct_replacement_2._f2._f0.subgroup_size))) >> 0u) + subgroup_local_id, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) - 0u, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), true), true))))) ? _GLF_FUZZED(mix((++ num_workgroup), num_workgroup, true)) : (_GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((1u), max((1u), (1u))))) - 0u))) * (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / (1u & 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / (1u & 1u)), _GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) / (1u & 1u)) : _GLF_FUZZED(packSnorm2x16(injectionSwitch))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sin(0.0), abs(1.0), 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, sqrt(0.0), 0.0, 1.0, sin(0.0), log(1.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.6)), float(injectionSwitch.x), bool(true))))) ^ ((true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) / (1u & 1u)) : _GLF_IDENTITY(_GLF_FUZZED(packSnorm2x16(injectionSwitch)), max(_GLF_IDENTITY(_GLF_FUZZED(packSnorm2x16(injectionSwitch)), uint(uvec4(_GLF_FUZZED(packSnorm2x16(injectionSwitch)), (1u & 1u), 0u, 1u))), _GLF_FUZZED(packSnorm2x16(injectionSwitch))))))))) - 0u)) >> 0u) * _GLF_struct_replacement_2._f2._f0.subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_2._f2._f0.subgroup_size) ^ 0u, ((_GLF_struct_replacement_2._f2._f0.subgroup_size) ^ 0u) - 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) * _GLF_struct_replacement_2._f2._f0.subgroup_size, (true ? _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_2._f2._f0.subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(subgroup_local_id)), ~ (~ (~ (_GLF_FUZZED(subgroup_local_id))))))) : _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_2._f2._f0.subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id * _GLF_struct_replacement_2._f2._f0.subgroup_size)))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (false ? _GLF_FUZZED(workgroup_base) : _GLF_FUZZED(workgroup_base)))))) | (subgroup_id * _GLF_struct_replacement_2._f2._f0.subgroup_size)), ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) ^ 0u)), uint(_GLF_IDENTITY(1u, (1u) - 0u)))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))) + subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(min(subgroup_id, subgroup_id), max(min(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id))) | (subgroup_id))), min(subgroup_id, subgroup_id))), 1u * (_GLF_IDENTITY(min(subgroup_id, subgroup_id), max(min(subgroup_id, subgroup_id), min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id)), (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id))) - 0u))))))) * _GLF_struct_replacement_2._f2._f0.subgroup_size, max(subgroup_id * _GLF_struct_replacement_2._f2._f0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_2._f2._f0.subgroup_size) | (_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_size, (_GLF_struct_replacement_2._f2._f0.subgroup_size) ^ 0u)), uint(uvec3((_GLF_struct_replacement_2._f2._f0.subgroup_size) | (_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_size, (_GLF_struct_replacement_2._f2._f0.subgroup_size) ^ 0u)), 0u, 1u))))) + 0u)) | (_GLF_struct_replacement_2._f2._f0.subgroup_size)), uint(uint(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * _GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_size, (_GLF_struct_replacement_2._f2._f0.subgroup_size) + _GLF_IDENTITY(0u, (0u) | 0u))), clamp((_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_size, (_GLF_struct_replacement_2._f2._f0.subgroup_size) + _GLF_IDENTITY(0u, (0u) | 0u))), (_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_size, (_GLF_struct_replacement_2._f2._f0.subgroup_size) + _GLF_IDENTITY(0u, (0u) | 0u))), (_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_size, (_GLF_struct_replacement_2._f2._f0.subgroup_size) + _GLF_IDENTITY(0u, (0u) | 0u))))) | (_GLF_struct_replacement_2._f2._f0.subgroup_size))))))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_size, min(_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_size, max(_GLF_struct_replacement_2._f2._f0.subgroup_size, _GLF_struct_replacement_2._f2._f0.subgroup_size)), _GLF_struct_replacement_2._f2._f0.subgroup_size)), min(_GLF_struct_replacement_2._f2._f0.subgroup_size, _GLF_struct_replacement_2._f2._f0.subgroup_size)), ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_size, min(_GLF_struct_replacement_2._f2._f0.subgroup_size, _GLF_struct_replacement_2._f2._f0.subgroup_size))))));
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) >> 0u, clamp(_GLF_IDENTITY((virtual_gid) >> 0u, _GLF_IDENTITY(((virtual_gid) >> 0u) + 0u, (false ? _GLF_FUZZED(workgroup_base) : ((virtual_gid) >> 0u) + 0u))), _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(subgroup_id)))) >> 0u, (_GLF_IDENTITY((virtual_gid), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) | ((virtual_gid)))), (uint(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) | ((virtual_gid))))) | (uint(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) | ((virtual_gid)))))))) >> 0u) / 1u), (virtual_gid) >> 0u))), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) ^ 0u) : _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) >> 0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), 0u ^ ((virtual_gid))) >> 0u, ((virtual_gid) >> 0u) + 0u), _GLF_IDENTITY((virtual_gid) >> 0u, ((virtual_gid) >> 0u) / 1u), (virtual_gid) >> 0u))), max(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid) >> 0u, (true ? (virtual_gid) >> 0u : _GLF_FUZZED(next_virtual_gid))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid) >> 0u, ((virtual_gid) >> 0u) | 0u), ((virtual_gid) >> 0u) + 0u), _GLF_IDENTITY((virtual_gid) >> 0u, _GLF_IDENTITY(((virtual_gid) >> 0u) / 1u, clamp(((virtual_gid) >> 0u) / 1u, ((virtual_gid) >> 0u) / 1u, ((virtual_gid) >> 0u) / 1u))), (virtual_gid) >> 0u))), _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) >> 0u, clamp(_GLF_IDENTITY((virtual_gid) >> 0u, ((virtual_gid) >> 0u) + 0u), _GLF_IDENTITY((virtual_gid) >> 0u, ((virtual_gid) >> 0u) / _GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_base) : 1u)), 0u)))), (virtual_gid) >> 0u)))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((virtual_gid) | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), _GLF_IDENTITY((virtual_gid) >> 0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(virtual_gid) : virtual_gid)) : _GLF_FUZZED(next_virtual_gid))))), virtual_gid))) >> 0u, ((virtual_gid) >> 0u) + 0u), min(_GLF_IDENTITY((virtual_gid) >> 0u, ((virtual_gid) >> 0u) + 0u), _GLF_IDENTITY((virtual_gid) >> 0u, ((virtual_gid) >> 0u) + 0u))), _GLF_IDENTITY((virtual_gid) >> 0u, ((virtual_gid) >> 0u) / 1u), (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))))) >> 0u)) >> 0u)))), ((virtual_gid) | (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) >> 0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid) >> 0u, uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(virtual_gid, 0u | (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))) >> 0u, 0u, 1u), (_GLF_IDENTITY(uvec3((virtual_gid) >> 0u, 0u, 1u), clamp(uvec3((virtual_gid) >> 0u, 0u, 1u), uvec3((virtual_gid) >> 0u, 0u, 1u), uvec3((virtual_gid) >> 0u, 0u, 1u)))) | uvec3(0u, 0u, 0u)))), 1u * ((virtual_gid) >> 0u)), _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) >> 0u), (((virtual_gid) >> 0u)) - 0u) + 0u), _GLF_IDENTITY((virtual_gid) >> 0u, _GLF_IDENTITY(((virtual_gid) >> 0u) / 1u, 0u + (((virtual_gid) >> _GLF_IDENTITY(0u, (0u) / ((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(subgroup_local_id))))) >> _GLF_IDENTITY(uint(0u), uint(0u))))) / 1u))), _GLF_IDENTITY((virtual_gid) >> 0u, (1u & 1u) * ((virtual_gid) >> _GLF_IDENTITY(0u, (0u) | (0u))))))))) / 1u))))], 4, _GLF_IDENTITY(64, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((64), ((64)) | ((64))), (_GLF_IDENTITY((64), ((64)) | ((64)))) >> (0 | 0)))), 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2.9)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - tan(vec2(0.0, 0.0))), injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) >> 0)), max(uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), uint(1))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2.4)), bool(false))))) < injectionSwitch.y)) && (true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && (false))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, true && (false)))) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
