#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_10 {
 bvec2 _f0;
 uvec3 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_9 {
 vec2 _f0;
 ivec3 _f1;
 uint _f2;
 ivec3 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_11 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
 bool _f2;
} ;

struct _GLF_struct_8 {
 ivec2 _f0;
 bool _f1;
 uint virtual_gid;
} ;

struct _GLF_struct_12 {
 vec2 _f0;
 _GLF_struct_8 _f1;
 float _f2;
 _GLF_struct_11 _f3;
} ;

struct _GLF_struct_5 {
 bvec2 _f0;
 float _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_6 {
 int _f0;
 _GLF_struct_5 _f1;
} ;

struct _GLF_struct_3 {
 bvec2 _f0;
 mat3 _f1;
 vec3 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_4 {
 bvec3 _f0;
 ivec4 _f1;
 _GLF_struct_3 _f2;
} ;

struct _GLF_struct_7 {
 mat2x3 _f0;
 _GLF_struct_4 _f1;
 uint workgroup_size;
 _GLF_struct_6 _f2;
} ;

struct _GLF_struct_0 {
 ivec2 _f0;
 vec3 _f1;
 uvec4 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 mat3 _f1;
 bool _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_2 {
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base;
 _GLF_struct_1 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_2 _GLF_struct_replacement_2;
 uvec3 GLF_merged3_0_1_16_1_1_13_2_1_12next_virtual_gidsubgroup_sizeworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_16_1_1_13_2_1_12next_virtual_gidsubgroup_sizeworkgroup_id.y = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(mat2x3(1.0), _GLF_struct_4(bvec3(true), ivec4(1), _GLF_struct_3(bvec2(true), mat3(1.0), vec3(1.0), vec2(1.0))), gl_WorkGroupSize.x, _GLF_struct_6(1, _GLF_struct_5(bvec2(true), 1.0, uvec2(1u))));
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged3_0_1_16_1_1_13_2_1_12next_virtual_gidsubgroup_sizeworkgroup_id.z = workgroup_id;
 uint workgroup_base = _GLF_struct_replacement_7.workgroup_size * GLF_merged3_0_1_16_1_1_13_2_1_12next_virtual_gidsubgroup_sizeworkgroup_id.z;
 _GLF_struct_replacement_2.GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y = workgroup_base;
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(vec2(1.0), _GLF_struct_8(ivec2(1), true, _GLF_struct_replacement_2.GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y + subgroup_id * GLF_merged3_0_1_16_1_1_13_2_1_12next_virtual_gidsubgroup_sizeworkgroup_id.y + subgroup_local_id), 1.0, _GLF_struct_11(_GLF_struct_9(vec2(1.0), ivec3(1), 1u, ivec3(1), mat4(1.0)), _GLF_struct_10(bvec2(true), uvec3(1u), mat2(1.0)), true));
 _GLF_struct_replacement_2.GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x = _GLF_struct_replacement_12._f1.virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_struct_replacement_2.GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y + subgroup_id * GLF_merged3_0_1_16_1_1_13_2_1_12next_virtual_gidsubgroup_sizeworkgroup_id.y + ((subgroup_local_id + 1) % GLF_merged3_0_1_16_1_1_13_2_1_12next_virtual_gidsubgroup_sizeworkgroup_id.y);
 GLF_merged3_0_1_16_1_1_13_2_1_12next_virtual_gidsubgroup_sizeworkgroup_id.x = next_virtual_gid;
 atomicStore(buf[_GLF_struct_replacement_2.GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], uint(1), 4, 64, 4);
 if(subgroup_local_id + 1 < GLF_merged3_0_1_16_1_1_13_2_1_12next_virtual_gidsubgroup_sizeworkgroup_id.y)
  {
   int i = 0;
   atomicStore(buf[GLF_merged3_0_1_16_1_1_13_2_1_12next_virtual_gidsubgroup_sizeworkgroup_id.x], uint(2), 4, 64, 4);
  }
 else
  {
   atomicStore(buf[GLF_merged3_0_1_16_1_1_13_2_1_12next_virtual_gidsubgroup_sizeworkgroup_id.x], uint(2), 4, 64, 4);
  }
}
