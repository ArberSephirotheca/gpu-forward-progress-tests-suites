#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))) || false) || (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uvec4 GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 uvec2 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.xy = _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, uvec2(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid[0], GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid[1])), (false ? _GLF_FUZZED(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid) : _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, uvec2(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, uvec2(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid[0], GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid[1]))[0], GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid[1])))), GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, sqrt(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 1.0, sin(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)))), sin(0.0), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0)), _GLF_IDENTITY(min(float(mat4(injectionSwitch.y, sqrt(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 1.0, sin(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)))), sin(0.0), 1.0, 0.0)), float(mat4(injectionSwitch.y, sqrt(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 1.0, sin(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)))), sin(0.0), 1.0, 0.0))), (true ? min(float(mat4(injectionSwitch.y, sqrt(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 1.0, sin(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)))), sin(0.0), 1.0, 0.0)), float(mat4(injectionSwitch.y, sqrt(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 1.0, sin(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)))), sin(0.0), 1.0, 0.0))) : _GLF_FUZZED(4.6)))))))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(866.179), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1.8)), bvec2(true, false))), 1.0, 1.0))).x > injectionSwitch.y))))), bool(bvec3((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
uint subgroup_size = 16;
 GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.xy.x = subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, true, false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))) && true), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-67.97), _GLF_FUZZED((_GLF_IDENTITY(-6.6, clamp(-6.6, _GLF_IDENTITY(-6.6, (-6.6) - _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x), clamp(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x))), _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)))), -6.6)) - -7.3))), bvec2(false, false))).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(((! (true))) && true, true && (_GLF_IDENTITY(_GLF_IDENTITY(((! (true))) && true, bool(_GLF_IDENTITY(bool(((! (true))) && true), true && (bool(((! (true))) && true))))), (_GLF_IDENTITY(((! (true))) && true, bool(_GLF_IDENTITY(bool(((! (true))) && true), true && (bool(((! (true))) && true)))))) || false))))), true, false)), (bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-67.97), _GLF_FUZZED((_GLF_IDENTITY(-6.6, clamp(-6.6, _GLF_IDENTITY(-6.6, (-6.6) - _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)), -6.6)) - _GLF_IDENTITY(-7.3, float(mat2x3(-7.3, cos(0.0), abs(0.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))), max(vec2(_GLF_FUZZED(-67.97), _GLF_FUZZED((_GLF_IDENTITY(-6.6, clamp(-6.6, _GLF_IDENTITY(-6.6, (-6.6) - _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)), -6.6)) - _GLF_IDENTITY(-7.3, float(mat2x3(-7.3, cos(0.0), abs(0.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))), vec2(_GLF_FUZZED(-67.97), _GLF_FUZZED((_GLF_IDENTITY(-6.6, clamp(-6.6, _GLF_IDENTITY(-6.6, (-6.6) - _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)), -6.6)) - _GLF_IDENTITY(-7.3, float(mat2x3(-7.3, cos(0.0), abs(0.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))))), bvec2(false, false))).y), ! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), ! (! ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(((! (true))) && true, true && (_GLF_IDENTITY(((! (true))) && true, bool(_GLF_IDENTITY(bool(((! (true))) && true), true && (bool(((! (true))) && true))))))))), true, _GLF_IDENTITY(false, false || (false))))) || false)))))))
  barrier();
 _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w = workgroup_base, (GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w = workgroup_base) * 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w = workgroup_base, ~ (_GLF_IDENTITY(~ (GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w = workgroup_base), 0u | (_GLF_IDENTITY(~ (GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w = workgroup_base), ~ (~ (~ (GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w = workgroup_base)))))))), ~ (~ (GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w = workgroup_base))))));
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w, 0u | (GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w)), (_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w, 0u | (GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w))) | 0u), GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w)), max(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w, 0u | (GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w)), (_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w, 0u | (GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w))) | 0u), GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w, 0u | (GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w)), (_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w, 0u | (GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w))) | 0u), GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w)), uint(uvec4(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w, 0u | (GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w)), (_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w, 0u | (GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w))) | 0u), GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w)), 0u, 1u, 1u))))) + subgroup_id * GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.xy.x, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w, 0u | (GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w)), (_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w, 0u | (GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w))) | 0u), GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w)), max(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w, 0u | (GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w)), (_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w, 0u | (GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w))) | 0u), GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w, 0u | (GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w)), (_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w, 0u | (GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w))) | 0u), GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w)), uint(uvec4(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w, 0u | (GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w)), (_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w, 0u | (GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w))) | 0u), GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w)), 0u, 1u, 1u))))) + subgroup_id * GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.xy.x, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w, 0u | (GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w)), (_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w, 0u | (GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w))) | 0u), GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w)), max(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w, 0u | (GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w)), (_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w, 0u | (GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w))) | 0u), GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w, 0u | (GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w)), (_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w, 0u | (GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w))) | 0u), GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w)), uint(uvec4(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w, 0u | (GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w)), (_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w, 0u | (GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w))) | 0u), GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w)), 0u, 1u, 1u))))) + subgroup_id * GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.xy.x) ^ 0u))) + subgroup_local_id;
 GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.xy.y = virtual_gid;
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w + subgroup_id * GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.xy.x + ((subgroup_local_id + 1) % GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.xy.x), (GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.w + subgroup_id * GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.xy.x + ((subgroup_local_id + 1) % GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.xy.x)) - (0u << _GLF_IDENTITY(uint(7u), uint(7u))));
 GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.z = next_virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(injectionSwitch))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), false, true))), (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), false, true)))) && true))), (bool(bvec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-81.96)), bool(false))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false, true))) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false, false, false))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.xy.y], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), mix(vec2(_GLF_FUZZED(-8872.5134), (mat2(1.0) * ((injectionSwitch)))[1]), vec2((mat2(1.0) * ((injectionSwitch)))[0], _GLF_FUZZED(-741.227)), bvec2(true, false)))) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(5004.8138, 3419.8967, 4.2, 4.0)))), (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))))))) + 1 < GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.xy.x)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, true))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, true))), false), bvec3(bvec3(bvec3(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, true))), false)))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, true))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, true))), false), bvec3(bvec3(bvec3(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, true))), false)))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, true))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, true))), false), bvec3(bvec3(bvec3(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, true))), false)))))))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, true))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, true))), false), bvec3(bvec3(bvec3(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, true))), false)))))))))), false)))) && true), false || (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, true))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, true))), false), bvec3(bvec3(bvec3(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, true))), false))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))) || false)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false)))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / cos(0.0))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, injectionSwitch.y))) / cos(0.0))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true)), ! (! (bool(_GLF_IDENTITY(false, (false) && true)))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true)), ! (! (bool(_GLF_IDENTITY(false, (false) && true)))))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) + 0.0), max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, abs(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), float(_GLF_FUZZED(549.583)), bool(false))), 1.0))), 0.0), mat3x2(mat4x2(mat3x2(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(abs(1.0), float(mat4x2(abs(1.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, abs(0.0), 0.0, 0.0, abs(1.0), 0.0))), 0.0)))))).y, injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(bvec2(bool(bool(false)), false), false, false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec3(bvec2(bool(bool(false)), true), true))))), false), bvec2(bvec4(bvec2(bool(bool(false)), false), false, false)))), false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(bvec2(bool(bool(false)), false), false, false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec3(bvec2(bool(bool(false)), true), true))))), false), bvec2(bvec4(bvec2(bool(bool(false)), false), false, false)))), false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false), false, false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec3(bvec2(bool(bool(false)), true), true))))), false), bvec2(bvec4(bvec2(bool(bool(false)), false), false, false)))), false)))))))))), ! _GLF_IDENTITY((! (false)), false || ((! (false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base, min(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base, (GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base) >> uvec4(0u, 0u, 0u, 0u)), GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base)).z], uint(2), 4, 64, _GLF_IDENTITY(4, 1 * (4)));
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-796.109) : injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), false, false, false)))))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[GLF_merged3_0_2_49_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidnext_virtual_gidworkgroup_base.z], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(false, true && (false))), true, true), bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(false, true && (false))), true, true)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), bool(bvec2(! ((true)), true))))))) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)) || (((injectionSwitch.x > injectionSwitch.y)))))) && true))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(3471.6311)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true, true))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true, true))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true, true)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), (bool(_GLF_IDENTITY(false, false || (false)))) && true))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
}
