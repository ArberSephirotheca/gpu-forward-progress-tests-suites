#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || false))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (1 ^ (1 | 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
          barrier();
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), false || ((! (_GLF_IDENTITY(false, false || (false))))))))))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || false)))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) / 1)); _injected_loop_counter --)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_LOOP(false)) || false));
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), uvec3(0u, 0u, 0u) | (uvec3(gl_NumWorkGroups))))).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) - 0u) + subgroup_local_id, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_id))) * subgroup_size))))) | 0u) + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, clamp(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, max(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))) + subgroup_local_id, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) - 0u, (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) - 0u, (true ? _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), min((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))) - _GLF_IDENTITY(0u, (0u) / 1u) : _GLF_FUZZED(workgroup_id)))) + 0u), (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) - 0u, ((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) - 0u) | ((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) - 0u))) - 0u)))))), 0u, 0u, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) - 0u) + subgroup_local_id, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_id))) * subgroup_size))))) | 0u) + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, clamp(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, max(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))) + subgroup_local_id, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) - 0u, (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) - 0u, (true ? _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), min((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))) - _GLF_IDENTITY(0u, (0u) / 1u) : _GLF_FUZZED(workgroup_id)))) + 0u), (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) - 0u, ((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) - 0u) | ((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) - 0u))) - 0u)))))), 0u, 0u, 1u))))), max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) - 0u) + subgroup_local_id, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_id))) * subgroup_size))))) | 0u) + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, clamp(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, max(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))) + subgroup_local_id, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) - 0u, (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) - 0u, (true ? _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), min((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))) - _GLF_IDENTITY(0u, (0u) / 1u) : _GLF_FUZZED(workgroup_id)))) + 0u), (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) - 0u, ((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) - 0u) | ((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) - 0u))) - 0u)))))), 0u, 0u, 1u))))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) - 0u) + subgroup_local_id, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_id))) * subgroup_size))))) | 0u) + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, clamp(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, max(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))) + subgroup_local_id, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) - 0u, (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) - 0u, (true ? _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), min((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))) - _GLF_IDENTITY(0u, (0u) / 1u) : _GLF_FUZZED(workgroup_id)))) + 0u), (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) - 0u, ((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) - 0u) | ((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) - 0u))) - 0u)))))), 0u, 0u, 1u)))))))) / 1u);
 for(int _injected_loop_counter = _GLF_IDENTITY(1, (1 | 1) * (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), max(_GLF_IDENTITY(1, max(1, 1)), 1))), ((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)))) >> (0u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4u, uint(uvec4(4u, 1u, 0u, 0u))) : _GLF_FUZZED(subgroup_id))))))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, min(1, 1))))) % subgroup_size, 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id))))) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), injectionSwitch.x))) + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, min(1, 1))))) % subgroup_size))), (((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id)))) + _GLF_IDENTITY(1, max(1, 1))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (false ? _GLF_FUZZED(workgroup_id) : _GLF_FUZZED(num_workgroup))) : (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((1)), (false ? _GLF_FUZZED(-80916) : ~ ((1)))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(~ ((1)), (false ? _GLF_FUZZED(-80916) : ~ ((1)))))), ~ (~ (int(int(_GLF_IDENTITY(~ ((1)), (false ? _GLF_FUZZED(-80916) : ~ ((1)))))))))))) - 0), max(_GLF_IDENTITY(1, (1) | (1)), 1))) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, max(1, 1)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), max(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))), 1))) >> 0)) - 0, 1 * (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))), 1))) >> 0)) - 0, max((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))), 1))) >> 0)) - 0, (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))), 1))) >> 0)) - 0))))))), _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, min(1, 1)))), 1)), 1), (max(1, 1)) | (max(1, 1))), ~ (~ (_GLF_IDENTITY(max(1, 1), (false ? _GLF_FUZZED(-42897) : max(1, 1)))))))) * 1)))) % subgroup_size, clamp(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), min(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, max(1, 1))))) ^ 0)) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), min(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, max(1, 1))))) ^ 0)) % subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), 0u | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), max(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))))))) % subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size))) << 0u))))) * uint(_GLF_ONE(1.0, injectionSwitch.y)));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)), true && (bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(false, true && (false))), true, false)), bool(bool(bool(bvec3(! (_GLF_IDENTITY(false, true && (false))), true, false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
      }
     else
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(exp(0.0), 0.0)), dot(vec2(0.0, 1.0), vec2(exp(0.0), 0.0))), 0.0, 1.0, 0.0, 1.0))), length(vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.2)), float(1.0), bool(true))), injectionSwitch.y))), _GLF_IDENTITY(float(mat2(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.2)), float(1.0), bool(true))), injectionSwitch.y))), 0.0, 1.0, 1.0)), 1.0 * (float(mat2(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.2)), float(1.0), bool(true))), injectionSwitch.y))), 0.0, 1.0, 1.0))))), mix(float(_GLF_FUZZED(-908.188)), float(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), min(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), clamp(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y))), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(vec3(864.659, 329.997, 67.32).stt.g)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), determinant(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3.4))), 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3.4))), 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))))), bool(true))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), max(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (true ? _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(vec2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0))) : _GLF_FUZZED(-6.3))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0))), 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0, 1.0, 0.0)), min(float(mat4x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))) / vec2(1.0, 1.0)).y, length(vec2(0.0, 0.0)), _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(-908.188)), float(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), min(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), clamp(determinant(mat3(1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, sqrt(0.0), 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), determinant(mat3(1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.4)), bool(false))), float(mat4x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.4)), bool(false))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), 1.0, 0.0, sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y))))), determinant(mat3(1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0, sqrt(0.0), 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y)))))), bool(true))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 1.0, 0.0)), 1.0, 1.0, abs(0.0), 0.0)), float(mat4(_GLF_IDENTITY(float(mat2x4(0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 1.0, 0.0)), 1.0, 1.0, abs(0.0), 0.0)), (false ? _GLF_FUZZED(57.04) : float(mat2x4(0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 1.0, 0.0)), 1.0, 1.0, abs(0.0), 0.0)))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), max(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (true ? _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0)), float(vec2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0))) : _GLF_FUZZED(-6.3))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), float(mat4x3(injectionSwitch.y, length(vec2(0.0, 0.0)), _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(-908.188)), float(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), min(_GLF_IDENTITY(determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), clamp(determinant(mat3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) - abs(sin(0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, _GLF_IDENTITY(sqrt(0.0), float(_GLF_IDENTITY(float(sqrt(0.0)), (float(sqrt(0.0))) / 1.0))), 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y))), determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y))))), determinant(mat3(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))), bool(true))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1.0)), bool(false))), 0.0)), 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, (1.0) - determinant(mat4(0.0, 0.0, 0.0, sqrt(0.0), 1.0, tan(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, length(0.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0))))), _GLF_IDENTITY(max(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (true ? _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(vec2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0))) : _GLF_FUZZED(-6.3))), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0))))), (_GLF_IDENTITY(max(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (true ? _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(vec2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0))) : _GLF_FUZZED(-6.3))), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0))))), min(_GLF_IDENTITY(max(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (true ? _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(vec2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0))) : _GLF_FUZZED(-6.3))), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0))))), 0.0 + (max(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (true ? _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(vec2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0))) : _GLF_FUZZED(-6.3))), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0))))))), max(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (true ? _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(vec2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0))) : _GLF_FUZZED(-6.3))), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0)))))))) - 0.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), max(float(mat4x3(injectionSwitch.y, length(vec2(0.0, 0.0)), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(0.0, 0.0) + (vec2(0.0, 1.0)))), dot(vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0), vec2(0.0, 1.0))), 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(atan(-91.00, 722.017)))), 0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, length(vec2(0.0, 0.0)), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5.9)), float(0.0), bool(true))), sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(29.03)), bool(false))), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0), (false ? _GLF_FUZZED(vec2(689.671, 2489.7946)) : _GLF_IDENTITY(vec2(0.0, 1.0), mat2(1.0) * (vec2(0.0, 1.0))))), _GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0))))))), 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)), 0.0, 1.0, 0.0)), clamp(dot(vec4(1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(29.03)), bool(false))), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0), (false ? _GLF_FUZZED(vec2(689.671, 2489.7946)) : _GLF_IDENTITY(vec2(0.0, 1.0), mat2(1.0) * (vec2(0.0, 1.0))))), _GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0))))))), 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)), 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(29.03)), bool(false))), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0), (false ? _GLF_FUZZED(vec2(689.671, 2489.7946)) : _GLF_IDENTITY(vec2(0.0, 1.0), mat2(1.0) * (vec2(0.0, 1.0))))), _GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0))))))), 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)), 0.0, 1.0, 0.0)), (_GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(29.03)), bool(false))), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0), (false ? _GLF_FUZZED(vec2(689.671, 2489.7946)) : _GLF_IDENTITY(vec2(0.0, 1.0), mat2(1.0) * (vec2(0.0, 1.0))))), _GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0))))))), 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)), 0.0, 1.0, 0.0)), max(dot(vec4(1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(29.03)), bool(false))), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0), (false ? _GLF_FUZZED(vec2(689.671, 2489.7946)) : _GLF_IDENTITY(vec2(0.0, 1.0), mat2(1.0) * (vec2(0.0, 1.0))))), _GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0))))))), 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)), 0.0, 1.0, 0.0)), dot(vec4(1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(29.03)), bool(false))), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0), (false ? _GLF_FUZZED(vec2(689.671, 2489.7946)) : _GLF_IDENTITY(vec2(0.0, 1.0), mat2(1.0) * (vec2(0.0, 1.0))))), _GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0))))))), 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)), 0.0, 1.0, 0.0))))) + 0.0), dot(vec4(1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(29.03)), bool(false))), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0), (false ? _GLF_FUZZED(vec2(689.671, 2489.7946)) : _GLF_IDENTITY(vec2(0.0, 1.0), mat2(1.0) * (vec2(0.0, 1.0))))), _GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0))))))), 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)), 0.0, 1.0, 0.0))))), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, exp(0.0), length(vec3(0.0, 0.0, 0.0)), round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), mix(vec4(_GLF_IDENTITY((vec4(1.0, 1.0, 1.0, 1.0))[0], float(mat4(_GLF_IDENTITY((vec4(1.0, 1.0, 1.0, 1.0))[0], min((vec4(1.0, 1.0, 1.0, 1.0))[0], (vec4(1.0, 1.0, 1.0, 1.0))[0])), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))), _GLF_FUZZED(-68.54), (vec4(1.0, 1.0, 1.0, 1.0))[2], (vec4(1.0, 1.0, 1.0, 1.0))[3]), vec4(_GLF_IDENTITY(_GLF_FUZZED(5157.7683), mix(float(_GLF_FUZZED(5157.7683)), float(_GLF_FUZZED(float((84939 * -88041)))), bool(false))), (vec4(1.0, 1.0, 1.0, 1.0))[1], _GLF_FUZZED(4.5), _GLF_FUZZED(-6.1)), bvec4(false, true, false, false)))))), 0.0, 1.0, 0.0, determinant(mat4(1.0, 1.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-934.840) : 0.0))), float(_GLF_FUZZED(2.2)), bool(false))), cos(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, cos(0.0))), float(mat3(float(mat4(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-934.840) : 0.0))), float(_GLF_FUZZED(2.2)), bool(false))), cos(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, cos(0.0))), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0)))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, 0.0, 1.0, round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), float(vec2(length(normalize(vec3(1.0, 1.0, 1.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, tan(0.0), 1.0)))), float(mat2x3(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, exp(0.0), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(true, true && (true)) ? normalize(vec4(1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(vec4(8029.8875, 89.39, -2700.3322, 1566.3270)))))), float(_GLF_IDENTITY(float(round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0))))))), max(float(round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), mix(vec4(_GLF_FUZZED((-417.653 + 7.6)), _GLF_FUZZED(57.13), (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[2], (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[3]), vec4((normalize(vec4(1.0, 1.0, 1.0, 1.0)))[0], (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[1], _GLF_FUZZED(7779.5608), _GLF_FUZZED(3217.8271)), bvec4(true, true, false, false)))))), float(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))))), 0.0, 1.0, 0.0, determinant(mat4(1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 0.0, 0.0)), 0.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, tan(0.0), 1.0))), (false ? _GLF_FUZZED((mat3x2(-34.70, -3.4, 8.4, 6849.2910, 8.7, 5.4) , matrixCompMult(mat3(-2989.6414, -1.0, 21.68, -729.833, -85.53, -9897.8841, 411.836, -278.116, -4984.4738), mat3(497.468, -4583.8291, -3.2, -24.41, -6027.1010, 8.6, 5.1, 6648.5943, -281.753)))) : mat3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, exp(0.0), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(true, true && (true)) ? normalize(vec4(1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(vec4(8029.8875, 89.39, -2700.3322, 1566.3270)))))), float(_GLF_IDENTITY(float(round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0))))))), max(float(round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), mix(vec4(_GLF_FUZZED((-417.653 + 7.6)), _GLF_FUZZED(57.13), (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[2], (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[3]), vec4((normalize(vec4(1.0, 1.0, 1.0, 1.0)))[0], (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[1], _GLF_FUZZED(7779.5608), _GLF_FUZZED(3217.8271)), bvec4(true, true, false, false)))))), float(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))))), 0.0, 1.0, 0.0, determinant(mat4(1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 0.0, 0.0)), 0.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, tan(0.0), 1.0)))))), max(float(mat3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, exp(0.0), length(vec3(0.0, 0.0, 0.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, determinant(mat4(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0), determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / 1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0, exp(0.0), 1.0, 0.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, tan(0.0), 1.0)))), float(mat3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, exp(0.0), length(vec3(0.0, 0.0, 0.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, determinant(mat4(1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 1.0, cos(0.0), 0.0, exp(0.0))))) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 1.0, exp(0.0), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0), mat3x2(mat3(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), float(mat2x4(float(_GLF_IDENTITY(mat3x2(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(14.44)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0), 1.0))), 1.0, 0.0), mat3x2(mat3(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, tan(0.0), 1.0)))))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0)))), 0.0, 1.0, 0.0)), clamp(float(mat4x3(injectionSwitch.y, _GLF_IDENTITY(length(vec2(0.0, 0.0)), 1.0 * (length(vec2(0.0, 0.0)))), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (true ? vec4(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), (0.0) - 0.0) : _GLF_FUZZED(-4085.2049))), 1.0, 0.0) : _GLF_FUZZED(sin(vec4(68.59, 7794.0116, 725.584, 3308.1789)))))), dot(vec4(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-454.527)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), length(vec2(0.0, 0.0)), determinant(mat3(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, sqrt(0.0), 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(21269))), float(injectionSwitch.y), bool(true)))))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0)), 0.0)), dot(vec4(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0)), float(mat4x3(injectionSwitch.y, length(vec2(0.0, 0.0)), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), mix(float(dot(vec4(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), float(_GLF_FUZZED(202.171)), bool(false))), dot(vec4(1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * sqrt(vec2(1.0, 1.0))), vec2(0.0, 1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8.4) : 0.0)), 0.0, 0.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), float(mat4x2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), vec2(0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))))) * _GLF_ONE(1.0, injectionSwitch.y)), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec4(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 1.0) * (vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), mix(float(dot(vec4(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), float(_GLF_FUZZED(202.171)), bool(false))), dot(vec4(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * sqrt(vec2(1.0, 1.0))), vec2(0.0, 1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8.4) : 0.0)), 0.0, 0.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * mat2(1.0)))), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), float(mat4(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, determinant(mat2(1.0, sin(0.0), 0.0, cos(0.0))), sin(0.0), 1.0, 0.0, log(1.0), 0.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED(995.035)), float(_GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0)))), bool(true))) - 0.0)), vec2(0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))))) * _GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.4)), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(true))), 1.0, 1.0)), injectionSwitch.y)), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec4(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 1.0) * (vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))))) - 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))))))))))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (int(0)))), clamp(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (int(0)))), _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (int(0)))), _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (int(0)))))))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (int(0)))), clamp(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (int(0)))), _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (int(0)))), _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (int(0)))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (int(0)))), clamp(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (int(0)))), _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (int(0)))), _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (int(0)))))), int(ivec2((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (int(0)))), clamp(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (int(0)))), _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (int(0)))), _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (int(0)))))), 1)))) >> 0))))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), max(vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))))
              barrier();
             barrier();
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), ((_GLF_WRAPPED_LOOP(false))) && true) || false))));
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, clamp(1, 1, 1)), 1))), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) / 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))
          {
          }
         else
          {
           barrier();
          }
        }
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (! (bool(bvec4(true, true, false, false))))))))))
  {
   if(subgroup_local_id + 1 < subgroup_size)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_WRAPPED_LOOP(false)) && true));
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(45.18) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))), mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))))), float(_GLF_FUZZED(801.894)), bool(false)))), clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(45.18) : injectionSwitch.x), min((false ? _GLF_FUZZED(45.18) : injectionSwitch.x), (false ? _GLF_FUZZED(45.18) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(45.18, max(45.18, 45.18))) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(-8.4, 5923.8801)), clamp(true ? injectionSwitch : _GLF_FUZZED(vec2(-8.4, 5923.8801)), true ? injectionSwitch : _GLF_FUZZED(vec2(-8.4, 5923.8801)), true ? injectionSwitch : _GLF_FUZZED(vec2(-8.4, 5923.8801)))))).x), (false ? _GLF_FUZZED(45.18) : injectionSwitch.x)))) > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
     int i = 0;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), ~ (~ (uint(2))))) | 0u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(uint(2), ~ (~ (uint(2))))) | 0u)) + 0u))), 4, 64, 4);
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true, false || ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), false || (_GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) || false))))) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, false || (true))))))) && true)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))) && true))));
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, true, true))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)))); _injected_loop_counter --)
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-787.206)), bool(false))))))) || false))))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, tan(0.0), 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))) || false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 0.0, round(length(normalize(1.0))), 1.0)), min(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 0.0, round(length(normalize(1.0))), 1.0), min(vec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 0.0, round(length(normalize(1.0))), 1.0), vec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 0.0, round(length(normalize(1.0))), 1.0)))), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 0.0, round(length(normalize(1.0))), 1.0)), 1.0 * (float(vec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 0.0, round(length(normalize(1.0))), 1.0))))))) > injectionSwitch.y, true, true)))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))) || false)))))))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(79197)))) / 1)), ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(79197)))) / 1))), (~ (uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(79197)))) / 1)))) | (~ (uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(79197)))) / 1)))))), ((~ (uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(79197)))) / 1))))) + 0u), max((~ (uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(79197)))) / 1)))), (~ (uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(79197)))) / 1))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY(max(4, 4), clamp(max(4, 4), max(4, 4), max(4, 4)))), 64, 4);
                 for(int _injected_loop_counter = (16427 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
                    barrier();
                   for(int _injected_loop_counter = (1 | _GLF_IDENTITY(1, 0 ^ (1))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                        barrier();
                      }
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      {
                       do
                        {
                         barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                    }
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))))));
                 do
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(true, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec3(true, false, false)), false, false)), true && (_GLF_IDENTITY(bool(bvec3(bool(bvec3(true, false, false)), false, false)), bool(bvec3(bool(bvec3(bool(bvec3(true, false, false)), false, false)), false, true)))))))))
                          {
                           barrier();
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                      }
                     else
                      {
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bool(true))))), bool(bvec4(bool(bvec4(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true))))))), false, true, false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), false || (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), false || (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), false || (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))))));
            }
           while(_GLF_WRAPPED_LOOP(false));
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(false)), true && (_GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(false)), (false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))))) && true)))))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) && _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true))))))))) && true)));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0)) >> ((0 >> _GLF_IDENTITY(int(1), int(1))) << _GLF_IDENTITY(int(7), int(7)))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       while(_GLF_WRAPPED_LOOP(false));
       barrier();
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1], _GLF_IDENTITY(float(vec2(injectionSwitch[1], 0.0)), min(float(vec2(injectionSwitch[1], 0.0)), float(vec2(_GLF_IDENTITY(injectionSwitch[1], float(_GLF_IDENTITY(mat4x2(injectionSwitch[1], 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(injectionSwitch[1], 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))), 0.0))))))).y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), min(_GLF_IDENTITY(_GLF_IDENTITY(int(5), 0 ^ (int(5))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(int(5), 0 ^ (int(5))), 0, 1, _GLF_IDENTITY(0, clamp(0, 0, 0)))), max(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(int(5), 0 ^ (int(5))), 0, 1, 0)), (int(ivec4(_GLF_IDENTITY(int(5), 0 ^ (int(5))), 0, 1, 0))) ^ 0), int(ivec4(_GLF_IDENTITY(int(5), 0 ^ (int(5))), 0, 1, 0))))), int(5))), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), min(_GLF_IDENTITY(int(5), 0 ^ (int(5))), int(5))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(5), min(_GLF_IDENTITY(int(5), 0 ^ (int(5))), _GLF_IDENTITY(int(5), ~ (~ (int(5)))))))), int(5)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), min(_GLF_IDENTITY(int(5), 0 ^ (_GLF_IDENTITY(int(5), ~ (~ (int(5)))))), int(5))), int(5)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(5), min(_GLF_IDENTITY(int(5), 0 ^ (int(5))), int(5))), _GLF_IDENTITY(int(5), ~ (~ (int(5))))), 1, 0, 1))), 1, 1, 1)), (_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), min(_GLF_IDENTITY(int(5), 0 ^ (_GLF_IDENTITY(int(5), ~ (~ (int(5)))))), int(5))), int(5)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(5), min(_GLF_IDENTITY(int(5), 0 ^ (int(5))), int(5))), _GLF_IDENTITY(int(5), ~ (~ (int(5))))), 1, 0, 1))), 1, 1, 1)), (int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), min(_GLF_IDENTITY(int(5), 0 ^ (_GLF_IDENTITY(int(5), ~ (~ (int(5)))))), int(5))), int(5)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(5), min(_GLF_IDENTITY(int(5), 0 ^ (int(5))), int(5))), _GLF_IDENTITY(int(5), ~ (~ (int(5))))), 1, 0, 1))), 1, 1, 1))) >> 0)) << 0)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(int(5), max(int(5), _GLF_IDENTITY(int(5), ~ (~ (int(5)))))), _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) | (0)), 0)) ^ (int(5))), _GLF_IDENTITY(int(_GLF_IDENTITY(5, ~ (~ (_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(-71591))))))), (int(_GLF_IDENTITY(5, ~ (~ (_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(-71591)))))))) >> 0)), (min(_GLF_IDENTITY(int(_GLF_IDENTITY(5, (false ? _GLF_FUZZED((++ _injected_loop_counter)) : 5))), 0 ^ (int(5))), int(5))) | (min(_GLF_IDENTITY(int(5), 0 ^ (int(5))), int(5))))), int(_GLF_IDENTITY(5, max(5, _GLF_IDENTITY(5, (5) >> 0))))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), min(_GLF_IDENTITY(int(5), 0 ^ (int(5))), int(5))), int(5)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(5), min(_GLF_IDENTITY(_GLF_IDENTITY(int(5), 0 ^ (int(5))), (_GLF_IDENTITY(int(5), 0 ^ (int(5)))) >> 0), int(5))), int(5)), 1, 0, _GLF_IDENTITY(1, min(1, 1))))), 1, 1, 1))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(5), min(_GLF_IDENTITY(int(5), 0 ^ (int(5))), int(_GLF_IDENTITY(5, (5) - (0 | 0))))), int(5)))))); _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))));
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), true, true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), float(mat2x4(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))), 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), sqrt(0.0), 1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0))))) > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
  }
}
