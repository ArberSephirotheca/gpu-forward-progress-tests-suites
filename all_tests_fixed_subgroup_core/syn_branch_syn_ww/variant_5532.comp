#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_25 {
 bvec3 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_26 {
 _GLF_struct_25 _f0;
} ;

struct _GLF_struct_27 {
 _GLF_struct_26 _f0;
 uint workgroup_size;
 uvec4 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_23 {
 uvec3 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_21 {
 mat4x2 _f0;
} ;

struct _GLF_struct_20 {
 float _f0;
 ivec3 _f1;
 mat4x3 _f2;
 bvec2 _f3;
 vec3 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_22 {
 _GLF_struct_20 _f0;
 int _f1;
 _GLF_struct_21 _f2;
} ;

struct _GLF_struct_24 {
 _GLF_struct_22 _f0;
 _GLF_struct_23 _f1;
 bvec4 _f2;
 ivec2 _f3;
 uvec3 _f4;
 uint subgroup_id;
 mat4x2 _f5;
} ;

struct _GLF_struct_17 {
 ivec3 _f0;
} ;

struct _GLF_struct_16 {
 mat2x4 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_15 {
 mat4x2 _f0;
} ;

struct _GLF_struct_18 {
 _GLF_struct_15 _f0;
 ivec3 _f1;
 _GLF_struct_16 _f2;
 _GLF_struct_17 _f3;
} ;

struct _GLF_struct_13 {
 int _f0;
 bool _f1;
 mat4 _f2;
 int _f3;
} ;

struct _GLF_struct_14 {
 _GLF_struct_13 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_11 {
 ivec2 _f0;
 uint _f1;
 mat2 _f2;
 bvec4 _f3;
 ivec2 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_12 {
 ivec4 _f0;
 _GLF_struct_11 _f1;
 bool _f2;
} ;

struct _GLF_struct_10 {
 mat2 _f0;
} ;

struct _GLF_struct_8 {
 int _f0;
 mat2x3 _f1;
 mat2x3 _f2;
 ivec4 _f3;
 int _f4;
 mat3x4 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_7 {
 float _f0;
 uvec3 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_9 {
 _GLF_struct_7 _f0;
 ivec2 _f1;
 _GLF_struct_8 _f2;
 mat4 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_19 {
 uint num_workgroup;
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
 _GLF_struct_12 _f2;
 _GLF_struct_14 _f3;
 mat2x4 _f4;
 _GLF_struct_18 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_4 {
 uvec2 _f0;
 mat4 _f1;
 ivec2 _f2;
 mat2 _f3;
 vec2 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_3 {
 mat3x2 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_2 {
 mat2x3 _f0;
 vec2 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_5 {
 ivec3 _f0;
 _GLF_struct_2 _f1;
 uint _f2;
 ivec4 _f3;
 _GLF_struct_3 _f4;
 _GLF_struct_4 _f5;
} ;

struct _GLF_struct_0 {
 vec2 _f0;
 ivec2 _f1;
 int _f2;
 mat3x2 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_1 {
 vec4 _f0;
 float _f1;
 _GLF_struct_0 _f2;
 uvec4 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_6 {
 _GLF_struct_1 _f0;
 _GLF_struct_5 _f1;
 bool _f2;
 uint next_virtual_gid;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_24 _GLF_struct_replacement_24 = _GLF_struct_24(_GLF_struct_22(_GLF_struct_20(1.0, _GLF_IDENTITY(ivec3(1), min(ivec3(1), ivec3(1))), mat4x3(1.0), bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), vec3(1.0), bvec4(true)), 1, _GLF_struct_21(mat4x2(1.0))), _GLF_struct_23(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) / uvec3(1u, 1u, 1u)), mat4x2(1.0)), bvec4(true), ivec2(1), uvec3(1u), gl_SubgroupID, mat4x2(1.0));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(asinh(-6.3)) : injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(asinh(_GLF_IDENTITY(-6.3, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(-6.3, min(-6.3, -6.3)), 0.0, 1.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, sin(0.0), 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)), 0.0, 0.0), mat2x3(mat3x4(mat2x3(_GLF_IDENTITY(-6.3, min(-6.3, -6.3)), 0.0, 1.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, sin(0.0), 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)), 0.0, 0.0)))))))) : injectionSwitch.x)) > injectionSwitch.y))) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_19 _GLF_struct_replacement_19 = _GLF_struct_19(gl_NumWorkGroups.x, _GLF_struct_9(_GLF_struct_7(1.0, uvec3(1u), mat2(1.0)), ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 ^ (1))))) | (1))), _GLF_struct_8(1, mat2x3(1.0), mat2x3(1.0), _GLF_IDENTITY(ivec4(1), ivec4(1, 1, 1, 1) * (_GLF_IDENTITY(ivec4(1), (false ? _GLF_FUZZED(ivec4(78205, 34385, 96290, 14077)) : ivec4(1))))), 1, mat3x4(1.0), uvec2(1u)), mat4(1.0), mat4x2(1.0)), _GLF_struct_10(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0))), _GLF_struct_12(ivec4(1), _GLF_struct_11(ivec2(1), 1u, mat2(1.0), bvec4(true), ivec2(1), bvec2(true)), _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), false, false)))), _GLF_struct_14(_GLF_struct_13(1, true, mat4(1.0), _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | 0), 1)), int(ivec4(1, 0, _GLF_IDENTITY(1, min(1, 1)), 1)))) >> 0)))), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), (_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), min(~ (~ (1u)), _GLF_IDENTITY(~ (~ (1u)), (~ (~ (1u))) >> 0u))))) | 0u))), mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 0.0))), (false ? _GLF_FUZZED(1.6) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, 1.0, 0.0)), clamp(_GLF_IDENTITY(float(mat2(1.0, 1.0, 1.0, 0.0)), min(float(mat2(1.0, 1.0, 1.0, 0.0)), float(mat2(1.0, 1.0, 1.0, 0.0)))), float(mat2(1.0, 1.0, 1.0, 0.0)), float(mat2(1.0, 1.0, 1.0, 0.0))))), (false ? _GLF_FUZZED(-7.5) : _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, 1.0, 0.0)), clamp(_GLF_IDENTITY(float(mat2(1.0, 1.0, 1.0, 0.0)), min(float(mat2(1.0, 1.0, 1.0, 0.0)), float(mat2(1.0, 1.0, 1.0, 0.0)))), float(mat2(1.0, 1.0, 1.0, 0.0)), float(mat2(1.0, 1.0, 1.0, 0.0))))))), min(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(max(float(mat2(1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat2(1.0, 1.0, 1.0, 0.0)), (false ? _GLF_FUZZED(-3161.4160) : float(mat2(1.0, 1.0, 1.0, 0.0))))), float(_GLF_IDENTITY(vec3(max(float(mat2(1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat2(1.0, 1.0, 1.0, 0.0)), (false ? _GLF_FUZZED(-3161.4160) : float(mat2(1.0, 1.0, 1.0, 0.0))))), 1.0, 1.0), mix(vec3((vec3(max(float(mat2(1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat2(1.0, 1.0, 1.0, 0.0)), (false ? _GLF_FUZZED(-3161.4160) : float(mat2(1.0, 1.0, 1.0, 0.0))))), 1.0, 1.0))[0], (vec3(max(float(mat2(1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat2(1.0, 1.0, 1.0, 0.0)), (false ? _GLF_FUZZED(-3161.4160) : float(mat2(1.0, 1.0, 1.0, 0.0))))), 1.0, 1.0))[1], (vec3(max(float(mat2(1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat2(1.0, 1.0, 1.0, 0.0)), (false ? _GLF_FUZZED(-3161.4160) : float(mat2(1.0, 1.0, 1.0, 0.0))))), 1.0, 1.0))[2]), vec3(_GLF_FUZZED(-7.8), _GLF_FUZZED(-320.088), _GLF_FUZZED(vec3(-976.757, 80.53, -3904.4037).g)), bvec3(false, false, false))))))), float(vec2(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))))))))))))), _GLF_struct_18(_GLF_struct_15(mat4x2(1.0)), ivec3(1), _GLF_struct_16(mat2x4(1.0), bvec4(true)), _GLF_struct_17(ivec3(1))), ivec4(1));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, round(length(normalize(1.0))) * (injectionSwitch.x)), injectionSwitch.x))) * 1.0), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  barrier();
 _GLF_struct_27 _GLF_struct_replacement_27 = _GLF_struct_27(_GLF_struct_26(_GLF_struct_25(bvec3(true), mat3(1.0))), gl_WorkGroupSize.x, _GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), max(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u)))) | (uvec4(0u, 0u, 0u, 0u))) ^ (uvec4(1u))), mat3x4(1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_struct_replacement_27.workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_id * subgroup_size, (_GLF_struct_replacement_24.subgroup_id * subgroup_size) * 1u), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_struct_replacement_24.subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), min(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) ^ (_GLF_struct_replacement_24.subgroup_id * subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_struct_replacement_24.subgroup_id * subgroup_size)))), _GLF_IDENTITY(max(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_id * subgroup_size, (_GLF_struct_replacement_24.subgroup_id * subgroup_size) | 0u))), _GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_id * subgroup_size, uint(uvec3(_GLF_struct_replacement_24.subgroup_id * subgroup_size, 0u, 1u))), _GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_id * subgroup_size, (_GLF_struct_replacement_24.subgroup_id * subgroup_size) ^ 0u))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u + (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * sqrt(1.0))), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ (_GLF_struct_replacement_24.subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_struct_replacement_24.subgroup_id * subgroup_size))), 0u | (max(workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u + (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ (_GLF_struct_replacement_24.subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_24.subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_struct_replacement_24.subgroup_id * subgroup_size)))))) + subgroup_local_id;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_1(vec4(1.0), 1.0, _GLF_struct_0(vec2(1.0), ivec2(1), 1, mat3x2(1.0), ivec3(1)), uvec4(1u), ivec3(1)), _GLF_struct_5(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), min(1, 1))), _GLF_struct_2(mat2x3(1.0), vec2(1.0), mat4(1.0)), 1u, ivec4(1), _GLF_struct_3(mat3x2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-92.98)), bool(false)))))), vec3(1.0)), _GLF_struct_4(uvec2(1u), mat4(1.0), ivec2(1), mat2(1.0), vec2(_GLF_IDENTITY(1.0, (1.0) + _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))), vec2(1.0))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), false || (bool(true))))), workgroup_base + _GLF_struct_replacement_24.subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size));
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, true, false))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))), (_GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true))))) || false), true)))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(_GLF_IDENTITY(false, (false) && true))), _GLF_FUZZED(-81.34)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 0 | (1))]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false || (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) * 1.0)))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(bool((injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (bool(bool((injectionSwitch.x > injectionSwitch.y)))), false, false))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))))), true, true, false)), _GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true, true, false))), false || (true && (bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true, true, false)))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))))), true, true, false)), _GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true, true, false))), false || (true && (bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true, true, false)))))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))), false, true, true)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))), false, true, true)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))), true, true, false)), _GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true, true, false))), false || (true && (bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true, true, false))))))))) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[_GLF_struct_replacement_6.next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false)))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && _GLF_IDENTITY((bool(bvec3(false, true, false))), (_GLF_IDENTITY((bool(bvec3(false, true, false))), ((bool(bvec3(false, true, false)))) && true)) && _GLF_IDENTITY(true, false || (true)))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false)))))), false || (true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))), true && (bool(bvec3(false, true, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))), false, false, false))))), true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && _GLF_IDENTITY((bool(bvec3(false, true, false))), (_GLF_IDENTITY((bool(bvec3(false, true, false))), ((bool(bvec3(false, true, false)))) && true)) && _GLF_IDENTITY(true, false || (true)))))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && _GLF_IDENTITY((bool(bvec3(false, true, false))), (_GLF_IDENTITY((bool(bvec3(false, true, false))), ((bool(bvec3(false, true, false)))) && true)) && _GLF_IDENTITY(true, false || (true)))))))), false)), false || (_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && _GLF_IDENTITY((bool(bvec3(false, true, false))), (_GLF_IDENTITY((bool(bvec3(false, true, false))), ((bool(bvec3(false, true, false)))) && true)) && _GLF_IDENTITY(true, false || (true)))))))), false)), bool(bvec4(bool(bvec2((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && _GLF_IDENTITY((bool(bvec3(false, true, false))), (_GLF_IDENTITY((bool(bvec3(false, true, false))), ((bool(bvec3(false, true, false)))) && true)) && _GLF_IDENTITY(true, false || (true)))))))), false)), true, false, false)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))), false, false, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(true, false || (true)), false)), true && (bool(bvec3(false, true, false))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false)), true && (bool(bvec3(false, true, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, false || (true)), true))) && ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (bool(bvec3(false, true, false)))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (bool(bvec3(false, true, false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), false, false))))))), true, true)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && _GLF_IDENTITY((bool(bvec3(false, true, false))), (_GLF_IDENTITY((bool(bvec3(false, true, false))), ((bool(bvec3(false, true, false)))) && true)) && _GLF_IDENTITY(true, false || (true)))))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && _GLF_IDENTITY((bool(bvec3(false, true, false))), (_GLF_IDENTITY((bool(bvec3(false, true, false))), ((bool(bvec3(false, true, false)))) && true)) && _GLF_IDENTITY(true, false || (true)))))))), false)), false || (_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && _GLF_IDENTITY((bool(bvec3(false, true, false))), (_GLF_IDENTITY((bool(bvec3(false, true, false))), ((bool(bvec3(false, true, false)))) && true)) && _GLF_IDENTITY(true, false || (true)))))))), false)), bool(bvec4(bool(bvec2((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && _GLF_IDENTITY((bool(bvec3(false, true, false))), (_GLF_IDENTITY((bool(bvec3(false, true, false))), ((bool(bvec3(false, true, false)))) && true)) && _GLF_IDENTITY(true, false || (true)))))))), false)), true, false, false)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))), false, false, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(true, false || (true)), false)), true && (bool(bvec3(false, true, false))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false)), true && (bool(bvec3(false, true, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, false || (true)), true))) && ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (bool(bvec3(false, true, false)))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (bool(bvec3(false, true, false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), false, false))))))), true, true)), bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && _GLF_IDENTITY((bool(bvec3(false, true, false))), (_GLF_IDENTITY((bool(bvec3(false, true, false))), ((bool(bvec3(false, true, false)))) && true)) && _GLF_IDENTITY(true, false || (true)))))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && _GLF_IDENTITY((bool(bvec3(false, true, false))), (_GLF_IDENTITY((bool(bvec3(false, true, false))), ((bool(bvec3(false, true, false)))) && true)) && _GLF_IDENTITY(true, false || (true)))))))), false)), false || (_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && _GLF_IDENTITY((bool(bvec3(false, true, false))), (_GLF_IDENTITY((bool(bvec3(false, true, false))), ((bool(bvec3(false, true, false)))) && true)) && _GLF_IDENTITY(true, false || (true)))))))), false)), bool(bvec4(bool(bvec2((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && _GLF_IDENTITY((bool(bvec3(false, true, false))), (_GLF_IDENTITY((bool(bvec3(false, true, false))), ((bool(bvec3(false, true, false)))) && true)) && _GLF_IDENTITY(true, false || (true)))))))), false)), true, false, false)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))), false, false, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(true, false || (true)), false)), true && (bool(bvec3(false, true, false))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false)), true && (bool(bvec3(false, true, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, false || (true)), true))) && ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (bool(bvec3(false, true, false)))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (bool(bvec3(false, true, false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), false, false))))))), true, true)))))))), _GLF_IDENTITY(true && (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false)))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, false)), false || (bool(bvec3(false, true, false)))), true && _GLF_IDENTITY((bool(bvec3(false, true, false))), (_GLF_IDENTITY((bool(bvec3(false, true, false))), ((bool(bvec3(false, true, false)))) && true)) && _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false || (true)))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))), _GLF_IDENTITY(false, ! (! (false))), false, false))))), true, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true && (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false)))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, false)), false || (bool(bvec3(false, true, false)))), true && _GLF_IDENTITY((bool(bvec3(false, true, false))), (_GLF_IDENTITY((bool(bvec3(false, true, false))), ((bool(bvec3(false, true, false)))) && true)) && _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false || (true)))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))), _GLF_IDENTITY(false, ! (! (false))), false, false))))), true, true)))), bool(bvec2(true && (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false)))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, false)), false || (bool(bvec3(false, true, false)))), true && _GLF_IDENTITY((bool(bvec3(false, true, false))), (_GLF_IDENTITY((bool(bvec3(false, true, false))), ((bool(bvec3(false, true, false)))) && true)) && _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false || (true)))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))), _GLF_IDENTITY(false, ! (! (false))), false, false))))), true, true)))), false))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), vec2(vec4(vec2(injectionSwitch.x, 1.0), 1.0, 0.0)))), max(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), vec2(vec4(vec2(injectionSwitch.x, 1.0), 1.0, 0.0)))), float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), vec2(vec4(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), min(vec2(injectionSwitch.x, 1.0), vec2(injectionSwitch.x, 1.0))), 1.0, 0.0))))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[_GLF_struct_replacement_6.next_virtual_gid], uint(2), 4, 64, 4);
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false)), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), ((_GLF_IDENTITY(! (false), true && (! (false))))) && true)), false || (bool(_GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), ((_GLF_IDENTITY(! (false), true && (! (false))))) && true))))))) || false))) || false))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}
