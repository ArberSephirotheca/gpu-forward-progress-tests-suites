#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-4.0))) : _GLF_FUZZED(fma(82.18, -3.4, -9.6)))) > injectionSwitch.y))))), (_GLF_IDENTITY(((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)) && _GLF_IDENTITY(true, bool(bvec2(true, true)))) && true))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-4.0))) : _GLF_FUZZED(fma(82.18, -3.4, -9.6)))) > injectionSwitch.y))))), (_GLF_IDENTITY(((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), (((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)) && _GLF_IDENTITY(true, bool(bvec2(true, true)))) && true, true && (_GLF_IDENTITY(_GLF_IDENTITY(((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-4.0))) : _GLF_FUZZED(fma(82.18, -3.4, -9.6)))) > injectionSwitch.y))))), (_GLF_IDENTITY(((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), (((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)) && _GLF_IDENTITY(true, bool(bvec2(true, true)))) && true, (_GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-4.0))) : _GLF_FUZZED(fma(82.18, -3.4, -9.6)))) > injectionSwitch.y)))), false || ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-4.0))) : _GLF_FUZZED(fma(82.18, -3.4, -9.6)))) > injectionSwitch.y))))))), (_GLF_IDENTITY(((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), (((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)) && _GLF_IDENTITY(true, bool(bvec2(true, true)))) && true) || false)))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-4.0))) : _GLF_FUZZED(fma(82.18, -3.4, -9.6)))) > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x)))))))) && true), (_GLF_IDENTITY(((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)) || false)) && _GLF_IDENTITY(true, bool(bvec2(true, true)))) && true))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, sqrt(1.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED((804.072 - smoothstep(-2.2, 84.16, 308.176))))), 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec4(-9.2, 1.2, -3895.2740, 470.052)) : vec4(injectionSwitch.y, sqrt(1.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED((804.072 - smoothstep(-2.2, 84.16, 308.176))))), 0.0))))))), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-4.0))) : _GLF_FUZZED(fma(82.18, -3.4, -9.6)))) > injectionSwitch.y))))), (_GLF_IDENTITY(((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), (((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4(_GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))))) && true)))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(957.546)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2435.8245), _GLF_FUZZED(-29.50)), bvec2(false, false))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / (_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u)) & uvec3(1u, 1u, 1u))).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, true))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 1u))), 1u, 1u, 1u), (true ? uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 1u))), 1u, 1u, 1u) : _GLF_FUZZED(uvec4(8984u, 139063u, 172030u, 118714u)))))) * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(73319) : 1))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(1, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, max(0, 0))))) ^ _GLF_IDENTITY((1), min((1), (1))))), _GLF_IDENTITY(4, min(4, 4)), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), min(sqrt(vec2(1.0, 1.0)), sqrt(vec2(1.0, 1.0))))).y)))))
    barrier();
   barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-5.6))) > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) && true))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), true, true, true))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), true, true, true)))))) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch)).x > injectionSwitch.y)), false, false)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(vec3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), round(length(normalize(vec3(1.0, 1.0, 1.0)))))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, abs(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(-8.0), _GLF_FUZZED(119.420)), vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), bvec2(true, true)))) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, false))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))) && true), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (true && (injectionSwitch.x > injectionSwitch.y)) || false))), false || (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (true && (injectionSwitch.x > injectionSwitch.y)) || false)))))), true, false)))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (true && (injectionSwitch.x > injectionSwitch.y)) || false)))), true, false)))), false || (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (true && (_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x > injectionSwitch.y)) || false)))), true, false)))))))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (true && (injectionSwitch.x > injectionSwitch.y)) || false)))), true, false)))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (true && (injectionSwitch.x > injectionSwitch.y)) || false)))), true, false)))), false || (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (true && (_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x > injectionSwitch.y)) || false)))), true, false))))))))))))))) && true), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) && true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-794.752), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.8)), bvec2(true, _GLF_IDENTITY(false, (false) && true)))).y)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true))), bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), float(_GLF_FUZZED(38.30)), bool(false))) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) / 1.0)), float(_GLF_FUZZED(38.30)), bool(false))) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), true, false))))), ! (! ((! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) : _GLF_FUZZED(9.4))) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true))), bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, determinant(mat4(0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, exp(0.0))), max(float(mat2x3(injectionSwitch.x, 0.0, determinant(mat4(0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, exp(0.0))), float(mat2x3(injectionSwitch.x, 0.0, determinant(mat4(0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, exp(0.0)))))), _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, sin(0.0), 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, sin(0.0), 0.0)))) + (injectionSwitch.x))), float(_GLF_FUZZED(38.30)), bool(false))) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, false))))))))), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false))))), bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0)))), (false ? _GLF_FUZZED(injectionSwitch) : max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0))))))).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, false)))))), false, false))), false)))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, false)))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_IDENTITY(false, (false) && true))))), ((_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_IDENTITY(false, (false) && true)))))) || false)), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (true && (injectionSwitch.x > injectionSwitch.y)) || false)))), true, false)))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (true && (injectionSwitch.x > injectionSwitch.y)) || false)))), true, false)))), false || (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (true && (_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x > injectionSwitch.y)) || false)))), true, false)))))))))))) && true), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) && true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(1.0) * ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-794.752), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.8)), bvec2(true, false))).y)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true))), bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), float(_GLF_FUZZED(38.30)), bool(false))) > injectionSwitch.y, _GLF_IDENTITY(true, true && (true)) && (injectionSwitch.x > injectionSwitch.y)))), true, false))))), ! (! ((! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) : _GLF_FUZZED(9.4))) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true))), bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), float(_GLF_FUZZED(38.30)), bool(false))) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, false))))))))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(1.0) * ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-794.752), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.8)), bvec2(true, false))).y)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-395.986)), bool(false))), true && (injectionSwitch.x > injectionSwitch.y))) && true))), bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), float(_GLF_FUZZED(38.30)), bool(false))) > injectionSwitch.y, _GLF_IDENTITY(true, true && (true)) && (injectionSwitch.x > injectionSwitch.y)))), true, false))))), ! (! ((! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(990.955)), vec2(_GLF_FUZZED(-262.293), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x, float(float(injectionSwitch.x))) : _GLF_FUZZED(9.4))) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true))), bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x))), float(_GLF_FUZZED(38.30)), bool(false))) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, false))))))))))), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, false), false))))))))))), false, false))), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, false), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, false), true))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, false)), bvec3(bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))))))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (true && (injectionSwitch.x > injectionSwitch.y)) || false)))), true, false)))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (true && (injectionSwitch.x > injectionSwitch.y)) || false)))), true, false)))), false || (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (true && (_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)) || false)))), true, false)))))))))))) && true), false, _GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec3(false || (false), false, false)))))) && true)), bool(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec3(false || (false), false, false)))))) && true))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-794.752), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.8)), bvec2(true, false))).y)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true && (injectionSwitch.x > injectionSwitch.y)), false, false), true))), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, true && (injectionSwitch.x > injectionSwitch.y)), false, false), true))), false))))) || false))) && true))), bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), float(_GLF_FUZZED(38.30)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, false))))), ! (! ((! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(9.4, clamp(_GLF_IDENTITY(9.4, min(9.4, 9.4)), 9.4, 9.4))), float(mat2x4(_GLF_FUZZED(9.4), determinant(mat3(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, tan(0.0), 1.0, 0.0))))) > injectionSwitch.y, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)) && (injectionSwitch.x > injectionSwitch.y))) && true))), bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), float(_GLF_FUZZED(38.30)), bool(false))) > injectionSwitch.y, _GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), false || (false || (true)))) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2.9)), bvec2(true, false))).y)))), true, false))))))))), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, false)))))), false, false))), false))))))))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.6)), float(injectionSwitch.y), bool(true))))), true && (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY((true && (injectionSwitch.x > injectionSwitch.y)), ! (! ((true && (injectionSwitch.x > injectionSwitch.y))))), true, false, true))), ! (_GLF_IDENTITY(! ((true && (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(vec2(1341.5031, -1.9)) : _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))).x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! ((true && (injectionSwitch.x > injectionSwitch.y))), (! ((true && (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, sin(0.0)))).x > injectionSwitch.y)))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! ((true && (injectionSwitch.x > injectionSwitch.y))), (! ((true && (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, sin(0.0)))).x > injectionSwitch.y)))) || false)), bool(bvec4((_GLF_IDENTITY(! ((true && (injectionSwitch.x > injectionSwitch.y))), (! ((true && (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, sin(0.0)))).x > injectionSwitch.y)))) || false)), true, true, false)))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(! ((true && (injectionSwitch.x > injectionSwitch.y))), (! ((true && (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, sin(0.0)))).x > injectionSwitch.y)))) || false)), bool(bvec4((_GLF_IDENTITY(! ((true && (injectionSwitch.x > injectionSwitch.y))), (! ((true && (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, sin(0.0)))).x > injectionSwitch.y)))) || false)), true, true, false))))))))))))), (_GLF_IDENTITY(! (true && (injectionSwitch.x > injectionSwitch.y)), bool(bool(! (true && (injectionSwitch.x > injectionSwitch.y)))))) || false))))), true), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.0)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true))) > injectionSwitch.y), ! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.0)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true))) > injectionSwitch.y)), (! (true && (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.0)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true))) > injectionSwitch.y))) || false))))), true), true))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true), true))), true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0), (true ? _GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0), mat2x3(mat4(mat2x3(injectionSwitch.y, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0)))) : _GLF_FUZZED(mat2x3(107.548, 7.7, -8.2, 1274.1146, 0.8, -4.1))))))))), true), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true), true))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), true), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true), true))), true))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true), true))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0))), injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true), true))), true)))))))), ((bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true), true))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0))), (float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0)))) - 0.0)), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(7.0))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0)))))), injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true), true))), true))))))))) && true) || false)), bool(bvec4(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true), true))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true), true))), true))))))), (bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true), true))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), true))), true)))))))) || false)), true, true, false))))))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))))), false)))))), false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) / 1.0) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0, 0.0))), injectionSwitch)).x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, false)))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0, 0.0))), injectionSwitch)).x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, false))))))))), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) / 1.0) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0, 0.0))), injectionSwitch)).x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, false)))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0, 0.0))), injectionSwitch)).x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, false))))))))), false, false))), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), min(_GLF_FUZZED(-6680.4168), _GLF_FUZZED(-6680.4168))), 0.0, 1.0, 0.0, 1.0, cos(0.0)))), _GLF_FUZZED(-0.9)), bvec2(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x) / 1.0), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, tan(0.0), length(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, 1.0)), 1.0, 0.0, exp(0.0), sqrt(0.0), determinant(mat3(1.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, log(1.0), 1.0, 1.0)), 1.0)), (false ? _GLF_FUZZED(-73.39) : float(mat4x3(injectionSwitch.y, 1.0, tan(0.0), length(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, 1.0)), 1.0, 0.0, exp(0.0), sqrt(0.0), determinant(mat3(1.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, log(1.0), 1.0, 1.0)), 1.0))))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true, false)))))), _GLF_IDENTITY(false, true && (false)), false))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-6680.4168, max(-6680.4168, -6680.4168))), float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), min(_GLF_FUZZED(-6680.4168), _GLF_FUZZED(-6680.4168))), 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9648.4757) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, cos(0.0)))), _GLF_FUZZED(-0.9)), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))).x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true, false)))))), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) - vec2(0.0, 0.0))).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), min(_GLF_FUZZED(-6680.4168), _GLF_FUZZED(-6680.4168))), 0.0, 1.0, 0.0, 1.0, cos(0.0)))), _GLF_IDENTITY(_GLF_FUZZED(-0.9), mix(float(_GLF_FUZZED(2.5)), float(_GLF_FUZZED(-0.9)), bool(true)))), bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true, false)))))), false, false))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-45.30, 800.286)) : _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(4.4)), float((injectionSwitch)[0]), bool(true))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), min(_GLF_FUZZED(-6680.4168), _GLF_FUZZED(-6680.4168))), 0.0, 1.0, 0.0, 1.0, cos(0.0)))), _GLF_FUZZED(-0.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(0.0, 0.0))).x > injectionSwitch.y))))).x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true, false)))))), false, false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-45.30, 800.286)) : _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(4.4)), float((injectionSwitch)[0]), bool(true))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), min(_GLF_FUZZED(-6680.4168), _GLF_FUZZED(-6680.4168))), 0.0, 1.0, 0.0, 1.0, cos(0.0)))), _GLF_FUZZED(-0.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(0.0, 0.0))).x > injectionSwitch.y))))).x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))), true, false)))))), false, false)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-45.30, 800.286)) : _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(4.4)), float((injectionSwitch)[0]), bool(true))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), min(_GLF_FUZZED(-6680.4168), _GLF_FUZZED(-6680.4168))), 0.0, 1.0, 0.0, 1.0, cos(0.0)))), _GLF_FUZZED(-0.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(0.0, 0.0))).x > injectionSwitch.y))))).x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true, false)))))), false, false)))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-45.30, 800.286)) : _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(4.4)), float((injectionSwitch)[0]), bool(true))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), min(_GLF_FUZZED(-6680.4168), _GLF_FUZZED(-6680.4168))), 0.0, 1.0, 0.0, 1.0, cos(0.0)))), _GLF_FUZZED(-0.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(0.0, 0.0))).x > injectionSwitch.y))))).x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true, false)))))), false, false)))))), false)))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, log(1.0), 1.0))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), min(_GLF_FUZZED(-6680.4168), _GLF_FUZZED(-6680.4168))), 0.0, 1.0, 0.0, 1.0, cos(0.0)))), _GLF_FUZZED(-0.9)), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))))))))).x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec2(bool((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false)))))))), true, false)))))), false, false))), false))))))))), false)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), min(_GLF_FUZZED(-6680.4168), _GLF_FUZZED(-6680.4168))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 1.0, cos(0.0)))), _GLF_FUZZED(-0.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x) / 1.0), injectionSwitch.x)), float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), min(_GLF_FUZZED(-6680.4168), _GLF_FUZZED(-6680.4168))), 0.0, 1.0, 0.0, 1.0, cos(0.0)))), _GLF_FUZZED(-0.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x) / 1.0), injectionSwitch.x)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))) > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), min(_GLF_FUZZED(-6680.4168), _GLF_FUZZED(-6680.4168))), 0.0, 1.0, 0.0, 1.0, cos(0.0)))), _GLF_FUZZED(-0.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x) / 1.0), injectionSwitch.x)), float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), min(_GLF_FUZZED(-6680.4168), _GLF_FUZZED(-6680.4168))), 0.0, 1.0, 0.0, 1.0, cos(0.0)))), _GLF_FUZZED(-0.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x) / 1.0), injectionSwitch.x)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(sqrt(0.0), float(vec4(_GLF_IDENTITY(sqrt(0.0), (true ? sqrt(0.0) : _GLF_FUZZED(-6.4))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))) > injectionSwitch.y, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), min(_GLF_FUZZED(-6680.4168), _GLF_FUZZED(-6680.4168))), 0.0, 1.0, 0.0, 1.0, cos(0.0)))), _GLF_FUZZED(-0.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x) / 1.0), injectionSwitch.x)), float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), min(_GLF_FUZZED(-6680.4168), _GLF_FUZZED(-6680.4168))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), cos(0.0)))), _GLF_FUZZED(-0.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x) / 1.0), injectionSwitch.x)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))) > injectionSwitch.y, true, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), min(_GLF_FUZZED(-6680.4168), _GLF_FUZZED(-6680.4168))), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(cos(0.0), (cos(0.0)) * 1.0)))), _GLF_FUZZED(-0.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x) / 1.0), injectionSwitch.x)), float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), min(_GLF_FUZZED(-6680.4168), _GLF_FUZZED(-6680.4168))), 0.0, 1.0, 0.0, 1.0, cos(0.0)))), _GLF_FUZZED(-0.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x) / 1.0), injectionSwitch.x)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))) > injectionSwitch.y, true, true), false)))))))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true, false)))))), false, false))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), min(_GLF_FUZZED(-6680.4168), _GLF_FUZZED(-6680.4168))), 0.0, 1.0, 0.0, 1.0, cos(0.0)))), _GLF_FUZZED(-0.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x) / _GLF_IDENTITY(1.0, float(mat2x4(1.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0)))), injectionSwitch.x)) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true, false)))))), false, false))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), (_GLF_FUZZED(-6680.4168)) / 1.0), float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), min(_GLF_FUZZED(-6680.4168), _GLF_FUZZED(-6680.4168))), 0.0, 1.0, 0.0, 1.0, cos(0.0)))), _GLF_FUZZED(-0.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(9.4)), min(float(_GLF_FUZZED(9.4)), float(_GLF_FUZZED(9.4)))), bool(false)))))))))).x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true, false))), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0 + (float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))))))), true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)), false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), min(_GLF_FUZZED(-6680.4168), _GLF_FUZZED(-6680.4168))), 0.0, 1.0, 0.0, 1.0, cos(0.0))), (float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), min(_GLF_FUZZED(-6680.4168), _GLF_FUZZED(-6680.4168))), 0.0, 1.0, 0.0, 1.0, cos(0.0)))) / 1.0)), _GLF_FUZZED(-0.9)), bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true, false)))))), true, false))), _GLF_IDENTITY(false, (false) && true), false))), _GLF_IDENTITY(false, (false) || false)))))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), min(_GLF_FUZZED(_GLF_IDENTITY(-6680.4168, clamp(-6680.4168, -6680.4168, -6680.4168))), _GLF_FUZZED(-6680.4168))), 0.0, 1.0, 0.0, 1.0, cos(0.0)))), _GLF_FUZZED(-0.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true, false)))))), false, false))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (injectionSwitch.x)), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), clamp(_GLF_FUZZED(-6680.4168), _GLF_FUZZED(-6680.4168), _GLF_FUZZED(-6680.4168))), float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), min(_GLF_FUZZED(-6680.4168), _GLF_FUZZED(-6680.4168))), 0.0, 1.0, 0.0, 1.0, cos(0.0)))), _GLF_FUZZED(-0.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || (true))), ! (! (bool(_GLF_IDENTITY(true, false || (true))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || (true))), ! (! (bool(_GLF_IDENTITY(true, false || (true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true, false))))), ((! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || (true))), ! (! (bool(_GLF_IDENTITY(true, false || (true))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || (true))), ! (! (bool(_GLF_IDENTITY(true, false || (true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true, false)))))) || false)), false, false))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-6680.4168), min(_GLF_FUZZED(-6680.4168), _GLF_FUZZED(-6680.4168))), 0.0, 1.0, 0.0, 1.0, cos(0.0)))), _GLF_FUZZED(-0.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true, false)))))), false, false))), false))))), true)))), false)))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec2(bvec2(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true)))))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, false)))))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), (true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(true, bool(bool(true))) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))) || false)))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1931.5000)), float(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mix(vec2(-581.051, 1767.1223), vec2(637.838, -6457.6605), bvec2(false, true))) : injectionSwitch)).y), bool(true))), injectionSwitch.y))), (true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1931.5000)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))) || false)))), true, false)))))), false, false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) || false)), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), true && (true && (injectionSwitch.x > injectionSwitch.y)))))), true, true)), true && (_GLF_IDENTITY(bool(bvec3(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), true && (true && (injectionSwitch.x > injectionSwitch.y)))))), true, true)), false || (_GLF_IDENTITY(bool(bvec3(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), true && (true && (injectionSwitch.x > injectionSwitch.y)))))), true, true)), bool(bvec4(bool(bvec3(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), true && (true && (injectionSwitch.x > injectionSwitch.y)))))), true, true)), false, true, true))))))))))), true, false)))))), false, false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) || false)), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), true && (true && (injectionSwitch.x > injectionSwitch.y)))))), true, true)), true && (_GLF_IDENTITY(bool(bvec3(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), true && (true && (injectionSwitch.x > injectionSwitch.y)))))), true, true)), false || (_GLF_IDENTITY(bool(bvec3(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), true && (true && (injectionSwitch.x > injectionSwitch.y)))))), true, true)), bool(bvec4(bool(bvec3(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), true && (true && (injectionSwitch.x > injectionSwitch.y)))))), true, true)), false, true, true))))))))))), true, false)))))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) || false)), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), true && (true && (injectionSwitch.x > injectionSwitch.y)))))), true, true)), true && (_GLF_IDENTITY(bool(bvec3(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), true && (true && (injectionSwitch.x > injectionSwitch.y)))))), true, true)), false || (_GLF_IDENTITY(bool(bvec3(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), true && (true && (injectionSwitch.x > injectionSwitch.y)))))), true, true)), bool(bvec4(bool(bvec3(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), true && (true && (injectionSwitch.x > injectionSwitch.y)))))), true, true)), false, true, true))))))))))), true, false)))))), false, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))), false || ((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, false)))))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (true && (injectionSwitch.x > injectionSwitch.y)) || false)))), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(1931.5000), (_GLF_FUZZED(1931.5000)) - 0.0)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))), (true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1931.5000)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1931.5000)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))), (true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1931.5000)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))) || false)))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1931.5000)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))), (true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1931.5000)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))) || false)))), false, false)))), false || (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1931.5000)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))), (true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1931.5000)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))) || false)))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1931.5000)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))), (true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1931.5000)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))) || false)))), false, false)))))))), true, false)))))), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sinh(-931.005)) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), true && (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) || false)), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, true)))))), true, false)))))), false, false))), false)))))))) && true), true, false))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bool((false) && true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-107.555), _GLF_IDENTITY(_GLF_FUZZED((310.164 / 681.748)), min(_GLF_FUZZED((310.164 / 681.748)), _GLF_FUZZED((310.164 / 681.748))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), false || (true && ((injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(floor(injectionSwitch)))).y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
