#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z = subgroup_id;
uint subgroup_size = 16;
 for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1), clamp((int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1), (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY(1, (false ? _GLF_FUZZED((_injected_loop_counter % _injected_loop_counter)) : 1))), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(4599.0774)), bool(false))))) ^ 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(vec3(-9.8, -3288.0879, 5.6).y)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))) ^ 1 : _GLF_FUZZED(-3411)))), ((_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(26494) : int(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0) ^ 1)) / 1)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x = _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), min(_GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_size), 1u * ((subgroup_size)))), ((~ (subgroup_size))) >> 0u), (~ (subgroup_size)))));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY((_injected_loop_counter), max(_GLF_IDENTITY((_injected_loop_counter), max((_injected_loop_counter), (_injected_loop_counter))), (_injected_loop_counter))), (_GLF_IDENTITY((_injected_loop_counter), max(_GLF_IDENTITY((_injected_loop_counter), max((_injected_loop_counter), (_injected_loop_counter))), (_injected_loop_counter)))) | (0 ^ 0)) ^ 0)) ^ 0) != (0 & 35499), (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY((_injected_loop_counter), max(_GLF_IDENTITY((_injected_loop_counter), max((_injected_loop_counter), (_injected_loop_counter))), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0), _injected_loop_counter, _injected_loop_counter)), min(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0), _injected_loop_counter, _injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0), _injected_loop_counter, _injected_loop_counter))))))), _GLF_IDENTITY((_GLF_IDENTITY((_injected_loop_counter), max(_GLF_IDENTITY((_injected_loop_counter), max((_injected_loop_counter), (_injected_loop_counter))), (_injected_loop_counter)))) | (0 ^ 0), ((_GLF_IDENTITY((_injected_loop_counter), max(_GLF_IDENTITY((_injected_loop_counter), max((_injected_loop_counter), (_injected_loop_counter))), (_injected_loop_counter)))) | (0 ^ 0)) << (0 ^ 0))) ^ 0)) ^ 0) != (0 & 35499)) || false)), ! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0), (_injected_loop_counter) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (_injected_loop_counter) | 0)) ^ 0)) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter), (clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) | (clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter))))) ^ 0)) ^ 0), (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0)) ^ 0)) / 1)) / (1 & 1)) != (_GLF_IDENTITY(0 & 35499, min(_GLF_IDENTITY(0 & 35499, min(0 & 35499, _GLF_IDENTITY(0 & 35499, (0 & 35499) >> 0))), 0 & 35499))))), true && ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (_injected_loop_counter) | 0)) ^ 0)) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter))) ^ 0)) ^ 0), (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0)) ^ 0)) / 1)) / (1 & 1)) != (_GLF_IDENTITY(0 & 35499, min(_GLF_IDENTITY(0 & 35499, min(0 & 35499, _GLF_IDENTITY(0 & 35499, (0 & 35499) >> 0))), 0 & 35499))))))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w = subgroup_local_id;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0)) - 0.0) > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0)) - 0.0) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0)) - 0.0) > injectionSwitch.y)) && true))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y)) && true))), _GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y)) && true))), _GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2((_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y)) && true))), _GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true))), bvec2(bvec4(bvec2(bvec2(bvec2((_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y)) && true))), _GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true))), true, false))))), (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y)) && true))), _GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2((_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y)) && true))), _GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true))), bvec2(bvec4(bvec2(bvec2(bvec2((_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y)) && true))), _GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true))), true, false)))))) && true)) && true)))));
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))));
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x));
 do
  {
   GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.y = _GLF_IDENTITY(num_workgroup, (num_workgroup) << _GLF_IDENTITY((0u & 163877u), uint(uvec3((0u & 163877u), 1u, 0u))));
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))).x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x)))), min(gl_WorkGroupID.x, gl_WorkGroupID.x));
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(subgroup_size)))))));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y = workgroup_base;
    }
  }
 uint virtual_gid = _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base) ^ uvec2(0u, 0u)).x, (true ? GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base) ^ _GLF_IDENTITY(uvec2(0u, 0u), min(_GLF_IDENTITY(uvec2(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup)))), (uvec2(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))))) ^ uvec2(0u, 0u)), uvec2(0u, 0u)))).x : _GLF_FUZZED(70490u))) + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z) - _GLF_IDENTITY(0u, (0u) + 0u)) * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base) ^ uvec2(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(uvec4(197360u, 26590u, 109696u, 110122u)[1]))))).x + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w), 0u | (_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base) ^ uvec2(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(uvec4(197360u, 26590u, 109696u, 110122u)[1]))))).x + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, max(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)) + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base) ^ uvec2(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(uvec4(197360u, 26590u, 109696u, 110122u)[1]))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(uvec4(197360u, 26590u, 109696u, 110122u)[1]))), (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(uvec4(197360u, 26590u, 109696u, 110122u)[1])))) / 1u))))).x, (true ? _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, max(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)) + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base) ^ uvec2(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(uvec4(197360u, 26590u, 109696u, 110122u)[1]))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(uvec4(197360u, 26590u, _GLF_IDENTITY(109696u, (true ? 109696u : _GLF_FUZZED(subgroup_size))), 110122u)[1]))), (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(uvec4(197360u, 26590u, 109696u, 110122u)[1])))) / 1u))))).x : _GLF_FUZZED(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y))) + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w), ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, max(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)).y, max(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y)))) + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base) ^ uvec2(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(uvec4(197360u, 26590u, 109696u, 110122u)[1]))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(uvec4(197360u, 26590u, 109696u, 110122u)[1]))), (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(uvec4(_GLF_IDENTITY(197360u, (197360u) | 0u), 26590u, 109696u, 110122u)[1])))) / 1u))))).x + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w)) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) | ((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base) ^ uvec2(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(uvec4(197360u, _GLF_IDENTITY(26590u, clamp(26590u, 26590u, _GLF_IDENTITY(26590u, (_GLF_IDENTITY(26590u, clamp(26590u, 26590u, 26590u))) | 0u))), 109696u, 110122u)[1]))))), max(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base) ^ uvec2(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(uvec4(197360u, 26590u, 109696u, 110122u)[1]))))), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base) ^ uvec2(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(uvec4(197360u, 26590u, 109696u, 110122u)[1]))))))).x + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w))))) * 1u);
 uint next_virtual_gid = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x + ((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w + 1) % _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, _GLF_IDENTITY(uvec2(0u, 0u), (_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) | (uvec2(0u, 0u)))) + uvec2(0u, 0u)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (true ? _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base) | uvec2(0u, 0u))) | _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), max(_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), uvec2(1u, 1u) * ((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base))), (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)))) : _GLF_FUZZED(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base))), uvec2(0u, 0u) | (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)))).x);
 for(int _injected_loop_counter = ((_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), clamp(max(0, 0), max(0, 0), _GLF_IDENTITY(max(0, 0), 0 + (max(0, 0))))))) >> 0)) << _GLF_IDENTITY(int(_GLF_IDENTITY(7, 0 ^ (7))), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), min(int(7), int(_GLF_IDENTITY(_GLF_IDENTITY(7, int(ivec4(7, int(_GLF_ZERO(0.0, injectionSwitch.x)), (1 ^ 1), 0))), (_GLF_IDENTITY(7, int(ivec4(7, int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))), (1 ^ _GLF_IDENTITY(1, 0 | (1))), 0)))) | _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-98974)))))))) << 0))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.x = next_virtual_gid;
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) << 0)), (uint(1)) | (uint(1))), 4, 64, 4);
 for(int _injected_loop_counter = _GLF_IDENTITY((1 ^ _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), _GLF_IDENTITY(clamp(ivec4(1, 0, 0, 0), ivec4(1, 0, 0, 0), ivec4(1, 0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-1876) : 0)), clamp(0, 0, 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-1876) : 0)), clamp(0, 0, 0)), min(_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-1876) : 0)), clamp(0, 0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-1876) : 0)), clamp(0, 0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-1876) : 0)), clamp(0, 0, 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-1876) : 0)), clamp(0, 0, 0)))))), _GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-1876) : 0)), clamp(0, 0, 0)))), 0)), (_GLF_IDENTITY(clamp(ivec4(1, 0, 0, 0), ivec4(1, 0, 0, 0), ivec4(1, 0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-1876) : 0)), clamp(0, 0, 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-1876) : 0)), clamp(0, 0, 0)), min(_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-1876) : 0)), clamp(0, 0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-1876) : 0)), clamp(0, 0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-1876) : 0)), clamp(0, 0, 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-1876) : 0)), clamp(0, 0, 0)))))), _GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-1876) : 0)), clamp(0, 0, 0)))), 0)), (clamp(ivec4(1, 0, 0, 0), ivec4(1, 0, 0, 0), ivec4(1, 0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-1876) : 0)), clamp(_GLF_IDENTITY(0, min(0, 0)), 0, 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-1876) : 0)), clamp(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(0), int(0)))), 0, 0)), min(_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-1876) : 0)), clamp(0, 0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-1876) : 0)), clamp(0, 0, 0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-1876) : 0)), clamp(0, 0, 0))), ((_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-1876) : 0)), clamp(0, 0, 0)))) ^ 0) | (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((false ? _GLF_FUZZED(-1876) : 0), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((false ? _GLF_FUZZED(-1876) : 0), (false ? _GLF_FUZZED(29794) : (false ? _GLF_FUZZED(-1876) : 0))), 0, (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(-54575) : int(6))))), int(_GLF_ONE(1.0, injectionSwitch.y))), ivec4(0, 0, 0, 0) ^ (ivec4(_GLF_IDENTITY((false ? _GLF_FUZZED(-1876) : 0), (false ? _GLF_FUZZED(29794) : (false ? _GLF_FUZZED(-1876) : 0))), 0, (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(-54575) : int(6))))), int(_GLF_ONE(1.0, injectionSwitch.y)))))))), clamp(0, 0, 0)))))), _GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-1876) : 0)), clamp(0, 0, 0)))), 0))) / ivec4(1, 1, 1, 1))) - (ivec4(0, 0, 0, 0) << _GLF_IDENTITY(ivec4(3), _GLF_IDENTITY(ivec4(3), ivec4(0, 0, 0, 0) + (ivec4(3)))))))), clamp(int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), clamp(ivec4(1, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(25502))), 0, 0), ivec4(1, 0, 0, 0), ivec4(1, 0, 0, 0)))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, max(1, 1)), 0, _GLF_IDENTITY(0, int(ivec3(0, 0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(93182))) >> _GLF_IDENTITY(int(4), int(4)))))), 0), ~ (~ (ivec4(1, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec3(0, 0, (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, (0 | 0) ^ (_GLF_IDENTITY(4, int(ivec2(4, 1)))))), int(4)))))), (_GLF_IDENTITY(0, int(ivec3(0, 0, (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, (0 | 0) ^ (_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec2(4, 1), (ivec2(4, 1)) | ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))), int(4))))))) >> 0), 0)))), clamp(ivec4(1, 0, 0, 0), ivec4(1, 0, 0, 0), ivec4(1, 0, 0, 0)))), int(_GLF_IDENTITY(ivec4(1, 0, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0), 0 ^ (_GLF_IDENTITY((0), ((0)) | 0))) ^ 0), max(0, _GLF_IDENTITY(0, (0) | (0))))), clamp(ivec4(1, 0, 0, 0), ivec4(1, 0, 0, 0), ivec4(1, 0, 0, 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(1, 0, _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (0) | 0), int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (0) | 0), int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(ivec2(_GLF_IDENTITY(0, (0) | 0), int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec2(_GLF_IDENTITY(0, (0) | 0), int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec2(_GLF_IDENTITY(0, (0) | 0), int(_GLF_ZERO(0.0, injectionSwitch.x)))))) << ivec2(0, 0)))), 0), clamp(ivec4(1, 0, 0, 0), ivec4(1, 0, 0, 0), ivec4(1, 0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-1876) : 0, clamp(false ? _GLF_FUZZED(-1876) : 0, false ? _GLF_FUZZED(-1876) : 0, _GLF_IDENTITY(false ? _GLF_FUZZED(-1876) : 0, min(false ? _GLF_FUZZED(-1876) : 0, false ? _GLF_FUZZED(-1876) : 0)))))), clamp(0, 0, 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-1876) : 0)), clamp(0, 0, 0)), min(_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-1876) : 0)), _GLF_IDENTITY(clamp(0, 0, 0), int(ivec3(clamp(0, 0, 0), 1, 1)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-1876) : 0)), clamp(0, 0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-1876) : 0)), clamp(0, 0, 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-1876), clamp(_GLF_FUZZED(-1876), _GLF_FUZZED(-1876), _GLF_IDENTITY(_GLF_FUZZED(-1876), clamp(_GLF_FUZZED(-1876), _GLF_FUZZED(-1876), _GLF_FUZZED(-1876))))) : 0)), clamp(0, 0, 0)))))), _GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-1876) : 0)), clamp(0, 0, 0)))), 0)))), clamp(int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), clamp(ivec4(1, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(25502))), 0, 0), ivec4(1, 0, 0, 0), ivec4(1, 0, 0, 0)))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, max(1, 1)), 0, _GLF_IDENTITY(0, int(ivec3(0, 0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(93182))) >> _GLF_IDENTITY(int(4), int(4)))))), 0), ~ (~ (ivec4(1, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec3(0, 0, (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, (0 | 0) ^ (_GLF_IDENTITY(4, int(ivec2(4, 1)))))), int(4)))))), (_GLF_IDENTITY(0, int(ivec3(0, 0, (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, (0 | 0) ^ (_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec2(4, 1), ivec2(0, 0) ^ (ivec2(4, 1)))))))), int(4))))))) >> 0), 0)))), clamp(ivec4(1, 0, 0, 0), ivec4(1, _GLF_IDENTITY(0, 0 + (0)), 0, 0), ivec4(1, 0, 0, 0)))), int(_GLF_IDENTITY(ivec4(1, 0, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), max(0, _GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(0, max(0, 0)))), (0) | (0))))), clamp(ivec4(1, 0, 0, 0), ivec4(1, 0, 0, 0), ivec4(1, 0, 0, 0))))))), (_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), clamp(ivec4(1, 0, 0, 0), ivec4(1, 0, 0, 0), ivec4(1, 0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-1876) : 0)), clamp(0, 0, 0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-1876) : 0)), clamp(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0)) : _GLF_FUZZED(-59343))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-1876) : 0)), clamp(0, 0, 0)), min(_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-1876) : 0)), clamp(0, 0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-1876) : 0)), clamp(0, 0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-1876) : 0)), clamp(0, 0, 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-1876) : 0)), clamp(0, 0, 0)))))), _GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-1876) : 0)), clamp(0, 0, 0)))), 0)))), clamp(int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), clamp(ivec4(1, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(25502))), 0, 0), ivec4(1, 0, 0, 0), ivec4(1, 0, 0, 0)))), int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, max(1, 1)), 0, _GLF_IDENTITY(0, int(ivec3(0, 0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(93182))) >> _GLF_IDENTITY(int(4), int(4)))))), 0), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, max(1, 1)), 0, _GLF_IDENTITY(0, int(ivec3(0, 0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(93182))) >> _GLF_IDENTITY(int(4), int(4)))))), 0), (ivec4(_GLF_IDENTITY(1, max(1, 1)), 0, _GLF_IDENTITY(0, int(ivec3(0, 0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(93182))) >> _GLF_IDENTITY(int(4), int(4)))))), 0)) ^ ivec4(0, 0, 0, 0))) + ivec4(0, 0, 0, 0)), ~ (~ _GLF_IDENTITY((ivec4(1, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec3(0, 0, (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, (0 | 0) ^ (_GLF_IDENTITY(4, int(ivec2(4, 1)))))), int(4)))))), (_GLF_IDENTITY(0, int(ivec3(0, 0, (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, (0 | 0) ^ (_GLF_IDENTITY(4, int(ivec2(4, 1)))))), int(4))))))) >> 0), 0)), ~ (~ ((ivec4(1, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec3(0, 0, (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, (0 | 0) ^ (_GLF_IDENTITY(4, int(ivec2(4, 1)))))), int(4)))))), (_GLF_IDENTITY(0, int(ivec3(0, 0, (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, (0 | 0) ^ (_GLF_IDENTITY(4, int(ivec2(4, 1)))))), int(4))))))) >> 0), 0))))))), clamp(ivec4(1, 0, 0, 0), ivec4(1, 0, 0, 0), ivec4(1, 0, 0, 0)))), int(_GLF_IDENTITY(ivec4(1, 0, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), max(0, _GLF_IDENTITY(0, (0) | (0))))), clamp(ivec4(1, 0, 0, 0), ivec4(1, 0, 0, 0), ivec4(1, 0, 0, 0)))))))) | 0)) | 0)), 0 + ((1 ^ _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), 0 ^ (1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       else
        {
        }
      }
    }
   for(int _injected_loop_counter = (_GLF_IDENTITY(0, (_GLF_IDENTITY((0 | 0), ~ (_GLF_IDENTITY(~ ((0 | 0)), (~ ((0 | 0))) << 0))) >> _GLF_IDENTITY(int(1), int(1))) + (0)) ^ 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, false || (_injected_loop_counter != _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(clamp(-49585, _injected_loop_counter, _injected_loop_counter))))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))), false || (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))))))));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w + 1 < _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x, (false ? _GLF_FUZZED(subgroup_id) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x)), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) * (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x), max((false ? _GLF_FUZZED(subgroup_id) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x), (false ? _GLF_FUZZED(subgroup_id) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x)))), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x, (false ? _GLF_FUZZED(subgroup_id) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x))) / (1u & 1u))))) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atanh(injectionSwitch)) : injectionSwitch)))).x)))), (true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x, (false ? _GLF_FUZZED(subgroup_id) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), max(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (_GLF_IDENTITY(uvec2(0u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) / 1u), 0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), _GLF_IDENTITY(0u, max(0u, 0u))), uvec2(0u, 0u) + (uvec2(0u, 0u)))), (~ (_GLF_IDENTITY(uvec2(0u, _GLF_IDENTITY(0u, (0u) | (0u))), uvec2(0u, 0u) + (uvec2(0u, 0u))))) - uvec2(0u, 0u)))) << _GLF_IDENTITY(uvec2(7u), _GLF_IDENTITY(uvec2(7u), (false ? _GLF_FUZZED(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base) : uvec2(7u))))) | (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)).x, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x, (false ? _GLF_FUZZED(subgroup_id) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x, (false ? _GLF_FUZZED(subgroup_id) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x, (false ? _GLF_FUZZED(subgroup_id) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x, (false ? _GLF_FUZZED(subgroup_id) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x, ~ (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x))), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | 0u) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x, ~ (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x))), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | 0u) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY((true ? 0u ^ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x, (false ? _GLF_FUZZED(subgroup_id) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), max(_GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid)))), ((true ? 0u ^ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x, (false ? _GLF_FUZZED(subgroup_id) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), (_GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), (_GLF_FUZZED(next_virtual_gid)) << 0u)) + 0u))) - 0u)))) : _GLF_FUZZED(atomicAdd(subgroup_local_id, next_virtual_gid))))))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) >> 0))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) && true)), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) && true))) && true); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + abs(0.0)), injectionSwitch.x)) > injectionSwitch.y))))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     int i = 0;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))))))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))
        barrier();
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
                {
                 barrier();
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))))), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), true && (true && (true))))))), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (! (true)))))), false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, true && _GLF_IDENTITY((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))), true && ((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))))))), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), true && (true && (true))))))), _GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true))))))), false))) && true)), true, true)), _GLF_IDENTITY(false || _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, true, false))), true, true))), ! (! (_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, true, false))), true && (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, true, false))))), true, true))), ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, true, false))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, true, false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))), false, true, false))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), (! (true)) || false))), ! (! (! (true)))))))), false, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), (! (true)) || false))), ! (! (! (true)))))))), false, true, false)))))))), true, true)))))))))), ! (! (! ((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, true, false))), (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, true, false)))) || false)) || false), true, true)))))))))))), (false || _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((true) || false)))))))), false, true, false))), true, true))), ! (! (_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), false, true, false))), true, true))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, true, false))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, true, false))), true, true)))))), ! (_GLF_IDENTITY(! (! ((bool(bvec3(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, true && (true))) || false), false, true, false))), true, true))))), ! (_GLF_IDENTITY(! (! (! ((bool(bvec3(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, false || (true)) && (true)), _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))) || false, true && (_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))) || false, bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(true, true && (true))) || false, true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(true, true && (true))) || false, true, false))))))))), false, true, false))), true, true)))))), (_GLF_IDENTITY(! (! (! ((bool(bvec3(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))) || false), false, true, false))), true, true)))))), bool(bool(! (! (! ((bool(bvec3(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, true))), (_GLF_IDENTITY(true, true && (true))) || false), false, true, false))), true, true)))))))))) || false))))))))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true, true)))))) ? GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY((uvec4(177259u, _GLF_IDENTITY(130223u, uint(uint(130223u))), 106376u, 117946u) % num_workgroup), min(_GLF_IDENTITY((uvec4(177259u, 130223u, 106376u, 117946u) % num_workgroup), (_GLF_IDENTITY((uvec4(177259u, 130223u, 106376u, 117946u) % num_workgroup), _GLF_IDENTITY(((uvec4(177259u, 130223u, 106376u, 117946u) % num_workgroup)) ^ uvec4(0u, 0u, 0u, 0u), (((uvec4(177259u, 130223u, 106376u, 117946u) % num_workgroup)) ^ uvec4(0u, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)))) + uvec4(0u, 0u, 0u, 0u)), (uvec4(177259u, 130223u, 106376u, 117946u) % num_workgroup)))))).x], _GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) | (2))))), (uint(2)) | (_GLF_IDENTITY(uint(2), uint(uint(uint(_GLF_IDENTITY(2, (2) | _GLF_IDENTITY(0, (0) | 0)))))))), 4, 64, 4);
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), (_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))) || false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))), bool(bvec3(bool(bool(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))), true, true))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bool(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))), bool(bvec3(bool(bool(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bool(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))), bool(bvec3(bool(bool(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bool(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))), bool(bvec3(bool(bool(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))), true, true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))); _injected_loop_counter --)
                  {
                   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
                    {
                     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), true && (false || (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))) ? _GLF_FUZZED(_GLF_IDENTITY(-5.5, mix(float(_GLF_FUZZED(59.55)), float(-5.5), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) : injectionSwitch.x)) > injectionSwitch.y))), false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-600.904), _GLF_FUZZED(9770.7862)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch)).y)))))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-600.904), _GLF_FUZZED(9770.7862)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch)).y)))))), bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-600.904), _GLF_FUZZED(9770.7862)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch)).y)))))), false))))))))))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(970.014)), float(injectionSwitch.y), bool(true))), bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)))) || false)) && true)), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-418.576)), bool(false))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)) ? _GLF_FUZZED(_GLF_IDENTITY(-5.5, mix(float(_GLF_FUZZED(59.55)), float(-5.5), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) : injectionSwitch.x)) > injectionSwitch.y))), false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-964.271)), bvec2(true, false))), injectionSwitch)), injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-964.271)), bvec2(true, false))), injectionSwitch)), injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-964.271)), bvec2(true, false))), injectionSwitch)), injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))), ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(-4.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-964.271)), bvec2(true, false))), injectionSwitch)), injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))), false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))))) || false))))))))))))))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                    }
                  }
                }
              }
            }
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + (_GLF_FUZZED(injectionSwitch)))))), (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)), clamp((false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)), clamp((false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)), max((false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))))) : _GLF_FUZZED(injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))))).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))) : _GLF_FUZZED(injectionSwitch)))))), max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))) : _GLF_FUZZED(injectionSwitch)))))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))) : _GLF_FUZZED(injectionSwitch)))))))).y, true, false, false)))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (false ? _GLF_FUZZED(vec2(-1815.0508, -4.5)) : _GLF_FUZZED(injectionSwitch))), _GLF_FUZZED(injectionSwitch)))))))).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))) : _GLF_FUZZED(injectionSwitch)))))).y, true, false, false))))) || false))));
        }
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))), 0, 0))); _injected_loop_counter --)
          {
           barrier();
          }
        }
      }
     else
      {
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x, mix(float(_GLF_FUZZED(676.374)), float(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x), _GLF_IDENTITY(bool(true), true && (bool(true))))) > injectionSwitch.y))));
             do
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.x, min(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.x, _GLF_IDENTITY(~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.x)), (~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.x))) / (1u & 1u))), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.x, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.x, ~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.x)))) | 0u)))], uint(_GLF_IDENTITY(2, ~ (~ (2)))), 4, 64, 4);
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(31.76), _GLF_FUZZED(3.2)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))[0], injectionSwitch[1])))).y))))
      barrier();
    }
  }
}
