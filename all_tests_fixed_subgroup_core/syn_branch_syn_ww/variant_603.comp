#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_28 {
 uint virtual_gid;
 vec2 _f0;
} ;

struct _GLF_struct_29 {
 bvec2 _f0;
 _GLF_struct_28 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_27 {
 mat3 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_25 {
 ivec2 _f0;
 float _f1;
 uint _f2;
 ivec2 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_26 {
 _GLF_struct_25 _f0;
 bool _f1;
 mat2 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_23 {
 uvec4 _f0;
 ivec2 _f1;
 mat3x2 _f2;
 mat3x2 _f3;
 float _f4;
} ;

struct _GLF_struct_22 {
 mat4 _f0;
 uvec2 _f1;
 uvec3 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_21 {
 ivec3 _f0;
 mat4 _f1;
 int _f2;
 mat2x3 _f3;
 vec3 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_24 {
 mat4x2 _f0;
 _GLF_struct_21 _f1;
 uvec4 _f2;
 _GLF_struct_22 _f3;
 vec3 _f4;
 vec4 _f5;
 _GLF_struct_23 _f6;
} ;

struct _GLF_struct_20 {
 uvec2 _f0;
 mat2x3 _f1;
 bvec3 _f2;
 uvec4 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_30 {
 _GLF_struct_20 _f0;
 int _f1;
 _GLF_struct_24 _f2;
 _GLF_struct_26 _f3;
 ivec2 _f4;
 _GLF_struct_27 _f5;
 _GLF_struct_29 _f6;
} ;

struct _GLF_struct_17 {
 float _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_16 {
 uvec2 _f0;
 bvec2 _f1;
 int _f2;
 float _f3;
} ;

struct _GLF_struct_15 {
 int _f0;
 mat3x2 _f1;
 bool _f2;
 bvec2 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_14 {
 bvec4 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_18 {
 float _f0;
 vec2 _f1;
 _GLF_struct_14 _f2;
 _GLF_struct_15 _f3;
 _GLF_struct_16 _f4;
 mat3x4 _f5;
 _GLF_struct_17 _f6;
} ;

struct _GLF_struct_19 {
 _GLF_struct_18 _f0;
 uint workgroup_id;
 ivec4 _f1;
} ;

struct _GLF_struct_13 {
 uint next_virtual_gid;
 ivec2 _f0;
} ;

struct _GLF_struct_12 {
 mat4x3 _f0;
 uint subgroup_id;
 uint _f1;
} ;

struct _GLF_struct_9 {
 int _f0;
 mat3 _f1;
} ;

struct _GLF_struct_8 {
 uvec4 _f0;
 mat2x3 _f1;
 uvec3 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_10 {
 uint subgroup_local_id;
 _GLF_struct_8 _f0;
 _GLF_struct_9 _f1;
} ;

struct _GLF_struct_6 {
 int _f0;
 mat4x2 _f1;
 mat2x4 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_7 {
 _GLF_struct_6 _f0;
} ;

struct _GLF_struct_4 {
 bvec3 _f0;
 mat4 _f1;
 vec3 _f2;
 bvec4 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_3 {
 int _f0;
 mat2x3 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_2 {
 bvec2 _f0;
 mat4x2 _f1;
 uvec4 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_1 {
 vec2 _f0;
 int _f1;
 mat4x2 _f2;
 vec2 _f3;
 bvec3 _f4;
 uvec4 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_0 {
 mat3x4 _f0;
 mat3x4 _f1;
 uvec4 _f2;
 mat4x2 _f3;
 mat3x2 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 ivec4 _f3;
 _GLF_struct_3 _f4;
 _GLF_struct_4 _f5;
} ;

struct _GLF_struct_11 {
 int _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_10 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-89.08, 555.139)))), injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-89.08, 555.139)))), injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-89.08, 555.139)))), injectionSwitch)).x) / 1.0) > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) || false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))
  return;
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(mat4x3(1.0), gl_SubgroupID, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, max(1u, 1u)))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_IDENTITY(1, (1) >> 0), _GLF_struct_5(_GLF_struct_0(mat3x4(1.0), mat3x4(1.0), uvec4(1u), mat4x2(1.0), mat3x2(1.0), mat3x4(1.0)), _GLF_struct_1(vec2(1.0), 1, mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, _GLF_IDENTITY(determinant(mat3(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(0.0), 0.0, 0.0, 1.0)) * ((1.0) - 0.0), mix(float(_GLF_FUZZED(133.894)), float(determinant(mat3(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(0.0), 0.0, 0.0, 1.0)) * ((1.0) - 0.0)), bool(true)))))), vec2(1.0), bvec3(true), uvec4(1u), bvec4(true)), _GLF_struct_2(bvec2(_GLF_IDENTITY(true, false || (true))), mat4x2(1.0), uvec4(1u), mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat3(1.0, log(1.0), 0.0, 0.0, length(0.0), log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) / 1.0), 1.0, 1.0))) * 1.0))), _GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), (ivec4(1)) | _GLF_IDENTITY((ivec4(1)), ((ivec4(1))) | ivec4(0, 0, 0, 0)))) / (((ivec4(1, 1, 1, 1) << _GLF_IDENTITY(ivec4(1), ivec4(1))) >> _GLF_IDENTITY(ivec4(1), ivec4(1))) | ivec4(1, 1, 1, 1)))) | (ivec4(1))), _GLF_struct_3(1, mat2x3(1.0), uvec4(1u)), _GLF_struct_4(bvec3(true), _GLF_IDENTITY(mat4(1.0), _GLF_IDENTITY((true ? mat4(1.0) : _GLF_FUZZED(mat4(-4344.8644, 7.0, -4052.9894, -8854.1341, -8.0, -7265.0610, 0.0, 5340.5619, -258.191, -20.80, 14.57, -0.3, 5.0, 64.99, 13.43, -2631.3429))), transpose(_GLF_IDENTITY(transpose((true ? mat4(1.0) : _GLF_FUZZED(mat4(-4344.8644, 7.0, -4052.9894, -8854.1341, -8.0, -7265.0610, 0.0, 5340.5619, -258.191, -20.80, 14.57, -0.3, 5.0, 64.99, 13.43, -2631.3429)))), transpose(transpose(transpose((true ? mat4(1.0) : _GLF_FUZZED(mat4(-4344.8644, 7.0, -4052.9894, -8854.1341, -8.0, -7265.0610, 0.0, 5340.5619, -258.191, -20.80, 14.57, -0.3, 5.0, 64.99, 13.43, -2631.3429)))))))))), vec3(1.0), bvec4(true), _GLF_IDENTITY(ivec2(1), ivec2(ivec4(ivec2(1), 1, 1))))), _GLF_struct_7(_GLF_struct_6(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (_GLF_IDENTITY(1, min(1, 1))) ^ 0)) | (1)), mat4x2(1.0), mat2x4(1.0), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | (_GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(1u))))))), _GLF_struct_10(gl_SubgroupInvocationID, _GLF_struct_8(uvec4(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))), 1u, 1u))), mat2x3(1.0), uvec3(1u), vec2(1.0)), _GLF_struct_9(1, mat3(1.0))));
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_19 _GLF_struct_replacement_19 = _GLF_struct_19(_GLF_struct_18(1.0, _GLF_IDENTITY(vec2(1.0), min(vec2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0))), mix(vec2(_GLF_FUZZED(-1.1), _GLF_FUZZED(1.9)), vec2((_GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0))))[0], (_GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0))))[1]), bvec2(true, true))), _GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0))))))), _GLF_struct_14(bvec4(true), bvec4(true)), _GLF_struct_15(1, mat3x2(1.0), true, _GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true), false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false)))), true)))))), true)), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec2(true), false), true))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec2(true), false), true))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(true), false), true))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(true), false), true))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(true), false), _GLF_IDENTITY(true, bool(bvec3(true, true, true)))))))), true))))))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(true), false), true)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).x > injectionSwitch.y))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec2(true), false), true))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(bvec2(true), false), true))), false))), false)))))))), ivec2(1)), _GLF_struct_16(uvec2(1u), bvec2(true), 1, 1.0), mat3x4(1.0), _GLF_struct_17(1.0, uvec2(1u))), _GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, (true ? _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) + 0u) : _GLF_FUZZED(subgroup_size))))), ivec4(1));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) || false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || (! (_GLF_IDENTITY(false, true && (false)))))))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2.3, -6.6)))).x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2.3, -6.6)))).x > injectionSwitch.y))), true, true, false))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(_GLF_struct_replacement_19.workgroup_id, (_GLF_struct_replacement_19.workgroup_id) + 0u), clamp(workgroup_size * _GLF_struct_replacement_19.workgroup_id, workgroup_size * _GLF_struct_replacement_19.workgroup_id, workgroup_size * _GLF_struct_replacement_19.workgroup_id));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), true && (bool(_GLF_IDENTITY(false, (false) && true)))), false || (bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), true && (bool(_GLF_IDENTITY(false, (false) && true)))), false || (bool(false))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), false || (bool(false))))))), true))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))).x > injectionSwitch.y)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), (! (! (_GLF_DEAD(false)))) || false)), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, ((_GLF_DEAD(false)) || false) || false)))))) || false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), true, false, false)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * sqrt(1.0))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, abs(1.0), 1.0, 1.0, 1.0, 0.0)))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))), (! ((injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_30 _GLF_struct_replacement_30 = _GLF_struct_30(_GLF_struct_20(uvec2(1u), mat2x3(1.0), _GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true))), bvec3(bvec4(bvec3(bvec3(bvec3(true))), true)))), _GLF_IDENTITY(uvec4(1u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec4(1u) : _GLF_FUZZED((uvec4(106372u, 193455u, 78390u, 159969u) | uvec4(68054u, 49052u, 95397u, 154054u))))), mat2(1.0)), 1, _GLF_struct_24(mat4x2(1.0), _GLF_struct_21(ivec3(1), mat4(1.0), _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), (max(1, 1)) / 1)), mat2x3(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-23.37)), min(float(_GLF_FUZZED(-23.37)), float(_GLF_FUZZED(-23.37)))), float(1.0), bool(true)))), vec3(1.0), vec2(1.0)), uvec4(1u), _GLF_struct_22(mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), uvec2(1u), uvec3(1u), mat4x2(1.0)), vec3(1.0), vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 1.0, 0.0, abs(0.0), 1.0, 1.0, 1.0, 1.0)), max(float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))), 1.0, 1.0, 1.0, 1.0)), float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 1.0, 0.0, abs(0.0), 1.0, 1.0, 1.0, 1.0)))))), _GLF_struct_23(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)))), ivec2(1), mat3x2(1.0), mat3x2(1.0), 1.0)), _GLF_struct_26(_GLF_struct_25(_GLF_IDENTITY(ivec2(1), (ivec2(1)) / ivec2(1, 1)), 1.0, 1u, ivec2(1), bvec2(true)), true, mat2(1.0), ivec2(1)), ivec2(1), _GLF_struct_27(mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat4x3(1.0)), _GLF_struct_29(bvec2(true), _GLF_struct_28(workgroup_base + _GLF_struct_replacement_12.subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) + _GLF_struct_replacement_11._f3.subgroup_local_id, _GLF_IDENTITY(vec2(1.0), mix(vec2(_GLF_FUZZED(-79.94), (vec2(1.0))[1]), vec2((vec2(1.0))[0], _GLF_FUZZED(340.891)), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), false)))), mat3x2(1.0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))
  return;
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id, (_GLF_struct_replacement_12.subgroup_id) * 1u)) << (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), min(_GLF_struct_replacement_12.subgroup_id, _GLF_struct_replacement_12.subgroup_id)) * subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_struct_replacement_12.subgroup_id * subgroup_size, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | (7u))))), 0u | (((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | (7u))))))), 1u)), (_GLF_IDENTITY(uint(uvec3(_GLF_struct_replacement_12.subgroup_id * subgroup_size, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (true ? _GLF_IDENTITY(7u, uint(_GLF_IDENTITY(uint(7u), max(uint(7u), uint(7u))))) : _GLF_FUZZED(num_workgroup)))), _GLF_IDENTITY(uint(7u), (_GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u)))) | (uint(7u))))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u)), clamp(uint(uvec3(_GLF_struct_replacement_12.subgroup_id * subgroup_size, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (true ? _GLF_IDENTITY(7u, uint(_GLF_IDENTITY(uint(7u), max(uint(7u), uint(7u))))) : _GLF_FUZZED(num_workgroup)))), _GLF_IDENTITY(uint(7u), (_GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u)))) | (uint(7u))))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u)), uint(uvec3(_GLF_struct_replacement_12.subgroup_id * subgroup_size, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (true ? _GLF_IDENTITY(7u, uint(_GLF_IDENTITY(uint(7u), max(uint(7u), uint(7u))))) : _GLF_FUZZED(num_workgroup)))), _GLF_IDENTITY(uint(7u), (_GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u)))) | (uint(7u))))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u)), uint(uvec3(_GLF_struct_replacement_12.subgroup_id * subgroup_size, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (true ? _GLF_IDENTITY(7u, uint(_GLF_IDENTITY(uint(7u), max(uint(7u), uint(7u))))) : _GLF_FUZZED(num_workgroup)))), _GLF_IDENTITY(uint(7u), (_GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u)))) | (uint(7u))))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u))))) - (0u ^ 0u))) + ((_GLF_struct_replacement_11._f3.subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), subgroup_size, subgroup_size)), (subgroup_size) << 0u))), _GLF_IDENTITY((subgroup_size) / 1u, ((subgroup_size) / 1u) - 0u))), ivec2(1));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(true && (! (_GLF_DEAD(false))), (true && (! (_GLF_DEAD(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_struct_replacement_30._f6._f1.virtual_gid], uint(_GLF_IDENTITY(1, (1) ^ 0)), 4, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, clamp(64, 64, 64))), (~ (_GLF_IDENTITY(64, clamp(64, 64, 64)))) - 0))), 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_struct_replacement_11._f3.subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ((! (false))) && true) && true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ((! (false))) && true) && true)))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[_GLF_struct_replacement_13.next_virtual_gid], _GLF_IDENTITY(uint(2), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) - 0)) | 0))), (_GLF_IDENTITY(uint(2), max(uint(2), uint(2)))) >> 0u), (_GLF_IDENTITY(uint(2), _GLF_IDENTITY((_GLF_IDENTITY(uint(2), max(uint(2), uint(2)))) >> 0u, ((_GLF_IDENTITY(uint(2), max(uint(2), _GLF_IDENTITY(uint(2), min(_GLF_IDENTITY(uint(2), 0u | (uint(2))), uint(2)))))) >> _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u)))) ^ 0u))) + 0u)), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), max(uint(2), uint(2)))) >> 0u), (_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? _GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(workgroup_size))) : _GLF_FUZZED(subgroup_size))), max(uint(2), uint(2)))) >> 0u)) + 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), max(uint(2), uint(2)))) >> 0u), (_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), max(uint(2), uint(2)))) >> 0u)) + _GLF_IDENTITY(0u, (0u) - 0u)))) / 1u))) / 1u), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(0.3, 7703.2787)) : (injectionSwitch))), (injectionSwitch))) * mat2(1.0)).y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (injectionSwitch) * mat2(1.0)).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) * mat2(1.0)).y))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false || (false), (false || (false)) && true)), (bool(_GLF_IDENTITY(false || (false), (false || (false)) && true))) || false)))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (true ? injectionSwitch.y : _GLF_FUZZED(-9.7)))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
        barrier();
       return;
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (_GLF_DEAD(false))))))))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0), (true ? mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0), 0.0, 1.0) : _GLF_FUZZED(mat3x2(2.2, -5.0, -490.148, -2.2, 0.0, 7.5))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0), (_GLF_IDENTITY(true, (true) && true) ? mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3x2(2.2, -5.0, -490.148, -2.2, 0.0, 7.5))))), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0), (_GLF_IDENTITY(true, (true) && true) ? mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3x2(2.2, -5.0, -490.148, -2.2, 0.0, 7.5)))))), vec2(0.0, 0.0) + (mat2(1.0) * (vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0), (_GLF_IDENTITY(true, (true) && true) ? mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3x2(2.2, -5.0, -490.148, -2.2, 0.0, 7.5))))))))) : _GLF_FUZZED(vec2(-5212.7300, -152.123)), mat2(1.0) * (true ? vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0), (true ? mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3x2(2.2, -5.0, -490.148, -2.2, 0.0, 7.5))))) : _GLF_FUZZED(vec2(-5212.7300, -152.123)))))), vec2(vec3(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), 0.0, 1.0), (true ? mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3x2(2.2, -5.0, -490.148, -2.2, 0.0, 7.5))))), (true ? vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0), (true ? mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3x2(2.2, -5.0, -490.148, -2.2, 0.0, 7.5))))) : _GLF_FUZZED(vec2(-5212.7300, -152.123)))), determinant(mat3(log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).x, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0), (true ? mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0), 0.0, 1.0) : _GLF_FUZZED(mat3x2(2.2, -5.0, -490.148, -2.2, 0.0, 7.5))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0), (_GLF_IDENTITY(true, (true) && true) ? mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3x2(2.2, -5.0, -490.148, -2.2, 0.0, 7.5))))), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0), (_GLF_IDENTITY(true, (true) && true) ? mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3x2(2.2, -5.0, -490.148, -2.2, 0.0, 7.5)))))), vec2(0.0, 0.0) + (mat2(1.0) * (vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0), (_GLF_IDENTITY(true, (true) && true) ? mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3x2(2.2, -5.0, -490.148, -2.2, 0.0, 7.5))))))))) : _GLF_FUZZED(vec2(-5212.7300, -152.123)), mat2(1.0) * (true ? vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0), (true ? mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3x2(2.2, -5.0, -490.148, -2.2, 0.0, 7.5))))) : _GLF_FUZZED(vec2(-5212.7300, -152.123)))))), vec2(vec3(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), 0.0, 1.0), (true ? mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3x2(2.2, -5.0, -490.148, -2.2, 0.0, 7.5))))), (true ? vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0), (true ? mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3x2(2.2, -5.0, -490.148, -2.2, 0.0, 7.5))))) : _GLF_FUZZED(vec2(-5212.7300, -152.123)))), determinant(mat3(log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0), (true ? mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0), 0.0, 1.0) : _GLF_FUZZED(mat3x2(2.2, -5.0, -490.148, -2.2, 0.0, 7.5))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0), (_GLF_IDENTITY(true, (true) && true) ? mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3x2(2.2, -5.0, -490.148, -2.2, 0.0, 7.5))))), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0), (_GLF_IDENTITY(true, (true) && true) ? mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3x2(2.2, -5.0, -490.148, -2.2, 0.0, 7.5)))))), vec2(0.0, 0.0) + (mat2(1.0) * (vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0), (_GLF_IDENTITY(true, (true) && true) ? mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3x2(2.2, -5.0, -490.148, -2.2, 0.0, 7.5))))))))) : _GLF_FUZZED(vec2(-5212.7300, -152.123)), mat2(1.0) * (true ? vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0), (true ? mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3x2(2.2, -5.0, -490.148, -2.2, 0.0, 7.5))))) : _GLF_FUZZED(vec2(-5212.7300, -152.123)))))), vec2(vec3(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), 0.0, 1.0), (true ? mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3x2(2.2, -5.0, -490.148, -2.2, 0.0, 7.5))))), (true ? vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0), (true ? mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3x2(2.2, -5.0, -490.148, -2.2, 0.0, 7.5))))) : _GLF_FUZZED(vec2(-5212.7300, -152.123)))), determinant(mat3(log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).x)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0), (true ? mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, (1.0) + 0.0)), max(float(_GLF_IDENTITY(1.0, (1.0) + 0.0)), float(_GLF_IDENTITY(1.0, (1.0) + 0.0)))))), 0.0, 1.0) : _GLF_FUZZED(mat3x2(2.2, -5.0, -490.148, -2.2, 0.0, 7.5))))), (true ? vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0), (true ? mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3x2(2.2, -5.0, -490.148, -2.2, 0.0, 7.5))))) : _GLF_FUZZED(vec2(-5212.7300, -152.123))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0), (true ? mat3x2(injectionSwitch, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8768.2257)), float(1.0), bool(true))), 0.0, 0.0, log(1.0), 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat3x2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8768.2257)), float(1.0), bool(true))), 0.0, 0.0, log(1.0), 0.0, 1.0)), (transpose(mat3x2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8768.2257)), float(1.0), bool(true))), 0.0, 0.0, log(1.0), 0.0, 1.0))) * mat2(1.0)))))), 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3x2(2.2, -5.0, -490.148, -2.2, 0.0, 7.5))))), (true ? vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0), (true ? mat3x2(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(1.0, 1.0, 1.0, sin(0.0), 1.0, abs(1.0), 0.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)))), (float(mat2x4(1.0, 1.0, 1.0, sin(0.0), 1.0, abs(1.0), 0.0, cos(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0.0)), 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3x2(2.2, -5.0, -490.148, -2.2, 0.0, 7.5))))) : _GLF_FUZZED(vec2(-5212.7300, -152.123))))).x, float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0), (true ? mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3x2(2.2, -5.0, -490.148, -2.2, 0.0, 7.5))))), (true ? vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0), (true ? mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3x2(2.2, -5.0, -490.148, -2.2, 0.0, 7.5))))) : _GLF_FUZZED(vec2(-5212.7300, -152.123))))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0)), 0.0, 1.0), (true ? mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3x2(2.2, -5.0, -490.148, -2.2, 0.0, 7.5))))), (true ? vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0), (true ? mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3x2(2.2, -5.0, -490.148, -2.2, 0.0, 7.5))))) : _GLF_FUZZED(vec2(-5212.7300, -152.123))))).x, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0), (true ? mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3x2(2.2, -5.0, -490.148, -2.2, 0.0, 7.5))))), (true ? vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0), (true ? mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3x2(2.2, -5.0, -490.148, -2.2, 0.0, 7.5))))) : _GLF_FUZZED(vec2(-5212.7300, -152.123))))).x : _GLF_FUZZED(-1.1))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0), (true ? mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3x2(2.2, -5.0, -490.148, -2.2, 0.0, 7.5))))), (true ? vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0), (true ? mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3x2(2.2, -5.0, -490.148, -2.2, 0.0, 7.5))))) : _GLF_FUZZED(vec2(-5212.7300, -152.123))))).x)), round(length(normalize(1.0)))))))) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch)), injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), injectionSwitch)).y))))) || false))), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-276.895 * 696.166))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), bool(true))) > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, exp(0.0), 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), injectionSwitch)).y))))) || false)))), bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(-25.73, -3.3)) : (injectionSwitch)))), injectionSwitch)), injectionSwitch)).y))))) || false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-276.895 * 696.166))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), bool(true))) > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, 0 ^ (1))])), 0.0, exp(0.0), 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), injectionSwitch)).y))))) || false)))), bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-7.1, -5.1, -5.2, 4.3).w), _GLF_FUZZED(float(13241))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), injectionSwitch)).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), injectionSwitch)).y), (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), injectionSwitch))), max(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), injectionSwitch))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), injectionSwitch)))))).y, (false ? _GLF_FUZZED(-97.00) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), injectionSwitch))), max(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), injectionSwitch))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), injectionSwitch)))))).y)))) || false)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(87.38), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.6)), bvec2(true, false))), min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(-25.73, -3.3)) : (injectionSwitch)))), injectionSwitch)), injectionSwitch)).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(87.38), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.6)), bvec2(true, false))), min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(-25.73, -3.3)) : (injectionSwitch)))), injectionSwitch)), injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(87.38), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.6)), bvec2(true, false))), min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(-25.73, -3.3)) : (injectionSwitch)))), injectionSwitch)), injectionSwitch)).y)))))))))) || false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-276.895 * 696.166))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-93.33, 3.8)))).x, (injectionSwitch.x) + 0.0)), bool(true))) > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, exp(0.0), 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch), (clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, exp(0.0), 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (vec2(1.0, 1.0) * (injectionSwitch)))), injectionSwitch)) - vec2(0.0, 0.0))), injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), injectionSwitch)).y))))) || false)))), bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7.8)), bool(false)))) / abs(1.0)), 1.0) * (injectionSwitch)), injectionSwitch)), injectionSwitch)).y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(-25.73, -3.3)) : (injectionSwitch)))), injectionSwitch)), injectionSwitch)).y))))) || false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! (! ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) - log(vec2(1.0, 1.0))).x > injectionSwitch.y) || false)), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), min(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), clamp((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).y) || false)))))))))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(atan(-4691.9754, -1.7)) : injectionSwitch.y))))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), bool(bool(false)))))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), true)), ! (! (bool(bvec2((false), true))))))), bool(bool(false))))))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), max(clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), clamp(clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.7)), float(injectionSwitch.y), bool(true))))))) && (false)), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false)))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-327.945)), float(injectionSwitch.y), bool(true)))) - 0.0)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))) && true))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(sinh(injectionSwitch)))).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true)), true))), false))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.4), _GLF_FUZZED(6.7)), bvec2(false, false)))) + vec2(0.0, 0.0)).y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) || false)))))))
          return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec4(bool(bvec2(false, false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (true) || false), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, bool(bool(true))), true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))))), false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))), true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))))))), true && (bool(bvec3(bool(bvec4(false, true, _GLF_IDENTITY(true, ! (! (true))), false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))), false)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1006.8569) : injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))), true && (bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))), false))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec4(false, true, true, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))))), false)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, (true) || false), false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))), bool(bvec4(bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true, false))), true && (bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) < injectionSwitch.y)))))))), false)), false, true))), true))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.4)), bool(false))))))))))))), false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))), true && (_GLF_IDENTITY(bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))), ! (! (bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))))))))), false)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))), true && (bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))), false))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec4(false, true, true, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))), true && (bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), max(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)))))))), false)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, (true) || false), false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true, false))), true && (bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) < injectionSwitch.y)))))))), false)), false, true))), true))))), true)))), bool(bvec4(bool(bvec2(false, false)), true, false, true)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (_GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))))), bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false)), _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, _GLF_IDENTITY(bool(bvec4((true) || false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec4((true) || false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), true, _GLF_IDENTITY(true, ! (! (true))), false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), false, false, true))), false, true)))) && true))))))), false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))), true, false))), bool(bvec2(! (bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), true))))), true, false))), false)))))) || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))), true && (bool(_GLF_IDENTITY(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), bvec3(bvec4(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(96.50)))) - 0.0)))), false)))))))), false)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(bool(bool(injectionSwitch.x < injectionSwitch.y)), true, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true))))), ! (! (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), bool(bvec4(bool(bool(injectionSwitch.x < injectionSwitch.y)), true, false, true)))), ! (! (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), bool(bvec4(bool(bool(injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), true)))), ! (! (injectionSwitch.x < injectionSwitch.y)))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), bool(bvec4(bool(bool(injectionSwitch.x < injectionSwitch.y)), true, false, true)))), ! (! (injectionSwitch.x < injectionSwitch.y))))) && true)) || false)) && true)))))), true && (bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))), _GLF_IDENTITY(false, ! (! (false)))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec4(false, true, true, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && _GLF_IDENTITY((bool(bvec3(bool(bvec4(false, true, _GLF_IDENTITY(true, ! (! (true))), false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), mix(float(max(injectionSwitch.x, injectionSwitch.x)), float(_GLF_FUZZED(7767.7323)), bool(false)))) * _GLF_ONE(1.0, injectionSwitch.y))) < injectionSwitch.y))))), ! (! ((bool(bvec3(bool(bvec4(false, true, _GLF_IDENTITY(true, ! (! (true))), false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), mix(float(max(injectionSwitch.x, injectionSwitch.x)), float(_GLF_FUZZED(7767.7323)), bool(false)))) * _GLF_ONE(1.0, injectionSwitch.y))) < injectionSwitch.y))))))))))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, (true) || false), false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)))))), bool(bvec4(bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-220.896, 3583.0111)) : injectionSwitch)).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-220.896, 3583.0111)) : injectionSwitch)).y)) || false)))), true, true, false))), true && (bool(bvec3(bool(bvec4(false, true, true, _GLF_IDENTITY(false, (false) || false))), false, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) < injectionSwitch.y)))))))), false)), false, true))), true)))))), bool(bvec4(bool(bvec2(false, false)), true, false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))), (bool(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))) && true))) && true))))))), false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))))), true && (bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))), false)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(false, true, true, _GLF_IDENTITY(false, (false) && true))), false, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))), true && (bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_FUZZED(131.170)), float(max(injectionSwitch.x, injectionSwitch.x)), bool(true)))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y, (injectionSwitch.y) - 0.0))))))))), false))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(bool(bvec4(false, true, true, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) < injectionSwitch.y)))))))), false)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), false || (! (false)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))), true, true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))))))), bool(bvec4(bool(bvec3(bool(bvec4(false, true, true, false)), _GLF_IDENTITY(false, bool(bvec3(false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true, false))), _GLF_IDENTITY(true, true && (true)) && (bool(bvec3(bool(bvec4(false, true, true, false)), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((float(190674u) * 23.72)), _GLF_FUZZED(-971.897)), bvec2(false, false))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) < injectionSwitch.y)))))))), false)), false, true))), true)))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true, false, true))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, true, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, true, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))))), (! (_GLF_IDENTITY(bool(bvec4(false, true, true, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))))))) && true), true, false)))))), false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(false, true, true, false)), false || (bool(bvec4(false, true, true, false)))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)) && (bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(false, true, true, false)), false || (bool(bvec4(false, true, true, false)))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)) && (bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(false, true, true, false)), false || (bool(bvec4(false, true, true, false)))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)) && (bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(false, true, true, false)), false || (bool(bvec4(false, true, true, false)))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)) && (bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(true && (bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), bool(bvec3(true && (bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), false, false)))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec4(false, true, true, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), injectionSwitch)).x < injectionSwitch.y)))), true && (bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, (true) || false), false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec3(bool(bvec4(false, true, true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true, false))), true && (bool(_GLF_IDENTITY(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, false || (true)))), true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, false || (true)))), true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) < injectionSwitch.y))), bvec3(bvec4(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, false || (true)))), true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) < injectionSwitch.y))), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, false || (true)))), true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) < injectionSwitch.y))), bvec3(bvec4(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, false || (true)))), true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) < injectionSwitch.y))), true))), true)), true))))))))), false)), false, true))), true)))))), bool(bvec4(bool(bvec2(false, false)), true, false, true))), false))), false)))) || false)) && true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2217.5122) : injectionSwitch.x))), float(_GLF_FUZZED(502.589)), bool(false))) > injectionSwitch.y)) || false))))))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(16.02))) > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(_GLF_struct_replacement_13.next_virtual_gid, uint(_GLF_IDENTITY(uvec4(_GLF_struct_replacement_13.next_virtual_gid, (0u | 1u), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u), (_GLF_IDENTITY(uvec4(_GLF_struct_replacement_13.next_virtual_gid, (0u | 1u), ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u), clamp(uvec4(_GLF_struct_replacement_13.next_virtual_gid, (0u | 1u), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) / 1u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u), _GLF_IDENTITY(uvec4(_GLF_struct_replacement_13.next_virtual_gid, (0u | 1u), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY((uint(2u)) ^ 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((uint(2u)) ^ 0u, ((uint(2u)) ^ 0u) >> 0u)))), uint(2u))), clamp(((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u)))) | (uint(2u)))) * 1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u), uint(_GLF_IDENTITY(2u, uint(_GLF_IDENTITY(uvec2(2u, 0u), (uvec2(2u, 0u)) | uvec2(0u, 0u))))))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u), uint(2u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u), uint(2u))))), 0u), clamp(uvec4(_GLF_struct_replacement_13.next_virtual_gid, (0u | 1u), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY((uint(2u)) ^ 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((uint(2u)) ^ 0u, ((uint(2u)) ^ 0u) >> 0u)))), uint(2u))), clamp(((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u)))) | (uint(2u)))) * 1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u), uint(_GLF_IDENTITY(2u, uint(_GLF_IDENTITY(uvec2(2u, 0u), (uvec2(2u, 0u)) | uvec2(0u, 0u))))))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u), uint(2u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u), uint(2u))))), 0u), _GLF_IDENTITY(uvec4(_GLF_struct_replacement_13.next_virtual_gid, (0u | 1u), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY((uint(2u)) ^ 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((uint(2u)) ^ 0u, ((uint(2u)) ^ 0u) >> 0u)))), uint(2u))), clamp(((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u)))) | (uint(2u)))) * 1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u), uint(_GLF_IDENTITY(2u, uint(_GLF_IDENTITY(uvec2(2u, 0u), (uvec2(2u, 0u)) | uvec2(0u, 0u))))))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u), uint(2u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u), uint(2u))))), 0u), (_GLF_IDENTITY(uvec4(_GLF_struct_replacement_13.next_virtual_gid, (0u | 1u), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY((uint(2u)) ^ 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((uint(2u)) ^ 0u, ((uint(2u)) ^ 0u) >> 0u)))), uint(2u))), clamp(((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u)))) | (uint(2u)))) * 1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u), uint(_GLF_IDENTITY(2u, uint(_GLF_IDENTITY(uvec2(2u, 0u), (uvec2(2u, 0u)) | uvec2(0u, 0u))))))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u), uint(2u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u), uint(2u))))), 0u), (uvec4(_GLF_struct_replacement_13.next_virtual_gid, (0u | 1u), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY((uint(2u)) ^ 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((uint(2u)) ^ 0u, ((uint(2u)) ^ 0u) >> 0u)))), uint(2u))), clamp(((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u)))) | (uint(2u)))) * 1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u), uint(_GLF_IDENTITY(2u, uint(_GLF_IDENTITY(uvec2(2u, 0u), (uvec2(2u, 0u)) | uvec2(0u, 0u))))))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u), uint(2u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u), uint(2u))))), 0u)) >> uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(_GLF_struct_replacement_13.next_virtual_gid, (0u | 1u), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY((uint(2u)) ^ 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((uint(2u)) ^ 0u, ((uint(2u)) ^ 0u) >> 0u)))), uint(2u))), clamp(((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u)))) | (uint(2u)))) * 1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u), uint(_GLF_IDENTITY(2u, uint(_GLF_IDENTITY(uvec2(2u, 0u), (uvec2(2u, 0u)) | uvec2(0u, 0u))))))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u), uint(2u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u), uint(2u))))), 0u), (true ? uvec4(_GLF_struct_replacement_13.next_virtual_gid, (0u | 1u), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY((uint(2u)) ^ 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((uint(2u)) ^ 0u, ((uint(2u)) ^ 0u) >> 0u)))), uint(2u))), clamp(((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u)))) | (uint(2u)))) * 1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u), uint(_GLF_IDENTITY(2u, uint(_GLF_IDENTITY(uvec2(2u, 0u), (uvec2(2u, 0u)) | uvec2(0u, 0u))))))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u), uint(2u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u), uint(2u))))), 0u) : _GLF_FUZZED(uvec4(13829u, 141207u, 32304u, 87368u)))))), uvec4(_GLF_struct_replacement_13.next_virtual_gid, (0u | 1u), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), min((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), (1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), 0u)))) << uvec4(0u, 0u, 0u, 0u))))], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! _GLF_IDENTITY((false), ((false)) || false))))), bool(bvec4(_GLF_IDENTITY(! (! (false)), ! (! (! (! _GLF_IDENTITY((false), ((false)) || false))))), true, false, true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))) && true, true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))) && true)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), true && (! ((false))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! ((false)), true && (! ((false)))))), (! ((_GLF_IDENTITY(! ((false)), true && (! ((false))))))) && true)))))), true)), false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-56.54)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, 1.0)))), bool(true))) < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)))), true)), ! (! (bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), false, _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5.7)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5.7)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y) || false))))), true)))))))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(((true ? -6.0 : 7.1) + 69.43)), _GLF_FUZZED(4.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), false, true))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), false, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), false, true))), false), true))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))).x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))).x), float(_GLF_FUZZED(4421.3684)), bool(false)))), float(_GLF_FUZZED(_GLF_IDENTITY(-32.60, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)) ? _GLF_FUZZED(-8678.7939) : -32.60)))), bool(false))), injectionSwitch.x)) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, false)), ! (! (bool(bvec4(_GLF_DEAD(false), true, false, false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
            return;
           return;
          }
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), false || (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false), ! (! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))))))
    barrier();
  }
}
