#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-67.02)), float(injectionSwitch.y), bool(true))), false, false, true)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, true, false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true)), bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true)), true, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(-59.69, 1284.8781)) : mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec2(false, false))) || (false)) || (_GLF_DEAD(false))), true), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec2(false, false))) || (false)) || (_GLF_DEAD(false))), true), false, false)), _GLF_IDENTITY(false, (false) && true), true)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED((2.0 + float(-79274))), max(_GLF_FUZZED((2.0 + float(-79274))), _GLF_FUZZED((2.0 + float(-79274)))))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_IDENTITY(true, ! (! (true)))))), true, true)))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-5516.3342), (_GLF_FUZZED(-5516.3342)) / 1.0)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4887.9506)), float(injectionSwitch.y), bool(true)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))), (! (false)) || false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(32263u)), _GLF_FUZZED(2.4)), bvec2(false, false))))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), ! (! (bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y)))))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7805.7629)), vec2(_GLF_FUZZED(1941.1524), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7805.7629)), vec2(_GLF_FUZZED(1941.1524), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), injectionSwitch)).y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (71855u & 0u) ^ (subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(mod(injectionSwitch, smoothstep(3024.0907, -3896.5588, 9.5))) : _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 0.0)))))).x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(log(injectionSwitch)))).y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(log(injectionSwitch)))).y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (false ? _GLF_FUZZED(vec2(-760.523, -3.5)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(log(injectionSwitch)), (_GLF_FUZZED(log(injectionSwitch))) + vec2(0.0, 0.0)))).y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(-6617.2681), (mat2(1.0) * (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))[1]), vec2(_GLF_IDENTITY((mat2(1.0) * (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY((mat2(1.0) * (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))), ((mat2(1.0) * (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))) * mat2(1.0))), (vec2(_GLF_IDENTITY((mat2(1.0) * (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))), ((mat2(1.0) * (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))) * mat2(1.0)))) * mat2(1.0))), (vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY((mat2(1.0) * (mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, 0.0))))) * (injectionSwitch))), ((mat2(1.0) * (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))) * mat2(1.0))), (vec2(_GLF_IDENTITY((mat2(1.0) * (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))), ((mat2(1.0) * (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))) * mat2(1.0)))) * mat2(1.0)))) - vec2(0.0, 0.0)))[0], _GLF_FUZZED(49.16)), bvec2(true, false))))).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! _GLF_IDENTITY((! (! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), ((! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))) && true))))))))))))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), false || (! (true))))))), false, true)))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), clamp(vec2(vec3(injectionSwitch, 0.0)), _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), max(vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0)))), _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), mix(vec2((vec2(vec3(injectionSwitch, 0.0)))[0], (vec2(vec3(injectionSwitch, 0.0)))[1]), vec2(_GLF_FUZZED(2.3), _GLF_FUZZED(-2.3)), bvec2(false, false)))))).y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), clamp(vec2(vec3(injectionSwitch, 0.0)), _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), max(vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0)))), _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), mix(vec2((vec2(vec3(injectionSwitch, 0.0)))[0], (vec2(vec3(injectionSwitch, 0.0)))[1]), vec2(_GLF_FUZZED(2.3), _GLF_FUZZED(-2.3)), bvec2(false, false)))))).y)), (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), clamp(vec2(vec3(injectionSwitch, 0.0)), _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), max(vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0)))), _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), mix(vec2((vec2(vec3(injectionSwitch, 0.0)))[0], (vec2(vec3(injectionSwitch, 0.0)))[1]), vec2(_GLF_FUZZED(2.3), _GLF_FUZZED(-2.3)), bvec2(false, false)))))).y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) + 0.0)))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(_GLF_IDENTITY(47.95, mix(float(_GLF_IDENTITY(47.95, mix(float(47.95), float(_GLF_FUZZED(885.806)), bool(false)))), float(_GLF_FUZZED((false ? 2.3 : 7519.7834))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -4.5, 68.87, -3.6).s)), vec2(_GLF_FUZZED(-533.627), (injectionSwitch)[1]), bvec2(false, true)), mix(vec2((mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(_GLF_IDENTITY(47.95, mix(float(_GLF_IDENTITY(47.95, mix(float(47.95), float(_GLF_FUZZED(885.806)), bool(false)))), float(_GLF_FUZZED((false ? 2.3 : 7519.7834))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -4.5, 68.87, -3.6).s)), vec2(_GLF_FUZZED(-533.627), (injectionSwitch)[1]), bvec2(false, true)))[0], _GLF_FUZZED(394.864)), vec2(_GLF_FUZZED(86.49), (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(_GLF_IDENTITY(47.95, mix(float(_GLF_IDENTITY(47.95, mix(float(47.95), float(_GLF_FUZZED(885.806)), bool(false)))), float(_GLF_FUZZED((false ? 2.3 : 7519.7834))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -4.5, 68.87, -3.6).s)), vec2(_GLF_FUZZED(-533.627), (injectionSwitch)[1]), bvec2(false, true)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) - _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-20.85) : 0.0))), vec2(mat2x4(vec2(0.0, 0.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true))), 1.0)))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) && true))))), true, true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 0.0, abs(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), 1.0, 0.0, 1.0, 1.0)), vec2(1.0, 1.0) * (vec2(mat3(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(abs(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY(abs(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), clamp(abs(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), abs(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), abs(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))))))) - 0.0), 1.0, 0.0, 1.0, 1.0))))).y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED((+ -312.722)), clamp(_GLF_FUZZED((+ -312.722)), _GLF_IDENTITY(_GLF_FUZZED((+ -312.722)), clamp(_GLF_FUZZED((+ -312.722)), _GLF_FUZZED((+ -312.722)), _GLF_FUZZED((+ -312.722)))), _GLF_FUZZED((+ -312.722))))), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
          return;
        }
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec4((false) || false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), float(_GLF_FUZZED(374.434)), bool(false))))), false, true))))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), true && (! (_GLF_IDENTITY(true, ! (! (true)))))))), ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, true))), true)))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), vec4(mat2x4(vec4(injectionSwitch, 0.0, 0.0), 1.0, 0.0, 0.0, 1.0))))).y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || false))))), _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY(0, max(0, 0)) | (4)), 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) * 1));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), false)))))), bvec3(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))))))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), bvec3(bvec3(bvec3(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), false, true)))))))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_local_id + 1)), _GLF_IDENTITY(1u * (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0)) / 1.0))) + (subgroup_local_id + 1))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_local_id + 1))), min(1u * (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_local_id + 1))), _GLF_IDENTITY(1u * (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_local_id + 1))), clamp(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_local_id + 1), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_local_id + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_local_id + 1)))), 0u | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_local_id + 1), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_local_id + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_local_id + 1))))))), _GLF_IDENTITY(1u * (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_local_id + 1))), (1u * (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_local_id + 1)))) | (1u * (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) + (subgroup_local_id + 1))))), 1u * (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_local_id + 1))))))), 0u, (0u & 9776u), 0u), (uvec4(_GLF_IDENTITY(1u * (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) + (subgroup_local_id + 1))), min(1u * (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_local_id + 1))), _GLF_IDENTITY(1u, 0u | (1u)) * (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_local_id + 1))))), 0u, _GLF_IDENTITY((0u & 9776u), ((0u & 9776u)) / (1u | 1u)), 0u)) / _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), clamp(uvec4(1u, 1u, 1u, 1u), uvec4(1u, 1u, 1u, 1u), uvec4(1u, 1u, 1u, 1u))))))))), clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) + 1, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) * 1u) ^ 0u, 0u | (_GLF_IDENTITY((subgroup_local_id) ^ 0u, max((subgroup_local_id) ^ 0u, (subgroup_local_id) ^ 0u))))) + 1)) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   int i = 0;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (2) >> (_GLF_IDENTITY(1, max(1, 1)) ^ 1))), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (false ? _GLF_IDENTITY(_GLF_FUZZED(i), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)), max(_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), min(int(6), int(6)))) | (_GLF_IDENTITY(int(6), clamp(int(6), int(6), _GLF_IDENTITY(int(6), int(int(int(6)))))))), int(6))), int(int((1 << _GLF_IDENTITY(int(6), int(6)))))) >> _GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(6), (int(6)) | (int(6))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), min(int(ivec3(int(6), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), int(ivec3(int(6), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(ivec3(int(6), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), min(int(ivec3(int(6), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), int(ivec3(int(6), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))))), (0 | 1) * (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(ivec3(int(6), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), min(int(ivec3(int(6), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), int(_GLF_IDENTITY(ivec3(int(6), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), max(ivec3(int(6), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), _GLF_IDENTITY(ivec3(int(6), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec3(94132, -85919, 3148)) : ivec3(int(6), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))))))))), ~ (~ (_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(ivec3(int(6), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), min(int(ivec3(int(6), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), int(ivec3(int(6), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)))))))))), 1, 0)))), ~ (~ (1 << _GLF_IDENTITY(int(6), int(6)))))), min((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(ivec3(int(6), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), min(int(ivec3(int(6), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), int(ivec3(int(6), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)))))), ~ (~ (1 << _GLF_IDENTITY(int(6), int(6)))))), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, int(ivec2(6, 1))), 6))), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(int(6), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), min(int(ivec3(int(6), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), int(ivec3(int(6), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(int(6), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), min(int(ivec3(int(6), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), int(ivec3(int(6), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))), 0)))), (_GLF_IDENTITY(int(ivec3(int(6), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), min(int(ivec3(int(6), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), int(ivec3(int(6), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))))) | (_GLF_IDENTITY(int(ivec3(int(6), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), min(int(ivec3(int(6), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), int(ivec3(int(6), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))))))) >> int(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.5) : 0.0)), injectionSwitch.x))))), ~ (~ (1 << _GLF_IDENTITY(int(6), int(6)))))))) >> _GLF_IDENTITY(int(6), int(6))))) * (_GLF_IDENTITY(_GLF_FUZZED(i), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(_GLF_FUZZED(i), 0)), (true ? int(ivec2(_GLF_FUZZED(i), 0)) : _GLF_FUZZED(-79398))), 0 + _GLF_IDENTITY((_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(i, (i) | 0), (_GLF_IDENTITY(i, (i) | 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(i, (i) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(i, (i) | 0), clamp(_GLF_IDENTITY(i, (i) | 0), _GLF_IDENTITY(i, (i) | 0), _GLF_IDENTITY(i, (i) | 0)))) >> 0)))), 0 | (_GLF_FUZZED(i))), 0)), (int(ivec2(_GLF_FUZZED(_GLF_IDENTITY(i, max(_GLF_IDENTITY(i, (i) << 0), _GLF_IDENTITY(i, (i) / 1)))), 0))) ^ (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, ~ (~ (0))), 0)) ^ 0))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_FUZZED(i), 0 | (_GLF_FUZZED(i))), 0)), (int(ivec2(_GLF_FUZZED(_GLF_IDENTITY(i, max(_GLF_IDENTITY(i, (_GLF_IDENTITY(i, (i) | (_GLF_IDENTITY(i, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(i) : _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) << 0), 0, 0)))) ^ _GLF_IDENTITY((i), _GLF_IDENTITY(min((i), _GLF_IDENTITY((i), (false ? _GLF_FUZZED(clamp(i, 30862, i)) : (i)))), _GLF_IDENTITY((_GLF_IDENTITY(min((i), _GLF_IDENTITY((i), (false ? _GLF_FUZZED(clamp(i, 30862, i)) : (i)))), 0 | (min((i), _GLF_IDENTITY((i), (false ? _GLF_FUZZED(clamp(i, 30862, i)) : (i))))))) | (min((i), _GLF_IDENTITY((i), (false ? _GLF_FUZZED(clamp(i, 30862, i)) : (i))))), max((_GLF_IDENTITY(min((i), _GLF_IDENTITY((i), (false ? _GLF_FUZZED(clamp(i, 30862, i)) : (i)))), 0 | (min((i), _GLF_IDENTITY((i), (false ? _GLF_FUZZED(clamp(i, 30862, i)) : (i))))))) | (min((i), _GLF_IDENTITY((i), (false ? _GLF_FUZZED(clamp(i, 30862, i)) : (i))))), (_GLF_IDENTITY(min((i), _GLF_IDENTITY((i), (false ? _GLF_FUZZED(clamp(i, 30862, i)) : (i)))), 0 | (min((i), _GLF_IDENTITY((i), (false ? _GLF_FUZZED(clamp(i, 30862, i)) : (i))))))) | (min((i), _GLF_IDENTITY((i), (false ? _GLF_FUZZED(clamp(i, 30862, i)) : (i))))))))))))) << _GLF_IDENTITY(0, (0) - 0)), _GLF_IDENTITY(i, clamp(i, i, _GLF_IDENTITY(i, (i) * 1)))))), 0))) ^ (0 ^ 0))), clamp((_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_FUZZED(i), 0 | (_GLF_FUZZED(i))), 0)), (int(ivec2(_GLF_FUZZED(_GLF_IDENTITY(i, max(_GLF_IDENTITY(i, (_GLF_IDENTITY(i, (i) | (_GLF_IDENTITY(i, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(i) : _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) << 0), 0, 0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) << 0), 0, 0)), (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) << 0), 0, 0))) | (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) << 0), 0, 0)))) : _GLF_FUZZED(i))))) ^ _GLF_IDENTITY((i), _GLF_IDENTITY(min((i), _GLF_IDENTITY((i), (false ? _GLF_FUZZED(clamp(i, 30862, i)) : (i)))), (_GLF_IDENTITY(min((i), _GLF_IDENTITY((i), (false ? _GLF_FUZZED(clamp(i, 30862, i)) : (i)))), 0 | (min((i), _GLF_IDENTITY((i), (false ? _GLF_FUZZED(clamp(i, 30862, i)) : (i))))))) | (min((i), _GLF_IDENTITY((i), (false ? _GLF_FUZZED(clamp(i, 30862, i)) : (i))))))))))) << 0), _GLF_IDENTITY(i, clamp(i, i, _GLF_IDENTITY(i, (i) * 1)))))), 0))) ^ (0 ^ 0))), (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_FUZZED(i), 0 | (_GLF_FUZZED(i))), 0)), (int(ivec2(_GLF_FUZZED(_GLF_IDENTITY(i, max(_GLF_IDENTITY(i, (_GLF_IDENTITY(i, (i) | (_GLF_IDENTITY(i, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(i) : _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) << 0), 0, 0)))) ^ _GLF_IDENTITY((i), _GLF_IDENTITY(min((i), _GLF_IDENTITY((i), (false ? _GLF_FUZZED(clamp(i, 30862, i)) : (i)))), (_GLF_IDENTITY(min((i), _GLF_IDENTITY((i), (false ? _GLF_FUZZED(clamp(i, 30862, i)) : (i)))), _GLF_IDENTITY(0, 1 * (0)) | (min((i), _GLF_IDENTITY((i), (false ? _GLF_FUZZED(clamp(i, 30862, i)) : (i))))))) | (min((i), _GLF_IDENTITY((i), (false ? _GLF_FUZZED(clamp(i, 30862, i)) : (i))))))))))) << 0), _GLF_IDENTITY(i, clamp(i, i, _GLF_IDENTITY(i, (i) * 1)))))), 0))) ^ (0 ^ 0))), (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_FUZZED(i), 0 | (_GLF_FUZZED(i))), 0)), (int(ivec2(_GLF_FUZZED(_GLF_IDENTITY(i, max(_GLF_IDENTITY(i, (_GLF_IDENTITY(i, (i) | (_GLF_IDENTITY(i, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(i) : _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) << 0), 0, 0)))) ^ _GLF_IDENTITY((i), _GLF_IDENTITY(min((i), _GLF_IDENTITY((i), (false ? _GLF_FUZZED(clamp(i, 30862, i)) : (i)))), (_GLF_IDENTITY(min(_GLF_IDENTITY((i), (_GLF_IDENTITY((i), max((i), _GLF_IDENTITY((i), ((i)) - 0)))) / 1), _GLF_IDENTITY((i), (false ? _GLF_FUZZED(clamp(i, 30862, i)) : (i)))), _GLF_IDENTITY(0 | (min((i), _GLF_IDENTITY((i), (false ? _GLF_FUZZED(clamp(i, 30862, i)) : (i))))), (true ? _GLF_IDENTITY(0 | (min((i), _GLF_IDENTITY((i), (false ? _GLF_FUZZED(clamp(i, 30862, i)) : (i))))), (true ? 0 | (min((i), _GLF_IDENTITY((i), (false ? _GLF_FUZZED(clamp(i, 30862, i)) : (i))))) : _GLF_FUZZED(36890))) : _GLF_FUZZED(55457))))) | (min((i), _GLF_IDENTITY((i), (false ? _GLF_FUZZED(clamp(i, 30862, i)) : (i))))))))))) << 0), _GLF_IDENTITY(i, clamp(i, i, _GLF_IDENTITY(i, (i) * 1)))))), 0))) ^ (0 ^ 0))))))))))) : 4)) : _GLF_FUZZED(i))), _GLF_IDENTITY(64, (64) >> 0), 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))))), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))))), true, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-596.066) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x) - 0.0, max((injectionSwitch.x) - 0.0, _GLF_IDENTITY((injectionSwitch.x) - 0.0, ((injectionSwitch.x) - 0.0) - 0.0)))), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) * 1.0)), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x) - _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(0.0, abs(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), 0.0), transpose(transpose(mat2(0.0, abs(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0))))), _GLF_IDENTITY(max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(0.0, abs(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), 0.0), transpose(transpose(_GLF_IDENTITY(mat2(0.0, abs(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), 0.0), _GLF_IDENTITY((mat2(0.0, abs(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), 0.0)) / mat2(1.0, 1.0, 1.0, 1.0), (_GLF_IDENTITY((mat2(0.0, abs(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), 0.0)), mat2(mat2(_GLF_IDENTITY((mat2(0.0, abs(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), 0.0)), ((mat2(0.0, abs(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), 0.0))) / mat2(1.0, 1.0, 1.0, 1.0))))) / mat2(1.0, 1.0, 1.0, 1.0)) + mat2(0.0, 0.0, 0.0, 0.0))))))), mix(float(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, (0.0) * 1.0), abs(0.0), determinant(mat2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, length(0.0))))), 1.0, 0.0, 0.0)), 0.0), transpose(_GLF_IDENTITY(transpose(mat2(0.0, abs(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), 0.0)), (false ? _GLF_FUZZED(mat2(-2.1, -3.1, 9790.8799, -2.5)) : transpose(mat2(0.0, abs(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.4)), bool(false))), 0.0, 0.0))), determinant(_GLF_IDENTITY(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0), mat2(mat4x3(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0))))), 0.0)))))))), _GLF_IDENTITY(float(_GLF_FUZZED(-2753.4964)), (true ? float(_GLF_FUZZED(-2753.4964)) : _GLF_FUZZED(-3.3))), bool(false))), float(_GLF_IDENTITY(mat2(0.0, abs(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), 0.0), transpose(transpose(mat2(0.0, abs(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), 0.0)))))), (_GLF_IDENTITY(max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(0.0, abs(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), 0.0), transpose(transpose(_GLF_IDENTITY(mat2(0.0, abs(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), 0.0), _GLF_IDENTITY((mat2(0.0, abs(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), 0.0)) / mat2(1.0, 1.0, 1.0, 1.0), (_GLF_IDENTITY((mat2(0.0, abs(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), 0.0)), mat2(mat2(_GLF_IDENTITY((mat2(0.0, abs(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), 0.0)), ((mat2(0.0, abs(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), 0.0))) / mat2(1.0, 1.0, 1.0, 1.0))))) / mat2(1.0, 1.0, 1.0, 1.0)) + mat2(0.0, 0.0, 0.0, 0.0))))))), mix(float(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, (0.0) * 1.0), abs(0.0), determinant(mat2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, length(0.0))))), 1.0, 0.0, 0.0)), 0.0), transpose(_GLF_IDENTITY(transpose(mat2(0.0, abs(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), 0.0)), (false ? _GLF_FUZZED(mat2(-2.1, -3.1, 9790.8799, -2.5)) : transpose(mat2(0.0, abs(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.4)), bool(false))), 0.0, 0.0))), determinant(_GLF_IDENTITY(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0), mat2(mat4x3(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0))))), 0.0)))))))), _GLF_IDENTITY(float(_GLF_FUZZED(-2753.4964)), (true ? float(_GLF_FUZZED(-2753.4964)) : _GLF_FUZZED(-3.3))), bool(false))), float(_GLF_IDENTITY(mat2(0.0, abs(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), 0.0), transpose(transpose(mat2(0.0, abs(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), 0.0)))))), float(mat2x3(max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(0.0, abs(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), 0.0), transpose(transpose(_GLF_IDENTITY(mat2(0.0, abs(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), 0.0), _GLF_IDENTITY((mat2(0.0, abs(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), 0.0)) / mat2(1.0, 1.0, 1.0, 1.0), (_GLF_IDENTITY((mat2(0.0, abs(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), 0.0)), mat2(mat2(_GLF_IDENTITY((mat2(0.0, abs(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), 0.0)), ((mat2(0.0, abs(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), 0.0))) / mat2(1.0, 1.0, 1.0, 1.0))))) / mat2(1.0, 1.0, 1.0, 1.0)) + mat2(0.0, 0.0, 0.0, 0.0))))))), mix(float(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, (0.0) * 1.0), abs(0.0), determinant(mat2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, length(0.0))))), 1.0, 0.0, 0.0)), 0.0), transpose(_GLF_IDENTITY(transpose(mat2(0.0, abs(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), 0.0)), (false ? _GLF_FUZZED(mat2(-2.1, -3.1, 9790.8799, -2.5)) : transpose(mat2(0.0, abs(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.4)), bool(false))), 0.0, 0.0))), determinant(_GLF_IDENTITY(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0), mat2(mat4x3(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0))))), 0.0)))))))), _GLF_IDENTITY(float(_GLF_FUZZED(-2753.4964)), (true ? float(_GLF_FUZZED(-2753.4964)) : _GLF_FUZZED(-3.3))), bool(false))), float(_GLF_IDENTITY(mat2(0.0, abs(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), 0.0), transpose(transpose(mat2(0.0, abs(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), 0.0)))))), log(1.0), 0.0, 1.0, 0.0, 0.0)))) / abs(sqrt(1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.0)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, sqrt(0.0) + (injectionSwitch.y)))))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) * 1.0)))), float(_GLF_FUZZED(-3311.3269)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)), 0.0, 0.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) + 0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 1.0)))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false)))), true))) || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-814.155)), float(injectionSwitch.y), bool(true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), false)))) && true))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-814.155)), _GLF_IDENTITY(float(injectionSwitch.y), (_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) + 0.0)) - 0.0), _GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), false || (! (bool(true))))))))), false || ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))), true, false)))))))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), ~ (~ (uint(2)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), ~ (~ (uint(2)))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(2)), ((uint(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) | (2)), 2, 2))))) | ((uint(2)))), 0u ^ (~ _GLF_IDENTITY((uint(2)), ((uint(2))) | ((uint(2)))))))), min(_GLF_IDENTITY(uint(2), ~ (~ (uint(2)))), _GLF_IDENTITY(uint(2), ~ (~ (uint(2)))))), _GLF_IDENTITY(uint(2), ~ (~ (uint(2)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), ~ (~ (uint(2)))), ~ (~ (_GLF_IDENTITY(uint(2), ~ (~ (uint(2))))))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), ~ (~ (uint(2)))), ~ (~ (_GLF_IDENTITY(uint(2), ~ (~ (uint(2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), ~ (~ (uint(2)))), ~ (~ (_GLF_IDENTITY(uint(2), ~ (~ (uint(2)))))))) / 1u)))), _GLF_IDENTITY(uint(2), ~ (~ (uint(2))))), 0u ^ (clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), ~ (~ (uint(2)))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(2)), ((uint(2))) | ((uint(2)))), 0u ^ (~ _GLF_IDENTITY((uint(2)), ((uint(2))) | ((uint(2)))))))), min(_GLF_IDENTITY(uint(2), ~ (~ (uint(2)))), _GLF_IDENTITY(uint(2), ~ (~ (uint(2)))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(uint(2), _GLF_IDENTITY(uint(2), min(uint(2), uint(2))), uint(2))), ~ (~ (uint(2)))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), ~ (~ (uint(2)))), ~ (~ (_GLF_IDENTITY(uint(2), ~ (~ (uint(2))))))), _GLF_IDENTITY(uint(2), ~ (~ (uint(2)))))))))), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), max(_GLF_IDENTITY((4), (false ? _GLF_FUZZED(37180) : (4))), (4))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((4), max(_GLF_IDENTITY((4), (false ? _GLF_FUZZED(37180) : (4))), (4))), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (0) | (_GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), ~ (_GLF_IDENTITY(~ ((0)), (_GLF_IDENTITY(~ ((0)), (~ ((0))) - 0)) | (~ ((0))))))))) ^ _GLF_IDENTITY((_GLF_IDENTITY((4), max(_GLF_IDENTITY(_GLF_IDENTITY((4), (false ? _GLF_FUZZED(37180) : _GLF_IDENTITY((4), int(int((4)))))), clamp(_GLF_IDENTITY((4), (false ? _GLF_FUZZED(37180) : _GLF_IDENTITY((4), int(int((4)))))), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(37180) : _GLF_IDENTITY((4), int(int((4)))))), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(37180) : _GLF_IDENTITY((4), int(int((4)))))))), (4)))), (_GLF_IDENTITY((_GLF_IDENTITY((4), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), (false ? _GLF_FUZZED(37180) : (4))), min(_GLF_IDENTITY((4), (false ? _GLF_FUZZED(37180) : (4))), _GLF_IDENTITY(_GLF_IDENTITY((4), (false ? _GLF_FUZZED(37180) : (4))), clamp(_GLF_IDENTITY((4), (false ? _GLF_FUZZED(37180) : (4))), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(37180) : (4))), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(37180) : (4))))))), (4)))), 0 | _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((4), max(_GLF_IDENTITY((4), (false ? _GLF_FUZZED(37180) : (_GLF_IDENTITY(4, (4) | (4))))), (4)))), ((_GLF_IDENTITY((4), max(_GLF_IDENTITY((4), (false ? _GLF_FUZZED(37180) : (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4), (false ? _GLF_FUZZED(-45431) : (4))) | (4)), (_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) * ((4) | _GLF_IDENTITY((4), ((4)) - 0))))) / (1 ^ 0))))), (4))))) << (0 | 0))), ((_GLF_IDENTITY((_GLF_IDENTITY((4), max(_GLF_IDENTITY((4), (false ? _GLF_FUZZED(37180) : (_GLF_IDENTITY(4, (4) | (4))))), (4)))), ((_GLF_IDENTITY((4), max(_GLF_IDENTITY((4), (false ? _GLF_FUZZED(37180) : (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) * ((4) | _GLF_IDENTITY((4), _GLF_IDENTITY(((4)) - 0, (((4)) - 0) << 0)))))) / (1 ^ 0))))), (4))))) << (0 | _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) * 1))))))) << 0))) >> 0))), max((_GLF_IDENTITY(_GLF_IDENTITY((4), max(_GLF_IDENTITY((4), (false ? _GLF_FUZZED(37180) : (4))), (4))), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (0) | (_GLF_IDENTITY(0, (0) | (0)))) ^ _GLF_IDENTITY((_GLF_IDENTITY((4), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | (~ (4)))))), (false ? _GLF_FUZZED(37180) : _GLF_IDENTITY((4), int(int((4)))))), clamp(_GLF_IDENTITY((4), (false ? _GLF_FUZZED(37180) : _GLF_IDENTITY((4), int(int((4)))))), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(37180) : _GLF_IDENTITY((4), int(int((4)))))), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(37180) : _GLF_IDENTITY((4), int(int((4)))))))), (4)))), (_GLF_IDENTITY((_GLF_IDENTITY((4), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), (false ? _GLF_FUZZED(37180) : (4))), min(_GLF_IDENTITY((4), (false ? _GLF_FUZZED(37180) : (4))), _GLF_IDENTITY(_GLF_IDENTITY((4), (false ? _GLF_FUZZED(37180) : (4))), (_GLF_IDENTITY((4), (false ? _GLF_FUZZED(37180) : (4)))) + (0 & 4898)))), (4)))), 0 | _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((4), max(_GLF_IDENTITY((4), (false ? _GLF_FUZZED(37180) : (_GLF_IDENTITY(4, (4) | (4))))), (4)))), ((_GLF_IDENTITY((4), max(_GLF_IDENTITY((4), (false ? _GLF_FUZZED(37180) : (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) * ((4) | _GLF_IDENTITY((4), ((4)) - 0))))) / (1 ^ 0))))), (4))))) << (0 | 0))), ((_GLF_IDENTITY((_GLF_IDENTITY((4), max(_GLF_IDENTITY((4), (false ? _GLF_FUZZED(37180) : (_GLF_IDENTITY(4, (4) | (4))))), (4)))), ((_GLF_IDENTITY((4), max(_GLF_IDENTITY((4), (false ? _GLF_FUZZED(37180) : (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) + (0 >> _GLF_IDENTITY(int(5), int(5))))))) | (4), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) * ((4) | _GLF_IDENTITY((4), ((4)) - 0))))) / (1 ^ 0))))), (4))))) << (0 | 0)))) << 0))) >> 0))), (_GLF_IDENTITY(_GLF_IDENTITY((4), max(_GLF_IDENTITY((4), (false ? _GLF_FUZZED(37180) : (4))), (4))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (0) | (_GLF_IDENTITY(0, (0) | (0)))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (0) | (_GLF_IDENTITY(0, (0) | (0)))), 0, 0, 0))) ^ _GLF_IDENTITY((_GLF_IDENTITY((4), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4), (false ? _GLF_FUZZED(37180) : _GLF_IDENTITY((4), int(int((4)))))), (_GLF_IDENTITY((4), (false ? _GLF_FUZZED(37180) : _GLF_IDENTITY((4), int(int((4))))))) << 0), clamp(_GLF_IDENTITY((4), (false ? _GLF_FUZZED(37180) : _GLF_IDENTITY((4), int(int((4)))))), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(37180) : _GLF_IDENTITY((4), int(int((4)))))), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(37180) : _GLF_IDENTITY((4), int(int((4)))))))), (4)))), (_GLF_IDENTITY((_GLF_IDENTITY((4), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), (false ? _GLF_FUZZED(37180) : (4))), min(_GLF_IDENTITY((4), (false ? _GLF_FUZZED(37180) : (4))), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(37180) : (4))))), (4)))), 0 | _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((4), max(_GLF_IDENTITY((4), (false ? _GLF_FUZZED(37180) : (_GLF_IDENTITY(4, (4) | (4))))), (4)))), ((_GLF_IDENTITY((4), max(_GLF_IDENTITY((4), (false ? _GLF_FUZZED(37180) : (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) * ((4) | _GLF_IDENTITY((4), ((4)) - 0))))) / (1 ^ 0))))), (4))))) << (0 | 0))), ((_GLF_IDENTITY((_GLF_IDENTITY((4), max(_GLF_IDENTITY((4), (false ? _GLF_FUZZED(37180) : (_GLF_IDENTITY(4, (4) | (4))))), (4)))), ((_GLF_IDENTITY((4), _GLF_IDENTITY(max(_GLF_IDENTITY((4), (false ? _GLF_FUZZED(37180) : (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) * ((4) | _GLF_IDENTITY((4), ((4)) - 0))))) / (1 ^ 0))))), (4)), (max(_GLF_IDENTITY((4), (false ? _GLF_FUZZED(37180) : (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) * ((4) | _GLF_IDENTITY((4), ((4)) - 0))))) / (1 ^ 0))))), (4))) / 1)))) << (0 | 0)))) << 0))) >> 0))))) | (_GLF_IDENTITY((4), max(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) >> 0)), (false ? _GLF_FUZZED(37180) : (4))), (4))))) - 0), 64, 4);
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}
