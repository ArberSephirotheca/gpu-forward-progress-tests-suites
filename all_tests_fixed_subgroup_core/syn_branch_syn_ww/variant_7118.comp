#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, 0.0 + (0.0)))), ! _GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || (_GLF_IDENTITY(true, true && (true)))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), (true ? (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)) : _GLF_FUZZED(clamp(injectionSwitch, injectionSwitch, vec2(3.7, 5303.8107)))))).x > injectionSwitch.y)))))), ((! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || (_GLF_IDENTITY(true, true && (true)))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), (true ? (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)) : _GLF_FUZZED(clamp(injectionSwitch, injectionSwitch, vec2(3.7, 5303.8107)))))).x > injectionSwitch.y))))))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (false), true && (_GLF_IDENTITY(false, ! (! (false))) || (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))) || (false))))) && true))), _GLF_IDENTITY(false, bool(bvec3(false, true, true))) || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) - 0)], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-80805) : 1))], mix(float(_GLF_FUZZED(-0.4)), float(injectionSwitch[1]), bool(true))))).x > injectionSwitch.y)))), bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-0.4)), float(injectionSwitch[1]), bool(true))))).x > injectionSwitch.y)))), false, false, _GLF_IDENTITY(true, (true) || false))))), ! (! ((! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) - 0)], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-80805) : 1))], mix(float(_GLF_FUZZED(-0.4)), float(injectionSwitch[1]), bool(true))))).x > injectionSwitch.y)))), bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-0.4)), float(injectionSwitch[1]), bool(true))))).x > injectionSwitch.y)))), false, false, _GLF_IDENTITY(true, (true) || false))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) ^ 0u))), 1u, 1u) * (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ ((gl_NumWorkGroups))) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED((subgroup_id & uvec2(147806u, 118364u))[0]) : _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY((1u), 1u * ((1u))) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(_GLF_IDENTITY(true ? 5u : _GLF_FUZZED((subgroup_size ^ 130436u)), max(true ? 5u : _GLF_FUZZED((subgroup_size ^ 130436u)), true ? 5u : _GLF_FUZZED((subgroup_size ^ 130436u)))), clamp(_GLF_IDENTITY(true ? 5u : _GLF_FUZZED((subgroup_size ^ 130436u)), max(true ? 5u : _GLF_FUZZED((subgroup_size ^ 130436u)), true ? 5u : _GLF_FUZZED((subgroup_size ^ 130436u)))), true ? 5u : _GLF_FUZZED((subgroup_size ^ 130436u)), true ? 5u : _GLF_FUZZED((subgroup_size ^ 130436u))))))), uint(5u)))))), 1u), max(uvec3(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED((subgroup_id & uvec2(147806u, 118364u))[0]) : _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY((1u), 1u * ((1u))) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED((subgroup_size ^ 130436u))))), uint(5u)))))), 1u), uvec3(_GLF_IDENTITY(1u, (1u) / 1u), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED((subgroup_id & uvec2(147806u, 118364u))[0]) : _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY((1u), 1u * ((1u))) >> (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED((subgroup_size ^ 130436u)))), (_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED((subgroup_size ^ 130436u))))) | (_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED((subgroup_size ^ 130436u))))))), uint(5u)), ~ (~ (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED((subgroup_size ^ 130436u))))), uint(5u))))))))), 1u))) * (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)))))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y) || false)), ((_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0))), (vec2(0.0, 1.0)) * mat2(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0))).x > injectionSwitch.y)) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, bool(bool(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, (((injectionSwitch.x > injectionSwitch.y)) && true) && true)))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && true)), true && (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true)) || false))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true) && true), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])))), injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y), float(_GLF_FUZZED(vec2(_GLF_IDENTITY(-6.1, clamp(-6.1, -6.1, _GLF_IDENTITY(-6.1, max(-6.1, -6.1)))), -8828.9943).g)), bool(false)))), ((injectionSwitch.x > injectionSwitch.y)) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(asin(injectionSwitch)))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y), _GLF_IDENTITY(float(_GLF_FUZZED(vec2(-6.1, -8828.9943).g)), mix(float(_GLF_FUZZED(7795.6796)), float(float(_GLF_FUZZED(vec2(-6.1, -8828.9943).g))), bool(true))), bool(false)))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / 1.0) < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))), max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))))) : _GLF_FUZZED(injectionSwitch))).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6226.7367, 3.0)) : injectionSwitch)))), min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), injectionSwitch)))).y), float(_GLF_FUZZED(vec2(-6.1, -8828.9943).g)), bool(false)))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y, (false ? _GLF_FUZZED(-5.5) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y)), mix(float(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y), float(_GLF_FUZZED(vec2(-6.1, -8828.9943).g)), bool(false))))) && true)) || false), ((injectionSwitch.x > injectionSwitch.y)) && true))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], (false ? _GLF_FUZZED(-855.653) : (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))[0])), _GLF_FUZZED(3.4)), vec2(_GLF_FUZZED(-93.45), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, false || (false)), true))).x > injectionSwitch.y))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(8.5)), min((true ? _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(8.5)), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(8.5)), (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) ? _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(8.5)), (false ? _GLF_FUZZED(-331.947) : (true ? _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(8.5))))) / exp(0.0))))))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))) > injectionSwitch.y))))) && true))))))))))), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && true)), true && (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true)) || false))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true) && true), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])))), injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y), float(_GLF_FUZZED(vec2(_GLF_IDENTITY(-6.1, clamp(-6.1, -6.1, _GLF_IDENTITY(-6.1, max(-6.1, -6.1)))), -8828.9943).g)), bool(false)))), ((injectionSwitch.x > injectionSwitch.y)) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(asin(injectionSwitch)))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y), _GLF_IDENTITY(float(_GLF_FUZZED(vec2(-6.1, -8828.9943).g)), mix(float(_GLF_FUZZED(7795.6796)), float(float(_GLF_FUZZED(vec2(-6.1, -8828.9943).g))), bool(true))), bool(false)))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / 1.0) < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))), max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))))) : _GLF_FUZZED(injectionSwitch))).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6226.7367, 3.0)) : injectionSwitch)))), min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), injectionSwitch)))).y), float(_GLF_FUZZED(vec2(-6.1, -8828.9943).g)), bool(false)))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y, (false ? _GLF_FUZZED(-5.5) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y)), mix(float(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y), float(_GLF_FUZZED(vec2(-6.1, -8828.9943).g)), bool(false))))) && true)) || false), ((injectionSwitch.x > injectionSwitch.y)) && true))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], (false ? _GLF_FUZZED(-855.653) : (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))[0])), _GLF_FUZZED(3.4)), vec2(_GLF_FUZZED(-93.45), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, false || (false)), true))).x > injectionSwitch.y))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(8.5)), min((true ? _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(8.5)), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(8.5)), (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) ? _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(8.5)), (false ? _GLF_FUZZED(-331.947) : (true ? _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(8.5))))) / exp(0.0))))))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))) > injectionSwitch.y))))) && true))))))))))), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))))))), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && true)), true && (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true)) || false))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true) && true), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])))), injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y), float(_GLF_FUZZED(vec2(_GLF_IDENTITY(-6.1, clamp(-6.1, -6.1, _GLF_IDENTITY(-6.1, max(-6.1, -6.1)))), -8828.9943).g)), bool(false)))), ((injectionSwitch.x > injectionSwitch.y)) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(asin(injectionSwitch)))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y), _GLF_IDENTITY(float(_GLF_FUZZED(vec2(-6.1, -8828.9943).g)), mix(float(_GLF_FUZZED(7795.6796)), float(float(_GLF_FUZZED(vec2(-6.1, -8828.9943).g))), bool(true))), bool(false)))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / 1.0) < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))), max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))))) : _GLF_FUZZED(injectionSwitch))).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6226.7367, 3.0)) : injectionSwitch)))), min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), injectionSwitch)))).y), float(_GLF_FUZZED(vec2(-6.1, -8828.9943).g)), bool(false)))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y, (false ? _GLF_FUZZED(-5.5) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y)), mix(float(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y), float(_GLF_FUZZED(vec2(-6.1, -8828.9943).g)), bool(false))))) && true)) || false), ((injectionSwitch.x > injectionSwitch.y)) && true))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], (false ? _GLF_FUZZED(-855.653) : (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))[0])), _GLF_FUZZED(3.4)), vec2(_GLF_FUZZED(-93.45), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, false || (false)), true))).x > injectionSwitch.y))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(8.5)), min((true ? _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(8.5)), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(8.5)), (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) ? _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(8.5)), (false ? _GLF_FUZZED(-331.947) : (true ? _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(8.5))))) / exp(0.0))))))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))) > injectionSwitch.y))))) && true))))))))))), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))))))) || false)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (uvec3(uvec3(gl_WorkGroupSize))) - uvec3(0u, 0u, 0u))).x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, workgroup_size * workgroup_id));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | (~ (subgroup_size))))), (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | (~ (subgroup_size)))))) ^ 0u) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) | (3u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(_GLF_IDENTITY(3u, (false ? _GLF_FUZZED(packHalf2x16(injectionSwitch)) : 3u)))) | 0u), uint(3u))) * (_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(((workgroup_base)), max(_GLF_IDENTITY(((workgroup_base)), max(((workgroup_base)), ((workgroup_base)))), ((workgroup_base)))) >> 0u))), (~ (_GLF_IDENTITY(workgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))))), max(_GLF_IDENTITY(((workgroup_base)), max(((workgroup_base)), ((workgroup_base)))), _GLF_IDENTITY(((workgroup_base)), 0u | (((workgroup_base)))))) >> 0u)))) * 1u)), ((~ (_GLF_IDENTITY(workgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u))))) / 1u)) * 1u)))) + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) / _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), (1u) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), (1u) * 1u)) >> 0u), max((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) / _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), (1u) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), (1u) * 1u)) >> 0u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) / _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), (1u) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), (1u) * 1u)) >> 0u)))) + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), virtual_gid))) * 1u)], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (uint(1)) << 0u)) | 0u), _GLF_IDENTITY((true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(abs(64010)))), (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(abs(64010))))) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(abs(64010))))))), min(uint(1), uint(1))) : _GLF_FUZZED(164037u)), 0u | ((_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec3(bool(bvec4(true, true, false, false)), false, true)))), false, false, false))) ? _GLF_IDENTITY(uint(1), min(uint(1), uint(1))) : _GLF_FUZZED(164037u))))), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(0 ^ (4), min(_GLF_IDENTITY(0 ^ (4), (0 ^ (4)) | (0 ^ (4))), _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-21053)))), max(_GLF_IDENTITY(_GLF_IDENTITY(0 ^ (4), (0 ^ (_GLF_IDENTITY(4, (4) | (4)))) - 0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(0 ^ (4), (0 ^ (_GLF_IDENTITY(4, (4) | (4)))) - 0), (_GLF_IDENTITY(0 ^ (4), (0 ^ (_GLF_IDENTITY(4, (4) | (4)))) - 0)) ^ 0) : _GLF_FUZZED(-41213))), 0 ^ (4)))))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) * 1), clamp(_GLF_IDENTITY(4, (4) * 1), _GLF_IDENTITY(4, (4) * 1), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) * 1), 0 ^ (_GLF_IDENTITY(4, (4) * 1)))))), (_GLF_IDENTITY(min(_GLF_IDENTITY(4, 0 ^ (4)), _GLF_IDENTITY(4, (4) * 1)), ~ (~ (_GLF_IDENTITY(min(_GLF_IDENTITY(4, 0 ^ (4)), _GLF_IDENTITY(4, (4) * 1)), max(_GLF_IDENTITY(min(_GLF_IDENTITY(4, 0 ^ (4)), _GLF_IDENTITY(4, (4) * 1)), int(ivec4(_GLF_IDENTITY(min(_GLF_IDENTITY(4, 0 ^ (4)), _GLF_IDENTITY(4, (4) * 1)), clamp(min(_GLF_IDENTITY(4, 0 ^ (4)), _GLF_IDENTITY(4, (4) * 1)), min(_GLF_IDENTITY(4, 0 ^ (4)), _GLF_IDENTITY(4, (4) * 1)), min(_GLF_IDENTITY(4, 0 ^ (4)), _GLF_IDENTITY(4, (4) * 1)))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), min(_GLF_IDENTITY(4, 0 ^ (4)), _GLF_IDENTITY(4, (4) * 1)))))))) / _GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, 0 ^ (5))) - 0)), int(5))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((5), clamp(_GLF_IDENTITY((5), min((5), (5))), _GLF_IDENTITY((5), (_GLF_IDENTITY((5), ((5)) | ((5)))) | 0), (5))), ~ (_GLF_IDENTITY(~ (~ (5)), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(5, (5) | 0))), (~ (~ (_GLF_IDENTITY(5, (5) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0), ~ (~ (5)), ~ (_GLF_IDENTITY(~ (5), min(_GLF_IDENTITY(~ (5), (~ (5)) | (~ (5))), ~ (5)))))))), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((5), clamp(_GLF_IDENTITY((5), min((5), (5))), _GLF_IDENTITY((5), (_GLF_IDENTITY((5), ((5)) | ((5)))) | 0), (5))), ~ (_GLF_IDENTITY(~ (~ (5)), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(5, (5) | 0))), (~ (~ (_GLF_IDENTITY(5, (5) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0), ~ (~ (5)), ~ (_GLF_IDENTITY(~ (5), min(_GLF_IDENTITY(~ (5), (~ (5)) | (~ (5))), ~ (5)))))))), _GLF_IDENTITY(~ _GLF_IDENTITY((5), clamp(_GLF_IDENTITY((5), min((5), (5))), _GLF_IDENTITY((5), (_GLF_IDENTITY((5), ((5)) | ((5)))) | 0), (5))), ~ (_GLF_IDENTITY(~ (~ (5)), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(5, (5) | 0))), (~ (~ (_GLF_IDENTITY(5, (5) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0), ~ (~ (5)), ~ (_GLF_IDENTITY(~ (5), min(_GLF_IDENTITY(~ (5), (~ (5)) | (~ (5))), ~ (5)))))))), _GLF_IDENTITY(~ _GLF_IDENTITY((5), clamp(_GLF_IDENTITY((5), min((5), (5))), _GLF_IDENTITY((5), (_GLF_IDENTITY((5), ((5)) | ((5)))) | 0), (5))), ~ (_GLF_IDENTITY(~ (~ (5)), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(5, (5) | 0))), (~ (~ (_GLF_IDENTITY(5, (5) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0), ~ (~ (5)), ~ (_GLF_IDENTITY(~ (5), min(_GLF_IDENTITY(~ (5), (~ (5)) | (~ (5))), ~ (5))))))))))))), int(_GLF_IDENTITY(5, 0 + (5))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, 0 ^ (5))) - 0)), int(5))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((5), clamp(_GLF_IDENTITY((5), min((5), (5))), _GLF_IDENTITY((5), (_GLF_IDENTITY((5), ((5)) | ((5)))) | 0), (5))), ~ (_GLF_IDENTITY(~ (~ (5)), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(5, (5) | 0))), (~ (~ (_GLF_IDENTITY(5, (5) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0), ~ (~ (5)), ~ (_GLF_IDENTITY(~ (5), min(_GLF_IDENTITY(~ (5), (~ (5)) | (~ (5))), ~ (5))))))))))), int(_GLF_IDENTITY(5, 0 + (5))))), min(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, 0 ^ (5))) - 0)), int(5))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((5), clamp(_GLF_IDENTITY((5), min((5), (5))), _GLF_IDENTITY((5), (_GLF_IDENTITY((5), ((5)) | ((5)))) | 0), (5))), ~ (_GLF_IDENTITY(~ (~ (5)), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(5, (5) | 0))), (~ (~ (_GLF_IDENTITY(5, (5) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0), ~ (~ (5)), ~ (_GLF_IDENTITY(~ (5), min(_GLF_IDENTITY(~ (5), (~ (5)) | (~ (5))), ~ (5))))))))))), int(_GLF_IDENTITY(5, 0 + (5))))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, 0 ^ (5))) - 0)), int(5))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((5), clamp(_GLF_IDENTITY((5), min((5), (5))), _GLF_IDENTITY((5), (_GLF_IDENTITY((5), ((5)) | ((5)))) | 0), (5))), ~ (_GLF_IDENTITY(~ (~ (5)), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(5, (5) | 0))), (~ (~ (_GLF_IDENTITY(5, (5) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0), ~ (~ (5)), ~ (_GLF_IDENTITY(~ (5), min(_GLF_IDENTITY(~ (5), (~ (5)) | (~ (5))), ~ (5))))))))))), int(_GLF_IDENTITY(5, 0 + (5))))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, 0 ^ (5))) - 0)), int(5))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((5), clamp(_GLF_IDENTITY((5), min((5), (5))), _GLF_IDENTITY((5), (_GLF_IDENTITY((5), ((5)) | ((5)))) | 0), (5))), ~ (_GLF_IDENTITY(~ (~ (5)), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(5, (5) | 0))), (~ (~ (_GLF_IDENTITY(5, (5) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0), ~ (~ (5)), ~ (_GLF_IDENTITY(~ (5), min(_GLF_IDENTITY(~ (5), (~ (5)) | (~ (5))), ~ (5))))))))))), int(_GLF_IDENTITY(5, 0 + (5))))), min(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, 0 ^ (5))) - 0)), int(5))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((5), clamp(_GLF_IDENTITY((5), min((5), (5))), _GLF_IDENTITY((5), (_GLF_IDENTITY((5), ((5)) | ((5)))) | 0), (5))), ~ (_GLF_IDENTITY(~ (~ (5)), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(5, (5) | 0))), (~ (~ (_GLF_IDENTITY(5, (5) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0), ~ (~ (5)), ~ (_GLF_IDENTITY(~ (5), min(_GLF_IDENTITY(~ (5), (~ (5)) | (~ (5))), ~ (5))))))))))), int(_GLF_IDENTITY(5, 0 + (5))))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, 0 ^ (5))) - 0)), int(5))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((5), clamp(_GLF_IDENTITY((5), min((5), (5))), _GLF_IDENTITY((5), (_GLF_IDENTITY((5), ((5)) | ((5)))) | 0), (5))), ~ (_GLF_IDENTITY(~ (~ (5)), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(5, (5) | 0))), (~ (~ (_GLF_IDENTITY(5, (5) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0), ~ (~ (5)), ~ (_GLF_IDENTITY(~ (5), min(_GLF_IDENTITY(~ (5), (~ (5)) | (~ (5))), ~ (5))))))))))), int(_GLF_IDENTITY(5, 0 + (5))))))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, 0 ^ (5))) - 0)), int(5))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((5), clamp(_GLF_IDENTITY((5), min((5), (5))), _GLF_IDENTITY((5), (_GLF_IDENTITY((5), ((5)) | ((5)))) | 0), (5))), ~ (_GLF_IDENTITY(~ (~ (5)), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(5, (5) | 0))), (~ (~ (_GLF_IDENTITY(5, (5) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0), ~ (~ (5)), ~ (_GLF_IDENTITY(~ (5), min(_GLF_IDENTITY(~ (5), (~ (5)) | (~ (5))), ~ (5))))))))))), int(_GLF_IDENTITY(5, 0 + (5))))), min(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, 0 ^ (5))) - 0)), int(5))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((5), clamp(_GLF_IDENTITY((5), min((5), (5))), _GLF_IDENTITY((5), (_GLF_IDENTITY((5), ((5)) | ((5)))) | 0), (5))), ~ (_GLF_IDENTITY(~ (~ (5)), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(5, (5) | 0))), (~ (~ (_GLF_IDENTITY(5, (5) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0), ~ (~ (5)), ~ (_GLF_IDENTITY(~ (5), min(_GLF_IDENTITY(~ (5), (~ (5)) | (~ (5))), ~ (5))))))))))), int(_GLF_IDENTITY(5, 0 + (5))))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, 0 ^ (5))) - 0)), int(5))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((5), clamp(_GLF_IDENTITY((5), min((5), (5))), _GLF_IDENTITY((5), (_GLF_IDENTITY((5), ((5)) | ((5)))) | 0), (5))), ~ (_GLF_IDENTITY(~ (~ (5)), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(5, (5) | 0))), (~ (~ (_GLF_IDENTITY(5, (5) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0), ~ (~ (5)), ~ (_GLF_IDENTITY(~ (5), min(_GLF_IDENTITY(~ (5), (~ (5)) | (~ (5))), ~ (5))))))))))), int(_GLF_IDENTITY(5, 0 + (5)))))))) - (0 >> _GLF_IDENTITY(int(5), int(5)))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, 0 ^ (5))) - 0)), int(5))))))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, 0 ^ (5))) - 0)), int(5)))))))) ^ 0) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((5), clamp(_GLF_IDENTITY((5), min((5), (5))), _GLF_IDENTITY((5), (_GLF_IDENTITY((5), ((5)) | ((5)))) | 0), (5))), ~ (_GLF_IDENTITY(~ (~ (5)), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(5, (5) | 0))), (~ (~ (_GLF_IDENTITY(5, (5) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0), ~ (~ (5)), ~ (_GLF_IDENTITY(~ (5), min(_GLF_IDENTITY(~ (5), (~ (5)) | (~ (5))), ~ (5))))))))), max(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((5), clamp(_GLF_IDENTITY((5), min((5), (5))), _GLF_IDENTITY((5), (_GLF_IDENTITY((5), ((5)) | ((5)))) | 0), (5))), ~ (_GLF_IDENTITY(~ (~ (5)), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(5, (5) | 0))), (~ (~ (_GLF_IDENTITY(5, (5) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0), ~ (~ (5)), ~ (_GLF_IDENTITY(~ (5), min(_GLF_IDENTITY(~ (5), (~ (5)) | (~ (5))), ~ (5))))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((5), clamp(_GLF_IDENTITY((5), min((5), (5))), _GLF_IDENTITY((5), (_GLF_IDENTITY((5), ((5)) | ((5)))) | 0), (5))), ~ (_GLF_IDENTITY(~ (~ (5)), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(5, (5) | 0))), (~ (~ (_GLF_IDENTITY(5, (5) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0), ~ (~ (5)), ~ (_GLF_IDENTITY(~ (5), min(_GLF_IDENTITY(~ (5), (~ (5)) | (~ (5))), ~ (5))))))))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((5), clamp(_GLF_IDENTITY((5), min((5), (5))), _GLF_IDENTITY((5), (_GLF_IDENTITY((5), ((5)) | ((5)))) | 0), (5))), ~ (_GLF_IDENTITY(~ (~ (5)), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(5, (5) | 0))), (~ (~ (_GLF_IDENTITY(5, (5) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0), ~ (~ (5)), ~ (_GLF_IDENTITY(~ (5), min(_GLF_IDENTITY(~ (5), (~ (5)) | (~ (5))), ~ (5))))))))), (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((5), clamp(_GLF_IDENTITY((5), min((5), (5))), _GLF_IDENTITY((5), (_GLF_IDENTITY((5), ((5)) | ((5)))) | 0), (5))), ~ (_GLF_IDENTITY(~ (~ (5)), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(5, (5) | 0))), (~ (~ (_GLF_IDENTITY(5, (5) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0), ~ (~ (5)), ~ (_GLF_IDENTITY(~ (5), min(_GLF_IDENTITY(~ (5), (~ (5)) | (~ (5))), ~ (5)))))))))) | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((5), clamp(_GLF_IDENTITY((5), min((5), (5))), _GLF_IDENTITY((5), (_GLF_IDENTITY((5), ((5)) | ((5)))) | 0), (5))), ~ (_GLF_IDENTITY(~ (~ (5)), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(5, (5) | 0))), (~ (~ (_GLF_IDENTITY(5, (5) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0), ~ (~ (5)), ~ (_GLF_IDENTITY(~ (5), min(_GLF_IDENTITY(~ (5), (~ (5)) | (~ (5))), ~ (5))))))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((5), clamp(_GLF_IDENTITY((5), min((5), (5))), _GLF_IDENTITY((5), (_GLF_IDENTITY((5), ((5)) | ((5)))) | 0), (5))), ~ (_GLF_IDENTITY(~ (~ (5)), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(5, (5) | 0))), (~ (~ (_GLF_IDENTITY(5, (5) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0), ~ (~ (5)), ~ (_GLF_IDENTITY(~ (5), min(_GLF_IDENTITY(~ (5), (~ (5)) | (~ (5))), ~ (5))))))))), (true ? ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((5), clamp(_GLF_IDENTITY((5), min((5), (5))), _GLF_IDENTITY((5), (_GLF_IDENTITY((5), ((5)) | ((5)))) | 0), (5))), ~ (_GLF_IDENTITY(~ (~ (5)), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(5, (5) | 0))), (~ (~ (_GLF_IDENTITY(5, (5) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0), ~ (~ (5)), ~ (_GLF_IDENTITY(~ (5), min(_GLF_IDENTITY(~ (5), (~ (5)) | (~ (5))), ~ (5))))))))) : _GLF_FUZZED(76253))))))))), int(_GLF_IDENTITY(5, 0 + (5))))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, 0 ^ (5))) - 0)), int(5))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((5), _GLF_IDENTITY(clamp(_GLF_IDENTITY((5), min((5), (5))), _GLF_IDENTITY((5), (_GLF_IDENTITY((5), ((5)) | ((5)))) | 0), (5)), (clamp(_GLF_IDENTITY((5), min((5), (5))), _GLF_IDENTITY((5), (_GLF_IDENTITY((5), ((5)) | ((5)))) | 0), (5))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (_GLF_IDENTITY(~ (~ (5)), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(5, (5) | 0))), (~ (~ (_GLF_IDENTITY(5, (5) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0), ~ (~ (5)), ~ (_GLF_IDENTITY(~ (5), min(_GLF_IDENTITY(~ (5), (~ (5)) | _GLF_IDENTITY((~ (5)), ((~ (5))) << (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) << 0))))), ~ (5))))))))))), int(_GLF_IDENTITY(5, 0 + (5))))))))), clamp(4, 4, 4)), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))), true && _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false)))), (((_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))))) && true)) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(false, true, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false)), (! (_GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false))) && true))), false))), true, false), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool(bvec3(false, true, false)), true, false), bvec3(bvec3(bvec3(bool(bvec3(false, true, false)), true, false)))), bvec3(bvec3(bvec3(bool(bvec3(false, true, false)), true, false)))), true))))), bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), false, false, false))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-487.241) : injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) * 1)))), ~ (~ ((4)))) - 0), _GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) * 1)) / 1), 64)), 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, (4) << _GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 0, 0, 1), (ivec4(0, 0, 0, 1)) | (ivec4(0, 0, 0, 1))))), min(_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 0, 0, 1), (ivec4(0, 0, 0, 1)) | (ivec4(0, 0, 0, 1))))), (false ? _GLF_FUZZED(2982) : _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) | (0)), 0, 0, 1), (ivec4(0, 0, 0, 1)) | (ivec4(0, 0, _GLF_IDENTITY(0, (0) ^ 0), 1))))))), _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 0, 0, 1), (ivec4(0, 0, 0, 1)) | (ivec4(0, 0, 0, 1)))))))), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bool(bool(bool(false))), bool(bvec2(bool(bool(bool(false))), false)))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)))), (false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-7.6 - 3.9))), float(injectionSwitch.x), bool(true)))), min((injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(700.599) : (injectionSwitch.x))))) + 0.0) > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) || false)), (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) || false))) && true))))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
}
