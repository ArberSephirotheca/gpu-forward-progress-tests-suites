#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, 0u ^ (0u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(79851u, 57381u, 196409u)) : gl_NumWorkGroups)).x)), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) : _GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), (false ? _GLF_FUZZED(uvec3(79851u, 57381u, 196409u)) : gl_NumWorkGroups)), (false ? _GLF_FUZZED(uvec3(12180u, 98037u, 32446u)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(79851u, 57381u, 196409u)) : gl_NumWorkGroups)), max(_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(79851u, 57381u, 196409u)) : gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(79851u, 57381u, 196409u)) : gl_NumWorkGroups)))))).x))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)) * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) >> 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, bool(bvec2(true, false))), false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        break;
       continue;
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
      }
     else
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) << 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(6041), (true ? 1 : _GLF_FUZZED(6041)) | (true ? 1 : _GLF_FUZZED(6041)))))) >> 0)); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              break;
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            continue;
           return;
          }
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       for(int _injected_loop_counter = ((-63093 >> -15455) & _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-84355) : 0))) << 0)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0)))))))); _GLF_IDENTITY(_injected_loop_counter ++, 0 ^ (_injected_loop_counter ++)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 return;
                 if(_GLF_DEAD(false))
                  break;
                }
              }
             return;
            }
           else
            {
            }
          }
        }
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         do
          {
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         return;
        }
       if(_GLF_DEAD(false))
        break;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) << 0u))) + subgroup_id * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY((~ (workgroup_base)) << 0u, ((~ (workgroup_base)) << 0u) / 1u)))) + subgroup_id * subgroup_size + subgroup_local_id))), uint(uvec4(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)) + subgroup_local_id, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size))), 0u))) / 1u), (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) * 1u))))) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | 0u), _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u))))))), (0u) | _GLF_IDENTITY((0u), ((0u)) / 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size))), 0u))) / 1u), (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) * 1u))))) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | 0u), _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u))))))), (0u) | _GLF_IDENTITY((0u), ((0u)) / 1u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size))), 0u))) / 1u), (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) * 1u))))) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | 0u), _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u))))))), (0u) | _GLF_IDENTITY((0u), ((0u)) / 1u))))) - 0u), 1u)));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size)) + ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(2u), uint(uvec4(uint(2u), 1u, 1u, 1u))), _GLF_IDENTITY(uint(2u), uint(uvec4(uint(2u), 0u, 0u, (0u ^ 1u)))))), _GLF_IDENTITY(uint(2u), (uint(2u)) / 1u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) / 1u)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(2u), 0u ^ (_GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))))))))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), uint(uvec4(~ (workgroup_id), 1u, 0u, 1u))))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u, 1u), max(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), uint(uvec4(~ (workgroup_id), 1u, 0u, 1u))))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u, 1u), (uvec4(_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), uint(uvec4(~ (workgroup_id), 1u, 0u, 1u))))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u, 1u)) | (uvec4(_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), uint(uvec4(~ (workgroup_id), 1u, 0u, 1u))))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u, 1u))), uvec4(_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), uint(uvec4(~ (workgroup_id), 1u, 0u, 1u))))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u, 1u))), _GLF_IDENTITY((uvec4(workgroup_id, _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), ((1u)) << 0u), _GLF_IDENTITY((1u), max((1u), (1u))))) >> 0u)), ((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), ((1u)) << 0u), _GLF_IDENTITY((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) + 0u)), max((1u), _GLF_IDENTITY((1u), ((1u)) / (1u | 1u)))))) >> 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), ((1u)) << 0u), _GLF_IDENTITY((1u), max((1u), (1u))))) >> 0u)), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, max(1u, 1u))), max(~ (_GLF_IDENTITY(1u, max(1u, 1u))), ~ (_GLF_IDENTITY(1u, max(1u, 1u)))))))), max(_GLF_IDENTITY((1u), ((1u)) << 0u), _GLF_IDENTITY((1u), max((1u), (1u))))) >> 0u)), min((_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), ((1u)) << 0u), _GLF_IDENTITY((1u), max((1u), (1u))))) >> 0u, min(_GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), ((1u)) << 0u), _GLF_IDENTITY((1u), max((1u), (1u))))) >> 0u, _GLF_IDENTITY(_GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), ((1u)) << 0u), _GLF_IDENTITY((1u), max((1u), (1u))))) >> 0u, (_GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), ((1u)) << 0u), _GLF_IDENTITY((1u), max((1u), (1u))))) >> 0u) << 0u))))), (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), ((1u)) << 0u), _GLF_IDENTITY((1u), max((1u), (1u))))) >> 0u)))))))) | _GLF_IDENTITY(_GLF_IDENTITY((1u), min((1u), (1u))), ((1u)) + 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u))) * (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u)))) - 0u) >> _GLF_IDENTITY(uint(6u), uint(6u)))), 1u)), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec4(workgroup_id, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), ((1u)) >> 0u)) * 1u) >> _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) - uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(_GLF_IDENTITY(0.0, (0.0) * 1.0))), (false ? _GLF_FUZZED(float(virtual_gid)) : float(float(_GLF_IDENTITY(0.0, (0.0) * 1.0)))))), injectionSwitch.x))), _GLF_IDENTITY(0u, uint(uvec2(0u, 0u))))), _GLF_IDENTITY(0u, min(0u, 0u)))))) | (1u)), _GLF_IDENTITY(0u, (0u) / 1u), 1u)), uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY((uvec4(workgroup_id, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) | _GLF_IDENTITY((1u), ~ (~ (_GLF_IDENTITY((1u), 0u | (_GLF_IDENTITY((1u), clamp(_GLF_IDENTITY((1u), (false ? _GLF_FUZZED(workgroup_id) : (1u))), (1u), (1u))))))))), 0u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id))))), (_GLF_IDENTITY((uvec4(workgroup_id, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) | _GLF_IDENTITY((1u), ~ (~ (_GLF_IDENTITY((1u), 0u | (_GLF_IDENTITY((1u), clamp(_GLF_IDENTITY((1u), (false ? _GLF_FUZZED(workgroup_id) : (1u))), (1u), (1u))))))))), 0u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id))))), min((uvec4(workgroup_id, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) | _GLF_IDENTITY((1u), ~ (~ (_GLF_IDENTITY((1u), 0u | (_GLF_IDENTITY((1u), clamp(_GLF_IDENTITY((1u), (false ? _GLF_FUZZED(workgroup_id) : (1u))), (1u), (1u))))))))), 0u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id))))), (uvec4(workgroup_id, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) | _GLF_IDENTITY((1u), ~ (~ (_GLF_IDENTITY((1u), 0u | (_GLF_IDENTITY((1u), clamp(_GLF_IDENTITY((1u), (false ? _GLF_FUZZED(workgroup_id) : (1u))), (1u), (1u))))))))), 0u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id)))))))) | (_GLF_IDENTITY((uvec4(workgroup_id, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) | _GLF_IDENTITY((1u), ~ (~ (_GLF_IDENTITY((1u), 0u | (_GLF_IDENTITY((1u), clamp(_GLF_IDENTITY((1u), (false ? _GLF_FUZZED(workgroup_id) : (1u))), (1u), (1u))))))))), 0u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id))))), clamp(_GLF_IDENTITY((uvec4(workgroup_id, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) | _GLF_IDENTITY((1u), ~ (~ (_GLF_IDENTITY((1u), 0u | (_GLF_IDENTITY((1u), clamp(_GLF_IDENTITY((1u), (false ? _GLF_FUZZED(workgroup_id) : (1u))), (1u), (1u))))))))), 0u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id))))), ((uvec4(workgroup_id, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) | _GLF_IDENTITY((1u), ~ (~ (_GLF_IDENTITY((1u), 0u | (_GLF_IDENTITY((1u), clamp(_GLF_IDENTITY((1u), (false ? _GLF_FUZZED(workgroup_id) : (1u))), (1u), (1u))))))))), 0u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id)))))) << uvec4(0u, 0u, 0u, 0u)), (uvec4(workgroup_id, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) | _GLF_IDENTITY((1u), ~ (~ (_GLF_IDENTITY((1u), 0u | (_GLF_IDENTITY((1u), clamp(_GLF_IDENTITY((1u), (false ? _GLF_FUZZED(workgroup_id) : (1u))), (1u), (1u))))))))), 0u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id))))), (uvec4(workgroup_id, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) | _GLF_IDENTITY((1u), ~ (~ (_GLF_IDENTITY((1u), 0u | (_GLF_IDENTITY((1u), clamp(_GLF_IDENTITY((1u), (false ? _GLF_FUZZED(workgroup_id) : (1u))), (1u), (1u))))))))), 0u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id))))))))), ((uvec4(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) | (1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) | (1u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) | (1u)), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) | (1u))) | (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) | (1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) | (1u)), (_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) >> 0u)) | (1u), ((_GLF_IDENTITY(1u, (1u) >> 0u)) | (1u)) << 0u))) | (_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_base))), 1u, 1u)))), (1u) >> 0u)) | (1u))))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))) << (0u | 0u))) | (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) | (1u)))), 0u, 1u))) / uvec4(1u, 1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED((subgroup_local_id | num_workgroup)))), 1u)))))) | _GLF_IDENTITY((uvec4(workgroup_id, 1u, 0u, 1u)), (_GLF_IDENTITY((uvec4(workgroup_id, 1u, 0u, 1u)), ((uvec4(workgroup_id, 1u, 0u, 1u))) | ((uvec4(workgroup_id, 1u, 0u, 1u))))) | ((uvec4(workgroup_id, 1u, 0u, 1u)))))))), (_GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id)), 1u, 0u, 1u), min(_GLF_IDENTITY(uvec4(workgroup_id, 1u, 0u, 1u), (uvec4(workgroup_id, 1u, 0u, 1u)) << uvec4(0u, 0u, 0u, 0u)), uvec4(workgroup_id, 1u, 0u, 1u))), (uvec4(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), (~ (~ (1u))) >> 0u)), (_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), (~ (~ (1u))) >> 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), (~ (~ (1u))) >> 0u)), min(_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), (~ (~ (1u))) >> 0u)), _GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), (~ (~ (1u))) >> 0u)))))), 0u, _GLF_IDENTITY(1u, 0u | (1u)))) | (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size))))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 1u)), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size))))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 1u))) | (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size))))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 1u)), 0u ^ (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size))))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 1u)))))))))), 1u, 0u, 1u), clamp(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size)))))), 1u, 0u, 1u), min(uvec4(_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)))))))), 1u, 0u, 1u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) ^ 0u)) * 1u)))))), 1u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) | (uvec4(_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size)))))), 1u, 0u, 1u))))), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))) * uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, uint(uint(workgroup_id)))) - 0u) : _GLF_FUZZED(subgroup_size))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size))), max(_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - _GLF_IDENTITY(0u, (0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(subgroup_size)))))))))), 1u, 0u, 1u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size)))), ((_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size))))) >> 0u))), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size))))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size))))))), uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size))))))), 0u, 1u, 0u), max(uvec4((_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size))))))), 0u, 1u, 0u), uvec4((_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size))))))), 0u, 1u, 0u)))))) | ((_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size)))))))))), _GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size)))))))), 1u, 0u, 1u)))))))), 0u + (true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id)), 1u, 0u, 1u), min(_GLF_IDENTITY(uvec4(workgroup_id, 1u, 0u, 1u), (uvec4(workgroup_id, 1u, 0u, 1u)) << uvec4(0u, 0u, 0u, 0u)), uvec4(workgroup_id, 1u, 0u, 1u))), (uvec4(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), (~ (~ (1u))) >> 0u)), (_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), (~ (~ (1u))) >> 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), (~ (~ (1u))) >> 0u)), min(_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), (~ (~ (1u))) >> 0u)), _GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), (~ (~ (1u))) >> 0u)))))), 0u, _GLF_IDENTITY(1u, 0u | (1u)))) | (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size))))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 1u)), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size))))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 1u))) | (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size))))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 1u)), 0u ^ (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size))))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 1u)))))))))), 1u, 0u, 1u), clamp(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size)))))), 1u, 0u, 1u), min(uvec4(_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)))))))), 1u, 0u, 1u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) ^ 0u)) * 1u)))))), 1u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) | (uvec4(_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size)))))), 1u, 0u, 1u))))), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))) * uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, uint(uint(workgroup_id)))) - 0u) : _GLF_FUZZED(subgroup_size))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size))), max(_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - _GLF_IDENTITY(0u, (0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(subgroup_size)))))))))), 1u, 0u, 1u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size)))), ((_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size))))) >> 0u))), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size))))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size))))))), uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size))))))), 0u, 1u, 0u), max(uvec4((_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size))))))), 0u, 1u, 0u), uvec4((_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size))))))), 0u, 1u, 0u)))))) | ((_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size)))))))))), _GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u) : _GLF_FUZZED(subgroup_size)))))))), 1u, 0u, 1u))))))))))) << _GLF_IDENTITY(0u, (0u) >> 0u)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      continue;
     break;
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 0.0, sin(0.0), 0.0))).x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3048.2827)), float(injectionSwitch.x), bool(true))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) && true)), false, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 0.0, sin(0.0), 0.0))).x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3048.2827)), float(injectionSwitch.x), bool(true))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) && true)), false, false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 0.0, sin(0.0), 0.0))).x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3048.2827)), float(injectionSwitch.x), bool(true))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) && true)), false, false)))))))))
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
          {
          }
         else
          {
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7918.9501, 4.4)))).x > injectionSwitch.y))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     if(_GLF_DEAD(false))
      break;
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), true && (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))), bool(bvec2(bool(bool(false)), _GLF_IDENTITY(false, ! (! (false)))))))));
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(412.405)), vec2(_GLF_FUZZED(6.1), (injectionSwitch)[1]), bvec2(false, true))).y))))
      continue;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY(0 + (_GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))) | (_injected_loop_counter ++))) >> 0)), (0 + (_GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) << 0), _GLF_IDENTITY(0, _GLF_IDENTITY((0) / int(_GLF_ONE(1.0, injectionSwitch.y)), ((0) / int(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0)) | (_injected_loop_counter ++))), ((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) << 0), _GLF_IDENTITY(0, _GLF_IDENTITY((0) / int(_GLF_ONE(1.0, injectionSwitch.y)), ((0) / int(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0)) | (_injected_loop_counter ++)))) ^ 0), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) << 0), (1 & 1) * (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) << 0))), _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec3(0, 1, 0))), (_GLF_IDENTITY(0, int(ivec3(0, 1, 0)))) - 0)) / _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))), max(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y))))))), ((0) / int(_GLF_ONE(1.0, injectionSwitch.y))) ^ _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(ivec2(0, 0))), _GLF_IDENTITY(0, (0) / 1))))) | (_injected_loop_counter ++))), ((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) << 0)) << 0), _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0) / int(_GLF_ONE(1.0, injectionSwitch.y)), ((0) / int(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0), 0 + (_GLF_IDENTITY((0) / int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(278.958, 4672.6896)))).y)), ((0) / int(_GLF_ONE(1.0, injectionSwitch.y))) ^ _GLF_IDENTITY(0, (0) | (0))))), _GLF_IDENTITY(((0) / int(_GLF_ONE(1.0, injectionSwitch.y))) ^ _GLF_IDENTITY(0, 0 | (0)), clamp(((0) / int(_GLF_ONE(1.0, injectionSwitch.y))) ^ _GLF_IDENTITY(0, 0 | (0)), ((0) / int(_GLF_ONE(1.0, injectionSwitch.y))) ^ _GLF_IDENTITY(0, 0 | (0)), ((0) / int(_GLF_ONE(1.0, injectionSwitch.y))) ^ _GLF_IDENTITY(0, 0 | (0)))))) | (_injected_loop_counter ++)))) ^ 0)), ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) << 0), (1 & 1) * (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) << 0))), _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec3(0, 1, 0))), (_GLF_IDENTITY(0, int(ivec3(0, 1, 0)))) - 0)) / _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))), max(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y))))))), ((0) / int(_GLF_ONE(1.0, injectionSwitch.y))) ^ _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(ivec2(0, 0))), _GLF_IDENTITY(0, (0) / 1))))) | (_injected_loop_counter ++))), ((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) << 0)) << 0), _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0) / int(_GLF_ONE(1.0, injectionSwitch.y)), ((0) / int(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0), 0 + (_GLF_IDENTITY((0) / int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(278.958, 4672.6896)))).y)), ((0) / int(_GLF_ONE(1.0, injectionSwitch.y))) ^ _GLF_IDENTITY(0, (0) | (0))))), _GLF_IDENTITY(((0) / int(_GLF_ONE(1.0, injectionSwitch.y))) ^ _GLF_IDENTITY(0, 0 | (0)), clamp(((0) / int(_GLF_ONE(1.0, injectionSwitch.y))) ^ _GLF_IDENTITY(0, 0 | (0)), ((0) / int(_GLF_ONE(1.0, injectionSwitch.y))) ^ _GLF_IDENTITY(0, 0 | (0)), ((0) / int(_GLF_ONE(1.0, injectionSwitch.y))) ^ _GLF_IDENTITY(0, 0 | (0)))))) | (_injected_loop_counter ++)))) ^ 0))) / 1) / 1) >> 0))) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(-74356)) : 0)) + _GLF_IDENTITY((_injected_loop_counter ++), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_injected_loop_counter ++), ((_injected_loop_counter ++)) / 1), (_GLF_IDENTITY(_GLF_IDENTITY((_injected_loop_counter ++), ((_injected_loop_counter ++)) / 1), (_GLF_IDENTITY((_injected_loop_counter ++), ((_injected_loop_counter ++)) / 1)) << 0)) * 1)), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter ++, 0 ^ (_injected_loop_counter ++))), _GLF_IDENTITY(_GLF_IDENTITY(((_injected_loop_counter ++)) / 1, (((_injected_loop_counter ++)) / 1) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((_injected_loop_counter ++)) / 1, (1 & 1) * (((_injected_loop_counter ++)) / 1)), (((_injected_loop_counter ++)) / 1) << 0), ~ (~ (_GLF_IDENTITY(((_injected_loop_counter ++)) / 1, (((_injected_loop_counter ++)) / 1) << 0))))) ^ 0))), ((_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter ++, 0 ^ (_injected_loop_counter ++))), _GLF_IDENTITY(_GLF_IDENTITY(((_injected_loop_counter ++)) / 1, (((_injected_loop_counter ++)) / 1) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((_injected_loop_counter ++)) / 1, (1 & 1) * (((_injected_loop_counter ++)) / 1)), (((_injected_loop_counter ++)) / 1) << 0), ~ (~ (_GLF_IDENTITY(((_injected_loop_counter ++)) / 1, (((_injected_loop_counter ++)) / 1) << 0))))) ^ 0)))) / 1))), 0 + _GLF_IDENTITY((~ (_GLF_IDENTITY((_injected_loop_counter ++), ((_injected_loop_counter ++)) / _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(1), ~ (~ (int(1))))), (int(_GLF_IDENTITY(int(1), ~ (~ (int(1)))))) ^ 0))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((~ (_GLF_IDENTITY((_injected_loop_counter ++), ((_injected_loop_counter ++)) / 1)))), (~ ((~ (_GLF_IDENTITY((_injected_loop_counter ++), ((_injected_loop_counter ++)) / 1))))) ^ 0)), (~ (_GLF_IDENTITY(~ ((~ (_GLF_IDENTITY((_injected_loop_counter ++), ((_injected_loop_counter ++)) / 1)))), (~ ((~ (_GLF_IDENTITY((_injected_loop_counter ++), ((_injected_loop_counter ++)) / 1))))) ^ 0))) | _GLF_IDENTITY(0, (0) | (0))))))))), ((_GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY(0, (_GLF_IDENTITY(false ? _GLF_FUZZED(abs(-74356)) : 0, (false ? _GLF_FUZZED(abs(-74356)) : 0) - 0))) + _GLF_IDENTITY((_injected_loop_counter ++), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((_injected_loop_counter ++), ((_injected_loop_counter ++)) / 1)), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter ++, 0 ^ (_injected_loop_counter ++))), _GLF_IDENTITY(_GLF_IDENTITY(((_injected_loop_counter ++)) / 1, (((_injected_loop_counter ++)) / 1) << 0), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_injected_loop_counter ++), 0 + ((_injected_loop_counter ++)))) / 1, (((_injected_loop_counter ++)) / 1) << 0), ~ (~ (_GLF_IDENTITY(((_injected_loop_counter ++)) / 1, (((_injected_loop_counter ++)) / 1) << 0))))) ^ 0))))), 0 + _GLF_IDENTITY((~ (_GLF_IDENTITY((_injected_loop_counter ++), ((_injected_loop_counter ++)) / 1))), ~ (_GLF_IDENTITY(~ ((~ (_GLF_IDENTITY((_injected_loop_counter ++), ((_injected_loop_counter ++)) / 1)))), (~ ((~ (_GLF_IDENTITY((_injected_loop_counter ++), ((_injected_loop_counter ++)) / 1))))) ^ 0))))))))) - 0) - _GLF_IDENTITY(0, max(0, 0))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         do
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, abs(exp(0.0)), 1.0, exp(0.0)))).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, abs(exp(0.0)), 1.0, exp(0.0)))).y))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, abs(exp(0.0)), 1.0, exp(0.0)))).y))), false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, abs(exp(0.0)), 1.0, exp(0.0)))).y))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, abs(exp(0.0)), 1.0, exp(0.0)))).y))), false, true)))))))))))
            {
             if(_GLF_DEAD(false))
              break;
             return;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        continue;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), bool(bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))))))
            break;
           break;
          }
         break;
        }
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, log(1.0))))))))
      {
       do
        {
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                return;
               return;
              }
             continue;
            }
           break;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            continue;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), 0.0 + (float(float(injectionSwitch.x))))) > injectionSwitch.y))));
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(! (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))), bool(bvec3(! (bool(bvec2(false, false))), false, true))))))))
        return;
      }
    }
   if(_GLF_DEAD(false))
    continue;
  }
 while(_GLF_WRAPPED_LOOP(false));
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(workgroup_base) : virtual_gid))], uint(1), 4, _GLF_IDENTITY(64, (64) | 0), 4);
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   int i = _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, min(0, 0)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, min(0, 0))))), (~ (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, min(0, 0)))))) << 0)));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, min(injectionSwitch.y, injectionSwitch.y)))))) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))), true && (true))))
            {
             return;
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     return;
                    }
                  }
                 return;
                }
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  continue;
                 return;
                }
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))
              return;
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         do
          {
           if(_GLF_DEAD(false))
            continue;
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   else
    {
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(mat3((false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), 0.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0)))) < injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6.2, 53.98)))), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))) / vec2(1.0, 1.0)).x, mix(float(_GLF_FUZZED(63.31)), float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(6.2, 53.98), mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((vec2(6.2, 53.98))[0], (_GLF_IDENTITY(true ? (vec2(_GLF_IDENTITY(6.2, float(mat2x4(6.2, 1.0, sqrt(1.0), log(1.0), 1.0, 0.0, 1.0, 1.0))), 53.98))[0] : _GLF_FUZZED(9.3), min(true ? (vec2(_GLF_IDENTITY(6.2, float(mat2x4(6.2, 1.0, sqrt(1.0), log(1.0), 1.0, 0.0, 1.0, 1.0))), 53.98))[0] : _GLF_FUZZED(9.3), true ? (vec2(_GLF_IDENTITY(6.2, float(mat2x4(6.2, 1.0, sqrt(1.0), log(1.0), 1.0, 0.0, 1.0, 1.0))), 53.98))[0] : _GLF_FUZZED(9.3))))), clamp((vec2(6.2, 53.98))[0], (_GLF_IDENTITY(vec2(6.2, 53.98), clamp(vec2(6.2, 53.98), vec2(6.2, 53.98), vec2(6.2, 53.98))))[0], _GLF_IDENTITY((vec2(6.2, 53.98))[0], ((vec2(6.2, 53.98))[0]) - 0.0))), (vec2(6.2, 53.98))[1]), vec2(_GLF_FUZZED(-5015.3367), _GLF_IDENTITY(_GLF_FUZZED(85.78), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(85.78), (false ? _GLF_FUZZED(-1014.4687) : _GLF_FUZZED(_GLF_IDENTITY(85.78, (85.78) / 1.0)))) : _GLF_FUZZED(-6.5)))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(6.2, 53.98), mix(vec2(_GLF_IDENTITY((vec2(6.2, 53.98))[0], clamp((vec2(6.2, 53.98))[0], (vec2(6.2, 53.98))[0], _GLF_IDENTITY((vec2(6.2, 53.98))[0], ((vec2(6.2, 53.98))[0]) - 0.0))), (vec2(6.2, 53.98))[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-5015.3367), (_GLF_FUZZED(-5015.3367)) * 1.0), _GLF_FUZZED(85.78)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) * mat2(1.0), min((true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(6.2, 53.98), mix(vec2(_GLF_IDENTITY((vec2(6.2, 53.98))[0], clamp((vec2(6.2, 53.98))[0], (vec2(6.2, 53.98))[0], _GLF_IDENTITY((vec2(6.2, 53.98))[0], ((vec2(6.2, 53.98))[0]) - 0.0))), (vec2(6.2, 53.98))[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-5015.3367), (_GLF_FUZZED(-5015.3367)) * 1.0), _GLF_FUZZED(85.78)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) * mat2(1.0), (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(6.2, 53.98), mix(vec2(_GLF_IDENTITY((vec2(6.2, 53.98))[0], clamp((vec2(6.2, 53.98))[0], (vec2(6.2, 53.98))[0], _GLF_IDENTITY((vec2(6.2, 53.98))[0], ((vec2(6.2, 53.98))[0]) - 0.0))), (vec2(6.2, 53.98))[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-5015.3367), (_GLF_FUZZED(-5015.3367)) * 1.0), _GLF_FUZZED(85.78)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) * mat2(1.0))), ((true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(6.2, 53.98), mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((vec2(6.2, 53.98)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (vec2(6.2, 53.98)) : _GLF_FUZZED(injectionSwitch)))[0], clamp((vec2(6.2, 53.98))[0], (vec2(6.2, 53.98))[0], _GLF_IDENTITY((vec2(6.2, 53.98))[0], ((vec2(6.2, 53.98))[0]) - 0.0))), (vec2(6.2, _GLF_IDENTITY(53.98, mix(float(_GLF_IDENTITY(53.98, (53.98) - 0.0)), float(_GLF_FUZZED(-2550.6728)), bool(false)))))[1]), vec2(_GLF_FUZZED(-5015.3367), _GLF_FUZZED(85.78)), bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))))))))))) * mat2(1.0)) / vec2(1.0, 1.0))))), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))) / _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-637.460), _GLF_FUZZED(-3.7)), bvec2(false, false)))).x), bool(true))) < injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6.2, 53.98)))), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))) / vec2(1.0, 1.0)).x, mix(float(_GLF_FUZZED(63.31)), float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(6.2, 53.98), mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((vec2(6.2, 53.98))[0], (_GLF_IDENTITY(true ? (vec2(_GLF_IDENTITY(6.2, float(mat2x4(6.2, 1.0, sqrt(1.0), log(1.0), 1.0, 0.0, 1.0, 1.0))), 53.98))[0] : _GLF_FUZZED(9.3), min(true ? (vec2(_GLF_IDENTITY(6.2, float(mat2x4(6.2, 1.0, sqrt(1.0), log(1.0), 1.0, 0.0, 1.0, 1.0))), 53.98))[0] : _GLF_FUZZED(9.3), true ? (vec2(_GLF_IDENTITY(6.2, float(mat2x4(6.2, 1.0, sqrt(1.0), log(1.0), 1.0, 0.0, 1.0, 1.0))), 53.98))[0] : _GLF_FUZZED(9.3))))), clamp((vec2(6.2, 53.98))[0], (_GLF_IDENTITY(vec2(6.2, 53.98), clamp(vec2(6.2, 53.98), vec2(6.2, 53.98), vec2(6.2, 53.98))))[0], _GLF_IDENTITY((vec2(6.2, 53.98))[0], ((vec2(6.2, 53.98))[0]) - 0.0))), (vec2(6.2, 53.98))[1]), vec2(_GLF_FUZZED(-5015.3367), _GLF_IDENTITY(_GLF_FUZZED(85.78), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(85.78), (false ? _GLF_FUZZED(-1014.4687) : _GLF_FUZZED(_GLF_IDENTITY(85.78, (85.78) / 1.0)))) : _GLF_FUZZED(-6.5)))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(6.2, 53.98), mix(vec2(_GLF_IDENTITY((vec2(6.2, 53.98))[0], clamp((vec2(6.2, 53.98))[0], (vec2(6.2, 53.98))[0], _GLF_IDENTITY((vec2(6.2, 53.98))[0], ((vec2(6.2, 53.98))[0]) - 0.0))), (vec2(6.2, 53.98))[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-5015.3367), (_GLF_FUZZED(-5015.3367)) * 1.0), _GLF_FUZZED(85.78)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) * mat2(1.0), min((true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(6.2, 53.98), mix(vec2(_GLF_IDENTITY((vec2(6.2, 53.98))[0], clamp((vec2(6.2, 53.98))[0], (vec2(6.2, 53.98))[0], _GLF_IDENTITY((vec2(6.2, 53.98))[0], ((vec2(6.2, 53.98))[0]) - 0.0))), (vec2(6.2, 53.98))[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-5015.3367), (_GLF_FUZZED(-5015.3367)) * 1.0), _GLF_FUZZED(85.78)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) * mat2(1.0), (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(6.2, 53.98), mix(vec2(_GLF_IDENTITY((vec2(6.2, 53.98))[0], clamp((vec2(6.2, 53.98))[0], (vec2(6.2, 53.98))[0], _GLF_IDENTITY((vec2(6.2, 53.98))[0], ((vec2(6.2, 53.98))[0]) - 0.0))), (vec2(6.2, 53.98))[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-5015.3367), (_GLF_FUZZED(-5015.3367)) * 1.0), _GLF_FUZZED(85.78)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) * mat2(1.0))), ((true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(6.2, 53.98), mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((vec2(6.2, 53.98)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (vec2(6.2, 53.98)) : _GLF_FUZZED(injectionSwitch)))[0], clamp((vec2(6.2, 53.98))[0], (vec2(6.2, 53.98))[0], _GLF_IDENTITY((vec2(6.2, 53.98))[0], ((vec2(6.2, 53.98))[0]) - 0.0))), (vec2(6.2, _GLF_IDENTITY(53.98, mix(float(_GLF_IDENTITY(53.98, (53.98) - 0.0)), float(_GLF_FUZZED(-2550.6728)), bool(false)))))[1]), vec2(_GLF_FUZZED(-5015.3367), _GLF_FUZZED(85.78)), bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))))))))))) * mat2(1.0)) / vec2(1.0, 1.0))))), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))) / _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-637.460), _GLF_FUZZED(-3.7)), bvec2(false, false)))).x), bool(true))) < injectionSwitch.y)))))))), (! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))), mat2(1.0) * (mat2(1.0) * (injectionSwitch))))), (max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-8647.3960))), injectionSwitch[1]))), mat2(1.0) * (mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(-7.3, 23.85, -3801.3685).x)), float(1.0), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (true), ! (! (! (true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (true), ! (! (! (true))))), ! (! (bool(_GLF_IDENTITY(! (true), ! (! (! (true))))))))), true && (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (true), ! (! (! (true))))), ! (! (bool(_GLF_IDENTITY(! (true), ! (! (! (true))))))))))))))))))))) * (injectionSwitch)))))) * vec2(1.0, 1.0))), _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(6.2, min(6.2, 6.2)), _GLF_IDENTITY(53.98, max(53.98, 53.98))))), ((true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(6.2, min(6.2, 6.2)), _GLF_IDENTITY(53.98, max(53.98, 53.98)))))) - vec2(0.0, 0.0))), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), max(clamp(0.0, 0.0, 0.0), clamp(0.0, 0.0, 0.0)))))))))) / vec2(1.0, 1.0)).x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))), min(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))))), mat2(1.0) * (mat2(1.0) * (injectionSwitch))))), (max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((false ? -84.55 : (290.740 - 47.74)))), float(1.0), bool(true)))), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-8647.3960))), injectionSwitch[1])), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-8647.3960))), injectionSwitch[1])))[0], ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-8647.3960))), injectionSwitch[1])))[0]) * 1.0), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-8647.3960))), injectionSwitch[1])))[1]), vec2(_GLF_FUZZED((-5785.6905)), _GLF_FUZZED(36.55)), bvec2(false, false)))), mat2(1.0) * (mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(-7.3, 23.85, -3801.3685).x)), float(1.0), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (true), ! (! (! (true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (true), ! (! (! (true))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! (true))), ! (! (! (true))))))))), true && (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (true), ! (! (! (true))))), ! (! (bool(_GLF_IDENTITY(! (true), ! (! (! (true))))))))))))))))))))) * (injectionSwitch)))))) * vec2(1.0, 1.0))), _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(6.2, min(6.2, 6.2)), _GLF_IDENTITY(53.98, max(53.98, 53.98))))), ((true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(6.2, min(6.2, 6.2)), _GLF_IDENTITY(53.98, max(53.98, 53.98)))))) - vec2(0.0, 0.0))), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), max(clamp(0.0, 0.0, 0.0), clamp(0.0, 0.0, 0.0)))))))), (vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))), min(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))))), mat2(1.0) * (mat2(1.0) * (injectionSwitch))))), (max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((false ? -84.55 : (290.740 - 47.74)))), float(1.0), bool(true)))), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-8647.3960))), injectionSwitch[1])), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-8647.3960))), injectionSwitch[1])))[0], ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-8647.3960))), injectionSwitch[1])))[0]) * 1.0), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-8647.3960))), injectionSwitch[1])))[1]), vec2(_GLF_FUZZED((-5785.6905)), _GLF_FUZZED(36.55)), bvec2(false, false)))), mat2(1.0) * (mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(-7.3, 23.85, -3801.3685).x)), float(1.0), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (true), ! (! (! (true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (true), ! (! (! (true))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! (true))), ! (! (! (true))))))))), true && (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (true), ! (! (! (true))))), ! (! (bool(_GLF_IDENTITY(! (true), ! (! (! (true))))))))))))))))))))) * (injectionSwitch)))))) * vec2(1.0, 1.0))), _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(6.2, min(6.2, 6.2)), _GLF_IDENTITY(53.98, max(53.98, 53.98))))), ((true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(6.2, min(6.2, 6.2)), _GLF_IDENTITY(53.98, max(53.98, 53.98)))))) - vec2(0.0, 0.0))), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), max(clamp(0.0, 0.0, 0.0), clamp(0.0, 0.0, 0.0))))))))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) / vec2(1.0, 1.0)).x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), false)))) && true))
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        return;
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0) > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && _GLF_IDENTITY((false), _GLF_IDENTITY(((false)), (((false))) || false) || false))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
          break;
         for(int _injected_loop_counter = ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (int(3)))), max((_GLF_IDENTITY(int(3), min(_GLF_IDENTITY(int(3), (int(3)) ^ 0), int(3)))), _GLF_IDENTITY((int(3)), clamp((int(3)), (_GLF_IDENTITY(int(3), int(ivec2(int(3), 1)))), (int(3)))))) | (int(3))), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            continue;
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                continue;
               return;
              }
             if(_GLF_DEAD(false))
              continue;
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               return;
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              break;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, 0 ^ _GLF_IDENTITY((4), clamp((4), (4), (4)))), 1, 1), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY(0 ^ (4), (0 ^ (4)) - 0)), 1, _GLF_IDENTITY(1, 1 * (1))), (ivec3(_GLF_IDENTITY(4, 0 ^ (4)), 1, 1)) | (ivec3(_GLF_IDENTITY(4, 0 ^ _GLF_IDENTITY((4), clamp((4), (4), (4)))), 1, 1)))) | (ivec3(_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 0, 0, 1), (ivec4(4, 0, 0, 1)) | ivec4(0, 0, 0, 0)))))), 1, 1)))), max(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), (_GLF_IDENTITY(4, 0 ^ (4))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), clamp(_GLF_IDENTITY(4, 0 ^ (4)), _GLF_IDENTITY(4, 0 ^ (4)), _GLF_IDENTITY(4, 0 ^ (4)))))), 1, 1), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, 0 ^ (4)), 1, 1), (ivec3(_GLF_IDENTITY(4, 0 ^ (4)), 1, 1)) | (ivec3(_GLF_IDENTITY(4, 0 ^ (4)), 1, 1)))) | (ivec3(_GLF_IDENTITY(4, 0 ^ (4)), 1, 1)))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, 0 ^ (4)), 1, 1), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, 0 ^ (4)), 1, 1), (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), (_GLF_IDENTITY(4, 0 ^ (4))) ^ 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), 0 | (_GLF_IDENTITY(4, 0 ^ (4)))))), 1, 1)) | (ivec3(_GLF_IDENTITY(4, 0 ^ (4)), 1, 1)))) | (ivec3(_GLF_IDENTITY(4, 0 ^ (4)), 1, 1))))))), 64, 4);
      }
     else
      {
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y, (false ? _GLF_FUZZED(2014.4694) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) + 0)))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))
            {
             return;
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
             if(_GLF_DEAD(false))
              continue;
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
              return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), bool(bvec2(! (! (_GLF_IDENTITY(false, true && (false)))), false)))) || false))))
            break;
          }
         do
          {
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-52.38) : injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), min(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), (true ? injectionSwitch : _GLF_FUZZED(vec2(2368.8214, -433.247)))).y, injectionSwitch.y)), injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y), min(min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y), min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y))))), true), bvec2(bvec3(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-7.9, 4.5)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * cos(vec2(0.0, 0.0))) - vec2(0.0, 0.0)))).y))) + _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(distance(vec3(89.73, -73.24, -895.833), vec3(5.6, -33.62, -7.7))) : 0.0)))))))), true), true))))))))
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              return;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (22197 & (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0))); _injected_loop_counter --)
                {
                 return;
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           do
            {
             if(_GLF_DEAD(false))
              return;
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))), false || (_GLF_DEAD(false))))))
                  break;
                 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), bool(bvec3(bool(bvec3(_GLF_DEAD(false), true, true)), true, true))))))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   break;
                  }
                 return;
                }
               if(_GLF_DEAD(false))
                break;
               return;
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[_GLF_IDENTITY(1, (1) / 1)]) - 0.0))).x > injectionSwitch.y))));
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
        }
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(4291.1459, -4805.9664))))).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true)))))))) && (false)), (false) || false)), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(float(injectionSwitch.x)), _GLF_IDENTITY(max(float(float(injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).x)), mix(float(float(float(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).x))), float(_GLF_FUZZED(-249.688)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), min(float(float(injectionSwitch.x)), float(float(injectionSwitch.x))))), mix(_GLF_IDENTITY(float(max(float(float(injectionSwitch.x)), _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).x)), min(float(float(injectionSwitch.x)), float(float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), injectionSwitch, injectionSwitch)).x)))))), (float(max(float(float(injectionSwitch.x)), _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).x)), min(float(float(injectionSwitch.x)), float(float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), injectionSwitch, injectionSwitch)).x))))))) - 0.0), float(_GLF_FUZZED(150.641)), bool(false)))), (true ? float(float(injectionSwitch.x)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(1567.6921), clamp(_GLF_FUZZED(1567.6921), _GLF_FUZZED(1567.6921), _GLF_FUZZED(1567.6921))), (_GLF_FUZZED(1567.6921)) / _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat4x2(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))), 1.0, 1.0)))))) > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))))))
            return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
         if(_GLF_DEAD(false))
          return;
        }
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8123.8523, 9.3)))).x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            break;
           break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         if(_GLF_DEAD(false))
          break;
        }
       while(_GLF_WRAPPED_LOOP(false));
       for(int _injected_loop_counter = ((0 & -14111) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(5, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (5))), 0 | (int(5))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) / 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(atomicAnd(_injected_loop_counter, 67835)) : int(1)))) >> 0), int(1)))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_ONE(1.0, injectionSwitch.y))))))
            continue;
           break;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), (injectionSwitch.x > injectionSwitch.y))))))))
            return;
           return;
          }
         for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y)))), (int(_GLF_ONE(1.0, injectionSwitch.y))) | 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY((_injected_loop_counter --), _GLF_IDENTITY((((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) | 1), clamp(_GLF_IDENTITY((((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) | 1), clamp((((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) | 1), _GLF_IDENTITY((((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) | 1), ((((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) | 1)) >> 0), (((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) | 1))), (((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) | 1), (((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) | 1))) * ((_injected_loop_counter --))) >> 0))
          {
           return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
            return;
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(distance(vec4(28.96, -5.8, 3.3, 5.6), vec4(4306.1197, 5.6, -2.2, 3711.2956))) : injectionSwitch.x)) > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) / 1), clamp(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(84634) : 1)), 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                continue;
               break;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
              return;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
              }
             else
              {
               return;
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-7.6)))))))
                continue;
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              break;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true), true))))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                }
               else
                {
                 if(_GLF_DEAD(false))
                  break;
                }
              }
            }
          }
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (64) | 0), 64)))), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
}
