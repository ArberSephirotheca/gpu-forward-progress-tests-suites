#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8.8))), 0.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, exp(0.0)), vec3(0.0, 0.0, 1.0)), float(mat2(dot(vec3(0.0, 0.0, exp(0.0)), vec3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0, 1.0)), 0.0, 0.0, abs(1.0)))), dot(vec3(0.0, 0.0, exp(0.0)), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 1.0))).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), bool(bvec3(! (! (_GLF_IDENTITY(false, (false) && true))), false, true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), bool(bvec3(! (! (_GLF_IDENTITY(false, (false) && true))), false, true))), true), true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), bool(bvec3(! (! (_GLF_IDENTITY(false, (false) && true))), false, true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), bool(bvec3(! (! (_GLF_IDENTITY(false, (false) && true))), false, true))), true), true)))), false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true), false || (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
    barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) && true, true && ((_GLF_IDENTITY(false, (false) || false)) && true))), (injectionSwitch.x > injectionSwitch.y)), false, true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-81.68) : injectionSwitch.x))) * 1.0) > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-81.68) : injectionSwitch.x))) * 1.0) > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-81.68) : injectionSwitch.x))) * 1.0) > injectionSwitch.y))))) && true)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), true, true, _GLF_IDENTITY(false, bool(bool(false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(353.096) : _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), true, false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) && true)))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) && true))))) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), _GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)))), gl_WorkGroupSize)).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, (false) || false))), true, false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(float(true))), (float(_GLF_FUZZED(float(true)))) / 1.0), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(sinh(injectionSwitch)))).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(sinh(injectionSwitch)))).y))), float(_GLF_IDENTITY(mat2x4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(sinh(injectionSwitch)))).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(sinh(injectionSwitch)))).y))), sqrt(0.0), 0.0, 0.0, tan(tan(0.0)), 1.0, 0.0, 0.0), transpose(transpose(mat2x4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(sinh(injectionSwitch)))).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(sinh(injectionSwitch)))).y))), sqrt(0.0), 0.0, 0.0, tan(tan(0.0)), 1.0, 0.0, 0.0)))))) + 0.0)))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false)), true)))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.9) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(4.0) : injectionSwitch.y)))))))) || false), true, false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), true && (bool(bvec2(_GLF_DEAD(false), true))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.8)), float(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), clamp(round(length(normalize(1.0))), round(length(normalize(1.0))), round(length(normalize(1.0))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))))), bool(true))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-48.28))) > injectionSwitch.y)))) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false)))))), false, false)))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), false, false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), false, false)))), false, false, false)), (bool(bvec4((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), false, false)))), false, false, false))) && true))) && true))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), true))))) || false) ? _GLF_FUZZED(unpackUnorm2x16(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u)) | (subgroup_local_id), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / _GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id))) : 1u)), _GLF_IDENTITY(1u, (1u) | 0u))), _GLF_IDENTITY(1u, ~ (~ (1u))))), (1u) / 1u))), ~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / _GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u)), _GLF_IDENTITY(1u, (1u) | 0u))), _GLF_IDENTITY(1u, ~ (~ (1u))))), (1u) / 1u))))), (_GLF_IDENTITY((~ ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uvec4(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (0u << _GLF_IDENTITY(uint(2u), uint(2u))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u)))) | (subgroup_local_id))) / _GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u)), 0u ^ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u)))), _GLF_IDENTITY(1u, (1u) | 0u))), _GLF_IDENTITY(1u, ~ (~ (1u))))), (_GLF_IDENTITY(1u, (1u) << 0u)) / 1u))))), ((~ _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) | (subgroup_local_id))) / _GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u)), _GLF_IDENTITY(1u, (1u) | 0u))), _GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), (true ? ~ (~ (_GLF_IDENTITY(1u, ~ (~ (1u))))) : _GLF_FUZZED(subgroup_id)))))), (1u) / 1u)))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) | (subgroup_local_id))) / _GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u)), _GLF_IDENTITY(1u, (1u) | 0u))), _GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), (true ? ~ (~ (_GLF_IDENTITY(1u, ~ (~ (1u))))) : _GLF_FUZZED(subgroup_id)))))), (1u) / 1u)))), _GLF_IDENTITY(uint(uvec3(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) | (subgroup_local_id))) / _GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u)), _GLF_IDENTITY(1u, (1u) | 0u))), _GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), (true ? ~ (~ (_GLF_IDENTITY(1u, ~ (~ (1u))))) : _GLF_FUZZED(subgroup_id)))))), (1u) / 1u)))), 0u, 1u)), (uint(uvec3(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) | (subgroup_local_id))) / _GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u)), _GLF_IDENTITY(1u, (1u) | 0u))), _GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), (true ? ~ (~ (_GLF_IDENTITY(1u, ~ (~ (1u))))) : _GLF_FUZZED(subgroup_id)))))), (1u) / 1u)))), 0u, 1u))) | (uint(uvec3(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) | (subgroup_local_id))) / _GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u)), _GLF_IDENTITY(1u, (1u) | 0u))), _GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), (true ? ~ (~ (_GLF_IDENTITY(1u, ~ (~ (1u))))) : _GLF_FUZZED(subgroup_id)))))), (1u) / 1u)))), 0u, 1u)))))) | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) | (subgroup_local_id))) / _GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u)), _GLF_IDENTITY(1u, (1u) | 0u))), _GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), (true ? ~ (~ (_GLF_IDENTITY(1u, ~ (~ (1u))))) : _GLF_FUZZED(subgroup_id)))))), (1u) / 1u)))), 0u | (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) | (subgroup_local_id))) / _GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u)), _GLF_IDENTITY(1u, (1u) | 0u))), _GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), (true ? ~ (~ (_GLF_IDENTITY(1u, ~ (~ (1u))))) : _GLF_FUZZED(subgroup_id)))))), (1u) / 1u)))))))))) / 1u)) + 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / _GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u)), _GLF_IDENTITY(1u, (1u) | 0u))), _GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), clamp((~ (1u)), (~ (1u)), (~ (1u))))))), (1u) / 1u))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / _GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u)), _GLF_IDENTITY(1u, (1u) | 0u))), _GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(1u, 0u ^ (1u)))), (false ? _GLF_FUZZED(132585u) : (~ (_GLF_IDENTITY(1u, 0u ^ (1u))))))))), (_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 1u))) : _GLF_FUZZED(50747u)))) / 1u))))))) / 1u) | (subgroup_local_id)) >> (0u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, min(2u, _GLF_IDENTITY(2u, (2u) >> 0u)))) | 0u)))))))))) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))))))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-114.591) : _GLF_IDENTITY(1.0, min(1.0, 1.0))))) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false) ? _GLF_FUZZED(unpackUnorm2x16(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u)) | (subgroup_local_id), ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), (subgroup_local_id) | (subgroup_local_id)))) | _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), ~ (_GLF_IDENTITY(~ (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))))), (~ (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))))) | 0u))), min(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))))) | (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))))), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))))))) / _GLF_IDENTITY(1u, (1u) / 1u))) | (subgroup_local_id)) >> (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED((+ -8.2)), _GLF_FUZZED((-96.51))), _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(vec2(_GLF_FUZZED((+ -8.2)), _GLF_FUZZED((-96.51))), clamp(vec2(_GLF_FUZZED((+ -8.2)), _GLF_FUZZED((-96.51))), vec2(_GLF_FUZZED(_GLF_IDENTITY((+ -8.2), max((+ -8.2), (+ -8.2)))), _GLF_FUZZED((-96.51))), vec2(_GLF_FUZZED((+ -8.2)), _GLF_FUZZED((-96.51))))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (vec2(mat4x2(_GLF_IDENTITY(vec2(_GLF_FUZZED((+ -8.2)), _GLF_FUZZED((-96.51))), clamp(vec2(_GLF_IDENTITY(_GLF_FUZZED((+ -8.2)), (_GLF_FUZZED((+ -8.2))) / _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_FUZZED((-96.51))), vec2(_GLF_FUZZED((+ -8.2)), _GLF_FUZZED((-96.51))), vec2(_GLF_FUZZED(_GLF_IDENTITY((+ -8.2), 0.0 + (_GLF_IDENTITY((+ -8.2), mix(float((+ _GLF_IDENTITY(-8.2, min(_GLF_IDENTITY(-8.2, max(-8.2, -8.2)), -8.2)))), float(_GLF_FUZZED(1.0)), bool(false)))))), _GLF_FUZZED((-96.51))))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) + vec2(0.0, 0.0))), vec2((vec2(0.0, 0.0) + (injectionSwitch))[0], (vec2(0.0, 0.0) + (injectionSwitch))[1]), bvec2(true, true)))), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false) ? _GLF_FUZZED(unpackUnorm2x16(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u)) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(floatBitsToUint(4.8))))) | (subgroup_local_id))) / 1u)) | (subgroup_local_id), ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id)))))) | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))))) / _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), 0u | ((1u))) / 1u))) | (subgroup_local_id)) >> (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(_GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))), uint(2u), _GLF_IDENTITY(uint(2u), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) * (uint(2u))))), uint(2u))))))) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED((+ -8.2)), _GLF_IDENTITY((_GLF_FUZZED((+ -8.2))), clamp(_GLF_IDENTITY((_GLF_FUZZED((+ -8.2))), mix(float((_GLF_FUZZED((+ -8.2)))), float(_GLF_FUZZED(40.10)), bool(false))), (_GLF_FUZZED((+ -8.2))), (_GLF_FUZZED((+ -8.2))))) / 1.0), _GLF_FUZZED((-96.51))), _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED((+ -8.2)), (false ? _GLF_FUZZED(-3534.0186) : _GLF_IDENTITY(_GLF_FUZZED((+ -8.2)), mix(float(_GLF_FUZZED((+ -8.2))), float(_GLF_FUZZED(-3.1)), bool(false))))), _GLF_FUZZED((-96.51))), clamp(vec2(_GLF_FUZZED((+ -8.2)), _GLF_FUZZED((-96.51))), vec2(_GLF_FUZZED(_GLF_IDENTITY((+ -8.2), mix(float(_GLF_FUZZED(-457.467)), float((+ -8.2)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_FUZZED((-96.51))), vec2(_GLF_FUZZED((+ -8.2)), _GLF_FUZZED((-96.51))))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (vec2(mat4x2(_GLF_IDENTITY(vec2(_GLF_FUZZED((+ _GLF_IDENTITY(-8.2, (false ? _GLF_FUZZED(acosh(-6.8)) : -8.2)))), _GLF_FUZZED((-96.51))), clamp(vec2(_GLF_FUZZED((+ -8.2)), _GLF_FUZZED((-96.51))), vec2(_GLF_FUZZED((+ -8.2)), _GLF_FUZZED((-96.51))), vec2(_GLF_FUZZED((+ -8.2)), _GLF_FUZZED((-96.51))))), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(37.37)), float(1.0), bool(true)))))) + vec2(0.0, 0.0))), vec2((vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(3939.4135)), bool(false))), 0.0) + (injectionSwitch))[0], (vec2(0.0, 0.0) + (injectionSwitch))[1]), bvec2(true, true)))))[0], (false ? _GLF_FUZZED(-7704.1468) : (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false, true && ((_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) ? _GLF_FUZZED(unpackUnorm2x16(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)) + 0u)) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u)) | (subgroup_local_id), ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))))) / _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), 0u | ((1u))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), 0u | ((1u))) / 1u), ~ (~ (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), 0u | ((_GLF_IDENTITY(1u, (1u) ^ (1u ^ 1u))))) / 1u))))) >> 0u))) | (subgroup_local_id)) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), uint(uvec4(~ (workgroup_base), 1u, 0u, 1u)))))) : 2u))), uint(2u))))))) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED((+ -8.2)), _GLF_IDENTITY((_GLF_FUZZED((+ -8.2))), clamp(_GLF_IDENTITY((_GLF_FUZZED((+ -8.2))), mix(float((_GLF_FUZZED((+ -8.2)))), float(_GLF_FUZZED(40.10)), bool(false))), (_GLF_FUZZED((+ -8.2))), (_GLF_FUZZED(_GLF_IDENTITY((+ -8.2), clamp((+ -8.2), (+ -8.2), (+ -8.2))))))) / 1.0), _GLF_FUZZED((-96.51))), _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(vec2(_GLF_FUZZED((+ -8.2)), _GLF_FUZZED((-96.51))), clamp(vec2(_GLF_FUZZED((+ -8.2)), _GLF_FUZZED((-96.51))), vec2(_GLF_FUZZED(_GLF_IDENTITY((+ -8.2), mix(float(_GLF_FUZZED(-457.467)), float((+ -8.2)), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y)))))), _GLF_FUZZED((-96.51))), vec2(_GLF_FUZZED((+ -8.2)), _GLF_FUZZED(_GLF_IDENTITY((-96.51), clamp((-96.51), _GLF_IDENTITY((-96.51), mix(float(_GLF_FUZZED((- 8431.3481))), float((-96.51)), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))), (-96.51))))))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (vec2(mat4x2(_GLF_IDENTITY(vec2(_GLF_FUZZED((+ -8.2)), _GLF_FUZZED((-96.51))), clamp(vec2(_GLF_FUZZED((+ -8.2)), _GLF_FUZZED((-96.51))), vec2(_GLF_FUZZED((+ -8.2)), _GLF_FUZZED((-96.51))), vec2(_GLF_FUZZED((+ _GLF_IDENTITY(-8.2, (-8.2) - 0.0))), _GLF_FUZZED((-96.51))))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) + vec2(0.0, 0.0))), vec2((vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[0], (vec2(0.0, 0.0) + (injectionSwitch))[1]), bvec2(true, true)))))[0])), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))) || false) ? _GLF_FUZZED(unpackUnorm2x16(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u)) | (subgroup_local_id), ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) | (subgroup_local_id))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), ((subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) ^ 0u))), 0u | ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), ((subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) ^ 0u)))))), ~ (~ (((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) << 0u), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) << 0u)) << 0u), ((subgroup_local_id) | (subgroup_local_id)) ^ 0u))))))) | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))))) / _GLF_IDENTITY(1u, (1u) / 1u))) | (subgroup_local_id)) >> (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED((+ -8.2)), _GLF_FUZZED(_GLF_IDENTITY((-96.51), mix(float(_GLF_IDENTITY((-96.51), _GLF_IDENTITY(clamp(_GLF_IDENTITY((-96.51), (false ? _GLF_FUZZED(-7304.6090) : (-96.51))), (-96.51), (-96.51)), max(clamp((-96.51), (-96.51), (-96.51)), clamp((-96.51), (-96.51), (-96.51)))))), float(_GLF_FUZZED(-9.5)), _GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (! (bool(false))), (! (! (bool(false)))) || false))) && true))))), _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(vec2(_GLF_FUZZED((+ -8.2)), _GLF_FUZZED((-96.51))), _GLF_IDENTITY(clamp(vec2(_GLF_FUZZED((+ -8.2)), _GLF_FUZZED((-96.51))), vec2(_GLF_FUZZED((+ -8.2)), _GLF_FUZZED(_GLF_IDENTITY((-96.51), (_GLF_IDENTITY((-96.51), float(mat3x2(_GLF_IDENTITY((-96.51), ((-96.51)) / 1.0), 0.0, cos(0.0), 1.0, 1.0, 0.0)))) * 1.0))), vec2(_GLF_FUZZED((+ -8.2)), _GLF_FUZZED((-96.51)))), clamp(clamp(vec2(_GLF_FUZZED((+ -8.2)), _GLF_FUZZED((-96.51))), vec2(_GLF_FUZZED((+ _GLF_IDENTITY(-8.2, (-8.2) / 1.0))), _GLF_FUZZED((-96.51))), vec2(_GLF_FUZZED((+ -8.2)), _GLF_FUZZED((-96.51)))), _GLF_IDENTITY(clamp(vec2(_GLF_FUZZED((+ -8.2)), _GLF_FUZZED((-96.51))), vec2(_GLF_FUZZED((+ -8.2)), _GLF_FUZZED((-96.51))), vec2(_GLF_FUZZED((+ -8.2)), _GLF_FUZZED((-96.51)))), mat2(1.0) * (clamp(vec2(_GLF_FUZZED((+ -8.2)), _GLF_IDENTITY(_GLF_FUZZED((-96.51)), (_GLF_FUZZED((-96.51))) / 1.0)), vec2(_GLF_FUZZED((_GLF_IDENTITY(+ -8.2, (_GLF_IDENTITY(+ -8.2, (false ? _GLF_FUZZED((- -3620.2348)) : + -8.2))) - _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))))))), _GLF_FUZZED((-96.51))), vec2(_GLF_FUZZED((+ -8.2)), _GLF_FUZZED((-96.51)))))), clamp(vec2(_GLF_FUZZED((+ -8.2)), _GLF_FUZZED((-96.51))), vec2(_GLF_FUZZED((+ -8.2)), _GLF_FUZZED((-96.51))), vec2(_GLF_FUZZED((+ -8.2)), _GLF_FUZZED((-96.51))))))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (vec2(mat4x2(_GLF_IDENTITY(vec2(_GLF_FUZZED((+ -8.2)), _GLF_FUZZED((-96.51))), clamp(vec2(_GLF_FUZZED((+ -8.2)), _GLF_FUZZED((-96.51))), vec2(_GLF_FUZZED((+ -8.2)), _GLF_FUZZED((-96.51))), vec2(_GLF_FUZZED((+ -8.2)), _GLF_FUZZED((-96.51))))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) + vec2(0.0, 0.0))), vec2((vec2(0.0, 0.0) + (injectionSwitch))[0], (vec2(0.0, 0.0) + (injectionSwitch))[1]), bvec2(true, true)))))[1]), vec2(_GLF_FUZZED(-3.7), _GLF_FUZZED(-9.1)), bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), _GLF_ONE(1.0, injectionSwitch.y)), (vec2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), _GLF_ONE(1.0, injectionSwitch.y))) / cos(vec2(0.0, 0.0)))).x > injectionSwitch.y))))) || false)))))))))).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, bool(bool(false))), false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((false), ! (! ((false))))), (false) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4(false, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), true, true))))))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y))))))), false))))))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y))))))), false))))))), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y))))))), false))))))), false), true))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), (! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true)))))) && true))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true))))), (! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true)))))) && true)) && true))))))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true)))))) && true)))))))))))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(vec2(vec3((mat2(1.0) * (injectionSwitch)), 0.0)), vec2(0.0, 0.0) + (vec2(vec3((mat2(1.0) * (injectionSwitch)), 0.0))))) + vec2(0.0, 0.0))).x > injectionSwitch.y)))) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6984.8922)), bool(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0), (true ? mat2x4(injectionSwitch.y, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0) : _GLF_FUZZED(mat2x4(20.01, -217.395, -9.3, -767.324, 249.437, -9485.0878, 2.0, -253.843)))))), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), max(vec2(vec4(injectionSwitch, 1.0, 1.0)), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), (true ? vec2(vec4(injectionSwitch, 1.0, 1.0)) : _GLF_FUZZED(injectionSwitch)))))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0))), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0))).x < injectionSwitch.y))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true), _GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))), true)))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5057.0032), _GLF_FUZZED(4006.4956)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((~ (subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4((~ (subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> uvec4(0u, 0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec4((~ (subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4((~ (subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> uvec4(0u, 0u, 0u, 0u)))) | (uint(_GLF_IDENTITY(uvec4((~ (subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4((~ (subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(1u, 1u, 1u, 1u) ^ uvec4(1u, 1u, 1u, 1u)) | (uvec4(0u, 0u, 0u, 0u))))))))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), ~ (~ (uint(1))))) - 0u), _GLF_IDENTITY(4, (4) << (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(8), int(8)), ~ (~ (0 >> _GLF_IDENTITY(int(8), int(8))))))), 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! _GLF_IDENTITY((! (subgroup_local_id + 1 < subgroup_size)), _GLF_IDENTITY(bool(bvec4((! (subgroup_local_id + 1 < subgroup_size)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), true && (bool(bvec4((! (subgroup_local_id + 1 < subgroup_size)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))), _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < injectionSwitch.y)) && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) || false)))) && true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 0.0, 0.0, 1.0)))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, 0.0)), (_GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, 0.0)), clamp(float(mat2x4(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.2)), bool(false))), 0.0, exp(0.0), 1.0, 1.0, 0.0)), float(mat2x4(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, exp(0.0), 1.0, 1.0, 0.0)), float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, 0.0))))) * 1.0)) > injectionSwitch.y)), (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, 0.0)), (_GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, 0.0)), clamp(_GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.2)), bool(false))), 0.0, exp(0.0), 1.0, 1.0, 0.0)), (_GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.2)), bool(false))), 0.0, exp(0.0), 1.0, 1.0, 0.0)), mix(float(float(mat2x4(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.2)), bool(false))), 0.0, exp(0.0), 1.0, 1.0, 0.0))), float(_GLF_FUZZED(869.679)), bool(false)))) - 0.0), float(mat2x4(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, exp(0.0), 1.0, 1.0, 0.0)), float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, 0.0))))) * 1.0)) > injectionSwitch.y))) || false))))))), true, false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2.0) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec3(_GLF_IDENTITY((! (false)), ((! (false))) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), true && ((false)))) || false)))), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), true && ((false)))) || false)))), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), true && ((false)))) || false)))), bool(bool(true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), false || (((false)))))) || false))))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, (injectionSwitch.y) * 1.0), _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-45.19)), bool(false))), injectionSwitch.y), _GLF_IDENTITY(1.0, float(mat2(1.0, log(1.0), 1.0, 1.0))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))), mat2(1.0) * (mat3x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))))))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) - vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(-4.2, 33.42)))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-2719.9350, float(mat4x2(-2719.9350, 0.0, tan(0.0), 1.0, 1.0, 0.0, 1.0, 1.0)))) : injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(-2719.9350, float(mat4x2(-2719.9350, 0.0, tan(0.0), 1.0, 1.0, 0.0, 1.0, 1.0)))) : injectionSwitch.y) - 0.0))))))))), false, true, true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, true && (true)))) || false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))) - 0.0) > injectionSwitch.y)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0), (mat3(injectionSwitch.x, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) < injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, length(vec2(0.0, 0.0)) + (injectionSwitch.x)), 0.0, abs(0.0), 0.0, 1.0, 1.0))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(67.19))) : _GLF_FUZZED(-76.97)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, (4) << (_GLF_IDENTITY((_GLF_IDENTITY(0, max(0, 0)) | 0), ((0 | 0)) - 0) << _GLF_IDENTITY(int(0), int(0)))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (_GLF_IDENTITY(bool(bvec2(false, false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(false, true && (false)))), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))) || false))))))) && true))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (_GLF_IDENTITY(bool(bvec2(false, false)), false || (_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)))))), true && (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(bool(bvec2(false, false)), false || (_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))))))))) && true))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, false, _GLF_IDENTITY(false, false || (false)))), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, false, _GLF_IDENTITY(false, false || (false))))) || false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(false, false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(false, true && (false)))), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))) || false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (_GLF_IDENTITY(bool(bvec2(false, false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(false, true && (false)))), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))) || false)))))), (_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (_GLF_IDENTITY(bool(bvec2(false, false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, true && (true)) && (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, true && (true)) && (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), false))), ! (! ((bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true && (true)) && (injectionSwitch.x > injectionSwitch.y))))))), false)))))) || false))))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (_GLF_IDENTITY(bool(bvec2(false, false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(false, true && (false)))), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))) || false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(false, false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(false, true && (false)))), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))) || false))), (_GLF_IDENTITY(bool(bvec2(false, false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(false, true && (false)))), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))) || false)))) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(false, false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(false, true && (false)))), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))), (bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))) && true))) || false), bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))) || false))))), ((! (_GLF_IDENTITY(bool(bvec2(false, false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(false, true && (false)))), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))) || false)))))) && true))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (_GLF_IDENTITY(bool(bvec2(false, false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false))) || false))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (_GLF_IDENTITY(bool(bvec2(false, false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(false))), _GLF_IDENTITY(false, true && (false)))), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))) || false))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (_GLF_IDENTITY(bool(bvec2(false, false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(false, true && (false)))), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))) || false))))))), bool(bvec2(! (_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (_GLF_IDENTITY(bool(bvec2(false, false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(false, true && (false)))), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))) || false))))))), false))))), false, true, false))))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), true && (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))) || false))))) && true))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), (true) || false) && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))) || false))), false)), (_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(false, false)), false || (_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY((bool(bvec2(false, false))) || false, false || ((bool(bvec2(false, false))) || _GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_IDENTITY(bool(bvec2(false, false)), false || (_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec2(false, false)), false || (_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))))), (! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(false, false)), false || (_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(false, false)), false || (_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)))), ! (! ((_GLF_IDENTITY(bool(bvec2(false, false)), false || (_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)))))))))))) && true), ! (! (! (! (_GLF_IDENTITY(bool(bvec2(false, false)), false || (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), (bool(bvec2(false, false))) || false)))))))))))) && true)))))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))))).x, (false ? _GLF_FUZZED(91.53) : _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0))))).x)) > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), true, true, false))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, bool(bvec3(true, true, true))), true, false))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))), true && (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) || false))) || false, true && ((_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x))))) > injectionSwitch.y, false)))))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))), (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, ! (! (true)))))), true, true, false))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, bool(bvec3(true, true, true))), true, false))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))), true && _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(348.529)), vec2(_GLF_FUZZED(-81.70), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(348.529)), vec2(_GLF_FUZZED(-81.70), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ((_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(348.529)), vec2(_GLF_FUZZED(-81.70), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))) || false))) || false, true && ((_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x))))) > injectionSwitch.y, false)))))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))) || false)), ((_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))) || false), false, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), _GLF_IDENTITY(true, (true) || false), true, false))), true && (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), ! (! (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))), true, false))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))), true && _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))))) || false))) || false, true && ((_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x))))) > injectionSwitch.y, false)))))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))) && true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, max(0, 0)), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 1)))], _GLF_FUZZED(-7.2)), vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(i) : 0))], _GLF_IDENTITY(_GLF_FUZZED(-7.2), (false ? _GLF_FUZZED(roundEven(-8.9)) : _GLF_FUZZED(-7.2)))), vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1]), bvec2(false, true))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(-7.2)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1])) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1])) / vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1])) / vec2(1.0, 1.0)))), bvec2(_GLF_IDENTITY(false, ! (! (false))), true))) : _GLF_FUZZED(acosh(injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) ^ 0)], _GLF_IDENTITY(_GLF_FUZZED(-7.2), (_GLF_FUZZED(-7.2)) / 1.0)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-9.1), clamp(_GLF_FUZZED(-9.1), _GLF_FUZZED(-9.1), _GLF_IDENTITY(_GLF_FUZZED(-9.1), (true ? _GLF_FUZZED(-9.1) : _GLF_FUZZED(-3.7))))), (injectionSwitch)[1]), bvec2(false, true)))) / vec2(1.0, 1.0)), tan(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), min(determinant(_GLF_IDENTITY(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0))) / 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0))) / 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0))))), determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0))))), 0.0, 0.0), (mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-7.2, _GLF_IDENTITY(float(mat4(-7.2, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, 0.0, length(vec2(0.0, 0.0)), round(length(normalize(1.0))), 0.0)), 1.0 * (float(mat4(-7.2, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, 0.0, length(vec2(0.0, 0.0)), round(length(normalize(1.0))), 0.0))))))), vec2(_GLF_FUZZED(-9.1), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0))), max(_GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(mat2((injectionSwitch)[_GLF_IDENTITY(1, (1) | (1))], log(1.0), 1.0, 0.0), mat2(mat2(mat2((injectionSwitch)[_GLF_IDENTITY(1, (1) | (1))], log(1.0), 1.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, ~ (~ (0))), 0)))], float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0))), max(_GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY(float(mat2((injectionSwitch)[_GLF_IDENTITY(1, min(1, 1))], log(1.0), 1.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(float(mat2((injectionSwitch)[_GLF_IDENTITY(1, min(1, 1))], log(1.0), 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), (mat3(float(mat2((injectionSwitch)[_GLF_IDENTITY(1, min(1, 1))], log(1.0), 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(mat3(float(mat2((injectionSwitch)[_GLF_IDENTITY(1, min(1, 1))], log(1.0), 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), (mat3(float(mat2((injectionSwitch)[_GLF_IDENTITY(1, min(1, 1))], log(1.0), 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(float(mat2((injectionSwitch)[_GLF_IDENTITY(1, min(1, 1))], log(1.0), 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), (mat3(float(mat2((injectionSwitch)[_GLF_IDENTITY(1, min(1, 1))], log(1.0), 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (float(_GLF_IDENTITY(mat3(float(mat2((injectionSwitch)[_GLF_IDENTITY(1, min(1, 1))], log(1.0), 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), (mat3(float(mat2((injectionSwitch)[_GLF_IDENTITY(1, min(1, 1))], log(1.0), 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) / 1.0), float(_GLF_IDENTITY(mat3(float(mat2((injectionSwitch)[_GLF_IDENTITY(1, min(1, 1))], log(1.0), 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), (mat3(float(mat2((injectionSwitch)[_GLF_IDENTITY(1, min(1, 1))], log(1.0), 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), clamp(float(mat2((injectionSwitch)[1], log(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), 1.0, 0.0)), float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0)), float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0)))))))))), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(false, true), false, false)), false)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.2)), vec2(_GLF_FUZZED(-9.1), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true)))) / vec2(1.0, 1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(tanh(injectionSwitch), vec2(mat2x4(tanh(injectionSwitch), 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0)))) : (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0])), _GLF_FUZZED(-7.2)), vec2(_GLF_FUZZED(-9.1), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true)))) / vec2(1.0, 1.0)))), tan(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(exp(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(float(_GLF_FUZZED((- 540.775))), float(exp(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), bool(true))), 0.0, 0.0)) * mat3(1.0))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(i), (_GLF_FUZZED(i)) | (_GLF_FUZZED(i))) : 0))], _GLF_IDENTITY(_GLF_FUZZED(-7.2), (false ? _GLF_FUZZED(roundEven(-8.9)) : _GLF_FUZZED(-7.2)))), min(vec2((injectionSwitch)[_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(i), (_GLF_FUZZED(i)) | (_GLF_FUZZED(i))) : 0))], _GLF_IDENTITY(_GLF_FUZZED(-7.2), (false ? _GLF_FUZZED(roundEven(-8.9)) : _GLF_FUZZED(-7.2)))), vec2((injectionSwitch)[_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(i), (_GLF_FUZZED(i)) | (_GLF_FUZZED(i))) : 0))], _GLF_IDENTITY(_GLF_FUZZED(-7.2), (false ? _GLF_FUZZED(roundEven(-8.9)) : _GLF_FUZZED(-7.2)))))), vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1]), bvec2(false, true))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_FUZZED(-7.2)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1])) / vec2(1.0, 1.0)), bvec2(_GLF_IDENTITY(false, ! (! (false))), true))) : _GLF_IDENTITY(_GLF_FUZZED(acosh(injectionSwitch)), mix(vec2((_GLF_FUZZED(acosh(injectionSwitch)))[0], (_GLF_FUZZED(acosh(injectionSwitch)))[1]), vec2(_GLF_FUZZED(vec2(-4.9, -43.77).g), _GLF_FUZZED(-2.0)), bvec2(false, false))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-7.2), (_GLF_FUZZED(-7.2)) / 1.0)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-9.1), clamp(_GLF_FUZZED(-9.1), _GLF_FUZZED(-9.1), _GLF_IDENTITY(_GLF_FUZZED(-9.1), (true ? _GLF_FUZZED(-9.1) : _GLF_FUZZED(-3.7))))), (injectionSwitch)[1]), bvec2(false, true)))) / vec2(1.0, 1.0)), tan(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(exp(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), min(determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0))))), min(exp(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), min(determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0))))), exp(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), min(determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0))))))), 0.0, 0.0), (mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.2)), vec2(_GLF_FUZZED(-9.1), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0))), max(_GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) << 0)], float(mat2((injectionSwitch)[1], log(1.0), 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))))), max(_GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat2(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(vec3((injectionSwitch), 1.0)))))[1], log(1.0), 1.0, 0.0)), clamp(float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0)), float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0)), float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0)))))))))), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(false, true), false, false)), false)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.2)), vec2(_GLF_FUZZED(-9.1), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true)))) / vec2(1.0, 1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(tanh(injectionSwitch), vec2(mat2x4(tanh(injectionSwitch), 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0))), clamp(_GLF_IDENTITY(tanh(injectionSwitch), vec2(mat2x4(tanh(injectionSwitch), 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(tanh(injectionSwitch), vec2(mat2x4(tanh(injectionSwitch), 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(tanh(injectionSwitch), vec2(mat2x4(tanh(injectionSwitch), 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0)))))) : (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0])), _GLF_FUZZED(-7.2)), vec2(_GLF_FUZZED(-9.1), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))))[1], (injectionSwitch)[1]))), bvec2(false, true)))) / vec2(1.0, 1.0)))), tan(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 0.0)) * mat3(1.0))), mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(i) : 0))], _GLF_IDENTITY(_GLF_FUZZED(-7.2), (false ? _GLF_FUZZED(roundEven(-8.9)) : _GLF_FUZZED(-7.2)))), vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1]), bvec2(false, true))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))), false)))) ? _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_FUZZED(-7.2)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1])) / vec2(1.0, 1.0)), bvec2(_GLF_IDENTITY(false, ! (! (false))), true))) : _GLF_FUZZED(acosh(injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-7.2), (_GLF_FUZZED(-7.2)) / _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) + 0.0) : _GLF_FUZZED(613.316))))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-9.1), clamp(_GLF_FUZZED(-9.1), _GLF_FUZZED(-9.1), _GLF_IDENTITY(_GLF_FUZZED(-9.1), (true ? _GLF_FUZZED(-9.1) : _GLF_FUZZED(-3.7))))), (injectionSwitch)[1]), bvec2(false, true)))) / vec2(1.0, 1.0)), tan(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), min(determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(3.4)), bool(false))))), 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0), max(_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0), (true ? min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0) : _GLF_FUZZED(-119.011))), min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0))))), 0.0, 0.0), (mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.2)), vec2(_GLF_FUZZED(-9.1), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0))), max(_GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) << 0)], float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0))), max(_GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0)), clamp(float(mat2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))))[1], log(1.0), 1.0, 0.0)), float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0)), float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0)))))))))), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(false, true), false, false)), false)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.2)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-9.1), mix(float(_GLF_FUZZED(-9.1)), float(_GLF_FUZZED((5764.4324 - -5815.4928))), bool(false))), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true)))) / vec2(1.0, 1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(tanh(injectionSwitch), vec2(mat2x4(tanh(injectionSwitch), 0.0, 0.0, abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 1.0, 1.0, 0.0)))) : (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0])), _GLF_FUZZED(-7.2)), vec2(_GLF_FUZZED(-9.1), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true)))) / vec2(1.0, 1.0)))), tan(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 0.0)) * mat3(1.0))))[0], (true ? (vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(i) : 0))], _GLF_IDENTITY(_GLF_FUZZED(-7.2), (false ? _GLF_FUZZED(roundEven(-8.9)) : _GLF_FUZZED(-7.2)))), vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1]), bvec2(false, true))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))), false)))) ? _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_FUZZED(-7.2)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1])) / vec2(1.0, 1.0)), bvec2(_GLF_IDENTITY(false, ! (! (false))), true))) : _GLF_FUZZED(acosh(injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-7.2), (_GLF_FUZZED(-7.2)) / _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) + 0.0) : _GLF_FUZZED(613.316))))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-9.1), clamp(_GLF_FUZZED(-9.1), _GLF_FUZZED(-9.1), _GLF_IDENTITY(_GLF_FUZZED(-9.1), (true ? _GLF_FUZZED(-9.1) : _GLF_FUZZED(-3.7))))), (injectionSwitch)[1]), bvec2(false, true)))) / vec2(1.0, 1.0)), tan(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), min(determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(3.4)), bool(false))))), 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0), max(_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0), (true ? min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0) : _GLF_FUZZED(-119.011))), min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0))))), 0.0, 0.0), (mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.2)), vec2(_GLF_FUZZED(-9.1), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0))), max(_GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) << 0)], float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0))), max(_GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0)), clamp(float(mat2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))))[1], log(1.0), 1.0, 0.0)), float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0)), float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0)))))))))), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(false, true), false, false)), false)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.2)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-9.1), mix(float(_GLF_FUZZED(-9.1)), float(_GLF_FUZZED((5764.4324 - -5815.4928))), bool(false))), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true)))) / vec2(1.0, 1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(tanh(injectionSwitch), vec2(mat2x4(tanh(injectionSwitch), 0.0, 0.0, abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 1.0, 1.0, 0.0)))) : (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0])), _GLF_FUZZED(-7.2)), vec2(_GLF_FUZZED(-9.1), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true)))) / vec2(1.0, 1.0)))), tan(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 0.0)) * mat3(1.0))))[0] : _GLF_FUZZED(-4.8))), min((vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(i) : 0))], _GLF_IDENTITY(_GLF_FUZZED(-7.2), (false ? _GLF_FUZZED(roundEven(_GLF_IDENTITY(-8.9, max(_GLF_IDENTITY(-8.9, min(-8.9, -8.9)), _GLF_IDENTITY(-8.9, mix(float(-8.9), float(_GLF_FUZZED(-601.474)), bool(false))))))) : _GLF_FUZZED(-7.2)))), vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1]), bvec2(false, true))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_FUZZED(-7.2)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1])) / vec2(1.0, 1.0)), bvec2(_GLF_IDENTITY(false, ! (! (false))), true))) : _GLF_FUZZED(acosh(injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-7.2), (_GLF_FUZZED(-7.2)) / 1.0)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-9.1), clamp(_GLF_FUZZED(-9.1), _GLF_FUZZED(-9.1), _GLF_IDENTITY(_GLF_FUZZED(-9.1), (true ? _GLF_FUZZED(-9.1) : _GLF_FUZZED(-3.7))))), (injectionSwitch)[1]), bvec2(false, true)))) / vec2(1.0, 1.0)), tan(_GLF_IDENTITY(0.0, 0.0 + _GLF_IDENTITY((0.0), 0.0 + ((0.0))))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(_GLF_IDENTITY(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), min(determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), min(determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)))), mix(float(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), min(determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0))))), float(_GLF_FUZZED(-210.509)), bool(false))), _GLF_IDENTITY(determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), min(determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0))))))), 0.0, 0.0), (mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-7.2, clamp(-7.2, -7.2, -7.2)))), vec2(_GLF_FUZZED(-9.1), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], _GLF_IDENTITY(log(1.0), min(log(1.0), log(1.0))), 1.0, 0.0))), max(_GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) << 0)], float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0))), max(_GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0)), _GLF_IDENTITY(clamp(float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0)), float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0)), float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0))), _GLF_IDENTITY(float(mat2(clamp(float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0)), float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0)), float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0))), 0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(-225.593) : _GLF_IDENTITY(float(mat2(clamp(float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0)), float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0)), float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0))), 0.0, 1.0, 0.0)), (float(mat2(clamp(float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0)), float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0)), float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0))), 0.0, 1.0, 0.0))) - 0.0))))))))))), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(false, true), false, false)), false)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.2)), vec2(_GLF_FUZZED(-9.1), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(_GLF_IDENTITY(false, false || (false)), true)))) / vec2(1.0, 1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(tanh(injectionSwitch), vec2(mat2x4(tanh(injectionSwitch), 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0)))) : (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0])), _GLF_FUZZED(-7.2)), vec2(_GLF_FUZZED(-9.1), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true)))) / vec2(1.0, 1.0)))), tan(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)) * mat3(1.0))))[0], (vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(i) : 0))], _GLF_IDENTITY(_GLF_FUZZED(-7.2), (false ? _GLF_FUZZED(roundEven(-8.9)) : _GLF_FUZZED(-7.2)))), vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1]), bvec2(false, true)), mix(vec2((mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(i) : 0))], _GLF_IDENTITY(_GLF_FUZZED(-7.2), (false ? _GLF_FUZZED(roundEven(-8.9)) : _GLF_FUZZED(-7.2)))), vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1]), bvec2(false, true)))[0], (mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(i) : 0))], _GLF_IDENTITY(_GLF_FUZZED(-7.2), (false ? _GLF_FUZZED(roundEven(-8.9)) : _GLF_FUZZED(-7.2)))), vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1]), bvec2(false, true)))[1]), vec2(_GLF_FUZZED(-9725.4751), _GLF_FUZZED(vec4(7.3, vec3(-23.02, -595.677, -7575.0290)).y)), bvec2(false, false)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_FUZZED(-7.2)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1])) / vec2(1.0, 1.0)), bvec2(_GLF_IDENTITY(false, ! (! (false))), true))) : _GLF_FUZZED(acosh(injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-7.2), (_GLF_FUZZED(-7.2)) / 1.0)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-9.1), clamp(_GLF_FUZZED(-9.1), _GLF_FUZZED(-9.1), _GLF_IDENTITY(_GLF_FUZZED(-9.1), (true ? _GLF_FUZZED(-9.1) : _GLF_FUZZED(-3.7))))), (injectionSwitch)[1]), bvec2(false, true)))) / vec2(1.0, 1.0)), tan(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(exp(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), min(determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0))))), float(_GLF_IDENTITY(mat2x3(exp(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), min(determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0))))), 0.0, 1.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-470.637, 0.2, 0.8, 251.939, 302.728, -4.1)) : mat2x3(exp(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), min(determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0))))), 0.0, 1.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), (mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.2)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-9.1), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0))), max(_GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, (0) | (0)))], float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0))), max(_GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], log(1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0), 0.0))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0)), clamp(float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0)), float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0)), float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0)))))))))), vec2(mat4x3(vec2(_GLF_FUZZED(-9.1), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0))), max(_GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, (0) | (0)))], float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0))), max(_GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], log(1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0), 0.0))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0)), clamp(float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0)), float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0)), float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0)))))))))), 0.0, 0.0, 1.0, exp(0.0), abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(false, true), false, false)), false)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.2)), vec2(_GLF_FUZZED(-9.1), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true)))) / vec2(1.0, 1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(tanh(injectionSwitch), vec2(mat2x4(tanh(injectionSwitch), 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0)))), clamp(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(tanh(injectionSwitch), vec2(mat2x4(tanh(injectionSwitch), 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0)))), max(_GLF_FUZZED(_GLF_IDENTITY(tanh(injectionSwitch), vec2(mat2x4(tanh(injectionSwitch), 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0)))), _GLF_FUZZED(_GLF_IDENTITY(tanh(injectionSwitch), vec2(mat2x4(tanh(injectionSwitch), 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0)))))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(tanh(injectionSwitch), vec2(mat2x4(tanh(injectionSwitch), 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0)))), vec2(mat3(_GLF_FUZZED(_GLF_IDENTITY(tanh(injectionSwitch), vec2(mat2x4(tanh(injectionSwitch), 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0)))), 1.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(tanh(injectionSwitch), vec2(mat2x4(tanh(injectionSwitch), 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0)))), mix(vec2((_GLF_FUZZED(_GLF_IDENTITY(tanh(injectionSwitch), vec2(mat2x4(tanh(injectionSwitch), 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0)))))[0], _GLF_FUZZED(49.43)), vec2(_GLF_FUZZED(2.6), (_GLF_FUZZED(_GLF_IDENTITY(tanh(injectionSwitch), vec2(mat2x4(tanh(injectionSwitch), 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0)))))[1]), bvec2(false, true))))) : (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0])), _GLF_FUZZED(-7.2)), vec2(_GLF_FUZZED(-9.1), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))), true)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))), true)), false))))))) / vec2(1.0, 1.0)))), tan(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 0.0)) * mat3(1.0))))[0])), (vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(i) : 0))], _GLF_IDENTITY(_GLF_FUZZED(-7.2), (false ? _GLF_FUZZED(roundEven(-8.9)) : _GLF_FUZZED(-7.2)))), _GLF_IDENTITY(vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1]), mix(vec2(_GLF_FUZZED(-314.753), _GLF_IDENTITY((vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1]))[1], (true ? (vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1]))[1] : _GLF_FUZZED(-9.6)))), vec2((vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1]))[0], _GLF_FUZZED(-3775.6168)), bvec2(true, false))), bvec2(false, true))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_FUZZED(-7.2)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1])) / vec2(1.0, 1.0)), bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), max(_GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_FUZZED(-7.2)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1])) / vec2(1.0, 1.0)), bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), mix(vec2(_GLF_FUZZED(879.649), (mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_FUZZED(-7.2)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1])) / vec2(1.0, 1.0)), bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))[1]), vec2((mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_FUZZED(-7.2)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1])) / vec2(1.0, 1.0)), bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))[0], _GLF_FUZZED(-566.957)), bvec2(true, false))), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_FUZZED(-7.2)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1])) / vec2(1.0, 1.0)), bvec2(_GLF_IDENTITY(false, ! (! (false))), true))))) : _GLF_FUZZED(acosh(injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-7.2), (_GLF_FUZZED(-7.2)) / 1.0)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-9.1), clamp(_GLF_FUZZED(-9.1), _GLF_FUZZED(-9.1), _GLF_IDENTITY(_GLF_FUZZED(-9.1), (true ? _GLF_FUZZED(-9.1) : _GLF_FUZZED(-3.7))))), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec2(bvec2(bvec2(false, true)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec2(bvec2(bvec2(false, true)))))), true, false)))), true, true)))))) / vec2(1.0, 1.0)), tan(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(abs(1.0), clamp(_GLF_IDENTITY(abs(1.0), mix(float(_GLF_FUZZED(9.6)), float(abs(1.0)), bool(true))), abs(1.0), abs(1.0)))), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), min(determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), min(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0))))), 0.0, 0.0), (mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.2)), vec2(_GLF_FUZZED(-9.1), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0), mat2(mat3x4(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0)))))), max(_GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) << 0)], float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0))), max(_GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0)), clamp(float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0)), float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0)), float(mat2((injectionSwitch)[1], log(1.0), 1.0, 0.0)))))))))), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(false, true), false, _GLF_IDENTITY(false, (false) && true))), false)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.2)), vec2(_GLF_FUZZED(-9.1), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true)))) / vec2(1.0, 1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(tanh(injectionSwitch), vec2(mat2x4(tanh(injectionSwitch), 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0)))) : (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0])), _GLF_FUZZED(-7.2)), vec2(_GLF_FUZZED(-9.1), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true)))) / vec2(1.0, 1.0)))), tan(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(determinant(mat3(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7.7)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 0.0)) * mat3(1.0))))[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-1104.8581), (_GLF_FUZZED(-1104.8581)) - 0.0), _GLF_FUZZED(-6.1)), bvec2(false, false)))) / vec2(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(286.792) : 1.0)), 1.0))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))) && true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))))))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))).y))) && true)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) * determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))).y))) && true))))) && true)), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))))))))))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, int(ivec4(4, 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))), 64, 4);
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
