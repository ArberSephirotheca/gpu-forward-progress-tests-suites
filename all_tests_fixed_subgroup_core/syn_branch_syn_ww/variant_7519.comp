#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_7 {
 ivec3 _f0;
 ivec4 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_6 {
 uvec4 _f0;
} ;

struct _GLF_struct_8 {
 vec4 _f0;
 uint next_virtual_gid;
 _GLF_struct_6 _f1;
 _GLF_struct_7 _f2;
 bvec3 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_4 {
 mat3x4 _f0;
} ;

struct _GLF_struct_5 {
 bool _f0;
 uvec3 _f1;
 int _f2;
 _GLF_struct_4 _f3;
} ;

struct _GLF_struct_2 {
 int _f0;
 uvec2 _f1;
 mat4x3 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
} ;

struct _GLF_struct_9 {
 bool _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_5 _f2;
 uvec4 _f3;
 _GLF_struct_8 _f4;
} ;

struct _GLF_struct_0 {
 mat3 _f0;
 uint workgroup_size;
 vec2 _f1;
} ;

struct _GLF_struct_1 {
 uvec4 _f0;
 mat2 _f1;
 bvec4 _f2;
 _GLF_struct_0 _f3;
 mat3x2 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(uvec4(1u), mat2(1.0), bvec4(true), _GLF_struct_0(mat3(1.0), gl_WorkGroupSize.x, vec2(1.0)), mat3x2(1.0));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_struct_replacement_1._f3.workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(true, _GLF_struct_3(_GLF_struct_2(1, uvec2(1u), mat4x3(1.0), mat4(1.0))), _GLF_struct_5(true, uvec3(1u), 1, _GLF_struct_4(mat3x4(1.0))), uvec4(1u), _GLF_struct_8(vec4(1.0), workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_struct_6(uvec4(1u)), _GLF_struct_7(ivec3(1), ivec4(1), bvec2(true)), bvec3(true), ivec2(1)));
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(subgroup_local_id + 1 < subgroup_size)
    {
     int i = 0;
     atomicStore(buf[_GLF_struct_replacement_9._f4.next_virtual_gid], uint(2), 4, 64, 4);
    }
   else
    {
     atomicStore(buf[_GLF_struct_replacement_9._f4.next_virtual_gid], uint(2), 4, 64, 4);
    }
  }
 else
  {
  }
}
