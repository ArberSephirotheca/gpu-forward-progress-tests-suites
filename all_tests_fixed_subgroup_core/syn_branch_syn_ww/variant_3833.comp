#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(false)))) || false))))) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, true)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, false))))), bool(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), false, true)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)))), false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2825.2543) : injectionSwitch.y)))), true && (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2825.2543) : injectionSwitch.y)))), true && (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2825.2543) : injectionSwitch.y)))), true && (injectionSwitch.x > injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(_GLF_IDENTITY(true, bool(bool(true))), (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))).y, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))).y) - 0.0)))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0)))) * (injectionSwitch)), injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), 1.0))).y))))), ! (_GLF_IDENTITY(! ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)), injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), 1.0))).y)))))), (_GLF_IDENTITY(! ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), 1.0))).y)))))), (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)), injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), 1.0))).y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)), injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), 1.0))).y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)), injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), 1.0))).y))))))))))))) && true)) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + log(_GLF_ONE(1.0, injectionSwitch.y))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + log(_GLF_ONE(1.0, injectionSwitch.y))) > injectionSwitch.y)) || false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(92.84) : injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true), false, true)))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))))), false || (((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))))))), ! _GLF_IDENTITY((! (! ((_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(true && (_GLF_IDENTITY((! (! ((_GLF_IDENTITY(false, ! (! (false))))))), ((! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))))))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && (_GLF_IDENTITY((! (! ((_GLF_IDENTITY(false, ! (! (false))))))), ((! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))))))) || false)))))))) && true)))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), ! (! (bool(false))))), false)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (bool(bvec4(false, false, false, false))))))) && true)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-30.68), min(_GLF_FUZZED(-30.68), _GLF_FUZZED(-30.68)))), float(1.0), bool(true)))))))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-516.366) : min(1.0, 1.0)))), 1.0)), (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6132.2122)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0)))), 1.0))) / 1.0), 1.0, _GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), clamp(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) + 0.0)))), mix(float(_GLF_FUZZED(6.1)), float((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), clamp(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) + 0.0))))), bool(true)))))), mat2(1.0) * (vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-516.366) : min(1.0, 1.0)))), 1.0)), (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6132.2122)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0)))), 1.0))) / 1.0), 1.0, _GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), clamp(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) + 0.0)))), mix(float(_GLF_FUZZED(6.1)), float((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), clamp(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) + 0.0))))), bool(true))))))))))).y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1.3)), bool(false))), 0.0, 1.0, 1.0, 1.0))))).y, true))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, false))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, false)))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, false))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(false)), true, false)), (_GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(false)), true, false)), ! (! (bool(bvec3(! (_GLF_DEAD(false)), true, false)))))) || false)))))))))))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), (_GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))) || false), (_GLF_IDENTITY(bool(bool(true)), (_GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))) || false)) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0), mat3x2(mat3x2(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0)))))) > injectionSwitch.y)))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), ((false) && _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) || (_GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), (_GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))) || false), (_GLF_IDENTITY(bool(bool(true)), (_GLF_IDENTITY(bool(bool(true)), false || _GLF_IDENTITY((bool(bool(true))), ((bool(bool(true)))) && true))) || false)) || _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))) && true)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), mix(float(_GLF_FUZZED(5.2)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))
  barrier();
 if(subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), int(int(_GLF_IDENTITY((1), max((1), (1))))))) ^ 0) << 0), (1) | _GLF_IDENTITY((1), int(ivec4(_GLF_IDENTITY((1), ((1)) + 0), 0, 0, 1)))))), 0, 0, 1), max(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) | 0), (1) | _GLF_IDENTITY((1), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((1), ((1)) + 0), 0, 0, 1), max(ivec4(_GLF_IDENTITY((1), ((1)) + 0), 0, 0, 1), ivec4(_GLF_IDENTITY((1), ((1)) + 0), 0, 0, 1)))))))), 0, 0, 1), (false ? _GLF_FUZZED(ivec4(-70963, 36218, -74331, 87044)) : ivec4(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) | _GLF_IDENTITY((1), int(ivec4(_GLF_IDENTITY((1), ((1)) + 0), 0, 0, 1)))))), _GLF_IDENTITY(0, (0) - 0), 0, 1))), ivec4(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) | _GLF_IDENTITY((1), int(ivec4(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) | ((1)))) + 0), 0, 0, 1)))))), 0, 0, 1))))) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1.6, 4.6)))), injectionSwitch)).y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) ^ _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54519) : _GLF_IDENTITY(0, 1 * (0))))), ((0)) * 1) << int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-2.4), min(true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-2.4), true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-2.4)))))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54519) : _GLF_IDENTITY(0, 1 * (0))))), ((0)) * 1) << int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-2.4), min(true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-2.4), true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-2.4)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54519) : _GLF_IDENTITY(0, 1 * (0))))), ((0)) * 1) << int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-2.4), min(true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-2.4), true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-2.4)))))), _GLF_IDENTITY((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54519) : _GLF_IDENTITY(0, 1 * (0))))), ((0)) * 1) << int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-2.4), min(true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-2.4), true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-2.4)))))))))), 0 | (_GLF_IDENTITY((0), ((0)) * 1) << int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-2.4)))))))), 2, _GLF_IDENTITY(2, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(2, (2) ^ 0)), 1 * ((_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(int(int(2)), max(int(int(2)), int(int(2)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(2)), max(int(int(2)), int(int(2)))), max(_GLF_IDENTITY(int(int(2)), max(int(int(2)), int(int(2)))), _GLF_IDENTITY(int(int(2)), max(int(int(2)), int(int(2))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(2)), max(int(int(2)), int(int(_GLF_IDENTITY(2, (2) | (2)))))), max(_GLF_IDENTITY(int(int(2)), max(int(int(2)), int(int(2)))), _GLF_IDENTITY(int(int(2)), max(int(int(_GLF_IDENTITY(2, (2) ^ 0))), int(int(2)))))))) - 0)))))))))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) - mat2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-72.64) : 0.0)))), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0))) * mat2(1.0))), float(mat3(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))) - mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))), (false ? _GLF_FUZZED(roundEven(89.68)) : _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(2.9, float(mat3x2(2.9, 0.0, log(1.0), 0.0, 0.0, 0.0))))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0)), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0)), mat2(1.0) * (_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0)))))))), bool(true))))), _GLF_IDENTITY(dot(vec2(1.0, log(1.0)), vec2(1.0, 0.0)), dot(vec2(1.0, log(1.0)), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), max(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)) : _GLF_FUZZED(53.32))))), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0))), abs(sin(0.0)), 1.0, 0.0)))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0))) * mat2(1.0))), float(mat3(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))) - mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))), (false ? _GLF_FUZZED(roundEven(89.68)) : _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), _GLF_IDENTITY((mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0))))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(2.9, float(mat3x2(2.9, 0.0, log(1.0), 0.0, 0.0, 0.0))))), float(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), 0.0)))), bool(true))))), _GLF_IDENTITY(dot(vec2(1.0, log(1.0)), vec2(1.0, 0.0)), dot(vec2(1.0, log(1.0)), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(length(vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, abs(1.0), 0.0, tan(0.0), cos(0.0)), (mat2x3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, abs(1.0), 0.0, tan(0.0), cos(0.0))) * mat2(1.0)))), 0.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-299.897)), float(1.0), bool(true)))))), abs(sin(0.0)), 1.0, 0.0)))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), (_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), _GLF_IDENTITY((mat2(injectionSwitch.y, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.2))), 0.0, 0.0)), mat2(mat2x3((mat2(injectionSwitch.y, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.2))), 0.0, 0.0))))) - mat2(0.0, 0.0, 0.0, 0.0))) * mat2(1.0))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))) - mat2(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0 * (_GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0))), (float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))) - mat2(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0 * (_GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0)))) / 1.0), (false ? _GLF_FUZZED(roundEven(_GLF_IDENTITY(89.68, max(89.68, 89.68)))) : _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 0.0, 0.0, 0.0)) - mat2(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) - 0.0) : _GLF_FUZZED(-55.42))), 0.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(2.9, mix(float(_GLF_IDENTITY(2.9, float(mat4x2(2.9, 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0)))), float(_GLF_FUZZED(-6.6)), bool(false))), float(mat3x2(2.9, 0.0, log(1.0), 0.0, 0.0, 0.0))))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(7.2))), 0.0, 0.0), transpose(transpose(mat2(injectionSwitch.y, 0.0, 0.0, 0.0)))), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), bool(bool(! (bool(true))))))))))), _GLF_IDENTITY(dot(vec2(1.0, log(1.0)), vec2(1.0, 0.0)), dot(vec2(1.0, log(1.0)), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(vec2(vec2(1.0, 0.0)))))), _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)) : _GLF_FUZZED(82.55))), 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), dot(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), mat2(1.0) * (vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0))), vec2(length(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 1.0))), abs(sin(0.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0))))))))))))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, abs(1.0), 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, abs(1.0), 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0))) * mat2(1.0))), float(mat3(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY(0.0, (0.0) / 1.0))) - mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))), (false ? _GLF_FUZZED(roundEven(89.68)) : _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, exp(0.0), 0.0, 0.0))), 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(2.9, float(mat3x2(_GLF_IDENTITY(2.9, float(float(_GLF_IDENTITY(2.9, float(mat4(2.9, cos(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, round(length(normalize(1.0))), tan(0.0), 0.0, 0.0)))))), 0.0, log(1.0), 0.0, 0.0, 0.0))))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0)), mat2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0))) - mat2(0.0, 0.0, 0.0, 0.0))))))), bool(true))))), _GLF_IDENTITY(dot(vec2(1.0, log(1.0)), vec2(1.0, 0.0)), dot(vec2(1.0, log(1.0)), vec2(1.0, 0.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(_GLF_IDENTITY(length(vec2(0.0, 0.0)), float(vec2(_GLF_IDENTITY(length(vec2(0.0, 0.0)), (length(vec2(0.0, 0.0))) + 0.0), 0.0))), 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0))), abs(sin(0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(696.403) : _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, abs(0.0), 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))))))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) - mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0)), (_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(4.7) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(vec2(56.20, 8.3).x))), 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0))) * mat2(1.0))), float(mat3(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))), (mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-123.404)), bool(false))), 0.0)))), _GLF_IDENTITY((0.0), ((0.0)) + 0.0) / 1.0))) - mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))), (false ? _GLF_FUZZED(roundEven(89.68)) : _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0)), transpose(transpose(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0)))))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(2.9, float(mat3x2(2.9, 0.0, log(1.0), 0.0, 0.0, 0.0))))), float(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat4(mat2(injectionSwitch.y, 0.0, 0.0, 0.0)), (mat4(mat2(injectionSwitch.y, 0.0, 0.0, 0.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (mat2(_GLF_IDENTITY(mat4(mat2(injectionSwitch.y, 0.0, 0.0, 0.0)), (mat4(mat2(injectionSwitch.y, 0.0, 0.0, 0.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) / mat2(1.0, 1.0, 1.0, 1.0)))) - mat2(0.0, 0.0, 0.0, 0.0)))), bool(true))))), _GLF_IDENTITY(dot(vec2(1.0, log(1.0)), vec2(1.0, 0.0)), dot(vec2(1.0, log(1.0)), vec2(1.0, 0.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / cos(0.0))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), min(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), _GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), (true ? vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0) : _GLF_FUZZED(injectionSwitch))))), vec2(length(vec2(0.0, 0.0)), 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0))), abs(sin(0.0)), 1.0, 0.0)))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), (_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(mat2(injectionSwitch.y, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.2))), 0.0, 0.0), (_GLF_IDENTITY(mat2(injectionSwitch.y, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.2))), 0.0, 0.0), mat2(_GLF_IDENTITY(mat4x2(mat2(injectionSwitch.y, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.2))), 0.0, 0.0)), transpose(transpose(mat4x2(mat2(injectionSwitch.y, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.2))), 0.0, 0.0)))))))) / mat2(1.0, 1.0, 1.0, 1.0))), mat2(mat2x3((mat2(injectionSwitch.y, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(0.2), mix(float(true ? 0.0 : _GLF_FUZZED(0.2)), float(_GLF_FUZZED(9.8)), bool(false))))), 0.0, 0.0))))) - mat2(0.0, 0.0, 0.0, 0.0))) * mat2(1.0))), float(mat3(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8.8) : _GLF_IDENTITY(0.0, (0.0) * 1.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))) - mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))), (false ? _GLF_FUZZED(roundEven(89.68)) : _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) - mat2(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) - 0.0) : _GLF_FUZZED(-55.42))), 0.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(2.9, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(2.9, (_GLF_IDENTITY(2.9, (2.9) * 1.0)) + 0.0), 0.0, log(1.0), 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(363.886)), float(float(mat3x2(_GLF_IDENTITY(2.9, (_GLF_IDENTITY(2.9, (2.9) * 1.0)) + 0.0), 0.0, log(1.0), 0.0, 0.0, 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, _GLF_ZERO(0.0, injectionSwitch.x) + (0.0)), 0.0), transpose(transpose(mat2(injectionSwitch.y, 0.0, 0.0, 0.0)))), _GLF_IDENTITY((mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0), (true ? (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED((isinf(975.244) ? mat2(-9.3, -988.160, 768.097, 9.8) : mat2(4214.1349, 2.9, -8.0, 2.8)))))))), bool(true))))), _GLF_IDENTITY(dot(vec2(1.0, log(1.0)), vec2(1.0, 0.0)), dot(vec2(1.0, log(1.0)), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(vec2(vec2(1.0, 0.0)))))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(determinant(mat2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)) : _GLF_FUZZED(82.55))), 0.0, 0.0, 1.0)), max(_GLF_IDENTITY(determinant(mat2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)) : _GLF_FUZZED(82.55))), 0.0, 0.0, 1.0)), min(determinant(mat2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)) : _GLF_FUZZED(82.55))), 0.0, 0.0, 1.0)), determinant(mat2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)) : _GLF_FUZZED(82.55))), 0.0, 0.0, 1.0)))), determinant(mat2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)) : _GLF_FUZZED(82.55))), 0.0, 0.0, 1.0)))), 1.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(913.755)), float(injectionSwitch.x), bool(true))), injectionSwitch.x))), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0))), abs(sin(0.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0))))))))))), bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) - mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0)), (_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(4.7) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(vec2(56.20, 8.3).x))), 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0))) * mat2(1.0))), float(mat3(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))), (mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-123.404)), bool(false))), 0.0)))), _GLF_IDENTITY((0.0), ((0.0)) + 0.0) / 1.0))) - mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))), (false ? _GLF_FUZZED(roundEven(89.68)) : _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0)), transpose(transpose(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0)))))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(2.9, float(mat3x2(2.9, 0.0, log(1.0), 0.0, 0.0, 0.0))))), float(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat4(mat2(injectionSwitch.y, 0.0, 0.0, 0.0)), (mat4(mat2(injectionSwitch.y, 0.0, 0.0, 0.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (mat2(_GLF_IDENTITY(mat4(mat2(injectionSwitch.y, 0.0, 0.0, 0.0)), (mat4(mat2(injectionSwitch.y, 0.0, 0.0, 0.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) / mat2(1.0, 1.0, 1.0, 1.0)))) - mat2(0.0, 0.0, 0.0, 0.0)))), bool(true))))), _GLF_IDENTITY(dot(vec2(1.0, log(1.0)), vec2(1.0, 0.0)), dot(vec2(1.0, log(1.0)), vec2(1.0, 0.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / cos(0.0))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), min(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), _GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), (true ? vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0) : _GLF_FUZZED(injectionSwitch))))), vec2(length(vec2(0.0, 0.0)), 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0))), abs(sin(0.0)), 1.0, 0.0)))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), (_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(mat2(injectionSwitch.y, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.2))), 0.0, 0.0), (_GLF_IDENTITY(mat2(injectionSwitch.y, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.2))), 0.0, 0.0), mat2(_GLF_IDENTITY(mat4x2(mat2(injectionSwitch.y, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.2))), 0.0, 0.0)), transpose(transpose(mat4x2(mat2(injectionSwitch.y, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.2))), 0.0, 0.0)))))))) / mat2(1.0, 1.0, 1.0, 1.0))), mat2(mat2x3((mat2(injectionSwitch.y, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(0.2), mix(float(true ? 0.0 : _GLF_FUZZED(0.2)), float(_GLF_FUZZED(9.8)), bool(false))))), 0.0, 0.0))))) - mat2(0.0, 0.0, 0.0, 0.0))) * mat2(1.0))), float(mat3(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8.8) : _GLF_IDENTITY(0.0, (0.0) * 1.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))) - mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))), (false ? _GLF_FUZZED(roundEven(89.68)) : _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) - mat2(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) - 0.0) : _GLF_FUZZED(-55.42))), 0.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(2.9, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(2.9, (_GLF_IDENTITY(2.9, (2.9) * 1.0)) + 0.0), 0.0, log(1.0), 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(363.886)), float(float(mat3x2(_GLF_IDENTITY(2.9, (_GLF_IDENTITY(2.9, (2.9) * 1.0)) + 0.0), 0.0, log(1.0), 0.0, 0.0, 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, _GLF_ZERO(0.0, injectionSwitch.x) + (0.0)), 0.0), transpose(transpose(mat2(injectionSwitch.y, 0.0, 0.0, 0.0)))), _GLF_IDENTITY((mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0), (true ? (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED((isinf(975.244) ? mat2(-9.3, -988.160, 768.097, 9.8) : mat2(4214.1349, 2.9, -8.0, 2.8)))))))), bool(true))))), _GLF_IDENTITY(dot(vec2(1.0, log(1.0)), vec2(1.0, 0.0)), dot(vec2(1.0, log(1.0)), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(vec2(vec2(1.0, 0.0)))))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(determinant(mat2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)) : _GLF_FUZZED(82.55))), 0.0, 0.0, 1.0)), max(_GLF_IDENTITY(determinant(mat2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)) : _GLF_FUZZED(82.55))), 0.0, 0.0, 1.0)), min(determinant(mat2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)) : _GLF_FUZZED(82.55))), 0.0, 0.0, 1.0)), determinant(mat2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)) : _GLF_FUZZED(82.55))), 0.0, 0.0, 1.0)))), determinant(mat2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)) : _GLF_FUZZED(82.55))), 0.0, 0.0, 1.0)))), 1.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(913.755)), float(injectionSwitch.x), bool(true))), injectionSwitch.x))), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0))), abs(sin(0.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0))))))))))), ((! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) - mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0)), (_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(4.7) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(vec2(56.20, 8.3).x))), 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0))) * mat2(1.0))), float(mat3(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))), (mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-123.404)), bool(false))), 0.0)))), _GLF_IDENTITY((0.0), ((0.0)) + 0.0) / 1.0))) - mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))), (false ? _GLF_FUZZED(roundEven(89.68)) : _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0)), transpose(transpose(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0)))))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(2.9, float(mat3x2(2.9, 0.0, log(1.0), 0.0, 0.0, 0.0))))), float(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat4(mat2(injectionSwitch.y, 0.0, 0.0, 0.0)), (mat4(mat2(injectionSwitch.y, 0.0, 0.0, 0.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (mat2(_GLF_IDENTITY(mat4(mat2(injectionSwitch.y, 0.0, 0.0, 0.0)), (mat4(mat2(injectionSwitch.y, 0.0, 0.0, 0.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) / mat2(1.0, 1.0, 1.0, 1.0)))) - mat2(0.0, 0.0, 0.0, 0.0)))), bool(true))))), _GLF_IDENTITY(dot(vec2(1.0, log(1.0)), vec2(1.0, 0.0)), dot(vec2(1.0, log(1.0)), vec2(1.0, 0.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / cos(0.0))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), min(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), _GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), (true ? vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0) : _GLF_FUZZED(injectionSwitch))))), vec2(length(vec2(0.0, 0.0)), 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0))), abs(sin(0.0)), 1.0, 0.0)))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), (_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(mat2(injectionSwitch.y, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.2))), 0.0, 0.0), (_GLF_IDENTITY(mat2(injectionSwitch.y, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.2))), 0.0, 0.0), mat2(_GLF_IDENTITY(mat4x2(mat2(injectionSwitch.y, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.2))), 0.0, 0.0)), transpose(transpose(mat4x2(mat2(injectionSwitch.y, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.2))), 0.0, 0.0)))))))) / mat2(1.0, 1.0, 1.0, 1.0))), mat2(mat2x3((mat2(injectionSwitch.y, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(0.2), mix(float(true ? 0.0 : _GLF_FUZZED(0.2)), float(_GLF_FUZZED(9.8)), bool(false))))), 0.0, 0.0))))) - mat2(0.0, 0.0, 0.0, 0.0))) * mat2(1.0))), float(mat3(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8.8) : _GLF_IDENTITY(0.0, (0.0) * 1.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))) - mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))), (false ? _GLF_FUZZED(roundEven(89.68)) : _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) - mat2(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) - 0.0) : _GLF_FUZZED(-55.42))), 0.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(2.9, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(2.9, (_GLF_IDENTITY(2.9, (2.9) * 1.0)) + 0.0), 0.0, log(1.0), 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(363.886)), float(float(mat3x2(_GLF_IDENTITY(2.9, (_GLF_IDENTITY(2.9, (2.9) * 1.0)) + 0.0), 0.0, log(1.0), 0.0, 0.0, 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, _GLF_ZERO(0.0, injectionSwitch.x) + (0.0)), 0.0), transpose(transpose(mat2(injectionSwitch.y, 0.0, 0.0, 0.0)))), _GLF_IDENTITY((mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0), (true ? (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED((isinf(975.244) ? mat2(-9.3, -988.160, 768.097, 9.8) : mat2(4214.1349, 2.9, -8.0, 2.8)))))))), bool(true))))), _GLF_IDENTITY(dot(vec2(1.0, log(1.0)), vec2(1.0, 0.0)), dot(vec2(1.0, log(1.0)), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(vec2(vec2(1.0, 0.0)))))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(determinant(mat2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)) : _GLF_FUZZED(82.55))), 0.0, 0.0, 1.0)), max(_GLF_IDENTITY(determinant(mat2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)) : _GLF_FUZZED(82.55))), 0.0, 0.0, 1.0)), min(determinant(mat2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)) : _GLF_FUZZED(82.55))), 0.0, 0.0, 1.0)), determinant(mat2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)) : _GLF_FUZZED(82.55))), 0.0, 0.0, 1.0)))), determinant(mat2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)) : _GLF_FUZZED(82.55))), 0.0, 0.0, 1.0)))), 1.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(913.755)), float(injectionSwitch.x), bool(true))), injectionSwitch.x))), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0))), abs(sin(0.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0)))))))))))) || false), false, false, true))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), true), true, false))))) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_DEAD(false)) || false)), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), _GLF_IDENTITY(false, false || (false)))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), true), true, false))))) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_DEAD(false)) || false)), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), _GLF_IDENTITY(false, false || (false)))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))), false, true, false)), true && (bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), true), true, false))))) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_DEAD(false)) || false)), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), _GLF_IDENTITY(false, false || (false)))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))), false, true, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
}
