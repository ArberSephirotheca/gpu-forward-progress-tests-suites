#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 1.0), transpose(transpose(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 1.0))))), (vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 1.0), transpose(transpose(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 1.0)))))) / vec2(1.0, 1.0))), min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8175.4951, 11.65))))) * vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(-2.1, float(vec4(_GLF_IDENTITY(-2.1, max(-2.1, _GLF_IDENTITY(-2.1, max(-2.1, -2.1)))), 1.0, 1.0, 0.0)))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, sqrt(0.0), 0.0, 0.0, 0.0, 0.0)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), true && (_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))))), false, true, true)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), (true && (_GLF_IDENTITY(false, (false) || false))) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), (_GLF_IDENTITY(false, bool(bool(false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), (_GLF_IDENTITY(false, bool(bool(false)))) || false)) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-54.57)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), (! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))) || false))))), true, false, false)))) && true), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(max(884.556, -5.1)) : injectionSwitch.x)) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_IDENTITY(true, true && (true)), false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, length(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch)).y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 0.0, 1.0), (vec4(injectionSwitch.x, 0.0, 0.0, 1.0)) / vec4(1.0, 1.0, 1.0, 1.0)))) > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, true, true)))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))) || false, ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))) || false))))) && true)), bvec2(bvec4(bvec2(_GLF_DEAD(false), _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bool(bool(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))), (injectionSwitch.x > injectionSwitch.y))), true, false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y))) / _GLF_ONE(1.0, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), vec2(vec4(vec2(injectionSwitch), 0.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))))), vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)) : _GLF_FUZZED(909.968))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - log(1.0)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (gl_WorkGroupSize.x))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (gl_WorkGroupSize.x))), (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (gl_WorkGroupSize.x)))) - 0u)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false)) && true)), ! (! (! (_GLF_IDENTITY(false, bool(bool(false))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false)) && true)), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(mix(float(_GLF_FUZZED(-4.1)), float(injectionSwitch[1]), bool(true)), float(_GLF_IDENTITY(mat4(mix(float(_GLF_FUZZED(-4.1)), float(injectionSwitch[1]), bool(true)), 0.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, tan(0.0), 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, tan(0.0), _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-851.479)), float(0.0), bool(true))), 0.0, 0.0), vec4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5.5)), bool(false)))), (_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5.5)), bool(false)))), max(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5.5)), bool(false)))), float(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(-5.5)), bool(false))))))) / 1.0)))), vec4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(mat2x3(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y), 1.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(28.30) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0))))), transpose(_GLF_IDENTITY(transpose(mat4(mix(float(_GLF_FUZZED(-4.1)), float(injectionSwitch[1]), bool(true)), 0.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, tan(0.0), 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, tan(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(mat2x3(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0)))))), (transpose(mat4(mix(float(_GLF_FUZZED(-4.1)), float(injectionSwitch[1]), bool(true)), 0.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, tan(0.0), 0.0, 1.0, round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (vec4(1.0, 1.0, 1.0, 1.0)) * abs(sqrt(vec4(1.0, 1.0, 1.0, 1.0))))))), 0.0, 1.0, 1.0, tan(0.0), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(mat2x3(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0))))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * sqrt(1.0)) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * sqrt(1.0)) > injectionSwitch.y), true), bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * sqrt(1.0)) > injectionSwitch.y), true), false, true))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * sqrt(1.0)) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * sqrt(1.0)) > injectionSwitch.y), true), bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * sqrt(1.0)) > injectionSwitch.y), true), false, true))))), false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, true, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true))), (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), false, false, true)))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))))))), false, false, true)), (bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))))))), false, false, true))) || false))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))) || false), false))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, true, false, true)))) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(-75.79, 677.213).y), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(vec2((injectionSwitch)[0], 0.0))), _GLF_FUZZED(-7.1)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-350.378)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(bvec3(bvec3(! (false), false, false))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0)), 1.0, sin(abs(0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, abs(0.0)), mat3(1.0) * (mat4x3(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0)), 1.0, sin(abs(0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, abs(0.0))))))).x)) > injectionSwitch.y)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3459.0770)), float(injectionSwitch.y), bool(true)))))), true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) >> (0u | 0u), (_GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) >> (0u | 0u), ((((subgroup_local_id + 1) % subgroup_size)) >> (0u | 0u)) << 0u)) | ((((subgroup_local_id + 1) % subgroup_size)) >> (0u | 0u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 atomicStore(buf[virtual_gid], uint(1), 4, _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (64) << 0))), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-433.073)), bool(false))))), _GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec2(3.2, -4007.2476).g)), bool(false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true, true, false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(((9924.1049 / -2.0) - 609.912))), vec2(_GLF_FUZZED(40.13), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false)))), true))))))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), (bool(bvec4(_GLF_DEAD(false), false, true, true))) || false)))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | 0u) + 1 < _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), i, -9541)), (_GLF_IDENTITY(false ? _GLF_FUZZED(i) : _GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), i, -9541)), (_GLF_FUZZED(bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), i, -9541))) | 0), ~ (_GLF_IDENTITY(~ (false ? _GLF_FUZZED(i) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(bitfieldExtract((_GLF_IDENTITY(-18121, min(_GLF_IDENTITY(-18121, 0 ^ (-18121)), _GLF_IDENTITY(-18121, (_GLF_IDENTITY(-18121, max(-18121, _GLF_IDENTITY(-18121, (_GLF_IDENTITY(-18121, (true ? -18121 : _GLF_FUZZED(-49964)))) / 1)))) << (0 | 0)))) % i), i, -9541), int(ivec2(_GLF_IDENTITY(bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), i, -9541), (true ? bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), i, -9541) : _GLF_FUZZED(i))), 1)))), (_GLF_FUZZED(bitfieldExtract((_GLF_IDENTITY(_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (_GLF_IDENTITY(0, int(ivec2(0, 1))) | 0)))) % i, (_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (_GLF_IDENTITY(0, int(ivec2(0, 1))) | 0)))) % i) >> _GLF_IDENTITY(0, 0 | (0)))), i, -9541))) | 0)), (true ? _GLF_IDENTITY(~ (false ? _GLF_FUZZED(i) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(bitfieldExtract((_GLF_IDENTITY(-18121, min(_GLF_IDENTITY(-18121, 0 ^ (-18121)), _GLF_IDENTITY(-18121, (_GLF_IDENTITY(-18121, max(-18121, _GLF_IDENTITY(-18121, (_GLF_IDENTITY(-18121, (true ? -18121 : _GLF_FUZZED(-49964)))) / 1)))) << (0 | 0)))) % i), i, -9541), int(ivec2(_GLF_IDENTITY(bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), i, -9541), (true ? bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), i, -9541) : _GLF_FUZZED(i))), 1)))), (_GLF_FUZZED(bitfieldExtract((_GLF_IDENTITY(_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (_GLF_IDENTITY(0, int(ivec2(0, 1))) | 0)))) % i, (_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (_GLF_IDENTITY(0, int(ivec2(0, 1))) | 0)))) % i) >> 0)), i, -9541))) | 0)), clamp(_GLF_IDENTITY(~ (false ? _GLF_FUZZED(i) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(bitfieldExtract((_GLF_IDENTITY(-18121, min(_GLF_IDENTITY(-18121, 0 ^ (-18121)), _GLF_IDENTITY(-18121, (_GLF_IDENTITY(-18121, max(-18121, _GLF_IDENTITY(-18121, (_GLF_IDENTITY(-18121, (true ? -18121 : _GLF_FUZZED(-49964)))) / 1)))) << (0 | 0)))) % i), i, -9541), int(ivec2(_GLF_IDENTITY(bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), i, -9541), (true ? bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), i, -9541) : _GLF_FUZZED(i))), 1)))), (_GLF_FUZZED(bitfieldExtract((_GLF_IDENTITY(_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (_GLF_IDENTITY(0, int(ivec2(0, 1))) | 0)))) % i, (_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (_GLF_IDENTITY(0, int(ivec2(0, 1))) | 0)))) % i) >> 0)), i, -9541))) | 0)), 0 ^ (~ (false ? _GLF_FUZZED(i) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(bitfieldExtract((_GLF_IDENTITY(-18121, min(_GLF_IDENTITY(-18121, 0 ^ (-18121)), _GLF_IDENTITY(-18121, (_GLF_IDENTITY(-18121, max(-18121, _GLF_IDENTITY(-18121, (_GLF_IDENTITY(-18121, (true ? -18121 : _GLF_FUZZED(-49964)))) / 1)))) << (0 | 0)))) % i), i, -9541), int(ivec2(_GLF_IDENTITY(bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), i, -9541), (true ? bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), i, -9541) : _GLF_FUZZED(i))), 1)))), (_GLF_FUZZED(bitfieldExtract((_GLF_IDENTITY(_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (_GLF_IDENTITY(0, int(ivec2(0, 1))) | 0)))) % i, (_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (_GLF_IDENTITY(0, int(ivec2(0, 1))) | 0)))) % i) >> 0)), i, -9541))) | 0)))), ~ (false ? _GLF_FUZZED(i) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(bitfieldExtract((_GLF_IDENTITY(-18121, min(_GLF_IDENTITY(-18121, 0 ^ (-18121)), _GLF_IDENTITY(_GLF_IDENTITY(-18121, (_GLF_IDENTITY(-18121, max(-18121, _GLF_IDENTITY(-18121, (_GLF_IDENTITY(-18121, (true ? -18121 : _GLF_FUZZED(-49964)))) / 1)))) << (0 | 0)), ~ (~ (_GLF_IDENTITY(-18121, (_GLF_IDENTITY(-18121, max(-18121, _GLF_IDENTITY(-18121, (_GLF_IDENTITY(-18121, (true ? -18121 : _GLF_FUZZED(-49964)))) / 1)))) << (0 | 0))))))) % i), i, -9541), int(ivec2(_GLF_IDENTITY(bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), i, -9541), (true ? bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), i, -9541) : _GLF_FUZZED(i))), 1)))), (_GLF_FUZZED(bitfieldExtract((_GLF_IDENTITY(_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (_GLF_IDENTITY(0, int(ivec2(0, 1))) | 0)))) % i, (_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (_GLF_IDENTITY(0, int(ivec2(0, 1))) | 0)))) % i) >> 0)), i, -9541))) | 0)), ~ (false ? _GLF_FUZZED(i) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(bitfieldExtract((_GLF_IDENTITY(-18121, min(_GLF_IDENTITY(-18121, 0 ^ (-18121)), _GLF_IDENTITY(-18121, (_GLF_IDENTITY(-18121, max(-18121, _GLF_IDENTITY(-18121, (_GLF_IDENTITY(-18121, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), bool(bvec2(bool(_GLF_IDENTITY(true, ! (! (true)))), false))))) ? -18121 : _GLF_FUZZED(-49964)))) / 1)))) << (0 | 0)))) % i), i, -9541), int(ivec2(_GLF_IDENTITY(bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(_GLF_IDENTITY(-18121, int(_GLF_IDENTITY(ivec4(-18121, 1, 1, 0), (false ? _GLF_FUZZED(ivec4(-65476, -57563, -89296, 26515)) : _GLF_IDENTITY(ivec4(-18121, 1, 1, 0), (ivec4(-18121, 1, 1, 0)) | (ivec4(-18121, 1, 1, 0))))))), (-18121) << (0 | 0)))) % i), i, -9541), (true ? bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), i, -9541) : _GLF_FUZZED(i))), 1)))), (_GLF_FUZZED(bitfieldExtract((_GLF_IDENTITY(_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (_GLF_IDENTITY(0, int(ivec2(0, 1))) | 0)))) % i, (_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (_GLF_IDENTITY(0, int(ivec2(0, 1))) | 0)))) % i) >> 0)), i, -9541))) | 0)))) : _GLF_FUZZED(35260))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), i, -9541)), (false ? _GLF_FUZZED(i) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(_GLF_IDENTITY(-18121, (-18121) << (0 | 0)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(-18121, (-18121) << (0 | 0))), 0 ^ (_GLF_IDENTITY(int(_GLF_IDENTITY(-18121, (-18121) << (0 | 0))), (int(_GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) / 1))))))) % i), i, -9541), min(bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-18121, max(_GLF_IDENTITY(-18121, (-18121) | (_GLF_IDENTITY(-18121, clamp(-18121, -18121, -18121)))), _GLF_IDENTITY(-18121, ~ (~ (-18121))))), (-18121) << (0 | 0)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(-18121, (-18121) << (0 | 0))), 0 ^ (_GLF_IDENTITY(int(_GLF_IDENTITY(-18121, (-18121) << (0 | 0))), (int(_GLF_IDENTITY(-18121, (-18121) << (_GLF_IDENTITY(0, min(0, 0)) | 0)))) / 1))))))) % _GLF_IDENTITY(i, (i) | (i))), i, -9541), bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-18121, (-18121) << (0 | 0)), 1 * (_GLF_IDENTITY(-18121, (-18121) << (0 | 0)))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(-18121, (-18121) << (0 | 0))), 0 ^ (_GLF_IDENTITY(int(_GLF_IDENTITY(-18121, (-18121) << (0 | 0))), (int(_GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) / 1))))))) % _GLF_IDENTITY(i, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(i) : i))), i, -9541)))), (_GLF_FUZZED(bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), i, -9541))) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), i, -9541)), max(_GLF_FUZZED(bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), i, -9541)), _GLF_FUZZED(bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (_GLF_IDENTITY(0 | 0, max(_GLF_IDENTITY(0 | 0, ~ (~ (0 | 0))), _GLF_IDENTITY(0 | 0, 0 | (0 | 0)))))))) % i), i, -9541)))), (false ? _GLF_FUZZED(i) : _GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))), max(_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))), _GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))))) % i), clamp((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), (_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), (_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % _GLF_IDENTITY(i, (i) | (i))))), i, -9541)), (_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, min(0, 0)), 0))) | 0) | 0)))) % i), i, -9541)), 0 | (_GLF_FUZZED(bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, min(0, 0)), 0))) | 0) | 0)))) % i), i, -9541))))) | 0)))) ^ 0)) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % _GLF_IDENTITY(i, 0 + (i))), i, -9541)), (false ? _GLF_FUZZED(i) : _GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), i, -9541)), (_GLF_FUZZED(bitfieldExtract(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), ((_GLF_IDENTITY(_GLF_IDENTITY(-18121, (-18121) - 0), min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i)) >> 0), int(int(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), ((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i)) >> 0)))), _GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), ((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (_GLF_IDENTITY(0 | 0, clamp(_GLF_IDENTITY(0 | 0, (true ? 0 | 0 : _GLF_FUZZED(84180))), 0 | 0, 0 | 0)))))) % i)) * ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), i, -9541))) | 0)))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), i, -9541)), (false ? _GLF_FUZZED(i) : _GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), i, -9541)), (_GLF_FUZZED(bitfieldExtract(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(-18121, _GLF_IDENTITY(_GLF_IDENTITY(min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0))), (_GLF_IDENTITY(min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0))), 0 | (_GLF_IDENTITY(min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0))), 0 ^ (min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))))))) | (0 >> _GLF_IDENTITY(int(8), int(8)))), clamp(_GLF_IDENTITY(min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0))), (_GLF_IDENTITY(min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0))), 0 | (_GLF_IDENTITY(min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0))), 0 ^ (min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))))))) | (0 >> _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(_GLF_IDENTITY(min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0))), (_GLF_IDENTITY(min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0))), 0 | (_GLF_IDENTITY(min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0))), 0 ^ (min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))))))) | (0 >> _GLF_IDENTITY(int(8), int(8)))), (_GLF_IDENTITY(min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0))), (_GLF_IDENTITY(min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0))), 0 | (_GLF_IDENTITY(min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0))), 0 ^ (min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))))))) | (0 >> _GLF_IDENTITY(int(8), int(8))))) ^ 0), _GLF_IDENTITY(min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0))), (_GLF_IDENTITY(min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0))), 0 | (_GLF_IDENTITY(min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0))), 0 ^ (min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))))))) | (0 >> _GLF_IDENTITY(int(8), int(8))))))) % i), ((_GLF_IDENTITY(_GLF_IDENTITY(-18121, (-18121) - 0), min(_GLF_IDENTITY(-18121, (_GLF_IDENTITY(-18121, clamp(-18121, -18121, -18121))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(-18121, max(_GLF_IDENTITY(-18121, (-18121) << 0), -18121)), (-18121) << (0 | 0)))) % i)) >> 0), int(int(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), ((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i)) >> 0)))), _GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), ((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i)) * ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), i, -9541))) | 0)))), max((_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), i, -9541)), (false ? _GLF_FUZZED(i) : _GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), i, -9541)), (_GLF_FUZZED(bitfieldExtract(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), ((_GLF_IDENTITY(_GLF_IDENTITY(-18121, (-18121) - 0), min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | _GLF_IDENTITY(0, int(ivec4(0, (23880 & 0), 0, 0))))))) % i)) >> 0), int(int(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % _GLF_IDENTITY(i, (_GLF_IDENTITY(i, max(_GLF_IDENTITY(i, (i) | (i)), i))) - (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2))))))), ((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i)) >> 0)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i, (_GLF_IDENTITY(_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i, (_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i) - 0)) - 0)), ((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i)) * ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), i, -9541))) | 0)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), i, -9541)), (false ? _GLF_FUZZED(i) : _GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), i, -9541)), (_GLF_FUZZED(bitfieldExtract(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, _GLF_IDENTITY((-18121) << (0 | 0), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))) * ((-18121) << (0 | 0)))))) % i), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), ((_GLF_IDENTITY(_GLF_IDENTITY(-18121, (_GLF_IDENTITY(-18121, (true ? -18121 : _GLF_FUZZED(bitCount(workgroup_id))))) - 0), min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i)) >> 0), int(int(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), ((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i)) >> 0)))), _GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << _GLF_IDENTITY((0 | 0), (_GLF_IDENTITY((0 | 0), ((0 | 0)) | (_GLF_IDENTITY((0 | 0), ((0 | 0)) - 0)))) << 0)))) % i), ((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i)) * ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), i, -9541))) | 0)))), ((_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), i, -9541)), (false ? _GLF_FUZZED(i) : _GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), i, -9541)), (_GLF_FUZZED(bitfieldExtract(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), ((_GLF_IDENTITY(_GLF_IDENTITY(-18121, (-18121) - 0), min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i)) >> 0), int(int(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), ((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i)) >> 0)))), _GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), _GLF_IDENTITY(((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % _GLF_IDENTITY(i, min(_GLF_IDENTITY(i, 0 ^ (i)), _GLF_IDENTITY(i, clamp(i, i, _GLF_IDENTITY(i, max(i, i)))))))), (((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % _GLF_IDENTITY(i, min(_GLF_IDENTITY(i, 0 ^ (i)), _GLF_IDENTITY(i, clamp(i, i, _GLF_IDENTITY(i, max(i, i))))))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) * ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), i, -9541))) | 0))))) ^ 0))), 0, 0, 1), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), i, -9541)), (false ? _GLF_FUZZED(i) : _GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), i, -9541)), (_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), ((_GLF_IDENTITY(_GLF_IDENTITY(-18121, _GLF_IDENTITY((-18121), ~ (~ ((-18121)))) - 0), min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i)) >> 0), int(int(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (_GLF_IDENTITY(0 | 0, clamp(_GLF_IDENTITY(0 | 0, (0 | 0) << (0 >> _GLF_IDENTITY(int(4), int(4)))), 0 | 0, _GLF_IDENTITY(0 | 0, (0 | 0) | (0 | 0)))))))) % i), ((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i)) >> 0)))), _GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), ((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i)) * ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), i, -9541)), (false ? _GLF_FUZZED(ivec4(-32266, 70800, 50000, 97567)[2]) : _GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), ((_GLF_IDENTITY(_GLF_IDENTITY(-18121, _GLF_IDENTITY((-18121), ~ (~ ((-18121)))) - 0), min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i)) >> 0), int(int(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (_GLF_IDENTITY(0 | 0, clamp(_GLF_IDENTITY(0 | 0, (0 | 0) << (0 >> _GLF_IDENTITY(int(4), int(4)))), 0 | 0, _GLF_IDENTITY(0 | 0, (0 | 0) | (0 | 0)))))))) % i), ((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i)) >> 0)))), _GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), ((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i)) * ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), i, -9541)), (true ? _GLF_FUZZED(bitfieldExtract(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), ((_GLF_IDENTITY(_GLF_IDENTITY(-18121, _GLF_IDENTITY((-18121), ~ (~ ((-18121)))) - 0), min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i)) >> 0), int(int(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (_GLF_IDENTITY(0 | 0, clamp(_GLF_IDENTITY(0 | 0, (0 | 0) << (0 >> _GLF_IDENTITY(int(4), int(4)))), 0 | 0, _GLF_IDENTITY(0 | 0, (0 | 0) | (0 | 0)))))))) % i), ((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i)) >> 0)))), _GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) | 0) : _GLF_FUZZED(i))) | 0)))) % i), ((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i)) * ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), i, -9541)) : _GLF_FUZZED(i)))))) | 0)))), max((_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(_GLF_IDENTITY(-18121, (-18121) << (0 | 0)), 0 + (_GLF_IDENTITY(-18121, (-18121) << (0 | 0)))))) % i), i, -9541)), (false ? _GLF_FUZZED(i) : _GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), i, -9541)), _GLF_IDENTITY((_GLF_FUZZED(bitfieldExtract(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), ((_GLF_IDENTITY(_GLF_IDENTITY(-18121, (-18121) - 0), min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i)) >> 0), int(int(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), ((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i)) >> 0)))), _GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), ((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i)) * ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), i, -9541))) | 0, min((_GLF_FUZZED(bitfieldExtract(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), ((_GLF_IDENTITY(_GLF_IDENTITY(-18121, (-18121) - 0), min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i)) >> 0), int(int(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), ((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i)) >> 0)))), _GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), ((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i)) * ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), i, -9541))) | 0, _GLF_IDENTITY((_GLF_FUZZED(bitfieldExtract(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), ((_GLF_IDENTITY(_GLF_IDENTITY(-18121, (-18121) - 0), min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i)) >> 0), int(int(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), ((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i)) >> 0)))), _GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), ((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i)) * ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), i, -9541))) | 0, ((_GLF_FUZZED(bitfieldExtract(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), ((_GLF_IDENTITY(_GLF_IDENTITY(-18121, (-18121) - 0), min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i)) >> 0), int(int(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), ((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i)) >> 0)))), _GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), ((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i)) * ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), i, -9541))) | 0) * 1))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), i, -9541)), (false ? _GLF_FUZZED(i) : _GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), i, -9541)), (_GLF_FUZZED(bitfieldExtract(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), ((_GLF_IDENTITY(_GLF_IDENTITY(-18121, (-18121) - 0), min(-18121, _GLF_IDENTITY(-18121, (_GLF_IDENTITY(-18121, max(_GLF_IDENTITY(-18121, 0 | (-18121)), -18121))) << (0 | 0)))) % i)) >> 0), int(int(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), ((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i)) >> 0)))), _GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, _GLF_IDENTITY((-18121), ((-18121)) / 1) << (0 | 0)))) % i), ((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i)) * ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), i, -9541))) | 0)))), ((_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), i, -9541)), (false ? _GLF_FUZZED(i) : _GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract((_GLF_IDENTITY(-18121, _GLF_IDENTITY(min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0))), max(min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0))), min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))))) % i), i, -9541)), (_GLF_FUZZED(bitfieldExtract(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-18121, (-18121) - 0), min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), ((_GLF_IDENTITY(_GLF_IDENTITY(-18121, (-18121) - 0), min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i)) * 1)) >> 0), int(int(_GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), ((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i)) >> 0)))), _GLF_IDENTITY((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i), ((_GLF_IDENTITY(-18121, min(-18121, _GLF_IDENTITY(-18121, (-18121) << (0 | 0)))) % i)) * ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), i, -9541))) | 0))))) ^ 0))), 0, 0, 1)))))) : _GLF_IDENTITY(2, (2) / 1)))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))) && (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(5986.9819), _GLF_FUZZED(-7.5)), max(vec2(_GLF_FUZZED(5986.9819), _GLF_FUZZED(-7.5)), vec2(_GLF_IDENTITY(_GLF_FUZZED(5986.9819), max(_GLF_FUZZED(5986.9819), _GLF_IDENTITY(_GLF_FUZZED(5986.9819), clamp(_GLF_FUZZED(5986.9819), _GLF_FUZZED(5986.9819), _GLF_FUZZED(5986.9819))))), _GLF_FUZZED(-7.5)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(_GLF_IDENTITY(vec4((injectionSwitch)[0], log(cos(0.0)), 0.0, 0.0), mat4(1.0) * (vec4((injectionSwitch)[0], log(cos(0.0)), 0.0, 0.0)))), (float(_GLF_IDENTITY(vec4((injectionSwitch)[0], log(cos(0.0)), 0.0, 0.0), mat4(1.0) * (vec4((injectionSwitch)[0], log(cos(0.0)), 0.0, 0.0))))) - 0.0)), (injectionSwitch)[1]), bvec2(true, true))).x, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(5712.3737) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(5986.9819), _GLF_FUZZED(-7.5)), max(vec2(_GLF_FUZZED(5986.9819), _GLF_FUZZED(-7.5)), vec2(_GLF_IDENTITY(_GLF_FUZZED(5986.9819), max(_GLF_FUZZED(5986.9819), _GLF_IDENTITY(_GLF_FUZZED(5986.9819), 1.0 * (_GLF_FUZZED(5986.9819))))), _GLF_FUZZED(-7.5)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, (false ? _GLF_FUZZED(4353.1980) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(5986.9819), _GLF_FUZZED(-7.5)), max(vec2(_GLF_FUZZED(5986.9819), _GLF_FUZZED(-7.5)), vec2(_GLF_IDENTITY(_GLF_FUZZED(5986.9819), max(_GLF_FUZZED(5986.9819), _GLF_IDENTITY(_GLF_FUZZED(5986.9819), 1.0 * (_GLF_FUZZED(5986.9819))))), _GLF_FUZZED(-7.5)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(5986.9819), _GLF_FUZZED(-7.5)), max(vec2(_GLF_FUZZED(5986.9819), _GLF_FUZZED(-7.5)), vec2(_GLF_IDENTITY(_GLF_FUZZED(5986.9819), max(_GLF_FUZZED(5986.9819), _GLF_IDENTITY(_GLF_FUZZED(5986.9819), 1.0 * (_GLF_FUZZED(5986.9819))))), _GLF_FUZZED(-7.5)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x)))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7.8)), bool(false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.6)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(30491) : 1)))))]), vec2(_GLF_FUZZED(-1.5), _GLF_FUZZED(-313.747)), bvec2(false, false))).x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))), ! (! (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))))))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2((! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))), false, true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(7.0), 1.0 * (_GLF_FUZZED(7.0)))), bool(_GLF_IDENTITY(false, false || (false))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2470.5332)), bool(_GLF_IDENTITY(false, bool(bool(false)))))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))))), false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 1.0)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 1.0)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))) && true), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 1.0)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))) && true), false, true))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 1.0)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))) && true), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 1.0)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))) && true), false, true)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), true && (false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) / 1.0)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) && _GLF_IDENTITY(true, true && (true)))))) && true)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, min(injectionSwitch.y, injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   barrier();
  }
}
