#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 vec2 _f0;
 uint next_virtual_gid;
} ;

struct _GLF_struct_1 {
 vec3 _f0;
 _GLF_struct_0 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))))), false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))) || false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(402.281)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, exp(0.0))))), bool(true))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), mix(vec2((clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), 1.0))))), max(injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, exp(0.0), 1.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4x2(8968.9330, 60.94, 134.889, -8940.9279, -6.8, -2.2, -1137.6184, -4731.6719)) : _GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, exp(0.0), 1.0, 0.0, 0.0, 0.0), mat2(1.0) * (mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, exp(0.0), 1.0, 0.0, 0.0, 0.0)))))))))[0], (clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-10.42), _GLF_FUZZED(((1019.6032 / -918.224) * 4348.1647))), (vec2(_GLF_FUZZED(-10.42), _GLF_FUZZED(((1019.6032 / -918.224) * 4348.1647)))) - vec2(0.0, 0.0)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))[1])).y)))))).y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), bool(bvec4(! ((false) || false), true, false, false))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || false))))))))), false, _GLF_IDENTITY(false, ! (! (false))), true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), ! (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))) || false)))))))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(~ (~ (workgroup_size)), min(~ (~ (workgroup_size)), ~ (~ (workgroup_size)))))))) * 1u) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / _GLF_IDENTITY(cos(vec2(0.0, 0.0)), tan(vec2(0.0, 0.0)) + (cos(vec2(0.0, 0.0))))), vec2(mat2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / cos(vec2(0.0, 0.0))), sqrt(0.0), tan(0.0)))).x > injectionSwitch.y)), true, true)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(vec3(1.0), _GLF_struct_0(vec2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(atomicXor(subgroup_size, 190002u)) : 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y))))) * _GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_size)), 1u * (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(atomicXor(subgroup_size, 190002u)) : 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y))))) * _GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_size)))) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) | 0))))) % subgroup_size, 0u | (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) | 0))))) % subgroup_size, 0u | ((subgroup_local_id + _GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) | 0))))) % subgroup_size)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) | 0))))) % subgroup_size, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) | ((subgroup_local_id + _GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) | 0))))) % subgroup_size)))), clamp(~ (~ (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) | _GLF_IDENTITY(0, (0) * 1)))))) % subgroup_size, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u + (4u))), uint(4u))) | ((subgroup_local_id + _GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) | 0)), (_GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) | 0), max(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) | 0), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) | 0))))) + 0)))) % subgroup_size)))), ~ (~ (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), int(ivec2(~ (4), 0)))))), _GLF_IDENTITY(int(4), _GLF_IDENTITY((_GLF_IDENTITY(int(4), ~ (~ (int(4))))), (_GLF_IDENTITY((_GLF_IDENTITY(int(4), ~ (~ (int(4))))), 0 | ((_GLF_IDENTITY(int(4), ~ (~ (int(4)))))))) >> 0) | 0))))) % subgroup_size, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) | 0))))) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) | 0))))) % subgroup_size) * 1u))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) | 0))))) % subgroup_size, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) | _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) | _GLF_IDENTITY(0, 0 ^ (0)))))), uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) | 0)))), 0u, ((1u ^ 1u) | 0u))))) % subgroup_size), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (_GLF_IDENTITY(~ (int(4)), (~ (int(4))) << 0)))) | 0)))), uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, min(1, 1))))) >> (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) | 0)))), 0u, ((1u ^ 1u) | 0u))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(_GLF_IDENTITY(4, (1 | 1) * (4))), ~ (~ (int(4))))) | 0)))), uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) | 0)))), 0u, ((1u ^ 1u) | 0u))))) % subgroup_size)) - 0u))))))), (~ (~ (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) | 0))))) % subgroup_size, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) | _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) | _GLF_IDENTITY(0, 0 ^ (0)))))), uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) | 0)))), 0u, ((1u ^ 1u) | 0u))))) % subgroup_size), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (_GLF_IDENTITY(~ (int(4)), (~ (int(4))) << 0)))) | 0)))), uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, min(1, 1))))) >> (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) | 0)))), 0u, ((1u ^ 1u) | 0u))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(_GLF_IDENTITY(4, (1 | 1) * (4))), ~ (~ (int(4))))) | 0)))), uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) | 0)))), 0u, ((1u ^ 1u) | 0u))))) % subgroup_size)) - 0u)))))))) >> 0u)))), uint(uint(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) | 0))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), ~ (~ (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(_GLF_IDENTITY(4, int(ivec2(4, 0)))))))) | 0))))) % subgroup_size, (0u >> _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uvec2(4u, (0u ^ 0u)), (uvec2(4u, (0u ^ 0u))) | (uvec2(4u, (0u ^ 0u))))))))) | ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) - 0) >> (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), ~ (~ (int(4)))), _GLF_IDENTITY((_GLF_IDENTITY(int(4), ~ (~ _GLF_IDENTITY((int(4)), 0 | ((int(4))))))) << 0, int(_GLF_ONE(1.0, injectionSwitch.y)) * ((_GLF_IDENTITY(int(4), ~ (~ _GLF_IDENTITY((int(4)), 0 | _GLF_IDENTITY(((int(4))), (((int(4)))) >> 0))))) << 0)))) | 0))))) % subgroup_size)))))))))));
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))), (bool(bvec3(false, false, _GLF_IDENTITY(false, true && (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(-0.2) : injectionSwitch.x), ((false ? _GLF_FUZZED(-0.2) : injectionSwitch.x)) - 0.0)) > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) || false)) || false), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) || false)) || false)))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch))) * vec2(1.0, 1.0)).y, mix(float(_GLF_FUZZED(816.282)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch))) * vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-718.247))), 1.0)).y, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch))) * vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-718.247))), 1.0)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch))) * vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-718.247))), 1.0)).y)), max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch))) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch))) * vec2(1.0, 1.0)).y))), bool(_GLF_IDENTITY(true, (true) && true))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (! (! (_GLF_DEAD(false)))))))
    return;
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false))))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))), true), true)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec4(bvec3(false, false, true), false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(_GLF_struct_replacement_1._f1.next_virtual_gid, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : _GLF_struct_replacement_1._f1.next_virtual_gid))], uint(2), 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_struct_replacement_1._f1.next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, 0 | (_GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, min(_GLF_IDENTITY((2) << 0, clamp((2) << 0, (2) << 0, (2) << 0)), (2) << 0))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, clamp(2, 2, 2)), 2)), 2, 2), min(_GLF_IDENTITY(clamp(2, 2, 2), int(int(clamp(2, 2, 2)))), clamp(2, 2, 2))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (_GLF_IDENTITY(2, clamp(2, 2, 2))) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), min(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2))))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))), 2)))) >> 0u, max(_GLF_IDENTITY((uint(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, (2) >> 0), 2)))), (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(clamp(2, 2, 2), max(clamp(2, 2, 2), _GLF_IDENTITY(clamp(2, 2, 2), 0 + (clamp(2, 2, 2)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), max(_GLF_IDENTITY(2, clamp(2, 2, 2)), _GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), 0 + (_GLF_IDENTITY(2, clamp(2, 2, 2))))) << 0))))))))) | _GLF_IDENTITY((_GLF_IDENTITY(2, clamp(2, 2, 2))), _GLF_IDENTITY(int(_GLF_IDENTITY(int((_GLF_IDENTITY(2, clamp(2, 2, 2)))), (int((_GLF_IDENTITY(2, clamp(2, 2, 2))))) | 0)), ~ (~ (int(_GLF_IDENTITY(int((_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, max(2, 2)))))), (int((_GLF_IDENTITY(2, clamp(2, 2, 2))))) | 0))))))), 2)))) >> 0u, clamp((uint(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(false ? _GLF_FUZZED(1669) : 2, ~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(1669) : 2, clamp(false ? _GLF_FUZZED(1669) : 2, _GLF_IDENTITY(false ? _GLF_FUZZED(1669) : 2, int(ivec2(false ? _GLF_FUZZED(1669) : 2, 0))), false ? _GLF_FUZZED(1669) : 2)))))))) ^ (-92331 & 0)), _GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(72582))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) / 1), clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, (2) << 0), _GLF_IDENTITY(2, (2) * 1))))), 2)))) >> 0u, _GLF_IDENTITY((uint(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), min(_GLF_IDENTITY(2, clamp(2, 2, 2)), _GLF_IDENTITY(2, clamp(2, 2, 2)))))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))), 2)))) >> 0u, ((uint(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, max(2, 2)), clamp(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 ^ (2))) | (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-81395))))), 2, 2)), (_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, _GLF_IDENTITY(clamp(2, 2, 2), (clamp(2, 2, _GLF_IDENTITY(2, (0 & -49455) | (2)))) * 1))), max(~ (_GLF_IDENTITY(2, _GLF_IDENTITY(clamp(2, 2, 2), 1 * (clamp(2, 2, 2))))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))), 2)))) >> 0u) | ((uint(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (2) + 0)))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2))))) ^ 0), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (2) + 0)))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2))))) ^ 0), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2))))))), (1 ^ 0)), ivec2(0, 0) | (ivec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (2) + 0)))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2))))) ^ 0), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2))))))), (1 ^ 0))))), clamp(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (2) + 0)))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2))))) ^ 0), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2))))))), (1 ^ 0)), ivec2(0, 0) | (ivec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (2) + 0)))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2))))) ^ 0), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2))))))), (1 ^ 0))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (2) + 0)))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2))))) ^ 0), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2))))))), (1 ^ 0)), ivec2(0, 0) | (ivec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (2) + 0)))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2))))) ^ 0), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2))))))), (1 ^ 0))))), 0 + (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (2) + 0)))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2))))) ^ 0), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2))))))), (1 ^ 0)), ivec2(0, 0) | (ivec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (2) + 0)))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2))))) ^ 0), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2))))))), (1 ^ 0))))))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (2) + 0)))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2))))) ^ 0), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2))))))), (1 ^ 0)), ivec2(0, 0) | (ivec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (2) + 0)))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2))))) ^ 0), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2))))))), (1 ^ 0))))))))), 2)))) >> 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, ~ (~ (2))), _GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))), 2))), (true ? uint(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, ~ (~ (2))), _GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))), 2))) : _GLF_FUZZED(workgroup_size)))) >> 0u)), (uint(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), clamp(2, 2, 2))), max(~ (_GLF_IDENTITY(2, clamp(2, 2, 2))), ~ (_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, int(ivec3(2, 1, 1))), 2, 2)), _GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, min(2, 2)))), 2)))))))) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))), 2)))) >> _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, uint(uint(0u)))))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (false)), false, true)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))), false, false, true))) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, true, true))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   barrier();
  }
}
