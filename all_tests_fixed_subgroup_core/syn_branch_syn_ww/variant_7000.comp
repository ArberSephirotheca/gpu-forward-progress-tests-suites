#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base;
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_size;
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x)) ^ 0); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), false, false))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             do
              {
               _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x = _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), min(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))), (_GLF_FUZZED(subgroup_id)) ^ (0u ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))), min(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(true ? subgroup_id : _GLF_FUZZED(subgroup_id), (true ? subgroup_id : _GLF_FUZZED(subgroup_id)) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (true ? subgroup_id : _GLF_FUZZED(subgroup_id))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(94812u) : _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))), min(subgroup_id, subgroup_id)))), (true ? GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x = subgroup_id : _GLF_FUZZED(max(_GLF_IDENTITY(67019u, (_GLF_IDENTITY(67019u, clamp(_GLF_IDENTITY(67019u, uint(uint(67019u))), 67019u, 67019u))) / 1u), (137399u >> subgroup_id)))));
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(69.19), _GLF_FUZZED(-8.3)), bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec3(-93.56, -433.679, -372.075).b), _GLF_IDENTITY(_GLF_FUZZED(-5312.1771), float(_GLF_IDENTITY(mat4x3(_GLF_FUZZED(-5312.1771), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0), mat3(1.0) * (mat4x3(_GLF_FUZZED(-5312.1771), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0)))))), bvec2(false, false))).x, mix(float(_GLF_FUZZED((false ? -4481.9495 : (-5.4 / -4.5)))), float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec3(-93.56, -433.679, -372.075).b), _GLF_FUZZED(-5312.1771)), bvec2(false, false))).x), bool(true))) > injectionSwitch.y))));
          }
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         else
          {
          }
        }
      }
     else
      {
      }
    }
  }
 else
  {
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_size.y = num_workgroup, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_size.y = num_workgroup) + 0u);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & 98113)); _injected_loop_counter --)
    {
     do
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _injected_loop_counter --)
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) + 0.0)))))))
                barrier();
              }
             else
              {
              }
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), max(int(2), int(2)))), ~ (_GLF_IDENTITY(~ (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), max(int(2), int(2))))), max(~ _GLF_IDENTITY((0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), max(int(2), int(2))))), ((0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), max(int(2), int(2)))))) | (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), max(int(2), int(2))))), ((0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), max(int(2), int(2)))))) | ((0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), max(int(2), int(2))))))))), ~ (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), max(int(_GLF_IDENTITY(2, (2) >> 0)), int(2)))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(_GLF_IDENTITY(7, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(7, 1), min(ivec2(7, 1), ivec2(7, 1)))), (int(_GLF_IDENTITY(ivec2(7, 1), min(ivec2(7, 1), ivec2(7, 1))))) | 0)), 7, 7))), int(7)))); _injected_loop_counter ++)
      {
       do
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 do
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((0 | (1 ^ 0)), min((0 | (1 ^ 0)), _GLF_IDENTITY((0 | (1 ^ _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 | (0)), _GLF_IDENTITY(0, (0) >> 0))))), 0 + ((0 | (1 ^ 0))))))); _injected_loop_counter ++)
                    {
                     do
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)), (false ? _GLF_FUZZED(7.9) : injectionSwitch.x)) > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED((- injectionSwitch)) : (injectionSwitch)))).y), (_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), (false ? _GLF_IDENTITY(_GLF_FUZZED((- injectionSwitch)), mat2(1.0) * (_GLF_FUZZED((- injectionSwitch)))) : (injectionSwitch)))).y)) * 1.0))); _injected_loop_counter ++)
                            {
                             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 + (1))))); _GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter ++)))
                              {
                               for(int _injected_loop_counter = (72802 & _GLF_IDENTITY(0, 0 + (0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   barrier();
                                  }
                                 else
                                  {
                                  }
                                }
                              }
                            }
                          }
                        }
                       else
                        {
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))));
                }
               else
                {
                }
              }
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 for(int _injected_loop_counter = ((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), clamp((1), (1), (1))), (false ? _GLF_FUZZED(31692) : ~ (1))))))), (_GLF_IDENTITY(1, 1 * _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(31692) : ~ (1))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(31692) : ~ (1))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(31692) : ~ (1))), 0 | (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(31692) : ~ (1))))), 0)))) >> 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(31692) : _GLF_IDENTITY(~ (1), ~ (~ (~ (1))))))))), ((_GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(31692) : ~ (1)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(31692) : ~ (1)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(31692) : ~ (1)))), 0 + (~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY((false ? _GLF_FUZZED(31692) : ~ (1)), ((false ? _GLF_FUZZED(31692) : ~ (1))) | 0)))))) - 0)) - 0)))) | ((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), int(ivec2((1), 0))), (false ? _GLF_FUZZED(31692) : ~ (1))))))))) - 0))) | (_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) | (1)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (1), max(~ (1), _GLF_IDENTITY(~ (1), 0 ^ (~ (1))))), (false ? _GLF_FUZZED(-17301) : ~ (1))), (false ? _GLF_FUZZED(31692) : ~ (1))))))))) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - (0 & -5096))), min((_GLF_IDENTITY(1, (1) - (0 & -5096))), (_GLF_IDENTITY(1, (1) - (0 & -5096)))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(7, 7, 7))), int(ivec2(int(7), 0)))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(7, 7, 7))), int(_GLF_IDENTITY(ivec2(int(7), _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((0), ~ (~ ((0)))))), min(ivec2(int(7), _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))), _GLF_IDENTITY(ivec2(int(7), _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))), (ivec2(int(7), _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0)))) / ivec2(1, 1))))))), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(7, 7, 7))), int(ivec2(int(7), 0))))) >> 0, ((0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(7, 7, 7))), int(ivec2(int(7), 0))))) >> 0) ^ 0))) | (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(clamp(7, 7, 7), min(clamp(7, 7, 7), clamp(7, 7, _GLF_IDENTITY(7, (7) ^ 0)))))), int(ivec2(int(_GLF_IDENTITY(7, 1 * (7))), 0))))))), (_GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(7, 7, 7))), int(ivec2(int(7), 0)))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(7, 7, 7))), int(_GLF_IDENTITY(ivec2(int(7), _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))), min(ivec2(int(7), _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))), _GLF_IDENTITY(ivec2(int(7), _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))), (ivec2(int(7), _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0)))) / ivec2(1, 1))))))), (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(7, 7, 7))), int(ivec2(int(7), 0))))) >> 0)) | (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(clamp(7, 7, 7), min(clamp(7, 7, 7), clamp(7, 7, 7))))), int(ivec2(int(_GLF_IDENTITY(7, 1 * (_GLF_IDENTITY(7, (_GLF_IDENTITY(7, 0 | (7))) | (7))))), 0))))))), ((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(7, 7, 7))), int(ivec2(int(7), 0)))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(7, 7, 7))), int(_GLF_IDENTITY(ivec2(int(7), _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0), ~ (_GLF_IDENTITY(~ (int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0)), 0 ^ (_GLF_IDENTITY(~ (int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0)), (~ (int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))) | 0))))))), min(ivec2(_GLF_IDENTITY(int(7), int(ivec2(int(7), 0))), _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))), _GLF_IDENTITY(ivec2(int(7), _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))), (ivec2(int(7), _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0)))) / ivec2(1, 1))))))), (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(7, 7, 7))), int(ivec2(int(7), 0))))) >> 0)) | (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(clamp(7, 7, 7), min(clamp(7, 7, 7), clamp(7, 7, 7))))), int(ivec2(int(_GLF_IDENTITY(7, 1 * (7))), 0)))))))) ^ 0)) / 1)); _injected_loop_counter --)
  {
   _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_size.w = workgroup_size, ~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_size.w = workgroup_size))), (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_size.w = workgroup_size) * 1u);
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x;
 uint workgroup_base = GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_size.w * workgroup_id;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter != 0, (_injected_loop_counter != 0) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter != 0, (_injected_loop_counter != 0) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_injected_loop_counter != 0, (_injected_loop_counter != 0) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! ((_GLF_IDENTITY(_injected_loop_counter != 0, (_injected_loop_counter != 0) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)))) || false))); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY((_injected_loop_counter --), (_GLF_IDENTITY((_injected_loop_counter --), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_injected_loop_counter --) : _GLF_FUZZED(_injected_loop_counter)))) + 0) | 0)))) * 1))
            {
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))))))))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], injectionSwitch[1])))).y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) - 0)))], injectionSwitch[1])))).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
                  barrier();
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           do
            {
             GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y = workgroup_base;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, clamp(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base)).y, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, clamp(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base)).y))) + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * subgroup_size, uint(uvec3(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * subgroup_size, 0u, (1u & 1u)))) + subgroup_local_id;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), int(ivec2(_GLF_IDENTITY(int(1), int(1)), 1)))) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ (int(7)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & int(174526u))); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, int(ivec4(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)), 0, 1, 1))), _injected_loop_counter)) != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         do
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, false)))))
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                        }
                       else
                        {
                         for(int _injected_loop_counter = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) / 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY((1 & 1), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (_GLF_IDENTITY(~ (1), (~ (1)) | 0))) & 1)))) ^ 1)); _injected_loop_counter --)
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(0, 1), (true ? ivec2(0, 1) : _GLF_FUZZED((ivec2(-11797, 25492))))), clamp(ivec2(0, 1), ivec2(0, 1), _GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) | ivec2(0, 0))))), min(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(0, 1), (true ? ivec2(0, 1) : _GLF_FUZZED((ivec2(-11797, 25492))))), clamp(ivec2(0, 1), ivec2(0, 1), _GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) | ivec2(0, 0))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(0, 1), (true ? ivec2(0, 1) : _GLF_FUZZED((ivec2(-11797, 25492))))), clamp(ivec2(0, 1), ivec2(0, 1), _GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) | ivec2(0, 0))))))))), _GLF_IDENTITY(clamp((_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))) : 0)), int(_GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) | (ivec2(0, 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(ivec2(0, 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(ivec2(0, 1))))), (_GLF_IDENTITY(clamp((_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(_GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) | (ivec2(0, 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(ivec2(0, 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(ivec2(0, 1))))), (_GLF_IDENTITY(clamp((_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(_GLF_IDENTITY(ivec2(0, 1), (ivec2(0, _GLF_IDENTITY(1, (1) / 1))) | (ivec2(0, 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(ivec2(0, 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(ivec2(0, 1))))), int(ivec4(clamp((_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(_GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) | (ivec2(0, 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(ivec2(0, 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(ivec2(0, 1))))), 1, 1, 1)))) / 1)) * int(_GLF_ONE(1.0, injectionSwitch.y)))) >> 0), clamp(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(0, 1), (_GLF_IDENTITY(true ? ivec2(0, 1) : _GLF_FUZZED((ivec2(-11797, 25492))), clamp(true ? ivec2(0, 1) : _GLF_FUZZED((ivec2(-11797, 25492))), true ? ivec2(0, 1) : _GLF_FUZZED((ivec2(-11797, 25492))), true ? ivec2(0, 1) : _GLF_FUZZED((ivec2(-11797, 25492))))))), clamp(ivec2(0, 1), ivec2(0, 1), _GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) | ivec2(0, 0))))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(ivec4(_injected_loop_counter, (1 | 1), 1, (0 & 4845))), int(ivec2(int(ivec4(_injected_loop_counter, (1 | 1), 1, (0 & 4845))), 0))))) : 0)), int(_GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) | (_GLF_IDENTITY(ivec2(0, 1), (_GLF_IDENTITY(ivec2(0, 1), (false ? _GLF_FUZZED(ivec2(-64878, -5559)) : ivec2(0, 1)))) | (_GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) >> ivec2(0, 0))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(ivec2(0, 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(ivec2(0, 1)))))) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((false ? _GLF_FUZZED(_injected_loop_counter) : 0), (false ? _GLF_FUZZED(_injected_loop_counter) : (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(0, 1), _GLF_IDENTITY((_GLF_IDENTITY(true, false || (true)) ? ivec2(0, 1) : _GLF_IDENTITY(_GLF_FUZZED((ivec2(-11797, 25492))), clamp(_GLF_FUZZED((ivec2(-11797, 25492))), _GLF_FUZZED((ivec2(-11797, 25492))), _GLF_FUZZED((ivec2(-11797, 25492)))))), ((_GLF_IDENTITY(true, false || (true)) ? ivec2(0, 1) : _GLF_IDENTITY(_GLF_FUZZED((ivec2(-11797, 25492))), clamp(_GLF_FUZZED((ivec2(-11797, 25492))), _GLF_FUZZED((ivec2(-11797, 25492))), _GLF_FUZZED((ivec2(-11797, 25492))))))) >> ivec2(0, 0))), clamp(ivec2(0, 1), ivec2(0, 1), _GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) | ivec2(_GLF_IDENTITY(0, int(int(0))), 0))))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(_GLF_IDENTITY(ivec2(0, _GLF_IDENTITY(1, 0 ^ (1))), (ivec2(0, 1)) | (ivec2(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) | (_GLF_IDENTITY(0, (0) | (0)))), 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(ivec2(0, 1))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(ivec2(0, 1)))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))))), int(ivec2(0, 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(ivec2(0, 1)))))) >> 0), clamp(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), true))))) ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(0, 1), (true ? ivec2(0, 1) : _GLF_FUZZED((ivec2(-11797, 25492))))), clamp(ivec2(0, 1), ivec2(0, 1), _GLF_IDENTITY(ivec2(0, _GLF_IDENTITY(1, (1) - 0)), (ivec2(0, 1)) | ivec2(0, 0))))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(_GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) | (ivec2(0, 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : 0, (_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : 0, ~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : 0, max(false ? _GLF_FUZZED(_injected_loop_counter) : 0, false ? _GLF_FUZZED(_injected_loop_counter) : 0)))))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : 0, (false ? _GLF_FUZZED(_injected_loop_counter) : false ? _GLF_FUZZED(_injected_loop_counter) : 0)))))), int(ivec2(0, 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0 ^ 1) * (0))))), ((false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0 ^ 1) * (0)))))) + 0)), int(ivec2(0, 1))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, int(ivec3(0, 1, 0))))), 0)))), int(ivec2(0, 1)))) * 1)))) >> 0), _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(0, 1), (true ? _GLF_IDENTITY(ivec2(0, 1), ivec2(0, 0) ^ (ivec2(0, 1))) : _GLF_FUZZED((ivec2(-11797, 25492))))), clamp(ivec2(0, 1), ivec2(0, 1), _GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) | ivec2(0, 0))))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(_GLF_IDENTITY(ivec2(0, 1), _GLF_IDENTITY((ivec2(0, 1)) | (ivec2(0, 1)), clamp(_GLF_IDENTITY((ivec2(0, 1)) | (ivec2(0, 1)), (false ? _GLF_FUZZED(ivec2(-67989, 66915)) : (ivec2(0, 1)) | (ivec2(0, 1)))), (ivec2(0, 1)) | (ivec2(0, 1)), (ivec2(0, 1)) | (ivec2(0, 1)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) + 0)) | (_GLF_IDENTITY(0, (0) | (0)))))))), int(ivec2(0, 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(ivec2(0, 1)))))) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(0, 1), (true ? ivec2(0, 1) : _GLF_FUZZED((ivec2(-11797, 25492))))), clamp(ivec2(0, 1), ivec2(0, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) - 0)), _GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) | ivec2(0, 0))))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(_GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) | (ivec2(0, 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(ivec2(0, 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))) : 0)), int(ivec2(0, 1)))))) >> 0))), _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(0, 1), (true ? ivec2(0, 1) : _GLF_FUZZED((ivec2(-11797, 25492))))), _GLF_IDENTITY(clamp(ivec2(0, 1), ivec2(0, 1), _GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) | ivec2(0, 0))), (clamp(ivec2(0, 1), ivec2(0, 1), _GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) | ivec2(0, 0)))) ^ ivec2(0, 0)))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), false || (bool(_GLF_IDENTITY(false, (false) || false)))))) ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, 0 ^ (0)), 1), (ivec2(0, 1)) | (ivec2(0, 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(ivec2(0, 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(ivec2(0, 1)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(0, 1), (true ? ivec2(0, 1) : _GLF_FUZZED((ivec2(-11797, 25492))))), _GLF_IDENTITY(clamp(ivec2(0, 1), ivec2(0, 1), _GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) | ivec2(0, 0))), (clamp(ivec2(0, 1), ivec2(0, 1), _GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) | ivec2(0, 0)))) ^ ivec2(0, 0)))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), false || (bool(_GLF_IDENTITY(false, (false) || false)))))) ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, 0 ^ (0)), 1), (ivec2(0, 1)) | (ivec2(0, 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(ivec2(0, 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(ivec2(0, 1)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(0, 1), (true ? ivec2(0, 1) : _GLF_FUZZED((ivec2(-11797, 25492))))), _GLF_IDENTITY(clamp(ivec2(0, 1), ivec2(0, 1), _GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) | ivec2(0, 0))), (clamp(ivec2(0, 1), ivec2(0, 1), _GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) | ivec2(0, 0)))) ^ ivec2(0, 0)))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), false || (bool(_GLF_IDENTITY(false, (false) || false)))))) ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, 0 ^ (0)), 1), (ivec2(0, 1)) | (ivec2(0, 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(ivec2(0, 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(ivec2(0, 1)))))), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(0, 1), (true ? ivec2(0, 1) : _GLF_FUZZED((ivec2(-11797, 25492))))), _GLF_IDENTITY(clamp(ivec2(0, 1), ivec2(0, 1), _GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) | ivec2(0, 0))), (clamp(ivec2(0, 1), ivec2(0, 1), _GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) | ivec2(0, 0)))) ^ ivec2(0, 0)))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), false || (bool(_GLF_IDENTITY(false, (false) || false)))))) ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, 0 ^ (0)), 1), (ivec2(0, 1)) | (ivec2(0, 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(ivec2(0, 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(ivec2(0, 1)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(0, 1), (true ? ivec2(0, 1) : _GLF_FUZZED((ivec2(-11797, 25492))))), _GLF_IDENTITY(clamp(ivec2(0, 1), ivec2(0, 1), _GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) | ivec2(0, 0))), (clamp(ivec2(0, 1), ivec2(0, 1), _GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) | ivec2(0, 0)))) ^ ivec2(0, 0)))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), false || (bool(_GLF_IDENTITY(false, (false) || false)))))) ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, 0 ^ (0)), 1), (ivec2(0, 1)) | (ivec2(0, 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(ivec2(0, 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), int(ivec2(0, 1)))))))))) >> 0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0)) - 0, 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (0 << _GLF_IDENTITY(int(2), int(2)))), (_injected_loop_counter) << 0)) - 0))), max(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, int(ivec2(_injected_loop_counter, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), 0 + ((_injected_loop_counter))) - 0), _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, (0) >> 0)))) != (1 | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), min(_GLF_FUZZED(_injected_loop_counter), _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) >> (0 >> _GLF_IDENTITY(int(2), int(2)))))) : 0, int(ivec3(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), min(_GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter))) : 0, 0 ^ (false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), min(_GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter))) : 0)), 0, 0))))) ^ 1, int(_GLF_IDENTITY(ivec2(0 ^ 1, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, _GLF_IDENTITY((true ? 0 : _GLF_FUZZED(_injected_loop_counter)), ((true ? 0 : _GLF_FUZZED(_injected_loop_counter))) | ((true ? 0 : _GLF_FUZZED(_injected_loop_counter))))), 0))), clamp(_GLF_IDENTITY(ivec2(0 ^ _GLF_IDENTITY(1, (1) / 1), 0), ~ (~ (ivec2(0 ^ 1, 0)))), ivec2(0 ^ 1, 0), ivec2(0 ^ 1, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) * 1))))))))), ((0 ^ _GLF_IDENTITY(1, 0 | (1)))) | 0))); _injected_loop_counter ++)
                              {
                               if(_GLF_WRAPPED_IF_FALSE(false))
                                {
                                }
                               else
                                {
                                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(-21988)))), max((_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(-21988)))), (_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(-21988)))))) | (_injected_loop_counter)) > (1 ^ 1), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(-21988)))), max((_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(-21988)))), (_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(-21988)))))) | (_injected_loop_counter)) > (1 ^ 1), true && (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(-21988))), max(_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(-21988))), _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(-21988))), 0 + (_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(-21988)))))))), _GLF_IDENTITY(max((_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(-21988)))), (_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(-21988))))), clamp(max((_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(-21988)))), (_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(-21988))))), max((_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(-21988)))), (_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(-21988))))), max((_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(-21988)))), (_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(-21988)))))))) | (_injected_loop_counter)) > (1 ^ 1)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))); _injected_loop_counter --)
                                  {
                                   GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_size.z = virtual_gid;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               else
                {
                }
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false));
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) | _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) | ((1)))) ^ 0), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) | (1), 1 * (_GLF_IDENTITY(0, min(0, 0)) | (1)))))), 1, 1))), (_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), (0 >> _GLF_IDENTITY(int(6), int(6))) ^ (_GLF_IDENTITY(min(0, 0), (min(0, 0)) | (min(0, 0)))))) | (1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), (0 >> _GLF_IDENTITY(int(6), int(6))) ^ (_GLF_IDENTITY(min(0, 0), (min(0, 0)) | (min(0, 0)))))) | (1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) | (1), 1 * (_GLF_IDENTITY(0, min(0, 0)) | (1)))))), 1, 1))), min((_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) | (1), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) | (1), 1 * (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) / 1), 0)) | (1)))))), 1, 1))), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), (min(0, 0)) | (_GLF_IDENTITY(min(0, 0), (min(0, 0)) + 0)))) | (1), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) | (1), 1 * (_GLF_IDENTITY(0, min(0, 0)) | (1)))))), 1, 1)))))) + int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x))) | (1))) % subgroup_size), min(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, uvec2(0u, 0u) + (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base)).y + GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) | (1), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) | (1), 1 * (_GLF_IDENTITY(0, min(0, 0)) | (1)))))), 1, 1))) | (1))) % subgroup_size), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) | (1), (_GLF_IDENTITY(0, min(0, 0)) | (1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) | (1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) | (1), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) | (1), (_GLF_IDENTITY(0, min(0, 0)) | (1)) * 1)) ^ 0) : _GLF_FUZZED(-12512))), min(_GLF_IDENTITY(0, min(0, 0)) | (1), _GLF_IDENTITY(0, min(0, 0)) | (1))), 1 * (_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), ~ (~ (min(0, 0))))) | (1)))))), 1, 1))) | (1))) % subgroup_size), (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) | (1), (_GLF_IDENTITY(0, min(0, 0)) | (1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) | (1), min(_GLF_IDENTITY(0, min(0, 0)) | (1), _GLF_IDENTITY(0, min(0, 0)) | (1))), 1 * (_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), ~ (~ (min(0, 0))))) | (1)))))), 1, 1))) | (1))) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) | (1), (_GLF_IDENTITY(0, min(0, 0)) | (1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) | (1), min(_GLF_IDENTITY(0, min(0, 0)) | (1), _GLF_IDENTITY(0, min(0, 0)) | (1))), 1 * (_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), ~ (~ (min(0, 0))))) | (1)))))), 1, 1))) | (1))) % subgroup_size) | 0u))) << (0u >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) / 1u))))));
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_size.x = next_virtual_gid;
 for(int _injected_loop_counter = (_GLF_IDENTITY(0 | 0, (0 | 0) - 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 1)); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, false, true)))), (injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 0 ^ (_GLF_IDENTITY(int(2), int(2))))) | 0)) >> _GLF_IDENTITY(int(2), int(2)))))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
            }
          }
        }
      }
     else
      {
      }
    }
  }
 atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_size.z, (true ? GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_size.z : _GLF_FUZZED(subgroup_size)))], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) | (1))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) | (1))), max(uint(_GLF_IDENTITY(1, (1) | (1))), uint(_GLF_IDENTITY(1, (1) | (1)))))) / 1u), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ (uint(_GLF_IDENTITY(1, (1) | (1))))), _GLF_IDENTITY(4, 0 + (4)), 64, 4);
 if(subgroup_local_id + _GLF_IDENTITY(1, (1) + _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(clamp(22776, -63700, -99420))))) < subgroup_size)
  {
   int i = _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, (0 ^ 0))), clamp(int(ivec2(0, (0 ^ 0))), _GLF_IDENTITY(int(ivec2(0, (0 ^ 0))), 1 * (int(ivec2(0, (0 ^ 0))))), int(ivec2(0, (0 ^ 0)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec2(0, (0 ^ 0)))), _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, 0 | (0)))) ^ (_GLF_IDENTITY(0, int(ivec2(0, (0 ^ 0))))))) | int(_GLF_ZERO(0.0, injectionSwitch.x)), 1 * ((_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec2(0, (0 ^ 0)))), _GLF_IDENTITY(0, (0) | _GLF_IDENTITY((_GLF_IDENTITY(0, 0 | (0))), int(int((_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, 0 | (0))))))))) ^ (_GLF_IDENTITY(0, int(ivec2(0, (0 ^ 0))))))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))));
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (15630 & _GLF_IDENTITY(0, (0) - 0))); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) | (int(_GLF_ONE(1.0, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_size.x], uint(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((2), (_GLF_IDENTITY(_GLF_IDENTITY((2), ((2)) ^ 0), max((2), (2)))) << 0) ^ 0), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (2) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ 0), int(int(_GLF_IDENTITY(2, (2) ^ 0))))), ~ (~ (min(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (2) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) - 0), (2) ^ 0), int(int(_GLF_IDENTITY(2, (2) ^ 0)))))))))), 4, 64, _GLF_IDENTITY(4, (4) | 0));
              }
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))), true)), (bool(bvec2(_GLF_IDENTITY(! (! (false)), bool(bool(! (! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), (_GLF_IDENTITY((false), false || ((false)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y))))))))), true))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))), true)), (bool(bvec2(_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))), true))) || false), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))), true)), (bool(bvec2(_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))), true))) || false)) || false), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), _GLF_IDENTITY(bool(bvec4(bool(bool(! (! (false)))), true, true, true)), true && (bool(bvec4(bool(bool(! (! (false)))), true, true, true)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec4(bool(bool(! (! (false)))), true, true, true)))), true)))))) && true)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))), true)), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))), true))), bool(bool((bool(bvec2(_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))), true)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))), true)), (bool(bvec2(_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))), true))) && true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (_GLF_IDENTITY(! (bool(bool(! (! (_GLF_IDENTITY(false, ! (! (false)))))))), (! (bool(bool(! (! (_GLF_IDENTITY(false, ! (! (false))))))))) && true)))), true)), (bool(bvec2(_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))), true))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))), _GLF_IDENTITY(true, (true) || false))), (bool(bvec2(_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))), true))) && true)))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (_GLF_IDENTITY(! (bool(bool(! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), (! (bool(bool(! (! (_GLF_IDENTITY(false, ! (! (false))))))))) && true)))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))), bool(bool(! (! (false))))), true))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))), _GLF_IDENTITY(true, (true) || false))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))), true)), (bool(bvec2(_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))), true))) || false)) && true)) && true)))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false)))), ! (_GLF_IDENTITY(! (bool(bool(! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(false, (false) && true), true), bvec3(bvec3(bvec3((false), false, true)))))))))))))))), (! (bool(bool(! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), true && (bool(bool((! (false)))))))))))))) && true)))), true)), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))), _GLF_IDENTITY(true, (true) && true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))), _GLF_IDENTITY(true, (true) && true)), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))), _GLF_IDENTITY(true, (true) && true)))))))))) && true, bool(_GLF_IDENTITY(bvec3((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))), _GLF_IDENTITY(true, (true) && true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))), _GLF_IDENTITY(true, (true) && true)), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))), _GLF_IDENTITY(true, (true) && true)))))))))) && true, true, false), bvec3(bvec3(bvec3((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))), _GLF_IDENTITY(true, (true) && true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))), _GLF_IDENTITY(true, (true) && true)), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))), _GLF_IDENTITY(true, (true) && true)))))))))) && true, true, false))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))), _GLF_IDENTITY(true, (true) || false))), (bool(bvec2(_GLF_IDENTITY(! (! (false)), bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))), true))) && true)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))), _GLF_IDENTITY(true, (true) || false))), (bool(bvec2(_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))), true))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))), _GLF_IDENTITY(true, (true) || false))), (bool(bvec2(_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))), true))) && true), bool(bool(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))), _GLF_IDENTITY(true, (true) || false))), (bool(bvec2(_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))), true))) && true))))) || false)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))), _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))), (bool(bvec2(_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))), true))) && true)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))), _GLF_IDENTITY(true, (true) || false))), (bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))), false || (bool(bvec4(! (false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(! (! (_GLF_IDENTITY(false, (false) && true)))))), true))) && true)))))))))))))))), false), true))))))));
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(int(ivec2(_injected_loop_counter, 0)), (false ? _GLF_FUZZED(-15366) : int(ivec2(_injected_loop_counter, 0))))) > 0, false || (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(_injected_loop_counter, 0)), int(int(int(ivec2(_injected_loop_counter, 0))))), (false ? _GLF_FUZZED(-15366) : int(ivec2(_injected_loop_counter, 0))))) > 0))); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
            {
            }
           else
            {
             atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_size.x, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_size.x, (false ? _GLF_FUZZED(subgroup_local_id) : GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_size.x)), max(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_size.x, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_size.x))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], uint(2), 4, 64, 4);
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
}
