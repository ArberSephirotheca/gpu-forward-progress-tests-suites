#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_1 {
 vec2 _f0;
 bvec3 _f1;
 uint _f2;
} ;

struct _GLF_struct_0 {
 vec2 _f0;
 bvec2 _f1;
 ivec2 _f2;
 ivec2 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 uvec2 _f1;
 uint subgroup_id;
 mat4 _f2;
 bool _f3;
 bvec3 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(_GLF_struct_0(vec2(1.0), bvec2(true), _GLF_IDENTITY(ivec2(1), min(ivec2(1), ivec2(1))), ivec2(1), vec2(_GLF_IDENTITY(1.0, (1.0) + 0.0))), _GLF_struct_1(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(47.33) : 1.0))), bvec3(true), 1u), mat4x2(1.0)), uvec2(1u), gl_SubgroupID, mat4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-371.801)), bool(false)))) - sqrt(0.0))), _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec2((true), false))), bool(bvec2((true), false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec2((true), false))), bool(bvec2((true), false)))) && true, bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec2((true), false))), bool(bvec2((true), false)))) && true, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bool(bvec2(! _GLF_IDENTITY(_GLF_IDENTITY((true), false || ((true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec2((true), false))), bool(bvec2((true), false))), (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec2((true), false))), bool(bvec2((true), false)))) && true)))), true)))))));
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0), max(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0), vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0))))).y))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), bool(bvec4(bool(bvec4(false, true, false, true)), true, false, false))))))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 do
  {
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((false) && true, ((false) && true) && true))))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, min(0, 0))))))], gl_WorkGroupID[1], gl_WorkGroupID[_GLF_IDENTITY(2, int(ivec4(2, 1, 0, ((0 >> _GLF_IDENTITY(int(8), int(8))) >> _GLF_IDENTITY(int(6), int(6))))))])).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))))) || false)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))))) || false)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ((! (_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.6) : injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.6) : injectionSwitch.y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.6) : injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
        }
       else
        {
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), (bool(_GLF_IDENTITY(bool(false), false || (bool(false))))) && true))))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) * (1u & 1u))), max((_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) * (1u & 1u))), (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) * (1u & 1u))))) | (workgroup_size * workgroup_id), clamp(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) * (_GLF_IDENTITY(1u, max(1u, 1u)) & 1u))), ((_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, (true ? workgroup_size * workgroup_id : _GLF_FUZZED(subgroup_local_id)))) * (1u & 1u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * workgroup_id), ((workgroup_size * workgroup_id)) >> 0u) * (1u & 1u))), ~ (~ ((_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) * (1u & 1u)))))))) | (workgroup_size * workgroup_id), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) * (1u & _GLF_IDENTITY(1u, _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(packSnorm2x16(vec2(-1499.0885, -39.20)))), (true ? (true ? 1u : _GLF_FUZZED(packSnorm2x16(vec2(-1499.0885, -39.20)))) : _GLF_FUZZED(subgroup_local_id))))))) | (workgroup_size * workgroup_id), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | 0u), (workgroup_size * workgroup_id) * (1u & 1u))) | (workgroup_size * workgroup_id)) ^ (0u ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, uint(_GLF_IDENTITY(uvec4(workgroup_size * workgroup_id, 0u, 0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), (false ? _GLF_FUZZED(uvec4(7289u, 15304u, 196663u, 188557u)) : _GLF_IDENTITY(uvec4(workgroup_size * workgroup_id, 0u, 0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), (uvec4(workgroup_size * workgroup_id, 0u, 0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))) - uvec4(0u, 0u, 0u, 0u)))))), (workgroup_size * workgroup_id) * (_GLF_IDENTITY(1u, max(1u, 1u)) & 1u))) | (workgroup_size * _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(atomicAnd(num_workgroup, workgroup_size)) : workgroup_id))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * workgroup_id) * (1u & 1u), ~ (~ ((workgroup_size * _GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))) * (1u & 1u)))))) | (workgroup_size * workgroup_id), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> 0u)))) * (1u & 1u))) | (workgroup_size * workgroup_id), ((_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> 0u)))) * (1u & 1u))) | (workgroup_size * workgroup_id)) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> 0u)))) * (1u & 1u))) | (workgroup_size * workgroup_id), uint(uvec3((_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> 0u)))) * (1u & 1u))) | (workgroup_size * workgroup_id), 0u, 1u))))))), (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) * (1u & _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) | _GLF_IDENTITY((workgroup_size * workgroup_id), (_GLF_IDENTITY((workgroup_size * workgroup_id), ((workgroup_size * workgroup_id)) / 1u)) / 1u), (_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * workgroup_id), max((_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, ~ (~ (workgroup_size * workgroup_id)))) | (workgroup_size * workgroup_id))), _GLF_IDENTITY((workgroup_size * workgroup_id), clamp((workgroup_size * workgroup_id), (workgroup_size * workgroup_id), (workgroup_size * workgroup_id))))) * (1u & 1u))) | (workgroup_size * workgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) * (1u & 1u))) | (workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec4(workgroup_id, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | (uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u, 0u), min(uvec4(workgroup_id, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), (float(float(injectionSwitch.y))) * 1.0)))), 0u, _GLF_IDENTITY(0u, (0u) / 1u)), uvec4(workgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u))))), _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), workgroup_id)))), max(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) * (1u & 1u))) | (workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec4(workgroup_id, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | (uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u, 0u), min(uvec4(workgroup_id, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), (float(float(injectionSwitch.y))) * 1.0)))), 0u, _GLF_IDENTITY(0u, (0u) / 1u)), uvec4(workgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u))))), _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), workgroup_id)))), _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) * (1u & 1u))) | (workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec4(workgroup_id, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | (uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u, 0u), min(uvec4(workgroup_id, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), (float(float(injectionSwitch.y))) * 1.0)))), 0u, _GLF_IDENTITY(0u, (0u) / 1u)), uvec4(workgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u))))), _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), workgroup_id))))))) + 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-913.107, 7.7)) : injectionSwitch)).y)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_3.subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_3.subgroup_id * subgroup_size + subgroup_local_id, max(workgroup_base + _GLF_struct_replacement_3.subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + _GLF_struct_replacement_3.subgroup_id * subgroup_size + subgroup_local_id))) | 0u);
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))), true)), _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))) && (bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(true, (true) || false)))))))), ! (! ((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))), true)), _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))) && (bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(true, (true) || false)))))))))))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_TRUE(true))), (bool(bool(_GLF_WRAPPED_IF_TRUE(true)))) || false))) || false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), ~ (~ (0 >> _GLF_IDENTITY(int(3), int(3))))))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                {
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false)))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
         else
          {
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         do
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, ~ (~ (1))), 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) ^ 0), 1)))))); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
                barrier();
              }
             else
              {
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(1, (false ? _GLF_FUZZED(96530) : 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 & 43224), clamp((0 & 43224), _GLF_IDENTITY((0 & 43224), _GLF_IDENTITY(((_GLF_IDENTITY(0 & 43224, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) * (0 & _GLF_IDENTITY(_GLF_IDENTITY(43224, (_GLF_IDENTITY(43224, (43224) - (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), max(int(0), _GLF_IDENTITY(int(0), (int(0)) * 1))))))) << (62493 & 0)), _GLF_IDENTITY(clamp(43224, _GLF_IDENTITY(43224, 0 + (43224)), 43224), (clamp(43224, _GLF_IDENTITY(43224, 0 + (43224)), 43224)) | (clamp(43224, _GLF_IDENTITY(43224, 0 + (43224)), 43224)))))))) | _GLF_IDENTITY(((0 & 43224)), (((_GLF_IDENTITY(0 & 43224, min(_GLF_IDENTITY(0 & 43224, int(int(0 & 43224))), 0 & 43224))))) | (((0 & 43224)))), (((_GLF_IDENTITY(_GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, (0) + 0))) & 43224, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), clamp(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))) * (0 & _GLF_IDENTITY(43224, clamp(43224, _GLF_IDENTITY(43224, 0 + (_GLF_IDENTITY(43224, (43224) >> 0))), 43224)))))) | ((0 & _GLF_IDENTITY(43224, (43224) / 1)))) << 0)), _GLF_IDENTITY((0 & 43224), _GLF_IDENTITY(max(_GLF_IDENTITY((0 & 43224), ((0 & 43224)) | 0), _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) - 0)), (true ? ~ (_GLF_IDENTITY(0, (0) - 0)) : _GLF_FUZZED(_injected_loop_counter))))) & _GLF_IDENTITY(43224, (43224) << 0)), min((0 & 43224), (0 & 43224)))), (max((0 & 43224), (0 & 43224))) | 0))))); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
            {
            }
           else
            {
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               do
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, false))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) || false) || false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, (false) || false)), true, false)), true && (bool(bvec3((_GLF_IDENTITY(false, (false) || false)), true, false))))) || false, false || ((_GLF_IDENTITY(false, (false) || false)) || false)), true))))))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                      {
                       barrier();
                      }
                    }
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (_GLF_IDENTITY(true, (true) || false)) || false) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! (! (injectionSwitch.x > injectionSwitch.y)), false, true, true))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), ! (! (injectionSwitch.x > injectionSwitch.y))))) && true))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, (false ? _GLF_FUZZED(3808.8325) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))), (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), true && (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))))), (injectionSwitch.x > injectionSwitch.y) || false))), ! (! (injectionSwitch.x > injectionSwitch.y))))) && true)))))))) || false)))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false)))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
    }
   else
    {
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_3.subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, 1u * ((subgroup_size) / 1u))) + ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))) * 1u)) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))) + 1) % subgroup_size);
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) - 0)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true))) || false), _GLF_IDENTITY((false) || false, ((false) || _GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
          }
        }
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)) && true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)) && true)))), ! (! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)) && true)))))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, false, false)), (bool(bvec4((false), true, false, false))) || false)))))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-5677.2655), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], max((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], mix(float(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1), (true ? clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1) : _GLF_FUZZED(11849))))], ((injectionSwitch)[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1), (true ? clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1) : _GLF_FUZZED(11849))))]) / 1.0)), float(_GLF_FUZZED(-98.51)), bool(false))))), (_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], max((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], mix(float(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1), (true ? clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1) : _GLF_FUZZED(11849))))], ((injectionSwitch)[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1), (true ? clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1) : _GLF_FUZZED(11849))))]) / 1.0)), float(_GLF_FUZZED(-98.51)), bool(false)))))) - determinant(mat2(abs(0.0), 1.0, 0.0, 0.0)))), (_GLF_IDENTITY(vec2(_GLF_FUZZED(-5677.2655), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], max((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], mix(float((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))]), float(_GLF_FUZZED(-98.51)), bool(false))))), clamp(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], max((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], mix(float((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))]), float(_GLF_FUZZED(-98.51)), bool(false))))), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], max((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], mix(float((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))]), float(_GLF_FUZZED(-98.51)), bool(false))))), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], max((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], mix(float((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))]), float(_GLF_FUZZED(-98.51)), bool(false)))))))), (false ? _GLF_FUZZED(vec2(603.591, 6889.6647)) : _GLF_IDENTITY(vec2(_GLF_FUZZED(-5677.2655), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], max((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], mix(float((injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))]), float(_GLF_FUZZED(-98.51)), bool(false)))))), clamp(vec2(_GLF_FUZZED(-5677.2655), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) >> (0 & -12136)))), clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], max((injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1)), max(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1)), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))))], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], mix(float((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))]), float(_GLF_FUZZED(-98.51)), bool(false)))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-5677.2655), min(_GLF_IDENTITY(_GLF_FUZZED(-5677.2655), _GLF_IDENTITY(float(mat3x4(_GLF_FUZZED(-5677.2655), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), abs(0.0), _GLF_ONE(1.0, injectionSwitch.y))), mix(float(float(mat3x4(_GLF_FUZZED(-5677.2655), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), abs(0.0), _GLF_ONE(1.0, injectionSwitch.y)))), float(_GLF_FUZZED(5.0)), bool(false)))), _GLF_FUZZED(-5677.2655))), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], _GLF_IDENTITY(max((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], mix(float((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))]), float(_GLF_FUZZED(-98.51)), bool(false)))), mix(float(max((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], mix(float((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))]), float(_GLF_FUZZED(-98.51)), bool(false))))), float(_GLF_FUZZED(-27.55)), bool(false))))), mix(vec2(_GLF_FUZZED(4616.8633), _GLF_FUZZED((- 919.929))), vec2((vec2(_GLF_IDENTITY(_GLF_FUZZED(-5677.2655), min(_GLF_IDENTITY(_GLF_FUZZED(-5677.2655), _GLF_IDENTITY(float(mat3x4(_GLF_FUZZED(-5677.2655), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), abs(0.0), _GLF_ONE(1.0, injectionSwitch.y))), mix(float(float(mat3x4(_GLF_FUZZED(-5677.2655), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), abs(0.0), _GLF_ONE(1.0, injectionSwitch.y)))), float(_GLF_FUZZED(5.0)), bool(false)))), _GLF_FUZZED(-5677.2655))), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], _GLF_IDENTITY(max((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], mix(float((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))]), float(_GLF_FUZZED(-98.51)), bool(false)))), mix(float(max((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], mix(float((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))]), float(_GLF_FUZZED(-98.51)), bool(false))))), float(_GLF_FUZZED(-27.55)), bool(false))))))[0], (vec2(_GLF_IDENTITY(_GLF_FUZZED(-5677.2655), min(_GLF_IDENTITY(_GLF_FUZZED(-5677.2655), _GLF_IDENTITY(float(mat3x4(_GLF_FUZZED(-5677.2655), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), abs(0.0), _GLF_ONE(1.0, injectionSwitch.y))), mix(float(float(mat3x4(_GLF_FUZZED(-5677.2655), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), abs(0.0), _GLF_ONE(1.0, injectionSwitch.y)))), float(_GLF_FUZZED(5.0)), bool(false)))), _GLF_FUZZED(-5677.2655))), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], _GLF_IDENTITY(max((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], mix(float((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))]), float(_GLF_FUZZED(-98.51)), bool(false)))), mix(float(max((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], mix(float((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))]), float(_GLF_FUZZED(-98.51)), bool(false))))), float(_GLF_FUZZED(-27.55)), bool(false))))))[1]), bvec2(true, true))), _GLF_IDENTITY(vec2(_GLF_FUZZED(-5677.2655), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1)), ~ (~ (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1)))))], max((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], _GLF_IDENTITY(mix(float((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))]), float(_GLF_FUZZED(-98.51)), bool(false)), clamp(mix(float((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))]), float(_GLF_FUZZED(-98.51)), bool(false)), mix(float((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))]), float(_GLF_FUZZED(-98.51)), bool(false)), _GLF_IDENTITY(mix(float((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))]), float(_GLF_FUZZED(-98.51)), bool(false)), mix(float(_GLF_FUZZED(float(150645u))), float(mix(float((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))]), float(_GLF_FUZZED(-98.51)), bool(false))), bool(true))))))))), (vec2(_GLF_FUZZED(-5677.2655), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], max((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))], mix(float((injectionSwitch)[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1), int(int(_GLF_IDENTITY(clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1), (false ? _GLF_FUZZED(_injected_loop_counter) : clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1)))))))]), float(_GLF_IDENTITY(_GLF_FUZZED(-98.51), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_FUZZED(-98.51), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0), mat3(1.0) * (mat3(_GLF_FUZZED(-98.51), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0)))), min(float(_GLF_IDENTITY(mat3(_GLF_FUZZED(-98.51), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0), mat3(1.0) * (mat3(_GLF_FUZZED(-98.51), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0)))), float(_GLF_IDENTITY(mat3(_GLF_FUZZED(-98.51), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0), mat3(1.0) * (mat3(_GLF_FUZZED(-98.51), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0)))))))), bool(false))))))) - vec2(0.0, 0.0))))))) / vec2(1.0, 1.0)), vec2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(_GLF_IDENTITY(-7125.1587, clamp(-7125.1587, -7125.1587, -7125.1587)))), vec2(_GLF_FUZZED(-969.570), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-487.369), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-887.232)), bvec2(true, false)))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), clamp((_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-7125.1587)), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-7125.1587)), mix(vec2((vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-7125.1587)))[0], (vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-7125.1587)))[1]), vec2(_GLF_FUZZED(6.9), _GLF_FUZZED(484.705)), bvec2(false, false))), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-7125.1587)))), vec2(_GLF_FUZZED(-969.570), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mod(injectionSwitch, min(vec2(-8114.3212, -5.0), injectionSwitch))) : injectionSwitch)), mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-7125.1587)), vec2(_GLF_FUZZED(-969.570), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-7125.1587)), vec2(_GLF_FUZZED(-969.570), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))[0], (injectionSwitch)[0])), _GLF_FUZZED(4757.3486)), bvec2(true, false))).y))), true, _GLF_IDENTITY(true, false || (true)), false))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-8.4, min(-8.4, -8.4))), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-1.6), clamp(_GLF_FUZZED(-1.6), _GLF_IDENTITY(_GLF_FUZZED(-1.6), clamp(_GLF_FUZZED(-1.6), _GLF_FUZZED(-1.6), _GLF_FUZZED(-1.6))), _GLF_FUZZED(-1.6)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), determinant(mat3(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, abs(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-34.97))), _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, length(0.0), 0.0))), 1.0)), clamp(1.0, 1.0, 1.0)), 0.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_FUZZED(9.0))), 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y), sin(0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(8.3), float(mat2x4(_GLF_FUZZED(8.3), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(sqrt(0.0), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(sqrt(0.0), 1.0, 0.0))))))))), 1.0, 0.0, 0.0, 1.0, 0.0, log(1.0), 1.0), transpose(transpose(mat4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, abs(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0 + (1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), 1.0, 0.0, 0.0, 1.0, 0.0, log(1.0), 1.0))))), max(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))), _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 0.0, log(1.0), 1.0), transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 0.0, log(1.0), 1.0)), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (transpose(mat4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, log(1.0), 1.0)))), (_GLF_IDENTITY(transpose(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))) - 0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(54.07) : 0.0)), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 0.0, log(1.0), 1.0)), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, log(1.0), 1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, log(1.0), 1.0))))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), 0.0 + ((injectionSwitch.x)))) / 1.0) / 1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), _GLF_IDENTITY(abs(0.0), mix(float(abs(0.0)), float(_GLF_FUZZED((-32.87 * -9.0))), bool(false))))), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(966.663)))), vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), (true ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(degrees(76.32)))), 1.0))), _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3.5)), bool(false))))), 0.0, log(1.0), 1.0), transpose(transpose(mat4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), determinant(mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), float(_GLF_IDENTITY(float(round(length(normalize(vec2(1.0, 1.0))))), min(float(round(length(normalize(vec2(1.0, 1.0))))), float(round(length(normalize(vec2(1.0, 1.0))))))))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0), (mat4x3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))))), 1.0, 1.0, 1.0, 1.0)) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(90.61) : float(_GLF_IDENTITY(mat4x3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0), (mat4x3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2.8) : 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0)) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec3(1.0, 0.0, 1.0)), dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3((vec3(0.0, 1.0, 0.0))[0], (vec3(0.0, 1.0, 0.0))[1], _GLF_FUZZED(float(11765u))), vec3(_GLF_FUZZED(-1.4), _GLF_FUZZED((false ? -6.6 : 7.0)), (vec3(0.0, 1.0, 0.0))[2]), bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), vec3(1.0, 0.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 0.0, log(1.0), 1.0)))))))) > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(abs(0.0), mix(float(abs(0.0)), float(_GLF_FUZZED(-912.931)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (vec3(0.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)) - vec3(0.0, 0.0, 0.0)), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec3(1.0, 0.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y)), transpose(_GLF_IDENTITY(transpose(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(abs(0.0), mix(float(abs(0.0)), float(_GLF_FUZZED(-912.931)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (vec3(0.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)) - vec3(0.0, 0.0, 0.0)), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec3(1.0, 0.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (transpose(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(abs(0.0), mix(float(abs(0.0)), float(_GLF_FUZZED(-912.931)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), (vec3(0.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0)) - vec3(0.0, 0.0, 0.0)), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec3(1.0, 0.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y)))))))), 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 0.0, log(1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)), (_GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)), (false ? _GLF_FUZZED(0.9) : (_GLF_IDENTITY(1.0, (1.0) / 1.0))))) / 1.0) - _GLF_IDENTITY(0.0, max(0.0, 0.0)))), transpose(transpose(mat4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y)), (true ? mat3(1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, length(vec2(0.0, 0.0)), 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, length(vec2(0.0, 0.0)), 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))) + (_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), (dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))) / _GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / exp(sqrt(0.0)))) : _GLF_FUZZED(mat3(4116.2793, -836.899, -1938.7884, -5271.3681, -6119.6412, 54.88, 10.42, 5.7, -64.81))))), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0))), float(_GLF_FUZZED(9.2)), bool(_GLF_IDENTITY(false, false || (false)))))), float(_GLF_FUZZED(-1.0)), bool(false))), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(_GLF_IDENTITY(1741.9023, mix(float(_GLF_FUZZED(-52.17)), float(1741.9023), bool(_GLF_IDENTITY(true, ! (! (true)))))))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(65.56)), bool(false))), clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(65.56)), bool(false))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(65.56)), bool(false))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(65.56)), bool(false))))), 1.0, 0.0, log(1.0), 1.0))))), max(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x) / 1.0, mix(float((injectionSwitch.x) / 1.0), float(_GLF_FUZZED(9.2)), bool(false))), min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x) / 1.0, mix(float((injectionSwitch.x) / 1.0), float(_GLF_FUZZED(9.2)), bool(false))), float(mat4(_GLF_IDENTITY((injectionSwitch.x) / 1.0, mix(float((injectionSwitch.x) / 1.0), float(_GLF_FUZZED(9.2)), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x) / 1.0, mix(float((injectionSwitch.x) / 1.0), float(_GLF_FUZZED(9.2)), bool(false))), (_GLF_IDENTITY((injectionSwitch.x) / 1.0, mix(float((injectionSwitch.x) / 1.0), float(_GLF_FUZZED(9.2)), bool(false)))) - 0.0)))), determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(4.4))))), 1.0, abs(0.0), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 1.0), (false ? _GLF_FUZZED(log2(vec3(-22.44, -0.9, 6902.8219))) : vec3(1.0, 0.0, 1.0)))), dot(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), _GLF_IDENTITY(_GLF_IDENTITY((vec3(0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0)) * mat3(1.0), (true ? (vec3(0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0)) * _GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0)))) : _GLF_FUZZED(vec3(3384.6355, -902.653, 1.8)))), ((vec3(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, clamp((1.0) - 0.0, (1.0) - 0.0, (1.0) - 0.0))), 0.0)) * mat3(1.0)) / vec3(1.0, 1.0, 1.0))), vec3(1.0, 0.0, 1.0))), max(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) / vec3(1.0, 1.0, 1.0)), vec3(1.0, 0.0, 1.0)), dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0))), vec3(1.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2266.2753))), 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), min(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))))), _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(521.853))), 0.0, 0.0, 1.0, 0.0, log(1.0), 1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / 1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 1.0), (_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), vec3(_GLF_IDENTITY(mat3x4(vec3(1.0, 0.0, 1.0), 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0), mat4(1.0) * (mat3x4(vec3(1.0, 0.0, 1.0), 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0)))))) + vec3(0.0, 0.0, 0.0))), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 1.0), mix(vec3(_GLF_FUZZED(-869.330), _GLF_FUZZED(19.53), _GLF_FUZZED(-8.5)), vec3((vec3(1.0, 0.0, 1.0))[0], (vec3(1.0, 0.0, 1.0))[1], (vec3(1.0, 0.0, 1.0))[2]), bvec3(true, true, true))))), _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), (vec2(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) / vec2(1.0, 1.0)))), injectionSwitch.y), sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) + _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(radians(132.189)))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-139.451)), float(0.0), bool(true)))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), 0.0, log(1.0), 1.0), mat4(1.0) * (mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / 1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) / vec2(1.0, 1.0)))), injectionSwitch.y), sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) + _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), 0.0, _GLF_IDENTITY(log(1.0), min(log(1.0), _GLF_IDENTITY(log(1.0), min(log(1.0), log(1.0))))), 1.0)))), (transpose(mat4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), 1.0 * (_GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_FUZZED(6.7)), float((injectionSwitch.x)), bool(true))))) / 1.0), _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 0.0, abs(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x4(float(mat4(1.0, 1.0, _GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(faceforward(38.68, 55.32, distance(vec4(-4619.4073, 282.439, -5987.2849, 7960.3578), vec4(-4.3, -5.4, -3.3, -6.4)))) : cos(0.0))), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 0.0)), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, abs(1.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-0.7))))), 1.0)), 1.0)), log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-184.157)), bool(false))), 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-207.693)), float(0.0), bool(true))), 1.0))), _GLF_ONE(1.0, injectionSwitch.y))), clamp(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 0.0, abs(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x4(float(mat4(1.0, 1.0, _GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(faceforward(38.68, 55.32, distance(vec4(-4619.4073, 282.439, -5987.2849, 7960.3578), vec4(-4.3, -5.4, -3.3, -6.4)))) : cos(0.0))), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 0.0)), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, abs(1.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-0.7))))), 1.0)), 1.0)), log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-184.157)), bool(false))), 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-207.693)), float(0.0), bool(true))), 1.0))), _GLF_ONE(1.0, injectionSwitch.y))), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 0.0, abs(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x4(float(mat4(1.0, 1.0, _GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(faceforward(38.68, 55.32, distance(vec4(-4619.4073, 282.439, -5987.2849, 7960.3578), vec4(-4.3, -5.4, -3.3, -6.4)))) : cos(0.0))), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 0.0)), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, abs(1.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-0.7))))), 1.0)), 1.0)), log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-184.157)), bool(false))), 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-207.693)), float(0.0), bool(true))), 1.0))), _GLF_ONE(1.0, injectionSwitch.y))), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 0.0, abs(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x4(float(mat4(1.0, 1.0, _GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(faceforward(38.68, 55.32, distance(vec4(-4619.4073, 282.439, -5987.2849, 7960.3578), vec4(-4.3, -5.4, -3.3, -6.4)))) : cos(0.0))), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 0.0)), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, abs(1.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-0.7))))), 1.0)), 1.0)), log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-184.157)), bool(false))), 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-207.693)), float(0.0), bool(true))), 1.0))), _GLF_ONE(1.0, injectionSwitch.y))))), 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0)), (float(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0))) / cos(0.0))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(sin(0.0), 0.0 + (sin(0.0))), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(3740.5425)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), bool(true)))), 1.0, 0.0, 0.0, 1.0, 0.0, log(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(9.8, -6245.5262, 3008.5987).t)), float(1.0), bool(true)))), 1.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5079.4469)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))))), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(log(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 1.0, 1.0, 0.0, 1.0))), 1.0))), (log(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 1.0, 1.0, 0.0, 1.0))), 1.0)))) - 0.0), 1.0), transpose(transpose(mat4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), (injectionSwitch.x))), (injectionSwitch.x))) / 1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2.6) : 1.0)), 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(sin(0.0), (true ? sin(0.0) : _GLF_FUZZED(_GLF_IDENTITY(2.6, (false ? _GLF_FUZZED(vec3(-2.2, 27.73, -9.3)[0]) : 2.6))))), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat4x2(0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, cos(0.0), 1.0))), injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, log(1.0), 1.0)))), (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) ? _GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, abs(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-6.9))), 0.0), vec3(1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), _GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (0.0)), injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 0.0, log(1.0), 1.0), transpose(transpose(mat4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) * 1.0))), min((injectionSwitch.x) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) * 1.0))), _GLF_IDENTITY((injectionSwitch.x) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) * 1.0))), min((injectionSwitch.x) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) * 1.0))), (injectionSwitch.x) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) * 1.0)))))))), determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))) + 0.0))), 1.0, abs(0.0), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), max(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))), _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(108.107, -6848.7997)) : injectionSwitch))) - abs(vec2(0.0, 0.0))).y), sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 0.0, log(1.0), 1.0)))) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((mat4(-1374.3076, -77.19, 11.44, -3.3, -4.0, -3.0, -470.999, 7963.9508, -9348.2502, -37.66, -9544.9706, -6.5, -664.385, 90.99, 4.8, -1.8) / -14.95), ((mat4(-1374.3076, -77.19, 11.44, -3.3, -4.0, -3.0, -470.999, 7963.9508, -9348.2502, -37.66, -9544.9706, -6.5, -664.385, 90.99, 4.8, -1.8) / -14.95)) / mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), ((mat4(-1374.3076, -77.19, 11.44, -3.3, -4.0, -3.0, -470.999, 7963.9508, -9348.2502, -37.66, -9544.9706, -6.5, -664.385, 90.99, 4.8, -1.8) / -14.95)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))))))))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) && true)))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
             else
              {
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         do
          {
           for(int _injected_loop_counter = (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, min(0, 0)), 0))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (0)), clamp(_GLF_IDENTITY(~ (~ (0)), (~ (~ (0))) | (~ (~ (0)))), ~ (~ (0)), _GLF_IDENTITY(~ (~ (0)), (~ (~ (0))) ^ (0 << _GLF_IDENTITY(int(0), int(0)))))), ~ (_GLF_IDENTITY(~ (~ (~ (0))), 1 * _GLF_IDENTITY((~ (~ (~ (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-40162))))))), max((~ (~ (~ (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-40162))))))), (~ (~ (~ (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-40162)))))))))))))))) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 1 * (int(7))))), _GLF_IDENTITY(int(int((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(ivec4(int(7), 0, ((0 << _GLF_IDENTITY(int(8), int(8))) >> _GLF_IDENTITY(int(3), int(3))), 1))), 1 * (int(7)))), clamp(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 1 * (int(7)))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 1 * (int(7)))), (_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 1 * (int(7))))) << 0), _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 1 * (_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | 0)) - 0))))))))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(int(int((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 1 * (int(7)))), min(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 1 * (int(7)))), ~ (~ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 1 * (int(7)))), (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 1 * (int(7))))) / 1)))), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 1 * (int(7)))), int(ivec3(0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 1 * (int(7)))), 1, 0)))))))), 0 ^ (int(int((0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 1 * (int(7))))))))), int(ivec3(_GLF_IDENTITY(int(_GLF_IDENTITY(int((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(_GLF_IDENTITY(7, clamp(7, 7, 7)), 7, 7))), _GLF_IDENTITY(int(7), 1 * (int(7)))))), 1 * (int((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(_GLF_IDENTITY(7, clamp(7, 7, 7)), 7, 7))), _GLF_IDENTITY(int(7), 1 * (int(7))))))))), 0 ^ (int(int((0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), 1 * (int(7))), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), 1 * (int(7))), max(_GLF_IDENTITY(int(7), 1 * (int(7))), _GLF_IDENTITY(int(7), 1 * (int(7)))))) - (0 << _GLF_IDENTITY(int(2), int(2)))))))))), 1, 1))))))); _GLF_IDENTITY(_injected_loop_counter --, (1 | 1) * (_injected_loop_counter --)))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), max(1, 1)), int(ivec4(1, 1, 1, _GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), max(_GLF_IDENTITY(int(0), ~ (~ (int(0)))), int(0))), int(0))), max(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), min((0 >> _GLF_IDENTITY(int(0), int(0))), (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), max(int(0), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(-61158) : int(0))))))))), (0 >> _GLF_IDENTITY(int(0), int(0))))))))), 4, 64, 4);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(8736.7354, 0.6)) : (injectionSwitch)))))), vec2(mat2x4(mat2(1.0) * (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), vec2(mat2x4(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), vec2(mat2x4(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), 0.0, 0.0))))))).y, injectionSwitch.y)), determinant(_GLF_IDENTITY(mat4(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-204.997)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y), true && ((injectionSwitch.x > injectionSwitch.y)))))), false, true, false))))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.9)), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0), vec2(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, log(1.0), 0.0, 0.0, 1.0, cos(0.0))), float(vec3(float(mat4(0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, log(1.0), 0.0, 0.0, 1.0, cos(0.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y))))), 1.0))), (_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) / vec2(1.0, 1.0)))))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))) / 1.0), 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) ? _GLF_FUZZED(mat4(-725.338, 938.030, 86.74, -1.8, -796.483, 6.1, -3.5, -3.7, 4.1, -3.8, 2918.9417, 909.865, -1.3, 5.6, -27.14, 6.2)) : mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), min(max(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), max(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)))))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.8)), float(1.0), bool(true))))), mix(float(_GLF_FUZZED(-556.023)), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) / 1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) + 0.0), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0 + (_GLF_IDENTITY(clamp(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) / 1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) + 0.0), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), mix(float(_GLF_FUZZED(8768.7749)), float(clamp(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) / 1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) + 0.0), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), bool(true)))))), clamp(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(degrees(-3.7)) : 1.0)), 0.0), min(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(degrees(-3.7)) : 1.0)), 0.0), vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(degrees(-3.7)) : 1.0)), 0.0))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), bool(true))), dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), vec2(0.0, 1.0))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, abs(0.0), 0.0, 0.0, 0.0)))), round(length(normalize(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(469.915)), float(1.0), bool(true))), 1.0, 1.0)))), 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(8736.7354, 0.6)) : (injectionSwitch)))))), vec2(mat2x4(mat2(1.0) * (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-141.360), (mat2(1.0) * (injectionSwitch))[1]), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED((+ -2.2))), bvec2(true, false)))), vec2(mat2x4(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))), vec2(mat2x4(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), 0.0, 0.0))))))).y, injectionSwitch.y)), determinant(_GLF_IDENTITY(mat4(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-204.997)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0))) - vec2(0.0, 0.0))), injectionSwitch)).y), true && ((injectionSwitch.x > injectionSwitch.y)))))), false, true, false))))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.9)), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0), vec2(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, log(1.0), 0.0, 0.0, 1.0, cos(0.0))), float(vec3(float(mat4(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, log(1.0), 0.0, 0.0, 1.0, cos(0.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y))))), 1.0))), (_GLF_IDENTITY(dot(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) / vec2(1.0, 1.0)))))), mix(vec2(_GLF_FUZZED(-94.14), (_GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) / vec2(1.0, 1.0)))))))[1]), vec2((_GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) / vec2(1.0, 1.0)))))))[0], _GLF_FUZZED(8.9)), bvec2(true, false))), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.6) : dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))) / 1.0), 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x < injectionSwitch.y)))), false)))) || false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) ? _GLF_FUZZED(mat4(-725.338, 938.030, 86.74, -1.8, -796.483, 6.1, -3.5, -3.7, 4.1, -3.8, 2918.9417, 909.865, -1.3, 5.6, -27.14, 6.2)) : mat4(0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-779.048) : 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), min(max(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), max(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)))))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.8)), float(1.0), bool(true))))), mix(float(_GLF_FUZZED(-556.023)), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) / 1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) + 0.0), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0 + (_GLF_IDENTITY(clamp(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) / 1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) + 0.0), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), mix(float(_GLF_FUZZED(8768.7749)), float(clamp(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) / 1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) + 0.0), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), bool(true)))))), clamp(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(degrees(-3.7)) : 1.0)), 0.0), min(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(degrees(-3.7)) : 1.0)), 0.0), vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(degrees(-3.7)) : 1.0)), 0.0))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), bool(true))), dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), vec2(0.0, 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.8)), float(1.0), bool(true))))), mix(float(_GLF_FUZZED(-556.023)), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) / 1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) + 0.0), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0 + (_GLF_IDENTITY(clamp(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) / 1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) + 0.0), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), mix(float(_GLF_FUZZED(8768.7749)), float(clamp(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) / 1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) + 0.0), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), bool(true)))))), clamp(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(degrees(-3.7)) : 1.0)), 0.0), min(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(degrees(-3.7)) : 1.0)), 0.0), vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(degrees(-3.7)) : 1.0)), 0.0))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), bool(true))), dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), vec2(0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.8)), float(1.0), bool(true))))), mix(float(_GLF_FUZZED(-556.023)), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) / 1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) + 0.0), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0 + (_GLF_IDENTITY(clamp(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) / 1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) + 0.0), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), mix(float(_GLF_FUZZED(8768.7749)), float(clamp(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) / 1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) + 0.0), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), bool(true)))))), clamp(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(degrees(-3.7)) : 1.0)), 0.0), min(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(degrees(-3.7)) : 1.0)), 0.0), vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(degrees(-3.7)) : 1.0)), 0.0))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), bool(true))), dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), vec2(0.0, 1.0))))), _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, 0.0 + (0.0)), abs(0.0), 0.0, 0.0, 0.0)))), round(length(normalize(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(469.915)), float(1.0), bool(true))), 1.0, 1.0)))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9050.0581))), 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6.5) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(170.996)), float(injectionSwitch.x), bool(true)))))) + 0.0) > injectionSwitch.y))))
    {
    }
   else
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(0), int(0))), _GLF_IDENTITY(_GLF_IDENTITY((int(_GLF_IDENTITY(int(0), int(0)))), ~ (~ ((int(_GLF_IDENTITY(int(0), int(0))))))), (false ? _GLF_FUZZED(71379) : _GLF_IDENTITY((int(_GLF_IDENTITY(int(0), int(0)))), ~ (~ ((int(_GLF_IDENTITY(_GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0))), int(0))))))))) | (int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, 0 ^ (0))), int(0))))))), 0, 1)), 0 ^ (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 | (_GLF_IDENTITY(int(_GLF_IDENTITY(0, ((5172 & 0) << _GLF_IDENTITY(int(7), int(7))) | (0))), (int(0)) * 1))))), (int(_GLF_IDENTITY(int(0), int(0)))) | (int(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) * (int(0)), (0 >> _GLF_IDENTITY(int(6), int(6))) | (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) * (int(0)), min(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) * (int(0)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) * (int(0))))))))))))), 0, 1), ~ (_GLF_IDENTITY(~ (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 | (_GLF_IDENTITY(int(_GLF_IDENTITY(0, ((5172 & 0) << _GLF_IDENTITY(int(7), int(7))) | (0))), (int(0)) * 1))))), (int(_GLF_IDENTITY(int(0), int(0)))) | (int(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) * (int(0)), (0 >> _GLF_IDENTITY(int(6), int(6))) | (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) * (int(0)), min(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) * (int(0)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) * (int(0))))))))))))), 0, 1)), min(~ (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 | (_GLF_IDENTITY(int(_GLF_IDENTITY(0, ((5172 & 0) << _GLF_IDENTITY(int(7), int(7))) | (0))), (int(0)) * 1))))), (int(_GLF_IDENTITY(int(0), int(0)))) | (int(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) * (int(0)), (0 >> _GLF_IDENTITY(int(6), int(6))) | (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) * (int(0)), min(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) * (int(0)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) * (int(0))))))))))))), 0, 1)), ~ (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 | (_GLF_IDENTITY(int(_GLF_IDENTITY(0, ((5172 & 0) << _GLF_IDENTITY(int(7), int(7))) | (0))), (int(0)) * 1))))), (int(_GLF_IDENTITY(int(0), int(0)))) | (int(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) * (int(0)), (0 >> _GLF_IDENTITY(int(6), int(6))) | (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) * (int(0)), min(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) * (int(0)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) * (int(0))))))))))))), 0, 1))))))))))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) ^ 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(findLSB(_injected_loop_counter)) : 0)), min(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(findLSB(_injected_loop_counter)) : 0)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(findLSB(_injected_loop_counter)) : 0))))); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) || false)))))) && true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
}
