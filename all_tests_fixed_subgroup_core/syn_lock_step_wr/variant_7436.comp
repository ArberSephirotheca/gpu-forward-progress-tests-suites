#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true) && (false), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true) && (false), ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true) && _GLF_IDENTITY((false), bool(bvec3((false), true, false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((true ? mat2(1.0) * _GLF_IDENTITY((injectionSwitch), cos(vec2(0.0, 0.0)) * ((injectionSwitch))) : _GLF_FUZZED(injectionSwitch)), min(_GLF_IDENTITY((true ? mat2(1.0) * _GLF_IDENTITY((injectionSwitch), cos(vec2(0.0, 0.0)) * ((injectionSwitch))) : _GLF_FUZZED(injectionSwitch)), mix(vec2(((true ? mat2(1.0) * _GLF_IDENTITY((injectionSwitch), cos(vec2(0.0, 0.0)) * ((injectionSwitch))) : _GLF_FUZZED(injectionSwitch)))[0], ((true ? mat2(1.0) * _GLF_IDENTITY((injectionSwitch), cos(vec2(0.0, 0.0)) * ((injectionSwitch))) : _GLF_FUZZED(injectionSwitch)))[1]), vec2(_GLF_FUZZED(9.3), _GLF_FUZZED(-89.79)), bvec2(false, false))), (true ? mat2(1.0) * _GLF_IDENTITY((injectionSwitch), cos(vec2(0.0, 0.0)) * ((injectionSwitch))) : _GLF_FUZZED(injectionSwitch)))))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8.8))) > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))) && _GLF_IDENTITY(true, (true) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, true && (false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec2(false, false)), false, true)), bool(bvec2(bool(bvec3(bool(bvec2(false, false)), false, true)), true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), bool(bvec4(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false, true, true)), bool(bvec3(bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false, true, true)), true, false)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true, false, _GLF_IDENTITY(false, true && (false)))))), false, true, false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || _GLF_IDENTITY(false, bool(bvec2(false, false)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, (true) || false))), false || (bool(bool(_GLF_IDENTITY(true, (true) || false)))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))) && (true)), false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))), true))), false))), bvec3(bvec3(bvec3(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))) || false), false)))))) && (_GLF_IDENTITY(false, true && (false))))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false), true, true, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false), true, true, false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && (_GLF_IDENTITY((false) || false, ((false) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), _GLF_IDENTITY(workgroup_id, uint(uvec2(workgroup_id, 0u)))));
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 0u, 1u))) + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) / 1u, _GLF_IDENTITY(uint(uvec4((workgroup_base + subgroup_id * subgroup_size) / 1u, 1u, 1u, 0u)), (uint(uvec4((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_id * subgroup_size, (0u ^ (1u | 1u)))), min(uint(uvec2(subgroup_id * subgroup_size, (0u ^ (1u | 1u)))), uint(uvec2(subgroup_id * subgroup_size, (0u ^ (1u | 1u)))))))) / _GLF_IDENTITY(1u, ((0u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) | (1u)), 1u, 1u, 0u))) ^ 0u))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), uint(uint(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))))));
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(~ (~ (min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), clamp(~ (~ (min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), ~ (~ (min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), ~ (~ (min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))))))))), max((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u + (subgroup_local_id), (0u + (subgroup_local_id)) | (0u + (subgroup_local_id)))) + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u | (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))) % _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 1u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, int(int(1)))))) - 0)) % subgroup_size), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u)), max(_GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, int(int(1)))))) - 0), (true ? _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, int(int(1)))))) - 0) : _GLF_FUZZED(-99658)))) % subgroup_size), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u)), 0u | ((_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(0, clamp(0, 0, 0)) ^ (_GLF_IDENTITY(1, int(int(1)))))) - 0)) % subgroup_size), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, int(int(1)))))), (_GLF_IDENTITY((_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, int(int(1)))))), ((_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, int(int(1))))))) | ((_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, int(int(1))))))))) << 0) - 0)) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u)), _GLF_IDENTITY(((_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, int(int(1)))))) - _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-61381) : 0)))) % subgroup_size), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u))), ~ (~ (((_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, int(int(1)))))) - _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-61381) : 0)))) % subgroup_size), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u)))))) * 1u))) - 0u)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(false, false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true)))))))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), (injectionSwitch.x > injectionSwitch.y) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec2(4, 0), (true ? _GLF_IDENTITY(ivec2(4, 0), (false ? _GLF_FUZZED(max(ivec2(-18176, 13742), ivec2(65171, -50107))) : ivec2(4, 0))) : _GLF_FUZZED(_GLF_IDENTITY(ivec2(94889, -56036), min(ivec2(94889, -56036), ivec2(94889, -56036)))))))), clamp(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec2(4, 0), (true ? _GLF_IDENTITY(ivec2(4, 0), (false ? _GLF_FUZZED(max(ivec2(-18176, 13742), ivec2(65171, -50107))) : ivec2(4, 0))) : _GLF_FUZZED(_GLF_IDENTITY(ivec2(94889, -56036), min(ivec2(94889, -56036), ivec2(94889, -56036)))))))), _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec2(4, 0), (true ? _GLF_IDENTITY(ivec2(4, 0), (_GLF_IDENTITY(false ? _GLF_FUZZED(max(ivec2(-18176, 13742), ivec2(65171, -50107))) : ivec2(4, 0), (false ? _GLF_FUZZED(max(ivec2(-18176, 13742), ivec2(65171, -50107))) : ivec2(4, 0)) * ivec2(1, 1)))) : _GLF_FUZZED(_GLF_IDENTITY(ivec2(94889, -56036), min(ivec2(94889, -56036), ivec2(_GLF_IDENTITY(94889, 0 + (94889)), -56036)))))))), _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec2(4, 0), (true ? _GLF_IDENTITY(ivec2(4, 0), (false ? _GLF_FUZZED(max(ivec2(-18176, 13742), ivec2(65171, -50107))) : ivec2(4, 0))) : _GLF_FUZZED(_GLF_IDENTITY(ivec2(94889, -56036), min(ivec2(94889, -56036), ivec2(94889, -56036))))))))))) - 0)), _GLF_IDENTITY(min(~ (4), ~ (4)), (true ? min(~ (4), ~ (4)) : _GLF_FUZZED(bitfieldInsert(60116, -82584, 55595, 22392))))))), 64, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(4)) * 1))), _GLF_IDENTITY(4, (4) + 0))));
 uint read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), _GLF_IDENTITY((buf[virtual_gid]), uint(uvec3((buf[virtual_gid]), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) * (0u | 1u))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), _GLF_IDENTITY((buf[virtual_gid]), uint(uvec3((buf[virtual_gid]), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) * (0u | 1u))), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), _GLF_IDENTITY((buf[virtual_gid]), uint(uvec3((buf[virtual_gid]), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) * (0u | 1u)))))) ^ 0u) | 0u), (buf[virtual_gid]) / 1u), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1))))))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, int(ivec2(1, (0 ^ 1)))))), 1, 1))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1))))) ^ 0))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1))))))), (_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))))))) | (_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1))))))))))) >> 0)))) >> 0)) / 1, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (false ? _GLF_FUZZED((~ 31954)) : _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) ^ 0))))), _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0, clamp((_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0, (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0, (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0))))))) / 1), ~ (~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), max(1, 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0, max(_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0, clamp((_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0, (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0, _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0, min((_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0, (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0)))), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0)), 0 | (max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0)))), max(_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), (_GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85719) : _GLF_IDENTITY(1, ~ (~ (1)))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) ? _GLF_FUZZED(12889) : max(1, _GLF_IDENTITY(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0) ^ (1)))))) * 1), max(1, 1), max(1, 1))))) >> 0)))), _GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0)))))), _GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0, (true ? _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0, (false ? _GLF_FUZZED(3143) : (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.6), _GLF_FUZZED(898.308)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > _GLF_IDENTITY(injectionSwitch.y, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0)) : _GLF_FUZZED(floatBitsToInt(1312.7787)))))))))) : _GLF_FUZZED(-66690)))) / 1)))))), (_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(! (true), false), bvec2(bvec3(bvec2(! (true), false), false))))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, true)))) && true))))) ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))))))) / 1, ~ (~ ((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), min(_GLF_IDENTITY(max(1, 1), (true ? max(1, 1) : _GLF_FUZZED(-64210))), max(1, 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : _GLF_IDENTITY(max(1, 1), (_GLF_IDENTITY(max(1, 1), (max(1, 1)) << (0 | 0))) + 0))), max(1, 1), max(1, 1)))), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), _GLF_IDENTITY(clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1)), (clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))) / 1)))) << 0)) >> 0))))) / 1))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0))))))), _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) | (1)) : _GLF_FUZZED(8983))))))))))) / 1, ~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), ~ (~ (_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1)))))), max(1, 1), max(1, 1))))), 0 ^ ((_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), ~ (~ (_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1)))))), max(1, 1), max(1, 1))))))) >> 0))))) / 1), int(ivec3(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), ~ (~ (_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1)))))), max(1, 1), max(1, 1))))), 0 ^ ((_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), ~ (~ (_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1)))))), max(1, 1), max(1, 1))))))) >> 0))))) / 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2871) : ((_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), ~ (~ (_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1)))))), max(1, 1), max(1, 1))))), 0 ^ ((_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), ~ (~ (_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1)))))), max(1, 1), max(1, 1))))))) >> 0))))) / 1))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)) ? _GLF_FUZZED(-64851) : _GLF_IDENTITY((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))))))) / 1, ~ (~ ((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1)))), 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(76412)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))))) >> 0))))) / 1))))), 0, 0))) : _GLF_FUZZED(36570))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-67956))), 4))) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))))))) / 1, ~ (~ ((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), _GLF_IDENTITY(max(1, 1), 1 * (max(1, 1))))))) >> 0))))) / 1))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))))), clamp(_GLF_IDENTITY((4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))))), ((4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1))))))) - 0), (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))))), (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))))))))) / 1, ~ (~ ((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))))) ? _GLF_IDENTITY(_GLF_FUZZED(12889), 0 | (_GLF_FUZZED(12889))) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0))))) / 1))), int(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))))))) / 1, ~ (~ ((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0))))) / 1))), 0, 0))) : _GLF_FUZZED(36570))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1))))) | (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))))))))) / 1, ~ (~ ((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0))))) / 1))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))))))) / 1, ~ (~ ((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0))))) / 1))), int(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))))))) / 1, ~ (~ ((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0))))) / 1))), 0, 0))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))))))) / 1, ~ (~ ((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(max(1, 1), min(max(1, 1), _GLF_IDENTITY(max(1, 1), clamp(max(1, 1), max(1, 1), max(1, 1))))), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0))))) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0))))) / _GLF_IDENTITY(1, (1) >> 0)))), int(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))))))) / 1, _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0))))) / 1)), min(~ (~ ((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0))))) / 1)), ~ (~ ((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0))))) / 1))))), 0, 0)))))) : _GLF_FUZZED(36570)))) | _GLF_IDENTITY(0, ~ (~ (0)))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))))))) / 1, ~ (~ ((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED(12889) : max(1, 1))), max(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, min(1, 1)))), 1), max(1, 1))))) >> 0))))) / 1))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))))))) / 1, ~ (~ ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(_GLF_IDENTITY(4, int(int(4))))), (int(int(_GLF_IDENTITY(4, int(int(4)))))) << 0))) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0))))) / 1))), int(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))))))) / 1, ~ (~ ((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(_GLF_IDENTITY(1, (1) | (1)), 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1), ~ (_GLF_IDENTITY(~ (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1)), max(_GLF_IDENTITY(~ (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1)), (~ (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))) | 0), ~ (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1)))))))), max(1, 1), max(1, 1))))) >> 0))))) / 1))), 0, 0))) : _GLF_FUZZED(_GLF_IDENTITY(36570, 0 | (36570))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))))))) / 1, ~ (~ ((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0))))) / 1))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))))))) / 1, ~ (~ ((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0))))) / 1))), int(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))))))) / 1, ~ (~ ((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0))))) / 1))), 0, 0))) : _GLF_FUZZED(36570))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))))))) / 1, ~ (~ ((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0))))) / 1))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))))))) / 1, ~ (~ ((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0))))) / 1))), int(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))))))) / 1, ~ (~ ((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0))))) / 1))), 0, 0))) : _GLF_FUZZED(36570))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))))))) / 1, ~ (~ ((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0))))) / 1))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))))))) / 1, ~ (~ ((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0))))) / 1))), int(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))))))) / 1, ~ (~ ((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0))))) / 1))), 0, 0))) : _GLF_FUZZED(36570)))) | 0)) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))))))) / 1, ~ (~ ((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0))))) / 1))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))))))) / 1, ~ (~ ((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0))))) / 1))), int(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))))))) / 1, ~ (~ ((_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12889) : max(1, 1))), max(1, 1), max(1, 1))))) >> 0))))) / 1))), 0, 0))) : _GLF_FUZZED(36570)))))) | 0))))))), 64, _GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, (0) * 1))), (_GLF_IDENTITY(0, (0) - 0)) | 0));
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(167.343)), float(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-75.01)), (float(_GLF_FUZZED(-75.01))) - 0.0), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(true), _GLF_IDENTITY((bool(true)), ! (! ((bool(true))))) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(bool(true), _GLF_IDENTITY((bool(true)), ! (! ((bool(true))))) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))), bool(true))) > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(167.343)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(-75.01)), (float(_GLF_FUZZED(-75.01))) - 0.0), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))), float(_GLF_IDENTITY(mat3x2(mix(_GLF_IDENTITY(float(_GLF_FUZZED(-75.01)), (float(_GLF_FUZZED(-75.01))) - 0.0), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))), sin(0.0), 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat3x2(mix(_GLF_IDENTITY(float(_GLF_FUZZED(-75.01)), (float(_GLF_FUZZED(-75.01))) - 0.0), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))), sin(0.0), 1.0, 0.0, 1.0, 0.0)))))))), (float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(-75.01)), (float(_GLF_FUZZED(-75.01))) - 0.0), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))), float(_GLF_IDENTITY(mat3x2(mix(_GLF_IDENTITY(float(_GLF_FUZZED(-75.01)), (float(_GLF_FUZZED(-75.01))) - 0.0), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))), sin(0.0), 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat3x2(mix(_GLF_IDENTITY(float(_GLF_FUZZED(-75.01)), (float(_GLF_FUZZED(-75.01))) - 0.0), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))), sin(0.0), 1.0, 0.0, 1.0, 0.0))))))))) * determinant(mat4(1.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), bool(true))) > injectionSwitch.y))))))) || _GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (injectionSwitch.x < injectionSwitch.y) && true)))))))) || _GLF_IDENTITY(false, (false) || false)))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)) : _GLF_FUZZED(mix(injectionSwitch, vec2(3.1, -8.9), greaterThanEqual(uvec2(82966u, 6737u), uvec2(52584u, 120971u)))))), injectionSwitch)).y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)) : _GLF_IDENTITY(_GLF_FUZZED(mix(injectionSwitch, vec2(3.1, -8.9), greaterThanEqual(uvec2(82966u, 6737u), uvec2(52584u, 120971u)))), (_GLF_FUZZED(mix(injectionSwitch, vec2(3.1, -8.9), greaterThanEqual(uvec2(82966u, 6737u), uvec2(52584u, 120971u))))) - vec2(0.0, 0.0)))), injectionSwitch)).y), false))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, false))))))))))))), ! (! ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || _GLF_IDENTITY(false, (false) || false))), true && ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))), ! (! ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || _GLF_IDENTITY(false, (false) || false)))))), _GLF_IDENTITY(false, (false) && true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, (false) || false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)) || false)))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)) || false)))), false), true, true)))))), bool(bvec3(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))) && true)) || false)))), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))) && true)) || false)))), false)), _GLF_IDENTITY(bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))) && true)) || false)))), false)))), bool(bool(bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))) && true)) || false)))), false)))))))), true, false))))), false, true))), (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, (false) || false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))))), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))))), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false), bvec2(bvec4(bvec2(bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false), true, true)))), (bool(_GLF_IDENTITY(bvec2(bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false), bvec2(bvec4(bvec2(bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false), true, true))))) || false))))))), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)) || false, ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)) || false) && true))))), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.4)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(31.90)), float(injectionSwitch.x), bool(true)))), bool(true))) > injectionSwitch.y))))))))))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(653.102))) > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bool(bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (bool(bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))))), _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), false, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)) || false)))), false), true, true)))))), bool(bvec3(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))) && true)) || false)))), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), false, true)), (bool(bvec3(! (false), false, true))) || false))))))))) && true)) || false)))), false)), _GLF_IDENTITY(bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec2((! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true)))) || false)))) && true)) || false)))), false)))), bool(bool(bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec4(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), true, false, true)))))) && true)) || false)))), false)))))))), true, false))))), false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), ! (! (bool(bool(false))))))))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}
