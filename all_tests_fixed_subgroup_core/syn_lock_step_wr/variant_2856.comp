#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), max(gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) | (gl_WorkGroupSize), max((gl_WorkGroupSize) | (gl_WorkGroupSize), (gl_WorkGroupSize) | (gl_WorkGroupSize)))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(72.82)))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(72.82))))), (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(72.82)))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(72.82))))), (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(72.82)))))) && true), false || (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(72.82))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(72.82))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(vec2(9.1, 6.2)))), injectionSwitch)).x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(72.82)))))))))), (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(70.79)), bool(false))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(72.82)))))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(72.82)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(72.82))))), (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(72.82)))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(72.82))))), (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(72.82)))))) && true), false || (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(72.82))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(72.82))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(vec2(9.1, 6.2)))), injectionSwitch)).x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(72.82)))))))))), (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(70.79)), bool(false))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(72.82)))))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(abs(vec2(1.0, 1.0)), vec2(mat3x4(abs(vec2(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 0.0)))), injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(72.82))))), ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-8.3, 771.197)))))).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(72.82, clamp(72.82, 72.82, 72.82)))))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-8.3, 771.197)))))).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(72.82, clamp(72.82, 72.82, 72.82))))))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(72.82))))), (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))))))) / abs(vec2(1.0, 1.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : injectionSwitch.y)), (true ? injectionSwitch.y : _GLF_FUZZED(72.82)))))) && true), false || (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), injectionSwitch, injectionSwitch)))).x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(72.82), max(_GLF_FUZZED(72.82), _GLF_FUZZED(72.82))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), injectionSwitch, injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), injectionSwitch, injectionSwitch)).x), float(_GLF_FUZZED(-1.2)), bool(false))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), injectionSwitch, injectionSwitch)).x))) / 1.0), (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(72.82))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(vec2(9.1, 6.2)))), injectionSwitch)).x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(72.82)))))))))), (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(70.79)), bool(false))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(vec2(0.1, 847.842)) : injectionSwitch)).y : _GLF_FUZZED(72.82)))))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))) && true), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), true), false))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8874.3657, -1.6)) : injectionSwitch))) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0))).y)))))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))))), true), false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      barrier();
    }
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 | (int(3))))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))) * 1.0)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                barrier();
              }
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
              {
               barrier();
              }
            }
          }
         else
          {
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-42589) : _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) ^ 0), (int(4)) ^ 0))), clamp(_GLF_IDENTITY(int(4), _GLF_IDENTITY((false ? _GLF_FUZZED(-42589) : _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | 0), (_GLF_IDENTITY(int(4), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))) ? _GLF_FUZZED(_GLF_IDENTITY(int(workgroup_size), _GLF_IDENTITY((int(workgroup_size)) - 0, ~ (~ ((int(workgroup_size)) - 0))))) : int(4)))) ^ 0)), (_GLF_IDENTITY((false ? _GLF_FUZZED(-42589) : _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | 0), (_GLF_IDENTITY(int(4), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bool((! (false))))) || false))) ? _GLF_FUZZED(_GLF_IDENTITY(int(workgroup_size), _GLF_IDENTITY((int(workgroup_size)) - 0, ~ (~ ((int(workgroup_size)) - 0))))) : int(4)))) ^ 0)), max(_GLF_IDENTITY((false ? _GLF_FUZZED(-42589) : _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | 0), (_GLF_IDENTITY(int(4), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))) ? _GLF_FUZZED(_GLF_IDENTITY(int(workgroup_size), _GLF_IDENTITY((int(workgroup_size)) - 0, ~ (~ ((int(workgroup_size)) - 0))))) : int(4)))) ^ 0)), (_GLF_IDENTITY(true ? (false ? _GLF_FUZZED(-42589) : _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | 0), (_GLF_IDENTITY(int(4), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))) ? _GLF_FUZZED(_GLF_IDENTITY(int(workgroup_size), _GLF_IDENTITY((int(workgroup_size)) - 0, ~ (~ ((int(workgroup_size)) - 0))))) : int(4)))) ^ 0)) : _GLF_FUZZED(56119), ~ (~ (_GLF_IDENTITY(true ? (false ? _GLF_FUZZED(-42589) : _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | 0), (_GLF_IDENTITY(int(4), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))) ? _GLF_FUZZED(_GLF_IDENTITY(int(workgroup_size), _GLF_IDENTITY((int(workgroup_size)) - 0, ~ (~ ((int(workgroup_size)) - 0))))) : int(4)))) ^ 0)) : _GLF_FUZZED(56119), (true ? (false ? _GLF_FUZZED(-42589) : _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | 0), (_GLF_IDENTITY(int(4), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))) ? _GLF_FUZZED(_GLF_IDENTITY(int(workgroup_size), _GLF_IDENTITY((int(workgroup_size)) - 0, ~ (~ ((int(workgroup_size)) - 0))))) : int(4)))) ^ 0)) : _GLF_FUZZED(56119)) | (true ? (false ? _GLF_FUZZED(-42589) : _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | 0), (_GLF_IDENTITY(int(4), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))) ? _GLF_FUZZED(_GLF_IDENTITY(int(workgroup_size), _GLF_IDENTITY((int(workgroup_size)) - 0, ~ (~ ((int(workgroup_size)) - 0))))) : int(4)))) ^ 0)) : _GLF_FUZZED(56119)))))))), (false ? _GLF_FUZZED(-42589) : _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | 0), (_GLF_IDENTITY(int(4), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))) ? _GLF_FUZZED(_GLF_IDENTITY(int(workgroup_size), _GLF_IDENTITY((int(workgroup_size)) - 0, ~ (~ (_GLF_IDENTITY((int(workgroup_size)), clamp(_GLF_IDENTITY((int(workgroup_size)), ((int(workgroup_size))) | ((int(workgroup_size)))), (int(workgroup_size)), _GLF_IDENTITY((int(workgroup_size)), 1 * ((int(workgroup_size)))))) - 0))))) : int(4)))) ^ 0))))) | ((false ? _GLF_FUZZED(-42589) : _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | 0), (_GLF_IDENTITY(int(4), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (false)) || false))) ? _GLF_FUZZED(_GLF_IDENTITY(int(workgroup_size), _GLF_IDENTITY((int(workgroup_size)) - 0, ~ (~ ((int(workgroup_size)) - 0))))) : int(4)))) ^ 0))))), _GLF_IDENTITY(int(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) | (4))))), (false ? _GLF_FUZZED(-42589) : _GLF_IDENTITY(int(4), (int(4)) ^ 0))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-42589) : _GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)), ~ (~ _GLF_IDENTITY(((int(4))), clamp(((int(4))), ((int(4))), ((int(4))))))) ^ 0))), (false ? _GLF_FUZZED(94178) : _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(_GLF_IDENTITY(-42589, max(_GLF_IDENTITY(-42589, (false ? _GLF_FUZZED(9440) : -42589)), -42589))) : _GLF_IDENTITY(int(4), _GLF_IDENTITY((int(_GLF_IDENTITY(4, (4) / 1))), (_GLF_IDENTITY((int(_GLF_IDENTITY(4, (4) / 1))), clamp((int(_GLF_IDENTITY(4, (4) / 1))), _GLF_IDENTITY((int(_GLF_IDENTITY(4, (4) / 1))), min((int(_GLF_IDENTITY(4, (4) / 1))), (int(_GLF_IDENTITY(4, (4) / 1))))), _GLF_IDENTITY((int(_GLF_IDENTITY(4, (4) / 1))), ((int(_GLF_IDENTITY(4, (4) / 1)))) << 0)))) - (0 >> _GLF_IDENTITY(int(5), int(5)))) ^ 0))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(1 ^ 0, (1 ^ 0) * 1))); _injected_loop_counter ++)
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (bool(bool(_GLF_DEAD(false)))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) | (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), _GLF_IDENTITY(((0 >> _GLF_IDENTITY(int(1), int(1)))) | ((0 >> _GLF_IDENTITY(int(1), int(1)))), max(((0 >> _GLF_IDENTITY(int(1), int(1)))) | ((0 >> _GLF_IDENTITY(int(1), int(1)))), ((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), int(1)), (0 >> _GLF_IDENTITY(int(1), int(1))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))) | ((0 >> _GLF_IDENTITY(int(1), int(1)))))))); _injected_loop_counter --)
                {
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))
                  {
                  }
                 else
                  {
                   do
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                        {
                         barrier();
                        }
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))
                      barrier();
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
                  }
                }
              }
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 barrier();
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))) && true) || _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-5.4))), mix(float(_GLF_FUZZED(-5.3)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), (_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), max(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) / 1.0), max(injectionSwitch.x, injectionSwitch.x)))) + 0.0))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8.5)), vec2(_GLF_FUZZED(929.477), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 1.0, abs(0.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, abs(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, abs(0.0)))), abs(1.0), 0.0, 1.0, 0.0, 1.0)), vec2(0.0, 0.0) + (vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8.5)), vec2(_GLF_FUZZED(929.477), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 1.0, abs(0.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, abs(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, abs(0.0)))), abs(1.0), 0.0, 1.0, 0.0, 1.0)))), mat2(1.0) * (_GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8.5)), vec2(_GLF_FUZZED(929.477), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 1.0, abs(0.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, abs(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, abs(0.0)))), abs(1.0), 0.0, 1.0, 0.0, 1.0)), vec2(0.0, 0.0) + (vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8.5)), vec2(_GLF_FUZZED(929.477), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 1.0, abs(0.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, abs(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, abs(0.0)))), abs(1.0), 0.0, 1.0, 0.0, 1.0))))))).x, max(injectionSwitch.x, injectionSwitch.x)))), float(_GLF_FUZZED(-65.58)), bool(false)))))) - 0.0), bool(true))) > injectionSwitch.y, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), (! (_GLF_IDENTITY(true, false || (true)))) && true))))), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, true && (true)), true)))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(-3658.3221)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_IDENTITY(true, ! (! (true))))), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0)))))), injectionSwitch)).y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0)))))), injectionSwitch)).y, true, true), false))))), ! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0)))))), injectionSwitch)).y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0)))))), injectionSwitch)).y, true, true), false))))), (! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0)))))), injectionSwitch)).y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, 1.0, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), clamp(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), vec4(mat4(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (normalize(vec4(1.0, 1.0, 1.0, 1.0))) - vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))))), 0.0, 0.0, 1.0, 0.0, 1.0)))))), injectionSwitch)).y, true, true), false)))))) || false))))), bool(bvec4((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0)))))), injectionSwitch)).y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0)))))), injectionSwitch)).y, true, true), false))))), ! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0)))))), injectionSwitch)).y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0)))))), injectionSwitch)).y, true, true), false))))), (! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0)))))), injectionSwitch)).y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, 1.0, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), clamp(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), vec4(mat4(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (normalize(vec4(1.0, 1.0, 1.0, 1.0))) - vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))))), 0.0, 0.0, 1.0, 0.0, 1.0)))))), injectionSwitch)).y, true, true), false)))))) || false))))), true, true, false))), (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0)))))), injectionSwitch)).y, true, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0)))))), injectionSwitch)).y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0)))))), injectionSwitch)).y, true, true)))), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0)))))), injectionSwitch)).y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0)))))), injectionSwitch)).y, true, true)))), true)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0)))))), injectionSwitch)).y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0)))))), injectionSwitch)).y, true, true)))), true))))))))), bvec3(bvec4(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0)))))), injectionSwitch)).y, true, true), false))))), ! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, 1.0, round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), (length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0)))) / 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0)))))), injectionSwitch)).y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0)))))), injectionSwitch)).y, true, true), false))))), (! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0)))))), injectionSwitch)).y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-28.68)), float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-1.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(true))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, 1.0, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), clamp(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), vec4(mat4(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (normalize(vec4(1.0, 1.0, 1.0, 1.0))) - vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))))), 0.0, 0.0, 1.0, 0.0, 1.0)))))), injectionSwitch)).y, true, true), false)))))) || false))))), bool(bvec4((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0)))))), injectionSwitch)).y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-91.18)), bool(false))), 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0)))))), injectionSwitch)).y, true, true), false))))), ! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), min(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0 + (round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))), 0.0, 0.0, 1.0, 0.0, 1.0)))))), injectionSwitch)).y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0)))))), injectionSwitch)).y, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), true), false))))), _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0)))))), injectionSwitch)).y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, 1.0, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), clamp(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), vec4(mat4(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (normalize(vec4(1.0, 1.0, 1.0, 1.0))) - vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))))), 0.0, 0.0, 1.0, 0.0, 1.0)))))), injectionSwitch)).y, true, true), false)))))) || false, true && ((! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0)))))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0)))))), min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0)))))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0)))))))))), injectionSwitch)).y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, 1.0, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), clamp(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), vec4(mat4(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (normalize(vec4(1.0, 1.0, 1.0, 1.0))) - vec4(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))))), 0.0, 0.0, 1.0, 0.0, 1.0)))))), injectionSwitch)).y, true, true), false)))))) || false))))))), true, true, false)))) || false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true, true)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), ! (! ((_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), true, true)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))).x > injectionSwitch.y, true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, true, true)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), (bool(bvec4(true, false, true, false))) || false)))), _GLF_IDENTITY(! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))), false || (! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(true, (true) && true))))))))), ! (! ((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 0.0, 1.0, 0.0, tan(0.0), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x4(-8298.3124, 9.0, -1.6, -9339.6016, 1930.6074, -358.968, 941.714, 5.2)) : mat2x4(injectionSwitch.x, 0.0, 1.0, 0.0, tan(0.0), 1.0, 1.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y)), true, true)), _GLF_IDENTITY(! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))), false || (! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(true, (true) && true))))))))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(2.7)), bool(false))), injectionSwitch[1]))) - vec2(0.0, 0.0)).y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))), false || ((! ((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(2.7)), bool(false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.0) : _GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(2.7)), bool(false))))), injectionSwitch[1]))) - vec2(0.0, 0.0)).y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))), true, true))))))))))))))), true)))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))))), ! (! (_GLF_IDENTITY(false, true && (false))))), ! (! (false)))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])) : _GLF_FUZZED(vec2(49.66, -3.1)))).x > injectionSwitch.y))));
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), false || (true))))
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
      }
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), true && (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), (! (! (! (false)))) && true)))))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
                {
                 barrier();
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, clamp(0, 0, 0))), (int(0)) ^ (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY((_GLF_IDENTITY(int(1), 1 * (int(1)))), (true ? (_GLF_IDENTITY(int(1), 1 * (int(1)))) : _GLF_FUZZED(_injected_loop_counter))) | (int(1))), clamp(int(1), int(1), int(1))))), _GLF_IDENTITY(int(1), (int(1)) >> 0)))), _GLF_IDENTITY(int(0), 0 | (int(0)))))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
      {
       for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-88.23)), float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), bool(true)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      {
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2847.4284)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, (true) && true)))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), uint(uint(min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) ^ 0u)) + 0u), workgroup_base)))), min(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)))))) >> 0u, ((_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), min(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_size) : workgroup_base)))), workgroup_base), min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)))))) >> 0u) | ((_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), min(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)))))) >> 0u)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), uint(uint(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)))), _GLF_IDENTITY(min(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)), (min(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base))) / 1u))))) >> 0u, ((_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), clamp(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) >> 0u), _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), workgroup_base), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, uint(uvec3(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((subgroup_id ++)))), (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 0u)))) : _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), min(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_size) : workgroup_base)))), workgroup_base), min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)))))) >> 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), min(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)))))) >> 0u, 1u * ((_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), min(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)))))) >> 0u)))))), (uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))))), workgroup_base), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)))), workgroup_base), uint(uint(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)))), min(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)))))) >> 0u, ((_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), min(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_size) : workgroup_base)))), workgroup_base), min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base))), (_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), min(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_size) : workgroup_base)))), workgroup_base), min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)))) | (_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), min(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_size) : workgroup_base)))), workgroup_base), min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)))))))) >> 0u) | ((_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), min(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base))), (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), min(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base))), (_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), min(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)))) << 0u)) + (1u ^ 1u))))) >> 0u))))) | (uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), uint(uint(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)))), min(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)))), (false ? _GLF_FUZZED(workgroup_size) : (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), uint(uint(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)))), min(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)))))))) >> 0u, ((_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), min(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_size) : workgroup_base)))), workgroup_base), min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)))), workgroup_base)))))) >> 0u) | ((_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) | (workgroup_base))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), ~ (~ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))))), workgroup_base), _GLF_IDENTITY(min(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)), max(_GLF_IDENTITY(min(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)), ~ (~ (_GLF_IDENTITY(min(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)), (min(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base))) | (min(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base))))))), min(min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)))))))) >> 0u))))))))) + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) - 0u, uint(uvec3((subgroup_size) - 0u, 0u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))), max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))), min(_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))), _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size)))))) | (_GLF_IDENTITY((subgroup_size), clamp((_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size))))), (subgroup_size), (subgroup_size))))), _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), (1u & 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (subgroup_size))))) - 0u) + _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), 1u * (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, max(0u, 0u)))))))) + subgroup_local_id;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)))); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))))))
            {
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))))
                  {
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               do
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)), (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false))))) || false))) && true))));
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(1.3, _GLF_IDENTITY(-96.28, max(-96.28, -96.28))) + vec2(394.147, -1.0))) : injectionSwitch)).y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) / 1.0), injectionSwitch.y)))) || false))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   do
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.7), _GLF_FUZZED(3.3)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y))))
                        barrier();
                       do
                        {
                         barrier();
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           barrier();
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           barrier();
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             barrier();
                            }
                          }
                        }
                      }
                     barrier();
                    }
                   do
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
                      barrier();
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))))))); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
               barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))) && true, ! (! ((! (_GLF_IDENTITY(false, ! (! (false))))) && true))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))) && true, ! (! ((! (_GLF_IDENTITY(false, ! (! (false))))) && true))))), bool(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))) && true, ! (! ((! (_GLF_IDENTITY(false, ! (! (false))))) && true))))), false, false))))))));
         do
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(false))))))), (bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) || false)))))
                    barrier();
                   barrier();
                  }
                }
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true)))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               barrier();
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), true)))))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || false, (((false)) || false) && true)), true && (_GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(false, ! (! (false)))))) || false)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_IDENTITY(true, true && (true)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, true))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, true)))) || false)))), true), true)))), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), true))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) - 0.0) > injectionSwitch.y)), true, true))), true), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), false), bvec3(bvec3(bvec3(bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, (false) || false), true, false)))), false))))))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))))) && true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), false), bvec3(bvec3(bvec3(bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), false))))))), true, false, false)), (bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))), false, true, false)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, true, false)))), false), bvec3(bvec3(bvec3(bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), false))))))), true, false, false))) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))), true), true)))))))), false || ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), true))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) - 0.0) > injectionSwitch.y)), true, true))), true), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), false), bvec3(bvec3(bvec3(bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, (false) || false), true, false)))), false))))))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))))) && true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), false), bvec3(bvec3(bvec3(bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), false))))))), true, false, false)), (bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))), false, true, false)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, true, false)))), false), bvec3(bvec3(bvec3(bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), false))))))), true, false, false))) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))), true), true)))))))))) && true)))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           else
            {
            }
          }
        }
       do
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0, (0) | (0)) ^ (int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5781.5000)), bool(false))), injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))) && true)))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0)) + _GLF_IDENTITY(0, ~ (~ (0)))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               else
                {
                }
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                    }
                  }
                 barrier();
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))))))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), workgroup_base))))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)) + 0u))), uint(uvec4(subgroup_id, 0u, _GLF_IDENTITY((0u | 0u), ((0u | 0u)) << 0u), 1u))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), 0u, (0u | _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, 0u | _GLF_IDENTITY((workgroup_id), ((workgroup_id)) | 0u))) : 0u, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (true ? ~ (workgroup_id) : _GLF_FUZZED(workgroup_base))))), 0u | (workgroup_id))) : 0u, min(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))) : 0u, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))) : 0u))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 1u)), (uint(uvec4(subgroup_id, 0u, (0u | _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) ^ 0u)) | (0u)) | (workgroup_id))) : 0u, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))) : 0u, min(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))).x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u + (workgroup_id)), 0u | (workgroup_id))) : 0u, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))) : 0u))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 1u))) | (0u | 0u))) * subgroup_size) - 0u) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 1)), ~ (~ (int(ivec2(1, 1))))))), clamp((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) + 1), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> (_GLF_IDENTITY(0u, (0u) >> 0u) << _GLF_IDENTITY(uint(7u), uint(7u))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(virtual_gid)))), clamp((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(virtual_gid)))), (_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(virtual_gid)))), (_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(virtual_gid)))))))) % subgroup_size), _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), mix(vec2((vec2(vec2(injectionSwitch)))[0], (vec2(vec2(injectionSwitch)))[1]), vec2(_GLF_FUZZED(-7.1), _GLF_FUZZED(1.3)), bvec2(false, false)))), mix(vec2(_GLF_FUZZED(-10.87), _GLF_FUZZED(8398.0264)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)) ? _GLF_FUZZED(uint(-691.094)) : _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id))))) ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))), uint(3u), uint(3u))), uint(3u), uint(3u))), _GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))))), ((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))), uint(3u), uint(3u))), uint(3u), uint(3u))), _GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u)))))) | ((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))), uint(3u), uint(3u))), uint(3u), uint(3u))), _GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u)))))))), 0u, (0u | 0u), 1u))) * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, (0u | 0u), 1u))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, (0u | 0u), 1u))) * subgroup_size) | 0u)), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, (0u | 0u), 1u))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), (subgroup_id) | 0u), 0u, (0u | 0u), 1u)), min(uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), 0u, (0u | 0u), 1u)), uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), 0u, (0u | 0u), 1u)))))) + 0u) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, (0u | 0u), 1u))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), 0u, (0u | 0u), 1u)), min(uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), 0u, (0u | 0u), 1u)), uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), 0u, (0u | 0u), 1u)))))) + 0u) * subgroup_size, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, (0u | 0u), 1u))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), 0u, (0u | 0u), 1u)), min(uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), 0u, (0u | 0u), 1u)), uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), 0u, (0u | 0u), 1u)))))) + 0u) * subgroup_size, 1u, 1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, (0u | 0u), 1u))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), 0u, (0u | 0u), 1u)), min(uint(uvec4(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | 0u, ((subgroup_id) | 0u) >> 0u)), 0u, (0u | _GLF_IDENTITY(0u, (0u) >> 0u)), 1u)), uint(uvec4(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), 0u + ((subgroup_id))) | 0u), 0u, (0u | 0u), 1u)))))) + 0u) * subgroup_size))))) - 0u) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) * 1u), clamp((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)), ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)))))), (subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size)) / 1u, min((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-10.87), _GLF_FUZZED(8398.0264)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 1.0, sqrt(0.0))), max(vec2(mat2x4(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 1.0, sqrt(0.0))), vec2(mat2x4(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 1.0, sqrt(0.0)))))).y))))).y)) ? _GLF_FUZZED(uint(-691.094)) : _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id))))) ^ (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u)))))), 0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u)) | 0u), 1u))) * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, (0u | 0u), 1u))) * subgroup_size), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, (0u | 0u), 1u))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), 0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) + 0u), 0u)) | 0u), 1u)), min(uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), 0u, (0u | 0u), 1u)), uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), 0u, (0u | 0u), 1u)))))) + 0u) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, (0u | 0u), 1u))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), 0u, (0u | 0u), 1u)), min(uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), 0u, (0u | 0u), 1u)), uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), 0u, (0u | 0u), 1u)))))) + 0u) * subgroup_size, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, (0u | 0u), 1u))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), 0u, (0u | 0u), 1u)), min(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)))) - (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), 0u, (0u | 0u), 1u)), uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), 0u, (0u | 0u), _GLF_IDENTITY(1u, ~ (~ (1u))))))))) + 0u) * subgroup_size, 1u, 1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, (0u | 0u), 1u))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), 0u, (0u | 0u), 1u)), min(uint(uvec4(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | 0u, ((subgroup_id) | 0u) << (0u ^ 0u))), 0u, (0u | 0u), 1u)), uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), 0u, (0u | 0u), 1u)))))) + 0u) * subgroup_size))))) - 0u) + (_GLF_IDENTITY((subgroup_local_id + 1), clamp((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, clamp(1, 1, 1)))), ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)))))), (subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))), (subgroup_local_id + 1))) % subgroup_size)) / 1u, (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-10.87), _GLF_FUZZED(8398.0264)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)), true, true))), false)))))).y)) ? _GLF_FUZZED(uint(-691.094)) : _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id))))) ^ (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(_GLF_IDENTITY(3u, uint(uint(3u))))))))), 0u, (0u | 0u), 1u))) * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 0u, (0u | 0u), 1u), min(uvec4(subgroup_id, 0u, (0u | 0u), 1u), uvec4(subgroup_id, 0u, (0u | 0u), 1u))))) * subgroup_size), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, (0u | 0u), 1u))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), 0u, (0u | 0u), 1u)), min(uint(uvec4(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | 0u), 0u, (0u | 0u), 1u)), uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), 0u, (0u | 0u), 1u)))))) + 0u) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, (0u | 0u), 1u))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))) | 0u), 0u, (0u | 0u), 1u)), min(uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), _GLF_IDENTITY(0u, max(0u, 0u)), (0u | 0u), 1u)), uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), 0u, (0u | 0u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) - 0u))))))) + 0u) * subgroup_size, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, (0u | 0u), 1u))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), 0u, (0u | 0u), 1u)), min(uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), 0u, (0u | 0u), 1u)), uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), 0u, (0u | 0u), 1u)))))) + 0u, ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), 0u, (0u | 0u), 1u)), min(uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), 0u, (_GLF_IDENTITY(0u | 0u, clamp(_GLF_IDENTITY(0u | 0u, 0u ^ (_GLF_IDENTITY(0u | 0u, (false ? _GLF_FUZZED(175409u) : 0u | 0u)))), 0u | 0u, 0u | 0u))), 1u)), uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), 0u, (0u | 0u), 1u)))))) + 0u) - 0u)) * subgroup_size, 1u, 1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, (0u | 0u), 1u))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), 0u, (0u | 0u), 1u)), min(uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), 0u, (0u | 0u), 1u)), uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), 0u, (0u | 0u), 1u)))))) + 0u) * subgroup_size))))) - 0u) + (_GLF_IDENTITY((subgroup_local_id + 1), clamp((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)), ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)))))), (subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size)) / 1u)));
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (false ? _GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec3(_GLF_FUZZED(-56380), 1, 1)))) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ _GLF_IDENTITY(0, int(ivec3(0, 1, (0 << _GLF_IDENTITY(int(4), int(4))))))), int(int(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0))))) << 0), (false ? _GLF_FUZZED(57314) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ _GLF_IDENTITY(0, int(ivec3(0, 1, (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), ~ (~ (0 << _GLF_IDENTITY(int(4), int(4)))))))))), int(int(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0))))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(_GLF_IDENTITY(-56380, max(_GLF_IDENTITY(-56380, 0 ^ (-56380)), _GLF_IDENTITY(-56380, _GLF_IDENTITY(int(ivec2(-56380, 0)), min(int(ivec2(-56380, 0)), int(ivec2(-56380, 0))))))))) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), _GLF_IDENTITY((_GLF_FUZZED(-56380)) ^ _GLF_IDENTITY(0, int(ivec3(0, 1, (0 << _GLF_IDENTITY(int(4), int(4)))))), min((_GLF_FUZZED(-56380)) ^ _GLF_IDENTITY(0, int(ivec3(0, 1, (0 << _GLF_IDENTITY(int(4), int(4)))))), _GLF_IDENTITY((_GLF_FUZZED(-56380)) ^ _GLF_IDENTITY(0, int(ivec3(0, 1, (0 << _GLF_IDENTITY(int(4), int(4)))))), ((_GLF_FUZZED(-56380)) ^ _GLF_IDENTITY(0, int(ivec3(0, 1, (0 << _GLF_IDENTITY(int(4), int(4))))))) / 1)))), int(int(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0))))) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ _GLF_IDENTITY(0, int(ivec3(0, 1, (0 << _GLF_IDENTITY(int(4), int(4))))))), int(int(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0))))) << 0))))), _GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0))))), min(_GLF_IDENTITY(_GLF_FUZZED(-56380), min(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_IDENTITY(_GLF_FUZZED(-56380), (true ? _GLF_FUZZED(-56380) : _GLF_FUZZED(clamp(-2565, 40386, 95888))))) | (_GLF_FUZZED(-56380)))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-56380, (_GLF_IDENTITY(-56380, _GLF_IDENTITY(int(int(-56380)), _GLF_IDENTITY((int(int(-56380))), clamp(_GLF_IDENTITY((int(int(-56380))), max((int(int(-56380))), (int(int(-56380))))), _GLF_IDENTITY((int(int(-56380))), ((int(int(-56380)))) >> 0), (int(int(-56380))))) / 1))) << _GLF_IDENTITY(0, (0) * 1))), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) | (0 ^ 0)), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0)))) / 1), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-56380, (_GLF_IDENTITY(-56380, clamp(-56380, -56380, -56380))) - 0)), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0))), (_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0)))) / 1), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))), (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0))), (_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0)))) / _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-41342) : 1))), _GLF_IDENTITY(0, (0) | 0), int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ ivec3(0, 0, 0))) / ivec3(1, 1, 1))), 1 * (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0))), (_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0)))) / 1), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(_GLF_IDENTITY(-56380, (-56380) << 0)), 1, 0, 0))), (_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0)))) / 1), 0, int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(float(0.0))), injectionSwitch.x))), _GLF_IDENTITY((ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0))), (_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0)))) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0))))))), (_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, _GLF_IDENTITY(0, (0) << 0))))) / 1)) + _GLF_IDENTITY(0, (0) - 0)), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), (ivec3(1, 1, 1) ^ ivec3(1, 1, 1)) | ((ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0))), (_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0)))) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0))))))), (_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, _GLF_IDENTITY(0, (0) << 0))))) / 1)) + _GLF_IDENTITY(0, (0) - 0)), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))) ^ ivec3(0, 0, 0))), max((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(_GLF_IDENTITY(-56380, (-56380) << 0)), 1, 0, 0))), (_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0)))) / 1), 0, int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(float(0.0))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0))), (_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0)))) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0))), (_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0)))) / 1)) ^ (0 << _GLF_IDENTITY(int(6), int(6)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(0, 0))))))))), (_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0)))) / 1)) + 0), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ ivec3(0, 0, 0))), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-56380, (-56380) << 0)), min(_GLF_FUZZED(_GLF_IDENTITY(-56380, (-56380) << 0)), _GLF_FUZZED(_GLF_IDENTITY(-56380, (-56380) << 0)))), 1, _GLF_IDENTITY(0, clamp(0, 0, 0)), 0))), (_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0)))) / 1), 0, int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(float(0.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))), (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0))), (_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0)))) / 1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0))))))), (_GLF_IDENTITY(_GLF_FUZZED(-56380), _GLF_IDENTITY(int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0)), clamp(_GLF_IDENTITY(int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0)), (int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0))) << 0), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0)), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0)))))) / 1)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0))))))), (_GLF_IDENTITY(_GLF_FUZZED(-56380), _GLF_IDENTITY(int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0)), clamp(_GLF_IDENTITY(int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0)), (int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0))) << 0), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0)), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0)))))) / 1))) / 1) + 0), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ ivec3(0, 0, 0))))) / ivec3(1, 1, 1)))))))), _GLF_IDENTITY(_GLF_FUZZED(-56380), min(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-56380, (true ? -56380 : _GLF_FUZZED((- 86464)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(-56380, (true ? -56380 : _GLF_FUZZED((- 86464)))), (_GLF_IDENTITY(-56380, (true ? -56380 : _GLF_FUZZED((- 86464))))) * 1), _GLF_IDENTITY(-56380, (true ? -56380 : _GLF_FUZZED((- 86464)))), _GLF_IDENTITY(-56380, (true ? -56380 : _GLF_FUZZED((- 86464)))))))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_IDENTITY(_GLF_FUZZED(-56380), min(_GLF_IDENTITY(_GLF_FUZZED(-56380), 0 | (_GLF_FUZZED(-56380))), _GLF_FUZZED(-56380))), 1, 0, 0))), (_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(-56380)), min(~ (_GLF_FUZZED(-56380)), ~ (_GLF_FUZZED(-56380)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(81575, 0 + (81575))) : _GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), min(_GLF_IDENTITY(_GLF_FUZZED(-56380), 0 | (_GLF_FUZZED(-56380))), _GLF_FUZZED(-56380))), 1, 0, _GLF_IDENTITY(0, (0) ^ 0))))) | 0))))), _GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), int(int(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0))))) << 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), int(int(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0))))) << 0), 0 | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), int(int(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0))))) << 0), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), int(int(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0))))) << 0))), int(ivec2(int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), int(int(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0))))) << 0))), 0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), int(int(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0))))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), int(int(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0))))) << 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), int(int(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0))))) << 0), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), int(int(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0))))) << 0))), int(ivec2(int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), int(int(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0))))) << 0))), 0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), int(int(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0))))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), int(int(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0))))) << 0)))), (false ? _GLF_FUZZED(22070) : (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), int(int(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0))))) << 0), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), int(int(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0))))) << 0))), int(ivec2(int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), int(int(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0))))) << 0))), 0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), int(int(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0))))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), int(int(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0))))) << 0))))))) / 1))), 0 | (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), int(int(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), int(int(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0)))))) + 0) << 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), int(int(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0))))) << 0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), int(int(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0))))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), int(int(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), int(int(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), int(int(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0))))))) << _GLF_IDENTITY(0, (0) / 1))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), min(_GLF_IDENTITY(_GLF_FUZZED(-56380), max(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) << 0), _GLF_FUZZED(-56380))), _GLF_FUZZED(-56380))), int(_GLF_IDENTITY(ivec4(_GLF_FUZZED(-56380), 1, _GLF_IDENTITY(0, max(0, 0)), 0), (_GLF_IDENTITY(ivec4(_GLF_FUZZED(-56380), 1, _GLF_IDENTITY(0, max(0, 0)), 0), (ivec4(_GLF_IDENTITY(_GLF_FUZZED(-56380), _GLF_IDENTITY(int(int(_GLF_FUZZED(-56380))), max(int(int(_GLF_FUZZED(-56380))), int(int(_GLF_FUZZED(-56380)))))), 1, _GLF_IDENTITY(0, max(0, 0)), 0)) / ivec4(1, 1, 1, 1))) >> ivec4(0, 0, 0, 0)))))), min(_GLF_IDENTITY(_GLF_FUZZED(-56380), min(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0))), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-56380, 1 * (-56380))), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0))), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-56380, (_GLF_IDENTITY(-56380, 0 ^ (-56380))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0)))) / 1), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), int(_GLF_IDENTITY(ivec4(_GLF_FUZZED(-56380), 1, 0, 0), ~ (~ (ivec4(_GLF_FUZZED(-56380), 1, 0, 0)))))), (_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) + 0))), 0)))) / _GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), _GLF_IDENTITY(1, 0 ^ (1)), 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), 1 * (_GLF_IDENTITY(_GLF_FUZZED(-56380), (false ? _GLF_FUZZED(max(-86618, -21121)) : _GLF_FUZZED(-56380))))), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0)))) / 1), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ ivec3(0, 0, 0))) / ivec3(1, 1, 1)), ivec3(0, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, 0 | (0)), 0)))), _GLF_IDENTITY(0, (0) >> 0)) | (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0))), (_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0)))) / 1), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0))), (_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_IDENTITY(_GLF_FUZZED(-56380), 1 * (_GLF_FUZZED(-56380))), 1, 0, 0)))) / 1), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))), (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) * 1)) | 0), int(ivec4(_GLF_IDENTITY(_GLF_FUZZED(-56380), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(-56380), 0 ^ (_GLF_FUZZED(-56380)))))), 1, 0, 0)))) / 1), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ ivec3(0, 0, 0))) / ivec3(1, 1, 1))))), 1 * (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0))), (_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0)))) / 1), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-56380, (-56380) ^ 0)), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0)))), (true ? ~ (_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0)))) : _GLF_FUZZED(-40153))))), (_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0)))) / 1), 0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))), (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-43050) : _GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_FUZZED(-56380), 1, 0, 0)))))) / 1), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ ivec3(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) | (0))))) / ivec3(1, 1, 1)))))))), _GLF_IDENTITY(_GLF_FUZZED(-56380), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_IDENTITY(_GLF_FUZZED(-56380), min(_GLF_IDENTITY(_GLF_FUZZED(-56380), 0 | (_GLF_FUZZED(-56380))), _GLF_FUZZED(-56380))), 1, 0, 0))), (_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_IDENTITY(_GLF_FUZZED(-56380), min(_GLF_IDENTITY(_GLF_FUZZED(-56380), 0 | (_GLF_FUZZED(-56380))), _GLF_FUZZED(-56380))), 1, 0, 0)))) | 0)), (min(_GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_IDENTITY(_GLF_FUZZED(-56380), min(_GLF_IDENTITY(_GLF_FUZZED(-56380), 0 | (_GLF_FUZZED(-56380))), _GLF_FUZZED(-56380))), 1, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_IDENTITY(_GLF_FUZZED(-56380), min(_GLF_IDENTITY(_GLF_FUZZED(-56380), 0 | (_GLF_FUZZED(-56380))), _GLF_FUZZED(-56380))), 1, 0, 0))), clamp(_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_IDENTITY(_GLF_FUZZED(-56380), min(_GLF_IDENTITY(_GLF_FUZZED(-56380), 0 | (_GLF_FUZZED(-56380))), _GLF_FUZZED(-56380))), 1, 0, 0))), _GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_IDENTITY(_GLF_FUZZED(-56380), min(_GLF_IDENTITY(_GLF_FUZZED(-56380), 0 | (_GLF_FUZZED(-56380))), _GLF_FUZZED(-56380))), 1, 0, 0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_IDENTITY(_GLF_FUZZED(-56380), min(_GLF_IDENTITY(_GLF_FUZZED(-56380), 0 | (_GLF_FUZZED(-56380))), _GLF_IDENTITY(_GLF_FUZZED(-56380), (_GLF_FUZZED(-56380)) << 0))), 1, 0, 0))), (_GLF_IDENTITY(_GLF_FUZZED(-56380), int(ivec4(_GLF_IDENTITY(_GLF_FUZZED(-56380), min(_GLF_IDENTITY(_GLF_FUZZED(-56380), 0 | (_GLF_FUZZED(-56380))), _GLF_FUZZED(-56380))), 1, 0, 0)))) - 0)))) | 0))) | 0))))))) >> _GLF_IDENTITY((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(7), int(7)), (0 >> _GLF_IDENTITY(int(7), int(7))) | 0)), int(ivec2((0 >> _GLF_IDENTITY(int(7), int(7))), 1)))) : 4))) + 0), 64, 4);
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)), false || (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))], read, _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (_GLF_IDENTITY(4, 0 | (4)))) >> 0))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) ^ (0 >> _GLF_IDENTITY(int(5), int(5))))) / 1), 4);
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
