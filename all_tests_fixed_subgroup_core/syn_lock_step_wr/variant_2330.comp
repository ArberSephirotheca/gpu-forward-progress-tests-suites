#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_2 {
 bvec3 _f0;
} ;

struct _GLF_struct_1 {
 mat4x2 _f0;
 uvec4 _f1;
 ivec3 _f2;
 ivec3 _f3;
 ivec4 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_0 {
 ivec3 _f0;
 mat4x2 _f1;
 vec3 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 vec4 _f3;
 float _f4;
 uint subgroup_size;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) && _GLF_IDENTITY(true, ! (! (true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) && _GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) && _GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))) || false)) || false)), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, true && (false)), ((false) || false) && _GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || false, (_GLF_IDENTITY((false) || false, ((false) || false) && true)) && _GLF_IDENTITY(true, ! (! (true)))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) && _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) && true))))), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, ((false) || false) && true)) && _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false)) && true)) || false)), false, false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, false)), false || (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) + _GLF_ZERO(0.0, injectionSwitch.x)), 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) + _GLF_ZERO(0.0, injectionSwitch.x)), 1.0) : _GLF_FUZZED(vec4(-3114.5880, _GLF_IDENTITY(104.615, max(104.615, 104.615)), 5.5, -9067.7543)))))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) + _GLF_ZERO(0.0, injectionSwitch.x)), 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) + _GLF_ZERO(0.0, injectionSwitch.x)), 1.0), clamp(_GLF_IDENTITY(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) + _GLF_ZERO(0.0, injectionSwitch.x)), 1.0), clamp(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) + _GLF_ZERO(0.0, injectionSwitch.x)), 1.0), vec4(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) + _GLF_ZERO(0.0, injectionSwitch.x)), 1.0), vec4(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) + _GLF_ZERO(0.0, injectionSwitch.x)), 1.0))), vec4(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) + _GLF_ZERO(0.0, injectionSwitch.x)), 1.0), vec4(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) + _GLF_ZERO(0.0, injectionSwitch.x)), 1.0))) : _GLF_FUZZED(vec4(-3114.5880, 104.615, 5.5, -9067.7543)))))).y)) || false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_3(_GLF_struct_0(ivec3(1), mat4x2(1.0), vec3(1.0), mat2x3(1.0)), _GLF_struct_1(mat4x2(1.0), _GLF_IDENTITY(uvec4(1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(1u))), ivec3(1), ivec3(_GLF_IDENTITY(1, (1) + 0)), ivec4(1), mat2x3(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-6.8))), 0.0 + (1.0)))))), _GLF_struct_2(bvec3(true)), vec4(1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), float(mat2x3(max(1.0, 1.0), 0.0, 1.0, 1.0, determinant(mat3(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 0.0 + (0.0))), float(_GLF_FUZZED((6849.1878 / 751.576))), bool(false))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0)))), gl_SubgroupSize));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, _GLF_IDENTITY(true, (true) || false)), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), true))))), bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), true, false))), true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * round(length(normalize(vec2(1.0, 1.0)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(56.65)))) / 1.0), 0.0, 0.0, 0.0))) > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && _GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)))) && _GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)))) && _GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, false))), _GLF_IDENTITY(true, true && (true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))))), ! (! ((! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)))) && _GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) || false))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y) && true), false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, (0.0) * 1.0), tan(0.0), 0.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), mat2x3(mat4(mat2x3(_GLF_IDENTITY(0.0, (0.0) * 1.0), tan(0.0), 0.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))))))), 1.0))), float(_GLF_FUZZED(916.134)), bool(false)))) > injectionSwitch.y) && true), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false))))))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ! (! ((injectionSwitch.x > injectionSwitch.y) && true)))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), true), false)))))))))))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, max(1.0, 1.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5.9, -8.6)) : injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5.9, -8.6)) : injectionSwitch)).x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.1) : injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), ! (! ((injectionSwitch.x < injectionSwitch.y))))), true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))), false, true))))), _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(ldexp(vec2(-985.618, -4.5), (ivec2(-96370, 3027) & -932))))).y)) && ((injectionSwitch.x < injectionSwitch.y))), ! (! ((injectionSwitch.x < injectionSwitch.y))))), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4((workgroup_id), 0u, 1u, _GLF_IDENTITY(1u, (1u) - 0u)), (uvec4(_GLF_IDENTITY((workgroup_id), uint(uvec4((workgroup_id), 1u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) | (4u))), uint(4u))), 0u))), 0u, 1u, 1u)) | (uvec4((workgroup_id), 0u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : 1u))) << 0u)))), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(uvec4((workgroup_id), 0u, 1u, _GLF_IDENTITY(1u, (1u) - 0u)), (uvec4(_GLF_IDENTITY((workgroup_id), uint(uvec4((workgroup_id), 1u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 0u))), 0u, _GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), ((~ (1u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u)) | (uvec4((workgroup_id), 0u, 1u, _GLF_IDENTITY(1u, (1u) << 0u))))))), 0u + (uint(_GLF_IDENTITY(uvec4((workgroup_id), _GLF_IDENTITY(0u, max(0u, 0u)), 1u, 1u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) + 0u)) | 0u), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | 0u)) | 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | 0u))), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) | (0u)))), _GLF_IDENTITY(1u, 0u ^ (1u)), 1u)) | (uvec4(_GLF_IDENTITY((workgroup_id), max((workgroup_id), (_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u))))))), 0u, 1u, 1u))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((workgroup_id), 0u, 1u, 1u), (uvec4((workgroup_id), _GLF_IDENTITY(0u, ~ (~ (0u))), 1u, 1u)) | (uvec4((workgroup_id), 0u, 1u, 1u)))), _GLF_IDENTITY(0u, uint(uint(0u))) + (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4((workgroup_id), _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, 1u, 0u, 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 1u, 0u, 0u), clamp(uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 0u, 0u), uvec4(0u, 1u, 0u, 0u), _GLF_IDENTITY(uvec4(0u, 1u, 0u, 0u), max(uvec4(0u, 1u, 0u, 0u), uvec4(0u, 1u, 0u, 0u))))), ~ (~ (uvec4(0u, 1u, 0u, 0u))))) ^ uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(mix(workgroup_id, workgroup_id, false)) : 0u)))))), 1u, 1u), (uvec4((workgroup_id), 0u, 1u, 1u)) | (_GLF_IDENTITY(uvec4((workgroup_id), 0u, 1u, 1u), (uvec4((workgroup_id), 0u, 1u, 1u)) / uvec4(1u, 1u, 1u, 1u)))), _GLF_IDENTITY((uvec4((workgroup_id), 0u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 1u)))) | (_GLF_IDENTITY(1u, _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(workgroup_id)), min((true ? 1u : _GLF_FUZZED(workgroup_id)), _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(workgroup_id)), ((true ? 1u : _GLF_FUZZED(workgroup_id))) | ((true ? _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) ^ 0u), (~ (subgroup_local_id)) | 0u)))) : 1u)), 1u, 0u)), ~ (~ (uint(uvec3(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 0u))))))) ^ 0u) : _GLF_FUZZED(workgroup_id))))))))))) | (uvec4(_GLF_IDENTITY((workgroup_id), uint(uvec2(_GLF_IDENTITY((workgroup_id), ~ (~ ((workgroup_id)))), 1u))), 0u, _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) * 1u), 1u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec4(24523u, 64913u, 155598u, 65536u)) : (uvec4((workgroup_id), 0u, 1u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(workgroup_id)), min((_GLF_IDENTITY(true, false || (true)) ? 1u : _GLF_FUZZED(workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY((true ? 1u : _GLF_FUZZED(workgroup_id)), ((true ? 1u : _GLF_FUZZED(workgroup_id))) | ((true ? _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id)))) : 1u)), 1u, 0u)), ~ (~ _GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 0u))), ((uint(uvec3(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 0u)))) | ((uint(uvec3(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 0u))))))))) ^ 0u) : _GLF_FUZZED(workgroup_id)))), (_GLF_IDENTITY((true ? 1u : _GLF_FUZZED(workgroup_id)), ((true ? 1u : _GLF_FUZZED(workgroup_id))) | ((true ? _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id)))) : 1u)), 1u, 0u)), ~ (~ _GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 0u))), ((uint(uvec3(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 0u)))) | ((uint(uvec3(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 0u))))))))) ^ 0u) : _GLF_FUZZED(workgroup_id))))) ^ 0u)))))))) | (uvec4((workgroup_id), 0u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)))))), _GLF_IDENTITY(clamp(uint(_GLF_IDENTITY(uvec4((workgroup_id), 0u, 1u, 1u), (uvec4((workgroup_id), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u)) | (uvec4((workgroup_id), 0u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? _GLF_IDENTITY(1u, max(1u, 1u)) : _GLF_FUZZED(workgroup_id), uint(_GLF_IDENTITY(uvec4(true ? _GLF_IDENTITY(1u, max(1u, 1u)) : _GLF_FUZZED(workgroup_id), (1u & 1u), 1u, ((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u)))), clamp(uvec4(true ? _GLF_IDENTITY(1u, max(1u, 1u)) : _GLF_FUZZED(workgroup_id), (1u & 1u), 1u, ((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u)))), uvec4(true ? _GLF_IDENTITY(1u, max(1u, 1u)) : _GLF_FUZZED(workgroup_id), (1u & 1u), 1u, ((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u)))), uvec4(true ? _GLF_IDENTITY(1u, max(1u, 1u)) : _GLF_FUZZED(workgroup_id), (1u & 1u), 1u, ((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u)))))))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((workgroup_id), 0u, 1u, 1u), _GLF_IDENTITY((uvec4((workgroup_id), 0u, 1u, 1u)) | (uvec4((workgroup_id), 0u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u)), 1u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((uvec4((workgroup_id), 0u, 1u, 1u)) | (uvec4((workgroup_id), 0u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u)), 1u)), max((uvec4((workgroup_id), 0u, 1u, 1u)) | (uvec4((workgroup_id), 0u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u)), 1u)), (uvec4((workgroup_id), 0u, 1u, 1u)) | (uvec4((workgroup_id), 0u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u)), 1u))))), (~ (_GLF_IDENTITY((uvec4((workgroup_id), 0u, 1u, 1u)) | (uvec4((workgroup_id), 0u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u)), 1u)), max((uvec4((workgroup_id), 0u, 1u, 1u)) | (uvec4((workgroup_id), 0u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u)), 1u)), (uvec4((workgroup_id), 0u, 1u, 1u)) | (uvec4((workgroup_id), 0u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u)), 1u)))))) | (~ (_GLF_IDENTITY((uvec4((workgroup_id), 0u, 1u, 1u)) | (uvec4((workgroup_id), 0u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u)), 1u)), max((uvec4((workgroup_id), 0u, 1u, 1u)) | (uvec4((workgroup_id), 0u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u)), 1u)), (uvec4((workgroup_id), 0u, 1u, 1u)) | (uvec4((workgroup_id), 0u, _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u)), (false ? _GLF_FUZZED((workgroup_id --)) : _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u)), min(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u)), _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u)))))), 1u))))))))))), (uint(_GLF_IDENTITY(uvec4((workgroup_id), 0u, 1u, 1u), (uvec4((workgroup_id), 0u, 1u, 1u)) | (uvec4((_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) ^ 0u))), (false ? _GLF_FUZZED((72515u / workgroup_id)) : _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) ^ 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), clamp(1u, 1u, 1u)), 1u))))) - 0u), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4((workgroup_id), 0u, 1u, 1u), (uvec4((workgroup_id), 0u, 1u, 1u)) * uvec4(1u, 1u, 1u, 1u)), (uvec4((workgroup_id), 0u, 1u, 1u)) | (uvec4((_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))), 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(clamp(1u, 1u, 1u), 1u * (clamp(1u, 1u, 1u))), (clamp(1u, 1u, 1u)) / 1u))))), 1u))))), min(clamp(uint(_GLF_IDENTITY(uvec4((workgroup_id), 0u, 1u, 1u), (uvec4((workgroup_id), 0u, 1u, 1u)) | (uvec4((workgroup_id), 0u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((workgroup_id), 0u, 1u, 1u), (uvec4((workgroup_id), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 1u * (0u)), 0u)), 1u, 1u)) | (uvec4((workgroup_id), 0u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)))), (uint(_GLF_IDENTITY(uvec4((workgroup_id), _GLF_IDENTITY(0u, (0u) << 0u), 1u, 1u), _GLF_IDENTITY((uvec4((workgroup_id), 0u, 1u, _GLF_IDENTITY(1u, (1u) << 0u))) | (uvec4((_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u)), 0u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY((uvec4((workgroup_id), 0u, 1u, 1u)), ((uvec4((workgroup_id), 0u, 1u, 1u))) / uvec4(1u, 1u, 1u, 1u)) | (uvec4((_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u)), 0u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u)), 1u)), uvec4(0u, 0u, 0u, 0u) ^ ((uvec4((workgroup_id), 0u, 1u, 1u)) | (uvec4((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((workgroup_id), (0u ^ 1u), 0u, 0u), (_GLF_IDENTITY(uvec4((workgroup_id), (0u ^ 1u), 0u, 0u), clamp(uvec4((workgroup_id), (0u ^ 1u), 0u, 0u), uvec4((workgroup_id), (0u ^ 1u), 0u, 0u), uvec4((workgroup_id), (0u ^ 1u), 0u, 0u)))) * uvec4(1u, 1u, 1u, 1u))), uint(uvec2(uint(_GLF_IDENTITY(uvec4((workgroup_id), (0u ^ 1u), 0u, 0u), (_GLF_IDENTITY(uvec4((workgroup_id), (0u ^ 1u), 0u, 0u), clamp(uvec4((workgroup_id), (0u ^ 1u), 0u, 0u), uvec4((workgroup_id), (0u ^ 1u), 0u, 0u), uvec4((workgroup_id), (0u ^ 1u), 0u, 0u)))) * uvec4(1u, 1u, 1u, 1u))), 0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((workgroup_id), (0u ^ 1u), 0u, 0u), (_GLF_IDENTITY(uvec4((workgroup_id), (0u ^ 1u), 0u, 0u), clamp(uvec4((workgroup_id), (0u ^ 1u), 0u, 0u), uvec4((workgroup_id), (0u ^ 1u), 0u, 0u), uvec4((workgroup_id), (0u ^ _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | (1u))), 0u, 0u)))) * uvec4(1u, 1u, 1u, 1u))), uint(uvec2(uint(_GLF_IDENTITY(uvec4((workgroup_id), (0u ^ 1u), 0u, 0u), (_GLF_IDENTITY(uvec4((workgroup_id), (0u ^ 1u), 0u, 0u), clamp(uvec4((workgroup_id), (0u ^ 1u), 0u, 0u), uvec4((workgroup_id), (0u ^ 1u), 0u, 0u), uvec4((workgroup_id), (0u ^ 1u), 0u, 0u)))) * uvec4(1u, 1u, 1u, 1u))), 0u)))) - 0u)) | 0u)), 0u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)))), (uvec4((workgroup_id), 0u, 1u, 1u)) | (uvec4((_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u)), 0u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))))) - 0u), uint(_GLF_IDENTITY(uvec4((workgroup_id), 0u, 1u, 1u), (uvec4((_GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))), 0u, 1u, 1u)) | (uvec4((workgroup_id), 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), ~ (~ (_GLF_IDENTITY(clamp(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | 0u)) ^ 0u)), (clamp(1u, 1u, 1u)) / 1u))))), 1u))))), clamp(uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(workgroup_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_id : _GLF_FUZZED(subgroup_local_id)))), 0u, 1u, 1u), (uvec4((workgroup_id), 0u, 1u, 1u)) | (uvec4((workgroup_id), 0u, _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), clamp(1u, 1u, 1u)), 1u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((workgroup_id), 0u, 1u, 1u), (uvec4((workgroup_id), 0u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u)) | (_GLF_IDENTITY(uvec4((workgroup_id), 0u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) / 1u), 1u)), 1u), max(uvec4((workgroup_id), 0u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), uvec4((workgroup_id), 0u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((workgroup_id), 0u, 1u, 1u), (uvec4((workgroup_id), 0u, 1u, 1u)) | (uvec4((_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u)), 0u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)))), min(uint(_GLF_IDENTITY(uvec4((workgroup_id), 0u, 1u, 1u), _GLF_IDENTITY((uvec4((workgroup_id), 0u, 1u, 1u)), ~ (~ ((uvec4((workgroup_id), 0u, 1u, 1u))))) | (uvec4((_GLF_IDENTITY(workgroup_id, (workgroup_id) | _GLF_IDENTITY(0u, (0u) / 1u))), 0u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u)), 0u, 1u, 1u), (uvec4((workgroup_id), 0u, 1u, 1u)) | (uvec4((_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u)), 0u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)))), (true ? uint(_GLF_IDENTITY(uvec4((workgroup_id), 0u, 1u, 1u), (uvec4((workgroup_id), 0u, 1u, 1u)) | (uvec4((_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u)), 0u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)))) : _GLF_FUZZED(subgroup_id)))))) - 0u), uint(_GLF_IDENTITY(uvec4((workgroup_id), 0u, 1u, 1u), (uvec4((workgroup_id), 0u, 1u, 1u)) | (uvec4((workgroup_id), 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(clamp(1u, 1u, 1u), ~ (~ (_GLF_IDENTITY(clamp(1u, 1u, 1u), (clamp(1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u)) / 1u)))), (_GLF_IDENTITY(clamp(1u, 1u, 1u), ~ (~ (_GLF_IDENTITY(clamp(1u, 1u, 1u), (clamp(1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(70730u)))))), 1u)), 1u)) / 1u))))) * 1u)), 1u))))))))))))) ^ 0u)) | 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * _GLF_struct_replacement_4._f0.subgroup_size + _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size + ((subgroup_local_id + 1) % _GLF_struct_replacement_4._f0.subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size + ((subgroup_local_id + 1) % _GLF_struct_replacement_4._f0.subgroup_size), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, (subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size) - 0u), clamp(subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, (subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size) << 0u))) + ((subgroup_local_id + 1) % _GLF_struct_replacement_4._f0.subgroup_size), (workgroup_base + subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size + ((subgroup_local_id + 1) % _GLF_struct_replacement_4._f0.subgroup_size)) + 0u)) >> 0u)) | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, min(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_4._f0.subgroup_size, min(_GLF_struct_replacement_4._f0.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_4._f0.subgroup_size, max(_GLF_struct_replacement_4._f0.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_4._f0.subgroup_size, (_GLF_struct_replacement_4._f0.subgroup_size) / 1u))))), _GLF_IDENTITY((true ? subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size : _GLF_FUZZED(subgroup_id)), uint(uint((true ? subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size : _GLF_FUZZED(subgroup_id)))))), _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, clamp(subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_4._f0.subgroup_size, min(_GLF_struct_replacement_4._f0.subgroup_size, _GLF_struct_replacement_4._f0.subgroup_size)))))) + ((subgroup_local_id + 1) % _GLF_struct_replacement_4._f0.subgroup_size))), 0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size + ((subgroup_local_id + 1) % _GLF_struct_replacement_4._f0.subgroup_size), _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_4._f0.subgroup_size, (_GLF_struct_replacement_4._f0.subgroup_size) | 0u))), min(_GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size + ((subgroup_local_id + 1) % _GLF_struct_replacement_4._f0.subgroup_size)), (true ? (workgroup_base + subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size + ((subgroup_local_id + 1) % _GLF_struct_replacement_4._f0.subgroup_size)) : _GLF_FUZZED(workgroup_size))), (workgroup_base + subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size + ((subgroup_local_id + 1) % _GLF_struct_replacement_4._f0.subgroup_size)))) | (workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, (true ? subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, clamp(subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_4._f0.subgroup_size, (_GLF_struct_replacement_4._f0.subgroup_size) << 0u), subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size))), min(_GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, (_GLF_IDENTITY(true, false || (true)) ? subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, clamp(subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size))), ~ (_GLF_IDENTITY(~ (min(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, (_GLF_IDENTITY(true ? subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size : _GLF_FUZZED(subgroup_id), (true ? subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size : _GLF_FUZZED(subgroup_id)) / 1u))), _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, clamp(subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size)))), ~ (~ (~ (min(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, (true ? subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, clamp(subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, (subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size) >> 0u), _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_struct_replacement_4._f0.subgroup_size))))))))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, (true ? subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size : _GLF_FUZZED(subgroup_id))), clamp(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, (true ? subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, (true ? subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, (true ? subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size : _GLF_FUZZED(subgroup_id))), ~ (~ (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, (true ? subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size : _GLF_FUZZED(subgroup_id)))))))), _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, clamp(subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size))), max(_GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, (true ? subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, clamp(subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size))), _GLF_IDENTITY((min(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, (true ? subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, clamp(subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size)))), 0u | ((min(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, (true ? subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, clamp(subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size)))))) - 0u), min(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, (_GLF_IDENTITY(true ? subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size : _GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(true ? subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size : _GLF_FUZZED(subgroup_id), (true ? subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size : _GLF_FUZZED(subgroup_id)) << (0u | 0u))) - 0u))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_4._f0.subgroup_size, min(_GLF_struct_replacement_4._f0.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_4._f0.subgroup_size, min(_GLF_struct_replacement_4._f0.subgroup_size, _GLF_struct_replacement_4._f0.subgroup_size)))), _GLF_IDENTITY(clamp(subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size), (clamp(subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size)) | (clamp(subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size, subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_4._f0.subgroup_size, min(_GLF_struct_replacement_4._f0.subgroup_size, _GLF_struct_replacement_4._f0.subgroup_size)), subgroup_id * _GLF_struct_replacement_4._f0.subgroup_size)))))))))) + ((subgroup_local_id + 1) % _GLF_struct_replacement_4._f0.subgroup_size)))));
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false))))), bool(bool(bool(bvec4(false, false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
}
