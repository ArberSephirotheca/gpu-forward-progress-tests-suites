#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     if(_GLF_DEAD(false))
      continue;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       do
        {
         return;
         if(_GLF_DEAD(false))
          break;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       return;
      }
     return;
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           return;
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 else
  {
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 0 + (int(4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * _GLF_IDENTITY(subgroup_size, (subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      continue;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) - 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
            {
            }
           else
            {
             barrier();
            }
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      break;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec3(bool(bvec2(false, true)), true, true))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = _GLF_IDENTITY((1 ^ (1 ^ 1)), (true ? (1 ^ (1 ^ 1)) : _GLF_FUZZED(-85430))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               barrier();
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                return;
              }
             else
              {
              }
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     return;
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                    }
                  }
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              return;
             break;
            }
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) && true))
          barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        break;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) * 1u)], _GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(1)), clamp(uint(uint(1)), uint(uint(1)), uint(uint(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), (true ? int(int(1)) : _GLF_FUZZED(-63654))))))))), (uint(_GLF_IDENTITY(uint(uint(1)), _GLF_IDENTITY(clamp(uint(uint(1)), uint(uint(1)), uint(uint(1))), (_GLF_IDENTITY(clamp(uint(uint(1)), uint(uint(1)), uint(uint(1))), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(uint(uint(1)), uint(uint(1)), uint(uint(1))), clamp(clamp(uint(uint(1)), uint(uint(1)), uint(uint(1))), clamp(uint(uint(1)), uint(uint(1)), uint(uint(1))), _GLF_IDENTITY(clamp(uint(uint(1)), uint(uint(1)), uint(uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) << (75247 & 0))))), ~ (~ (clamp(uint(uint(1)), uint(uint(1)), uint(uint(1)))))))), uint(_GLF_IDENTITY(uvec3(clamp(uint(uint(1)), uint(uint(1)), uint(uint(1))), 0u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(clamp(uint(uint(1)), uint(uint(1)), uint(uint(1))), 0u, 1u)))))) / 1u)) >> 0u)))) << 0u)), _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + 0), _GLF_IDENTITY(4, max(4, 4)))), 64, 4);
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, ~ (~ (0)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
             if(_GLF_DEAD(false))
              continue;
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        break;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             barrier();
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
                {
                 for(int _injected_loop_counter = (81351 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   return;
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         return;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             barrier();
             if(_GLF_DEAD(false))
              break;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          break;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      break;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_DEAD(false))
            break;
           continue;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           do
            {
             barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        continue;
      }
    }
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (_GLF_IDENTITY(~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))) >> ivec4(0, 0, 0, 0)), _GLF_IDENTITY(~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))))))))))) + ivec4(0, 0, 0, 0))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) | (4))))) | (_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (4) << 0))))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))) + ivec4(0, 0, 0, 0))), _GLF_IDENTITY(1 * (int(_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, int(ivec3(4, 0, 1))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y))))))) + ivec4(0, 0, 0, 0)))), clamp(1 * (int(_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), injectionSwitch.y))), ~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))) + ivec4(0, 0, 0, _GLF_IDENTITY(0, (0) >> (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 + (_GLF_IDENTITY(int(4), int(4)))))))))), 1 * (int(_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), (_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))) + ivec4(0, 0, 0, 0)))), 1 * (int(_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6532.2602)), float(injectionSwitch.y), bool(true)))))))))) + ivec4(0, 0, 0, 0)))))))))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (_GLF_IDENTITY(~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))) >> ivec4(0, 0, 0, 0)), _GLF_IDENTITY(~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))))))))))) + ivec4(0, 0, 0, _GLF_IDENTITY(0, (1 | 1) * (0))), max((_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (_GLF_IDENTITY(~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))) >> ivec4(0, 0, 0, 0)), _GLF_IDENTITY(~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))))))))))) + ivec4(0, 0, 0, _GLF_IDENTITY(0, (1 | 1) * (0))), _GLF_IDENTITY((_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (_GLF_IDENTITY(~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))) >> ivec4(0, 0, 0, 0)), _GLF_IDENTITY(~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))))))))))) + ivec4(0, 0, 0, _GLF_IDENTITY(0, (1 | 1) * (0))), ((_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (_GLF_IDENTITY(~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))) >> ivec4(0, 0, 0, 0)), _GLF_IDENTITY(~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))))))))))) + ivec4(0, 0, 0, _GLF_IDENTITY(0, (1 | 1) * (0)))) >> ivec4(0, 0, 0, 0)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), 0 + _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), ~ (~ ((_GLF_IDENTITY(4, (4) | (4))))))) | ((_GLF_IDENTITY(4, (4) | (4))))))) | (_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (4) << 0))))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))), (true ? (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), 0 + _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), ~ (~ ((_GLF_IDENTITY(4, (4) | (4))))))) | ((_GLF_IDENTITY(4, (4) | (4))))))) | (_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (4) << 0))))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))) : _GLF_FUZZED((94428 % clamp(ivec4(-66025, -58686, -68103, -49249), ivec4(13847, 26925, 64893, -5364), ivec4(-77676, -23905, 27773, 93208)))))) + ivec4(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) | (0)) : _GLF_FUZZED(ivec3(50318, -58207, 83184)[0]))), 0)), 0, 0, 0))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), 0 + _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), ~ (~ ((_GLF_IDENTITY(4, (4) | (4))))))) | ((_GLF_IDENTITY(4, (4) | (4))))))) | (_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (4) << 0))))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))), (true ? (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), 0 + _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), ~ (~ ((_GLF_IDENTITY(4, (4) | (4))))))) | ((_GLF_IDENTITY(4, (4) | (4))))))) | (_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (4) << 0))))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))) : _GLF_FUZZED((94428 % clamp(ivec4(-66025, -58686, -68103, -49249), ivec4(13847, 26925, 64893, -5364), ivec4(-77676, -23905, 27773, 93208)))))) + ivec4(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) | (0)) : _GLF_FUZZED(ivec3(50318, -58207, 83184)[0]))), 0)), 0, 0, 0))), (int(_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), 0 + _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), ~ (~ ((_GLF_IDENTITY(4, (4) | (4))))))) | ((_GLF_IDENTITY(4, (4) | (4))))))) | (_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (4) << 0))))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))), (true ? (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), 0 + _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), ~ (~ ((_GLF_IDENTITY(4, (4) | (4))))))) | ((_GLF_IDENTITY(4, (4) | (4))))))) | (_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (4) << 0))))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))) : _GLF_FUZZED((94428 % clamp(ivec4(-66025, -58686, -68103, -49249), ivec4(13847, 26925, 64893, -5364), ivec4(-77676, -23905, 27773, 93208)))))) + ivec4(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) | (0)) : _GLF_FUZZED(ivec3(50318, -58207, 83184)[0]))), 0)), 0, 0, 0)))) ^ 0)), (int(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), 0 + _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), ~ (~ ((_GLF_IDENTITY(4, (4) | (4))))))) | ((_GLF_IDENTITY(4, (4) | (4))))))) | (_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (4) << 0))))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))), (true ? (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), 0 + _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), ~ (~ ((_GLF_IDENTITY(4, (4) | (4))))))) | ((_GLF_IDENTITY(4, (4) | (4))))))) | (_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (4) << 0))))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))) : _GLF_FUZZED((94428 % clamp(ivec4(-66025, -58686, -68103, -49249), ivec4(13847, 26925, 64893, -5364), ivec4(-77676, -23905, 27773, 93208)))))) + ivec4(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) | (0)) : _GLF_FUZZED(ivec3(50318, -58207, 83184)[0]))), 0)), 0, 0, 0))), (int(_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), 0 + _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), ~ (~ ((_GLF_IDENTITY(4, (4) | (4))))))) | ((_GLF_IDENTITY(4, (4) | (4))))))) | (_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (4) << 0))))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))), (true ? (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), 0 + _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), ~ (~ ((_GLF_IDENTITY(4, (4) | (4))))))) | ((_GLF_IDENTITY(4, (4) | (4))))))) | (_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (4) << 0))))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))) : _GLF_FUZZED((94428 % clamp(ivec4(-66025, -58686, -68103, -49249), ivec4(13847, 26925, 64893, -5364), ivec4(-77676, -23905, 27773, 93208)))))) + ivec4(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) | (0)) : _GLF_FUZZED(ivec3(50318, -58207, 83184)[0]))), 0)), 0, 0, 0)))) ^ 0))) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(1 * (int(_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))) + ivec4(0, 0, 0, 0)))), clamp(1 * _GLF_IDENTITY((int(_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(ivec4(4, 0, _GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x))), int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))) + ivec4(_GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), (true ? (0) | (0) : _GLF_FUZZED(-2718)))), 0, 0, 0)))), ((int(_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))) + ivec4(_GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, (0) | 0), 0, 0))))) | ((int(_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))) + ivec4(_GLF_IDENTITY(0, (0) | (0)), 0, 0, 0)))))), 1 * (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ivec4(0, 0, 0, 0) | (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))))) >> ivec4(0, 0, 0, 0)), (_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))) + ivec4(0, 0, 0, 0)))), 1 * (int(_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))) + ivec4(0, 0, 0, 0)))))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))).y))), (_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-107.874)), bool(false))), injectionSwitch.y))), ~ (_GLF_IDENTITY(~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))) | (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))))), (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))) >> ivec4(0, 0, 0, 0)), _GLF_IDENTITY(~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))))))))))) + ivec4(0, 0, 0, 0))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) | (4))))) | (_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (4) << 0))))), _GLF_IDENTITY(0, (0) | 0), 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))) + ivec4(0, 0, 0, 0))), _GLF_IDENTITY(1 * (int(_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))) + ivec4(0, 0, 0, 0)))), clamp(1 * (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(ivec4(4, 0, 0, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), (int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) | (0 & 70421))), ~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))) + ivec4(0, 0, 0, 0))), 1 * (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(ivec4(4, 0, 0, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), (int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) | (0 & 70421))), ~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))) + ivec4(0, 0, 0, 0))), clamp(int(_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(ivec4(4, 0, 0, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, 1.0, abs(1.0), 0.0, 1.0, tan(0.0), 1.0, 0.0)), (float(mat4x2(1.0, 1.0, abs(1.0), 0.0, 1.0, tan(0.0), 1.0, 0.0))) / 1.0)), injectionSwitch.y)))), (int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) | (0 & 70421))), ~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))) + ivec4(0, 0, 0, 0))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(ivec4(4, 0, 0, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), (int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) | (0 & 70421))), ~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))) + _GLF_IDENTITY(ivec4(0, 0, 0, 0), max(ivec4(0, 0, 0, 0), ivec4(0, 0, 0, 0))))), max(int(_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(ivec4(4, 0, 0, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), (int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) | (0 & 70421))), ~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-81.45))), injectionSwitch.y))))))) + ivec4(0, 0, 0, 0))), int(_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(ivec4(4, 0, 0, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), (int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) | (0 & 70421))), ~ (~ (ivec4(4, _GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))) + ivec4(0, 0, 0, 0))))), int(_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(ivec4(4, 0, 0, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), (int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) | (0 & 70421))), ~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))) + ivec4(0, 0, 0, 0)))))))), 1 * (int(_GLF_IDENTITY(ivec4(4, _GLF_IDENTITY(0, int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) << 0)), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(0, (0) << 0))), (~ (int(_GLF_IDENTITY(0, (0) << 0)))) ^ 0))))), 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))) + ivec4(0, 0, 0, 0)))), 1 * (int(_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) / 1.0), injectionSwitch.y))), (_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (_GLF_IDENTITY(~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), min(~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))) | (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))))))) + ivec4(0, 0, 0, 0)))))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (_GLF_IDENTITY(~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(~ _GLF_IDENTITY((ivec4(4, _GLF_IDENTITY(0, (0) + 0), 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), ivec4(0, 0, 0, 0) + ((ivec4(4, _GLF_IDENTITY(0, (0) + 0), 0, int(_GLF_ONE(1.0, injectionSwitch.y)))))), (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))) >> ivec4(0, 0, 0, 0)), _GLF_IDENTITY(~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))))))))))) + ivec4(0, 0, 0, 0))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, _GLF_IDENTITY(0, (0 ^ 0) ^ (0)), 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (4) | (4))))) | (_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (4) << 0))))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))) + ivec4(0, 0, 0, 0))), _GLF_IDENTITY(1 * (int(_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))) + ivec4(_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(1), int(1))) ^ (_GLF_IDENTITY(0, ~ (~ (0))))), 0, 0, 0)))), clamp(1 * (int(_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))) + ivec4(0, 0, 0, 0)))), 1 * (int(_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))) + ivec4(0, 0, 0, 0)))), 1 * (int(_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(ivec4(4, 0, 0, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7596.5350)))), float(_GLF_FUZZED(1147.2099)), bool(false)))))), ~ (~ (ivec4(4, 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))) + ivec4(0, 0, 0, 0))))))))))))), _GLF_IDENTITY(64, max(64, 64)), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) - (0 << _GLF_IDENTITY(int(5), int(5)))))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
}
