#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) && true), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))))) && true)), bvec3(bvec3(bvec3(false, true, true))))))) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, ! (! (true))) && (! ((injectionSwitch.x > injectionSwitch.y))))))))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0), mat4x2(_GLF_IDENTITY(mat4x3(mat4x2(injectionSwitch, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0)), transpose(transpose(mat4x3(mat4x2(injectionSwitch, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0))))))))).x > injectionSwitch.y))), bool(bvec4(! (((injectionSwitch.x > injectionSwitch.y))), true, true, false)))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) || _GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))) || _GLF_IDENTITY(false, ! (! (false))), true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.5)), vec2(_GLF_FUZZED(-4.6), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), (true ? injectionSwitch : _GLF_FUZZED(vec2(8.4, 0.5)))).y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || _GLF_IDENTITY(false, ! (! (false))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))) ^ ((1u ^ 1u) >> _GLF_IDENTITY(uint(6u), uint(6u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id), ~ (~ ((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_local_id)))) >> 0u)) : subgroup_local_id)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) | (clamp(subgroup_size, subgroup_size, subgroup_size)))), max(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) | (clamp(subgroup_size, subgroup_size, subgroup_size)))), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) | (clamp(subgroup_size, subgroup_size, subgroup_size)))))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))) + 1) % subgroup_size, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_IDENTITY(false, bool(bvec2(false, true))))), (bool(bvec4(false, true, true, _GLF_IDENTITY(false, bool(bvec2(false, true)))))) || false), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false)))))), (! ((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false))))))) && true)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_IDENTITY(false, bool(bvec2(false, true))))), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false)))))), (! ((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false))))))) && true)), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false)))))), (! ((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false))))))) && true)), false, true)), (bool(bvec3(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false)))))), (! ((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false))))))) && true)), false, true))) || false))))))), ! (! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, (false) && true), false))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true))))))))))) && true)) || false))), bool(bvec2(bool(bvec4(false, true, true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true))))))))))) && true)) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true))))))))))) && true)) || false)))))), true))), false || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false)))))), (! ((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && _GLF_IDENTITY((bool(bvec4(false, true, true, false))), ! (! ((bool(bvec4(false, true, true, false)))))))))) && true))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, true, false)), true && (bool(bvec4(false, true, true, false)))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, true, false)), true && (bool(bvec4(false, true, true, false))))), ((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, true, false)), true && (bool(bvec4(false, true, true, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) || false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_IDENTITY(false, bool(bvec2(false, true))))), (bool(bvec4(false, true, true, _GLF_IDENTITY(false, bool(bvec2(false, true)))))) || false), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false)))))), (! ((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false))))))) && true)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_IDENTITY(false, bool(bvec2(false, true))))), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false)))))), (! ((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false))))))) && true)), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false)))))), (! ((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false))))))) && true)), false, true)), (bool(bvec3(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false)))))), (! ((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false))))))) && true)), false, true))) || false))))))), ! (! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, (false) && true), false))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true))))))))))) && true)) || false))), bool(bvec2(bool(bvec4(false, true, true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true))))))))))) && true)) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true))))))))))) && true)) || false)))))), true))), false || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false)))))), (! ((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && _GLF_IDENTITY((bool(bvec4(false, true, true, false))), ! (! ((bool(bvec4(false, true, true, false)))))))))) && true))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, true, false)), true && (bool(bvec4(false, true, true, false)))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, true, false)), true && (bool(bvec4(false, true, true, false))))), ((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, true, false)), true && (bool(bvec4(false, true, true, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) || false)), bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_IDENTITY(false, bool(bvec2(false, true))))), (bool(bvec4(false, true, true, _GLF_IDENTITY(false, bool(bvec2(false, true)))))) || false), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false)))))), (! ((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false))))))) && true)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_IDENTITY(false, bool(bvec2(false, true))))), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false)))))), (! ((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false))))))) && true)), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false)))))), (! ((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false))))))) && true)), false, true)), (bool(bvec3(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false)))))), (! ((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false))))))) && true)), false, true))) || false))))))), ! (! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, (false) && true), false))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true))))))))))) && true)) || false))), bool(bvec2(bool(bvec4(false, true, true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true))))))))))) && true)) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true))))))))))) && true)) || false)))))), true))), false || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false)))))), (! ((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && _GLF_IDENTITY((bool(bvec4(false, true, true, false))), ! (! ((bool(bvec4(false, true, true, false)))))))))) && true))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, true, false)), true && (bool(bvec4(false, true, true, false)))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, true, false)), true && (bool(bvec4(false, true, true, false))))), ((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, true, false)), true && (bool(bvec4(false, true, true, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) || false)))))) && true), ! (! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_IDENTITY(false, bool(bvec2(false, true))))), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(false, true, true, false))) || false), true && (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), false || (bool(bvec4(false, true, false, false))))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))), true, false)))))), (! ((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) && true))))), true, true, false))))))) && true)), ((_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(false, true, true, false))) || false), true && (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), false || (bool(bvec4(false, true, false, false))))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))), true, false)))))), (! ((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) && true))))), true, true, false))))))) && true))) && true))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_IDENTITY(false, bool(bvec2(false, true))))), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec2(true, false))), true, false)), true && (bool(bvec4(false, true, true, false))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_IDENTITY(false, true && (false)))), true && (bool(bvec4(false, true, true, false)))))), (! _GLF_IDENTITY(((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false)))))), bool(_GLF_IDENTITY(bvec3(((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false)))))), false, true), bvec3(bvec3(bvec3(((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false)))))), false, true))))))), bool(bvec2(bool(_GLF_IDENTITY(((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false)))))), bool(_GLF_IDENTITY(bvec3(((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false)))))), false, true), bvec3(bvec3(bvec3(((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false)))))), false, true))))))), false)))))) && true))))))), ! (! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec2(bvec2(bvec2(bvec2(false, true))))))), bvec2(bvec4(bvec2(false, true), false, false))), true, true))))))))))) && true)) || false))), bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, true, true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, (true) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true)))))), false, false)))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) || false)))) || _GLF_IDENTITY(false, (false) && true)))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bvec4(false, true, true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, (true) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true)))))), false, false)))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) || false)))) || _GLF_IDENTITY(false, (false) && true)))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2(bool(bvec4(false, true, true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, (true) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true)))))), false, false)))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) || false)))) || _GLF_IDENTITY(false, (false) && true)))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bvec4(false, true, true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, (true) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true)))))), false, false)))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) || false)))) || _GLF_IDENTITY(false, (false) && true)))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2(bool(bvec4(false, true, true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, (true) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true)))))), false, false)))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) || false)))) || _GLF_IDENTITY(false, (false) && true)))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bvec4(false, true, true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, (true) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true)))))), false, false)))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) || false)))) || _GLF_IDENTITY(false, (false) && true)))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2(bool(bvec4(false, true, true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, (true) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true)))))), false, false)))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) || false)))) || _GLF_IDENTITY(false, (false) && true)))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))), true, true)))))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))) || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false)))))), (! ((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false))))))) && true)), (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, false || (true)), false)), true && (bool(bvec4(false, true, _GLF_IDENTITY(true, (true) || false), false)))))), (! ((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false))))))) && _GLF_IDENTITY(true, ! (! (true)))))) || false)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), _GLF_IDENTITY(true, ! (! (true))) && (bool(bvec4(false, true, _GLF_IDENTITY(true, (true) && true), false)))))), (! ((_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false))))))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) || false))))), _GLF_IDENTITY(! (! (bool(false))), bool(_GLF_IDENTITY(bool(! (! _GLF_IDENTITY((bool(false)), false || ((bool(false)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (! _GLF_IDENTITY((bool(false)), false || ((bool(false)))))), (bool(! (! _GLF_IDENTITY((bool(false)), false || ((bool(false))))))) && true)), (bool(_GLF_IDENTITY(bool(! (! _GLF_IDENTITY((bool(false)), false || ((bool(false)))))), (bool(! (! _GLF_IDENTITY((bool(false)), false || ((bool(false))))))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (! (bool(false))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(false)), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), ! (! (bool(_GLF_IDENTITY(false, (false) || false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(false)), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), ! (! (bool(_GLF_IDENTITY(false, (false) || false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), ! (! (bool(_GLF_IDENTITY(false, (false) || false))))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * determinant(mat2(1.0, sqrt(0.0), 1.0, cos(0.0)))))))), ((_GLF_IDENTITY(! (bool(false)), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), ! (! (bool(_GLF_IDENTITY(false, (false) || false))))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * determinant(mat2(1.0, sqrt(0.0), 1.0, cos(0.0))))))))) && true)) && true)))))))), (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(false, false || (false))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(false)), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), ! (! (bool(_GLF_IDENTITY(false, (false) || false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(false)), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), ! (! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false))))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * determinant(mat2(1.0, sqrt(0.0), 1.0, cos(0.0)))))))), ((_GLF_IDENTITY(! (bool(false)), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)), ! (! (bool(_GLF_IDENTITY(false, (false) || false))))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * determinant(mat2(1.0, sqrt(0.0), 1.0, cos(0.0))))))))) && true)) && true))))))))) && true))))) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : workgroup_id))) ^ 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : workgroup_id))) ^ 0u)), (_GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : workgroup_id))) ^ 0u))) | (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : workgroup_id))) ^ 0u)), (_GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : workgroup_id))) ^ 0u))) >> 0u))))) : (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), subgroup_local_id + 1))) % subgroup_size)));
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, (64) | 0)) / (1 & 1), max((_GLF_IDENTITY(64, (64) | 0)) / (1 & 1), (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(64, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) - 0), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(-35149) : int(0))))))), min(int(ivec4(64, 0, 0, ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))), int(ivec4(64, 0, 0, ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))))))) | 0)) / (1 & 1))), max(_GLF_IDENTITY((_GLF_IDENTITY(64, (64) | 0)) / (1 & 1), max((_GLF_IDENTITY(64, (64) | 0)) / (1 & 1), (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(64, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) - 0), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(-35149) : int(0))))))), min(int(ivec4(64, 0, 0, ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))), int(ivec4(64, 0, 0, ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))))))) | 0)) / (1 & 1))), _GLF_IDENTITY((_GLF_IDENTITY(64, (64) | 0)) / (1 & 1), max((_GLF_IDENTITY(64, (64) | 0)) / (1 & 1), (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(64, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) - 0), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(-35149) : int(0))))))), min(int(ivec4(64, 0, 0, ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))), int(ivec4(64, 0, 0, ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))))))) | 0)) / (1 & 1)))))), _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(ivec2(-73627)[0]))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, ~ (_GLF_IDENTITY(~ ((4) / 1), clamp(~ ((4) / 1), _GLF_IDENTITY(~ ((4) / 1), (~ ((4) / 1)) - 0), ~ ((4) / 1)))))), 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) || false))) ? injectionSwitch.y : _GLF_FUZZED(dot(2.1, -78.26)))), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-35.98) : (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) / 1.0)) / _GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch.y) * 1.0)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], read, 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY(float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * 1.0)) / 1.0))) / cos(0.0)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(6.6) : 0.0)))))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)))) / cos(0.0)), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), mix(float((_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), float(_GLF_FUZZED(-853.649)), bool(false))) / cos(0.0), _GLF_IDENTITY(mix(float((_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), float(_GLF_FUZZED((-5.9 / -55.74))), bool(false)), clamp(mix(float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), float(vec2(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), determinant(mat2(exp(0.0), 0.0, 0.0, 1.0)))))) / cos(0.0)), float(_GLF_FUZZED((_GLF_IDENTITY(-5.9, mix(float(-5.9), float(_GLF_FUZZED(-483.017)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) / -55.74))), bool(false)), mix(float((_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), float(_GLF_FUZZED((-5.9 / -55.74))), bool(false)), mix(float((_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7815.5311) : 0.0)), 0.0, 1.0)))) / cos(0.0)), float(_GLF_FUZZED((-5.9 / -55.74))), bool(false)))))), true)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.7)), bool(false))), 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_ONE(1.0, injectionSwitch.y), 1.0))))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) - _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0 * (_GLF_IDENTITY(1.0, (1.0) / 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_ONE(1.0, injectionSwitch.y), 1.0))))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) - _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), vec4(0.0, 0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(vec4(843.129, 57.36, -6437.4496, -6.9)) : vec4(1.0, 1.0, 0.0, 1.0))), vec4(0.0, 0.0, 1.0, 0.0))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_ONE(1.0, injectionSwitch.y), 1.0))))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) - _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), ((_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) - _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)))) / exp(0.0)))), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_ONE(1.0, injectionSwitch.y), 1.0))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) - _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)))), (false ? _GLF_FUZZED(-2.4) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) - _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))))))), false), true))))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false, bool(bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) - _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), (1.0) - 0.0), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.0) : 1.0)), 0.0)), dot(vec4(1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / abs(1.0)), 1.0), vec4(0.0, 0.0, 1.0, 0.0)))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.6) : 1.0))), float(_GLF_FUZZED(2.2)), bool(false)), max(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.6) : 1.0))), float(_GLF_FUZZED(2.2)), bool(false)), max(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.6) : 1.0))), float(_GLF_FUZZED(2.2)), bool(false)), mix(float(mix(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.6) : 1.0))), float(_GLF_FUZZED(2.2)), bool(false))), float(_GLF_FUZZED(-4326.0169)), bool(false))), mix(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.6) : 1.0))), float(_GLF_FUZZED(2.2)), bool(false)))), mix(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.6) : 1.0))), float(_GLF_FUZZED(2.2)), bool(false))))), 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), true)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))) - 0.0))) / cos(0.0)), true)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), true)))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), true))))))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), true)))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, _GLF_IDENTITY(1.0, (1.0) - determinant(mat4(0.0, 0.0, 0.0, 1.0, log(1.0), 0.0, 0.0, 1.0, 0.0, log(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), true))))))) && true))) || false)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(cosh(vec2(-1.3, 7.7))))).y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), false, false), bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), false, false)))))), true)))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0))))), true))))))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(860.338), _GLF_FUZZED(7.4)), bvec2(false, false))).x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bvec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) - 0.0)) / cos(0.0)), true)))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, _GLF_IDENTITY(1.0, (1.0) - determinant(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(length(vec4(-7.9, 5748.5343, -630.310, -13.86))) : _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), max(float(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))))), 1.0, log(1.0), 0.0, 0.0, 1.0, 0.0, log(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0))), _GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 0.0, 0.0), (mat4x3(0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 0.0, 0.0)) * mat4(1.0)))), injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.2)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / _GLF_IDENTITY(cos(0.0), (cos(0.0)) - 0.0)), true))))))) && true))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.6) : 1.0))), float(_GLF_FUZZED(2.2)), bool(false)), max(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.6) : 1.0))), float(_GLF_FUZZED(2.2)), bool(false)), max(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.6) : 1.0))), float(_GLF_FUZZED(2.2)), bool(false)), mix(float(mix(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.6) : 1.0))), float(_GLF_FUZZED(2.2)), bool(false))), float(_GLF_FUZZED(-4326.0169)), bool(false))), mix(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.6) : 1.0))), float(_GLF_FUZZED(2.2)), bool(false)))), mix(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.6) : 1.0))), float(_GLF_FUZZED(2.2)), bool(false))))), 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), true)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))) - 0.0))) / cos(0.0)), true)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), true)))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), true))))))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), true)))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, _GLF_IDENTITY(1.0, (1.0) - determinant(mat4(0.0, 0.0, 0.0, 1.0, log(1.0), 0.0, 0.0, 1.0, 0.0, log(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), true))))))) && true))) || false)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(cosh(vec2(-1.3, 7.7))))).y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), false, false), bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), false, false)))))), true)))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0))))), true))))))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(860.338), _GLF_FUZZED(7.4)), bvec2(false, false))).x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bvec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) - 0.0)) / cos(0.0)), true)))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, _GLF_IDENTITY(1.0, (1.0) - determinant(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(length(vec4(-7.9, 5748.5343, -630.310, -13.86))) : _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), max(float(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))))), 1.0, log(1.0), 0.0, 0.0, 1.0, 0.0, log(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0))), _GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 0.0, 0.0), (mat4x3(0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 0.0, 0.0)) * mat4(1.0)))), injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / cos(0.0)), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.2)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / _GLF_IDENTITY(cos(0.0), (cos(0.0)) - 0.0)), true))))))) && true))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false, false)))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x) - 0.0)), float(_GLF_FUZZED(627.383)), bool(false)))) * 1.0) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), clamp(_GLF_IDENTITY(1.0 * (injectionSwitch.y), (1.0 * (injectionSwitch.y)) - sin(0.0)), 1.0 * (injectionSwitch.y), 1.0 * (injectionSwitch.y))))) - _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), min(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true), bool(bool(! ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((injectionSwitch.x > injectionSwitch.y)))))), false, _GLF_IDENTITY(false, (false) || false)))))))), true && (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), false || (bool(bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))) || _GLF_IDENTITY(false, bool(bool(false))))), false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), false, false))), ! (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), false, false)))), (! (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), false, false))))) || false)))))))))), true && (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
}
