#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_8 {
 vec3 _f0;
 uvec3 _f1;
 uvec4 _f2;
 uint _f3;
 bool _f4;
} ;

struct _GLF_struct_7 {
 vec2 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_6 {
 vec2 _f0;
 bvec3 _f1;
 vec4 _f2;
 bool _f3;
} ;

struct _GLF_struct_5 {
 bvec4 _f0;
} ;

struct _GLF_struct_9 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_8 _f3;
} ;

struct _GLF_struct_3 {
 mat4x3 _f0;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
 int _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_1 {
 float _f0;
 bvec2 _f1;
 mat2 _f2;
 int _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_0 {
 vec3 _f0;
 uint read;
 uvec4 _f1;
 ivec3 _f2;
 uvec3 _f3;
 mat3 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_4 {
 ivec3 _f0;
 _GLF_struct_0 _f1;
 mat4x3 _f2;
 _GLF_struct_1 _f3;
 _GLF_struct_2 _f4;
 _GLF_struct_3 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_10 {
 _GLF_struct_4 _f0;
 mat4x2 _f1;
 _GLF_struct_9 _f2;
 float _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))) + 0.0)) / 1.0)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)), true)), bvec2(bvec3(bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-87.91)), bool(false))))) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), false, true)), true && (bool(bvec4(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-87.91)), bool(false))))) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), false, true)))), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) && true))) && true))))), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true))), true)), true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(vec4(0.4, -3357.0528, -5.7, 465.612)[1])))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x))), gl_NumWorkGroups.x))), ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) + uvec3(0u, 0u, 0u)) | (gl_NumWorkGroups)).x, ~ (~ (gl_NumWorkGroups.x))), gl_NumWorkGroups.x)))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(6u)), uint(uvec2(0u << _GLF_IDENTITY(uint(6u), uint(6u)), 0u))))), (_GLF_IDENTITY(0u, min(0u, 0u)) >> _GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x))), _GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x)))))), ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x))), gl_NumWorkGroups.x)))) | (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) ^ 0u))))), uint(_GLF_IDENTITY(6u, (6u) - (0u | 0u)))))))) << 0u), gl_NumWorkGroups.x)), 0u | (gl_NumWorkGroups.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ((! (false))) || false))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))))).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))))).y) - determinant(mat2(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(528.594) : 0.0)), 0.0, 0.0)), 0.0)))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && true))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(log(1.0), 0.0), vec2(1.0, 1.0)), dot(vec2(log(1.0), 0.0), vec2(1.0, 1.0))), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0)))))).x, float(mat4x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, sqrt(0.0)))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(false))), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), _GLF_IDENTITY((_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(509.750), min(true ? injectionSwitch.x : _GLF_FUZZED(509.750), true ? injectionSwitch.x : _GLF_FUZZED(509.750)))), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(509.750), min(true ? injectionSwitch.x : _GLF_FUZZED(509.750), true ? injectionSwitch.x : _GLF_FUZZED(509.750)))) : _GLF_FUZZED(5.3)))) > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true, false, true))))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))), bool(bvec3(_GLF_IDENTITY(! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))), (! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(14.61)), bool(false))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (_GLF_IDENTITY(workgroup_size * workgroup_id, uint(_GLF_IDENTITY(uvec3(workgroup_size * workgroup_id, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(_GLF_IDENTITY(uvec3(workgroup_size * workgroup_id, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), clamp(uvec3(workgroup_size * workgroup_id, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(workgroup_size * workgroup_id, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(workgroup_size * workgroup_id, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), uvec3(workgroup_size * workgroup_id, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.9) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(60701)))) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) | (workgroup_base))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))) * (injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), true && (bool(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, (false) || false), false)), true && (bool(bvec3(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y))), false, false))))) || false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, false, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), (((false))) && true)) || false) && true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, ! (! (false)))))))))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, ! (! (false))))))))))))))))))))) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(false, ! (! (false)))))))))), false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, (false) || false))), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_struct_4(ivec3(_GLF_IDENTITY(1, (1) / 1)), _GLF_struct_0(vec3(1.0), atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) << _GLF_IDENTITY((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), uint(7u)), clamp(0u >> _GLF_IDENTITY(uint(7u), uint(7u)), 0u >> _GLF_IDENTITY(uint(7u), uint(7u)), 0u >> _GLF_IDENTITY(uint(7u), uint(7u))))), ((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), uint(7u)), clamp(0u >> _GLF_IDENTITY(uint(7u), uint(7u)), 0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) << 0u)), uint(7u)), 0u >> _GLF_IDENTITY(uint(7u), uint(7u)))))) + 0u))], _GLF_IDENTITY(4, _GLF_IDENTITY(0 | (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, (4) | (4))))), (0 | _GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), clamp((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) << 0), 4))), (_GLF_IDENTITY(4, min(4, 4))), (_GLF_IDENTITY(4, min(4, 4)))))) | 0)), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) | 0)) * 1), 0), uvec4(1u), ivec3(1), uvec3(1u), mat3(1.0), mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), (true ? _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) * 1.0))) : _GLF_FUZZED(-3183.5063))))), mat4x3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(8.9) : 1.0))), _GLF_struct_1(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true) && (true))), mat2(1.0), 1, ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (1) | (1))) + 0, clamp((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1))) | (1))) + 0, (_GLF_IDENTITY(1, (1) | (1))) + 0, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) << 0) | (1))) + 0))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (1) | (1))) + 0, clamp((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0)), (vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0))) - vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(-8.5, -83.74))))).x)) + (1))) | (1))) + 0, (_GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), ((1)) - ((0 >> _GLF_IDENTITY(int(8), int(8))) >> _GLF_IDENTITY(int(6), int(6)))))) + 0, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY(((1)), clamp(_GLF_IDENTITY(((1)), int(int(_GLF_IDENTITY(((1)), (((1))) | (((1))))))), ((1)), ((1)))) << 0) | (1))) + 0)))), _GLF_IDENTITY(min(~ (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY((1), ((1)) - 0) | (1))) + 0, clamp((_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1))) | (1), (_GLF_IDENTITY((_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1))) | (1), ((_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1))) | (1)) >> 0)) - 0))) + 0, (_GLF_IDENTITY(1, (1) | (1))) + 0, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) << 0) | (1))) + 0)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (1) | (1))) + 0, clamp((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1))) | (1))) + 0, (_GLF_IDENTITY(1, (1) | (1))) + 0, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) << 0) | (1))) + 0)))), (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1)))))), (1) | (1))) + 0, clamp((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1))) | (1))) + 0, (_GLF_IDENTITY(1, (1) | (1))) + 0, (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) << 0) | (1)), min(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) << 0) | (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) << 0) | (1)), max(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) << 0) | (1)), _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) << 0) | (1))))))) + 0))))) ^ 0)), (min(~ (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (1) | (1))) + 0, clamp((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1))) | (1))) + 0, (_GLF_IDENTITY(1, (1) | (1))) + 0, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) << 0) | (1))) + 0)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (1) | (1))) + 0, clamp((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1))) | (1))) + 0, (_GLF_IDENTITY(1, (1) | (1))) + 0, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) << 0) | (1))) + 0)))), (~ _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (1) | _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) | ((1)))) >> 0))) + 0, clamp((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1))) | (1))) + 0, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 | (1))))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 | (1))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 | (1)))))), (~ ((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 | (1))))))) >> 0))))) + 0, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) << 0) | (1))) + 0)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (1) | _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) | ((1)))) >> 0))) + 0, clamp((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1))) | (1))) + 0, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 | (1))))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 | (1))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 | (1)))))), (~ ((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 | (1))))))) >> 0))))) + 0, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) << 0) | (1))) + 0))))), (false ? _GLF_FUZZED(8365) : ~ ((_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (1) | _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) | ((1)))) >> 0))) + 0, clamp((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1))) | (1))) + 0, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 | (1))))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 | (1))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 | (1)))))), (~ ((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 | (1))))))) >> 0))))) + 0, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) << 0) | (1))) + 0)))))))))) ^ 0))) ^ 0)))), _GLF_IDENTITY(1, min(1, 1))), (min(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (1) | (1))) + 0, clamp((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1))) | (1))) + 0, (_GLF_IDENTITY(1, (1) | (1))) + 0, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) << 0) | (1))) + 0))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (1) | (1))) + 0, clamp((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0)), (vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0))) - vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(-8.5, -83.74))))).x)) + (1))) | (1))) + 0, (_GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), ((1)) - ((0 >> _GLF_IDENTITY(int(8), int(8))) >> _GLF_IDENTITY(int(6), int(6)))))) + 0, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY(((1)), clamp(_GLF_IDENTITY(((1)), int(int(_GLF_IDENTITY(((1)), (((1))) | (((1))))))), ((1)), ((1)))) << 0) | (1))) + 0)))), _GLF_IDENTITY(min(~ (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY((1), ((1)) - 0) | (1))) + 0, clamp((_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1))) | (1), (_GLF_IDENTITY((_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1))) | (1), ((_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1))) | (1)) >> 0)) - 0))) + 0, (_GLF_IDENTITY(1, (1) | (1))) + 0, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) << 0) | (1))) + 0)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (1) | (1))) + 0, clamp((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1))) | (1))) + 0, (_GLF_IDENTITY(1, (1) | (1))) + 0, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) << 0) | (1))) + 0)))), (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1)))))), (1) | (1))) + 0, clamp((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1))) | (1))) + 0, (_GLF_IDENTITY(1, (1) | (1))) + 0, (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) << 0) | (1)), min(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) << 0) | (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) << 0) | (1)), max(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) << 0) | (1)), _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) << 0) | (1))))))) + 0))))) ^ 0)), (min(~ (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (1) | (1))) + 0, clamp((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1))) | (1))) + 0, (_GLF_IDENTITY(1, (1) | (1))) + 0, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) << 0) | (1))) + 0)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (1) | (1))) + 0, clamp((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1))) | (1))) + 0, (_GLF_IDENTITY(1, (1) | (1))) + 0, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) << 0) | (1))) + 0)))), (~ _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (1) | _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) | ((1)))) >> 0))) + 0, clamp((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1))) | (1))) + 0, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 | (1))))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 | (1))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 | (1)))))), (~ ((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 | (1))))))) >> 0))))) + 0, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) << 0) | (1))) + 0)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (1) | _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) | ((1)))) >> 0))) + 0, clamp((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1))) | (1))) + 0, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 | (1))))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 | (1))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 | (1)))))), (~ ((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 | (1))))))) >> 0))))) + 0, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) << 0) | (1))) + 0))))), (false ? _GLF_FUZZED(8365) : ~ ((_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (1) | _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) | ((1)))) >> 0))) + 0, clamp((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1))) | (1))) + 0, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 | (1))))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 | (1))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 | (1)))))), (~ ((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 | (1))))))) >> 0))))) + 0, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) << 0) | (1))) + 0)))))))))) ^ 0))) ^ 0)))), _GLF_IDENTITY(1, min(1, 1)))) | 0), (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))) ? min(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) | (1)), 1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED((-20427)) : 1)))), (1) | (1))) + 0), _GLF_IDENTITY(1, min(1, 1))) : _GLF_FUZZED(-47702)))))), _GLF_struct_2(mat3x2(1.0), 1, uvec3(1u)), _GLF_struct_3(mat4x3(1.0)), bvec4(true)), mat4x2(1.0), _GLF_struct_9(_GLF_struct_5(bvec4(true)), _GLF_struct_6(_GLF_IDENTITY(vec2(1.0), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(1.0), (vec2(1.0)) / sqrt(vec2(1.0, 1.0))))), bvec3(true), vec4(1.0), true), _GLF_struct_7(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), min(vec2(1.0), vec2(1.0))), min(_GLF_IDENTITY(vec2(1.0), min(vec2(1.0), vec2(1.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), 1.0, 1.0))), min(vec2(1.0), vec2(1.0))))), 1.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, _GLF_IDENTITY(sqrt(0.0), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-969.642)), float(_GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0)))), bool(true)), min(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-969.642)), float(_GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0)))), bool(true)), clamp(mix(float(_GLF_FUZZED(-969.642)), float(_GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0)))), bool(true)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-969.642)), (false ? _GLF_FUZZED(distance(vec3(-6.6, 808.804, 69.62), vec3(1.1, -384.936, 8827.0573))) : _GLF_IDENTITY(float(_GLF_FUZZED(-969.642)), float(vec4(_GLF_IDENTITY(float(_GLF_FUZZED(-969.642)), 0.0 + (float(_GLF_FUZZED(-969.642)))), 1.0, 1.0, 1.0))))), float(_GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0)))), bool(true)), mix(float(_GLF_FUZZED(-969.642)), float(_GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), (true ? sqrt(0.0) : _GLF_FUZZED(-3456.2754))), sqrt(0.0)))), bool(true)))), mix(float(_GLF_FUZZED(-969.642)), float(_GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0)))), bool(true))))), 1.0)), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(8032.9952), (vec2(mat4x3(vec2(1.0), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-58.42)), bool(false))), 0.0, determinant(mat2(1.0, 1.0, sqrt(0.0), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))))), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))[1]), vec2((vec2(mat4x3(vec2(1.0), 1.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, sqrt(0.0), 1.0)), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))[0], _GLF_FUZZED(_GLF_IDENTITY(0.8, float(mat4x2(0.8, 0.0, 0.0, sin(0.0), 1.0, exp(0.0), 0.0, 0.0))))), _GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), false))))) || _GLF_IDENTITY(false, true && (false))))), bvec2(bvec3(bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), false))))) || _GLF_IDENTITY(false, true && (false))))), false)))), clamp(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(8032.9952), (vec2(mat4x3(vec2(1.0), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-58.42)), bool(false))), 0.0, determinant(mat2(1.0, 1.0, sqrt(0.0), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))))), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))[1]), vec2((vec2(mat4x3(vec2(1.0), 1.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, sqrt(0.0), 1.0)), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))[0], _GLF_FUZZED(_GLF_IDENTITY(0.8, float(mat4x2(0.8, 0.0, 0.0, sin(0.0), 1.0, exp(0.0), 0.0, 0.0))))), _GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), false))))) || _GLF_IDENTITY(false, true && (false))))), bvec2(bvec3(bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), false))))) || _GLF_IDENTITY(false, true && (false))))), false)))), max(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(8032.9952), (vec2(mat4x3(vec2(1.0), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-58.42)), bool(false))), 0.0, determinant(mat2(1.0, 1.0, sqrt(0.0), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))))), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))[1]), vec2((vec2(mat4x3(vec2(1.0), 1.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, sqrt(0.0), 1.0)), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))[0], _GLF_FUZZED(_GLF_IDENTITY(0.8, float(mat4x2(0.8, 0.0, 0.0, sin(0.0), 1.0, exp(0.0), 0.0, 0.0))))), _GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), false))))) || _GLF_IDENTITY(false, true && (false))))), bvec2(bvec3(bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), false))))) || _GLF_IDENTITY(false, true && (false))))), false)))), min(mix(vec2(_GLF_FUZZED(8032.9952), (vec2(mat4x3(vec2(1.0), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-58.42)), bool(false))), 0.0, determinant(mat2(1.0, 1.0, sqrt(0.0), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))))), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))[1]), vec2((vec2(mat4x3(vec2(1.0), 1.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, sqrt(0.0), 1.0)), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))[0], _GLF_FUZZED(_GLF_IDENTITY(0.8, float(mat4x2(0.8, 0.0, 0.0, sin(0.0), 1.0, exp(0.0), 0.0, 0.0))))), _GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), false))))) || _GLF_IDENTITY(false, true && (false))))), bvec2(bvec3(bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), false))))) || _GLF_IDENTITY(false, true && (false))))), false)))), mix(vec2(_GLF_FUZZED(8032.9952), (vec2(mat4x3(vec2(1.0), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-58.42)), bool(false))), 0.0, determinant(mat2(1.0, 1.0, sqrt(0.0), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))))), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))[1]), vec2((vec2(mat4x3(vec2(1.0), 1.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, sqrt(0.0), 1.0)), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))[0], _GLF_FUZZED(_GLF_IDENTITY(0.8, float(mat4x2(0.8, 0.0, 0.0, sin(0.0), 1.0, exp(0.0), 0.0, 0.0))))), _GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), false))))) || _GLF_IDENTITY(false, true && (false))))), bvec2(bvec3(bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), false))))) || _GLF_IDENTITY(false, true && (false))))), false)))))), mix(vec2(_GLF_FUZZED(8032.9952), (vec2(mat4x3(vec2(1.0), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-58.42)), bool(false))), 0.0, determinant(mat2(1.0, 1.0, sqrt(0.0), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))))), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))[1]), vec2((vec2(mat4x3(vec2(1.0), 1.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, sqrt(0.0), 1.0)), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))[0], _GLF_FUZZED(_GLF_IDENTITY(0.8, float(mat4x2(0.8, 0.0, 0.0, sin(0.0), 1.0, exp(0.0), 0.0, 0.0))))), _GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), false))))) || _GLF_IDENTITY(false, true && (false))))), bvec2(bvec3(bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), false))))) || _GLF_IDENTITY(false, true && (false))))), false)))))), mix(vec2(_GLF_FUZZED(8032.9952), (vec2(mat4x3(vec2(1.0), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-58.42)), bool(false))), 0.0, determinant(mat2(1.0, 1.0, sqrt(0.0), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))))), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))[1]), vec2((vec2(mat4x3(vec2(1.0), 1.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, sqrt(0.0), 1.0)), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))[0], _GLF_FUZZED(_GLF_IDENTITY(0.8, float(mat4x2(0.8, 0.0, 0.0, sin(0.0), 1.0, exp(0.0), 0.0, 0.0))))), _GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), false))))) || _GLF_IDENTITY(false, true && (false))))), bvec2(bvec3(bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), false))))) || _GLF_IDENTITY(false, true && (false))))), false)))), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(8032.9952), (vec2(mat4x3(vec2(1.0), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-58.42)), bool(false))), 0.0, determinant(mat2(1.0, 1.0, sqrt(0.0), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))))), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))[1]), vec2((vec2(mat4x3(vec2(1.0), 1.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, sqrt(0.0), 1.0)), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))[0], _GLF_FUZZED(_GLF_IDENTITY(0.8, float(mat4x2(0.8, 0.0, 0.0, sin(0.0), 1.0, exp(0.0), 0.0, 0.0))))), _GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), false))))) || _GLF_IDENTITY(false, true && (false))))), bvec2(bvec3(bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), false))))) || _GLF_IDENTITY(false, true && (false))))), false)))), (_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(8032.9952), (vec2(mat4x3(vec2(1.0), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-58.42)), bool(false))), 0.0, determinant(mat2(1.0, 1.0, sqrt(0.0), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))))), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))[1]), vec2((vec2(mat4x3(vec2(1.0), 1.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, sqrt(0.0), 1.0)), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))[0], _GLF_FUZZED(_GLF_IDENTITY(0.8, float(mat4x2(0.8, 0.0, 0.0, sin(0.0), 1.0, exp(0.0), 0.0, 0.0))))), _GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), false))))) || _GLF_IDENTITY(false, true && (false))))), bvec2(bvec3(bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), false))))) || _GLF_IDENTITY(false, true && (false))))), false)))), clamp(mix(vec2(_GLF_FUZZED(8032.9952), (vec2(mat4x3(vec2(1.0), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-58.42)), bool(false))), 0.0, determinant(mat2(1.0, 1.0, sqrt(0.0), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))))), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))[1]), vec2((vec2(mat4x3(vec2(1.0), 1.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, sqrt(0.0), 1.0)), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))[0], _GLF_FUZZED(_GLF_IDENTITY(0.8, float(mat4x2(0.8, 0.0, 0.0, sin(0.0), 1.0, exp(0.0), 0.0, 0.0))))), _GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), false))))) || _GLF_IDENTITY(false, true && (false))))), bvec2(bvec3(bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), false))))) || _GLF_IDENTITY(false, true && (false))))), false)))), mix(vec2(_GLF_FUZZED(8032.9952), (vec2(mat4x3(vec2(1.0), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-58.42)), bool(false))), 0.0, determinant(mat2(1.0, 1.0, sqrt(0.0), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))))), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))[1]), vec2((vec2(mat4x3(vec2(1.0), 1.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, sqrt(0.0), 1.0)), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))[0], _GLF_FUZZED(_GLF_IDENTITY(0.8, float(mat4x2(0.8, 0.0, 0.0, sin(0.0), 1.0, exp(0.0), 0.0, 0.0))))), _GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), false))))) || _GLF_IDENTITY(false, true && (false))))), bvec2(bvec3(bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), false))))) || _GLF_IDENTITY(false, true && (false))))), false)))), mix(vec2(_GLF_FUZZED(8032.9952), (vec2(mat4x3(vec2(1.0), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-58.42)), bool(false))), 0.0, determinant(mat2(1.0, 1.0, sqrt(0.0), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))))), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))[1]), vec2((vec2(mat4x3(vec2(1.0), 1.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, sqrt(0.0), 1.0)), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))[0], _GLF_FUZZED(_GLF_IDENTITY(0.8, float(mat4x2(0.8, 0.0, 0.0, sin(0.0), 1.0, exp(0.0), 0.0, 0.0))))), _GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), false))))) || _GLF_IDENTITY(false, true && (false))))), bvec2(bvec3(bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), false))))) || _GLF_IDENTITY(false, true && (false))))), false))))))) - vec2(0.0, 0.0)))))), bvec2(true)), _GLF_struct_8(vec3(1.0), _GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | _GLF_IDENTITY((uvec3(1u)), ((uvec3(1u))) - uvec3(0u, 0u, 0u)))) + uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat4(0.0, round(length(normalize(abs(vec2(1.0, 1.0))))), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0))), injectionSwitch.x))), uvec4(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) >> 0u), _GLF_IDENTITY(1u, (1u) >> 0u)))), 1u, true)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(1.0) * (1.0)), 0.0 + _GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(-10.47) : (1.0)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), 1u)), _GLF_IDENTITY(_GLF_IDENTITY(max(uint(uvec2(virtual_gid, 1u)), uint(uvec2(virtual_gid, 1u))), (max(uint(uvec2(virtual_gid, 1u)), _GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), (_GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), max(uint(uvec2(virtual_gid, 1u)), _GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), max(uint(uvec2(virtual_gid, 1u)), uint(uvec2(virtual_gid, 1u))))))) / 1u))) - 0u), clamp(max(uint(uvec2(virtual_gid, 1u)), uint(uvec2(virtual_gid, 1u))), max(uint(uvec2(virtual_gid, 1u)), uint(uvec2(virtual_gid, 1u))), _GLF_IDENTITY(max(_GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), (uint(uvec2(virtual_gid, 1u))) / 1u), uint(uvec2(virtual_gid, 1u))), ~ (_GLF_IDENTITY(~ (max(_GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), (uint(uvec2(virtual_gid, 1u))) / 1u), uint(uvec2(virtual_gid, 1u)))), (~ (max(_GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), (uint(uvec2(virtual_gid, 1u))) / 1u), uint(uvec2(virtual_gid, 1u))))) / 1u))))))), (true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), max(uint(uvec2(virtual_gid, 1u)), uint(uvec2(virtual_gid, 1u))))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), clamp(_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))), _GLF_FUZZED(workgroup_base), _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) - 0u)))))], _GLF_struct_replacement_10._f0._f1.read, 4, _GLF_IDENTITY(64, (64) >> 0), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(2.7)), (true ? float(_GLF_FUZZED(2.7)) : _GLF_FUZZED(-8075.2841))), float(injectionSwitch.x), bool(true))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-49.89, (-49.89) - 0.0), max(-49.89, -49.89)))), bool(false))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), false, false, false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))) && true, bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))) && true, true)))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
