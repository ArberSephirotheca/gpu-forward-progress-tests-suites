#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) || false), (_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) || false), (_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))) || false) || false))) && true), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-967.656), _GLF_FUZZED(7.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.5)), bool(false)))) / 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true, true)))))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))))), _GLF_IDENTITY((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)) || false)))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.5)), bool(false)))) / 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true, true)))))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))))), _GLF_IDENTITY((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)) || false)))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.5)), bool(false)))) / 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true, true)))))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))))), _GLF_IDENTITY((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)) || false))))))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8.1) : injectionSwitch.x)))))) > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (true)) && (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.5)), bool(false)))) / 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(92.33)), float(injectionSwitch.y), bool(true)))))), false)))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true, true)))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(92.33)), float(injectionSwitch.y), bool(true)))))), false)))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true, true)))))))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))))), _GLF_IDENTITY((! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), ! (! (_GLF_IDENTITY((! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch.x > injectionSwitch.y))))), true && ((! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch.x > injectionSwitch.y)))))))))) && true)) || false)))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(8.5, 1.0 * (8.5)))), bool(false)))) / _GLF_IDENTITY(1.0, max(1.0, 1.0))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(8.5, 1.0 * (8.5)))), bool(false)))) / _GLF_IDENTITY(1.0, max(1.0, 1.0))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(8.5, 1.0 * (8.5)))), bool(false)))) / _GLF_IDENTITY(1.0, max(1.0, 1.0))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false)))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true, true)))), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.7) : _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))) / 1.0))))))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true, true)))))))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))))), _GLF_IDENTITY((! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), ! (! ((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)) || false)))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.5)), bool(false)))) / 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), bool(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))), ! (! ((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))))), true, true)))))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))))), _GLF_IDENTITY((! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))), ! (! ((! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))))) && true)) || false)))))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(458.075)), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(8.5)), bool(false)))) / 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), false, false), true))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)), true)))))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), _GLF_IDENTITY(bool(bvec2(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), true)), (bool(bvec2(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), true))) && true))))))))), _GLF_IDENTITY(_GLF_IDENTITY((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY((! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY((! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))), true && ((! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))))))))) && true) && true)) || false)))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) || _GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.5)), bool(false)))) / 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true, true)))))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))))), _GLF_IDENTITY(_GLF_IDENTITY((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true, true && (_GLF_IDENTITY(_GLF_IDENTITY((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true, false || (_GLF_IDENTITY((! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) && true))), ! (! ((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))))) || false)))), _GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.5)), bool(false)))) / 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true, true)))))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))))), _GLF_IDENTITY((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)) || false)))))), false || (! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.5)), bool(false)))) / 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), bool(bvec2(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true, true)))))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))))))) || false)))), _GLF_IDENTITY((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)) || false)))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.5)), bool(false)))) / 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), bool(bvec2(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true, true)))))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))))))) || false)))), _GLF_IDENTITY((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)) || false)))), bool(bool((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.5)), bool(false)))) / 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), bool(bvec2(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true, true)))))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))))))) || false)))), _GLF_IDENTITY((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)) || false)))))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8.1) : injectionSwitch.x)))))) > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (true)) && (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false)))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.5)), bool(false)))) / 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(92.33)), float(injectionSwitch.y), bool(true)))))), false)))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true, true)))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(92.33)), float(injectionSwitch.y), bool(true)))))), false)))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true, true)))))))), ! (! ((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(92.33)), float(injectionSwitch.y), bool(true)))))), false)))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true, true)))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(92.33)), float(injectionSwitch.y), bool(true)))))), false)))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true, true))))))))))), (_GLF_IDENTITY(! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))), (! (false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))) || false))), false, false)), (bool(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))), (! (false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))) || false))), false, false))) && true))))))), _GLF_IDENTITY((! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch.x > injectionSwitch.y))))), true && ((! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(! (_GLF_IDENTITY((! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch.x > injectionSwitch.y))))), true && ((! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch.x > injectionSwitch.y)))))))), false, true))))) && true)) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(8.5, 1.0 * (8.5)))), bool(false)))) / _GLF_IDENTITY(1.0, max(1.0, 1.0))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(8.5, 1.0 * (8.5)))), bool(false)))) / _GLF_IDENTITY(1.0, max(1.0, 1.0))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(8.5, 1.0 * (8.5)))), bool(false)))) / _GLF_IDENTITY(1.0, max(1.0, 1.0))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false)))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true, true)))), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.7) : _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))) / 1.0))))))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true, true)))))))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))))), _GLF_IDENTITY((! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), ! (! ((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)) || false)))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.5)), bool(false)))) / 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), bool(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))), ! (! ((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))))), true, true)))))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))))), _GLF_IDENTITY((! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))), ! (! ((! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))))) && true)) || false)))))))), bool(bool(! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(8.5, 1.0 * (8.5)))), bool(false)))) / _GLF_IDENTITY(1.0, max(1.0, 1.0))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(8.5, 1.0 * (8.5)))), bool(false)))) / _GLF_IDENTITY(1.0, max(1.0, 1.0))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(8.5, 1.0 * (8.5)))), bool(false)))) / _GLF_IDENTITY(1.0, max(1.0, 1.0))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false)))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true, true)))), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.7) : _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))) / 1.0))))))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true, true)))))))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))))), _GLF_IDENTITY((! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), ! (! ((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)) || false)))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.5)), bool(false)))) / 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), bool(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))), ! (! ((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))))), true, true)))))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))))), _GLF_IDENTITY((! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))), ! (! ((! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))))) && true)) || false)))))))))))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y))), float(_GLF_FUZZED(2.7)), bool(false))))))) || (false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0), mix(vec2(((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0))[0], _GLF_FUZZED(404.850)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-4.6, max(-4.6, _GLF_IDENTITY(-4.6, max(-4.6, -4.6))))), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0))[1]), bvec2(false, true)))).x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0), mix(vec2(((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0))[0], _GLF_FUZZED(404.850)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-4.6, max(-4.6, _GLF_IDENTITY(-4.6, max(-4.6, -4.6))))), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0))[1]), bvec2(false, true)))).x) / abs(1.0)) > injectionSwitch.y), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true)))))) || false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), true, false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), true, false)))))))))))) || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(20.03))) > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), float(_GLF_FUZZED(8.4)), bool(false))))) : _GLF_FUZZED(20.03))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(20.03))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), float(_GLF_FUZZED(8.4)), bool(false))))) : _GLF_FUZZED(20.03))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(20.03))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), float(_GLF_FUZZED(8.4)), bool(false))))) : _GLF_FUZZED(20.03))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(20.03))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), true)))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), float(_GLF_FUZZED(8.4)), bool(false))))) : _GLF_FUZZED(20.03))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(20.03))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), true)))), false, false, false))))), true)))) || false))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0, 1.0, sin(0.0), 0.0)), min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0))))), min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) / 1.0), log(1.0), 1.0)), max(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) / 1.0), log(1.0), 1.0)), float(vec4(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) / 1.0), log(1.0), 1.0)), 1.0, 1.0, 0.0))), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) / 1.0), log(1.0), 1.0)))))), 1.0, 1.0, sin(0.0), 0.0)), min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-829.425)), vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), bvec2(false, true))).x, _GLF_IDENTITY(sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), mix(float(_GLF_IDENTITY(sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) - 0.0)), float(_GLF_FUZZED(-620.958)), bool(false))), 1.0, 1.0, sin(0.0), 0.0)), min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2467.8963) : injectionSwitch.x)), injectionSwitch.x))) - 0.0), sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0, 1.0, sin(0.0), 0.0)), min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) * 1.0), 1.0, 1.0, sin(0.0), 0.0)), min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8146.6489)), bool(false))))))))) * 1.0), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0, 1.0, sin(0.0), 0.0)), min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0))))))))) : _GLF_FUZZED(20.03), (true ? injectionSwitch.x : _GLF_FUZZED(20.03)) * 1.0))) > injectionSwitch.y))) && true, ! (_GLF_IDENTITY(! ((_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0, 1.0, sin(0.0), 0.0)), min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0)), _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat2x3(float(vec3(1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0)), max(float(mat2x3(float(vec3(1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0)), float(mat2x3(float(vec3(1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0)))))), sin(0.0), 0.0)), max(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat2x3(float(vec3(1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0)), max(float(mat2x3(float(vec3(1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0)), float(mat2x3(float(vec3(1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0)))))), sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat2x3(float(vec3(1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0)), max(float(mat2x3(float(vec3(1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0)), float(mat2x3(float(vec3(1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0)))))), sin(0.0), 0.0))))))), min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), 1.0, 1.0, sin(0.0), 0.0)), min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), sin(0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 1.0, 1.0, sin(0.0), 0.0)), min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0))))), max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0, 1.0, _GLF_IDENTITY(sin(0.0), mix(float(_GLF_IDENTITY(sin(0.0), mix(float(_GLF_FUZZED(956.973)), float(sin(0.0)), bool(true)))), float(_GLF_FUZZED(2137.0807)), bool(false))), 0.0)), min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(_GLF_IDENTITY(1.0, (1.0) * 1.0)), 1.0, 1.0, sin(0.0), 0.0))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))), 1.0, 1.0, sin(0.0), 0.0)), min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0))))))))) : _GLF_FUZZED(20.03), (true ? injectionSwitch.x : _GLF_FUZZED(20.03)) * _GLF_IDENTITY(1.0, (1.0) - 0.0)))) > injectionSwitch.y))) && true), true && (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0, 1.0, sin(0.0), 0.0)), _GLF_IDENTITY(min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)))), float(mat2x3(injectionSwitch.x, sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 1.0, 1.0, sin(0.0), 0.0))), clamp(min(float(mat2x3(injectionSwitch.x, sqrt(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))), 1.0, 1.0, sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, _GLF_IDENTITY(sin(0.0), 0.0 + (sin(0.0))), 0.0))), _GLF_IDENTITY(min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0))), mix(float(min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 1.0, 1.0, sin(0.0), 0.0)))), float(_GLF_FUZZED(-4.5)), bool(false))), _GLF_IDENTITY(min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0))), (false ? _GLF_FUZZED(1.5) : min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6275.0061)), bool(false))), _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), mix(float(_GLF_FUZZED(-5801.5645)), float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(true)))), 1.0, 1.0, sin(0.0), 0.0)), min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 0.0 + (0.0))) - 0.0))), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0, 1.0, sin(0.0), 0.0)), min(float(mat2x3(injectionSwitch.x, sqrt(1.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)), 1.0, sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))) * exp(0.0)), sin(0.0), 0.0))))), max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))))), clamp(float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))))), float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))))), float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))))))))), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), max(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), clamp(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), min(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), 0.0 + (mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(_GLF_FUZZED(-1.5)), float(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(true))))))), 1.0, 1.0, sin(0.0), 0.0)), min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(float(1.0), mix(float(_GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0)))), float(_GLF_FUZZED(-7.5)), bool(false))))), sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)))), min(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))))), clamp(float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))))), float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))))), float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))))))))), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), max(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), clamp(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), min(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), 0.0 + (mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(_GLF_FUZZED(-1.5)), float(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(true))))))), 1.0, 1.0, sin(0.0), 0.0)), min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(float(1.0), mix(float(_GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0)))), float(_GLF_FUZZED(-7.5)), bool(false))))), sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))))), clamp(float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))))), float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))))), float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))))))))), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), max(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), clamp(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), min(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), 0.0 + (mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(_GLF_FUZZED(-1.5)), float(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(true))))))), 1.0, 1.0, sin(0.0), 0.0)), min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(float(1.0), mix(float(_GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0)))), float(_GLF_FUZZED(-7.5)), bool(false))))), sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)))), max(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))))), clamp(float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))))), float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))))), float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))))))))), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), max(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), clamp(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), min(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), 0.0 + (mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(_GLF_FUZZED(-1.5)), float(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(true))))))), 1.0, 1.0, sin(0.0), 0.0)), min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(float(1.0), mix(float(_GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0)))), float(_GLF_FUZZED(-7.5)), bool(false))))), sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)))), _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))))), clamp(float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))))), float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))))), float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))))))))), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), max(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), clamp(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), min(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), 0.0 + (mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(_GLF_FUZZED(-1.5)), float(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(true))))))), 1.0, 1.0, sin(0.0), 0.0)), min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(float(1.0), mix(float(_GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0)))), float(_GLF_FUZZED(-7.5)), bool(false))))), sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0))))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), 1.0, 1.0, sin(0.0), 0.0)), min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(sqrt(1.0), float(_GLF_IDENTITY(mat4x2(sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0)), mat4x2(mat4(mat4x2(sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0))))))), 1.0, 1.0, sin(0.0), 0.0)))), clamp(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (true ? sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(9.3, max(_GLF_IDENTITY(9.3, 0.0 + (9.3)), 9.3)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) : _GLF_FUZZED(asin(8.9)))), 1.0, 1.0, sin(0.0), 0.0)), min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0))), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))), 1.0, 1.0, sin(0.0), 0.0)), min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), float(_GLF_IDENTITY(mat2x4(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat2x4(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0)))))))), 1.0, 1.0, sin(0.0), 0.0)), min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)))), 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), (true ? mat2(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), float(_GLF_IDENTITY(mat2x4(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat2x4(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0)))))))), 1.0, 1.0, sin(0.0), 0.0)), min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)))), 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0) : _GLF_FUZZED(mat2(5.2, 3.4, 9.7, -16.51)))))), _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))))), 1.0, 1.0, sin(0.0), 0.0)), min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), sin(0.0), 0.0))))))))))) : _GLF_FUZZED(20.03), _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(20.03)) * 1.0, mix(float(_GLF_FUZZED(-46.93)), float(_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(20.03)) * 1.0, max((true ? injectionSwitch.x : _GLF_FUZZED(20.03)) * 1.0, (true ? injectionSwitch.x : _GLF_FUZZED(20.03)) * 1.0))), bool(true))))), ((_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0, 1.0, sin(0.0), 0.0)), _GLF_IDENTITY(min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)))), float(mat2x3(injectionSwitch.x, sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 1.0, 1.0, sin(0.0), 0.0))), clamp(min(float(mat2x3(injectionSwitch.x, sqrt(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))), 1.0, 1.0, sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, _GLF_IDENTITY(sin(0.0), 0.0 + (sin(0.0))), 0.0))), _GLF_IDENTITY(min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0))), mix(float(min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 1.0, 1.0, sin(0.0), 0.0)))), float(_GLF_FUZZED(-4.5)), bool(false))), _GLF_IDENTITY(min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0))), (false ? _GLF_FUZZED(1.5) : min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6275.0061)), bool(false))), _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), mix(float(_GLF_FUZZED(-5801.5645)), float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(true)))), 1.0, 1.0, sin(0.0), 0.0)), min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 0.0 + (0.0))) - 0.0))), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0, 1.0, sin(0.0), 0.0)), min(float(mat2x3(injectionSwitch.x, sqrt(1.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)), 1.0, sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))) * exp(0.0)), sin(0.0), 0.0))))), max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))))), clamp(float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))))), float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))))), float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))))))))), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), max(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), clamp(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), min(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), 0.0 + (mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(_GLF_FUZZED(-1.5)), float(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(true))))))), 1.0, 1.0, sin(0.0), 0.0)), min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(float(1.0), mix(float(_GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0)))), float(_GLF_FUZZED(-7.5)), bool(false))))), sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)))), min(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))))), clamp(float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))))), float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))))), float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))))))))), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), max(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), clamp(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), min(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), 0.0 + (mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(_GLF_FUZZED(-1.5)), float(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(true))))))), 1.0, 1.0, sin(0.0), 0.0)), min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(float(1.0), mix(float(_GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0)))), float(_GLF_FUZZED(-7.5)), bool(false))))), sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))))), clamp(float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))))), float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))))), float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))))))))), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), max(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), clamp(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), min(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), 0.0 + (mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(_GLF_FUZZED(-1.5)), float(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(true))))))), 1.0, 1.0, sin(0.0), 0.0)), min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(float(1.0), mix(float(_GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0)))), float(_GLF_FUZZED(-7.5)), bool(false))))), sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)))), max(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))))), clamp(float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))))), float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))))), float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))))))))), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), max(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), clamp(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), min(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), 0.0 + (mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(_GLF_FUZZED(-1.5)), float(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(true))))))), 1.0, 1.0, sin(0.0), 0.0)), min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(float(1.0), mix(float(_GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0)))), float(_GLF_FUZZED(-7.5)), bool(false))))), sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)))), _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))))), clamp(float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))))), float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))))), float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))))))))), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), max(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), clamp(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), min(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), 0.0 + (mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(_GLF_FUZZED(-1.5)), float(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(true))))))), 1.0, 1.0, sin(0.0), 0.0)), min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(float(1.0), mix(float(_GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0)))), float(_GLF_FUZZED(-7.5)), bool(false))))), sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0))))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), 1.0, 1.0, sin(0.0), 0.0)), min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(sqrt(1.0), float(_GLF_IDENTITY(mat4x2(sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0)), mat4x2(mat4(mat4x2(sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0))))))), 1.0, 1.0, sin(0.0), 0.0)))), clamp(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (true ? sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(9.3, max(_GLF_IDENTITY(9.3, 0.0 + (9.3)), 9.3)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) : _GLF_FUZZED(asin(8.9)))), 1.0, 1.0, sin(0.0), 0.0)), min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0))), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))), 1.0, 1.0, sin(0.0), 0.0)), min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), float(_GLF_IDENTITY(mat2x4(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat2x4(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0)))))))), 1.0, 1.0, sin(0.0), 0.0)), min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)))), 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), (true ? mat2(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), float(_GLF_IDENTITY(mat2x4(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat2x4(mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0)))))))), 1.0, 1.0, sin(0.0), 0.0)), min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)))), 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0) : _GLF_FUZZED(mat2(5.2, 3.4, 9.7, -16.51)))))), _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))))), 1.0, 1.0, sin(0.0), 0.0)), min(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, sin(0.0), 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), sin(0.0), 0.0))))))))))) : _GLF_FUZZED(20.03), _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(20.03)) * 1.0, mix(float(_GLF_FUZZED(-46.93)), float(_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(20.03)) * 1.0, max((true ? injectionSwitch.x : _GLF_FUZZED(20.03)) * 1.0, (true ? injectionSwitch.x : _GLF_FUZZED(20.03)) * 1.0))), bool(true)))))) / 1.0)) > injectionSwitch.y))) && true))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec4(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false, true, false)))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED((104.502 / 2609.4759))), vec2(_GLF_FUZZED((559.912 - -8.4)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1], mix(float((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), float(_GLF_FUZZED(-82.23)), bool(false)))), bvec2(false, true))).y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))) || false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, true), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, true), true, true)))))) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, true, false))), false || (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), _GLF_IDENTITY(true, ! (! (true))), true, false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-152.665)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))) * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uint(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))) * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size), clamp(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size), max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size), clamp(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size), max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size), max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> 0u))) + subgroup_local_id, (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))) * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uint(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))) * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size), clamp(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size), max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size), clamp(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size), max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size), max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> 0u))) + subgroup_local_id) >> 0u)) - 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(abs(injectionSwitch)))).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), subgroup_id, subgroup_id))) : workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)) / 1u)) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), subgroup_size)))) : _GLF_IDENTITY(_GLF_FUZZED(uvec4(53690u, 52963u, 197255u, 71380u).x), 0u | (_GLF_FUZZED(uvec4(53690u, 52963u, 197255u, 71380u).x)))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), subgroup_size)))) : _GLF_IDENTITY(_GLF_FUZZED(uvec4(53690u, 52963u, 197255u, 71380u).x), 0u | (_GLF_FUZZED(uvec4(53690u, 52963u, 197255u, 71380u).x))))) - (0u ^ 0u)))) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | _GLF_IDENTITY(0u, ~ (~ (0u)))), 1u * (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) | 0u, uint(uvec4(_GLF_IDENTITY((subgroup_id * subgroup_size) | 0u, ((subgroup_id * subgroup_size) | 0u) << 0u), 1u, (1u | 1u), (0u << _GLF_IDENTITY(uint(3u), uint(3u))))))))), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), min(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)))))) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))))), 0u | ((_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))))))) | (_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) : _GLF_FUZZED(workgroup_base))) * subgroup_size))) + 0u)) | 0u))))), 0u, 1u, (_GLF_IDENTITY(0u, (0u) << (0u & 63676u)) ^ 0u)))) + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - (0 >> _GLF_IDENTITY(int(7), int(7))))) * 1), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 1, 1)))), min(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 1, 1)))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 1, 1)))), (_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 1, 1))))) + 0)))) >> _GLF_IDENTITY(int(4), int(4)))))), (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 1, 1))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(int(4), int(4)))))))))) + 0), min(subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | (_GLF_IDENTITY(int(4), clamp(int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(4))), int(4))))), int(ivec4(int(4), 1, 1, 1))))) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) | (4)))))))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) * 1), int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))), _GLF_IDENTITY(int(4), int(ivec4(int(4), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1)), 1, 1))))) >> _GLF_IDENTITY(int(4), int(4)))))), int(ivec4(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) * 1), int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))), _GLF_IDENTITY(int(4), int(ivec4(int(4), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1)), 1, 1))))) >> _GLF_IDENTITY(int(4), int(4)))))), (42816 & 0), 1, 1))), ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) >> 0), 0))), 1))))) >> _GLF_IDENTITY(int(4), int(4))))))))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 1, 1)))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 1, 1)))), 1), min(ivec2(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 1, 1)))), 1), ivec2(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 1, 1)))), 1)))))) >> _GLF_IDENTITY(int(4), int(4)))))), (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 1, 1))))) >> _GLF_IDENTITY(int(4), int(4))))))) + 0), min(subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | (_GLF_IDENTITY(int(4), clamp(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, 1 * (4))))), 0 + (int(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, 1 * (4))))))), int(4))))), int(_GLF_IDENTITY(ivec4(int(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) << 0)))), 1, 1, 1), (ivec4(int(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) << 0)))), 1, 1, 1)) | (ivec4(int(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) << 0)))), 1, 1, 1))))))) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) | (4)))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) * 1), int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))), _GLF_IDENTITY(int(4), int(ivec4(int(4), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1)), 1, 1))))) >> _GLF_IDENTITY(int(4), int(4)))))), min(subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) * 1), int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))), _GLF_IDENTITY(int(4), int(ivec4(int(4), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1)), 1, 1))))) >> _GLF_IDENTITY(int(4), int(4)))))), subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) * 1), int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))), _GLF_IDENTITY(int(4), int(ivec4(int(4), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1)), 1, 1))))) >> _GLF_IDENTITY(int(4), int(4)))))))), ~ (~ (_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, 0u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))) + _GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) >> 0), 0))), 1))))) >> _GLF_IDENTITY(int(4), int(4))))))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 1, 1))))) >> _GLF_IDENTITY(int(4), int(4)))))), (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 1, 1))))) >> _GLF_IDENTITY(int(4), int(4))))))) + 0), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 1, 1))))) >> _GLF_IDENTITY(int(4), int(4)))))), (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 1, 1))))) >> _GLF_IDENTITY(int(4), int(4))))))) + 0), uint(uint(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 1, 1))))) >> _GLF_IDENTITY(int(4), int(4)))))), (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 1, 1))))) >> _GLF_IDENTITY(int(4), int(4))))))) + 0))))) * 1u), min(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(int(int(~ (1))), (int(int(~ (1)))) << 0)))), int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | (_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))))), int(ivec4(int(4), 1, 1, 1))))) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / (1 | 0)), (4) | (4)))))))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, 0 ^ (4))), clamp(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) * 1), int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))), _GLF_IDENTITY(int(4), int(ivec4(int(4), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1)), 1, _GLF_IDENTITY(1, (1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) >> _GLF_IDENTITY(int(4), int(4)))))), ~ (~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) >> 0), 0))), 1))))) >> _GLF_IDENTITY(int(4), int(4)))))), clamp(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) >> 0), 0))), 1))))) >> _GLF_IDENTITY(int(4), int(4)))))), uint(uvec4(subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) >> 0), 0))), 1))))) >> _GLF_IDENTITY(int(4), int(4)))))), 1u, 1u, 1u))), subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) >> 0), 0))), 1))))) >> _GLF_IDENTITY(int(4), int(4)))))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) >> 0), 0))), 1))))) >> _GLF_IDENTITY(int(4), int(4)))))), ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) >> 0), 0))), 1))))) >> _GLF_IDENTITY(int(4), int(4)))))))))))))))))))))), uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - (0 >> _GLF_IDENTITY(int(7), int(7))))) * 1), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 1, 1)))), min(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 1, 1)))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 1, 1)))), (_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 1, 1))))) + 0)))) >> _GLF_IDENTITY(int(4), int(4)))))), (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 1, 1))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(int(4), int(4)))))))))) + 0), min(subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | (_GLF_IDENTITY(int(4), clamp(int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(4))), int(4))))), int(ivec4(int(4), 1, 1, 1))))) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) | (4)))))))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) * 1), int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))), _GLF_IDENTITY(int(4), int(ivec4(int(4), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1)), 1, 1))))) >> _GLF_IDENTITY(int(4), int(4)))))), int(ivec4(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) * 1), int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))), _GLF_IDENTITY(int(4), int(ivec4(int(4), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1)), 1, 1))))) >> _GLF_IDENTITY(int(4), int(4)))))), (42816 & 0), 1, 1))), ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) >> 0), 0))), 1))))) >> _GLF_IDENTITY(int(4), int(4))))))))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 1, 1)))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 1, 1)))), 1), min(ivec2(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 1, 1)))), 1), ivec2(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 1, 1)))), 1)))))) >> _GLF_IDENTITY(int(4), int(4)))))), (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 1, 1))))) >> _GLF_IDENTITY(int(4), int(4))))))) + 0), min(subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | (_GLF_IDENTITY(int(4), clamp(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, 1 * (4))))), 0 + (int(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, 1 * (4))))))), int(4))))), int(_GLF_IDENTITY(ivec4(int(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) << 0)))), 1, 1, 1), (ivec4(int(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) << 0)))), 1, 1, 1)) | (ivec4(int(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) << 0)))), 1, 1, 1))))))) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) | (4)))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) * 1), int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))), _GLF_IDENTITY(int(4), int(ivec4(int(4), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1)), 1, 1))))) >> _GLF_IDENTITY(int(4), int(4)))))), min(subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) * 1), int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))), _GLF_IDENTITY(int(4), int(ivec4(int(4), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1)), 1, 1))))) >> _GLF_IDENTITY(int(4), int(4)))))), subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) * 1), int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))), _GLF_IDENTITY(int(4), int(ivec4(int(4), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1)), 1, 1))))) >> _GLF_IDENTITY(int(4), int(4)))))))), ~ (~ (_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, 0u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))) + _GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) >> 0), 0))), 1))))) >> _GLF_IDENTITY(int(4), int(4))))))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 1, 1))))) >> _GLF_IDENTITY(int(4), int(4)))))), (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 1, 1))))) >> _GLF_IDENTITY(int(4), int(4))))))) + 0), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 1, 1))))) >> _GLF_IDENTITY(int(4), int(4)))))), (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 1, 1))))) >> _GLF_IDENTITY(int(4), int(4))))))) + 0), uint(uint(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 1, 1))))) >> _GLF_IDENTITY(int(4), int(4)))))), (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 1, 1))))) >> _GLF_IDENTITY(int(4), int(4))))))) + 0))))) * 1u), min(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(int(int(~ (1))), (int(int(~ (1)))) << 0)))), int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | (_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))))), int(ivec4(int(4), 1, 1, 1))))) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / (1 | 0)), (4) | (4)))))))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, 0 ^ (4))), clamp(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) * 1), int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))), _GLF_IDENTITY(int(4), int(ivec4(int(4), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1)), 1, _GLF_IDENTITY(1, (1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) >> _GLF_IDENTITY(int(4), int(4)))))), ~ (~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) >> 0), 0))), 1))))) >> _GLF_IDENTITY(int(4), int(4)))))), clamp(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) >> 0), 0))), 1))))) >> _GLF_IDENTITY(int(4), int(4)))))), uint(uvec4(subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) >> 0), 0))), 1))))) >> _GLF_IDENTITY(int(4), int(4)))))), 1u, 1u, 1u))), subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) >> 0), 0))), 1))))) >> _GLF_IDENTITY(int(4), int(4)))))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) >> 0), 0))), 1))))) >> _GLF_IDENTITY(int(4), int(4)))))), ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) >> 0), 0))), 1))))) >> _GLF_IDENTITY(int(4), int(4))))))))))))))))))))))))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(uint(1), 0u ^ (_GLF_IDENTITY(uint(1), 0u ^ (uint(1)))))) << 0u))), (uint(1)) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (4) | 0), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1), (true ? ivec4(_GLF_IDENTITY(4, (4) | 0), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1) : _GLF_FUZZED(ivec4(-79349, -15723, -76224, 84134)))))), _GLF_IDENTITY(64, _GLF_IDENTITY(max(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(64, 64))) - 0)), (1 | 0) * (max(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(64, 64))) - 0))))), 4);
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 0 | (4)), 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false)))))) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), 0 ^ (_GLF_IDENTITY(4, max(4, 4))))), (int(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), 0 ^ (_GLF_IDENTITY(4, max(4, 4)))))) | (int(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), 0 ^ (_GLF_IDENTITY(4, max(4, 4)))))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), 0 ^ (_GLF_IDENTITY(4, max(4, 4))))), (int(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), 0 ^ (_GLF_IDENTITY(4, max(4, 4)))))) | (int(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), 0 ^ (_GLF_IDENTITY(4, max(4, 4)))))))), (false ? _GLF_FUZZED(-15922) : int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), 0 ^ (_GLF_IDENTITY(4, max(4, 4))))), (int(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), 0 ^ (_GLF_IDENTITY(4, max(4, 4)))))) | (int(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), 0 ^ (_GLF_IDENTITY(4, max(4, 4))))))))))) ^ 0))) / 1))));
}
