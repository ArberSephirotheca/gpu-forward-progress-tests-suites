#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uvec2 GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(true, ! (! (true))))) && true, _GLF_IDENTITY(bool(bool((bool(_GLF_IDENTITY(true, ! (! (true))))) && true)), bool(bvec4(bool(bool((bool(_GLF_IDENTITY(true, ! (! (true))))) && true)), true, false, true))))))) && (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(true, ! (! (true))))) && true, _GLF_IDENTITY(bool(bool((bool(_GLF_IDENTITY(true, ! (! (true))))) && true)), bool(bvec4(bool(bool((bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), true && (bool(bvec4(true, false, true, true)))))))))) && true)), true, false, true))))))) && (false))) && true)), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(true, ! (! (true))))) && true, _GLF_IDENTITY(bool(bool((bool(_GLF_IDENTITY(true, ! (! (true))))) && true)), bool(bvec4(bool(bool((bool(_GLF_IDENTITY(true, ! (! (true))))) && true)), true, false, _GLF_IDENTITY(true, true && (true))))))))) && (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))))) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((bool(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) && true))))) && true), ! (! (bool((bool(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) && true))))) && true))))), bool(bvec4(bool(bool((bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true)), true && (bool(bvec4(true, false, true, true)))))))))) && true)), true, false, true))))))) && (false))) && true)))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y = subgroup_id;
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, bool(bool(false)))))))), true, false, false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0) : _GLF_FUZZED(2476.9254)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(72278u, _GLF_IDENTITY(24191u, (24191u) + 0u), 6980u)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ ((gl_NumWorkGroups))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ ((gl_NumWorkGroups))))) - uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u | (0u)), 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u | (0u)), 0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u | (0u)), 0u)), max(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u | (0u)), 0u)), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (0u), max(0u | (0u), 0u | (0u)))), max(uint(_GLF_IDENTITY(0u | (0u), max(0u | (0u), 0u | (0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (0u), max(0u | (0u), 0u | (0u)))), (uint(_GLF_IDENTITY(0u | (0u), max(0u | (0u), 0u | (0u))))) | (uint(_GLF_IDENTITY(0u | (0u), max(0u | (0u), 0u | (0u))))))))))), 0u)))) : _GLF_FUZZED(bitfieldExtract(46360u, 67066, 95524)))), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u | (0u)), 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), ~ (~ (0u | (0u))))), 0u)), clamp(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u | (0u)), 0u)), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), 0u | (_GLF_IDENTITY(0u, 0u | (0u)))), 0u)), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u | (0u)), 0u)))))))).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(92.35) : injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-695.946)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-695.946)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-695.946)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)) && true))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 0.0))), injectionSwitch.y)))))), true, true)))))), true), bvec2(bvec4(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true))), true))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-7.0))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), bool(true))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))), true), false, true)))))), ! (! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-62.74, 406.688, -2.2).s)), vec2(_GLF_FUZZED(1.5), (injectionSwitch)[1]), bvec2(false, true))).y))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y))))))), true), bvec2(bvec4(bvec2((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y))))))), true), false, true))), bvec2(bvec4(bvec2((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true), false, true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y))))))), true), bvec2(bvec4(bvec2((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y))))))), true), false, true))), bvec2(bvec4(bvec2((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true), false, true)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y))))))), true), bvec2(bvec4(bvec2((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y))))))), true), false, true))), bvec2(bvec4(bvec2((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true), false, true))))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y))))))), true), bvec2(bvec4(bvec2((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y)))))))))), true), false, true))), bvec2(bvec4(bvec2((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true), _GLF_IDENTITY(false, ! (! (false))), true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y)))))), true && ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y))))))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), ! (! (bool(_GLF_IDENTITY(true, true && (true))))))))), bvec2(bvec4(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y)))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y))))))) || false)), true), false, true))), bvec2(bvec4(bvec2((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true), false, true)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y))))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y))))))), true), false, true)), bvec2(bvec2(bvec2(bvec4(bvec2((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y))))))), true), false, true)))))), bvec2(bvec4(bvec2((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true), false, true)))))))))))))))))))) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, 0u + (gl_WorkGroupID.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, _GLF_IDENTITY((GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id) | (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, uvec2(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id[0], GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id[1]))), ~ (~ ((GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id) | (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, uvec2(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id[0], GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id[1]))))))).y * subgroup_size, 1u * (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) | 0u) + _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, _GLF_IDENTITY((GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id), ((GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id)) + uvec2(0u, 0u)) | (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, uvec2(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id[0], GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id[1])))).y * subgroup_size)), 0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, _GLF_IDENTITY((GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id), ((GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id)) << _GLF_IDENTITY(uvec2(0u, 0u), ~ (~ (uvec2(0u, 0u))))) | (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, uvec2(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id[0], GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id[1])))).y * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)), ~ (~ (~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)))))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)), ~ (~ (~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)))))), min(~ (_GLF_IDENTITY(~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)), ~ (~ (~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)))))), ~ (_GLF_IDENTITY(~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)), ~ (~ (~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)))))))), ~ (_GLF_IDENTITY(~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)), ~ (~ (~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size))))))))), 0u ^ (_GLF_IDENTITY(0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)), ~ (~ (~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)))))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)), ~ (~ (~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)))))), min(~ (_GLF_IDENTITY(~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)), ~ (~ (~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)))))), ~ (_GLF_IDENTITY(~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)), ~ (~ (~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)))))))), ~ (_GLF_IDENTITY(~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)), ~ (~ (~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size))))))))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, _GLF_IDENTITY((GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id), ((GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id)) << _GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), ~ (~ (_GLF_IDENTITY(0u, (0u) ^ 0u)))), _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((num_workgroup ^ _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(71175u))))) : 0u))), ~ (~ (uvec2(0u, 0u))))) | (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, uvec2(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id[0], GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id[1])))).y, (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, _GLF_IDENTITY((GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id), ((GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id)) << _GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((num_workgroup ^ subgroup_size)) : 0u), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((num_workgroup ^ subgroup_size)) : 0u)) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)))), ~ (~ (uvec2(0u, 0u))))) | (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, uvec2(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id[0], _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id[1], (GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id[1]) / 1u))))).y) - 0u) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ _GLF_IDENTITY((workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size), ((workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (_GLF_IDENTITY(~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)), ~ (~ (~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ _GLF_IDENTITY((workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size), ((workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (_GLF_IDENTITY(~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)), ~ (~ (~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size))))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ _GLF_IDENTITY((workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size), ((workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (_GLF_IDENTITY(~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)), ~ (~ (~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size))))))), (_GLF_IDENTITY(0u ^ _GLF_IDENTITY((workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size), ((workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (_GLF_IDENTITY(~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)), ~ (~ (~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)))))))) << 0u)))), (false ? _GLF_FUZZED(packUnorm2x16(vec2(7.5, 5.4))) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ _GLF_IDENTITY((workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size), ((workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (_GLF_IDENTITY(~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)), ~ (~ (~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size))))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ _GLF_IDENTITY((workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size), ((workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (_GLF_IDENTITY(~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)), ~ (~ (~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size))))))), (_GLF_IDENTITY(0u ^ _GLF_IDENTITY((workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size), ((workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (_GLF_IDENTITY(~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)), ~ (~ (~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)))))))) << 0u)))))))))), min((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, _GLF_IDENTITY((GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id), _GLF_IDENTITY(((GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id)) << _GLF_IDENTITY(uvec2(0u, 0u), ~ (~ (uvec2(0u, 0u)))), (_GLF_IDENTITY(((GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id)) << _GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, 0u), ~ (~ (uvec2(0u, 0u)))), uvec2(0u, 0u) + (_GLF_IDENTITY(uvec2(0u, 0u), ~ (~ (uvec2(0u, 0u)))))), (false ? _GLF_FUZZED(uvec2(181057u, 35971u)) : ((GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id)) << _GLF_IDENTITY(uvec2(0u, 0u), ~ (~ (uvec2(0u, 0u))))))) ^ uvec2(0u, 0u))) | (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, uvec2(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id[0], GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id[1])))).y * subgroup_size, _GLF_IDENTITY(0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size), ~ (_GLF_IDENTITY(~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))), ~ (~ (~ (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((num_workgroup | 104561u)))) ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, _GLF_IDENTITY((GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id), ((GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id)) << _GLF_IDENTITY(uvec2(0u, 0u), ~ (~ (uvec2(0u, 0u))))) | (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, uvec2(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id[0], GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id[1])))).y * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)))), _GLF_IDENTITY(0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size), ~ (_GLF_IDENTITY(~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)), ~ (~ (~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, _GLF_IDENTITY((GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id), ((GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id)) << _GLF_IDENTITY(uvec2(0u, 0u), ~ (~ (uvec2(0u, 0u))))) | (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, uvec2(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id[0], GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id[1])))), max(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, _GLF_IDENTITY((GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id), ((GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id)) << _GLF_IDENTITY(uvec2(0u, 0u), ~ (~ (uvec2(0u, 0u))))) | (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, uvec2(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id[0], GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id[1])))), _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, _GLF_IDENTITY((GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id), ((GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id)) << _GLF_IDENTITY(uvec2(0u, 0u), ~ (~ (uvec2(0u, 0u))))) | (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, uvec2(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id[0], GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id[1])))))).y * subgroup_size, _GLF_IDENTITY(0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size), ~ (_GLF_IDENTITY(~ (0u ^ (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size, (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size) ^ 0u))), ~ (~ (~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))))))), max(~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, _GLF_IDENTITY((GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id), ((GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id)) << _GLF_IDENTITY(uvec2(0u, _GLF_IDENTITY(0u, min(0u, 0u))), ~ (~ (uvec2(0u, 0u))))) | (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, uvec2(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(90369))))))) | 0)], GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id[1])))).y * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size), ~ (_GLF_IDENTITY(~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)), ~ (~ (~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size))))))), uint(uvec2(_GLF_IDENTITY(0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size), ~ (_GLF_IDENTITY(~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)), ~ (~ (~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size))))))), 1u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, (0u ^ 0u) ^ (workgroup_base)))) + _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, _GLF_IDENTITY((GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id), ((GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id)) << _GLF_IDENTITY(uvec2(0u, 0u), ~ _GLF_IDENTITY((~ (uvec2(0u, 0u))), (true ? _GLF_IDENTITY((~ (uvec2(0u, 0u))), ((~ (uvec2(0u, 0u)))) | ((~ (uvec2(0u, 0u))))) : _GLF_FUZZED((bvec3(false, false, true) , GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id)))))) | (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, uvec2(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id[0], GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id[1])))).y * subgroup_size, _GLF_IDENTITY(0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size), ~ (_GLF_IDENTITY(~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)), ~ (~ (~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)))))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, _GLF_IDENTITY((GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id), ((GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id)) << _GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u), ~ (~ (uvec2(0u, 0u))))) | (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, uvec2(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id[0], GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id[1])))).y * subgroup_size, _GLF_IDENTITY(0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size), ~ (_GLF_IDENTITY(~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)), ~ (~ (~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size))))))))), max((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, _GLF_IDENTITY((GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id), ((GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id)) << _GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u), ~ (~ (uvec2(0u, 0u))))) | (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, uvec2(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id[0], GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id[1])))).y * subgroup_size, _GLF_IDENTITY(0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size), ~ (_GLF_IDENTITY(~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)), ~ (~ (~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size))))))))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, _GLF_IDENTITY((GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id), ((GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id)) << _GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u), ~ (~ (uvec2(0u, 0u))))) | (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, uvec2(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id[0], GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id[1])))).y * subgroup_size, _GLF_IDENTITY(0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size), ~ (_GLF_IDENTITY(~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)), ~ (~ (~ (0u ^ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size))))))))))))) * 1u) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x = next_virtual_gid;
 atomicStore(buf[GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x], uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY((_GLF_IDENTITY((1), ((1)) >> 0)) + 0, ((_GLF_IDENTITY((1), ((1)) >> 0)) + 0) | ((_GLF_IDENTITY((1), ((1)) >> 0)) + 0))) | (1))), _GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED((+ bitfieldInsert(85001, 84343, 40654, -25580))) : 4)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(abs(75489)) : 4)), _GLF_IDENTITY(64, (64) >> 0), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))), _GLF_IDENTITY(! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), false || (bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, true && (true)), true)))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), true))))), bool(bvec4(_GLF_IDENTITY((bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))), ((bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))) && true), false, false, false))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, true, true)))), false || (bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, true)))))))), false || ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, true, true)))), false || (bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, true)))))))))) || false)) || false)), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 1.0, 0.0), clamp(vec4(injectionSwitch.x, 1.0, 1.0, 0.0), vec4(injectionSwitch.x, 1.0, 1.0, 0.0), vec4(injectionSwitch.x, 1.0, 1.0, 0.0))))), injectionSwitch.x)) > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))) : _GLF_FUZZED(injectionSwitch))).y)) || ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, ! (! (true))), true)))), false || (bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), ! (! (bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))))), _GLF_IDENTITY(false, (false) && true) || (bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), false || (bool(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), false)))))))))))) || false)) || false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-73.35)), vec2(_GLF_FUZZED(vec3(1.4, -9124.4399, 2936.8439).p), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, injectionSwitch)).y))))), (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), false || (bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, false, true))), true, true))))))), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), false || (bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, _GLF_IDENTITY(false, (false) || false), true))), true, true))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(false, true, true, true)))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))), ((bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))) && true), true && (_GLF_IDENTITY((bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))), ((bool(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), true)))))) && true))), false, false, false))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), false || (bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))) || false)) || false)), (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), false || (bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), false || (bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), false || (bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), false || (bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))))), ! (! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), false || (bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), false || (bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), false || (bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), false || (bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))) || false, true && ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), false || (bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))) || false)))) || false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, 1.0 * (injectionSwitch.y))))), ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, 1.0 * (injectionSwitch.y)))))) || false)), true), false, true)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).y))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).y)))))))))), true))), ((bool(bvec2(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).y))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).y)))))))))), true)))) || false) && true, ((bool(bvec2(! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 1.0, determinant(mat3(abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), sqrt(cos(0.0)), determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0)), min(float(mat3(injectionSwitch.x, 0.0, 1.0, determinant(mat3(abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), sqrt(cos(0.0)), determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0)), float(mat3(injectionSwitch.x, 0.0, 1.0, determinant(mat3(abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), sqrt(cos(0.0)), determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0))))) > injectionSwitch.y))))) || false)), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4.6) : injectionSwitch.y))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - length(0.0)))))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))) || false))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), (! (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))) && true), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))), true, false))))))), (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), (! (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))) && true), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))), true, false))))))), (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), (! (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))) && true), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))), true, false))))))), (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), (! (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))) && true), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))), true, false))))))), (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, false)))))))))), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), false))))), true))) && true) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((bool(bvec2(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 1.0, 0.0)), mix(float(float(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 1.0, 0.0))), float(_GLF_FUZZED(-781.446)), bool(false)))), sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), min(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), min(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)))), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-68.33)), bool(false))), 1.0, 0.0, 0.0)), (true ? float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)) : _GLF_FUZZED(5971.6929))), 0.0, sin(0.0), 0.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 1.0)), 0.0, 1.0)), mix(float(_GLF_FUZZED(-2623.4973)), float(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), (true ? float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)) : _GLF_FUZZED(5971.6929))), 0.0, sin(0.0), 0.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 1.0)), 0.0, 1.0)), min(float(mat4x2(_GLF_IDENTITY(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), (true ? float(mat3(injectionSwitch.y, sqrt(sin(_GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)) : _GLF_FUZZED(5971.6929))), 0.0, sin(0.0), 0.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 1.0)), 0.0, 1.0)), float(mat4x2(_GLF_IDENTITY(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(39.73))), 1.0, log(1.0), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0)), (true ? float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)) : _GLF_FUZZED(5971.6929))), 0.0, sin(0.0), 0.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 1.0)), 0.0, 1.0))))), bool(true))))))))))), true))) && true, true), bvec2(bvec3(bvec2((bool(bvec2(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))) && true, true), false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2((bool(bvec2(! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), min(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0))))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), min(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0))))), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), min(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)))))) + abs(0.0)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), min(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)))))), (min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), min(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), float(mat3(injectionSwitch.y, sqrt(sin(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)))), float(_GLF_FUZZED(-4.9)), bool(false))))), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0))))), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])).y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), min(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), float(mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)))))) + abs(0.0)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))), _GLF_IDENTITY(log(1.0), (true ? log(1.0) : _GLF_FUZZED(-695.423))), 1.0, 1.0, 0.0, 0.0)), min(float(_GLF_IDENTITY(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3(-2.7, -470.865, -27.24, 6.8, -6741.6765, -6883.5689, -2480.3285, -3.8, 2974.5450)) : mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)))), float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, _GLF_IDENTITY(log(1.0), (true ? log(1.0) : _GLF_FUZZED(4.1))), 1.0, 1.0, 0.0, 0.0))))))) - _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))))))))), true))) && true, true), bvec2(bvec3(bvec2((bool(bvec2(! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))))))))), true))) && true, true), false))))), bool(bvec3(! (bool(_GLF_IDENTITY(bvec2((bool(_GLF_IDENTITY(bvec2(! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(injectionSwitch.y, sqrt(sin(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)))), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), min(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)))), float(mat4(_GLF_IDENTITY(float(mat3(injectionSwitch.y, sqrt(sin(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)))), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), min(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, sqrt(sin(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(773.749))), (0.0) * abs(1.0)))), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), min(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0))))))))), true), false), bvec3(bvec4(bvec3(bvec2(! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, sqrt(sin(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)))), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), min(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0))))))))), ! (! ((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, sqrt(sin(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)))), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), min(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)))))))))))), true), false), false))))))) && true, true), bvec2(bvec3(bvec2(_GLF_IDENTITY((bool(bvec2(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))) && true, bool(bvec2((bool(bvec2(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))) && true, false))), true), false))))), true, false)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).y))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).y)))))))))), true))), ((bool(bvec2(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).y))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).y)))))))))), true)))) || false) && true, ((bool(bvec2(! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 1.0, determinant(mat3(abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), sqrt(cos(0.0)), determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0)), min(float(mat3(injectionSwitch.x, 0.0, 1.0, determinant(mat3(abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), sqrt(cos(0.0)), determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0)), float(mat3(injectionSwitch.x, 0.0, 1.0, determinant(mat3(abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), sqrt(cos(0.0)), determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0))))) > injectionSwitch.y))))) || false)), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4.6) : injectionSwitch.y))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - length(0.0)))))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))) || false))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), (! (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))) && true), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))), true, false))))))), (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), (! (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))) && true), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))), true, false))))))), (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), (! (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))) && true), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))), true, false))))))), (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), (! (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))) && true), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))), true, false))))))), (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, false)))))))))), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), false))))), true))) && true) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((bool(bvec2(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 1.0, 0.0)), mix(float(float(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 1.0, 0.0))), float(_GLF_FUZZED(-781.446)), bool(false)))), sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), min(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), min(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)))), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-68.33)), bool(false))), 1.0, 0.0, 0.0)), (true ? float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)) : _GLF_FUZZED(5971.6929))), 0.0, sin(0.0), 0.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 1.0)), 0.0, 1.0)), mix(float(_GLF_FUZZED(-2623.4973)), float(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), (true ? float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)) : _GLF_FUZZED(5971.6929))), 0.0, sin(0.0), 0.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 1.0)), 0.0, 1.0)), min(float(mat4x2(_GLF_IDENTITY(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), (true ? float(mat3(injectionSwitch.y, sqrt(sin(_GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)) : _GLF_FUZZED(5971.6929))), 0.0, sin(0.0), 0.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 1.0)), 0.0, 1.0)), float(mat4x2(_GLF_IDENTITY(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(39.73))), 1.0, log(1.0), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0)), (true ? float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)) : _GLF_FUZZED(5971.6929))), 0.0, sin(0.0), 0.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 1.0)), 0.0, 1.0))))), bool(true))))))))))), true))) && true, true), bvec2(bvec3(bvec2((bool(bvec2(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))) && true, true), false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2((bool(bvec2(! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), min(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0))))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), min(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0))))), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), min(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)))))) + abs(0.0)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), min(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)))))), (min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), min(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), float(mat3(injectionSwitch.y, sqrt(sin(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)))), float(_GLF_FUZZED(-4.9)), bool(false))))), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0))))), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])).y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), min(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), float(mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)))))) + abs(0.0)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))), _GLF_IDENTITY(log(1.0), (true ? log(1.0) : _GLF_FUZZED(-695.423))), 1.0, 1.0, 0.0, 0.0)), min(float(_GLF_IDENTITY(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3(-2.7, -470.865, -27.24, 6.8, -6741.6765, -6883.5689, -2480.3285, -3.8, 2974.5450)) : mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)))), float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, _GLF_IDENTITY(log(1.0), (true ? log(1.0) : _GLF_FUZZED(4.1))), 1.0, 1.0, 0.0, 0.0))))))) - _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))))))))), true))) && true, true), bvec2(bvec3(bvec2((bool(bvec2(! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))))))))), true))) && true, true), false))))), bool(bvec3(! (bool(_GLF_IDENTITY(bvec2((bool(_GLF_IDENTITY(bvec2(! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(injectionSwitch.y, sqrt(sin(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)))), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), min(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)))), float(mat4(_GLF_IDENTITY(float(mat3(injectionSwitch.y, sqrt(sin(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)))), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), min(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, sqrt(sin(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(773.749))), (0.0) * abs(1.0)))), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), min(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0))))))))), true), false), bvec3(bvec4(bvec3(bvec2(! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, sqrt(sin(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)))), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), min(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0))))))))), ! (! ((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, sqrt(sin(_GLF_IDENTITY(0.0, (0.0) * abs(1.0)))), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), min(float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), float(mat3(injectionSwitch.y, sqrt(sin(0.0)), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)))))))))))), true), false), false))))))) && true, true), bvec2(bvec3(bvec2(_GLF_IDENTITY((bool(bvec2(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))) && true, bool(bvec2((bool(bvec2(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))) && true, false))), true), false))))), true, false)))))), true))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), false, true, false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), false, true, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), false, true, false)))))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  return;
}
