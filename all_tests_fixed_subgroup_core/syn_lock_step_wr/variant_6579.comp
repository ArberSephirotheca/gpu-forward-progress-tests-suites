#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 ivec4 _f0;
 bvec2 _f1;
 uvec3 _f2;
 float _f3;
 bvec4 _f4;
 ivec3 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_1 {
 vec2 _f0;
 mat3x4 _f1;
 _GLF_struct_0 _f2;
} ;

struct _GLF_struct_2 {
 bvec2 _f0;
 vec3 _f1;
 mat2x4 _f2;
 uint subgroup_id;
 mat2 _f3;
 _GLF_struct_1 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(bvec2(true), vec3(1.0), mat2x4(1.0), gl_SubgroupID, mat2(1.0), _GLF_struct_1(vec2(1.0), mat3x4(1.0), _GLF_struct_0(ivec4(1), bvec2(true), _GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(1u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), min(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (0u) / 1u)))) / 1u)), max(uvec4(uvec3(1u), 0u), _GLF_IDENTITY(uvec4(uvec3(1u), 0u), _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), clamp(uvec4(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, (1u) | 0u), 1u), uvec4(1u, 1u, 1u, 1u), uvec4(1u, 1u, 1u, 1u))) * (uvec4(uvec3(1u), 0u)))))), (uvec3(_GLF_IDENTITY(uvec4(uvec3(1u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), min(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (0u) / 1u)))) / 1u)), max(_GLF_IDENTITY(uvec4(uvec3(1u), 0u), uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY(uvec4(uvec3(1u), 0u), (uvec4(uvec3(1u), 0u)) | (uvec4(uvec3(1u), 0u))))), _GLF_IDENTITY(uvec4(uvec3(1u), 0u), _GLF_IDENTITY(uvec4(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 1u), clamp(uvec4(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, (1u) | 0u), 1u), uvec4(1u, 1u, 1u, 1u), uvec4(1u, 1u, 1u, 1u))) * (uvec4(uvec3(1u), 0u))))))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(1u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), min(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (0u) / 1u)))) / 1u)), max(uvec4(uvec3(1u), 0u), _GLF_IDENTITY(uvec4(uvec3(1u), 0u), _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), clamp(uvec4(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, (1u) | 0u), 1u), uvec4(1u, 1u, 1u, 1u), uvec4(1u, 1u, 1u, 1u))) * (uvec4(uvec3(1u), 0u)))))), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(1u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), min(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (0u) / 1u)))) / 1u)), max(uvec4(uvec3(1u), 0u), _GLF_IDENTITY(uvec4(uvec3(1u), 0u), _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), clamp(uvec4(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, (1u) | 0u), 1u), uvec4(1u, 1u, 1u, 1u), uvec4(1u, 1u, 1u, 1u))) * (uvec4(uvec3(1u), 0u)))))), (uvec3(_GLF_IDENTITY(uvec4(uvec3(1u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), min(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (0u) / 1u)))) / 1u)), max(uvec4(uvec3(1u), 0u), _GLF_IDENTITY(uvec4(uvec3(1u), 0u), _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), clamp(uvec4(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, (1u) | 0u), 1u), uvec4(1u, 1u, 1u, 1u), uvec4(1u, 1u, 1u, 1u))) * (uvec4(uvec3(1u), 0u))))))) ^ uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec4(uvec3(1u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), min(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (0u) / 1u)))) / 1u)), max(uvec4(uvec3(1u), 0u), _GLF_IDENTITY(uvec4(uvec3(1u), 0u), _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), _GLF_IDENTITY(clamp(uvec4(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, (1u) | 0u), 1u), uvec4(1u, 1u, 1u, 1u), uvec4(1u, 1u, 1u, 1u)), (_GLF_IDENTITY(clamp(uvec4(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, (1u) | 0u), 1u), uvec4(1u, 1u, 1u, 1u), uvec4(1u, 1u, 1u, 1u)), (clamp(uvec4(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, (1u) | 0u), 1u), uvec4(1u, 1u, 1u, 1u), uvec4(1u, 1u, 1u, 1u))) | (clamp(uvec4(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, (1u) | 0u), 1u), uvec4(1u, 1u, 1u, 1u), uvec4(1u, 1u, 1u, 1u))))) | (uvec4(0u, 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, 0u)))) * (uvec4(uvec3(1u), 0u)))))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(1u), (true ? uvec3(1u) : _GLF_FUZZED((15190u * uvec3(41846u, 39711u, 157540u))))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), min(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (0u) / 1u)))) / 1u)), max(uvec4(uvec3(1u), 0u), _GLF_IDENTITY(uvec4(uvec3(1u), 0u), _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), clamp(uvec4(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, (1u) | 0u), 1u), uvec4(1u, 1u, 1u, 1u), uvec4(1u, 1u, 1u, 1u))) * (uvec4(uvec3(1u), 0u))))))))))), _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(length(vec4(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8002.4659)), bool(false))), 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9740.5370) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0)), float(mat3x2(length(vec4(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-446.111)), bool(false))), 0.0, 0.0)), sqrt(0.0), 0.0, 1.0, 1.0, log(1.0)))), 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, log(1.0), 1.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0))))), bvec4(true), ivec3(1), _GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec2(bvec2(bvec2(true))))), bvec2(bvec3(bvec2(bvec2(true)), false))), false))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), true, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8713.8329) : injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, tan(0.0) + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), true, true), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), false))), false)))))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))), false || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bvec4(_GLF_IDENTITY(bool(false), false || (bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true, false, false)))))), true && (bool(false)))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_IDENTITY(true, false || (true))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY((bool(bvec2(false, true))) && true, bool(bool(_GLF_IDENTITY((bool(bvec2(false, true))) && true, ! (! ((bool(bvec2(false, true))) && true)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) && true))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) | (gl_NumWorkGroups)).x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), (_GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), max(max(gl_WorkGroupSize, gl_WorkGroupSize), max(gl_WorkGroupSize, gl_WorkGroupSize)))) | (_GLF_IDENTITY(_GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), (max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)))) - uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(_GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY(uint(0u), ~ (~ (uint(0u))))))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))), clamp(uint(0u), uint(0u), _GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), _GLF_IDENTITY(uint(0u), ~ (~ (uint(0u))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) + (0u | 0u))), clamp(uint(0u), uint(0u), _GLF_IDENTITY(uint(0u), ~ (~ (uint(0u))))))), min((_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), _GLF_IDENTITY(uint(0u), ~ (~ (uint(0u))))))), (_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u))))), 0u + (~ (_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))))))))))), (_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), _GLF_IDENTITY(uint(0u), ~ (~ (uint(0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), _GLF_IDENTITY(uint(0u), ~ (_GLF_IDENTITY(~ (uint(0u)), (false ? _GLF_FUZZED(subgroup_size) : ~ (uint(0u))))))))), uint(uint((_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), _GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))))))))) | (_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(clamp(uint(0u), uint(0u), _GLF_IDENTITY(uint(0u), ~ (~ (uint(0u))))), uint(uvec4(clamp(uint(0u), uint(0u), _GLF_IDENTITY(uint(0u), ~ (~ (uint(0u))))), 0u, 1u, 0u))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (1u ^ 1u) + (0u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(uvec2(190273u, 113985u).r) : uint(0u)))), _GLF_IDENTITY(uint(uvec4(~ (uint(0u)), 0u, 0u, _GLF_IDENTITY(1u, ~ (~ (1u))))), (uint(uvec4(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 1u * (0u)), 0u))), (uint(0u)) * 1u)), 0u, 0u, 1u))) | (uint(uvec4(~ (uint(0u)), 0u, 0u, 1u)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), (false ? _GLF_FUZZED(uvec2(190273u, 113985u).r) : uint(0u)))), _GLF_IDENTITY(uint(uvec4(~ (uint(0u)), 0u, 0u, 1u)), (uint(uvec4(~ (_GLF_IDENTITY(uint(0u), (uint(0u)) * 1u)), 0u, 0u, 1u))) | (uint(uvec4(~ (uint(0u)), 0u, 0u, 1u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), (false ? _GLF_FUZZED(uvec2(190273u, 113985u).r) : uint(0u)))), _GLF_IDENTITY(uint(uvec4(~ (uint(0u)), 0u, 0u, 1u)), (uint(uvec4(~ (_GLF_IDENTITY(uint(0u), (uint(0u)) * 1u)), 0u, 0u, 1u))) | (uint(uvec4(~ (uint(0u)), 0u, 0u, 1u))))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), (false ? _GLF_FUZZED(uvec2(190273u, 113985u).r) : uint(0u)))), _GLF_IDENTITY(uint(uvec4(~ (uint(0u)), 0u, 0u, 1u)), (uint(uvec4(~ (_GLF_IDENTITY(uint(0u), (uint(0u)) * 1u)), 0u, 0u, 1u))) | (uint(uvec4(~ (uint(0u)), 0u, 0u, 1u)))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), (false ? _GLF_FUZZED(uvec2(190273u, 113985u).r) : uint(0u)))), _GLF_IDENTITY(uint(uvec4(~ (uint(0u)), 0u, 0u, 1u)), (uint(uvec4(~ (_GLF_IDENTITY(uint(0u), (uint(0u)) * 1u)), 0u, 0u, 1u))) | (uint(uvec4(~ (uint(0u)), 0u, 0u, 1u))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), (false ? _GLF_FUZZED(uvec2(190273u, 113985u).r) : uint(0u)))), _GLF_IDENTITY(uint(uvec4(~ (uint(0u)), 0u, 0u, 1u)), (uint(uvec4(~ (_GLF_IDENTITY(uint(0u), (uint(0u)) * 1u)), 0u, 0u, 1u))) | (uint(uvec4(~ (uint(0u)), 0u, 0u, 1u))))))))) | (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) - 0u)))), (false ? _GLF_FUZZED(uvec2(190273u, 113985u).r) : uint(0u)))), _GLF_IDENTITY(uint(uvec4(~ (uint(0u)), 0u, 0u, 1u)), (uint(uvec4(~ (_GLF_IDENTITY(uint(0u), (uint(0u)) * 1u)), 0u, 0u, 1u))) | (uint(uvec4(~ (uint(0u)), 0u, 0u, 1u)))))))))))), uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(~ (~ (uint(0u))), uint(uvec4(_GLF_IDENTITY(~ (~ (uint(0u))), (~ (~ (uint(0u)))) + 0u), 1u, (1u | 1u), 1u))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(~ (~ (uint(0u))), uint(uvec4(_GLF_IDENTITY(~ (~ (uint(0u))), _GLF_IDENTITY((~ (~ (uint(0u)))), max((~ (~ (uint(0u)))), (~ (~ (uint(0u)))))) + 0u), 1u, (1u | 1u), 1u))))))), (uint(_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(~ (~ (uint(0u))), uint(uvec4(_GLF_IDENTITY(~ (~ (uint(0u))), (~ (~ (uint(0u)))) + 0u), 1u, (1u | 1u), 1u)))))))) ^ 0u)) | (uint(_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(~ (~ (uint(0u))), uint(uvec4(_GLF_IDENTITY(~ (~ (uint(0u))), (~ (~ (uint(0u)))) + 0u), 1u, (1u | 1u), 1u))))))))), 0u))), uint(_GLF_IDENTITY(uint(0u), clamp(uint(0u), _GLF_IDENTITY(uint(0u), 0u ^ (uint(0u))), _GLF_IDENTITY(uint(0u), ~ (~ _GLF_IDENTITY((uint(0u)), (false ? _GLF_FUZZED(12722u) : (uint(0u)))))))))))), 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), uvec3(_GLF_IDENTITY(1u, (1u) - 0u), 1u, 1u) * (_GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), (max(gl_WorkGroupSize, gl_WorkGroupSize)) - uvec3(0u, 0u, 0u)))), uvec3(uvec3(_GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, (true) && true) ? 1u : _GLF_FUZZED(num_workgroup))), 1u) * _GLF_IDENTITY((_GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), (max(gl_WorkGroupSize, gl_WorkGroupSize)) - uvec3(0u, 0u, 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), (max(gl_WorkGroupSize, gl_WorkGroupSize)) - uvec3(0u, 0u, 0u))), min((_GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), (max(gl_WorkGroupSize, gl_WorkGroupSize)) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u)))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u)))), min(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))) - (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u)))) | _GLF_IDENTITY((uvec3(0u, 0u, 0u)), max((uvec3(0u, 0u, 0u)), (uvec3(0u, 0u, 0u)))))), (false ? _GLF_FUZZED(uvec3(7498u, 29710u, 198326u)) : uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u))))))))))), (uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u)))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u)))), min(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))) - (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u)))) | _GLF_IDENTITY((uvec3(0u, 0u, 0u)), max((uvec3(0u, 0u, 0u)), (uvec3(0u, 0u, 0u)))))), (false ? _GLF_FUZZED(uvec3(7498u, 29710u, 198326u)) : uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u)))))))))))) * uvec3(1u, 1u, 1u))))), (_GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), (max(gl_WorkGroupSize, gl_WorkGroupSize)) - uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u))))))))) | ((_GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), (max(gl_WorkGroupSize, gl_WorkGroupSize)) - uvec3(0u, 0u, 0u)))))))))) << uvec3(0u, 0u, 0u))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), true && (! (false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_2.subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) - 0u)), (subgroup_size) ^ 0u)))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_2.subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u) + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))))) << 0u), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))))) + 1, (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))))) << 0u), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), 1u, 0u, 1u))))))))) + 1 : _GLF_FUZZED(47224u)))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch, injectionSwitch)).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch, injectionSwitch)).y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch, injectionSwitch)).y, false), bvec2(bvec4(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch, injectionSwitch)).y, false), false, false))))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(false, bool(bvec3(false, true, false))) || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch, injectionSwitch)).y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(-8946.3651)), vec2(_GLF_FUZZED(22.55), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch, injectionSwitch)).y)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), true, true, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))).x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch, injectionSwitch)).y))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, (_GLF_IDENTITY(false, bool(bvec3(false, true, false))) ? _GLF_FUZZED(5.9) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0), mat3x2(mat4x2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0)))))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), min((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))) * mat2(1.0))).x), (true ? max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))))).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x) : _GLF_FUZZED(12.63)))))) > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5050.2137)), bool(false)))))), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, abs(0.0))))))), bool(bool((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, abs(0.0)))))))))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) && true)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(217.682)), bool(false))))), false || (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(217.682)), bool(false)))))))))))) || false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true && ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(217.682)), _GLF_IDENTITY(bool(false), (bool(false)) || false)))))))))) || false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5.7), _GLF_FUZZED(-37.44)), bvec2(false, false))).x)))) > injectionSwitch.y))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, injectionSwitch.x, injectionSwitch.x), max(clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-0.6))), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(217.682)), bool(false)))))))))) || false, true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(217.682)), bool(false)))))))))) || false, true))), (! (bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), min(clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(217.682)), bool(false)))))))))) || false, true)))) && true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(step(-22.40, 6.7)) : _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), sqrt(0.0)), clamp(vec2(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), sqrt(0.0)), vec2(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), sqrt(0.0)), vec2(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), sqrt(0.0)))))))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(923.906) : 1.0)), injectionSwitch.y)) * (injectionSwitch)).x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(217.682)), bool(false)))), (min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(217.682)), bool(false))))) / round(length(normalize(sqrt(vec4(1.0, 1.0, 1.0, 1.0)))))))))))) || false, bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(30.54)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(0.7) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1561.2417)), float(injectionSwitch.x), bool(true))))), injectionSwitch.x)))) > injectionSwitch.y))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(217.682)), bool(false)), (true ? mix(float(injectionSwitch.y), float(_GLF_FUZZED(217.682)), bool(false)) : _GLF_FUZZED(-61.37))))))))))) || false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(step(-22.40, 6.7)) : _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), sqrt(0.0)), clamp(vec2(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), sqrt(0.0)), vec2(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), sqrt(0.0)), vec2(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), sqrt(0.0)))))))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(923.906) : 1.0)), injectionSwitch.y)) * (injectionSwitch)).x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(217.682)), bool(false)))), (min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(217.682)), bool(false))))) / round(length(normalize(sqrt(vec4(1.0, 1.0, 1.0, 1.0)))))))))))) || false, bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(30.54)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(0.7) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1561.2417)), float(injectionSwitch.x), bool(true))))), injectionSwitch.x)))) > injectionSwitch.y))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(217.682)), bool(false)), (true ? mix(float(injectionSwitch.y), float(_GLF_FUZZED(217.682)), bool(false)) : _GLF_FUZZED(-61.37))))))))))) || false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)))))))), false, false, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
