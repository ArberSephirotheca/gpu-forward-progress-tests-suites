#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_3 {
 uint next_virtual_gid;
 uint _f0;
 mat2 _f1;
} ;

struct _GLF_struct_1 {
 uint _f0;
 bvec4 _f1;
 ivec4 _f2;
 mat2 _f3;
 vec4 _f4;
 bvec2 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_0 {
 mat4x3 _f0;
 mat2x4 _f1;
 ivec3 _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_2 {
 int _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 int _f3;
} ;

struct _GLF_struct_4 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
 mat3x4 _f2;
 vec3 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ _GLF_IDENTITY((gl_NumWorkGroups.x), clamp(_GLF_IDENTITY((gl_NumWorkGroups.x), min((gl_NumWorkGroups.x), (gl_NumWorkGroups.x))), (gl_NumWorkGroups.x), (gl_NumWorkGroups.x)))));
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))).x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - (uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(1u * (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u))), (1u * (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)))) + 0u)), 0u, 0u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u)))).x, _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), 0u ^ ((gl_WorkGroupSize.x)))) / 1u) - 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)))), gl_WorkGroupSize, gl_WorkGroupSize)).x) - 0u)), (_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)), 0u ^ (min(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))), clamp((_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))), max((_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))))))))))))), _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), (gl_WorkGroupSize.x))) - 0u))))) + 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * 1u), min(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u)), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))).x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u) : _GLF_FUZZED(156015u))), _GLF_IDENTITY((gl_WorkGroupSize.x) >> 0u, ((gl_WorkGroupSize.x) >> 0u) | (_GLF_IDENTITY((gl_WorkGroupSize.x) >> 0u, ((gl_WorkGroupSize.x) >> 0u) >> 0u)))))))))), (gl_WorkGroupSize.x) - 0u)))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec3(26742u, 5315u, 36520u), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))), _GLF_IDENTITY(! (! (bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(! (! (bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (! (! (_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))), ! (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))))), (_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, true)))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y)) || false, (((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) || false) && true))))), ! (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))))))) && true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(abs(1.0)), abs(1.0), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (true ? mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(abs(1.0)), abs(1.0), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(mat4(-3.2, 9.6, -65.47, 22.60, 6.6, 405.960, 6.9, -66.36, -4845.6411, -6.8, 9.8, 278.844, 9659.3552, 2.8, -57.38, 320.124))))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(abs(1.0)), abs(1.0), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (true ? mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(abs(1.0)), abs(1.0), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(mat4(-3.2, 9.6, -65.47, 22.60, 6.6, 405.960, 6.9, -66.36, -4845.6411, -6.8, 9.8, 278.844, 9659.3552, 2.8, -57.38, 320.124))))), max(float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(abs(1.0)), abs(1.0), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (true ? mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(abs(1.0)), abs(1.0), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(mat4(-3.2, 9.6, -65.47, 22.60, 6.6, 405.960, 6.9, -66.36, -4845.6411, -6.8, 9.8, 278.844, 9659.3552, 2.8, -57.38, 320.124))))), float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(abs(1.0)), abs(1.0), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (true ? mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(abs(1.0)), abs(1.0), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(mat4(-3.2, 9.6, -65.47, 22.60, 6.6, 405.960, 6.9, -66.36, -4845.6411, -6.8, 9.8, 278.844, 9659.3552, 2.8, -57.38, 320.124))))))), float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(abs(1.0)), abs(1.0), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (true ? mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(abs(1.0)), abs(1.0), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(mat4(-3.2, 9.6, -65.47, 22.60, 6.6, 405.960, 6.9, -66.36, -4845.6411, -6.8, 9.8, 278.844, 9659.3552, 2.8, -57.38, 320.124)))))))) < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (_GLF_IDENTITY(! (bool(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), ! (! (! (bool(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))))))))) || false), ! (_GLF_IDENTITY(! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), bool(bvec3(! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), true, false)))))))), ((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), false, true, false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (_GLF_IDENTITY(! (bool(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), ! (! (! (bool(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))))))))) || false), ! (_GLF_IDENTITY(! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), bool(bvec3(! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), true, false))))))))) || false), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(false))), false, false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), (bool(bool((injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))) && (bool(bvec4((bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))))))), false, false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))), ! (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))))), (_GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))), ! (! (_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0)))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), false))))), (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0)))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), false))))), (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), false, true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0)))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), false))))), (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), false, true, true)), false, true, true)))))), _GLF_IDENTITY(bool(bvec3(bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), false))))), (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))), true, false)), (bool(bvec3(bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), false))))), (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(vec4(-69.38, -6742.0949, 4.3, -269.814))))), injectionSwitch)).x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))), true, false))) && true)))))) && true)))), _GLF_IDENTITY(bool(bvec4((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - 0.0))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true), true)))) && true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))))), false || (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false), ! (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), false)), bool(bvec4(_GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), false)), (bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))) && true), false, false, false))))), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(true, false, _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - 0.0))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(true, ! (! (true))))))) && true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))))), false || (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))))))))) || false), ! (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y)), true, false))))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.1) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - 0.0))), (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.1) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - 0.0)))) || false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true), true)))) && true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))))), false || (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false), ! (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))))))) || false)) && true))), _GLF_IDENTITY(false, bool(bool(false))), false, false)), _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))))))))) || false)), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))) || false)))))) && (bool(bvec4((bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0)))) * 1.0))), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))))).y)), true, false))))))))))), false, false, false))))))))))) ? uvec3(26742u, 5315u, 36520u) : _GLF_FUZZED(uvec3(59134u, 49677u, 109501u))))), ~ (~ (_GLF_FUZZED(_GLF_IDENTITY(uvec3(26742u, 5315u, 36520u), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! _GLF_IDENTITY((bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ((bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), true && (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))))), ! (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7223.6695, -26.00)))).y)), true, false)))))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))), ! (! (_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6.0)), bvec2(_GLF_IDENTITY(true, false || (true)), false))).y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6.0)), bvec2(_GLF_IDENTITY(true, false || (true)), false))).y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && ((_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))), ! (! (_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6.0)), bvec2(_GLF_IDENTITY(true, false || (true)), false))).y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6.0)), bvec2(_GLF_IDENTITY(true, false || (true)), false))).y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! (_GLF_IDENTITY(true, false || (true)))))))))))), _GLF_IDENTITY(bool(bvec4((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), true))), (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), true))), (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (true))))), true))), (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), true))), (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)))) && _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY(bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) || false))), bool(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (true))))), true))), (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), true))), (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)))) && _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY(bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) || false))), false, true), bvec3(bvec4(bvec3((! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (true))))), true))), (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), true))), (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)))) && _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY(bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) || false))), false, true), true)))))))), ! (_GLF_IDENTITY(! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), false || (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(false, ! (! (false)))))))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), true))), (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false || (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY(false || (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (false || _GLF_IDENTITY((bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4((bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true, true)))))))))) || false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-1.4) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.9)), float(injectionSwitch.x), bool(true))))) < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), true && (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-1.4) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.9)), float(injectionSwitch.x), bool(true))))) < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))))), false || (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(false, ! (! (false)))))))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)))))), (_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))).y)), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true))), _GLF_IDENTITY(bool(bvec3(bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))).y)), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true))), true, false)), (bool(bvec3(bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))).y)), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true))), true, false))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false), ! (_GLF_IDENTITY(! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), false || (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec2(! (! (false)), true)), (_GLF_IDENTITY(bool(bvec2(! (! (false)), true)), bool(bvec4(bool(bvec2(! (! (false)), true)), false, false, true)))) && true)))))))))))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), true))), (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false), ! (_GLF_IDENTITY(! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), false || (! (bool(bvec4(true, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(false, ! (! (false)))))))))))))), false)))) && true)))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), false, false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(0.8)), (float(_GLF_FUZZED(0.8))) / 1.0), bool(false)))), float(_GLF_FUZZED((+ 6.7))), bool(false))) < injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))) || false))) && (bool(bvec4((bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true))))))) && (_GLF_IDENTITY(true, bool(bvec2(true, false))))), false))))))))))), false, _GLF_IDENTITY(false, (false) && true), false))))), _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))), _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (false ? _GLF_FUZZED(vec2(-8.7, 9.3)) : _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))))).x < injectionSwitch.y)) || false)))), ! (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), true, false)))))))), (_GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false, _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), (bool((injectionSwitch.x < injectionSwitch.y))) && true)), ! (! (bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), (bool((injectionSwitch.x < injectionSwitch.y))) && true)))))))), ((injectionSwitch.x < injectionSwitch.y)) || false)))), ! (! (bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))))))))) && true)))), _GLF_IDENTITY(bool(bvec4((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (true))))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((true), ((true)) || false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)) && (! (true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))), (_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), float(_GLF_FUZZED(9.9)), bool(false))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)) || _GLF_IDENTITY(false, ! (! (false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false), ! (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch)).x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))))))), _GLF_IDENTITY(false, bool(bool(false))), false, false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))) && (bool(bvec4((bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))))))), false, false, false))))))), _GLF_IDENTITY(bool(bvec3(! _GLF_IDENTITY(_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), true && (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))))), ! (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))))), (_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))), ! (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((4.1 - 326.168))), bool(false))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6.0)), bvec2(true, false))).y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))))))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! (_GLF_IDENTITY(true, false || (true)))))))))))), _GLF_IDENTITY(bool(bvec4((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), true))), (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)))))))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), true))), (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) < injectionSwitch.y)), true, _GLF_IDENTITY(true, false || (true)))))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), true))), (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), true))), (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY(bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) || false)))))), ! (_GLF_IDENTITY(! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), false || (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(false, ! (! (false)))))))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), true))), (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false || (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY(false || (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (false || _GLF_IDENTITY((bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4((bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true, true)))))))))) || false), ! (_GLF_IDENTITY(! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-1.4) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.9)), float(injectionSwitch.x), bool(true))))) < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), false || (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(false, ! (! (false)))))))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), true))), (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))).y)), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false), ! (_GLF_IDENTITY(! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), bool(bvec2(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), false))))))), false || (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-42.92))) < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true))))))))))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, true, true)))) && true), true && (true))))), true))), (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false)))))), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false)))))), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))))) || false), ! (_GLF_IDENTITY(! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), false || (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(false, ! (! (false)))))))))))))), false)))) && true)))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), false, false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(0.8), clamp(_GLF_FUZZED(0.8), _GLF_FUZZED(0.8), _GLF_FUZZED(0.8)))), bool(false)))), float(_GLF_FUZZED((+ 6.7))), bool(false))) < injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))) && (bool(bvec4((bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec2(true, false))))), false))))))))))), false, false, false))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) ? _GLF_FUZZED(vec2(-8.7, 9.3)) : _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))))).x < injectionSwitch.y)) || false)))), ! (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), true, false)))))))), (_GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false, _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))), ! (! (bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))))))) && true)))), _GLF_IDENTITY(bool(bvec4((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)))) && (! (true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (true))))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (true))), true && (_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (true))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), min(injectionSwitch, injectionSwitch)).y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)) || _GLF_IDENTITY(false, ! (! (false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false), ! (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))))))), _GLF_IDENTITY(false, bool(bool(false))), false, false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))) && (bool(bvec4((bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))))))), false, false, false))))))), true, true)), ! (! (bool(bvec3(! _GLF_IDENTITY(_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), true && (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.1) : injectionSwitch.y)))) || false)))))), ! (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), true, false)))))))), (_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))), ! (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6.0)), bvec2(true, false))).y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))))))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! (_GLF_IDENTITY(true, false || (true)))))))))))), _GLF_IDENTITY(bool(bvec4((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), false, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), true))), (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), true))), (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), true))), (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), true))), (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(bvec2(true, true))))))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY(bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) || false)))))), ! (_GLF_IDENTITY(! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), false || (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(false, ! (! (false)))))))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), true))), (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false || (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY(false || (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (false || _GLF_IDENTITY((bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))))))), bool(bvec4((bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true, true)))))))))) || false), ! (_GLF_IDENTITY(! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-1.4) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.9)), float(injectionSwitch.x), bool(true))))) < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), false || (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(false, ! (! (false)))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), true))), (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.2)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, cos(0.0)))))) < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))).y)), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false), ! (_GLF_IDENTITY(! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), false || (! (bool(bvec4(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(false, ! (! (false)))))))))))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), true))), (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 1.0)), (float(vec2(injectionSwitch.y, 1.0))) / 1.0))) / 1.0))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false), ! (_GLF_IDENTITY(! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), false || (! (bool(bvec4(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(false, ! (! (false)))))))))))))), false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), true))), (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.2)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, cos(0.0)))))) < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))).y)), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false), ! (_GLF_IDENTITY(! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), false || (! (bool(bvec4(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(false, ! (! (false)))))))))))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), true))), (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 1.0)), (float(vec2(injectionSwitch.y, 1.0))) / 1.0))) / 1.0))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false), ! (_GLF_IDENTITY(! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), false || (! (bool(bvec4(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(false, ! (! (false)))))))))))))), false)))), bool(bvec3((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), true))), (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.2)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, cos(0.0)))))) < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))).y)), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false), ! (_GLF_IDENTITY(! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), false || (! (bool(bvec4(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(false, ! (! (false)))))))))))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), true))), (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 1.0)), (float(vec2(injectionSwitch.y, 1.0))) / 1.0))) / 1.0))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false), ! (_GLF_IDENTITY(! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), false || (! (bool(bvec4(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(false, ! (! (false)))))))))))))), false)))), false, false)))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), true))), (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.2)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, cos(0.0)))))) < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))).y)), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false), ! (_GLF_IDENTITY(! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), false || (! (bool(bvec4(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(false, ! (! (false)))))))))))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), true))), (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 1.0)), (float(vec2(injectionSwitch.y, 1.0))) / 1.0))) / 1.0))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false), ! (_GLF_IDENTITY(! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), false || (! (bool(bvec4(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(false, ! (! (false)))))))))))))), false)))), bool(bvec3((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), true))), (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.2)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, cos(0.0)))))) < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))).y)), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false), ! (_GLF_IDENTITY(! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), false || (! (bool(bvec4(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(false, ! (! (false)))))))))))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), true))), (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 1.0)), (float(vec2(injectionSwitch.y, 1.0))) / 1.0))) / 1.0))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false), ! (_GLF_IDENTITY(! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), false || (! (bool(bvec4(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(false, ! (! (false)))))))))))))), false)))), false, false))))))))) && true)))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), false, false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.8)), bool(false)))), float(_GLF_FUZZED((+ 6.7))), bool(false))) < injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))) && (bool(bvec4((bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3.4)), bool(false)))))), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec2(true, false))))), false))))))))))), false, false, false))))), _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (false ? _GLF_FUZZED(vec2(-8.7, 9.3)) : _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))))).x < injectionSwitch.y)) || false)))), ! (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), true, false)))))))), (_GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false, _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))), ! (! (bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))))))) && true)))), _GLF_IDENTITY(bool(bvec4((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (true))))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)) || _GLF_IDENTITY(false, ! (! (false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false), ! (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))))))), _GLF_IDENTITY(false, bool(bool(false))), false, false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))) && (bool(bvec4((bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))))))), false, false, false)))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (false ? _GLF_FUZZED(vec2(-8.7, 9.3)) : _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))))).x < injectionSwitch.y)) || false)))), ! (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), true, false)))))))), (_GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false, _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))), ! (! (bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))))))) && true)))), _GLF_IDENTITY(bool(bvec4((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (true))))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)) || _GLF_IDENTITY(false, ! (! (false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false), ! (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))))))), _GLF_IDENTITY(false, bool(bool(false))), false, false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))) && (bool(bvec4((bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))))))), false, false, false)))))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (false ? _GLF_FUZZED(vec2(-8.7, 9.3)) : _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))))).x < injectionSwitch.y)) || false)))), ! (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), true, false)))))))), (_GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false, _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))), ! (! (bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))))))) && true)))), _GLF_IDENTITY(bool(bvec4((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (true))))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)) || _GLF_IDENTITY(false, ! (! (false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (bool(bool(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false), ! (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))))))), _GLF_IDENTITY(false, bool(bool(false))), false, false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))) && (bool(bvec4((bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))))))), false, false, false)))))), true, true)))))), true, true)))))))))) ? uvec3(26742u, 5315u, 36520u) : _GLF_FUZZED(uvec3(59134u, 49677u, _GLF_IDENTITY(109501u, _GLF_IDENTITY((109501u) | (109501u), ((109501u) | (109501u)) | 0u)))))))))))).x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))) << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(num_workgroup) : uint(3u))))) ^ (gl_WorkGroupSize.x)), (gl_WorkGroupSize.x) - 0u)))))) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))), (0u ^ 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))), min((_GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))))))));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u))) + subgroup_id * subgroup_size + subgroup_local_id;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_2(1, _GLF_struct_0(mat4x3(_GLF_IDENTITY(1.0, (1.0) * 1.0)), mat2x4(1.0), ivec3(1), uvec2(1u)), _GLF_struct_1(1u, bvec4(_GLF_IDENTITY(true, (true) && true)), ivec4(_GLF_IDENTITY(1, 0 | (1))), mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-31.57) : 1.0))), vec4(1.0), bvec2(true), mat3(1.0)), 1), _GLF_struct_3(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (true ? workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u))), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u), clamp(uvec2(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (50660u & 0u) ^ (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), uint(uvec4(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), 0u, 1u, 0u)))), 1u), uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_id))) * subgroup_size, subgroup_id * subgroup_size)), 1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u), clamp(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))) * subgroup_size, subgroup_id * subgroup_size)), 1u), uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u), min(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u), uvec2(_GLF_IDENTITY(uvec3(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u), 0u), max(uvec3(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u), 0u), uvec3(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u), 0u))))))), (false ? _GLF_FUZZED(uvec2(80871u, 148275u)) : uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))))), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u | 0u)), (subgroup_id * subgroup_size) / 1u))), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u), clamp(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))) * subgroup_size, subgroup_id * subgroup_size), uint(uvec4(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), 0u, 1u, 0u)))), 1u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (subgroup_id * subgroup_size)), max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_id))) * subgroup_size, subgroup_id * subgroup_size)), 1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u), clamp(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u), uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u), (false ? _GLF_FUZZED(uvec2(80871u, 148275u)) : uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u)))))))), uvec2(0u, 0u) + ((_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u))), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u), clamp(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), uint(uvec4(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), 0u, 1u, 0u)))), 1u), uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_id))) * subgroup_size, subgroup_id * subgroup_size)), 1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u), clamp(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u), uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u), (false ? _GLF_FUZZED(uvec2(80871u, 148275u)) : uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u))))))))))) | ((_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u))), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u), _GLF_IDENTITY(clamp(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), uint(uvec4(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), 0u, 1u, 0u)))), 1u), uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((true ? subgroup_id : _GLF_FUZZED(workgroup_id)), ~ (~ ((true ? subgroup_id : _GLF_FUZZED(workgroup_id)))))) * subgroup_size, subgroup_id * subgroup_size)), 1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u), clamp(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u), uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u), (false ? _GLF_FUZZED(uvec2(80871u, 148275u)) : uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_id * subgroup_size)), 1u)))))), ~ (~ (clamp(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), uint(uvec4(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), 0u, 1u, 0u)))), 1u), uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((true ? subgroup_id : _GLF_FUZZED(workgroup_id)), ~ (~ ((true ? subgroup_id : _GLF_FUZZED(workgroup_id)))))) * subgroup_size, subgroup_id * subgroup_size)), 1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u), clamp(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))))), 1u), uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u), (false ? _GLF_FUZZED(uvec2(80871u, 148275u)) : uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_id * subgroup_size)), 1u))))))))))))), uvec2(0u, 0u) ^ ((_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u))), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u), clamp(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), uint(uvec4(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), 0u, 1u, 0u)))), 1u), uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), subgroup_id * subgroup_size)), 1u), clamp(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), subgroup_size)))), 1u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))), subgroup_id * subgroup_size, subgroup_id * subgroup_size))) * 1u)) << 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id)) * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))) * 1u)) << 0u)), (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id)) * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))) * 1u)) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id)) * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))) * 1u)) << 0u)), ((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id)) * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))) * 1u)) << 0u))) | ((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id)) * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))) * 1u)) << 0u))))) - 0u)) - 0u))), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), 1u), uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), subgroup_id * subgroup_size)), _GLF_IDENTITY(1u, (1u) * 1u))))))))) ^ uvec2(0u, 0u)), (uvec2(subgroup_id * subgroup_size, 1u)) | (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), max(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) * (uvec2(1u, 1u) | uvec2(1u, 1u))), _GLF_IDENTITY(uvec2(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_size, (1u ^ 1u), 0u, 0u)), min(uint(uvec4(subgroup_size, (1u ^ 1u), 0u, 0u)), uint(uvec4(subgroup_size, (1u ^ 1u), 0u, 0u))))), 1u), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec2(101571u, 104330u)), (_GLF_FUZZED(uvec2(101571u, 104330u))) | uvec2(0u, 0u)) : uvec2(subgroup_id * subgroup_size, 1u))))))))) : _GLF_FUZZED(subgroup_id))) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 1u * (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(106998u), _GLF_IDENTITY(uint(uint(_GLF_FUZZED(106998u))), (_GLF_IDENTITY(uint(uint(_GLF_FUZZED(106998u))), clamp(uint(uint(_GLF_FUZZED(106998u))), uint(uint(_GLF_FUZZED(106998u))), uint(uint(_GLF_FUZZED(106998u)))))) >> 0u)) : _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u))) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size), 0u | ((_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(106998u), _GLF_IDENTITY(uint(uint(_GLF_FUZZED(106998u))), (_GLF_IDENTITY(uint(uint(_GLF_FUZZED(106998u))), clamp(uint(uint(_GLF_FUZZED(106998u))), uint(uint(_GLF_FUZZED(106998u))), uint(uint(_GLF_FUZZED(106998u)))))) >> 0u)) : _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u))) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-- workgroup_size)) : _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 1u * (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(106998u), _GLF_IDENTITY(uint(uint(_GLF_FUZZED(106998u))), (_GLF_IDENTITY(uint(uint(_GLF_FUZZED(106998u))), clamp(uint(uint(_GLF_FUZZED(106998u))), uint(uint(_GLF_FUZZED(106998u))), uint(uint(_GLF_FUZZED(_GLF_IDENTITY(106998u, (false ? _GLF_FUZZED(122546u) : 106998u)))))))) >> 0u)) : _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u))) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size), 0u | ((_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(106998u), _GLF_IDENTITY(uint(uint(_GLF_FUZZED(106998u))), (_GLF_IDENTITY(uint(uint(_GLF_FUZZED(106998u))), clamp(uint(uint(_GLF_FUZZED(106998u))), uint(uint(_GLF_FUZZED(106998u))), uint(uint(_GLF_FUZZED(106998u)))))) >> 0u)) : _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u))) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))))))))), 1u, mat2(1.0)), mat3x4(1.0), vec3(1.0));
 atomicStore(buf[_GLF_struct_replacement_4._f1.next_virtual_gid], uint(1), _GLF_IDENTITY(4, min(4, 4)), 64, 4);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}
