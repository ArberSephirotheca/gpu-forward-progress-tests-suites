#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true)))), _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(_GLF_IDENTITY(false || (false), (false || (false)) && true), (_GLF_IDENTITY(false || (false), bool(bvec4(false || (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), true), bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), true), true, true))))))), (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)), bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), true), true, true)))))))) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), false)))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(308.791)), _GLF_IDENTITY((vec2((injectionSwitch)[0], _GLF_FUZZED(308.791))), max((vec2((injectionSwitch)[0], _GLF_FUZZED(308.791))), (vec2((injectionSwitch)[0], _GLF_FUZZED(308.791))))) * abs(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), vec2(_GLF_FUZZED((954.236 + -802.239)), (injectionSwitch)[1]), bvec2(false, true))).x : _GLF_FUZZED(8.6))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u))) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.7)), float(injectionSwitch.x), bool(true)))), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)) : _GLF_FUZZED(vec2(1.0, -3.7)), (true ? _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)) : _GLF_FUZZED(vec2(1.0, -3.7))) * mat2(1.0)))).x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(float(true))), (true ? _GLF_IDENTITY(float(_GLF_FUZZED(float(true))), (false ? _GLF_FUZZED(-9.1) : _GLF_IDENTITY(float(_GLF_FUZZED(float(true))), max(_GLF_IDENTITY(float(_GLF_FUZZED(float(true))), (true ? float(_GLF_FUZZED(float(true))) : _GLF_FUZZED(-7.3))), float(_GLF_FUZZED(float(true))))))) : _GLF_FUZZED(-7.7))), float(injectionSwitch.x), bool(true)))) * abs(_GLF_IDENTITY(1.0, (1.0) * 1.0)))))), _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) | (gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((gl_WorkGroupSize) | (gl_WorkGroupSize), ((gl_WorkGroupSize) | (gl_WorkGroupSize)) + (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u))))))))))).x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)).x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), (workgroup_size), (workgroup_size)))) - 0u)) / 1u), 1u * (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), 0u ^ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), 1u * ((workgroup_size))) | (workgroup_size))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(73296u, 67761u, 164712u).y) : _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, uint(uvec3(_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)), 1u, 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((true ? workgroup_size : _GLF_FUZZED(uint(_GLF_IDENTITY(34.82, 1.0 * (34.82))))), 1u * ((true ? workgroup_size : _GLF_FUZZED(uint(_GLF_IDENTITY(_GLF_IDENTITY(34.82, min(34.82, 34.82)), 1.0 * (34.82))))))))), (_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), (workgroup_size), (workgroup_size)))) - 0u)) / 1u), 1u * (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) | 0u), 0u ^ (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size))) | (workgroup_size)))))))))) >> 0u)), min((_GLF_IDENTITY(~ (workgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)))))), ~ (~ (((workgroup_size))))) / 1u), (workgroup_size), (workgroup_size)))) - 0u)), (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), max(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) >> 0u), (workgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(((workgroup_size)), ~ (~ (((workgroup_size))))) / 1u, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(((workgroup_size)), ~ (~ (((workgroup_size))))) / 1u, (_GLF_IDENTITY(_GLF_IDENTITY(((workgroup_size)), ~ (~ (((workgroup_size))))) / 1u, max(_GLF_IDENTITY(((workgroup_size)), ~ (~ (((workgroup_size))))) / 1u, _GLF_IDENTITY(((workgroup_size)), ~ (~ (((workgroup_size))))) / 1u))) << 0u)))), (workgroup_size), (workgroup_size)))) - 0u)), uint(uvec4((_GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), _GLF_IDENTITY(((workgroup_size)), ~ (~ (((workgroup_size))))) / 1u), (workgroup_size), (workgroup_size)))) - 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)))) | (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), (0u | 0u) + (_GLF_IDENTITY((workgroup_size), _GLF_IDENTITY(~ (~ ((workgroup_size))), (~ (~ ((workgroup_size)))) / 1u))))) / 1u), _GLF_IDENTITY(((workgroup_size)), ~ (~ (((workgroup_size))))) / 1u), (workgroup_size), (workgroup_size)))) - 0u)), (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), _GLF_IDENTITY(((workgroup_size)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), 0u | ((workgroup_size))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((workgroup_size), 0u | ((workgroup_size))))))))) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))), (false ? _GLF_FUZZED(packUnorm4x8(vec4(8.5, 9.8, -88.34, -9478.6253))) : _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))), ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))) << 0u))), (workgroup_size)))) - 0u)), min((_GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), _GLF_IDENTITY(((workgroup_size)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), 0u | ((workgroup_size))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((workgroup_size), 0u | ((workgroup_size))))))))) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))), (false ? _GLF_FUZZED(packUnorm4x8(vec4(8.5, 9.8, -88.34, -9478.6253))) : _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))), ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))) << 0u))), (workgroup_size)))) - 0u)), (_GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), _GLF_IDENTITY(((workgroup_size)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), 0u | ((workgroup_size))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((workgroup_size), 0u | ((workgroup_size))))))))) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))), (false ? _GLF_FUZZED(packUnorm4x8(vec4(8.5, 9.8, -88.34, -9478.6253))) : _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size))), ((_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))) << 0u))), (workgroup_size)))) - 0u))))) >> 0u))) / 1u), 1u * _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), 0u ^ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), 1u * (_GLF_IDENTITY((workgroup_size), 0u | ((workgroup_size))))) | (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(num_workgroup))))))))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) ^ ((~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), 0u ^ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), _GLF_IDENTITY(1u, min(1u, 1u)) * (_GLF_IDENTITY((workgroup_size), 0u | ((workgroup_size))))) | (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((true ? workgroup_size : _GLF_FUZZED(num_workgroup)), ((true ? workgroup_size : _GLF_FUZZED(num_workgroup))) | ((true ? workgroup_size : _GLF_FUZZED(num_workgroup)))))))))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), true && (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))) ? _GLF_FUZZED(uvec3(73296u, 67761u, 164712u).y) : _GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(uint(34.82))))), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), (workgroup_size), (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))))), (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), (workgroup_size), (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))))), ((_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), (workgroup_size), (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))))))) + 0u)) | ((_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), (workgroup_size), (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))))))) - _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), max(0u, 0u)))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), max(0u, 0u))))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), max(0u, 0u)))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), max(0u, 0u))))) << 0u)))), _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, (1u ^ 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))), uvec4(0u, 0u, 0u, 0u) | (uvec4(0u, (1u ^ 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))))))))) / 1u), 1u * (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) | (0u)))) ^ (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size))) | (workgroup_size)))))))))) >> 0u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), _GLF_IDENTITY(clamp(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), (workgroup_size), (workgroup_size)), clamp(clamp(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), (workgroup_size), (workgroup_size)), clamp(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), (workgroup_size), (workgroup_size)), clamp(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), (workgroup_size), (workgroup_size)))))) - 0u, 0u ^ ((_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), (workgroup_size), (workgroup_size)))) - 0u)))) / 1u), 1u * (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) | (workgroup_size), ~ (~ ((workgroup_size) | (workgroup_size))))), 0u ^ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), 1u * ((workgroup_size))) | (workgroup_size))))))), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(73296u, 67761u, 164712u).y) : _GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_IDENTITY(_GLF_FUZZED(uint(34.82)), ~ (~ (_GLF_FUZZED(uint(34.82)))))))), (_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), (workgroup_size), (_GLF_IDENTITY(workgroup_size, (workgroup_size) - (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))))) - 0u)) / 1u), 1u * (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), (workgroup_size) | (workgroup_size)))))))))) >> 0u)), max((_GLF_IDENTITY(~ (workgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), min((workgroup_size), (workgroup_size))), (_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), _GLF_IDENTITY(((workgroup_size)) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(((workgroup_size)) / 1u, uint(uvec2(((workgroup_size)) / 1u, 1u)))) | (((workgroup_size)) / 1u), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(((workgroup_size)) / 1u, uint(uvec2(((workgroup_size)) / 1u, 1u)))) | (((workgroup_size)) / 1u), uint(uvec3((_GLF_IDENTITY(((workgroup_size)) / 1u, uint(uvec2(((workgroup_size)) / 1u, 1u)))) | (((workgroup_size)) / 1u), 0u, 0u))), 0u, (142u & 0u), 0u))))), (workgroup_size), (workgroup_size)))) - 0u)) / 1u), 1u * (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | _GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u)), 0u ^ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), 1u * ((workgroup_size))) | (workgroup_size))))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(832.880) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y), min(min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y), min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)))))))) ? _GLF_FUZZED(uvec3(73296u, 67761u, 164712u).y) : _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(uint(34.82))))), (_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), _GLF_IDENTITY(((workgroup_size)) / 1u, uint(uvec3(_GLF_IDENTITY(((workgroup_size)) / 1u, (((workgroup_size)) / 1u) << 0u), 1u, 0u)))), (workgroup_size), (workgroup_size)))) - 0u)) / 1u), 1u * (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), 0u ^ (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))))))), max(_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(uint(34.82))))), (_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), (workgroup_size), (workgroup_size)))) - 0u)) / _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, 0u | (1u))))), 1u * (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), 0u ^ (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))))))), _GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(uint(34.82))))), 0u | ((_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(uint(34.82))))))), (_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), _GLF_IDENTITY(((workgroup_size)) / 1u, 0u ^ (((workgroup_size)) / 1u))), (workgroup_size), (workgroup_size)))) - 0u)) / 1u), 1u * (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), 0u ^ (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) | (workgroup_size)))))))))))) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_size), ~ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((workgroup_size))), ~ (~ (~ (workgroup_size))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u))), 0u | (workgroup_size))), (_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))), ((workgroup_size)) / 1u), (workgroup_size), (workgroup_size)))) - _GLF_IDENTITY(0u, (0u) | (0u)))) / 1u), 1u * (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uint(workgroup_size), (uint(workgroup_size)) | (uint(workgroup_size)))))) | (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), (workgroup_size) | (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)))), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), 1u * ((workgroup_size))) | (workgroup_size))), ~ (~ ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), clamp((workgroup_size), _GLF_IDENTITY((workgroup_size), ~ (~ ((workgroup_size)))), (workgroup_size))), 1u * ((workgroup_size))) | (workgroup_size)))))))))), (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(73296u, 67761u, 164712u).y) : _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(uint(34.82))))), (_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), (workgroup_size), (workgroup_size)))) - 0u)) / 1u), (_GLF_IDENTITY(true ? _GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(uint(34.82))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))), clamp(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), (workgroup_size), (workgroup_size)))) - 0u)) / 1u), uint(_GLF_IDENTITY(uvec2(~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(uint(34.82))))), (_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), (workgroup_size), (workgroup_size)))) - 0u)) / 1u), 1u), uvec2(uvec3(uvec2(~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(uint(34.82))))), (_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), (workgroup_size), (workgroup_size)))) - 0u)) / 1u), 1u), 1u))))) : _GLF_FUZZED(num_workgroup), ~ (_GLF_IDENTITY(~ (true ? _GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(uint(34.82))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))), clamp(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), (workgroup_size), (workgroup_size)))) - 0u)) / 1u), uint(_GLF_IDENTITY(uvec2(~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(uint(34.82))))), (_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), (workgroup_size), (workgroup_size)))) - 0u)) / 1u), 1u), uvec2(uvec3(uvec2(~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(uint(34.82))))), (_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), (workgroup_size), (workgroup_size)))) - 0u)) / 1u), 1u), 1u))))) : _GLF_FUZZED(num_workgroup)), (false ? _GLF_FUZZED(subgroup_id) : ~ (true ? _GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(uint(34.82))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))), clamp(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), (workgroup_size), (workgroup_size)))) - 0u)) / 1u), uint(_GLF_IDENTITY(uvec2(~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(uint(34.82))))), (_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), (workgroup_size), (workgroup_size)))) - 0u)) / 1u), 1u), uvec2(uvec3(uvec2(~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(uint(34.82))))), (_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), (workgroup_size), (workgroup_size)))) - 0u)) / 1u), 1u), 1u))))) : _GLF_FUZZED(num_workgroup)))))))), 1u * (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) << 0u, ((workgroup_size) << 0u) - (0u << _GLF_IDENTITY(uint(5u), uint(5u))))), (workgroup_size) | (workgroup_size)))))))))) >> 0u))))))) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.5)), bool(false)))) + 0.0)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (injectionSwitch)))), vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(dot(vec3(0.0, log(1.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, log(1.0), 1.0), vec3(0.0, 0.0, 1.0))), 1.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6.8))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, true)))), false)), (bool(bvec4(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true)), false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, true)))), false)), (bool(bvec4(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true)), false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, false || (false)), true, false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))), true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)) || false))))))), true)), false))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true)), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), _GLF_IDENTITY(true, false || (true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true), _GLF_IDENTITY(true, ! (! (true))))))))), ! (! (! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true), true, false))), true))))))))))) && true)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, false || (false)), true, false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))), true)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)) || false))))))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)) || false))))))), true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true)), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), _GLF_IDENTITY(true, false || (true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true), true)))))), ! (! (! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (bool(bvec4(false, false, true, false))) || false)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true), true, false))), true))))))))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), false || (bool(bvec3(false, false, false)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true)))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size, subgroup_size)), max(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size, subgroup_size)), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size, subgroup_size)), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size, subgroup_size))) | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size, subgroup_size)))))) + _GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), max(uvec2(subgroup_local_id, 1u), uvec2(subgroup_local_id, 1u)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)))))) << 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)))))) << 0u))) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((true ? _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (false ? _GLF_FUZZED((65338u << workgroup_base)) : (subgroup_local_id + 1) % subgroup_size))), (((subgroup_local_id + 1) % subgroup_size)) >> 0u) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(_GLF_IDENTITY(uvec4(_GLF_FUZZED(subgroup_size), 0u, (0u | 1u), 0u), (uvec4(_GLF_FUZZED(subgroup_size), 0u, (0u | 1u), 0u)) - (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(0u), uvec4(0u)))))), (_GLF_FUZZED(subgroup_size)) * 1u)), ((true ? _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY((65338u << _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), clamp((65338u << _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), (65338u << _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), (65338u << _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))) : (subgroup_local_id + 1) % subgroup_size))), (((subgroup_local_id + 1) % subgroup_size)) >> 0u) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(_GLF_IDENTITY(uvec4(_GLF_FUZZED(subgroup_size), 0u, (0u | 1u), 0u), (uvec4(_GLF_FUZZED(subgroup_size), 0u, (0u | 1u), 0u)) - (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(0u), uvec4(0u)))))), (_GLF_FUZZED(subgroup_size)) * 1u))) | ((true ? _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))) ? _GLF_FUZZED((65338u << workgroup_base)) : (subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), 0u | ((((subgroup_local_id + 1) % subgroup_size)))) >> 0u) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(_GLF_IDENTITY(uvec4(_GLF_FUZZED(subgroup_size), 0u, (0u | 1u), 0u), (uvec4(_GLF_FUZZED(subgroup_size), 0u, (0u | 1u), 0u)) - (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(0u), uvec4(0u)))))), (_GLF_FUZZED(subgroup_size)) * 1u)))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, false || (true)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, false || (true))))))) || false), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), _GLF_IDENTITY(true, ! (! (true))), true, true)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-610.700)), _GLF_IDENTITY((float(_GLF_FUZZED(-610.700))), max((float(_GLF_FUZZED(-610.700))), (float(_GLF_FUZZED(-610.700))))) + abs(0.0)), float(_GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))), _GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(true)), false || (! (bool(true)))), _GLF_IDENTITY(bool(bvec3(! (bool(true)), true, false)), false || (bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((bool(true)), false || ((bool(_GLF_IDENTITY(true, (true) && true))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), ! (! (! (_GLF_IDENTITY(true, (true) && true)))))))))))))) || (_GLF_IDENTITY(! (bool(true)), (! (bool(true))) || false))), true, false)))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)), _GLF_IDENTITY(bool(bool(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))), false || (bool(bool(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat2x4(injectionSwitch[1], 1.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0))))).y)) || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(969.582) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(float(93461)) : injectionSwitch.x)))) > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)))) || false))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true)) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true)) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true)) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true)) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true)) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, (true ? _GLF_IDENTITY(64, 0 | (64)) : _GLF_IDENTITY(_GLF_FUZZED(57722), 0 ^ (_GLF_FUZZED(57722))))))), _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, ~ (~ (0))), 0))) | (0)), clamp(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(0, int(ivec2(0, 1)))))), (_GLF_IDENTITY((_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(0, int(ivec2(0, 1)))))), ((_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(0, int(ivec2(0, 1))))))) | ((_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(0, int(ivec2(0, 1))))))))) >> 0) | (0)), _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, 1 * (0)))), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(22424) : _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(0, (0) | (0))) / 1))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(sqrt(vec2(52.38, 2.4))))), sin(vec2(0.0, 0.0)) + (false ? _GLF_FUZZED(injectionSwitch) : (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * mat2(1.0)))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(sqrt(vec2(52.38, 2.4))))), _GLF_IDENTITY(sin(vec2(0.0, 0.0)) + (false ? _GLF_FUZZED(injectionSwitch) : (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * mat2(1.0)), vec2(1.0, 1.0) * (sin(vec2(0.0, 0.0)) + (false ? _GLF_FUZZED(injectionSwitch) : (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * mat2(1.0))))))))) - vec2(0.0, 0.0)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, (false ? _GLF_FUZZED(28.15) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])))).x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), float(_GLF_FUZZED(-8.5)), bool(false)))))) - 0.0))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true))))), _GLF_IDENTITY(true, _GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(true, ! (! (true)))), false, true)), bool(bvec4(bool(bvec3((_GLF_IDENTITY(true, ! (! (true)))), false, true)), true, true, true))))) && (true)))))) || false)))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-532.204)), float(injectionSwitch.y), bool(true))))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(atanh(-73.28)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(atanh(-73.28), 0.0 + (atanh(-73.28)))))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) : _GLF_FUZZED(56.02))) > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), true)), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec4(bvec2(bool(bool(false)), true), false, true))))) || false, ((bool(bvec2(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), ! (! (bool(_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((bool(bool(_GLF_IDENTITY(false, true && (false))))), true, false), bvec3(bvec3(bvec3((bool(bool(_GLF_IDENTITY(false, true && (false))))), true, false))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((bool(bool(_GLF_IDENTITY(false, true && (false))))), true, false), bvec3(bvec3(bvec3((bool(bool(_GLF_IDENTITY(false, true && (false))))), true, false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3((bool(bool(_GLF_IDENTITY(false, true && (false))))), true, false), bvec3(bvec3(bvec3((bool(bool(_GLF_IDENTITY(false, true && (false))))), true, false))))), true))), true, true)))) || false)))), true))) || false) || false)))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), true)), _GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec4(bvec2(bool(bool(false)), true), false, true))))), ((bool(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec4(bvec2(bool(bool(false)), true), false, true)))))) && true) || false, ((bool(bvec2(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), ! (! (bool(_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((bool(bool(_GLF_IDENTITY(false, true && (false))))), true, false), bvec3(bvec3(bvec3((bool(bool(_GLF_IDENTITY(false, true && (false))))), true, false))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((bool(bool(_GLF_IDENTITY(false, true && (false))))), true, false), bvec3(bvec3(bvec3((bool(bool(_GLF_IDENTITY(false, true && (false))))), true, false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3((bool(bool(_GLF_IDENTITY(false, true && (false))))), true, false), bvec3(bvec3(bvec3((bool(bool(_GLF_IDENTITY(false, true && (false))))), true, false))))), true))), true, true)))) || false)))), true))) || false) || false))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) || false)))))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true))), true, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-436.145), _GLF_FUZZED(88.56)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), mix(vec2((mix(vec2(_GLF_FUZZED(-436.145), _GLF_FUZZED(88.56)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))[0], (mix(vec2(_GLF_FUZZED(-436.145), _GLF_FUZZED(88.56)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))[1]), vec2(_GLF_FUZZED(3575.8688), _GLF_FUZZED(31.89)), bvec2(false, false)))).x > injectionSwitch.y)) || (_GLF_DEAD(false))), true, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))))))), false, true)), true)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), true))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), false, false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
