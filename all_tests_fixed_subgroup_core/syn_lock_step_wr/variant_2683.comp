#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) || false) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false))))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false)))))))))))))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))))))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)), ! (! (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))) || false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(528.642)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9566.8058)), bool(false))), float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9566.8058)), bool(false))), float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9566.8058)), bool(false))), float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0)))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9566.8058)), bool(false))), float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(528.642)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9566.8058)), bool(false))), float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9566.8058)), bool(false))), float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9566.8058)), bool(false))), float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0)))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9566.8058)), bool(false))), float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0)))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(528.642)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9566.8058)), bool(false))), float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9566.8058)), bool(false))), float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9566.8058)), bool(false))), float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0)))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9566.8058)), bool(false))), float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0)))))), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(528.642)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9566.8058)), bool(false))), float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9566.8058)), bool(false))), float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9566.8058)), bool(false))), float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0)))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9566.8058)), bool(false))), float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0)))))))), false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(528.642)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9566.8058)), bool(false))), float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9566.8058)), bool(false))), float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9566.8058)), bool(false))), float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0)))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9566.8058)), bool(false))), float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0)))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(528.642)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9566.8058)), bool(false))), float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9566.8058)), bool(false))), float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9566.8058)), bool(false))), float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0)))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9566.8058)), bool(false))), float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0)))))), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(528.642)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9566.8058)), bool(false))), float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9566.8058)), bool(false))), float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9566.8058)), bool(false))), float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0)))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9566.8058)), bool(false))), float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0)))))))), false))), true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))))), vec2(_GLF_FUZZED(1.8), _GLF_FUZZED(26.63)), bvec2(false, false))))).y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), clamp(float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), clamp(float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0))), clamp(float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) - _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)))))), float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))) || false)))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(805.146, 22.45)) : injectionSwitch)).x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true)))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0)), 1.0, 1.0), (mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0)), 1.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0))), (vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0)), 1.0, 1.0), (mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0)), 1.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))) / vec2(1.0, 1.0))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (false))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), ! (! (bool(bool(false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(3248.8442)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(1.0, 0.0, 0.0)), 1.0 * (dot(vec3(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(1.0, 0.0, 0.0))))), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-52.86)), float(dot(vec4(1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, 1.0))), bool(true)))), 1.0, 0.0), (mat2x4(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(1.0, 0.0, 0.0)), 1.0 * (dot(vec3(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(1.0, 0.0, 0.0))))), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-52.86)), float(dot(vec4(1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, 1.0))), bool(true)))), 1.0, 0.0)) * mat2(1.0)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-81.59)), bool(false))) > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, bool(bool(((injectionSwitch.x > injectionSwitch.y)) || false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, true, true))), false)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y, injectionSwitch.y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), clamp(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), clamp(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), injectionSwitch.y, injectionSwitch.y))))))) && true), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (_GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false))))))))), (_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, true, true))), false)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (true ? clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y) : _GLF_FUZZED(-715.865))), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), 1.0 * (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), injectionSwitch.y, injectionSwitch.y)))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7898.0002))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), clamp(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))) - abs(vec2(0.0, 0.0))).y, injectionSwitch.y))), _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), clamp(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) + sqrt(0.0))), min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), injectionSwitch.y, injectionSwitch.y))))))) && true), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, ! (! (true))))), (bool(bvec2(false, true))) || false)))))))))) && true))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-81.59), _GLF_IDENTITY(float(mat4(_GLF_FUZZED(-81.59), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), (true ? float(mat4(_GLF_FUZZED(-81.59), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(-8.1))))), bool(false))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-81.59)), bool(false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-81.59)), bool(false)))) - 0.0) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(true, true, true))), false)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y, injectionSwitch.y)))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), clamp(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y))), _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(clamp(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), float(mat2x4(_GLF_IDENTITY(clamp(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (clamp(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.4)), vec2(_GLF_FUZZED(-0.3), (injectionSwitch)[1]), bvec2(false, true))).y, injectionSwitch.y))), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1.5) : injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))) - 0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, 0.0, abs(1.0))))), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), injectionSwitch.y, injectionSwitch.y))))))) && true), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false), true, false, true))), (bool(bvec2(false, true))) || false)))))))))))))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), float(_GLF_FUZZED(72.05)), bool(false))))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))), ! (! ((_GLF_DEAD(false)))))))))) && true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * cos(0.0))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! ((false)))))), true && _GLF_IDENTITY((false), ! (! ((false))))), true && (_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), false || ((false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec2(_GLF_IDENTITY((false), false || ((false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && true)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 1u))) + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y) || false)))))) || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(false))), false || ((! (_GLF_DEAD(false))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-462.687)), bool(false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(workgroup_base)), (uint(uint(workgroup_base))) | 0u), _GLF_IDENTITY(0u + (_GLF_IDENTITY(uint(uint(workgroup_base)), (uint(uint(workgroup_base))) | 0u)), clamp(0u + (_GLF_IDENTITY(uint(uint(workgroup_base)), (uint(uint(workgroup_base))) | 0u)), 0u + (_GLF_IDENTITY(uint(uint(workgroup_base)), (uint(uint(workgroup_base))) | 0u)), _GLF_IDENTITY(0u + (_GLF_IDENTITY(uint(uint(workgroup_base)), (uint(uint(workgroup_base))) | 0u)), min(0u + (_GLF_IDENTITY(uint(uint(workgroup_base)), (uint(uint(workgroup_base))) | 0u)), 0u + (_GLF_IDENTITY(uint(uint(workgroup_base)), (uint(uint(workgroup_base))) | 0u)))))))) + _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u | (subgroup_local_id + 1), min(_GLF_IDENTITY(0u | (subgroup_local_id + 1), (false ? _GLF_FUZZED(151220u) : 0u | (subgroup_local_id + 1))), 0u | (subgroup_local_id + 1)))), clamp(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u | (subgroup_local_id + 1), min(_GLF_IDENTITY(0u | (subgroup_local_id + 1), (false ? _GLF_FUZZED(151220u) : 0u | (subgroup_local_id + 1))), 0u | (subgroup_local_id + 1)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u | (subgroup_local_id + 1), min(_GLF_IDENTITY(0u | (subgroup_local_id + 1), (false ? _GLF_FUZZED(151220u) : 0u | (subgroup_local_id + 1))), 0u | (subgroup_local_id + 1)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u | (subgroup_local_id + 1), min(_GLF_IDENTITY(0u | (subgroup_local_id + 1), (false ? _GLF_FUZZED(151220u) : 0u | (subgroup_local_id + 1))), 0u | (subgroup_local_id + 1)))), min(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u | (subgroup_local_id + 1), min(_GLF_IDENTITY(0u | (subgroup_local_id + 1), (false ? _GLF_FUZZED(151220u) : 0u | (subgroup_local_id + 1))), 0u | (subgroup_local_id + 1)))), _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u | (subgroup_local_id + 1), min(_GLF_IDENTITY(0u | (subgroup_local_id + 1), (false ? _GLF_FUZZED(151220u) : 0u | (subgroup_local_id + 1))), 0u | (subgroup_local_id + 1)))))), _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u | (subgroup_local_id + 1), min(_GLF_IDENTITY(0u | (subgroup_local_id + 1), (false ? _GLF_FUZZED(151220u) : 0u | (subgroup_local_id + 1))), 0u | (subgroup_local_id + 1)))), _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u | (subgroup_local_id + 1), min(_GLF_IDENTITY(0u | (subgroup_local_id + 1), (false ? _GLF_FUZZED(151220u) : 0u | (subgroup_local_id + 1))), 0u | (subgroup_local_id + 1)))))), _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u | (subgroup_local_id + 1), min(_GLF_IDENTITY(0u | (subgroup_local_id + 1), (false ? _GLF_FUZZED(151220u) : 0u | (subgroup_local_id + 1))), 0u | (subgroup_local_id + 1)))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), 0u | (subgroup_local_id + 1)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) | 0u), (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) | 0u, ((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) | 0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u))) + 0u)) : _GLF_FUZZED(subgroup_size), ~ (~ _GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) | 0u)) : _GLF_FUZZED(subgroup_size)), _GLF_IDENTITY(((true ? _GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) | 0u)) : _GLF_FUZZED(subgroup_size))) | ((true ? _GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) | 0u)) : _GLF_FUZZED(subgroup_size))), (_GLF_IDENTITY(((true ? _GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) | 0u)) : _GLF_FUZZED(subgroup_size))) | ((true ? _GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) | 0u)) : _GLF_FUZZED(subgroup_size))), 0u ^ (((true ? _GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) | 0u)) : _GLF_FUZZED(subgroup_size))) | ((true ? _GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) | 0u)) : _GLF_FUZZED(subgroup_size)))))) | (((true ? _GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) | 0u)) : _GLF_FUZZED(subgroup_size))) | ((true ? _GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) | 0u)) : _GLF_FUZZED(subgroup_size)))))))))), 1u, _GLF_IDENTITY(1u, max(1u, 1u)))), max(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) | 0u)) : _GLF_FUZZED(subgroup_size), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) | 0u)) : _GLF_FUZZED(subgroup_size)), ((true ? _GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) | 0u)) : _GLF_FUZZED(subgroup_size))) | ((true ? _GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) | 0u)) : _GLF_FUZZED(subgroup_size))))), (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) | 0u)) : _GLF_FUZZED(subgroup_size)), ((true ? _GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) | 0u)) : _GLF_FUZZED(subgroup_size))) | ((true ? _GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) | 0u)) : _GLF_FUZZED(subgroup_size))))), (true ? ~ (~ _GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) | 0u)) : _GLF_FUZZED(subgroup_size)), ((true ? _GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) | 0u)) : _GLF_FUZZED(subgroup_size))) | ((true ? _GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) | 0u)) : _GLF_FUZZED(subgroup_size))))) : _GLF_FUZZED(num_workgroup)))) << 0u)))), 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), clamp(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(1u, max(1u, 1u)))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u | (subgroup_local_id + 1), 0u + (_GLF_IDENTITY(0u | (subgroup_local_id + 1), (0u | (subgroup_local_id + 1)) | (0u | (subgroup_local_id + 1)))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id)))) ^ 0u)) - 0u))) >> 0u)), min(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id)))) ^ 0u)) - 0u))) >> 0u)), max((_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id)))) ^ 0u)) - 0u))) >> 0u)), (_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id)))) ^ 0u)) - 0u))) >> 0u)))), (_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id)))) ^ 0u)) - 0u))) >> 0u)))) | 0u)) : _GLF_FUZZED(subgroup_size), ~ (~ _GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)) >> 0u, 0u ^ (((subgroup_local_id + 1)) >> 0u)))) | 0u)) : _GLF_FUZZED(subgroup_size)), _GLF_IDENTITY(((true ? _GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) | 0u)) : _GLF_FUZZED(subgroup_size))) | ((true ? _GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) | 0u)) : _GLF_FUZZED(subgroup_size))), 1u * (((true ? _GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) | 0u)) : _GLF_FUZZED(subgroup_size))) | ((true ? _GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) | 0u)) : _GLF_FUZZED(subgroup_size)))))))))), 1u, _GLF_IDENTITY(1u, max(1u, 1u)))), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) | 0u)) : _GLF_FUZZED(subgroup_size), ~ (~ _GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))), ((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))) / 1u), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) | 0u)) : _GLF_FUZZED(subgroup_size)), ((true ? _GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) | 0u)) : _GLF_FUZZED(subgroup_size))) | ((true ? _GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) | 0u)) : _GLF_FUZZED(subgroup_size)))))))), 1u, _GLF_IDENTITY(1u, max(1u, 1u))))) / _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u, _GLF_IDENTITY(1u, 0u + (1u))))))))))) | 0u)) % subgroup_size, clamp((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) | _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u)), uint(uvec2(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u)), 1u))))))) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), (_GLF_IDENTITY(0u | (0u), (0u | (0u)) / 1u)) | (0u | (0u)))) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u)) | _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> 0u)) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ (0 >> _GLF_IDENTITY(int(8), int(8)))), (1) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-44749) : _GLF_IDENTITY(0, (false ? _GLF_FUZZED(54677) : 0)))))))), uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), 1u * (subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)))) >> 0u))))))) | _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u)))) % subgroup_size, (0u ^ 1u) * ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-44741) : 1)))), (1) << _GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))))), uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)), 0u | (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, (_GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0))) | ((1) << 0))))), 0u + (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), 0 ^ (_GLF_IDENTITY((~ (1)), 0 | (_GLF_IDENTITY((~ (1)), 0 ^ ((~ (1)))))))))) | _GLF_IDENTITY((1), ((1)) >> 0)), 0u | (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, (_GLF_IDENTITY(_GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0)), max(_GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0)), _GLF_IDENTITY(_GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0)), clamp(_GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0)), _GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0)), _GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0))))))) | ((1) << 0))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)), 0u | (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, (_GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0))) | ((1) << 0))))), 0u + (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), 0 ^ (_GLF_IDENTITY((~ (1)), 0 | (_GLF_IDENTITY((~ (1)), 0 ^ ((~ (1)))))))))) | _GLF_IDENTITY((1), ((1)) >> 0)), 0u | (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, (_GLF_IDENTITY(_GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0)), max(_GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0)), _GLF_IDENTITY(_GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0)), clamp(_GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0)), _GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0)), _GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0))))))) | ((1) << 0))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)), 0u | (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, (_GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0))) | ((1) << 0))))), 0u + (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), 0 ^ (_GLF_IDENTITY((~ (1)), 0 | (_GLF_IDENTITY((~ (1)), 0 ^ ((~ (1)))))))))) | _GLF_IDENTITY((1), ((1)) >> 0)), 0u | (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, (_GLF_IDENTITY(_GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0)), max(_GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0)), _GLF_IDENTITY(_GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0)), clamp(_GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0)), _GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0)), _GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0))))))) | ((1) << 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)), 0u | (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, (_GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0))) | ((1) << 0))))), 0u + (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), 0 ^ (_GLF_IDENTITY((~ (1)), 0 | (_GLF_IDENTITY((~ (1)), 0 ^ ((~ (1)))))))))) | _GLF_IDENTITY((1), ((1)) >> 0)), 0u | (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, (_GLF_IDENTITY(_GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0)), max(_GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0)), _GLF_IDENTITY(_GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0)), clamp(_GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0)), _GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0)), _GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0))))))) | ((1) << 0))))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)), 0u | (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, (_GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0))) | ((1) << 0))))), 0u + (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), 0 ^ (_GLF_IDENTITY((~ (1)), 0 | (_GLF_IDENTITY((~ (1)), 0 ^ ((~ (1)))))))))) | _GLF_IDENTITY((1), ((1)) >> 0)), 0u | (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, (_GLF_IDENTITY(_GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0)), max(_GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0)), _GLF_IDENTITY(_GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0)), clamp(_GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0)), _GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0)), _GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0))))))) | ((1) << 0)))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)), 0u | (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, (_GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0))) | ((1) << 0))))), 0u + (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), 0 ^ (_GLF_IDENTITY((~ (1)), 0 | (_GLF_IDENTITY((~ (1)), 0 ^ ((~ (1)))))))))) | _GLF_IDENTITY((1), ((1)) >> 0)), 0u | (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, (_GLF_IDENTITY(_GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0)), max(_GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0)), _GLF_IDENTITY(_GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0)), clamp(_GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0)), _GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0)), _GLF_IDENTITY((1) << 0, max((1) << 0, (1) << 0))))))) | ((1) << 0))))))))))))))) | _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (0u) | (0u)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1u, max(1u, 1u)) * (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | _GLF_IDENTITY((0u), 0u ^ ((0u)))))) % subgroup_size)), (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1, 0u | (subgroup_local_id + 1))) | 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1, 0u | (subgroup_local_id + 1))) | 0u) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1, 0u | (subgroup_local_id + 1))) | 0u)))) % subgroup_size)));
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (1)))))), ~ (~ (uint(1)))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, int(ivec2(1, 0))))), ~ (~ (1)))))), ~ (_GLF_IDENTITY(~ (uint(1)), (_GLF_IDENTITY(~ (uint(1)), uint(uvec4(~ (uint(1)), 0u, 0u, 1u)))) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((true ? _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) + 0), _GLF_IDENTITY((64) << 0, (_GLF_IDENTITY((64) << 0, (_GLF_IDENTITY((64) << 0, ((64) << 0) | ((64) << 0))) | ((64) << 0))) * 1)), 0 | (64))) | 0) : _GLF_FUZZED(-36543)), min((true ? _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) << 0), 0 | (64))) | 0) : _GLF_FUZZED(-36543)), (true ? _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) << 0), _GLF_IDENTITY(0 | (64), 0 ^ (0 | (64))))) | 0) : _GLF_FUZZED(-36543))))), ~ (~ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-36543)))))), 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false)), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
}
