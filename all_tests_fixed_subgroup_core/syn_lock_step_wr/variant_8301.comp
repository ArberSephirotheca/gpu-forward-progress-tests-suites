#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 mat3x4 _f0;
} ;

struct _GLF_struct_2 {
 bool _f0;
 mat2x4 _f1;
 mat4x3 _f2;
 ivec2 _f3;
 float _f4;
 vec2 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
} ;

struct _GLF_struct_0 {
 mat4x3 _f0;
 bvec2 _f1;
 mat4x3 _f2;
 mat4x3 _f3;
 mat2 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_1 {
 mat2x4 _f0;
 ivec3 _f1;
 _GLF_struct_0 _f2;
 uvec4 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_5 {
 uint workgroup_id;
 _GLF_struct_1 _f0;
 _GLF_struct_3 _f1;
 mat2x4 _f2;
 _GLF_struct_4 _f3;
 mat3x4 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))), (true && (_GLF_IDENTITY(false, bool(bool(false))))) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bool(false)))), (true && (_GLF_IDENTITY(false, bool(bool(false))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bool(false)))), (true && (_GLF_IDENTITY(false, bool(bool(false))))) || false), bool(bvec4(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bool(false)))), (true && (_GLF_IDENTITY(false, bool(bool(false))))) || false), true, true, true))))), true, false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), (bool(bvec4(_GLF_DEAD(false), false, true, true))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, false, true)))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec4(false, false, false, false)), false, false), bvec3(bvec4(bvec3(bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, false)), false, false), true)))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true)) && true), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), ((false)) || false)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), false || ((false)))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3((! (false)), false, true), bvec3(bvec4(bvec3((! (false)), false, true), false)))))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(false, ! (! (false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), false)), false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) - (_GLF_IDENTITY(130090u, (_GLF_IDENTITY(130090u, (130090u) | (130090u))) | (_GLF_IDENTITY(130090u, (130090u) ^ 0u))) & 0u)), 0u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) << uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u), min((gl_WorkGroupID) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))), uvec3(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), ((gl_WorkGroupID) << uvec3(0u, 0u, 0u)) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), min((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))), (uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))))) << uvec3(0u, 0u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), ((gl_WorkGroupID) << uvec3(0u, 0u, 0u)) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) << _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), (uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)) << uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (true ? (gl_WorkGroupID) << uvec3(0u, 0u, 0u) : _GLF_FUZZED(uvec3(76788u, 38584u, 144684u)))), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), ((gl_WorkGroupID) << uvec3(0u, 0u, 0u)) >> uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) : _GLF_FUZZED(-479.631))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))), 0u), min(uvec4(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), ((gl_WorkGroupID) << uvec3(0u, 0u, 0u)) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) << _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)), uvec3(_GLF_IDENTITY(uvec3(uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))), uvec3(0u, 0u, 0u) + (uvec3(uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))))))))))), 0u), uvec4(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), ((gl_WorkGroupID) << uvec3(0u, 0u, 0u)) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))), 0u)))))) + uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), max((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), ((gl_WorkGroupID) << uvec3(0u, 0u, 0u)) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) << _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), (uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)) << uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (true ? (gl_WorkGroupID) << uvec3(0u, 0u, 0u) : _GLF_FUZZED(uvec3(76788u, 38584u, 144684u)))), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), ((gl_WorkGroupID) << uvec3(0u, 0u, 0u)) >> uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) : _GLF_FUZZED(-479.631))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))), 0u), min(uvec4(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), ((gl_WorkGroupID) << uvec3(0u, 0u, 0u)) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) << _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)), uvec3(_GLF_IDENTITY(uvec3(uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))), uvec3(0u, 0u, 0u) + (uvec3(uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))))))))))), 0u), uvec4(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), ((gl_WorkGroupID) << uvec3(0u, 0u, 0u)) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))), 0u)))))) + uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), ((gl_WorkGroupID) << uvec3(0u, 0u, 0u)) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) << _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), (uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)) << uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (true ? (gl_WorkGroupID) << uvec3(0u, 0u, 0u) : _GLF_FUZZED(uvec3(76788u, 38584u, 144684u)))), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), ((gl_WorkGroupID) << uvec3(0u, 0u, 0u)) >> uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) : _GLF_FUZZED(-479.631))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))), 0u), min(uvec4(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), ((gl_WorkGroupID) << uvec3(0u, 0u, 0u)) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) << _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)), uvec3(_GLF_IDENTITY(uvec3(uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))), uvec3(0u, 0u, 0u) + (uvec3(uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))))))))))), 0u), uvec4(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), ((gl_WorkGroupID) << uvec3(0u, 0u, 0u)) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))), 0u)))))) + uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).x) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) - (_GLF_IDENTITY(130090u, (_GLF_IDENTITY(130090u, (130090u) | (_GLF_IDENTITY(130090u, 0u ^ (130090u))))) | (_GLF_IDENTITY(130090u, (130090u) ^ 0u))) & 0u)), 0u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) << uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u), min((gl_WorkGroupID) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), uvec3(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), ((gl_WorkGroupID) << uvec3(0u, 0u, 0u)) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), min((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))), (uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))))) << uvec3(0u, 0u, 0u)))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), ((gl_WorkGroupID) << uvec3(0u, 0u, 0u)) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), min((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))), (uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))))) << uvec3(0u, 0u, 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), ((gl_WorkGroupID) << uvec3(0u, 0u, 0u)) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) << _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), min((0u), (0u)))), 0u), (uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)) << uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (true ? (gl_WorkGroupID) << uvec3(0u, 0u, 0u) : _GLF_FUZZED(uvec3(76788u, 38584u, 144684u)))), (_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID)))) << uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), ((gl_WorkGroupID) << uvec3(0u, 0u, 0u)) >> uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) : _GLF_FUZZED(-479.631))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))), 0u), min(uvec4(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), ((gl_WorkGroupID) << uvec3(0u, 0u, 0u)) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) << _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) ^ (uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)), uvec3(_GLF_IDENTITY(uvec3(uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))), uvec3(0u, 0u, 0u) + (uvec3(uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))))))))))), 0u), uvec4(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), ((gl_WorkGroupID) << uvec3(0u, 0u, 0u)) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), ((gl_WorkGroupID) << uvec3(0u, 0u, 0u)) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))), 0u)))))) + uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u))))) | 0u), _GLF_struct_1(mat2x4(1.0), ivec3(1), _GLF_struct_0(mat4x3(1.0), bvec2(true), mat4x3(1.0), mat4x3(1.0), mat2(1.0), mat3x2(1.0)), uvec4(1u), bvec2(true)), _GLF_struct_3(_GLF_struct_2(true, mat2x4(1.0), mat4x3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY((ivec2(1)), min((ivec2(1)), (ivec2(1)))) << ivec2(0, 0)), clamp(ivec2(1), ivec2(1), ivec2(1))), 1.0, vec2(1.0), vec4(1.0))), mat2x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-724.002)), float(1.0), bool(true)))), _GLF_struct_4(mat3x4(1.0)), mat3x4(1.0));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(false, false, false, false))) && true))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), (_GLF_IDENTITY(! ((_GLF_DEAD(false))), bool(bool(! ((_GLF_DEAD(false))))))) && true)))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(68.75), _GLF_FUZZED(-47.32)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).x > injectionSwitch.y))))) && true)) && true))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec3(-3684.5915, 6355.4437, -957.259).sp) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.y), bool(true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-26.45)), float(injectionSwitch.y), bool(true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))) && true), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))) && true), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))) && true), (injectionSwitch.x > injectionSwitch.y))), true)))) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_5.workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || (false)), true), true, true)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || (false)), true), true, true))))) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, uint(_GLF_IDENTITY(uvec4(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)))) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u + (2u))), uint(2u)))) + subgroup_local_id, (0u << _GLF_IDENTITY(uint(1u), uint(1u))), 1u, (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - 0u)))), ~ (~ (uvec4(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(1u), uint(1u))) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(1u), uint(1u))) << 0u)), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(1u), uint(1u))) << 0u)), 1u, 1u, 0u)), (uint(uvec4((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(1u), uint(1u))) << 0u)), 1u, 1u, 0u))) / 1u))) - 0u), 1u, (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - 0u))))))))), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) | 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), subgroup_local_id), (_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)))), subgroup_local_id), (min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), subgroup_local_id)) | (min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), subgroup_local_id)))) / 1u)), min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), subgroup_local_id), (_GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), subgroup_local_id), (min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), subgroup_local_id)) | (min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)) * 1u))), subgroup_local_id)))) / 1u)), min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), subgroup_local_id), (_GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), subgroup_local_id), (min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), subgroup_local_id)) | (min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), subgroup_local_id)))) / 1u)), min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), subgroup_local_id), (_GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), subgroup_local_id), (min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), subgroup_local_id)) | (min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), subgroup_local_id)))) / 1u)), min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))))) / 1u), (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), subgroup_local_id)))), min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), subgroup_local_id)), min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))))) + 1) % subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(subgroup_local_id, subgroup_local_id)) | (min(subgroup_local_id, subgroup_local_id)))), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size), ~ (~ (((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id))) | _GLF_IDENTITY(0u, (0u) ^ 0u)), min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size)))), (_GLF_IDENTITY(~ _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(subgroup_local_id, subgroup_local_id)) | (min(subgroup_local_id, subgroup_local_id)))), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size), ~ (~ (((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id))) | _GLF_IDENTITY(0u, (0u) ^ 0u)), min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size)))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(~ _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(subgroup_local_id, subgroup_local_id)) | (min(subgroup_local_id, subgroup_local_id)))), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size), ~ (~ (((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id))) | _GLF_IDENTITY(0u, (0u) ^ 0u)), min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size)))), (~ _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(subgroup_local_id, subgroup_local_id)) | (min(subgroup_local_id, subgroup_local_id)))), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size), ~ (~ (((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id))) | _GLF_IDENTITY(0u, (0u) ^ 0u)), min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size)))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(subgroup_local_id, subgroup_local_id)) | (min(subgroup_local_id, subgroup_local_id)))), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size), ~ (~ (((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id))) | _GLF_IDENTITY(0u, (0u) ^ 0u)), min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size))))) - 0u)) << 0u)))) + 0u))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (1) * ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, clamp(6, 6, _GLF_IDENTITY(6, (6) + 0)))) + (-96921 & 0))), 0 | (int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, clamp(6, 6, _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) - 0)) + 0)))) + (-96921 & 0))))), int(6))))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | 0u), _GLF_IDENTITY(4, max(4, 4)), 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x) - tan(0.0)) > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
