#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, true)), ! _GLF_IDENTITY((! (bool(bvec4(_GLF_DEAD(false), false, false, true)))), _GLF_IDENTITY(false, true && (false)) || ((! (bool(bvec4(_GLF_DEAD(false), false, false, true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uvec2 GLF_merged2_0_1_4_1_1_14readworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-60.90)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), bool(true))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(false, false || (false)) || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4518.7805)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))) * 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.9) : injectionSwitch.y))), float(mat3(clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))) * 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.9) : injectionSwitch.y))), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, sqrt(0.0), 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, sqrt(1.0), 1.0, 0.0)), 1.0, 0.0))), max(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))) * 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.9) : injectionSwitch.y))), float(mat3(clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))) * 1.0)))) * 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.9) : injectionSwitch.y))), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, sqrt(0.0), 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, sqrt(1.0), 1.0, 0.0)), 1.0, 0.0))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))) * 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.9) : injectionSwitch.y))), float(mat3(clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, log(1.0), 1.0)), max(vec2(mat2x4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, log(1.0), 1.0)), vec2(mat2x4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, log(1.0), 1.0))))).y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))) * 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.9) : injectionSwitch.y))), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, sqrt(0.0), 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, sqrt(1.0), 1.0, 0.0)), 1.0, 0.0))))), min(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-672.372 + -3.1))), vec2(_GLF_FUZZED((-8.1 + 8719.6463)), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))).y, (_GLF_IDENTITY(injectionSwitch, sqrt(exp(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))) * (injectionSwitch)).y) * 1.0), injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y, injectionSwitch.y))), max(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y), min(clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y), mix(float(clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(2.5)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y), min(clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y), mix(float(clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(2.5)), bool(false))))))), (true ? (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y), clamp(clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y), mix(float(clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(2.5)), bool(false))))))) : _GLF_FUZZED(851.224))), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y), min(clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(4.6, -125.059, -2952.6605, 26.92)) : mat2(1.0))) * (injectionSwitch)).y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y), mix(float(clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(2.5)), bool(false))))))))) * 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.9) : injectionSwitch.y))), min(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))[0], _GLF_IDENTITY(_GLF_FUZZED((-672.372 + -3.1)), (true ? _GLF_FUZZED((-672.372 + -3.1)) : _GLF_FUZZED(2.2)))), vec2(_GLF_FUZZED((_GLF_IDENTITY(-8.1 + 8719.6463, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(-8.1, (-8.1) - 0.0) + 8719.6463, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), sqrt(0.0), 0.0, 1.0, 1.0, abs(0.0), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(77.92)), float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0)))) / 1.0)), bool(true))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0), (true ? mat3x4(-8.1 + 8719.6463, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), sqrt(0.0), 0.0, 1.0, 1.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0) : _GLF_FUZZED(mat3x4(0.6, 67.32, 8.0, -4.2, -205.989, 9.4, -739.155, 6.2, 714.838, 4950.5125, 5.8, -3859.0746)))))))), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, sqrt(exp(vec2(0.0, 0.0))) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))).y) * 1.0, min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, sqrt(exp(vec2(0.0, 0.0))) * (injectionSwitch)).y) * 1.0, min((_GLF_IDENTITY(injectionSwitch, sqrt(exp(vec2(0.0, 0.0))) * (injectionSwitch)).y) * 1.0, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, sqrt(exp(vec2(0.0, 0.0))) * (injectionSwitch)).y) * 1.0, float(vec3((_GLF_IDENTITY(injectionSwitch, sqrt(exp(vec2(0.0, 0.0))) * (injectionSwitch)).y) * 1.0, 0.0, 0.0))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(sqrt(exp(vec2(0.0, 0.0))), max(sqrt(exp(vec2(0.0, 0.0))), sqrt(exp(vec2(0.0, 0.0))))) * (injectionSwitch)).y) * 1.0, float(_GLF_IDENTITY(float((_GLF_IDENTITY(injectionSwitch, sqrt(exp(vec2(0.0, 0.0))) * (injectionSwitch)).y) * 1.0), 1.0 * (float((_GLF_IDENTITY(injectionSwitch, sqrt(exp(vec2(0.0, 0.0))) * (injectionSwitch)).y) * 1.0)))))))), injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY((dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), mix(float(_GLF_IDENTITY((dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), max((dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), (dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))))), float(_GLF_FUZZED(((-17015 < 85238) ? -16.94 : -3720.4640))), bool(false))) * 1.0)), 0.0, 1.0, 0.0, 1.0, determinant(mat4(0.0, cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0))), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY((dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), mix(float(_GLF_IDENTITY((dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), max((dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), (dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))))), float(_GLF_FUZZED(((-17015 < 85238) ? -16.94 : -3720.4640))), bool(false))) * 1.0)), 0.0, 1.0, 0.0, 1.0, determinant(mat4(0.0, cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0))))[0], mix(float(_GLF_FUZZED(1.4)), float((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY((dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), mix(float(_GLF_IDENTITY((dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), max((dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), (dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))))), float(_GLF_FUZZED(((-17015 < 85238) ? -16.94 : -3720.4640))), bool(false))) * 1.0)), 0.0, 1.0, 0.0, 1.0, determinant(mat4(0.0, cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0))))[0]), bool(true))), _GLF_FUZZED((-114.853 * float(107047u)))), vec2(_GLF_FUZZED(-9.7), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY((dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), mix(float(_GLF_IDENTITY((dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), max((dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), (dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))))), float(_GLF_FUZZED(((-17015 < 85238) ? -16.94 : -3720.4640))), bool(false))) * 1.0)), 0.0, 1.0, 0.0, 1.0, determinant(mat4(0.0, cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0))))[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec3(true, false, true)))))).y) * 1.0), injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))) * 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(2.9) : injectionSwitch.y), min((false ? _GLF_FUZZED(2.9) : injectionSwitch.y), (false ? _GLF_FUZZED(2.9) : injectionSwitch.y))))), min(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], injectionSwitch[1])), mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-672.372 + -3.1))), vec2(_GLF_FUZZED((-8.1 + 8719.6463)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, (_GLF_IDENTITY(injectionSwitch, sqrt(exp(vec2(0.0, 0.0))) * (injectionSwitch)).y) * 1.0), injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y, injectionSwitch.y)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4518.7805)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true)))))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0) : _GLF_FUZZED(mix(-6.3, 1.7, true))))) / 1.0), injectionSwitch.y, injectionSwitch.y), min(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) * mat2(1.0)).y, (injectionSwitch.y) * 1.0), injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0))), (injectionSwitch.y) * 1.0), injectionSwitch.y, injectionSwitch.y))))), (true ? clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y, mix(float(_GLF_FUZZED(-4518.7805)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true)))))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y, injectionSwitch.y), min(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) * mat2(1.0)).y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) * mat2(1.0)).y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) * mat2(1.0)).y, (injectionSwitch.y) * 1.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) * mat2(1.0)).y, (injectionSwitch.y) * 1.0)), float(_GLF_FUZZED(-1.7)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) * mat2(1.0)).y, (injectionSwitch.y) * 1.0))), injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y, injectionSwitch.y))), max(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y, injectionSwitch.y), min(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) * mat2(1.0)).y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) * mat2(1.0)).y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) * mat2(1.0)).y, (injectionSwitch.y) * 1.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) * mat2(1.0)).y, (injectionSwitch.y) * 1.0)), float(_GLF_FUZZED(-1.7)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) * mat2(1.0)).y, (injectionSwitch.y) * 1.0))), injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y, injectionSwitch.y), min(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) * mat2(1.0)).y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) * mat2(1.0)).y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) * mat2(1.0)).y, (injectionSwitch.y) * 1.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) * mat2(1.0)).y, (injectionSwitch.y) * 1.0)), float(_GLF_FUZZED(-1.7)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) * mat2(1.0)).y, (injectionSwitch.y) * 1.0))), injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y, injectionSwitch.y))))))) : _GLF_FUZZED(17.37))))) || false)))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(185.777))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(185.777))), 1.0, 1.0))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4518.7805)), float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-87.05), _GLF_FUZZED(7732.0210)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))).x > injectionSwitch.y))))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-2750.7414))), 1.0, 0.0, 0.0)), max(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-2750.7414))), 1.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-55.55)), float(float(mat2(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-2750.7414))), 1.0, 0.0, 0.0))), bool(true))), float(mat2(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + log(1.0)), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0), (mat3x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + log(1.0)), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED(-2750.7414))), 1.0, 0.0, 0.0))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))))))))))), true && (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))), false)))))))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY((false || (false)), ! (! ((false || (false))))) || false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.6)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.5)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(3.5)), min(_GLF_IDENTITY(float(_GLF_FUZZED(3.5)), mix(float(_GLF_FUZZED(39.72)), float(float(_GLF_FUZZED(3.5))), bool(true))), float(_GLF_FUZZED(3.5)))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))), 0.0, 0.0, 0.0))))) < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) && true)))))))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true))) ? _GLF_FUZZED(vec2(-786.416, 5.6)) : injectionSwitch)).y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + log(1.0)), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)), clamp(float(mat2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + log(1.0)), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)), float(mat2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + log(1.0)), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)), float(mat2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + log(1.0)), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(4388.8761) : _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + log(1.0)), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)), clamp(float(mat2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y) + log(1.0)), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)), float(mat2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + log(1.0)), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)), float(mat2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + log(1.0)), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0))))))), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(4229.6792, -419.333)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), max(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(4229.6792, -419.333)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))), _GLF_IDENTITY(mix(vec2(((false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(4229.6792, max(4229.6792, 4229.6792)), -419.333)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(vec2(_GLF_IDENTITY(438.120, mix(float(438.120), float(_GLF_FUZZED(-6436.0315)), bool(false))), -8.2))))))[0], _GLF_FUZZED(-62.48)), vec2(_GLF_FUZZED(-351.155), ((false ? _GLF_FUZZED(vec2(4229.6792, -419.333)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[1]), bvec2(false, true)), clamp(mix(vec2(((false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(4229.6792, clamp(_GLF_IDENTITY(4229.6792, max(_GLF_IDENTITY(4229.6792, mix(float(_GLF_FUZZED(3.2)), float(4229.6792), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 4229.6792)), _GLF_IDENTITY(4229.6792, (4229.6792) / 1.0), _GLF_IDENTITY(4229.6792, mix(float(_GLF_FUZZED(-4757.3851)), float(4229.6792), bool(true))))), -419.333)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(9868.7079), (injectionSwitch)[1]), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec2(_GLF_FUZZED(9868.7079), (injectionSwitch)[1]) : _GLF_FUZZED(sinh(vec2(9.0, 1.1))))), vec2(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(vec4((injectionSwitch), 0.0, 1.0)))))[0])), _GLF_FUZZED(-7.3)), bvec2(true, false))), mat2(1.0) * (injectionSwitch))))[0], _GLF_FUZZED(-62.48)), vec2(_GLF_FUZZED(-351.155), ((false ? _GLF_FUZZED(vec2(4229.6792, -419.333)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch))))))[1]), bvec2(false, true)), mix(vec2(((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? _GLF_FUZZED(vec2(4229.6792, -419.333)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, 0.0 + (1.0))) * (injectionSwitch))))))[0], _GLF_FUZZED(-62.48)), vec2(_GLF_FUZZED(-351.155), ((false ? _GLF_FUZZED(vec2(4229.6792, -419.333)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[1]), bvec2(false, true)), mix(vec2(((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false) ? _GLF_FUZZED(vec2(4229.6792, -419.333)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch))) : _GLF_FUZZED(injectionSwitch))))))[0], _GLF_FUZZED(-62.48)), vec2(_GLF_FUZZED(-351.155), ((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(4229.6792, -419.333)), (_GLF_FUZZED(vec2(4229.6792, -419.333))) + vec2(0.0, 0.0)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mat2(1.0) * (injectionSwitch))))[1]), bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false)))))), (false ? _GLF_FUZZED(vec2(4229.6792, -419.333)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.93)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.93)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.93)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.93)), float(injectionSwitch.y), bool(true))))) : _GLF_FUZZED(734.050))), injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))) || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.8) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(-7.4)), bool(false))) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.8) : _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))))), float(_GLF_FUZZED(-7.4)), bool(false))) > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5135.2610, -4.4)) : injectionSwitch)).y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))), (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))))) && true)), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))), (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))))) && true)), false, false))))), false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(false, false, false, false)), true, true)), ! (! (bool(bvec3(bool(bvec4(false, false, false, false)), true, true))))))), true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3.4) : injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(-579.166)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(-579.166)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))), true && (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(-579.166)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))), bool(bvec4(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(exp2(vec2(-5976.0558, -95.62))) : injectionSwitch)))).x, mix(float(_GLF_FUZZED(-579.166)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))), _GLF_IDENTITY(true, ! (! (true))), true, false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false))) && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-484.365)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-6.7), min(_GLF_IDENTITY(_GLF_FUZZED(-6.7), max(_GLF_FUZZED(-6.7), _GLF_FUZZED(-6.7))), _GLF_FUZZED(-6.7)))), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(vec2(injectionSwitch))), injectionSwitch)))).y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 1.0, _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-1.3)), _GLF_IDENTITY(float(determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), clamp(float(determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), float(determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), float(determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), sqrt(1.0), round(length(normalize(1.0))), 1.0, 1.0, 0.0, 1.0, 1.0), mat2(1.0) * (mat4x2(_GLF_IDENTITY(float(determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), clamp(float(determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), float(determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), float(determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), sqrt(1.0), round(length(normalize(1.0))), 1.0, 1.0, 0.0, 1.0, 1.0))))), bool(true))), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true), true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-742.691)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])), mix(float(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))), float(_GLF_FUZZED(4219.4889)), bool(false)))), bool(true))))).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), min(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-3.9, max(-3.9, _GLF_IDENTITY(-3.9, mix(float(_GLF_FUZZED(8777.2258)), float(_GLF_IDENTITY(-3.9, float(vec3(-3.9, 1.0, 1.0)))), bool(true))))))), bool(false)))) - length(vec4(0.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(-195.253)), bool(false))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(mat4x3(max(injectionSwitch, injectionSwitch), 1.0, 1.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)))).x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))) && true), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))) && true), true)))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))) && true)), ((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))) && true))) || false)) && true)), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), true, true, true))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_4_1_1_14readworkgroup_size.y = workgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-734.751))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec4(bool(bvec3(false, false, false)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), true, true))), (_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec4(bool(bvec3(false, false, false)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), true, true)))) || false)))) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true)), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_size.y * workgroup_id, (_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_size.y * workgroup_id, min(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_size, uvec2(1u, 1u) * (GLF_merged2_0_1_4_1_1_14readworkgroup_size)).y * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_14readworkgroup_size, uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (GLF_merged2_0_1_4_1_1_14readworkgroup_size)).y * workgroup_id, min(GLF_merged2_0_1_4_1_1_14readworkgroup_size.y * _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED((subgroup_size >> packUnorm2x16(vec2(237.822, -787.905)))) : workgroup_id)), GLF_merged2_0_1_4_1_1_14readworkgroup_size.y * workgroup_id))))) | 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : workgroup_base, (_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : workgroup_base, clamp(false ? _GLF_FUZZED(virtual_gid) : workgroup_base, _GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : workgroup_base, min(false ? _GLF_FUZZED(virtual_gid) : workgroup_base, false ? _GLF_FUZZED(virtual_gid) : workgroup_base)), false ? _GLF_FUZZED(virtual_gid) : workgroup_base))) >> 0u))), workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), clamp(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))) + (_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2((subgroup_local_id + 1), (144807u & 0u)))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bool(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))))))))))))))))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) | _GLF_IDENTITY((uint(1)), max(_GLF_IDENTITY((uint(1)), ((uint(1))) / (1u ^ 0u)), _GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), ((uint(1))) | ((uint(1))))) >> 0u)))), uint(1))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), _GLF_IDENTITY(int(ivec3(~ (4), 0, 0)), 0 | (int(ivec3(~ (4), 0, 0))))), _GLF_IDENTITY(~ (4), ~ (~ (~ (4)))), _GLF_IDENTITY(~ (4), (~ (4)) | (~ (4)))))), 0 ^ (_GLF_IDENTITY(~ (~ (4)), (_GLF_IDENTITY(~ (~ (4)), (~ (~ (4))) / 1)) >> 0)))), (_GLF_IDENTITY(4, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), _GLF_IDENTITY(int(ivec3(~ (4), 0, 0)), 0 | (int(ivec3(~ (4), 0, 0))))), _GLF_IDENTITY(~ (4), ~ (~ (~ (4)))), _GLF_IDENTITY(~ (4), (~ (4)) | (~ (4)))))), 0 ^ (_GLF_IDENTITY(~ (~ (4)), (_GLF_IDENTITY(~ (~ (4)), (~ (~ (4))) / 1)) >> 0))))) - (0 ^ 0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), _GLF_IDENTITY(int(ivec3(~ (4), 0, 0)), 0 | (int(ivec3(~ (4), 0, 0))))), _GLF_IDENTITY(~ (4), ~ (~ (~ (4)))), _GLF_IDENTITY(~ (4), (~ (4)) | (~ (4)))))), 0 ^ (_GLF_IDENTITY(~ (~ (4)), (_GLF_IDENTITY(~ (~ (4)), (~ (~ (4))) / 1)) >> 0)))), (_GLF_IDENTITY(4, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), _GLF_IDENTITY(int(ivec3(~ (4), 0, 0)), 0 | (int(ivec3(~ (4), 0, 0))))), _GLF_IDENTITY(~ (4), ~ (~ (~ (4)))), _GLF_IDENTITY(~ (4), (~ (4)) | (~ (4)))))), 0 ^ (_GLF_IDENTITY(~ (~ (4)), (_GLF_IDENTITY(~ (~ (4)), (~ (~ (4))) / 1)) >> 0))))) - (0 ^ 0)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), _GLF_IDENTITY(int(ivec3(~ (4), 0, 0)), 0 | (int(ivec3(~ (4), 0, 0))))), _GLF_IDENTITY(~ (4), ~ (~ (~ (4)))), _GLF_IDENTITY(~ (4), (~ (4)) | (~ (4))))), (false ? _GLF_FUZZED(-85047) : _GLF_IDENTITY(_GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), _GLF_IDENTITY(int(ivec3(~ (4), 0, 0)), 0 | (int(ivec3(~ (4), 0, 0))))), _GLF_IDENTITY(~ (4), ~ (~ (~ (4)))), _GLF_IDENTITY(~ (4), (~ (4)) | (~ (4))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), _GLF_IDENTITY(int(ivec3(~ (4), 0, 0)), 0 | (int(ivec3(~ (4), 0, 0))))), _GLF_IDENTITY(~ (4), ~ (~ (~ (4)))), _GLF_IDENTITY(~ (4), (~ (4)) | (~ (4))))), (false ? _GLF_FUZZED(96620) : _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (true ? _GLF_IDENTITY(~ (4), clamp(~ (4), _GLF_IDENTITY(~ (4), (~ (4)) << 0), ~ (4))) : _GLF_FUZZED(770))), _GLF_IDENTITY(int(ivec3(~ (4), _GLF_IDENTITY(0, (0) + 0), 0)), 0 | (int(ivec3(~ (4), 0, 0))))), _GLF_IDENTITY(~ (4), ~ (~ (~ (4)))), _GLF_IDENTITY(~ (4), (~ (4)) | (~ (_GLF_IDENTITY(4, max(4, 4)))))))))) + 0)))), 0 ^ (_GLF_IDENTITY(~ (~ (4)), _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (4)), (~ (~ (4))) / 1)) >> 0, ~ (~ ((_GLF_IDENTITY(~ (~ (4)), (~ (~ (4))) / 1)) >> 0))))))), (_GLF_IDENTITY(4, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), _GLF_IDENTITY(int(ivec3(~ (4), 0, 0)), _GLF_IDENTITY(0, (0) | (0)) | (int(ivec3(~ (4), 0, 0))))), _GLF_IDENTITY(~ (4), ~ (~ (~ (4)))), _GLF_IDENTITY(~ (4), (~ (4)) | (~ (4)))))), 0 ^ (_GLF_IDENTITY(~ (~ (4)), (_GLF_IDENTITY(~ (~ (4)), (~ (~ (4))) / 1)) >> 0))))) - (0 ^ 0))))) : _GLF_FUZZED(61161))), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-67.00), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-639.327)), float(_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-67.00), min(true ? injectionSwitch.x : _GLF_FUZZED(-67.00), true ? injectionSwitch.x : _GLF_FUZZED(-67.00)))), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (mix(float(_GLF_FUZZED(-639.327)), float(_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-67.00), min(true ? injectionSwitch.x : _GLF_FUZZED(-67.00), true ? injectionSwitch.x : _GLF_FUZZED(-67.00)))), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) / cos(0.0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-67.00), mix(float(_GLF_FUZZED(-639.327)), float(_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-67.00), min(true ? injectionSwitch.x : _GLF_FUZZED(-67.00), true ? injectionSwitch.x : _GLF_FUZZED(-67.00)))), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), mix(float(_GLF_FUZZED(2726.2186)), float(_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-67.00), mix(float(_GLF_FUZZED(-639.327)), float(_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-67.00), min(true ? injectionSwitch.x : _GLF_FUZZED(-67.00), true ? injectionSwitch.x : _GLF_FUZZED(-67.00)))), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), bool(true))))) + _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)))) > injectionSwitch.y)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false || (false))), bool(bvec3(_GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), bool(bvec4(false || (false), true, true, false))))), true, false)))), true, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7.6) : injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), (_GLF_DEAD(false)) && true), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)))))))) && true), true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, true && (false)))), true, true))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 GLF_merged2_0_1_4_1_1_14readworkgroup_size.x = read;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 atomicStore(checker[virtual_gid], GLF_merged2_0_1_4_1_1_14readworkgroup_size.x, 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) * 1), _GLF_IDENTITY(~ (~ (4)), (~ (~ (4))) - 0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))) && true), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), false, true))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), false, false))) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) + 0.0))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))) || false), false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(187.898)), bool(false)))) + 0.0)), float(_GLF_FUZZED(-3390.9994)), bool(false))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), ! (_GLF_IDENTITY(! (bool(bool((false)))), ! (_GLF_IDENTITY(! (! (bool(bool((false))))), true && (! (! (_GLF_IDENTITY(bool(bool((false))), (bool(bool((false)))) && true)))))))))) && true))), _GLF_IDENTITY(bool(bool(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))), bool(bvec2(bool(bool(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), bool(bool((! ((false))))))) && true))))), true)))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), ! (_GLF_IDENTITY(! (bool(bool((false)))), ! (_GLF_IDENTITY(! (! (bool(bool((false))))), true && (! (! (bool(bool((false)))))))))))) && true))), _GLF_IDENTITY(bool(bool(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))), bool(bvec2(bool(bool(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), bool(bool(_GLF_IDENTITY((! ((false))), (_GLF_IDENTITY((! ((false))), ((! ((false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))))) && true))))), true))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, ~ (~ (1)))]), max(vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, ~ (~ (1)))]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, ~ (~ (1)))]), (true ? vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, ~ (~ (1)))]) : _GLF_FUZZED(vec2(-1.9, -1.9))))))).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, ~ (~ (1)))])).y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
