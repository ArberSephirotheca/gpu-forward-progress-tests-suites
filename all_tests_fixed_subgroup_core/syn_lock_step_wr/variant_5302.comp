#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.y))))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    return;
   return;
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)) != 0); _injected_loop_counter --)
      {
       return;
      }
    }
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) | (_GLF_IDENTITY((1 ^ 1), clamp((1 ^ 1), (1 ^ 1), _GLF_IDENTITY((1 ^ 1), 0 ^ ((1 ^ 1)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) | (_GLF_IDENTITY((1 ^ 1), clamp((1 ^ 1), (1 ^ 1), _GLF_IDENTITY((1 ^ 1), 0 ^ ((1 ^ 1)))))))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) | (_GLF_IDENTITY((1 ^ 1), clamp((1 ^ 1), (1 ^ 1), _GLF_IDENTITY((1 ^ 1), 0 ^ ((1 ^ 1))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))))); _injected_loop_counter --)
    {
     return;
    }
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      break;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(bvec2(false || (_GLF_DEAD(false)), false)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true) || (_GLF_DEAD(false)), bool(bvec2(false || (_GLF_DEAD(false)), false)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true) || (_GLF_DEAD(false)), bool(bvec2(false || (_GLF_DEAD(false)), false)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true) || (_GLF_DEAD(false)), bool(bvec2(false || (_GLF_DEAD(false)), false)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), true, true))), true)))), true))))))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         break;
        }
       return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
      {
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, 0.0)), (false ? _GLF_FUZZED(-575.030) : float(mat2x3(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, 0.0))))), 1.0)), injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), (! (! ((injectionSwitch.x > injectionSwitch.y)))) || false)))))))), false, false))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bool((false)))) || false)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) && true), false, true, false)))) || false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), true)))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), true)))) || false)))))))) || false)) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) && true), false, true, false)))) || false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))) || false)) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(((_GLF_IDENTITY(false, (false) || false))) && true, bool(bvec4(((_GLF_IDENTITY(false, (false) || false))) && true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true, false)))) || _GLF_IDENTITY(false, bool(bool(false)))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), false || ((false))), false, true))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))) || false))))))) || false)) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) && true), false, true, false)))) || false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))) || false)) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(((_GLF_IDENTITY(false, (false) || false))) && true, bool(bvec4(((_GLF_IDENTITY(false, (false) || false))) && true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true, false)))) || _GLF_IDENTITY(false, bool(bool(false)))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), false || ((false))), false, true))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))) || false))))))) || false)) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))) && true), false, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) && true), false, true, false)))) || false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))) || false)) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(((_GLF_IDENTITY(false, (false) || false))) && true, bool(bvec4(((_GLF_IDENTITY(false, (false) || false))) && true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true, false)))) || _GLF_IDENTITY(false, bool(bool(false)))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), false || ((false))), false, true))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))) || false))))))) || false)) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))) && true), false, false))) || false)))))))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))))))
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
                {
                 return;
                 if(_GLF_DEAD(false))
                  return;
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
              }
             if(_GLF_DEAD(false))
              break;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(4.9))) > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(4.9))) > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(4.9))) > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(4.9))) > injectionSwitch.y), false, false)))))), true))))));
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
            break;
          }
         do
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, sin(sin(0.0)) + (0.0)), mix(float(_GLF_FUZZED(-184.048)), float(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.0))) : _GLF_FUZZED(-9.1)))), bool(true))), max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-184.048)), float(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(-6.0)), (_GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(-6.0)), clamp((true ? 0.0 : _GLF_FUZZED(-6.0)), (true ? 0.0 : _GLF_FUZZED(-6.0)), (true ? 0.0 : _GLF_FUZZED(-6.0))))) * 1.0)) : _GLF_FUZZED(-9.1)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), mix(float(_GLF_FUZZED(-184.048)), float(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.0))) : _GLF_FUZZED(-9.1)))), bool(true))))), injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               do
                {
                 return;
                }
               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), (_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), ! (_GLF_IDENTITY(! (bool(_GLF_WRAPPED_LOOP(false))), bool(bvec2(! (bool(_GLF_WRAPPED_LOOP(false))), true)))))) && true), _GLF_IDENTITY(true && (bool(_GLF_WRAPPED_LOOP(false))), bool(bvec3(_GLF_IDENTITY(true && (bool(_GLF_WRAPPED_LOOP(false))), true && (true && (bool(_GLF_WRAPPED_LOOP(false))))), true, false))))), false || (! (_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false))))), true && (bool(_GLF_WRAPPED_LOOP(false))))))))))));
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     else
      {
      }
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), false, true))))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), true && ((! (false)))))), bool(bool((! (false))))))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
        {
         do
          {
           return;
           if(_GLF_DEAD(false))
            continue;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       return;
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], ~ (~ (gl_WorkGroupID[2]))))).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), false || ((true)))), true, false, _GLF_IDENTITY(false, (false) && true)))) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.8)), bool(false))) > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true && (_GLF_DEAD(false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), ! (! (! (true))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! (true))), ! (! (! (true)))))) && true)), (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! _GLF_IDENTITY((! (! (true))), ((! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! _GLF_IDENTITY((! (! (true))), false || ((! (! (true)))))))), (injectionSwitch.x < injectionSwitch.y))), true, true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       return;
      }
     else
      {
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(bool(bvec2(! ((false)), true)), (bool(bvec2(! ((false)), true))) || false)), false || (! _GLF_IDENTITY(((false)), (((false))) && true))))))))
        return;
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0)) - (-61657 & 0)) > (0 << _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
    {
     return;
    }
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), (true ? _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(uvec4(136054u, 104027u, 92019u, 55294u)) : uvec4(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), 0u ^ (subgroup_id * subgroup_size)) : _GLF_FUZZED(workgroup_size))) + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), int(ivec4(_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), int(ivec3(~ (1), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))) ^ 0), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 0), _GLF_IDENTITY(ivec2(ivec4(ivec2(1, 0), 1, 1)), (ivec2(ivec4(ivec2(1, 0), 1, 1))) ^ ivec2(0, 0))), ivec2(ivec3(ivec2(1, 0), _GLF_IDENTITY(0, min(0, 0))))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1)))), (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1))), min(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1))), ~ (~ (_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1)))))), _GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1))))))) | 0)))))))), clamp(_GLF_IDENTITY(~ (1), int(ivec4(~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) >> 0)) * ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) - (0 & -98338)), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 0), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec4(ivec2(1, 0), (0 << _GLF_IDENTITY(int(4), int(4))), 1), (ivec4(ivec2(1, 0), (0 << _GLF_IDENTITY(int(4), int(4))), 1)) << ivec4(0, 0, 0, 0))), ivec2(ivec4(ivec2(_GLF_IDENTITY(ivec4(ivec2(1, 0), (0 << _GLF_IDENTITY(int(4), int(4))), 1), (ivec4(ivec2(1, 0), (0 << _GLF_IDENTITY(int(4), int(4))), 1)) << ivec4(0, 0, 0, 0))), 0, 0)))), ivec2(ivec3(ivec2(1, 0), 0))))), _GLF_IDENTITY((1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1))), int(_GLF_IDENTITY(ivec4((1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1))), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), (ivec4((1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1))), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)) << ivec4(0, 0, 0, 0))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 1)), int(int(int(ivec3(1, 1, 1))))))), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), _GLF_IDENTITY((1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), min((1), (1))))), 1))), min((1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), min((1), (1))))), 1))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), min((1), (1))))), 1)))))))), max(_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) - 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) - 0)), (~ (_GLF_IDENTITY(0, (0) - 0))) - 0)), ~ (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) - 0)), (~ (_GLF_IDENTITY(0, (0) - 0))) - 0)))))))))), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), _GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY((1), ((1)) >> 0)))) / 1), max(~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY((1), ((1)) >> 0)))) / 1), ~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY((1), ((1)) >> 0)))) / 1))))), 1)))))))), _GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0)))), _GLF_IDENTITY((int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0))))) ^ 0, (_GLF_IDENTITY((int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0))))), ((int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0)))))) | (_GLF_IDENTITY((int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0))))), ((int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0)))))) + 0))) ^ 0) - 0))), (1 | _GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - 0)))), 1), 0 | (min(_GLF_IDENTITY(1, ~ (~ (1))), 1))))))))))))) % subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), _GLF_IDENTITY(0, min(0, 0))))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1)))), (int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1))))) | 0)))))))), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((1), int(_GLF_IDENTITY(ivec3((1), 1, (18737 & 0)), (ivec3((1), 1, (18737 & 0))) / ivec3(1, 1, 1)))), int(ivec4(~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) >> 0)) * ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((1), min((1), (1))), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) | (0))))))), _GLF_IDENTITY((1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1))), ((1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))) - 0)))), max(_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), _GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY((1), ((1)) >> 0)))) / 1))), 1)))))))), _GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ 0, ~ (~ ((0) ^ 0))))))), ivec2(ivec3(ivec2(1, 0), 0)))), (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0))), ivec2(0, 0) + (_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0))), ivec2(0, 0) + (_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0))), min(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0))), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))))) * 1)), ivec2(ivec3(ivec2(_GLF_IDENTITY(1, max(1, 1)), 0), 0))))))) + ivec2(0, 0)))))) ^ 0)), (1 | _GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, ~ (~ (1))), 1), 0 | (min(_GLF_IDENTITY(1, ~ (~ (1))), 1))))))))))))) % subgroup_size), 0u ^ (((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), _GLF_IDENTITY(0, min(0, 0))))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(ivec2(1, 1), 1)))))), (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1))), ivec2(ivec4(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1))), 1, (1 ^ (0 >> _GLF_IDENTITY(int(8), int(8))))))))) | 0)))))))), clamp(_GLF_IDENTITY(~ (1), int(ivec4(~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) >> 0)) * ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, ~ (~ (1))), 1), clamp(min(_GLF_IDENTITY(1, ~ (~ (1))), 1), min(_GLF_IDENTITY(1, ~ (~ (1))), 1), min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1))), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), _GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), (_GLF_IDENTITY(_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY((1), ((1)) >> 0))), int(ivec2(_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY((1), ((1)) >> 0))), 0)))) / 1))), 1)))))))), _GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0)))), (int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0))))) ^ 0)), (1 | _GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, ~ (~ (1))), 1), 0 | (min(_GLF_IDENTITY(1, ~ (~ (1))), 1))))))))))))) % subgroup_size)))) - 0u), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), (true ? _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(uvec4(136054u, 104027u, 92019u, 55294u)) : uvec4(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), 0u ^ (subgroup_id * subgroup_size)) : _GLF_FUZZED(workgroup_size))) + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), int(ivec4(_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), int(ivec3(~ (1), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))) ^ 0), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 0), _GLF_IDENTITY(ivec2(ivec4(ivec2(1, 0), 1, 1)), (ivec2(ivec4(ivec2(1, 0), 1, 1))) ^ ivec2(0, 0))), ivec2(ivec3(ivec2(1, 0), _GLF_IDENTITY(0, min(0, 0))))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1)))), (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1))), min(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1))), ~ (~ (_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1)))))), _GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1))))))) | 0)))))))), clamp(_GLF_IDENTITY(~ (1), int(ivec4(~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) >> 0)) * ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) - (0 & -98338)), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 0), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec4(ivec2(1, 0), (0 << _GLF_IDENTITY(int(4), int(4))), 1), (ivec4(ivec2(1, 0), (0 << _GLF_IDENTITY(int(4), int(4))), 1)) << ivec4(0, 0, 0, 0))), ivec2(ivec4(ivec2(_GLF_IDENTITY(ivec4(ivec2(1, 0), (0 << _GLF_IDENTITY(int(4), int(4))), 1), (ivec4(ivec2(1, 0), (0 << _GLF_IDENTITY(int(4), int(4))), 1)) << ivec4(0, 0, 0, 0))), 0, 0)))), ivec2(ivec3(ivec2(1, 0), 0))))), _GLF_IDENTITY((1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1))), int(_GLF_IDENTITY(ivec4((1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1))), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), (ivec4((1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1))), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)) << ivec4(0, 0, 0, 0))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 1)), int(int(int(ivec3(1, 1, 1))))))), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), _GLF_IDENTITY((1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), min((1), (1))))), 1))), min((1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), min((1), (1))))), 1))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), min((1), (1))))), 1)))))))), max(_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) - 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) - 0)), (~ (_GLF_IDENTITY(0, (0) - 0))) - 0)), ~ (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) - 0)), (~ (_GLF_IDENTITY(0, (0) - 0))) - 0)))))))))), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), _GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY((1), ((1)) >> 0)))) / 1), max(~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY((1), ((1)) >> 0)))) / 1), ~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY((1), ((1)) >> 0)))) / 1))))), 1)))))))), _GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0)))), _GLF_IDENTITY((int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0))))) ^ 0, (_GLF_IDENTITY((int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0))))), ((int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0)))))) | (_GLF_IDENTITY((int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0))))), ((int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0)))))) + 0))) ^ 0) - 0))), (1 | _GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - 0)))), 1), 0 | (min(_GLF_IDENTITY(1, ~ (~ (1))), 1))))))))))))) % subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), _GLF_IDENTITY(0, min(0, 0))))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1)))), (int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1))))) | 0)))))))), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((1), int(_GLF_IDENTITY(ivec3((1), 1, (18737 & 0)), (ivec3((1), 1, (18737 & 0))) / ivec3(1, 1, 1)))), int(ivec4(~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) >> 0)) * ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((1), min((1), (1))), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) | (0))))))), _GLF_IDENTITY((1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1))), ((1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))) - 0)))), max(_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), _GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY((1), ((1)) >> 0)))) / 1))), 1)))))))), _GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ 0, ~ (~ ((0) ^ 0))))))), ivec2(ivec3(ivec2(1, 0), 0)))), (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0))), ivec2(0, 0) + (_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0))), ivec2(0, 0) + (_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0))), min(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0))), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))))) * 1)), ivec2(ivec3(ivec2(_GLF_IDENTITY(1, max(1, 1)), 0), 0))))))) + ivec2(0, 0)))))) ^ 0)), (1 | _GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, ~ (~ (1))), 1), 0 | (min(_GLF_IDENTITY(1, ~ (~ (1))), 1))))))))))))) % subgroup_size), 0u ^ (((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), _GLF_IDENTITY(0, min(0, 0))))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(ivec2(1, 1), 1)))))), (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1))), ivec2(ivec4(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1))), 1, (1 ^ (0 >> _GLF_IDENTITY(int(8), int(8))))))))) | 0)))))))), clamp(_GLF_IDENTITY(~ (1), int(ivec4(~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) >> 0)) * ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, ~ (~ (1))), 1), clamp(min(_GLF_IDENTITY(1, ~ (~ (1))), 1), min(_GLF_IDENTITY(1, ~ (~ (1))), 1), min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1))), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), _GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), (_GLF_IDENTITY(_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY((1), ((1)) >> 0))), int(ivec2(_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY((1), ((1)) >> 0))), 0)))) / 1))), 1)))))))), _GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0)))), (int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0))))) ^ 0)), (1 | _GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, ~ (~ (1))), 1), 0 | (min(_GLF_IDENTITY(1, ~ (~ (1))), 1))))))))))))) % subgroup_size)))) - 0u)) | (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), (true ? _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(uvec4(136054u, 104027u, 92019u, 55294u)) : uvec4(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), 0u ^ (subgroup_id * subgroup_size)) : _GLF_FUZZED(workgroup_size))) + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), int(ivec4(_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), int(ivec3(~ (1), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))) ^ 0), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 0), _GLF_IDENTITY(ivec2(ivec4(ivec2(1, 0), 1, 1)), (ivec2(ivec4(ivec2(1, 0), 1, 1))) ^ ivec2(0, 0))), ivec2(ivec3(ivec2(1, 0), _GLF_IDENTITY(0, min(0, 0))))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1)))), (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1))), min(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1))), ~ (~ (_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1)))))), _GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1))))))) | 0)))))))), clamp(_GLF_IDENTITY(~ (1), int(ivec4(~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) >> 0)) * ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) - (0 & -98338)), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 0), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec4(ivec2(1, 0), (0 << _GLF_IDENTITY(int(4), int(4))), 1), (ivec4(ivec2(1, 0), (0 << _GLF_IDENTITY(int(4), int(4))), 1)) << ivec4(0, 0, 0, 0))), ivec2(ivec4(ivec2(_GLF_IDENTITY(ivec4(ivec2(1, 0), (0 << _GLF_IDENTITY(int(4), int(4))), 1), (ivec4(ivec2(1, 0), (0 << _GLF_IDENTITY(int(4), int(4))), 1)) << ivec4(0, 0, 0, 0))), 0, 0)))), ivec2(ivec3(ivec2(1, 0), 0))))), _GLF_IDENTITY((1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1))), int(_GLF_IDENTITY(ivec4((1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1))), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), (ivec4((1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1))), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)) << ivec4(0, 0, 0, 0))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 1)), int(int(int(ivec3(1, 1, 1))))))), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), _GLF_IDENTITY((1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), min((1), (1))))), 1))), min((1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), min((1), (1))))), 1))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), min((1), (1))))), 1)))))))), max(_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) - 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) - 0)), (~ (_GLF_IDENTITY(0, (0) - 0))) - 0)), ~ (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) - 0)), (~ (_GLF_IDENTITY(0, (0) - 0))) - 0)))))))))), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), _GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY((1), ((1)) >> 0)))) / 1), max(~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY((1), ((1)) >> 0)))) / 1), ~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY((1), ((1)) >> 0)))) / 1))))), 1)))))))), _GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0)))), _GLF_IDENTITY((int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0))))) ^ 0, (_GLF_IDENTITY((int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0))))), ((int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0)))))) | (_GLF_IDENTITY((int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0))))), ((int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0)))))) + 0))) ^ 0) - 0))), (1 | _GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - 0)))), 1), 0 | (min(_GLF_IDENTITY(1, ~ (~ (1))), 1))))))))))))) % subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), _GLF_IDENTITY(0, min(0, 0))))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1)))), (int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1))))) | 0)))))))), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((1), int(_GLF_IDENTITY(ivec3((1), 1, (18737 & 0)), (ivec3((1), 1, (18737 & 0))) / ivec3(1, 1, 1)))), int(ivec4(~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) >> 0)) * ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((1), min((1), (1))), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) | (0))))))), _GLF_IDENTITY((1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1))), ((1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))) - 0)))), max(_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), _GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY((1), ((1)) >> 0)))) / 1))), 1)))))))), _GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ 0, ~ (~ ((0) ^ 0))))))), ivec2(ivec3(ivec2(1, 0), 0)))), (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0))), ivec2(0, 0) + (_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0))), ivec2(0, 0) + (_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0))), min(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0))), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))))) * 1)), ivec2(ivec3(ivec2(_GLF_IDENTITY(1, max(1, 1)), 0), 0))))))) + ivec2(0, 0)))))) ^ 0)), (1 | _GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, ~ (~ (1))), 1), 0 | (min(_GLF_IDENTITY(1, ~ (~ (1))), 1))))))))))))) % subgroup_size), 0u ^ (((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), _GLF_IDENTITY(0, min(0, 0))))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(ivec2(1, 1), 1)))))), (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1))), ivec2(ivec4(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1))), 1, (1 ^ (0 >> _GLF_IDENTITY(int(8), int(8))))))))) | 0)))))))), clamp(_GLF_IDENTITY(~ (1), int(ivec4(~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) >> 0)) * ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, ~ (~ (1))), 1), clamp(min(_GLF_IDENTITY(1, ~ (~ (1))), 1), min(_GLF_IDENTITY(1, ~ (~ (1))), 1), min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1))), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), _GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), (_GLF_IDENTITY(_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY((1), ((1)) >> 0))), int(ivec2(_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY((1), ((1)) >> 0))), 0)))) / 1))), 1)))))))), _GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0)))), (int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0))))) ^ 0)), (1 | _GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, ~ (~ (1))), 1), 0 | (min(_GLF_IDENTITY(1, ~ (~ (1))), 1))))))))))))) % subgroup_size)))) - 0u)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), ! (! (true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3((! (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3((! (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) || false))))))))
  return;
 for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < ((-12008 & 0) ^ int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6091.1990)), vec2(_GLF_FUZZED(747.749), (injectionSwitch)[1]), bvec2(false, true))))).y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(_injected_loop_counter < ((-12008 & 0) ^ int(_GLF_ONE(1.0, injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter < ((_GLF_IDENTITY(-12008, max(-12008, -12008)) & 0) ^ int(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0))), (1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0)), injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < ((-12008 & 0) ^ _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)), false), bvec2(bvec4(bvec2(_injected_loop_counter < _GLF_IDENTITY(((-12008 & 0) ^ _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)), min(((-12008 & 0) ^ _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)), ((-12008 & 0) ^ _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)))), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(_injected_loop_counter < ((_GLF_IDENTITY(-12008, max(-12008, -12008)) & 0) ^ int(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0))), (1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0)), injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < ((-12008 & 0) ^ _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)), false), bvec2(bvec4(bvec2(_injected_loop_counter < _GLF_IDENTITY(((-12008 & 0) ^ _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)), min(((-12008 & 0) ^ _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)), ((-12008 & 0) ^ _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)))), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), false, false)), bool(bool(bool(bvec3(bool(_GLF_IDENTITY(_injected_loop_counter < ((_GLF_IDENTITY(-12008, max(-12008, -12008)) & 0) ^ int(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0))), (1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - 0.0)), injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < ((-12008 & 0) ^ _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)), false), bvec2(bvec4(bvec2(_injected_loop_counter < _GLF_IDENTITY(((-12008 & 0) ^ _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)), min(((-12008 & 0) ^ _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)), ((-12008 & 0) ^ _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)))), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), false, false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < ((-12008 & 0) ^ int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(_injected_loop_counter < ((-12008 & 0) ^ int(_GLF_ONE(1.0, injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_injected_loop_counter < ((-12008 & 0) ^ int(_GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < ((-12008 & 0) ^ _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)), false), bvec2(bvec4(bvec2(_injected_loop_counter < ((-12008 & 0) ^ _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0))) < ((-12008 & 0) ^ int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) - _GLF_IDENTITY(dot(vec4(cos(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0)), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(cos(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0)), vec4(0.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(_injected_loop_counter < ((-12008 & 0) ^ int(_GLF_ONE(1.0, injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_injected_loop_counter < ((-12008 & 0) ^ int(_GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(1.0, max(1.0, 1.0))), clamp((_GLF_IDENTITY(1.0, max(1.0, 1.0))), (_GLF_IDENTITY(1.0, max(1.0, 1.0))), (_GLF_IDENTITY(1.0, max(1.0, 1.0)))))), injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < ((-12008 & 0) ^ _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)), false), bvec2(bvec4(bvec2(_injected_loop_counter < ((-12008 & 0) ^ _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)), false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), false)))), (bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < ((-12008 & 0) ^ _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)), false), bvec2(bvec4(bvec2(_injected_loop_counter < ((-12008 & 0) ^ _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)), false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) && true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) * 1))) < ((-12008 & 0) ^ int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(_injected_loop_counter < ((-12008 & 0) ^ int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.8)), vec2(_GLF_FUZZED(-2.4), (injectionSwitch)[1]), bvec2(false, true)))) - vec2(0.0, 0.0)).y))), bool(bool(_GLF_IDENTITY(_injected_loop_counter < ((_GLF_IDENTITY(-12008, (false ? _GLF_FUZZED(19672) : -12008)) & 0) ^ int(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)) * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < ((-12008 & 0) ^ _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)), false), bvec2(bvec4(bvec2(_injected_loop_counter < ((-12008 & _GLF_IDENTITY(0, max(0, 0))) ^ _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(((_GLF_IDENTITY(-12008 & 0, (-12008 & 0) >> (0 << _GLF_IDENTITY(int(4), int(4))))) ^ int(_GLF_ONE(1.0, injectionSwitch.y))), (((_GLF_IDENTITY(-12008 & 0, (-12008 & 0) >> (0 << _GLF_IDENTITY(int(4), int(4))))) ^ int(_GLF_ONE(1.0, injectionSwitch.y)))) / 1), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(_injected_loop_counter < ((-12008 & 0) ^ int(_GLF_ONE(1.0, injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_injected_loop_counter < ((-12008 & 0) ^ int(_GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter < ((-12008 & 0) ^ _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)), (_GLF_IDENTITY(_injected_loop_counter < ((-12008 & 0) ^ _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)), bool(bvec3(_injected_loop_counter < ((-12008 & 0) ^ _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)), true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec2(bvec4(bvec2(_injected_loop_counter < ((-12008 & 0) ^ _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)))), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)), false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(3.7)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(75.74)), float(injectionSwitch.y), bool(true)))), bool(true)))))), ! (! ((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(3.7)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(75.74)), float(injectionSwitch.y), bool(true)))), bool(true))))))))))))), false)))))))))))) && true)))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)) && true)))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (injectionSwitch[0])), injectionSwitch[1])))[0], (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[1]), vec2(_GLF_FUZZED(vec3(_GLF_IDENTITY(2.5, (2.5) / 1.0), -2.3, -431.098).x), _GLF_FUZZED(859.436)), bvec2(false, false))).y))))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false)))), _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, true))), bvec2(bvec3(bvec2(bvec2(bvec2(true, true))), true)))))) && (true)), false))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), clamp(1 << _GLF_IDENTITY(int(0), int(0)), 1 << _GLF_IDENTITY(int(0), int(0)), 1 << _GLF_IDENTITY(int(0), int(0))))) >> _GLF_IDENTITY(int(0), int(0))), true && (_injected_loop_counter != ((_GLF_IDENTITY(1, clamp(1, 1, 1)) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))))); _injected_loop_counter ++)
        {
         return;
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))), (! (! (_GLF_DEAD(false)))) && true))))))
      return;
    }
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))))) && true)), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), (bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))))))) && _GLF_IDENTITY(true, (true) || false)))) && true)) || false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 for(int _injected_loop_counter = (1 | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
        return;
      }
     return;
    }
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))), false, true, false))), false || _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), true && ((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec4(_injected_loop_counter != 1, true, false, true)))), ! (! (! (_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec4(_injected_loop_counter != 1, true, false, true)))))))))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))) && true), false, _GLF_IDENTITY(true, bool(bvec2(true, false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))) && _GLF_IDENTITY(true, ! (! (true)))))), false, _GLF_IDENTITY(true, bool(bvec2(true, false)))), true))))); _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / 1), _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 | (1))))) * (_injected_loop_counter ++)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | 0), _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 | (1))))) * (_injected_loop_counter ++)))))
    {
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y))))
    continue;
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(false)), true, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(! (_GLF_DEAD(false)), true, true)))))))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), true && (! ((_GLF_DEAD(false))))))), bool(bvec3(! (_GLF_DEAD(false)), true, true)))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), ! (! (! ((_GLF_DEAD(false)))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, false, true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, false, true))))), false || (! (! (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, false, true))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, false, true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, false, true))))), false || (! (! (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, false, true)))))))))) || false))), bool(bvec3(! (_GLF_DEAD(false)), true, true)))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, true)))))))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, true)))))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, true)))))))))), _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, true)))))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, true)))))))))), _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, true)))))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, true)))))))))), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, true)))))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, true)))))))))), _GLF_IDENTITY(false, ! (! (false)))), true, false))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, true)))))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, true)))))))))), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, true)))))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, true)))))))))), _GLF_IDENTITY(false, ! (! (false)))), true, false))))), false, false)))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, true)))))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, true)))))))))), _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, true)))))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, true)))))))))), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, true)))))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, true)))))))))), _GLF_IDENTITY(false, ! (! (false)))), true, false))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, true)))))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, true)))))))))), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, true)))))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, true)))))))))), _GLF_IDENTITY(false, ! (! (false)))), true, false))))), false, false)))))), false, false)))))))))))
      break;
     for(int _injected_loop_counter = _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), (((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))) | _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, max(0, 0)), 0)), 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (false ? _GLF_FUZZED(24840) : _injected_loop_counter --)), (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) ^ 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (false ? _GLF_FUZZED(_GLF_IDENTITY(24840, max(24840, 24840))) : _injected_loop_counter --)), (_GLF_IDENTITY(_injected_loop_counter --, (false ? _GLF_FUZZED(24840) : _injected_loop_counter --))) | _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (0) >> 0)))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           break;
          }
         if(_GLF_DEAD(false))
          break;
         return;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))) && true)));
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6093.1214)))), float(_GLF_FUZZED(-9.7)), bool(false)))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-310.544, 5143.3623)) : injectionSwitch)))).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, false, true))))))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, false, true)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-24.72) : injectionSwitch.x)))) > injectionSwitch.y))))))))
        continue;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(min(injectionSwitch.x, injectionSwitch.x), 1.0, abs(1.0), 0.0, cos(0.0), 0.0, 1.0, 0.0), transpose(transpose(mat4x2(min(injectionSwitch.x, injectionSwitch.x), 1.0, abs(1.0), 0.0, cos(0.0), 0.0, 1.0, 0.0))))), max(float(_GLF_IDENTITY(mat4x2(min(injectionSwitch.x, injectionSwitch.x), 1.0, abs(1.0), 0.0, cos(0.0), 0.0, 1.0, 0.0), transpose(transpose(mat4x2(min(injectionSwitch.x, injectionSwitch.x), 1.0, abs(1.0), 0.0, cos(0.0), 0.0, 1.0, 0.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(min(injectionSwitch.x, injectionSwitch.x), 1.0, abs(1.0), 0.0, cos(0.0), 0.0, 1.0, 0.0), transpose(transpose(mat4x2(min(injectionSwitch.x, injectionSwitch.x), 1.0, abs(1.0), 0.0, cos(0.0), 0.0, 1.0, 0.0))))), max(float(_GLF_IDENTITY(mat4x2(min(injectionSwitch.x, injectionSwitch.x), 1.0, abs(1.0), 0.0, cos(0.0), 0.0, 1.0, 0.0), transpose(transpose(mat4x2(min(injectionSwitch.x, injectionSwitch.x), 1.0, abs(1.0), 0.0, cos(0.0), 0.0, 1.0, 0.0))))), float(_GLF_IDENTITY(mat4x2(min(injectionSwitch.x, injectionSwitch.x), 1.0, abs(1.0), 0.0, cos(0.0), 0.0, 1.0, 0.0), transpose(transpose(mat4x2(min(injectionSwitch.x, injectionSwitch.x), 1.0, abs(1.0), 0.0, cos(0.0), 0.0, 1.0, 0.0))))))))))), injectionSwitch.x)) > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-4.8 + 0.3))), bool(false))))), injectionSwitch.x)) > injectionSwitch.y))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), bool(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true)))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))), bool(_GLF_IDENTITY(bool((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), 0.0, 1.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, abs(1.0))), max(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), 0.0, 1.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, abs(1.0))), (vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), 0.0, 1.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, abs(1.0)))) - vec2(0.0, 0.0)), vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), 0.0, 1.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, abs(1.0)))))).x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (bool((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), float(_GLF_FUZZED(-3863.7537)), bool(false))))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))), (! (bool((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.y), bool(true))))), ! (! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) / exp(0.0)))))))))) && true))))))))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)))).x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.6)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y))));
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(read, 0u ^ (read)), (_GLF_IDENTITY(read, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)))) ^ (read))) / 1u))), 4, 64, 4);
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))) || false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(int(_injected_loop_counter), 1 * (int(_injected_loop_counter))))) != (0 | 0)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      continue;
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false))
          {
           return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))))))
                return;
               break;
              }
             break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
                {
                }
               else
                {
                 return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), _GLF_IDENTITY(true, (true) || false)))) || false)))
            continue;
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            break;
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) || false)))))
              {
               if(_GLF_DEAD(false))
                break;
               return;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))))))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - log(1.0))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, max(0.0, 0.0)) + (injectionSwitch.x)), 0.0, 0.0, sqrt(1.0), 0.0, 1.0, log(1.0), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), (dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))) + tan(0.0)), dot(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)))) + (float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) + 0.0))) * (injectionSwitch)).x)))), 0.0, 0.0, sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, 1.0, log(1.0), 0.0))))) > injectionSwitch.y)), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - log(1.0)))), min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - log(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - log(1.0)))), mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - log(1.0))))), float(_GLF_FUZZED(145.558)), bool(false)))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), 0.0, 0.0, sqrt(1.0), 0.0, 1.0, _GLF_IDENTITY(log(1.0), (_GLF_IDENTITY(true ? _GLF_IDENTITY(log(1.0), (log(1.0)) * 1.0) : _GLF_FUZZED(2.8), mix(float(_GLF_FUZZED(-19.68)), float(true ? _GLF_IDENTITY(log(1.0), (log(1.0)) * 1.0) : _GLF_FUZZED(2.8)), bool(true))))), 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0))) + (float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), 0.0, 0.0, sqrt(1.0), 0.0, 1.0, log(1.0), 0.0))))) > injectionSwitch.y)), _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))).y) - log(1.0))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), 0.0, 0.0, sqrt(1.0), 0.0, 1.0, log(1.0), 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))) + (float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(-84.02))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.6) : 0.0)) + (injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(-84.02)))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), 0.0, 0.0, sqrt(1.0), 0.0, 1.0, log(1.0), 0.0))))) > injectionSwitch.y))) && true, (((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4.6) : 1.0))) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0), mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat2(1.0))) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))).y) - log(1.0))))))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), 0.0, 0.0, sqrt(1.0), 0.0, 1.0, log(1.0), 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 1.0)), (float(vec2(0.0, 1.0))) / 1.0))))))) + (float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), (_GLF_IDENTITY(0.0 + (injectionSwitch.x), min(0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x)))) - length(vec2(0.0, 0.0)))) : _GLF_FUZZED(-84.02))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.6) : 0.0)) + (injectionSwitch.x)), (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.6) : 0.0)) + (injectionSwitch.x)) : _GLF_FUZZED(dot(vec3(-127.276, 7.9, 3.2), vec3(4.2, -7728.6281, 2960.6533))))), (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(-84.02)))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), 0.0, 0.0, sqrt(1.0), 0.0, 1.0, log(1.0), 0.0))))) > injectionSwitch.y))) && true) && true))))))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.9)), bool(false))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(768.734)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))))))
                break;
               if(_GLF_DEAD(false))
                return;
               return;
              }
            }
           else
            {
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
            return;
          }
         else
          {
           if(_GLF_DEAD(false))
            break;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, false))), true && (_GLF_IDENTITY(false, true && (false))))))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        continue;
       break;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), ! (! (false)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     return;
    }
  }
}
