#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec3 GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) && true)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), false))))))
  barrier();
 GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size.y = subgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
uint subgroup_size = 16;
 GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size.z = subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ((false)) || false))))))) || false)))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, abs(1.0), 1.0), clamp(vec3(injectionSwitch.y, abs(1.0), 1.0), vec3(injectionSwitch.y, abs(1.0), 1.0), vec3(injectionSwitch.y, abs(1.0), 1.0))))), 0.0 + (injectionSwitch.y)), bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_IDENTITY((false) && true, true && ((false) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)))), true)))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-123.456) : injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || false)), ! (! (true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9538.1123, -7.1)) : injectionSwitch)).x > injectionSwitch.y))) || false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(false, false)))), bvec3(bvec3(bvec3(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(false, false)))))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(false, false)))), bvec3(bvec3(bvec3(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(false, false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.0)), float(injectionSwitch.x), bool(true))))), 1.0, 0.0, 1.0, round(length(normalize(1.0))), 1.0))) > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))), false))) && true))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5.4)), bool(false))))))), _GLF_IDENTITY(false, bool(bvec2(false, false)))))))))), _GLF_IDENTITY(true, (true) || false) && (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, (false) && true)))), false)))), bvec3(bvec3(bvec3(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(false, false))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_IDENTITY(false, bool(bvec2(false, false)))), bvec3(bvec3(bvec3(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, false), false)), false, true))))))))))))), (! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) && true))), _GLF_IDENTITY(false, bool(bvec2(false, false)))), bvec3(bvec3(bvec3(! (false), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)))))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)))))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, bool(bvec2(false, false))))))))))) || false)))))))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(false, false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(false, false)))), bvec3(bvec4(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(false, false)))), false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(26.35)), bool(false))) < injectionSwitch.y)), true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.0)), float(injectionSwitch.x), bool(true))))), 1.0, 0.0, 1.0, round(length(normalize(1.0))), 1.0))) > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), false)), (bool(bvec2(false, false))) && true))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5.4)), bool(false))))))), _GLF_IDENTITY(false, bool(bvec2(false, false)))))))))), _GLF_IDENTITY(true, (true) || false) && (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_IDENTITY(false, bool(bvec2(false, false)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(false, false))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(false, false)))))), bvec3(bvec3(bvec3(bvec3(bvec3(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(false, false))))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_IDENTITY(false, bool(bvec2(false, false)))), bvec3(bvec3(bvec3(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(false, false)))))))))), (! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((false), ((false)) && true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) && true))), _GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, (false) || false))))), bvec3(bvec3(bvec3(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(false, false))))))))))) || false))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(false, false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(false, false)))), bvec3(bvec4(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(false, false)))), false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(26.35)), bool(false))) < injectionSwitch.y)), true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.0)), float(injectionSwitch.x), bool(true))))), 1.0, 0.0, 1.0, round(length(normalize(1.0))), 1.0))) > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), false)), (bool(bvec2(false, false))) && true))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5.4)), bool(false))))))), _GLF_IDENTITY(false, bool(bvec2(false, false)))))))))), _GLF_IDENTITY(true, (true) || false) && (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_IDENTITY(false, bool(bvec2(false, false)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(false, false))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(false, false)))))), bvec3(bvec3(bvec3(bvec3(bvec3(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(false, false))))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_IDENTITY(false, bool(bvec2(false, false)))), bvec3(bvec3(bvec3(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(false, false)))))))))), (! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((false), ((false)) && true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) && true))), _GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, (false) || false))))), bvec3(bvec3(bvec3(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(false, false))))))))))) || false))))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))) && true), _GLF_IDENTITY(false, bool(bvec2(false, false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(false, false)))), bvec3(bvec4(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(false, false)))), false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(26.35), mix(float(_GLF_FUZZED(26.35)), float(_GLF_FUZZED(9.6)), bool(false)))), bool(false))) < injectionSwitch.y)), true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.0)), float(injectionSwitch.x), bool(true))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.0)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.0)), float(injectionSwitch.x), bool(true))))))), 1.0, 0.0, 1.0, round(length(_GLF_IDENTITY(normalize(1.0), (false ? _GLF_FUZZED(-9.6) : normalize(1.0))))), 1.0))) > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ((false)) || false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), false)), (bool(bvec2(false, false))) && true))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), ! (! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), float(vec4(_GLF_IDENTITY(float(injectionSwitch.y), float(mat4x3(float(injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0))), 0.0, length(vec2(0.0, 0.0)), 0.0))), float(_GLF_FUZZED(-5.4)), bool(false))))))), _GLF_IDENTITY(false, bool(bvec2(false, false)))))))))), _GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((true))) || false) && (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_IDENTITY(false, bool(bvec2(false, false)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(false, false))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(false, false)))))), bvec3(bvec3(bvec3(bvec3(bvec3(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(false, false))))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ! (! ((injectionSwitch.x > injectionSwitch.y) && true)))))), _GLF_IDENTITY(false, bool(bvec2(false, false)))), bvec3(bvec3(bvec3(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(false, false)))))))))), (! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((false), ((false)) && true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) && true))), _GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, (false) || false))))), bvec3(bvec3(bvec3(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(false, false))))))))))) || false))))))))))))) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), false, true))), true, true), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))), true, true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, false || (true)))), true), true)))))), false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0))))), _GLF_IDENTITY(false, false || (false)), true))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))), true, true), true))), false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(497.573), _GLF_FUZZED(4.3)), bvec2(false, false))), injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))), false, true))), true, true), true))), false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7.1) : injectionSwitch.y))))), false, true))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), true))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))), true, true), true))), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7.1) : injectionSwitch.y))))), false, true))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7.1) : injectionSwitch.y))))), false, true))))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), true))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))), true, true), true))), false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7.1) : injectionSwitch.y))))), false, true))), true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))), injectionSwitch)).x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x > injectionSwitch.y))), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), true))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))), false, true))), true, true), true))), false)))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7.1) : injectionSwitch.y))))), false, true))), true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))), injectionSwitch)).x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x > injectionSwitch.y))), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), true))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))), false, true))), true, true), true))), false))))))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))), false, true))), true, true), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false, true, false))))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))), true, true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false, true, false))))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))), true, true), true)))))), false)))))))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), ((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), clamp(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) | (uvec3(gl_WorkGroupID))), _GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) / uvec3(1u, 1u, 1u)), uvec3(gl_WorkGroupID))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) ? _GLF_FUZZED(GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size) : _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), clamp(uvec3(gl_WorkGroupID), _GLF_IDENTITY(uvec3(gl_WorkGroupID), _GLF_IDENTITY((uvec3(gl_WorkGroupID)) / uvec3(1u, 1u, 1u), ((uvec3(gl_WorkGroupID)) / uvec3(1u, 1u, 1u)) | ((_GLF_IDENTITY(uvec3(gl_WorkGroupID), uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupID)), (true ? uvec3(uvec3(gl_WorkGroupID)) : _GLF_FUZZED(uvec3(151024u, 107264u, 9854u))))))) / uvec3(1u, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, max(1u, 1u)))), 1u)))), uvec3(gl_WorkGroupID))))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(sqrt(0.0), float(mat3x2(sqrt(0.0), 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))), _GLF_IDENTITY(min(vec3(injectionSwitch.x, 0.0, sqrt(0.0)), vec3(injectionSwitch.x, 0.0, sqrt(0.0))), (min(vec3(injectionSwitch.x, 0.0, sqrt(0.0)), vec3(injectionSwitch.x, 0.0, sqrt(0.0)))) * vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) / 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u), (workgroup_size) >> 0u) * workgroup_id, clamp(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(subgroup_id))), workgroup_id, _GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))), _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u), (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u)) >> 0u), workgroup_size * workgroup_id)), (workgroup_size * workgroup_id) >> 0u), workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, 0u ^ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id))), 1u * (_GLF_IDENTITY((workgroup_id), ~ (~ ((workgroup_id)))))))))), max(_GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> 0u), workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << _GLF_IDENTITY(0u, uint(uint(0u)))), clamp(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << _GLF_IDENTITY(0u, uint(uint(0u)))), clamp(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << _GLF_IDENTITY(0u, uint(uint(0u)))), workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << _GLF_IDENTITY(0u, uint(uint(0u)))), workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << _GLF_IDENTITY(0u, uint(uint(0u)))))), workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << _GLF_IDENTITY(0u, uint(uint(0u)))), workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << _GLF_IDENTITY(0u, uint(uint(0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_size, uint(uvec4(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 1u, 1u, 0u))))) * workgroup_id, (workgroup_size * workgroup_id) >> 0u), workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> 0u), workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> 0u), workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), min(clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> 0u), workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> 0u), workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)))), clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> 0u), workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)))))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> 0u), workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> 0u), workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), min(clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> 0u), workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> 0u), workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))))))))), (~ ((_GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> 0u), workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))))) - 0u)) << 0u)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> 0u), workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), min(clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, (0u & uint(30672)) ^ (workgroup_size * workgroup_id)), workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> 0u), workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)) | (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)))) << 0u))))), _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> 0u), workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), min(clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, (0u & uint(30672)) ^ (workgroup_size * workgroup_id)), workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> 0u), workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)) | (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)))) << 0u))))), 0u, 1u)), (false ? _GLF_FUZZED(workgroup_size) : uint(uvec3((_GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> 0u), workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), min(clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, (0u & uint(30672)) ^ (workgroup_size * workgroup_id)), workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> 0u), workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)) | (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)))) << 0u))))), 0u, 1u)))))))))) | (~ ((_GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> 0u), workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> 0u), workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), min(clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)), (workgroup_size * workgroup_id) >> 0u), workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> 0u), workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))))))))))))) | (0u | 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(uint(uvec3(workgroup_size * workgroup_id, 1u, 0u)), (uint(uvec3(_GLF_IDENTITY(workgroup_size, (workgroup_size) * ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) * _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), 1u, 0u))) << 0u)), (workgroup_size * workgroup_id) >> 0u), workgroup_size * workgroup_id, workgroup_size * workgroup_id))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (! (! (_GLF_IDENTITY(false, bool(bool(false)))))) || false))))), _GLF_IDENTITY(true && ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))), false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), false)))) || false) && ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), true && ((_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))) || false), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) && true)), bool(bool(true && (_GLF_IDENTITY(false, (false) && true)))))), bool(bvec2(! (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) && true)), bool(bool(true && (_GLF_IDENTITY(false, (false) && true)))))), false))))))) || false)))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(! (! (! (false))), false || (_GLF_IDENTITY(! (! (! (false))), (! (! (! (false)))) && true))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), false || (_GLF_IDENTITY(! (! (! (false))), ! (! (_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))))))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), true, false, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), true && ((false) || _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((false), ((false)) || false))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5153.2693), _GLF_FUZZED(3577.2001)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) << 0)])).y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), max(_GLF_IDENTITY(0.0 + (injectionSwitch.y), (_GLF_IDENTITY(0.0 + (injectionSwitch.y), float(vec3(0.0 + (injectionSwitch.y), 0.0, 0.0)))) - tan(0.0)), 0.0 + (injectionSwitch.y))))) - 0.0), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, true, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true)))), (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), ! (! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), float(mat2(0.0 + (injectionSwitch.x), 0.0, 0.0, sqrt(0.0))))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), ! (! (((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), false || (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(! (! (((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (! (((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (((injectionSwitch.x > injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))), true, false)), ! (! (bool(bvec3(! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) + abs(vec2(0.0, 0.0))) : _GLF_FUZZED(injectionSwitch))).y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))), true, false))))))))) && true)), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y)), bool(bvec4(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y)), false, false, true))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y)), bool(bvec4(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y)), false, false, true))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))) && true), bool(bvec4(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y)), bool(bvec4(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y)), false, false, true))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))) && true), true, false, true)))) || false))), false || _GLF_IDENTITY((_GLF_IDENTITY(((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, int(ivec3(0, (0 ^ int(_GLF_ONE(1.0, injectionSwitch.y))), 0)))], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y)), bool(bvec4(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1])), injectionSwitch, injectionSwitch)).y)), false, false, true))), ! (! (((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(length(vec3(-833.319, 4714.2847, 2388.4297))) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y)), bool(bvec4(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])), injectionSwitch, injectionSwitch)).y)), false, false, true))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))) && true)))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, int(ivec3(0, (0 ^ int(_GLF_ONE(1.0, injectionSwitch.y))), 0)))], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y)), bool(bvec4(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1])), injectionSwitch, injectionSwitch)).y)), false, false, true))), ! (! (((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(length(vec3(-833.319, 4714.2847, 2388.4297))) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y)), bool(bvec4(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])), injectionSwitch, injectionSwitch)).y)), false, false, true))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))) && true)))))), ((_GLF_IDENTITY(((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, int(ivec3(0, (0 ^ int(_GLF_ONE(1.0, injectionSwitch.y))), 0)))], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y)), bool(bvec4(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1])), injectionSwitch, injectionSwitch)).y)), false, false, true))), ! (! (((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(length(vec3(-833.319, 4714.2847, 2388.4297))) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y)), bool(bvec4(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])), injectionSwitch, injectionSwitch)).y)), false, false, true))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))) && true))))))) && true)))) && true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false) || false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size.y * GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size.z + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size.y * _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size, _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size) / uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) + 0u), 1u), uvec3(uvec4((GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size) / uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((virtual_gid)) : 1u))) ^ 0u)) + 0u), 1u), 0u)))).z + (_GLF_IDENTITY((subgroup_local_id + 1) % GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size.z, ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1) % GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size.z, ((subgroup_local_id + 1) % GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size.z) >> 0u))))), ~ (~ _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size.y * _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size, (GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size) / uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) + 0u), 1u)).z, (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size.y * _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size, (GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size) / uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) + 0u), 1u)).z, (GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size.y * _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size, (GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size) / uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) + 0u), 1u)).z) / 1u)) + (0u << _GLF_IDENTITY(uint(8u), uint(8u)))) + ((subgroup_local_id + 1) % GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size.z)), max((workgroup_base + _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size.y * _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size, (GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size) / uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) + 0u), 1u)).z, (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size.y * _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size, (GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size) / uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) + 0u), 1u)).z, (GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size.y * _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size, (GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size) / uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) + 0u), 1u)).z) / 1u)) + (0u << _GLF_IDENTITY(uint(8u), uint(8u)))) + ((subgroup_local_id + 1) % GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size.z)), (workgroup_base + _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size.y * _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size, (GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size) / uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) + 0u), 1u)).z, (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size.y * _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size, (GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size) / uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) + 0u), 1u)).z, (GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size.y * _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size, (GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size) / uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) + 0u), 1u)).z) / 1u)) + (0u << _GLF_IDENTITY(uint(8u), uint(8u)))) + ((subgroup_local_id + 1) % GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size.z))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) | 0u, 1u * ((_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-12807) : _GLF_IDENTITY(1, (1) | (1))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-12807) : _GLF_IDENTITY(1, (1) | (1))))), (uint(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-12807) : _GLF_IDENTITY(1, (1) | (1)))))) * 1u)) / 1u)) | 0u))), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) | 0u, 1u * ((_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-12807) : _GLF_IDENTITY(1, (1) | (1))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-12807) : _GLF_IDENTITY(1, (1) | (1))))), (uint(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-12807) : _GLF_IDENTITY(1, (1) | (1)))))) * 1u)) / 1u)) | 0u)))) << 0u), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) + (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u))))), _GLF_IDENTITY(uint(5u), uint(5u))))))], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size.x = read;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), true)))))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 atomicStore(checker[virtual_gid], GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size.x, _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) | (4)))), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3976.3689))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}
