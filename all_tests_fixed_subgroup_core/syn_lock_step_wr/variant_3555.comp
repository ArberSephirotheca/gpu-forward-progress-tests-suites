#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && true))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))), bool(bvec4(false, false, true, false))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))), bool(bvec4(false, false, true, false))))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))), bool(bvec4(false, false, true, false))))))))), false || _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), true && (bool(bvec4(false, false, true, false)))))))), true && ((! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), true && (bool(bvec4(false, false, true, false)))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 1.0, _GLF_IDENTITY(tan(0.0), mix(float(_GLF_IDENTITY(tan(0.0), (tan(0.0)) + 0.0)), float(_GLF_FUZZED((-63.12 - 51.88))), bool(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, bool(bvec2(false, true))), true)))))), 0.0, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(-99.46))))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), abs(1.0), 1.0)), mix(float(_GLF_FUZZED(4572.5245)), float(float(mat3(injectionSwitch.y, 1.0, tan(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3406.3076)), float(0.0), bool(true)))) * exp(sin(0.0))), 1.0), mat2(mat3(mat2(0.0, 0.0, 0.0, 1.0))))), max(float(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 1.0), mat2(mat3(mat2(0.0, 0.0, 0.0, 1.0))))), float(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 1.0), mat2(mat3(mat2(0.0, 0.0, 0.0, 1.0)))))))), 0.0)), 1.0))), abs(1.0), 1.0))), bool(true))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED((+ -480.372)), _GLF_FUZZED(1598.4900)), bvec2(false, false))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0)))).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(false ? _GLF_FUZZED(3.1) : _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(_GLF_FUZZED(-913.313), clamp(_GLF_FUZZED(-913.313), _GLF_IDENTITY(_GLF_FUZZED(-913.313), mix(float(_GLF_FUZZED((+ -7.8))), float(_GLF_FUZZED(-913.313)), bool(true))), _GLF_FUZZED(-913.313)))), float(injectionSwitch[1]), bool(true))), min(false ? _GLF_FUZZED(3.1) : _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(_GLF_FUZZED(-913.313), clamp(_GLF_FUZZED(-913.313), _GLF_IDENTITY(_GLF_FUZZED(-913.313), mix(float(_GLF_FUZZED((+ -7.8))), float(_GLF_FUZZED(-913.313)), bool(true))), _GLF_FUZZED(-913.313)))), float(injectionSwitch[1]), bool(true))), false ? _GLF_FUZZED(3.1) : _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(_GLF_FUZZED(-913.313), clamp(_GLF_FUZZED(-913.313), _GLF_IDENTITY(_GLF_FUZZED(-913.313), mix(float(_GLF_FUZZED((+ -7.8))), float(_GLF_FUZZED(-913.313)), bool(true))), _GLF_FUZZED(-913.313)))), float(injectionSwitch[1]), bool(true))))))), (false ? _GLF_FUZZED(8.2) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(3.1) : _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-913.313)), float(injectionSwitch[1]), bool(true))))), 0.0 + (_GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(true, (true) && true))), bool(bvec3(_GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(true, (true) && true))), bool(bvec4(bool(bvec4(false, true, false, _GLF_IDENTITY(true, (true) && true))), false, false, true))), false, false)))) ? _GLF_FUZZED(3.1) : _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(_GLF_FUZZED(-913.313), clamp(_GLF_FUZZED(-913.313), _GLF_FUZZED(-913.313), _GLF_FUZZED(-913.313)))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0)), clamp(vec2(mat3x2(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0)), vec2(mat3x2(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0)), vec2(mat3x2(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0)))))[1]), (float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0)), clamp(vec2(mat3x2(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0)), vec2(mat3x2(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0)), vec2(mat3x2(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0)))))[1])) * 1.0), bool(true))))))))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2318.3416), _GLF_FUZZED(float(81222u))), bvec2(false, false))).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))))))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false, false, false)), (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false, false, false))) || false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y), true, false)))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, exp(0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), 0.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, exp(0.0), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- -7521.5488))), float(1.0), bool(true))), 1.0, 0.0, 0.0, 1.0))))), vec2(mat4x3(vec2(_GLF_IDENTITY(mat3(injectionSwitch, exp(0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), 0.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, exp(0.0), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- -7521.5488))), float(1.0), bool(true))), 1.0, 0.0, 0.0, 1.0))))), tan(0.0), 1.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, sqrt(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (_GLF_DEAD(false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, true))), true))), false))))), false, false, true)))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, true))), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, true))), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, true))), true))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, true))), true)))))))), false)))), false))))), false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9408.4694), _GLF_FUZZED(-4965.2451)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))[0], injectionSwitch[1])).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-9408.4694), _GLF_FUZZED(-4965.2451)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-9408.4694), _GLF_FUZZED(-4965.2451)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))))[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))[1])).y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9408.4694), _GLF_FUZZED(-4965.2451)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[1]), bvec2(true, true)))[0], injectionSwitch[1])).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))), 1.0, 1.0, 1.0, 1.0, 1.0, exp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-9.8 / -15.52))), float(0.0), bool(true)))), tan(0.0), 1.0, 1.0, 1.0))), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (true ? vec3(0.0, 0.0, 1.0) : _GLF_FUZZED(vec3(2.8, -9392.3582, 6.6))))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat4x2(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(24.35)), bool(false))), 0.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0), mat4x2(mat4(mat4x2(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), (dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))) + 0.0), dot(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0), vec3(0.0, 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), 0.0, 1.0))))))))))), vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9408.4694), _GLF_FUZZED(-4965.2451)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], _GLF_IDENTITY(dot(vec3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, sqrt(0.0), 1.0, determinant(mat3(abs(0.0), 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))))))))), bvec2(true, true)))[0], injectionSwitch[1])).y : _GLF_FUZZED(4.7)))))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false, true, false))))), ! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false, true, false))))))))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! (_GLF_DEAD(false))))))), _GLF_IDENTITY(true, bool(bvec2(true, true))) && (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && (! (! (_GLF_DEAD(false)))))) || false))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-1.0, clamp(-1.0, _GLF_IDENTITY(-1.0, (_GLF_IDENTITY(true, true && (true)) ? -1.0 : _GLF_FUZZED(39.82))), -1.0))) : injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7.1, -92.12)))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7.1, -92.12)))).y)) || false), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, sin(0.0), 1.0), (vec4(injectionSwitch.x, 1.0, sin(0.0), 1.0)) - vec4(0.0, 0.0, 0.0, 0.0)))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))) ? injectionSwitch : _GLF_FUZZED(vec2(7.1, -92.12)))).y), false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), bool(bvec4((false), false, false, false)))))) && true)))) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false, false, true))), false, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false, false, true))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false, false, true))), false, true))))), false, true))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), true, false)))), (injectionSwitch.x > injectionSwitch.y))))))))))) || false)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4213.8253), _GLF_FUZZED(-373.917)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, 0.0))), injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true))))), true, false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((false ? -2.7 : -825.478))), vec2(_GLF_FUZZED(8310.8927), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).y))))))))), true && ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true))))), true, false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((false ? -2.7 : -825.478))), vec2(_GLF_FUZZED(8310.8927), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).y))))))))))))) || false))), bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(182051u))), bvec2(true, false))).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), max(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), (true ? float(mat2x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)) : _GLF_FUZZED(7.8)))))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), bool(bvec3(bool(bool(false)), _GLF_IDENTITY(true, false || (true)), false)))), (injectionSwitch.x > injectionSwitch.y))))))))))) || false))), false, false, false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))))))))), ((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))))))) || false))))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) - 0u);
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x))) >> 0u)) >> 0u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)), min(uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x))), uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)), 1u, 1u)), uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u))))) - (0u | (0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, min(_GLF_IDENTITY(8u, min(8u, 8u)), 8u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)), min(uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)), uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u))))) - (0u | (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)), min(uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)), uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u))))) - (0u | (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)), min(uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)), uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u))))) - (0u | (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))))), _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)), min(uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)), uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u))))) - (0u | (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))))))) | 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, 1u * (workgroup_id)) : _GLF_FUZZED(subgroup_id)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / (1u & 1u)) + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size) | 0u) + subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / (1u & 1u)) + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size) | 0u) + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / (1u & 1u)) + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size) | 0u) + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / (1u & 1u)) + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size) | 0u) + subgroup_local_id) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / (1u & 1u)), uint(uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) / (1u & 1u)), 1u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), (1u ^ 1u)))) + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size) | 0u) + subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / (1u & 1u)) + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size) | 0u) + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / (1u & 1u)) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (workgroup_base) / (1u & 1u)) + subgroup_id * subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / (1u & 1u)) + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / (1u & 1u)) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base, (workgroup_base) / (1u & 1u)) + subgroup_id * subgroup_size)))), (workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size) | 0u) + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / (1u & 1u)) + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), ~ (~ ((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) << 0u)) * subgroup_size) | 0u) + subgroup_local_id))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(8.9, _GLF_IDENTITY((_GLF_IDENTITY(8.9, clamp(8.9, 8.9, 8.9))), max((_GLF_IDENTITY(8.9, clamp(8.9, 8.9, 8.9))), _GLF_IDENTITY((_GLF_IDENTITY(8.9, clamp(8.9, 8.9, 8.9))), mix(float(_GLF_FUZZED(3.7)), float(_GLF_IDENTITY((_GLF_IDENTITY(8.9, clamp(8.9, 8.9, 8.9))), float(mat3((_GLF_IDENTITY(8.9, clamp(8.9, 8.9, 8.9))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), bool(true))))) / 1.0)), (true ? _GLF_FUZZED(_GLF_IDENTITY(8.9, (_GLF_IDENTITY(8.9, clamp(8.9, 8.9, 8.9))) / 1.0)) : _GLF_FUZZED(-9.8))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(packSnorm2x16(vec2(-204.017, 4.1))) : subgroup_id)) * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(packSnorm2x16(vec2(-204.017, 4.1))) : subgroup_id)) * subgroup_size, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(packSnorm2x16(vec2(-204.017, 4.1))) : subgroup_id)) * subgroup_size), (0u ^ (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(packSnorm2x16(vec2(-204.017, 4.1))) : subgroup_id)) * subgroup_size)) >> 0u)), 1u, 0u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(packSnorm2x16(vec2(-204.017, 4.1))) : subgroup_id, (false ? _GLF_FUZZED(packSnorm2x16(vec2(-204.017, 4.1))) : subgroup_id) / 1u))) * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(packSnorm2x16(vec2(-204.017, 4.1))) : subgroup_id)) * subgroup_size)), 1u, 0u)) + uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(0u, 0u))))), 0u))), (true ? uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(packSnorm2x16(vec2(-204.017, _GLF_IDENTITY(4.1, (true ? 4.1 : _GLF_FUZZED(9429.4823)))))) : subgroup_id)) * subgroup_size, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) ? _GLF_FUZZED(packSnorm2x16(vec2(-204.017, 4.1))) : subgroup_id)) * subgroup_size), (0u ^ (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(packSnorm2x16(vec2(-204.017, 4.1))) : subgroup_id)) * subgroup_size)) >> 0u)), 1u, 0u), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(packSnorm2x16(vec2(-204.017, _GLF_IDENTITY(4.1, 1.0 * (4.1))))) : subgroup_id)) * subgroup_size, _GLF_IDENTITY(0u, min(0u, 0u)) ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(packSnorm2x16(vec2(-204.017, 4.1))) : subgroup_id, (false ? _GLF_FUZZED(uint(16411)) : false ? _GLF_FUZZED(packSnorm2x16(vec2(-204.017, 4.1))) : subgroup_id)))) * subgroup_size)), 1u, 0u)), ((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(packSnorm2x16(vec2(-204.017, _GLF_IDENTITY(4.1, 1.0 * (4.1))))) : subgroup_id)) * subgroup_size, _GLF_IDENTITY(0u, min(0u, 0u)) ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(packSnorm2x16(vec2(-204.017, 4.1))) : subgroup_id, (false ? _GLF_FUZZED(uint(16411)) : false ? _GLF_FUZZED(packSnorm2x16(vec2(-204.017, 4.1))) : subgroup_id)))) * subgroup_size)), 1u, 0u))) | (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(packSnorm2x16(vec2(-204.017, _GLF_IDENTITY(4.1, 1.0 * (4.1))))) : subgroup_id)) * subgroup_size, _GLF_IDENTITY(0u, min(0u, 0u)) ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(packSnorm2x16(vec2(-204.017, 4.1))) : subgroup_id, (false ? _GLF_FUZZED(uint(16411)) : false ? _GLF_FUZZED(packSnorm2x16(vec2(-204.017, 4.1))) : subgroup_id)))) * subgroup_size)), 1u, 0u)), ((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(packSnorm2x16(vec2(-204.017, _GLF_IDENTITY(4.1, 1.0 * (4.1))))) : subgroup_id)) * subgroup_size, _GLF_IDENTITY(0u, min(0u, 0u)) ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(packSnorm2x16(vec2(-204.017, 4.1))) : subgroup_id, (false ? _GLF_FUZZED(uint(16411)) : false ? _GLF_FUZZED(packSnorm2x16(vec2(-204.017, 4.1))) : subgroup_id)))) * subgroup_size)), 1u, 0u))) - uvec3(0u, 0u, 0u)))) + uvec3(0u, 0u, 0u))) : _GLF_FUZZED(workgroup_size)))) + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), clamp(_GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (uint(uint(subgroup_local_id + 1))) >> 0u), 1u, 0u))), _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), clamp(uint(uint(subgroup_local_id + 1)), uint(uint(subgroup_local_id + 1)), uint(uint(subgroup_local_id + 1)))), _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (true ? uint(uint(subgroup_local_id + 1)) : _GLF_FUZZED(num_workgroup)))))), (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))))) | 0u)) << 0u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), clamp(_GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (uint(uint(subgroup_local_id + 1))) >> 0u), 1u, 0u))), _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), clamp(uint(uint(subgroup_local_id + 1)), uint(uint(subgroup_local_id + 1)), uint(uint(subgroup_local_id + 1)))), _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (true ? uint(uint(subgroup_local_id + 1)) : _GLF_FUZZED(num_workgroup)))))), (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))))) | 0u)) << 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), clamp(_GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (uint(uint(subgroup_local_id + 1))) >> 0u), 1u, 0u))), _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), clamp(uint(uint(subgroup_local_id + 1)), uint(uint(subgroup_local_id + 1)), uint(uint(subgroup_local_id + 1)))), _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (true ? uint(uint(subgroup_local_id + 1)) : _GLF_FUZZED(num_workgroup)))))), (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))))) | 0u)) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), clamp(_GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (uint(uint(subgroup_local_id + 1))) >> 0u), 1u, 0u))), _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), clamp(uint(uint(subgroup_local_id + 1)), uint(uint(subgroup_local_id + 1)), uint(uint(subgroup_local_id + 1)))), _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (true ? uint(uint(subgroup_local_id + 1)) : _GLF_FUZZED(num_workgroup)))))), (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))))) | 0u)) << 0u))), (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u))))), ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) / 1u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u)), clamp(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), clamp(_GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (uint(uint(subgroup_local_id + 1))) >> 0u), 1u, 0u))), _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), clamp(uint(uint(subgroup_local_id + 1)), uint(uint(subgroup_local_id + 1)), uint(uint(subgroup_local_id + 1)))), _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (true ? uint(uint(subgroup_local_id + 1)) : _GLF_FUZZED(num_workgroup)))))), (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))))) | 0u)) << 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), clamp(_GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (uint(uint(subgroup_local_id + 1))) >> 0u), 1u, 0u))), _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), clamp(uint(uint(subgroup_local_id + 1)), uint(uint(subgroup_local_id + 1)), uint(uint(subgroup_local_id + 1)))), _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (true ? uint(uint(subgroup_local_id + 1)) : _GLF_FUZZED(num_workgroup)))))), (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))))) | 0u)) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), clamp(_GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (uint(uint(subgroup_local_id + 1))) >> 0u), 1u, 0u))), _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), clamp(uint(uint(subgroup_local_id + 1)), uint(uint(subgroup_local_id + 1)), uint(uint(subgroup_local_id + 1)))), _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (true ? uint(uint(subgroup_local_id + 1)) : _GLF_FUZZED(num_workgroup)))))), (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))))) | 0u)) << 0u))), (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u))))), ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) / 1u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), clamp(_GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (uint(uint(subgroup_local_id + 1))) >> 0u), 1u, 0u))), _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), clamp(uint(uint(subgroup_local_id + 1)), uint(uint(subgroup_local_id + 1)), uint(uint(subgroup_local_id + 1)))), _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (true ? uint(uint(subgroup_local_id + 1)) : _GLF_FUZZED(num_workgroup)))))), (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))))) | 0u)) << 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), clamp(_GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (uint(uint(subgroup_local_id + 1))) >> 0u), 1u, 0u))), _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), clamp(uint(uint(subgroup_local_id + 1)), uint(uint(subgroup_local_id + 1)), uint(uint(subgroup_local_id + 1)))), _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (true ? uint(uint(subgroup_local_id + 1)) : _GLF_FUZZED(num_workgroup)))))), (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))))) | 0u)) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), clamp(_GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (uint(uint(subgroup_local_id + 1))) >> 0u), 1u, 0u))), _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), clamp(uint(uint(subgroup_local_id + 1)), uint(uint(subgroup_local_id + 1)), uint(uint(subgroup_local_id + 1)))), _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (true ? uint(uint(subgroup_local_id + 1)) : _GLF_FUZZED(num_workgroup)))))), (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))))) | 0u)) << 0u))), (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u))))), ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) / 1u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), clamp(_GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (uint(uint(subgroup_local_id + 1))) >> 0u), 1u, 0u))), _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), clamp(uint(uint(subgroup_local_id + 1)), uint(uint(subgroup_local_id + 1)), uint(uint(subgroup_local_id + 1)))), _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (true ? uint(uint(subgroup_local_id + 1)) : _GLF_FUZZED(num_workgroup)))))), (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))))) | 0u)) << 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), clamp(_GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (uint(uint(subgroup_local_id + 1))) >> 0u), 1u, 0u))), _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), clamp(uint(uint(subgroup_local_id + 1)), uint(uint(subgroup_local_id + 1)), uint(uint(subgroup_local_id + 1)))), _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (true ? uint(uint(subgroup_local_id + 1)) : _GLF_FUZZED(num_workgroup)))))), (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))))) | 0u)) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), clamp(_GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (uint(uint(subgroup_local_id + 1))) >> 0u), 1u, 0u))), _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), clamp(uint(uint(subgroup_local_id + 1)), uint(uint(subgroup_local_id + 1)), uint(uint(subgroup_local_id + 1)))), _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (true ? uint(uint(subgroup_local_id + 1)) : _GLF_FUZZED(num_workgroup)))))), (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))))) | 0u)) << 0u))), (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u))))), ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) / 1u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u)))))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))), false, true, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))), false, true, true)), false, true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8800.8572)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > injectionSwitch.y))) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > injectionSwitch.y))) || false)), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > injectionSwitch.y))) || false)), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > injectionSwitch.y))) || false)), false, false), false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + 0.0), injectionSwitch[1])).x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + 0.0), injectionSwitch[1])).x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + 0.0), injectionSwitch[1])).x > injectionSwitch.y))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (false) || false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))) || false))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y)) || false))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))), bool(bvec3(_GLF_DEAD(false), false, false))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, true, false)), false, true, false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(false, true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(-73453))), vec2(_GLF_FUZZED(-247.515), (injectionSwitch)[1]), bvec2(false, true))).y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 1.0)), clamp(float(vec2(injectionSwitch.y, 1.0)), _GLF_IDENTITY(float(vec2(injectionSwitch.y, 1.0)), mix(float(float(vec2(injectionSwitch.y, 1.0))), float(_GLF_FUZZED(440.589)), bool(false))), float(vec2(injectionSwitch.y, 1.0))))), (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)), clamp(1.0, 1.0, 1.0)))))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-32315), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-32315), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-32315)) | 0)) >> 0))), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))))), ((_GLF_IDENTITY(4, _GLF_IDENTITY((4), (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) | 0)), clamp((4), _GLF_IDENTITY((4), int(ivec4((_GLF_IDENTITY(4, max(4, 4))), 0, 1, 1))), (_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), (0 ^ 0)), ivec3(ivec3(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), (0 ^ 0))))))))))) * _GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), 0 | (1 << _GLF_IDENTITY(int(5), int(5))))) >> _GLF_IDENTITY(int(5), int(5))), (((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, ~ (~ (5)))), int(5)))) | _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) | 0))))) / 1))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 ^ (1))))), 0 + (_GLF_IDENTITY(4, (4) / 1)))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 ^ (1))))), 0 + (_GLF_IDENTITY(4, (4) / 1)))) : _GLF_FUZZED(-16066))))))) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ (0 << _GLF_IDENTITY(int(1), int(1))), max((0) ^ (0 << _GLF_IDENTITY(int(1), int(1))), (0) ^ (0 << _GLF_IDENTITY(int(1), int(1))))))), 64, _GLF_IDENTITY(0, min(0, 0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), true && ((false)))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), true && ((false)))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), true && ((false)))))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), true && ((false)))))))), false)), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-65.01)), bool(false))), 0.0 + (injectionSwitch.x)))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y))))) || false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), bool(bool(bool(bool(! (false)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-89.92)), float(injectionSwitch.x), bool(true))), injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, (_GLF_IDENTITY((injectionSwitch.y) * 1.0, mix(float((injectionSwitch.y) * 1.0), float(_GLF_FUZZED(-97.25)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) / 1.0))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))))
  return;
 atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (4)), min(~ (~ (4)), _GLF_IDENTITY(~ (~ (4)), (1 ^ 1) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED((false ? -98522 : -54234)))), (_GLF_IDENTITY(~ (~ (4)), ~ (~ (_GLF_IDENTITY(~ (~ (4)), clamp(~ (~ (4)), ~ (~ (4)), ~ (~ (4)))))))) + 0)))))));
}
