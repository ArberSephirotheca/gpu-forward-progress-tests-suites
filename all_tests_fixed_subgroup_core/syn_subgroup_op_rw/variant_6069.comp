#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_44 {
 uvec4 _f0;
} ;

struct _GLF_struct_43 {
 bvec4 _f0;
 uint _f1;
 mat3x2 _f2;
 ivec3 _f3;
 uint _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_42 {
 mat3x2 _f0;
} ;

struct _GLF_struct_45 {
 _GLF_struct_42 _f0;
 _GLF_struct_43 _f1;
 bool _f2;
 _GLF_struct_44 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_40 {
 mat3x4 _f0;
 mat2x4 _f1;
 bvec4 _f2;
 mat4 _f3;
 uint _f4;
} ;

struct _GLF_struct_41 {
 _GLF_struct_40 _f0;
} ;

struct _GLF_struct_46 {
 _GLF_struct_41 _f0;
 _GLF_struct_45 _f1;
 uint subgroup_id;
} ;

struct _GLF_struct_38 {
 mat3 _f0;
 bvec3 _f1;
 mat3x2 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_36 {
 ivec3 _f0;
 bvec2 _f1;
 mat2 _f2;
 uvec3 _f3;
 mat4 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_35 {
 bvec3 _f0;
 bvec3 _f1;
 ivec3 _f2;
 int _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_37 {
 mat2x4 _f0;
 _GLF_struct_35 _f1;
 _GLF_struct_36 _f2;
} ;

struct _GLF_struct_33 {
 vec4 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_34 {
 _GLF_struct_33 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_39 {
 uvec4 _f0;
 _GLF_struct_34 _f1;
 _GLF_struct_37 _f2;
 uint workgroup_size;
 _GLF_struct_38 _f3;
} ;

struct _GLF_struct_30 {
 mat3x2 _f0;
 uvec4 _f1;
 uint _f2;
 mat3 _f3;
} ;

struct _GLF_struct_29 {
 mat3 _f0;
 ivec4 _f1;
 mat3 _f2;
 mat3 _f3;
 uint _f4;
 uint _f5;
} ;

struct _GLF_struct_28 {
 vec4 _f0;
} ;

struct _GLF_struct_27 {
 ivec2 _f0;
 mat2x3 _f1;
 uvec2 _f2;
 mat4x3 _f3;
 mat3 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_31 {
 _GLF_struct_27 _f0;
 _GLF_struct_28 _f1;
 uvec4 _f2;
 _GLF_struct_29 _f3;
 bvec2 _f4;
 _GLF_struct_30 _f5;
} ;

struct _GLF_struct_32 {
 _GLF_struct_31 _f0;
 uint workgroup_id;
} ;

struct _GLF_struct_26 {
 uint subgroup_local_id;
 uint _f0;
} ;

struct _GLF_struct_23 {
 mat2x3 _f0;
 uvec4 _f1;
 uvec4 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_22 {
 mat3x2 _f0;
 uvec4 _f1;
 mat4x2 _f2;
 int _f3;
 bvec2 _f4;
 uint _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_21 {
 bvec4 _f0;
 uvec3 _f1;
 uvec2 _f2;
 mat3 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_24 {
 uvec4 _f0;
 bvec2 _f1;
 mat2 _f2;
 _GLF_struct_21 _f3;
 _GLF_struct_22 _f4;
 _GLF_struct_23 _f5;
} ;

struct _GLF_struct_20 {
 mat2 _f0;
} ;

struct _GLF_struct_18 {
 mat4 _f0;
 bvec2 _f1;
 ivec3 _f2;
 mat3x2 _f3;
 bvec2 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_17 {
 int _f0;
 mat3x2 _f1;
 mat3 _f2;
 mat4 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_19 {
 mat3 _f0;
 _GLF_struct_17 _f1;
 _GLF_struct_18 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_25 {
 mat3x2 _f0;
 _GLF_struct_19 _f1;
 uvec2 _f2;
 _GLF_struct_20 _f3;
 uint virtual_gid;
 mat4x2 _f4;
 _GLF_struct_24 _f5;
} ;

struct _GLF_struct_14 {
 bvec4 _f0;
 bvec4 _f1;
 ivec4 _f2;
 bvec4 _f3;
 uvec2 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_15 {
 bool _f0;
 bvec3 _f1;
 _GLF_struct_14 _f2;
 uint next_virtual_gid;
} ;

struct _GLF_struct_12 {
 ivec3 _f0;
 uint _f1;
} ;

struct _GLF_struct_11 {
 mat3x2 _f0;
 int _f1;
 ivec2 _f2;
 bvec4 _f3;
 mat4x2 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_10 {
 float _f0;
 float _f1;
 mat2x4 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_13 {
 _GLF_struct_10 _f0;
 int _f1;
 _GLF_struct_11 _f2;
 _GLF_struct_12 _f3;
 ivec4 _f4;
 vec3 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_8 {
 mat4 _f0;
 bvec4 _f1;
 uint _f2;
 uvec4 _f3;
 uvec3 _f4;
 int _f5;
} ;

struct _GLF_struct_7 {
 uvec2 _f0;
 ivec2 _f1;
 mat3 _f2;
 bvec4 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_9 {
 _GLF_struct_7 _f0;
 vec2 _f1;
 uvec4 _f2;
 _GLF_struct_8 _f3;
} ;

struct _GLF_struct_16 {
 mat3x2 _f0;
 _GLF_struct_9 _f1;
 mat4x2 _f2;
 _GLF_struct_13 _f3;
 _GLF_struct_15 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_4 {
 uvec4 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
 float _f1;
} ;

struct _GLF_struct_2 {
 mat2x4 _f0;
 uvec2 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_1 {
 ivec4 _f0;
} ;

struct _GLF_struct_0 {
 uvec3 _f0;
} ;

struct _GLF_struct_6 {
 _GLF_struct_0 _f0;
 mat4 _f1;
 uint subgroup_size;
 _GLF_struct_1 _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_5 _f4;
 mat2x3 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_46 _GLF_struct_replacement_46 = _GLF_struct_46(_GLF_struct_41(_GLF_struct_40(mat3x4(1.0), mat2x4(1.0), bvec4(true), mat4(1.0), 1u)), _GLF_struct_45(_GLF_struct_42(mat3x2(1.0)), _GLF_struct_43(bvec4(true), 1u, mat3x2(1.0), ivec3(1), 1u, mat3x2(1.0)), true, _GLF_struct_44(uvec4(1u)), mat2x4(1.0)), gl_SubgroupID);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(mix(-5311.2727, 45.70, 831.037)) : injectionSwitch.y))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), false, true))), false, true))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_0(uvec3(1u)), mat4(1.0), gl_SubgroupSize, _GLF_struct_1(ivec4(_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) << 0)))), _GLF_struct_3(_GLF_struct_2(mat2x4(_GLF_IDENTITY(1.0, (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (true) || false))))) || false)) ? _GLF_FUZZED(_GLF_IDENTITY(-29.98, (_GLF_IDENTITY(-29.98, min(-29.98, _GLF_IDENTITY(-29.98, (true ? -29.98 : _GLF_FUZZED(80.33)))))) * 1.0)) : 1.0))), uvec2(1u), mat3(1.0)), mat2(1.0)), _GLF_struct_5(_GLF_struct_4(uvec4(1u), bvec3(true)), 1.0), mat2x3(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_26 _GLF_struct_replacement_26 = _GLF_struct_26(gl_SubgroupInvocationID, 1u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, false || (true))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), max(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), min(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))), _GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(568.418), _GLF_FUZZED(3.2)), vec2(((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0))[0], ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 _GLF_struct_39 _GLF_struct_replacement_39 = _GLF_struct_39(uvec4(1u), _GLF_struct_34(_GLF_struct_33(vec4(1.0), _GLF_IDENTITY(ivec3(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ivec3(1) : _GLF_FUZZED(ivec3(49697, 44455, -501))))), ivec4(1)), _GLF_struct_37(mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), float(mat3x4(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)))) - _GLF_ZERO(0.0, injectionSwitch.x))) * 1.0)))), _GLF_struct_35(bvec3(true), bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))))))))), bool(_GLF_IDENTITY(bool(! (! (bool(bool(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), true && ((true)))))))))), ! (_GLF_IDENTITY(! (bool(! (! (bool(bool(_GLF_IDENTITY(true, ! (! (true))))))))), true && (! (bool(! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), ! (! (bool(bool(_GLF_IDENTITY(true, ! (! (true))))))))))))))))))))))), ivec3(1), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) << 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) << 0)) - 0), bvec2(true)), _GLF_struct_36(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec2(1, 0))), 1))) << 0)), (ivec3(1)) | ivec3(0, 0, 0)), bvec2(_GLF_IDENTITY(true, false || (true))), mat2(1.0), uvec3(1u), mat4(1.0), bvec2(true))), gl_WorkGroupSize.x, _GLF_struct_38(mat3(1.0), bvec3(true), mat3x2(1.0), bvec3(true)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_32 _GLF_struct_replacement_32 = _GLF_struct_32(_GLF_struct_31(_GLF_struct_27(ivec2(1), mat2x3(1.0), uvec2(1u), mat4x3(1.0), mat3(1.0), mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), min(1.0, 1.0)))), _GLF_struct_28(vec4(1.0)), uvec4(1u), _GLF_struct_29(mat3(1.0), ivec4(1), mat3(1.0), mat3(1.0), 1u, 1u), bvec2(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_struct_30(mat3x2(1.0), uvec4(1u), 1u, mat3(1.0))), gl_WorkGroupID.x);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_struct_replacement_39.workgroup_size * _GLF_struct_replacement_32.workgroup_id, (_GLF_struct_replacement_39.workgroup_size * _GLF_struct_replacement_32.workgroup_id) - 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_25 _GLF_struct_replacement_25 = _GLF_struct_25(mat3x2(1.0), _GLF_struct_19(mat3(1.0), _GLF_struct_17(1, mat3x2(1.0), mat3(1.0), mat4(1.0), mat4(1.0)), _GLF_struct_18(mat4(1.0), bvec2(true), ivec3(1), mat3x2(1.0), bvec2(true), mat4(1.0)), mat3x2(1.0)), uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(127113u), (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(127113u), min(true ? 1u : _GLF_FUZZED(127113u), true ? 1u : _GLF_FUZZED(127113u)))) + ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) >> (0u & 199240u))), uint(2u)), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) >> (0u & 199240u))), uint(2u))))))))), _GLF_struct_20(mat2(1.0)), workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_46.subgroup_id, max(_GLF_struct_replacement_46.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_46.subgroup_id, clamp(_GLF_struct_replacement_46.subgroup_id, _GLF_struct_replacement_46.subgroup_id, _GLF_struct_replacement_46.subgroup_id)))) * _GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, (true ? _GLF_struct_replacement_6.subgroup_size : _GLF_FUZZED(_GLF_struct_replacement_39.workgroup_size))) + _GLF_struct_replacement_26.subgroup_local_id, mat4x2(1.0), _GLF_struct_24(uvec4(1u), bvec2(true), mat2(1.0), _GLF_struct_21(bvec4(true), uvec3(1u), uvec2(1u), mat3(1.0), _GLF_IDENTITY(ivec3(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ivec3(1) : _GLF_FUZZED(ivec3(87084, _GLF_IDENTITY(66552, (66552) | (66552)), -130))))), _GLF_struct_22(mat3x2(1.0), uvec4(_GLF_IDENTITY(1u, (1u) | 0u)), mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED((-6.0 * 9282.8141))), float(_GLF_IDENTITY((1.0), float(vec4((1.0), 0.0, 0.0, 0.0)))), bool(true))) - abs(0.0), min(_GLF_IDENTITY((1.0) - abs(0.0), (true ? (1.0) - abs(0.0) : _GLF_FUZZED(7212.4192))), _GLF_IDENTITY((1.0) - abs(0.0), ((1.0) - abs(0.0)) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))), 0.0, 0.0)))) + determinant(mat2(0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(1, int(int(1))), bvec2(true), 1u, mat2x3(1.0)), _GLF_struct_23(mat2x3(1.0), uvec4(1u), uvec4(1u), ivec3(1))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5202.2174), _GLF_FUZZED(-13.20)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x < injectionSwitch.y)))))) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  return;
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(mat3x2(1.0), _GLF_struct_9(_GLF_struct_7(uvec2(1u), ivec2(1), mat3(1.0), bvec4(true), _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0)))), vec2(1.0), uvec4(1u), _GLF_struct_8(mat4(1.0), bvec4(true), 1u, uvec4(1u), uvec3(1u), 1)), mat4x2(_GLF_IDENTITY(1.0, (1.0) - sqrt(length(vec2(0.0, 0.0))))), _GLF_struct_13(_GLF_struct_10(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0)), float(_GLF_FUZZED(-834.845)), bool(false))), mat2x4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(false ? _GLF_FUZZED(446.046) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(446.046) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * 1.0)))), float(_GLF_FUZZED(9.5)), bool(false)))))), (false ? _GLF_FUZZED(mat4(-3.1, -82.69, -210.128, 358.281, -1.4, 6.0, 974.601, 45.14, -4.2, 4.0, -0.6, 7885.5393, -2908.9381, 47.98, 869.713, -8.2)) : mat4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-3.7)), bool(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, log(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(sqrt(0.0), 0.0, 1.0, 0.0), (_GLF_IDENTITY(vec4(sqrt(0.0), 0.0, 1.0, 0.0), min(vec4(sqrt(0.0), 0.0, 1.0, 0.0), vec4(sqrt(0.0), 0.0, 1.0, 0.0)))) + vec4(0.0, 0.0, 0.0, 0.0)), vec4(0.0, sin(0.0), 1.0, 0.0)), dot(vec4(sqrt(0.0), 0.0, 1.0, 0.0), vec4(0.0, sin(0.0), 1.0, 0.0))), 1.0)))))))), (false ? _GLF_FUZZED(mat4(-3.1, -82.69, -210.128, 358.281, -1.4, 6.0, 974.601, 45.14, -4.2, 4.0, -0.6, 7885.5393, -2908.9381, _GLF_IDENTITY(47.98, (47.98) + 0.0), 869.713, -8.2)) : mat4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.3)), float(0.0), bool(true))) + _GLF_IDENTITY((_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(954.007) : 0.0))), clamp((_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(954.007) : 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(954.007) : 0.0))), max((_GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(954.007) : 0.0), ((false ? _GLF_FUZZED(954.007) : 0.0)) / determinant(mat2(1.0, 1.0, 0.0, 1.0))))), (_GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(954.007), min(_GLF_FUZZED(954.007), _GLF_FUZZED(954.007))) : 0.0))))), _GLF_IDENTITY((_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(954.007) : 0.0))), mix(float(_GLF_IDENTITY((_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(954.007) : 0.0))), ((_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(954.007) : 0.0)))) - 0.0)), float(_GLF_FUZZED(-5.3)), bool(false)))))), 0.0, 0.0, 0.0, 0.0)), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), (false ? _GLF_FUZZED(mat4(-3.1, -82.69, -210.128, _GLF_IDENTITY(358.281, clamp(_GLF_IDENTITY(358.281, (358.281) * 1.0), 358.281, 358.281)), -1.4, _GLF_IDENTITY(6.0, (_GLF_IDENTITY(6.0, min(_GLF_IDENTITY(6.0, clamp(6.0, 6.0, 6.0)), 6.0))) + 0.0), _GLF_IDENTITY(974.601, clamp(_GLF_IDENTITY(974.601, float(mat4(974.601, 1.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), 1.0))), 974.601, 974.601)), 45.14, -4.2, _GLF_IDENTITY(4.0, mix(float(4.0), float(_GLF_FUZZED(8.0)), bool(false))), -0.6, 7885.5393, -2908.9381, 47.98, 869.713, -8.2)) : mat4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), min(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), min(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0))), clamp(1.0, 1.0, 1.0)))))))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), transpose(transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), clamp(min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), _GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), min(min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), (false ? _GLF_FUZZED(mat4(-3.1, -82.69, -210.128, 358.281, -1.4, 6.0, 974.601, 45.14, -4.2, 4.0, -0.6, 7885.5393, -2908.9381, 47.98, 869.713, -8.2)) : mat4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), clamp(1.0, 1.0, 1.0)))))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (clamp(1.0, 1.0, 1.0)) + 0.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), clamp(1.0, 1.0, 1.0))))), (false ? _GLF_FUZZED(mat4(-3.1, -82.69, -210.128, 358.281, -1.4, 6.0, 974.601, 45.14, -4.2, 4.0, -0.6, 7885.5393, -2908.9381, 47.98, 869.713, -8.2)) : mat4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), (false ? _GLF_FUZZED(mat4(-3.1, -82.69, -210.128, 358.281, -1.4, 6.0, 974.601, 45.14, -4.2, 4.0, -0.6, 7885.5393, -2908.9381, 47.98, 869.713, -8.2)) : mat4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))), transpose(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), (false ? _GLF_FUZZED(mat4(-3.1, -82.69, -210.128, 358.281, -1.4, 6.0, 974.601, 45.14, -4.2, 4.0, -0.6, 7885.5393, -2908.9381, 47.98, _GLF_IDENTITY(869.713, min(869.713, 869.713)), -8.2)) : mat4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))))))))) + mat4(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(62445u))), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) - mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) - 0.0))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))) - mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), 1, _GLF_struct_11(mat3x2(1.0), 1, ivec2(1), bvec4(true), mat4x2(1.0), _GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))) >> uvec3(0u, 0u, 0u))), _GLF_struct_12(ivec3(1), 1u), ivec4(1), vec3(1.0), vec3(1.0)), _GLF_struct_15(true, bvec3(true), _GLF_struct_14(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), bvec4(true), ivec4(1), bvec4(true), uvec2(1u), mat2x4(1.0)), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_46.subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, (_GLF_struct_replacement_6.subgroup_size) / 1u), (_GLF_struct_replacement_46.subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, (_GLF_struct_replacement_6.subgroup_size) / 1u)) << 0u) + ((_GLF_struct_replacement_26.subgroup_local_id + 1) % _GLF_struct_replacement_6.subgroup_size), _GLF_IDENTITY(uint(uvec3(workgroup_base + _GLF_struct_replacement_46.subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, (_GLF_struct_replacement_6.subgroup_size) / 1u) + ((_GLF_struct_replacement_26.subgroup_local_id + 1) % _GLF_struct_replacement_6.subgroup_size), 1u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY((uint(6u)) | 0u, ((uint(6u)) | 0u) >> 0u)))))), (uint(uvec3(workgroup_base + _GLF_struct_replacement_46.subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, clamp(_GLF_struct_replacement_6.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, max(_GLF_struct_replacement_6.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, ~ (~ (_GLF_struct_replacement_6.subgroup_size))))), min(_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, 1u * (_GLF_struct_replacement_6.subgroup_size)), _GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, min(_GLF_struct_replacement_6.subgroup_size, _GLF_struct_replacement_6.subgroup_size))) ^ 0u))), _GLF_struct_replacement_6.subgroup_size))) / 1u) + (_GLF_IDENTITY((_GLF_struct_replacement_26.subgroup_local_id + 1), (_GLF_IDENTITY((_GLF_struct_replacement_26.subgroup_local_id + 1), min(_GLF_IDENTITY((_GLF_struct_replacement_26.subgroup_local_id + 1), 0u + ((_GLF_struct_replacement_26.subgroup_local_id + 1))), _GLF_IDENTITY((_GLF_struct_replacement_26.subgroup_local_id + 1), (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, min(num_workgroup, _GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup))))) : (_GLF_struct_replacement_26.subgroup_local_id + 1)))))) << _GLF_IDENTITY(0u, ~ (~ (0u)))) % _GLF_struct_replacement_6.subgroup_size), 1u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | 0u)))))) * 1u))), vec3(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-164.436), _GLF_FUZZED(-4.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) / vec2(1.0, 1.0)).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint read = atomicLoad(buf[_GLF_struct_replacement_25.virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[_GLF_struct_replacement_16._f4.next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), float(_GLF_FUZZED(-71.46)), bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0, clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0, ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0) / 1.0), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0, max((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_struct_replacement_26.subgroup_local_id + 1 < _GLF_struct_replacement_6.subgroup_size)
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     atomicStore(checker[_GLF_struct_replacement_25.virtual_gid], read, 4, 64, 4);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     subgroupAll(false);
    }
   else
    {
     atomicStore(buf[_GLF_struct_replacement_25.virtual_gid], read, 4, 64, 4);
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))).y)) && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, false))), bool(bvec4(! (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, false))), true, false, false))))))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     do
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          break;
         return;
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           break;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           break;
          }
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          continue;
         return;
        }
       if(_GLF_DEAD(false))
        continue;
       subgroupAll(true);
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec4((false), false, false, false))))))
        {
         if(_GLF_DEAD(false))
          continue;
         continue;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         continue;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && true))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (! (! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 1.0), vec3(vec4(vec3(injectionSwitch.x, 1.0, 1.0), abs(1.0)))))) > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 1.0), vec3(vec4(vec3(injectionSwitch.x, 1.0, 1.0), abs(1.0)))))) > injectionSwitch.y)))), ! (! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 1.0), vec3(vec4(vec3(injectionSwitch.x, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0, 1.0)), 1.0), abs(1.0)))))) > injectionSwitch.y)))))))))))), ! (! (! (! (! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 1.0), vec3(vec4(vec3(injectionSwitch.x, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), abs(1.0)))))) > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 1.0), vec3(vec4(vec3(injectionSwitch.x, 1.0, 1.0), abs(1.0)))))) > injectionSwitch.y)))), ! (! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 1.0), vec3(vec4(vec3(injectionSwitch.x, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0, 1.0)), 1.0), abs(1.0)))))) > injectionSwitch.y)))))))))))))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)), false || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))) || false))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch))), vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch))))))).y)), true, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), false))))))))))))), true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(7709.3306), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], max((mat2(1.0) * (injectionSwitch))[1], (mat2(1.0) * (injectionSwitch))[1]))), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-5.0)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))).y), true, false)))), true, false, false))), true), true)), true))))), _GLF_IDENTITY(_GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))), true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))), true), true)), true)))))), ! (! (false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true, false, false))), true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))), true), true)), true))))))))), ! (! _GLF_IDENTITY((false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true), (injectionSwitch.x > injectionSwitch.y)), true, false, false))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))), true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))), true), true)), true))))))), false || ((false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(75993, 69997))))).y)), true, false, false))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))), true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))), true), true)), true)))))))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
}
