#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 ivec2 _f0;
 uvec2 _f1;
 uvec3 _f2;
 mat2x3 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_3 {
 mat4x2 _f0;
 ivec3 _f1;
 mat2 _f2;
 int _f3;
 ivec2 _f4;
 mat2x4 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_5 {
 mat3 _f0;
 _GLF_struct_3 _f1;
 uvec2 _f2;
 _GLF_struct_4 _f3;
} ;

struct _GLF_struct_1 {
 uvec4 _f0;
} ;

struct _GLF_struct_0 {
 mat4x3 _f0;
 ivec3 _f1;
 uint subgroup_local_id;
} ;

struct _GLF_struct_2 {
 bool _f0;
 _GLF_struct_0 _f1;
 float _f2;
 _GLF_struct_1 _f3;
} ;

struct _GLF_struct_6 {
 mat4 _f0;
 _GLF_struct_2 _f1;
 mat4x3 _f2;
 _GLF_struct_5 _f3;
 vec4 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(mat4(1.0), _GLF_struct_2(true, _GLF_struct_0(mat4x3(1.0), ivec3(1), gl_SubgroupInvocationID), 1.0, _GLF_struct_1(uvec4(1u))), mat4x3(1.0), _GLF_struct_5(mat3(1.0), _GLF_struct_3(mat4x2(1.0), ivec3(1), mat2(1.0), 1, ivec2(1), mat2x4(1.0), uvec4(1u)), uvec2(1u), _GLF_struct_4(ivec2(1), uvec2(1u), uvec3(1u), mat2x3(1.0), ivec3(1))), vec4(1.0));
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(4), int(4)))))
          {
           case 52:
           while(((mat4(0.5, 9317.4499, -9.2, -13.29, -2552.8340, 8241.3846, 1794.4172, -65.01, 513.839, -8232.9373, 5.4, -97.52, -3.5, -4.8, 96.43, -1981.6677) != mat4(142.665, -1.7, -1.0, 26.30, -40.28, 598.307, -460.966, 8.6, -8.4, 4.7, 8.9, -8.1, 2.2, 190.327, -7817.0650, -165.495)) == true))
            {
             exp2(injectionSwitch);
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               (1.0 + mat2x4(3819.6565, 437.490, 6442.5179, 8.4, -61.79, -0.4, 0.0, 0.4));
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              barrier();
             bvec4(true, notEqual(uvec2(86004u, 103096u), uvec2(169889u, 181015u)), false);
             uvec2 _GLF_SWITCH_1_0v;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               break;
              }
             if(_GLF_DEAD(false))
              barrier();
             ;
             vec4 _GLF_SWITCH_1_1v[20], _GLF_SWITCH_1_2v;
             mat2 _GLF_SWITCH_1_3v, _GLF_SWITCH_1_4v;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(false))
              barrier();
             uint _GLF_SWITCH_1_5v;
            }
           if(_GLF_DEAD(false))
            barrier();
           case 59:
           for(ivec2 _GLF_SWITCH_1_6v[55]; (! true); (mat4x3(-0.3, 5.5, 812.165, -54.35, 4.2, 5.4, -3.7, -5.2, 9724.0236, 312.141, 9769.0946, -565.536) * mat3x4(2.2, -87.27, 6586.1925, -886.278, -2.2, -1382.1463, -3082.0168, 264.418, 292.071, -0.9, -5.5, -961.359)))
            {
             bvec3(false, false, true);
             mat2(17.82, 7.3, -490.489, -8.5);
            }
           case 0:
           case 68:
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             barrier();
            }
           case 29:
           case 9:
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             continue;
             if(_GLF_DEAD(false))
              barrier();
            }
           case 62:
           if(_GLF_DEAD(false))
            return;
           case 24:
           case 49:
           case 91:
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              continue;
            }
           if(_GLF_DEAD(false))
            barrier();
           break;
           case 28:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           {
            if(_GLF_DEAD(false))
             return;
            uvec2 _GLF_SWITCH_1_7v[40], _GLF_SWITCH_1_8v, _GLF_SWITCH_1_9v[57];
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               barrier();
              break;
             }
            mat2x4(mat2x3(-7.0, 186.543, -4.2, -9.3, -0.3, -435.467));
            mat3 _GLF_SWITCH_1_10v, _GLF_SWITCH_1_11v[83];
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            -3388;
            float _GLF_SWITCH_1_12v[17];
            injectionSwitch;
            if(_GLF_DEAD(false))
             {
              switch(_GLF_SWITCH(0))
               {
                case 72:
                vec4(-4.9, -382.629, -8.5, 3.2);
                case 85:
                mat4x3(-6.5, -48.46, -597.920, -1.9, 983.611, -79.95, 2928.0046, -8.7, 8900.9556, -2841.8312, -5995.9491, -352.829);
                case 0:
                case 19:
                case 91:
                if(_GLF_DEAD(false))
                 barrier();
                case 99:
                case 9:
                return;
                break;
                default:
                1;
               }
             }
            mat2 _GLF_SWITCH_1_13v[43], _GLF_SWITCH_1_14v;
           }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           default:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           1;
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             barrier();
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
        {
         return;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              barrier();
             barrier();
            }
           return;
          }
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   switch(_GLF_SWITCH(0))
    {
     case 96:
     while(bvec2(true, false)[0])
      {
       ;
       {
        ;
        if((tanh(vec4(511.163, -4.2, 6.1, 950.357)) != vec4(-3.1, 40.00, -2.6, -876.347)))
         {
          uvec2 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v;
          mat3x2(-898.898, -544.338, 2.4, 97.54, -32.88, -894.138);
          mat4x3(mat2x3(-9679.0849, 55.60, 6.8, -5177.6503, 3.2, -3518.9523));
          mat4x3 _GLF_SWITCH_2_3v[22], _GLF_SWITCH_2_4v[16], _GLF_SWITCH_2_5v[22];
          bvec2(true, true);
          ivec2(31623, 10663);
          mat4x3(59.63, -585.124, -5.0, -64.20, -3.6, -7596.5034, 5565.0731, 6.3, 2572.7669, -3.4, -15.39, 5117.2592);
          (mat4x2(9.4, 6.0, 3105.3469, -7.2, 51.29, -5152.1818, 26.66, -6.6) * mat2x4(-6.8, 861.861, -9.2, -5979.0831, 7.3, 81.23, -5.2, 9.4));
         }
        else
         {
         }
        ;
        (58959 + ivec4(-48907, 34099, -14999, -65177));
       }
       ;
       for(       transpose(mat2x4(17.82, -7908.6299, 8158.9504, -71.02, 2807.8181, -5.0, -824.420, -27.36));
 true; uvec3(168688u, 76364u, 164855u))
        {
         {
          ;
          vec3(-911.508, -3677.9214, 97.42);
          bvec3(true, true, true).rbg;
          bvec2(false, true);
          bvec2(false, true);
         }
         ;
         bvec4(true, false, true, true);
         while(true)
          {
           ivec4(54625, 56396, 56809, -70789);
           mat4x2 _GLF_SWITCH_2_6v;
          }
         min(uvec4(186854u, 8590u, 107307u, 98641u), ((subgroup_id & workgroup_size)));
         for(         mat2(2.3, 931.674, 8520.9509, -8.7);
 false; bvec2(true, true))
          {
           ;
           (mat4x3(186.156, -9752.5693, -557.883, 1530.3986, 2962.0113, 663.959, -66.81, -133.142, -703.331, 4.9, 472.888, 774.157) - (mat4x3(-308.782, 4.1, 1.1, 79.52, 29.47, 45.03, 632.418, 884.957, 22.08, -63.05, -0.2, 61.56) + -4257.8606));
           (uvec4(99435u, 53414u, 96889u, 35973u) , mat4x2(47.60, -6.2, 303.660, 4.2, -568.129, 87.10, 663.840, 0.9));
          }
        }
      }
     case 45:
     {
     }
     case 0:
     case 47:
     case 8:
     case 26:
     case 80:
     case 90:
     if(_GLF_DEAD(false))
      barrier();
     case 53:
     case 10:
     if(_GLF_DEAD(false))
      return;
     case 81:
     barrier();
     break;
     case 85:
     bvec4 _GLF_SWITCH_2_7v, _GLF_SWITCH_2_8v[43], _GLF_SWITCH_2_9v;
     default:
     1;
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       break;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           barrier();
          }
         if(_GLF_DEAD(false))
          continue;
         continue;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      break;
     do
      {
       barrier();
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           for(int _injected_loop_counter = (0 & 22698); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(93547))))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
              barrier();
             if(_GLF_DEAD(false))
              continue;
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
    }
   else
    {
     switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(1), int(1)))))
      {
       case 75:
       smoothstep(-4955.8687, -8719.8752, max(vec4(8.2, -95.11, -3797.0529, 2.8), 8.2));
       case 6:
       ivec3 _GLF_SWITCH_2_0v;
       case 0:
       case 35:
       case 90:
       case 18:
       case 55:
       case 91:
       if(_GLF_DEAD(false))
        return;
       break;
       case 88:
       mat2x4(mat4x3(-642.206, -5.7, 1.2, -4.0, 21.52, -35.04, 5.5, 496.558, 8731.7003, 2.0, -64.32, 4.4));
       case 2:
       if((mat3x2(-295.077, 9942.4770, 3.8, 9.7, -42.27, -30.38) != mat3x2(-560.309, 8.1, -6.5, -300.194, 590.850, 4.7)))
        {
         ;
         while(true)
          {
           ;
           while(true)
            {
             (-90390 * _GLF_SWITCH_2_0v);
             atomicCompSwap(workgroup_size, workgroup_base, workgroup_base);
             mat3x4(2.1, -1444.8279, 312.397, 8.2, -7.1, -6.2, -348.903, 381.172, 8009.4684, 78.59, 5785.3746, 1.6);
             ;
            }
           {
            mat4x2 _GLF_SWITCH_2_1v[26], _GLF_SWITCH_2_2v[51];
            (ivec2(-7811, -63402) / ivec2(27280, 20620));
            -4282.5822;
            uvec3(74348u, 143195u, 35748u);
            mat2x3 _GLF_SWITCH_2_3v[87];
            mat4x3 _GLF_SWITCH_2_4v;
            ;
           }
           mat3x2 _GLF_SWITCH_2_5v[51], _GLF_SWITCH_2_6v[79], _GLF_SWITCH_2_7v[78];
           while(true)
            {
            }
          }
         {
          for(uvec2 _GLF_SWITCH_2_8v, _GLF_SWITCH_2_9v, _GLF_SWITCH_2_10v; ((89236 + -24264) < 99854); mat4x2((- mat2x4(135.531, 2.5, 29.18, -7.1, -3.3, -8.4, -1209.9812, 1427.1693))))
           {
           }
          {
           bitfieldReverse(uvec2(163096u, 71288u));
           bvec2 _GLF_SWITCH_2_11v[17], _GLF_SWITCH_2_12v;
           (mat3(-8788.5108, 3717.5655, -9.1, 182.893, 846.784, -8500.2895, 83.15, -118.205, -7.6));
           ;
          }
          for(          mat3x2(5.5, 2.8, -941.951, -35.05, -550.472, -254.957);
 (mat4(4267.2966, -9.6, -3.2, 3.8, 4715.5198, -52.17, -2025.9196, 5.0, 593.524, 1.5, 5.1, -5619.8244, 1016.2754, -38.97, -1.6, 0.7) == mat4(-2.6, 2.0, -7872.9380, -47.22, 51.06, 3.0, 882.430, 186.114, -9.5, -0.1, -0.3, -0.6, 604.527, -2.1, -9.0, -9323.6142)); not(bvec3(true, false, false)))
           {
            (-80454 % ivec3(-14463, -3587, -24193));
            -87915;
            uint _GLF_SWITCH_2_13v[56];
            vec4 _GLF_SWITCH_2_14v;
            mat2x3(-929.415, -1.7, 6944.1224, -275.695, -1.1, 3402.6956);
            mat3(-80.48, -1315.0651, -180.945, -4248.9712, 5.8, -9317.4076, 8.3, -70.22, -563.685);
            bitfieldExtract(workgroup_base, 18082, 85458);
           }
          uvec2 _GLF_SWITCH_2_15v, _GLF_SWITCH_2_16v, _GLF_SWITCH_2_17v;
          do
           {
            ;
            uvec3 _GLF_SWITCH_2_18v, _GLF_SWITCH_2_19v, _GLF_SWITCH_2_20v[57];
            (-25558 & (+ ivec4(69093, -65617, 5881, -84164)));
            ;
            (mat4x2(-7.2, 968.515, 76.26, 92.11, 2.9, -77.15, -866.481, -73.12) * mat4(7183.9878, -7.5, 51.17, 954.931, 320.566, 1805.5512, 364.289, -6031.3924, -6.4, 23.22, -2.3, -1773.6448, 5.8, -261.605, -1.8, 518.226));
            mat2x3(-384.916, 44.58, 5.9, -5040.3223, -1498.2945, 2.6);
            int(true);
            vec3(-1.9, -2.9, 3129.9220);
            _GLF_SWITCH_2_0v;
           }
          while((-82446 > findMSB(workgroup_size)));
          mat2x3 _GLF_SWITCH_2_21v;
          if(false)
           {
            mat2x4 _GLF_SWITCH_2_22v;
            uint _GLF_SWITCH_2_23v[29];
            mat3x2(mat2x4(2.9, 252.106, 8443.4003, 85.86, 35.43, 75.10, 875.149, -80.10));
            (mat3x2(-3504.9551, -0.5, -8.9, 44.19, 3.2, -3.9) + mat3x2(-586.691, -8.6, -5.1, 9148.7922, 767.037, 41.64));
           }
          else
           {
            (_GLF_SWITCH_2_15v ++);
            bool _GLF_SWITCH_2_24v, _GLF_SWITCH_2_25v;
           }
          (-38488 | _GLF_SWITCH_2_0v);
         }
         mat4x2(-249.738, 3.3, -6473.2737, -564.222, -13.99, 3.5, -6.6, 8.6);
         do
          {
           mat4(-8.8, -3797.2114, -2064.3989, 442.381, -211.536, -60.45, -6.3, -70.00, -3.8, -8053.4386, -3945.7466, 9.5, -88.90, 10.02, -3.5, -61.61);
           for(           sign(349.547);
 false; mat2x4(246.157, 5.9, -570.665, 9.6, -9524.9424, 0.8, 4.6, -17.63))
            {
             mat2x3 _GLF_SWITCH_2_26v[96];
             uint _GLF_SWITCH_2_27v, _GLF_SWITCH_2_28v;
             bvec2(false, false);
             vec2 _GLF_SWITCH_2_29v, _GLF_SWITCH_2_30v[40], _GLF_SWITCH_2_31v;
             equal(_GLF_SWITCH_2_29v, trunc(vec2(-170.551, 4763.0406)));
             vec4(2.7, -7.1, 806.537, 976.900);
             vec4(4526.8984, -1240.0157, -3.4, -490.830);
            }
           93063;
           if(any(bvec3(true, true, false)))
            {
             (injectionSwitch , mat3x4(vec4(-84.24, 7.6, 8556.7069, 615.733), vec4(952.638, 4559.6963, -12.47, -9.4), vec4(880.554, 131.466, -8.5, -6.2)));
             unpackHalf2x16(workgroup_id);
             mat4x2 _GLF_SWITCH_2_32v, _GLF_SWITCH_2_33v[89], _GLF_SWITCH_2_34v;
             (-2834.9434 + mat2x3(-5.9, 0.8, -5.1, 46.12, 265.178, 4.6));
             uvec2(25092u, 100280u);
             ;
            }
           else
            {
             true;
             mat4x3 _GLF_SWITCH_2_35v, _GLF_SWITCH_2_36v[55];
             mat3x2(-341.420, -2445.3765, 850.876, 184.382, 788.726, 37.91);
             mat3x4 _GLF_SWITCH_2_37v, _GLF_SWITCH_2_38v[90], _GLF_SWITCH_2_39v;
             (_GLF_SWITCH_2_0v --);
             mat2x3 _GLF_SWITCH_2_40v, _GLF_SWITCH_2_41v, _GLF_SWITCH_2_42v[6];
             _GLF_SWITCH_2_39v;
             false;
            }
           for(mat4x3 _GLF_SWITCH_2_43v, _GLF_SWITCH_2_44v, _GLF_SWITCH_2_45v; ((uvec2(147272u, 166020u) != uvec2(143639u, 146412u)) ^^ false); mat3x2(-6642.5082, 9.9, 72.59, 1.4, -9.4, -3.4))
            {
             -79293;
             ;
             (uvec4(3721u, 176191u, 138975u, 192861u) - uvec4(135716u, 41619u, 126948u, 50515u));
            }
           if(true)
            {
             vec4(-1625.2823, 69.15, -4.5, -5578.1175);
             mat3x2(3.7, -865.938, -3.9, -7.2, 403.307, -423.988);
            }
           else
            {
             (_GLF_SWITCH_2_0v.r / ivec4(-51575, -11832, -87864, 96004));
             mat2 _GLF_SWITCH_2_46v[35], _GLF_SWITCH_2_47v;
             bvec2(true, true);
             uvec2 _GLF_SWITCH_2_48v[37], _GLF_SWITCH_2_49v;
             ;
            }
           {
            mat2 _GLF_SWITCH_2_50v;
            float _GLF_SWITCH_2_51v[54];
            uvec4(workgroup_base, uvec2(9644u, 74511u), subgroup_size);
            mat4x3(-4.5, -13.43, -1698.9131, 3.8, -42.58, 4480.3034, 214.178, 58.49, 41.54, 2.9, -2.8, -772.464);
            ivec2 _GLF_SWITCH_2_52v, _GLF_SWITCH_2_53v, _GLF_SWITCH_2_54v;
            (+ ivec4(-76135, 58730, 45233, -97070));
            uvec4 _GLF_SWITCH_2_55v, _GLF_SWITCH_2_56v, _GLF_SWITCH_2_57v;
            ;
           }
           if((-7.8 != vec3(5.1, -136.778, 3.7).z))
            {
            }
           else
            {
             ivec2(50494, 19372);
             ivec2(-76286, -28299);
             transpose(mat4(-6.2, -9.3, -95.56, -5.8, -428.029, 7027.3247, -61.62, -9.9, -15.98, 3502.7552, -34.35, -0.0, -1994.6381, 8.5, 568.103, 950.425));
             float _GLF_SWITCH_2_58v[85], _GLF_SWITCH_2_59v, _GLF_SWITCH_2_60v;
             uvec2 _GLF_SWITCH_2_61v, _GLF_SWITCH_2_62v[33], _GLF_SWITCH_2_63v[41];
             mat2x4(-2.7, 9.2, 130.703, -5270.4507, 853.030, 4036.0152, -4182.4318, -1.7);
             mat2x4 _GLF_SWITCH_2_64v[92];
             mix(bvec4(true, true, false, true), bvec4(false, false, true, true), bvec4(true, true, true, true));
             float _GLF_SWITCH_2_65v, _GLF_SWITCH_2_66v;
            }
          }
         while((num_workgroup >= subgroup_size));
        }
       default:
       1;
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   switch(_GLF_SWITCH(_GLF_IDENTITY(0, (0) / 1)))
    {
     case 0:
     case 75:
     case 12:
     case 57:
     if(_GLF_DEAD(false))
      barrier();
     case 42:
     case 85:
     case 83:
     case 31:
     case 37:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     case 41:
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     break;
     default:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     1;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       break;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      continue;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_6._f1._f1.subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_struct_replacement_6._f1._f1.subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     switch(_GLF_SWITCH(0))
      {
       case 96:
       outerProduct(vec3(-76.68, 0.8, -89.83), vec3(9.3, -67.29, -9.6));
       case 53:
       if((bvec2(true, false) != bvec2(true, true)))
        {
         mat4x3(8578.9756, 0.4, -4.4, 66.11, -87.43, -8.2, 5709.6737, 20.11, -6.1, 9.0, 463.890, 34.53);
         ;
         {
          ;
          vec3 _GLF_SWITCH_2_0v;
          if((true))
           {
            mat2 _GLF_SWITCH_2_1v;
            _GLF_SWITCH_2_1v;
            uvec3 _GLF_SWITCH_2_2v, _GLF_SWITCH_2_3v, _GLF_SWITCH_2_4v[61];
            (mat2x3(-32.09, -6.6, -21.91, 99.96, -394.064, -2.2) / mat2x3(8380.7750, -8557.7367, 384.413, 5869.1534, -702.073, 89.80));
           }
          while(true)
           {
           }
          if(false)
           {
            float _GLF_SWITCH_2_5v[12], _GLF_SWITCH_2_6v;
            uint _GLF_SWITCH_2_7v;
            ;
            mat2(6.2, 6.3, 5.5, 8.6);
           }
          for(uvec4 _GLF_SWITCH_2_8v, _GLF_SWITCH_2_9v[33], _GLF_SWITCH_2_10v; false; ivec2(-27588, 22762))
           {
            bvec3(false, true, true);
            mat3x2(17.99, -7.9, -791.767, 206.280, -8.4, -87.54);
            num_workgroup;
            ;
            bool _GLF_SWITCH_2_11v[62], _GLF_SWITCH_2_12v, _GLF_SWITCH_2_13v;
            _GLF_SWITCH_2_12v;
            ivec3(-37441, 19149, -4488).rbrb;
            mat2(56.83, -581.382, 918.948, -7.4);
            mat3(73.23, -9983.0905, -57.80, -4545.5505, -2988.8800, 9.0, -4.4, 248.195, -813.521);
           }
          mat4 _GLF_SWITCH_2_14v;
         }
         ;
         mat2x3 _GLF_SWITCH_2_15v, _GLF_SWITCH_2_16v, _GLF_SWITCH_2_17v;
         if(true)
          {
          }
         mat4(-24.31, 426.856, 74.58, 74.74, 4077.4324, 86.77, -3.7, 8421.1794, 28.65, -57.91, 5.2, 1412.2576, -9.2, 3.8, -696.522, -7846.8709);
         while((mat3x2(-3.9, 75.53, -863.218, -0.9, -4.5, 1362.3146) == mat3x2(3.5, 0.3, -49.08, 9.5, 67.11, 7.3)))
          {
           while(all(bvec3(true, true, false)))
            {
             (-38970 / ivec3(84495, 72518, 91016));
             ivec4 _GLF_SWITCH_2_18v, _GLF_SWITCH_2_19v, _GLF_SWITCH_2_20v[39];
             cross(vec3(-32.27, 364.812, 28.07), vec3(7281.9100, -76.32, -6627.4071));
            }
           bitfieldExtract(11740, (uvec2(139155u, 131973u) , -53177), 59622);
           while((uvec3(96225u, 3207u, 74239u) == uvec3(134921u, 72265u, 128451u)))
            {
             (- mat3x2(684.116, 63.97, -2.3, -4136.4414, -623.531, 942.137));
             13317;
             ;
             -8690;
             (distance(vec2(-54.78, -25.00), ldexp(injectionSwitch, ivec2(-88035, 58586))) + mat4x3(9.5, -168.530, -2.8, 836.129, 1849.6532, -9477.0699, -205.662, -3.0, -5921.5557, 2.5, -99.83, -453.501));
            }
           vec2 _GLF_SWITCH_2_21v[39], _GLF_SWITCH_2_22v[27], _GLF_SWITCH_2_23v;
           equal(vec4(96.08, 3.7, -77.03, 3562.9566), vec4(-0.0, 9.4, -3405.1853, -4.2));
           mat2(2.9, -7.6, 542.638, -11.75);
           mat2x4(uintBitsToFloat(virtual_gid), abs(80.09), 0.4, 94.76, 90.86, -9.2, -52.77, 141.301);
          }
         {
          {
           -11848;
           workgroup_base;
           mat3x4 _GLF_SWITCH_2_24v;
           uvec4 _GLF_SWITCH_2_25v;
           bvec4(true, true, false, true);
           vec4(0.3, 127.236, 324.603, 0.6);
           mat3(-5117.1522, 16.03, -93.98, 5.5, 6.7, 425.176, 2967.5564, -760.050, 6.5);
           bvec3 _GLF_SWITCH_2_26v, _GLF_SWITCH_2_27v, _GLF_SWITCH_2_28v;
           int _GLF_SWITCH_2_29v, _GLF_SWITCH_2_30v, _GLF_SWITCH_2_31v;
          }
          vec4(-1239.1716, -30.67, -2496.7475, -6.3);
          uvec3(23357u, 63226u, 81245u);
          if((ivec4(22060, 86251, -68641, 98963) == ivec4(92759, -51864, -58049, -51379)))
           {
            mat4x2(-33.88, -951.084, 8665.0562, 86.54, 82.48, -0.2, -52.21, -3934.8542);
            mat4 _GLF_SWITCH_2_32v[79], _GLF_SWITCH_2_33v;
            workgroup_id;
           }
         }
        }
       case 0:
       case 67:
       if(_GLF_DEAD(false))
        barrier();
       case 80:
       case 82:
       case 37:
       return;
       break;
       case 62:
       mat3x2 _GLF_SWITCH_2_34v[84], _GLF_SWITCH_2_35v;
       case 1:
       ;
       default:
       1;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   switch(_GLF_SWITCH(0))
    {
     case 54:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     {
      uvec2(120754u, 80686u);
      if(_GLF_DEAD(false))
       barrier();
      (mat3(-9.4, -6.5, 5.0, 579.609, 9382.1335, -55.07, 5121.3923, -37.46, -0.3) * mat2x3(mat2x4(-3.0, 7.2, 8.2, 1886.6837, -9.3, -659.266, 6.1, -383.775)));
      if(_GLF_DEAD(false))
       {
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          return;
          if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
           return;
          if(_GLF_DEAD(false))
           barrier();
         }
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
        if(_GLF_DEAD(false))
         return;
        barrier();
       }
      if(_GLF_DEAD(false))
       return;
      mat4(-6.8, 8001.0115, 582.750, 654.824, 34.22, 2.5, 710.213, 700.352, -3.4, -2088.5793, 2.3, 9614.1275, 3728.9036, 74.86, 7.1, 131.747);
      if(_GLF_DEAD(false))
       return;
      if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))))
       {
        switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(3), int(3)))))
         {
          case 7:
          findMSB(uvec4(23033u, 630u, 74001u, 196944u));
          case 13:
          (-9.7 - mat2x4(mat3x2(-0.2, 83.02, 2.8, -8.6, 50.99, 4.5)));
          case 0:
          case 18:
          if(_GLF_DEAD(false))
           return;
          case 24:
          case 98:
          case 31:
          case 92:
          return;
          case 61:
          case 41:
          if(_GLF_DEAD(false))
           barrier();
          break;
          case 87:
          if(true)
           {
           }
          else
           {
            ;
            ;
            (mat3x2(-0.4, -2606.6765, -352.000, -6.2, 2.1, 219.204) * mat4x3(92.35, -7.7, 8.0, 667.537, -47.39, 0.4, 1.6, 7.0, 58.04, -8.4, -76.94, 8.4));
           }
          case 59:
          {
           (- vec4(-8610.5346, 3.7, -397.155, -2015.1525));
           bvec4(true, false, false, true);
           ;
           mat3x2 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v[50], _GLF_SWITCH_2_2v;
           bvec2 _GLF_SWITCH_2_3v, _GLF_SWITCH_2_4v;
           ivec4(-15067, -6874, -94304, 77713);
           mat3x4(47.43, -189.277, 7570.7191, -2211.1746, 4.3, 1636.6192, -9.8, 2.2, -8.0, 519.842, -438.602, -3899.7188);
           bvec4(false, true, true, false);
           _GLF_SWITCH_2_4v;
          }
          default:
          1;
         }
       }
      if(_GLF_WRAPPED_IF_FALSE(false))
       {
        if(_GLF_DEAD(false))
         barrier();
       }
      else
       {
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         {
          do
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            barrier();
           }
          while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
         }
        if(_GLF_DEAD(false))
         barrier();
       }
      if(_GLF_DEAD(false))
       barrier();
      if(_GLF_DEAD(false))
       barrier();
      if(_GLF_WRAPPED_IF_FALSE(false))
       {
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         return;
       }
      else
       {
        if(_GLF_WRAPPED_IF_TRUE(true))
         {
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            return;
           }
         }
        else
         {
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
         }
        if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          return;
         }
        do
         {
          switch(_GLF_SWITCH(_GLF_IDENTITY(0, 0 ^ (0))))
           {
            case 86:
            sin(injectionSwitch);
            case 75:
            vec4 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
            case 0:
            case 79:
            case 47:
            case 70:
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             continue;
            case 5:
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              return;
             }
            break;
            case 37:
            mat4x3(499.509, 3525.9039, 7.2, 215.382, 81.98, -6798.0464, 9.2, -595.831, -63.36, -2.7, 0.9, 677.533);
            case 34:
            equal((ivec3(59862, -42019, -23455) % -15935), clamp(ivec3(-43501, 36486, 965), -18785, (false ? 33847 : -79734)));
            default:
            1;
           }
         }
        while(_GLF_WRAPPED_LOOP(false));
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         barrier();
       }
      if(true)
       {
        switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
         {
          case 3:
          mat4(-0.6, -888.961, 1.2, 0.6, 5.6, 88.55, 9.5, 530.981, -31.50, -3.5, -2.0, 4246.3511, -29.22, -8.2, 5.3, 21.86);
          case 0:
          uint _GLF_SWITCH_0_0v[94], _GLF_SWITCH_0_1v[82], _GLF_SWITCH_0_2v[49];
          if(_GLF_DEAD(false))
           return;
          if(((distance(vec4(-6.1, -1864.0675, 5597.3832, -725.328), vec4(-898.002, -5.6, 6842.3110, -1.4)) + -3.8) == -430.347))
           {
            switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
             {
              case 0:
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              case 76:
              case 53:
              case 9:
              case 3:
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(false))
               {
                switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                 {
                  case 0:
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                    if(_GLF_WRAPPED_IF_FALSE(false))
                     {
                      switch(_GLF_SWITCH(0))
                       {
                        case 57:
                        vec4(2.9, 94.01, -584.446, 718.969);
                        case 0:
                        case 80:
                        if(_GLF_DEAD(false))
                         barrier();
                        case 19:
                        case 89:
                        case 7:
                        if(_GLF_DEAD(false))
                         barrier();
                        break;
                        default:
                        1;
                       }
                     }
                    else
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       return;
                      return;
                     }
                   }
                  barrier();
                  case 98:
                  case 13:
                  case 54:
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   return;
                  break;
                  case 59:
                  ;
                  default:
                  1;
                 }
               }
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 return;
                barrier();
               }
              if(_GLF_DEAD(false))
               return;
              break;
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              default:
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                barrier();
               }
              if(_GLF_DEAD(false))
               return;
              1;
             }
            if(_GLF_DEAD(false))
             barrier();
           }
          case 26:
          case 24:
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               return;
              barrier();
             }
            barrier();
           }
          case 97:
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
             barrier();
            return;
           }
          if(isinf(292.504))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             return;
            mat3(4318.8995, 578.317, -2082.6229, 57.78, -23.68, -0.6, 674.315, -8.8, -3577.5778);
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             return;
            mat2 _GLF_SWITCH_0_3v;
            ;
            clamp(uvec3(106645u, 54884u, 163919u), mix((workgroup_id - next_virtual_gid), num_workgroup, true), next_virtual_gid);
            ivec3(76947, -96816, 80109);
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            if(_GLF_DEAD(false))
             barrier();
           }
          else
           {
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                barrier();
               }
              barrier();
              if(_GLF_DEAD(false))
               return;
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               barrier();
              return;
             }
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              return;
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             {
              switch(_GLF_SWITCH(0))
               {
                case 0:
                case 88:
                case 98:
                case 58:
                switch(_GLF_SWITCH(0))
                 {
                  case 81:
                  mat2(-8650.5154, 779.821, 1441.9724, -429.462);
                  case 0:
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     return;
                    return;
                   }
                  if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                   return;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  case 60:
                  case 39:
                  if(_GLF_DEAD(false))
                   barrier();
                  for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    barrier();
                    if(_GLF_DEAD(false))
                     break;
                   }
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                  break;
                  case 75:
                  faceforward(acos(vec4(769.620, 148.398, -1460.1951, 866.408)), vec4(9716.9136, -4.5, 4266.9381, -0.2), asinh(vec4(-4.0, 896.713, 1586.0227, -3.4)));
                  default:
                  1;
                 }
                break;
                case 74:
                ivec4(-40042, -87708, 12832, 23454);
                case 19:
                mat2x4 _GLF_SWITCH_2_0v[26];
                default:
                1;
               }
             }
            if(_GLF_DEAD(false))
             barrier();
            notEqual(vec4(-4.9, -3.2, 1.1, 5.9), vec4(566.188, 1.3, 794.804, -6.1));
            if(_GLF_DEAD(false))
             {
              do
               {
                if(_GLF_DEAD(false))
                 barrier();
                barrier();
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(false))
                   continue;
                  barrier();
                 }
                if(_GLF_DEAD(false))
                 break;
               }
              while(_GLF_WRAPPED_LOOP(false));
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            do
             {
              bvec4(false, true, false, false).yw;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(false))
               break;
             }
            while(_GLF_WRAPPED_LOOP(false));
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             {
              switch(_GLF_SWITCH(0))
               {
                case 19:
                mat4x3(760.227, -7139.0604, -302.329, 9.0, 0.1, 6.9, -72.49, -9395.7274, -4282.2599, -7.7, -472.228, 14.54);
                case 0:
                case 1:
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                case 9:
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                barrier();
                break;
                default:
                1;
               }
             }
            uvec3 _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                return;
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               return;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              barrier();
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(false))
               barrier();
             }
            sinh(7.5);
            if(_GLF_DEAD(false))
             barrier();
            do
             {
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                return;
               }
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 return;
                if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                 barrier();
                if(_GLF_DEAD(false))
                 barrier();
                return;
               }
             }
            while(_GLF_WRAPPED_LOOP(false));
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
             {
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               return;
              barrier();
             }
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               barrier();
              return;
             }
            for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
             {
              if(_GLF_DEAD(false))
               continue;
              mat3x2(8104.1798, 62.44, -2.0, 517.909, -601.702, 27.99);
             }
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               return;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 return;
                return;
               }
              barrier();
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               barrier();
             }
            (-0.1 - mat2(258.736, -5784.2359, -425.295, 130.841));
            ivec4 _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v[16], _GLF_SWITCH_0_8v;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              return;
             }
           }
          mat2x3(6532.3660, -785.159, 80.77, 6.5, 92.41, 54.78);
          break;
          case 90:
          bvec3 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v;
          case 7:
          mat3x4(9847.7580, 297.285, -635.022, 591.250, -928.885, 931.511, 28.00, 352.798, 6.4, 5.6, -8911.8784, -9.2);
          default:
          1;
         }
       }
      else
       {
        for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
         {
          for(mat4x3 _GLF_SWITCH_0_9v[44]; (ivec4(81093, 98454, 34964, -12206) == ivec4(80887, -7203, 75018, -88278)); mat4(mat2x3(66.60, -132.450, 2.7, 3.3, -9.0, -7731.9262)))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
               {
                barrier();
               }
              else
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 barrier();
                barrier();
               }
              if(_GLF_DEAD(false))
               barrier();
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            (true ? ivec4(-74568, -45783, -69839, 99318) : ivec4(60922, 56116, 52466, -4702));
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            mat4(-2.6, -848.627, -933.082, -38.56, 70.64, -5.3, 6463.8568, -82.17, 3225.9725, 1.8, -91.64, 5.9, 93.54, -852.558, -0.2, 590.008);
            if(_GLF_DEAD(false))
             continue;
            vec2(-65.20, -0.9);
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             break;
            (-- read);
           }
         }
        (mat4x2(4.0, -1.6, 2.1, 27.20, -7408.9982, 335.279, 7.0, 1.0) / mat4x2(-56.46, -0.7, 8.4, 9922.5207, -6684.0814, -32.24, 38.36, -1775.3755));
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          return;
         }
        if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
         {
          if(_GLF_DEAD(false))
           barrier();
          return;
         }
        if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         {
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
           }
          if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
           return;
          for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            if(_GLF_DEAD(false))
             barrier();
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             barrier();
            return;
            if(_GLF_DEAD(false))
             return;
           }
          if(_GLF_DEAD(false))
           barrier();
         }
        else
         {
          switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), ~ (~ (int(0))))))))
           {
            case 27:
            mat2(mat4x3(-7882.2939, -283.438, -83.19, -5.6, 4.9, 6.4, 7.2, 908.571, -90.65, 2.6, 6.2, 9795.9811));
            case 0:
            case 7:
            case 24:
            mat2x3(9.0, -9127.3965, -8712.9641, -7652.1287, 1.7, -42.16);
            case 40:
            case 11:
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            case 86:
            if(_GLF_DEAD(false))
             return;
            case 85:
            case 13:
            if(_GLF_DEAD(false))
             barrier();
            case 57:
            if(_GLF_DEAD(false))
             return;
            case 89:
            if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            break;
            case 45:
            ;
            case 14:
            mat2x4 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v;
            default:
            1;
           }
         }
        if(_GLF_WRAPPED_IF_FALSE(false))
         {
         }
        else
         {
          if(_GLF_DEAD(false))
           barrier();
          (mat3x4(-2.5, -7.7, 0.8, -6.6, -937.971, -9325.5605, -7047.7037, 3.0, 2683.3190, -96.91, 17.24, 77.46) * vec3(-7.9, 59.20, 3.0));
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
           return;
          if(_GLF_DEAD(false))
           barrier();
         }
        if(_GLF_WRAPPED_IF_FALSE(false))
         {
         }
        else
         {
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            return;
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(false))
           return;
         }
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            switch(_GLF_SWITCH(0))
             {
              case 4:
              int _GLF_SWITCH_2_0v;
              case 28:
              (workgroup_base);
              case 0:
              case 71:
              case 99:
              case 23:
              case 80:
              case 50:
              case 44:
              if(_GLF_WRAPPED_IF_FALSE(false))
               {
               }
              else
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 return;
                switch(_GLF_SWITCH((((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) ^ 1)))
                 {
                  case 0:
                  do
                   {
                    barrier();
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                  break;
                  case 94:
                  510.657;
                  default:
                  1;
                 }
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 return;
                if(_GLF_DEAD(false))
                 barrier();
               }
              case 14:
              case 45:
              if(_GLF_DEAD(false))
               barrier();
              break;
              case 17:
              float _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v, _GLF_SWITCH_2_3v;
              case 83:
              mat3x2(-5.2, -5.6, 382.599, 806.031, 89.50, -6.1);
              default:
              1;
             }
           }
          barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            return;
           }
          if(_GLF_DEAD(false))
           barrier();
         }
        while(((6.6 >= log2(835.881)) ? true : false))
         {
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             barrier();
            continue;
           }
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             break;
            barrier();
           }
          if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
           break;
         }
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         {
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             return;
            return;
           }
          return;
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
         }
        mat2x4(-3970.0453, -357.241, -841.879, 558.978, -2.4, -4.5, 349.826, -76.98);
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         return;
        for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
         {
          for(          vec3(-8024.5283, -9.7, -5646.3052);
 true; uvec2(86474u, 111560u))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                break;
               }
              barrier();
             }
           }
         }
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         return;
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         {
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
         }
        else
         {
          if(_GLF_DEAD(false))
           barrier();
          ivec4 _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v[68], _GLF_SWITCH_0_12v;
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            return;
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             return;
            barrier();
            if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))
             barrier();
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
          bvec2(false, true).gg;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          if(_GLF_DEAD(false))
           return;
          do
           {
            if(_GLF_DEAD(false))
             barrier();
           }
          while(_GLF_WRAPPED_LOOP(false));
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            return;
           }
          bvec4 _GLF_SWITCH_0_13v;
          if(_GLF_DEAD(false))
           barrier();
          vec2(-605.960, -4225.5148);
          (- mat3x2(860.321, -8064.1255, -1452.3633, -6.5, -1.5, 289.965));
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
             }
            else
             {
              do
               {
                barrier();
                if(_GLF_DEAD(false))
                 continue;
               }
              while(_GLF_WRAPPED_LOOP(false));
             }
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(false))
             return;
           }
          (mat2x3(-54.02, -711.914, -20.95, 6.4, -59.22, -4.9));
          for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
           {
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              continue;
              if(_GLF_DEAD(false))
               continue;
             }
            if(_GLF_DEAD(false))
             continue;
            uvec4(129224u, 65474u, 90144u, 123303u);
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
         }
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
             {
              if(_GLF_DEAD(false))
               return;
              barrier();
              if(_GLF_DEAD(false))
               barrier();
             }
            return;
           }
          barrier();
          if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
           {
            if(_GLF_DEAD(false))
             return;
            barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
           }
         }
        mat3x2(3.3, -1.1, -9979.5768, -220.667, -8.8, -7111.2641);
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         return;
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
       }
      if(_GLF_DEAD(false))
       {
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              return;
             }
            return;
           }
          if(_GLF_DEAD(false))
           barrier();
          barrier();
          if(_GLF_DEAD(false))
           barrier();
         }
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
        return;
       }
      if(_GLF_DEAD(false))
       return;
      if(_GLF_WRAPPED_IF_FALSE(false))
       {
       }
      else
       {
        mat3(7.0, -1.9, -64.02, 9.7, -7685.6347, -9696.6632, -5052.4160, 5.9, -2.2);
        if(_GLF_DEAD(false))
         barrier();
       }
      mat2x4(1.9, -7.1, 5.6, -5.6, -419.179, -754.521, 8172.3574, -2536.7259);
      if(_GLF_DEAD(false))
       barrier();
      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
       {
        if(_GLF_DEAD(false))
         barrier();
        return;
       }
      if(_GLF_DEAD(false))
       barrier();
      if(_GLF_DEAD(false))
       barrier();
      (101.653 / (- mat3(-27.02, 42.80, 3.3, 624.226, 2.9, 81.66, -85.33, -68.34, -737.958)));
      {
       mat4 _GLF_SWITCH_0_14v, _GLF_SWITCH_0_15v;
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           switch(_GLF_SWITCH(0))
            {
             case 90:
             int(atomicExchange(subgroup_id, next_virtual_gid));
             case 0:
             if(_GLF_DEAD(false))
              barrier();
             mat3x4(mat2x4(6.0, -7028.0730, -17.22, -147.349, -32.45, -8.9, 619.459, 8.5));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             break;
             case 44:
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             mat3x4 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v[52], _GLF_SWITCH_1_2v[46];
             if(_GLF_DEAD(false))
              barrier();
             case 41:
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              break;
             mat3(-85.43, -1.7, 988.040, -253.528, -967.522, 450.213, -496.485, 42.62, -12.75);
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                return;
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             default:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             1;
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
            break;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         sin(vec4(-2388.7235, -604.584, 2.5, -56.47));
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        barrier();
       if(false)
        {
         float(subgroup_id);
         uvec2 _GLF_SWITCH_0_16v;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           switch(_GLF_SWITCH((0 ^ 0)))
            {
             case 0:
             case 32:
             case 52:
             case 56:
             case 93:
             case 5:
             case 20:
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             break;
             case 27:
             lessThan(vec2(-3.2, -6.1), (vec3(-7.4, -9.7, 707.094) * mat2x3(33.81, -8.9, 12.82, 3.9, 90.57, -725.396)));
             case 6:
             bool _GLF_SWITCH_2_0v[9];
             default:
             1;
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
      if(_GLF_DEAD(false))
       {
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          return;
         }
        barrier();
       }
      if(_GLF_DEAD(false))
       return;
      if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
       {
        if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
         return;
        barrier();
       }
     }
     case 48:
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     (bvec3(true, false, true).g , mat2x3(3.6, 9.9, -6511.6884, -0.9, -6519.9315, 8.6));
     case 0:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
     case 16:
     case 30:
     if(_GLF_DEAD(false))
      {
       switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
        {
         case 4:
         uaddCarry(next_virtual_gid, workgroup_base, subgroup_id);
         case 0:
         case 52:
         case 92:
         for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             break;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              continue;
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             break;
            }
          }
         case 12:
         case 56:
         case 20:
         case 81:
         if(_GLF_DEAD(false))
          barrier();
         case 32:
         if(_GLF_DEAD(false))
          return;
         break;
         case 51:
         mat4 _GLF_SWITCH_2_0v[51];
         case 10:
         while(true)
          {
           for(bvec3 _GLF_SWITCH_2_1v[59], _GLF_SWITCH_2_2v, _GLF_SWITCH_2_3v[87]; true; sin(vec4(5040.4016, 2.7, -976.801, 4966.1692)))
            {
             ivec2 _GLF_SWITCH_2_4v[32], _GLF_SWITCH_2_5v[2];
            }
           for(mat3 _GLF_SWITCH_2_6v, _GLF_SWITCH_2_7v, _GLF_SWITCH_2_8v; false; (mat4x3(mat2(-439.281, -397.189, -492.896, -3161.2792)) * mat4(669.502, -2.6, 7496.7418, 1.9, 852.256, -6857.2152, -9.2, 283.431, -27.65, -386.977, 8.5, -8.2, 8035.9885, 37.39, -9782.7253, -3.9)))
            {
            }
           uvec2 _GLF_SWITCH_2_9v[85];
          }
         default:
         1;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     case 74:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                return;
               break;
              }
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         continue;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       switch(_GLF_SWITCH(0))
        {
         case 97:
         if(true)
          {
           while((uvec4(64849u, 52346u, 137525u, 152180u) != uvec4(150092u, 98430u, 145838u, 105928u)))
            {
             bvec2 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
             mat2x3(-266.118, -6.6, 2.6, 9.1, -8.0, 482.794);
             ivec2 _GLF_SWITCH_2_2v, _GLF_SWITCH_2_3v;
            }
           for(           uvec4(subgroup_size, uvec2(59562u, 74223u), uvec2(8268u, 144638u)[1]);
 true; workgroup_id)
            {
             mat2(-7.1, 29.61, -6.7, -94.93);
             transpose(mat4x2(7676.9885, 3.9, -9688.3788, -518.047, -4.1, 78.13, 430.718, 994.064));
             mat3 _GLF_SWITCH_2_4v;
             (ivec4(36283, -34993, -59364, 934) - -65952);
             ;
             mat2x3(-936.527, 73.52, -1.1, 82.09, -522.612, 26.16);
             mat3x4 _GLF_SWITCH_2_5v, _GLF_SWITCH_2_6v, _GLF_SWITCH_2_7v;
             ivec3(70254, -36708, -78622);
            }
           do
            {
             subgroup_id;
             mat3 _GLF_SWITCH_2_8v[13];
             (24692 / (63931 / ivec4(-93646, 4664, -28782, -78093)));
             ;
             bool _GLF_SWITCH_2_9v, _GLF_SWITCH_2_10v[5], _GLF_SWITCH_2_11v;
             uvec2 _GLF_SWITCH_2_12v, _GLF_SWITCH_2_13v[32];
            }
           while(false);
           mat3x2 _GLF_SWITCH_2_14v, _GLF_SWITCH_2_15v[59];
           for(mat3 _GLF_SWITCH_2_16v, _GLF_SWITCH_2_17v; true; uvec2(98414u, 33361u))
            {
             _GLF_SWITCH_2_16v;
             bvec3(false, true, false);
             ivec2(83854, -14737);
             bvec3 _GLF_SWITCH_2_18v, _GLF_SWITCH_2_19v, _GLF_SWITCH_2_20v;
             isinf(mix(vec2(9525.9574, -8.6), injectionSwitch, injectionSwitch));
            }
           for(           (mat2x3(954.796, 971.882, 40.66, -2.0, -9183.6809, 0.9) - (mat2x3(8410.0359, -3.0, 685.406, 574.543, 128.949, 2.1) - -942.367));
 true; abs(-67.63))
            {
             ivec2(-22009, 48941);
             mat4(3.1, 99.44, -6350.2696, 5.9, 7.7, -73.36, 4382.9492, -5409.3950, 5.9, 1.1, -384.287, -2.1, -8.1, -53.87, -20.41, 2.7);
             vec2 _GLF_SWITCH_2_21v[40], _GLF_SWITCH_2_22v, _GLF_SWITCH_2_23v;
             length(vec4(-551.778, -0.9, 3159.7582, -8456.7934));
            }
           mat4x2(-3.0, 122.130, -8451.9886, -6.7, -1.5, 5324.4023, -4574.1785, -7813.1702);
          }
         else
          {
           {
            ivec4 _GLF_SWITCH_2_24v[94];
            mat2(-5.8, -5.5, 4.6, 7.0);
            mat2 _GLF_SWITCH_2_25v, _GLF_SWITCH_2_26v[61], _GLF_SWITCH_2_27v;
            vec2 _GLF_SWITCH_2_28v, _GLF_SWITCH_2_29v;
            ivec2(-8231, -91589);
            (subgroup_size ++);
            (82.98 / mat3x2(-0.4, 4667.8436, -628.698, -7060.5971, 82.50, -50.15));
            bvec4 _GLF_SWITCH_2_30v, _GLF_SWITCH_2_31v;
           }
           mat2x4(mat2x3(43.46, -86.82, -0.8, 2.0, 0.2, -562.326));
           for(mat3x2 _GLF_SWITCH_2_32v, _GLF_SWITCH_2_33v, _GLF_SWITCH_2_34v; true; true)
            {
            }
           (mat4x3(2.0, -5.5, -1.9, 8.1, 6.1, 69.34, 8323.6497, 6486.2146, 8.8, 0.9, -44.03, 6.2) , bvec2(true, false));
          }
         case 0:
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
         break;
         case 25:
         bvec2 _GLF_SWITCH_2_35v[2], _GLF_SWITCH_2_36v;
         default:
         1;
        }
      }
     case 37:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))))))
        {
         case 54:
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true))))
              barrier();
             return;
            }
           barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           (num_workgroup - uvec3(1186u, 164823u, 165484u));
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             return;
            }
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             barrier();
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), true, false)))))))
            return;
          }
         case 0:
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         case 96:
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              return;
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         case 2:
         if(_GLF_DEAD(false))
          barrier();
         case 23:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(true)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           while((mat3x4(408.955, -88.73, -4.3, -813.716, 3.8, -84.49, 3.3, -74.42, 77.65, 129.238, 699.111, 995.761) == (- mat3x4(1.7, -2251.9679, -262.780, 0.1, 0.1, -774.691, -0.2, 178.981, 978.667, 7.4, 6.6, -962.504))))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                return;
               barrier();
              }
             false;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             int _GLF_SWITCH_0_17v, _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v;
             ;
            }
           for(           mat2(-5.5, 331.314, -6149.9758, -94.94);
 true; (uvec4(68129u, 23648u, 134306u, 148806u) * max(uvec4(26715u, 156116u, 6793u, 23589u), read)))
            {
             mat4x3 _GLF_SWITCH_0_20v;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               break;
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             return;
            }
           bool _GLF_SWITCH_0_21v;
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           (mat3x2(71.23, 360.400, -8152.3639, -23.52, 18.30, 5.1) + 7796.9098);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         case 15:
         {
          do
           {
            ;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               break;
              if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
               barrier();
              break;
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
           }
          while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             return;
            barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
           }
          if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            return;
           }
          for(int _injected_loop_counter = (1 & ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), max(int(2), int(2))))) >> _GLF_IDENTITY(int(2), int(2)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
           {
            ;
           }
          if(_GLF_DEAD(false))
           barrier();
          while(true)
           {
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 barrier();
                break;
               }
              if(_GLF_DEAD(false))
               barrier();
              barrier();
              if(_GLF_DEAD(false))
               return;
             }
            if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
             barrier();
            float _GLF_SWITCH_0_22v, _GLF_SWITCH_0_23v, _GLF_SWITCH_0_24v;
            ;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                return;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                if(_GLF_DEAD(false))
                 barrier();
               }
              else
               {
               }
             }
            vec3(-8.4, -8824.0777, 72.89);
            vec2 _GLF_SWITCH_0_25v, _GLF_SWITCH_0_26v[71];
            mat2 _GLF_SWITCH_0_27v, _GLF_SWITCH_0_28v;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
             {
              if(_GLF_DEAD(false))
               barrier();
              break;
             }
            ((uvec2(148482u, 180934u) & read) % uvec2(4043u, 133896u));
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             break;
            if(_GLF_DEAD(false))
             continue;
            if(_GLF_DEAD(false))
             barrier();
           }
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           return;
          ;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
           return;
          if(_GLF_DEAD(false))
           barrier();
          ;
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           barrier();
          mat4(9.9, 23.98, 6.3, 8722.6255, 355.589, 12.67, 8.2, -3.8, 4566.2583, 1989.4742, 775.353, -2.2, 7872.9335, 988.043, 55.16, 3477.3291);
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_WRAPPED_IF_TRUE(true))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
           }
          else
           {
           }
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           {
            switch(_GLF_SWITCH((0 | int(_GLF_ZERO(0.0, injectionSwitch.x)))))
             {
              case 0:
              case 50:
              case 36:
              case 96:
              if(_GLF_DEAD(false))
               barrier();
              case 54:
              case 58:
              barrier();
              break;
              case 40:
              (uvec3(45838u, 175679u, 89549u) & uvec3(126149u, 182018u, 38230u));
              case 55:
              uvec2(18927u, 151522u);
              default:
              1;
             }
           }
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_WRAPPED_IF_TRUE(true))
           {
            if(_GLF_DEAD(false))
             return;
            while(false)
             {
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               break;
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 return;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                barrier();
               }
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   break;
                  if(_GLF_DEAD(false))
                   barrier();
                  barrier();
                 }
                barrier();
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    break;
                   }
                  break;
                 }
               }
              if(_GLF_DEAD(false))
               barrier();
              mat4x3 _GLF_SWITCH_0_29v[31], _GLF_SWITCH_0_30v;
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 continue;
                if(_GLF_DEAD(false))
                 barrier();
                return;
               }
              if(_GLF_DEAD(false))
               barrier();
              uvec2 _GLF_SWITCH_0_31v, _GLF_SWITCH_0_32v, _GLF_SWITCH_0_33v[20];
              if(_GLF_DEAD(false))
               break;
              mat2(mat3(-86.81, 9.8, 9.0, -61.81, -153.739, -1203.0252, -66.68, 6.5, 4725.2617));
              uint _GLF_SWITCH_0_34v[73];
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 continue;
                barrier();
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  barrier();
                 }
               }
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                barrier();
               }
             }
            if(_GLF_DEAD(false))
             barrier();
           }
          else
           {
            if(_GLF_DEAD(false))
             barrier();
           }
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              return;
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
             }
            return;
           }
         }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         while(((virtual_gid ^ next_virtual_gid) != subgroup_id))
          {
           for(vec4 _GLF_SWITCH_0_35v, _GLF_SWITCH_0_36v, _GLF_SWITCH_0_37v[97]; true; bvec2(true, true))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             mat4x2(-220.475, -2.0, 74.34, -588.821, 93.42, 56.13, -251.670, -8807.2671);
             ivec4 _GLF_SWITCH_0_38v;
             float _GLF_SWITCH_0_39v, _GLF_SWITCH_0_40v, _GLF_SWITCH_0_41v[27];
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             mat3(mat4x3(mat3(16.83, 0.6, 6.9, 50.43, 4.3, 38.06, -8.6, 53.09, -39.66)));
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              continue;
             (mat4x3(mat4x2(7.6, -2.6, 61.16, -908.059, 232.086, 0.3, 562.140, 4.9)) / mat4x3(552.365, 4.7, 9.8, 8.2, 277.974, -2.9, -1.4, -2569.6957, -69.90, 74.38, 0.8, -8.1));
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             min(sign(_GLF_SWITCH_0_36v), _GLF_SWITCH_0_35v);
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           mat4 _GLF_SWITCH_0_42v, _GLF_SWITCH_0_43v, _GLF_SWITCH_0_44v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           bool _GLF_SWITCH_0_45v, _GLF_SWITCH_0_46v[48], _GLF_SWITCH_0_47v;
           if(_GLF_DEAD(false))
            return;
           ivec3(-90585, -61803, -75127);
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            continue;
           ivec2(62931, -37106);
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         ;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         case 8:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false))))))
          return;
         case 22:
         for(int _injected_loop_counter = (0 & 89947); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_DEAD(false))
                return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              {
               if(_GLF_DEAD(false))
                barrier();
               continue;
              }
             continue;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         case 94:
         if(_GLF_DEAD(false))
          {
           switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
            {
             case 85:
             mat3x4 _GLF_SWITCH_2_0v[5];
             case 3:
             int _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v, _GLF_SWITCH_2_3v[53];
             case 0:
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               return;
              }
             case 10:
             case 75:
             case 83:
             case 96:
             if(_GLF_DEAD(false))
              barrier();
             case 36:
             case 17:
             barrier();
             break;
             default:
             1;
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           switch(_GLF_SWITCH(0))
            {
             case 0:
             case 47:
             case 16:
             case 71:
             case 18:
             case 30:
             case 36:
             case 45:
             case 42:
             if(true)
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   return;
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 barrier();
                }
               if(_GLF_DEAD(false))
                return;
               max(uvec4(6809u, 135893u, 127750u, 89592u), virtual_gid);
               if(_GLF_DEAD(false))
                barrier();
               while(false)
                {
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec4(bool(bvec3(false, true, true)), false, false, true))))))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                      barrier();
                     break;
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 vec2 _GLF_SWITCH_0_48v, _GLF_SWITCH_0_49v, _GLF_SWITCH_0_50v;
                 mat3x4 _GLF_SWITCH_0_51v, _GLF_SWITCH_0_52v, _GLF_SWITCH_0_53v[42];
                 if(_GLF_DEAD(false))
                  barrier();
                 uvec3 _GLF_SWITCH_0_54v, _GLF_SWITCH_0_55v[15], _GLF_SWITCH_0_56v;
                }
               if(_GLF_DEAD(false))
                return;
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 return;
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        return;
                       return;
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)))))
                      barrier();
                    }
                  }
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               for(uvec3 _GLF_SWITCH_0_57v, _GLF_SWITCH_0_58v[99]; (workgroup_id < workgroup_size); bitfieldReverse(subgroup_size))
                {
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  return;
                 uvec4(workgroup_id, (~ _GLF_SWITCH_0_57v));
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 mat2x3(-8.6, 883.760, -9.0, -4.6, -9733.7206, -4.1);
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               (vec3(3557.3495, 2942.3995, -85.16) * vec3(-585.477, -450.138, -18.95));
               mat3x4 _GLF_SWITCH_0_59v;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               int _GLF_SWITCH_0_60v[61], _GLF_SWITCH_0_61v;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                return;
              }
             break;
             default:
             1;
            }
          }
         else
          {
           switch(_GLF_SWITCH(0))
            {
             case 72:
             ;
             case 40:
             (ivec4(-80511, -58906, 1528, 35480)[2] * ivec2(4260, 65301));
             case 0:
             case 13:
             case 10:
             case 8:
             case 46:
             case 19:
             case 87:
             case 56:
             case 82:
             if(_GLF_DEAD(false))
              return;
             break;
             case 63:
             bool _GLF_SWITCH_3_0v;
             case 64:
             num_workgroup;
             default:
             1;
            }
          }
         break;
         default:
         1;
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         switch(_GLF_SWITCH(0))
          {
           case 69:
           if((workgroup_size < 160377u))
            {
             mat3x2(-96.43, 8.9, -9.9, 76.47, -429.027, 26.66);
             ivec2 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
             false;
             bvec4(false, false, false, true);
             lessThanEqual(asin((vec4(-5.3, 4.4, 2.1, 1.2) - vec4(-23.13, -6.8, -2.6, 138.171))), vec4(814.047, 735.013, -7.2, 89.33));
             mat3x2 _GLF_SWITCH_2_2v;
             -1820;
             bvec4(true, true, true, true);
            }
           case 0:
           if(_GLF_DEAD(false))
            barrier();
           case 42:
           case 6:
           case 52:
           case 30:
           case 76:
           case 68:
           barrier();
           break;
           case 49:
           mat2 _GLF_SWITCH_2_3v, _GLF_SWITCH_2_4v;
           default:
           1;
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     default:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     1;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   switch(_GLF_SWITCH(0))
    {
     case 83:
     mat3(-9.0, 1.9, -8.2, -730.337, 11.02, 1.1, -8563.0003, 8.0, -41.27);
     case 0:
     case 9:
     case 97:
     case 48:
     if(_GLF_DEAD(false))
      return;
     case 87:
     case 51:
     barrier();
     break;
     default:
     1;
    }
  }
 do
  {
   if(_GLF_struct_replacement_6._f1._f1.subgroup_local_id + 1 < subgroup_size)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     else
      {
       switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
        {
         case 41:
         mat2(-190.580, -0.7, 9946.8627, -55.52);
         case 13:
         if(_GLF_DEAD(false))
          barrier();
         {
          ;
          bool _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          vec3 _GLF_SWITCH_1_2v, _GLF_SWITCH_1_3v[6], _GLF_SWITCH_1_4v[19];
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
             return;
            barrier();
           }
          (ivec2(-91134, 83503) * -45269);
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           return;
          vec2(6.8, -875.546);
          if(_GLF_DEAD(false))
           barrier();
          -5.8;
          do
           {
            ldexp(dot(fract(vec4(828.637, 8115.0191, -2209.4457, 9215.4929)), vec4(4472.6647, 22.85, 76.19, 7483.6100)), 76259);
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
           }
          while(_GLF_WRAPPED_LOOP(false));
          vec4 _GLF_SWITCH_1_5v[90];
          if(_GLF_DEAD(false))
           barrier();
         }
         case 0:
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         case 76:
         if(_GLF_DEAD(false))
          barrier();
         case 32:
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(3), int(3)))))
            {
             case 21:
             (vec4(-2.4, -7309.3222, 8.2, -8.3) , -48414);
             case 27:
             mat4x2 _GLF_SWITCH_2_0v;
             case 0:
             case 86:
             case 80:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             return;
             break;
             default:
             1;
            }
          }
         case 77:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         break;
         if(_GLF_DEAD(false))
          continue;
         case 87:
         if(true)
          {
           injectionSwitch;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           vec2(-826.495);
           bool _GLF_SWITCH_1_6v, _GLF_SWITCH_1_7v;
           uvec4 _GLF_SWITCH_1_8v[30];
           if(_GLF_DEAD(false))
            barrier();
          }
         case 29:
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         (next_virtual_gid % uvec2(141794u, 52049u));
         default:
         1;
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          barrier();
         continue;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         continue;
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          break;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             continue;
            }
           barrier();
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
            barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         continue;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       switch(_GLF_SWITCH((0 ^ 0)))
        {
         case 0:
         case 3:
         case 70:
         case 62:
         case 48:
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         case 9:
         case 54:
         if(_GLF_DEAD(false))
          {
           switch(_GLF_SWITCH(0))
            {
             case 93:
             {
              ivec4(-844, 65542, -82382, 68165);
             }
             case 0:
             case 26:
             case 79:
             if(_GLF_DEAD(false))
              barrier();
             case 71:
             case 8:
             return;
             break;
             default:
             1;
            }
          }
         break;
         case 72:
         {
          notEqual(bvec3(true, true, true), greaterThanEqual(vec3(-2.9, 446.172, 1947.3893), vec3(6.6, 9.6, -31.53)));
          ;
          uint _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
          mat2x4(18.02, 5.5, 9580.7515, -2724.8925, 48.62, -13.22, -1506.0808, -73.96);
          ivec2(-49883, -50793);
         }
         default:
         1;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       switch(_GLF_SWITCH(0))
        {
         case 88:
         uvec3 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
         case 0:
         case 28:
         if(_GLF_DEAD(false))
          {
           switch(_GLF_SWITCH(0))
            {
             case 1:
             min(ivec3(-14956, 72113, 28275), sign(-95490));
             case 67:
             mat4x2 _GLF_SWITCH_2_0v[40], _GLF_SWITCH_2_1v[96];
             case 0:
             case 80:
             if(_GLF_DEAD(false))
              continue;
             case 75:
             continue;
             break;
             case 15:
             (uvec2(52497u, 8499u) + (uvec2(97635u, 171461u) + uvec2(18293u, 100787u)));
             case 5:
             ;
             default:
             1;
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         switch(_GLF_SWITCH(0))
          {
           case 0:
           case 36:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
              continue;
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           atomicStore(checker[virtual_gid], read, 4, 64, 4);
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           case 6:
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             return;
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             do
              {
               switch(_GLF_SWITCH(((0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (false ? _GLF_FUZZED(findMSB(subgroup_size)) : int(7)))))))
                {
                 case 27:
                 bvec3 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
                 case 0:
                 case 23:
                 case 1:
                 if(_GLF_DEAD(false))
                  barrier();
                 case 59:
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                 case 29:
                 ivec3 _GLF_SWITCH_2_2v;
                 case 98:
                 uvec2 _GLF_SWITCH_2_3v;
                 default:
                 1;
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               break;
              }
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           case 12:
           if(_GLF_DEAD(false))
            barrier();
           subgroupAll(false);
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           case 58:
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               break;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               barrier();
              }
             if(_GLF_DEAD(false))
              {
               switch(_GLF_SWITCH(0))
                {
                 case 92:
                 uint _GLF_SWITCH_2_0v[85];
                 case 7:
                 matrixCompMult(mat2x4(-4292.4549, -5.0, 8.7, -1764.0963, 577.112, 51.45, 3593.6623, 2266.6614), (mat2x4(3.3, -0.1, 4.8, 6.9, 1720.5542, -193.090, 64.00, -8350.3444) / -0.9));
                 case 0:
                 if(_GLF_DEAD(false))
                  continue;
                 case 72:
                 case 37:
                 if(_GLF_DEAD(false))
                  barrier();
                 case 56:
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 case 90:
                 case 3:
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 case 16:
                 case 4:
                 continue;
                 case 83:
                 case 23:
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                 case 33:
                 (uvec2(157229u, 124982u) >> uvec2(1460u, 94486u));
                 default:
                 1;
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                      barrier();
                     barrier();
                    }
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   continue;
                  }
                 break;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   continue;
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 continue;
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                barrier();
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          return;
                         break;
                        }
                       return;
                      }
                     barrier();
                    }
                   barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 switch(_GLF_SWITCH(0))
                  {
                   case 88:
                   ivec2 _GLF_SWITCH_0_0v;
                   case 0:
                   case 32:
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       switch(_GLF_SWITCH(0))
                        {
                         case 15:
                         injectionSwitch;
                         case 31:
                         (uvec2(44165u, 69436u) >> subgroup_id);
                         case 0:
                         case 10:
                         case 27:
                         if(_GLF_DEAD(false))
                          barrier();
                         continue;
                         break;
                         default:
                         1;
                        }
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       break;
                      }
                     barrier();
                    }
                   case 43:
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      break;
                     return;
                    }
                   case 66:
                   if(_GLF_DEAD(false))
                    barrier();
                   case 22:
                   barrier();
                   case 42:
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
                    barrier();
                   case 97:
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         barrier();
                        }
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(_GLF_DEAD(false))
                        continue;
                      }
                     barrier();
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       if(_GLF_DEAD(false))
                        return;
                      }
                     if(_GLF_DEAD(false))
                      break;
                    }
                   break;
                   if(_GLF_DEAD(false))
                    break;
                   case 27:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   ;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   case 54:
                   -67.45;
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    continue;
                   do
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       barrier();
                      }
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        continue;
                       return;
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     return;
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   default:
                   1;
                  }
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   break;
                  }
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
                  return;
                 break;
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               return;
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             switch(_GLF_SWITCH(0))
              {
               case 0:
               case 56:
               case 75:
               if(_GLF_DEAD(false))
                return;
               case 92:
               case 48:
               case 64:
               case 4:
               barrier();
               break;
               case 83:
               0.1;
               case 19:
               vec2(-1.4, 409.612);
               default:
               1;
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           default:
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                break;
               barrier();
              }
             continue;
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                return;
               barrier();
              }
             if(_GLF_DEAD(false))
              break;
             barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(false))
              barrier();
             continue;
            }
           1;
          }
         break;
         case 51:
         for(bvec2 _GLF_SWITCH_2_2v[33]; true; vec3(4.8, -1083.5074, -2725.9433))
          {
           ;
           injectionSwitch;
           mat2 _GLF_SWITCH_2_3v[33], _GLF_SWITCH_2_4v, _GLF_SWITCH_2_5v;
           4.2;
           vec4 _GLF_SWITCH_2_6v[26];
          }
         case 59:
         ivec4(19649, 74595, -17874, 82393);
         default:
         1;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        break;
       barrier();
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(buf[virtual_gid], read, 4, 64, 4);
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     subgroupAll(true);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         for(int _injected_loop_counter = (99651 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
              barrier();
             continue;
            }
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             switch(_GLF_SWITCH(0))
              {
               case 0:
               if(_GLF_DEAD(false))
                barrier();
               case 20:
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   return;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               case 98:
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 0:
                     case 24:
                     case 9:
                     case 14:
                     case 60:
                     case 37:
                     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, true)))))))
                      barrier();
                     case 80:
                     case 8:
                     case 12:
                     return;
                     break;
                     case 54:
                     exp2(vec3(-2019.7131));
                     case 57:
                     int _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v[46];
                     default:
                     1;
                    }
                  }
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   continue;
                   if(_GLF_DEAD(false))
                    return;
                  }
                 return;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      break;
                     return;
                    }
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
                    barrier();
                   barrier();
                  }
                 barrier();
                }
               if(_GLF_DEAD(false))
                return;
               case 17:
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                continue;
               mat4x3(vec3(888.767, -1.4, -23.69), vec3(-6101.6516, 9917.8723, -61.57), vec3(3.4, 6799.0532, 921.667), vec3(1.7, 0.3, -93.77));
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                {
                 switch(_GLF_SWITCH((1 ^ 1)))
                  {
                   case 64:
                   mat4 _GLF_SWITCH_2_0v[51], _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v;
                   case 8:
                   ;
                   case 0:
                   if(_GLF_DEAD(false))
                    barrier();
                   continue;
                   break;
                   case 53:
                   atomicAnd(workgroup_base, num_workgroup);
                   default:
                   1;
                  }
                }
               case 26:
               uvec3(175053u, 108310u, 154801u);
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                }
               if(_GLF_DEAD(false))
                continue;
               default:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 continue;
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  break;
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 return;
                }
               1;
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                break;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             break;
            }
          }
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        break;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
}
