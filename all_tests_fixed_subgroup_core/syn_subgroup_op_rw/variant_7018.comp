#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, determinant(mat4(sqrt(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, determinant(mat4(sqrt(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0))), min(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, determinant(mat4(sqrt(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, determinant(mat4(sqrt(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0))))), _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, determinant(mat4(sqrt(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, determinant(mat4(sqrt(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7863.7660)), bool(false))), injectionSwitch.y))))), bool(_GLF_IDENTITY(bool((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7863.7660)), bool(false))), injectionSwitch.y)))))), ! (! (bool((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7863.7660)), bool(false))), injectionSwitch.y))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(-2.5, mix(float(-2.5), float(_GLF_FUZZED(6.4)), bool(false)))) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), true, true, _GLF_IDENTITY(true, true && (true)))), bool(bvec3(bool(bvec4(! (false), true, true, _GLF_IDENTITY(true, true && (true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), ! (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(389.207, 772.446, -66.53, 9081.0604).g), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-1.6) : (injectionSwitch)[0])), _GLF_FUZZED(4103.6747)), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(389.207, 772.446, -66.53, 9081.0604).g), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-1.6) : (injectionSwitch)[0])), _GLF_FUZZED(4103.6747)), bvec2(true, false)))) * mat2(1.0)).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), ! (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(389.207, 772.446, -66.53, 9081.0604).g), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-1.6) : (injectionSwitch)[0])), _GLF_FUZZED(4103.6747)), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(389.207, 772.446, -66.53, 9081.0604).g), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-1.6) : (injectionSwitch)[0])), _GLF_FUZZED(4103.6747)), bvec2(true, false)))) * mat2(1.0)).x > injectionSwitch.y))), (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))) || false)))), ! (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(389.207, 772.446, -66.53, 9081.0604).g), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-1.6) : (injectionSwitch)[0])), _GLF_FUZZED(4103.6747)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(389.207, 772.446, -66.53, 9081.0604).g), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-1.6) : (injectionSwitch)[0])), _GLF_FUZZED(4103.6747)), bvec2(true, false)))) * mat2(1.0)).x > injectionSwitch.y)))) && true)))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(587.984)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(590.236)), bool(false))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(uvec4((gl_WorkGroupID) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (true ? uvec3(0u, 0u, 0u) : _GLF_FUZZED(uvec3(77554u, 100489u, 146694u)))), 1u)), uvec3(1u, 1u, 1u) * _GLF_IDENTITY((uvec3(uvec4((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), 1u))), (_GLF_IDENTITY((uvec3(uvec4((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), 1u))), uvec3(uvec3((uvec3(uvec4((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), 1u))))))) | (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(7u), uvec3(7u))))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)) < injectionSwitch.y))), false))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)) < injectionSwitch.y))), false)))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)) < injectionSwitch.y))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)) < injectionSwitch.y))), false)))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)) < injectionSwitch.y))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) || false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, exp(0.0), 1.0)))))), false))))), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4921.8719), _GLF_FUZZED(-0.5)), bvec2(false, false))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (subgroup_size) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u))), max(uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), 1u, 1u))), 1u)))), _GLF_IDENTITY(uvec2(uvec4((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), 1u, 1u))), 1u)))), 0u, 1u)), min(uvec2(uvec4((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), 1u, 1u))), 1u)))), 0u, 1u)), uvec2(uvec4((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), 1u, 1u))), 1u)))), 0u, 1u))))) + uvec2(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u))))), uint(_GLF_IDENTITY(uvec2(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)))), 1u), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u)))))), max(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (_GLF_IDENTITY(uvec2(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 1u, 1u)), (uint(uvec3(1u, 1u, 1u))) >> 0u))))), uvec2(uvec3(uvec2(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 1u, 1u)), (uint(uvec3(1u, 1u, 1u))) >> 0u))))), 1u)))) | (uvec2(subgroup_id * subgroup_size, 1u)))) + _GLF_IDENTITY(uvec2(0u, 0u), ~ (~ (uvec2(0u, 0u)))))), max(uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(packUnorm2x16(injectionSwitch)) : _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_id)))))) * subgroup_size, 1u), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u)))))), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) * uvec2(1u, 1u))), clamp(~ (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) * uvec2(1u, 1u))), ~ (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) * uvec2(1u, 1u))), ~ (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) * uvec2(1u, 1u)))))))) | (uvec2(subgroup_id * subgroup_size, 1u)))), uvec2(0u, 0u) ^ ((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) * uvec2(1u, 1u))), clamp(~ (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) * uvec2(1u, 1u))), ~ (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) * uvec2(1u, 1u))), ~ (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) * uvec2(1u, 1u)))))))) | (uvec2(subgroup_id * subgroup_size, 1u)))))) + _GLF_IDENTITY(uvec2(0u, 0u), min(_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) | (uvec2(0u, 0u))), _GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) >> uvec2(0u, 0u)))))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)))), 1u), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, _GLF_IDENTITY(((1u & 1u) | 0u), clamp(((1u & 1u) | 0u), ((1u & 1u) | 0u), ((1u & 1u) | 0u))))), (_GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, ((1u & 1u) | 0u))), (uint(uvec3(subgroup_size, 1u, ((1u & 1u) | _GLF_IDENTITY(0u, 0u | (0u)))))) * 1u)) / 1u)), 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)))) * subgroup_size, 1u), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u))))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)))) * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u))), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))))) + uvec2(0u, 0u)), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u))), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))))) + uvec2(0u, 0u))) | (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u))), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))))) + uvec2(0u, 0u))))), max(uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (_GLF_IDENTITY(uvec2(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), ~ (~ (uvec2(subgroup_id * subgroup_size, 1u)))), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u))), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))))) + uvec2(0u, 0u)), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u))), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))))) + uvec2(0u, 0u))) | (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u))), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))))) + uvec2(0u, 0u))))), max(uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (_GLF_IDENTITY(uvec2(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), ~ (~ (uvec2(subgroup_id * subgroup_size, 1u)))), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u))), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))))) + uvec2(0u, 0u)), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u))), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))))) + uvec2(0u, 0u))) | (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u))), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))))) + uvec2(0u, 0u))))), max(uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (_GLF_IDENTITY(uvec2(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), ~ (~ (uvec2(subgroup_id * subgroup_size, 1u)))), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u))))))))) | 0u), min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), subgroup_id * subgroup_size)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) | 0u)) >> _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(uvec2(uvec2(uvec2(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))) | (uint(4u)))) | (uint(4u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) * 1u), uint(4u)))))), (uvec2(uvec2(uvec2(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))) | (uint(4u)))) | (uint(4u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) * 1u), uint(4u))))))) ^ (uvec2(0u, 0u) | uvec2(0u, 0u)))))), 1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_size) : subgroup_id)) * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), uvec2(0u, 0u) + (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), uvec2(0u, 0u) | (uvec2(subgroup_id * subgroup_size, 1u)))))) + uvec2(0u, 0u), ((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, 0u | (1u))))), (uvec2(subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(172978u))), 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u)) | uvec2(0u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), uvec2(uvec4((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), max(uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_base) : 1u)))))) + uvec2(0u, 0u))), uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (_GLF_IDENTITY(uvec2(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) / (0u ^ 1u)) * subgroup_size, 1u)))) + uvec2(0u, 0u))))))) | 0u), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (false ? _GLF_FUZZED(max(packUnorm2x16(vec2(-16.09, 640.507)), subgroup_local_id)) : _GLF_IDENTITY(uint(5u), uint(5u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (false ? _GLF_FUZZED(max(packUnorm2x16(vec2(-16.09, 640.507)), subgroup_local_id)) : _GLF_IDENTITY(uint(5u), uint(5u))))) / 1u)) >> _GLF_IDENTITY(uint(5u), uint(5u)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u)), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u))))) >> uvec2(0u, 0u))), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), uvec2(uvec3(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) - uvec2(0u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) + 0u))))) + uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) | (0u)), 0u))), uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, _GLF_IDENTITY(1u, (1u) * 1u))) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u))))))) | 0u), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * _GLF_IDENTITY(subgroup_size, (subgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + _GLF_IDENTITY(uvec2(0u, 0u), (false ? _GLF_FUZZED(uvec2(subgroup_id, workgroup_id)) : uvec2(0u, 0u))))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((1u)))), 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u))), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) | (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))))) ^ (uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u))))) + uvec2(0u, 0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(subgroup_id * subgroup_size, 1u)), max(~ (uvec2(subgroup_id * subgroup_size, 1u)), ~ (uvec2(subgroup_id * subgroup_size, 1u)))))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u), 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), ((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u)) | uvec2(0u, 0u))) << uvec2(0u, 0u), uvec2(uvec3(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), ((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u)) | uvec2(0u, 0u))) << uvec2(0u, 0u), min((_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), ((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u)) | uvec2(0u, 0u))) << uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), ((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u)) | uvec2(0u, 0u))) << uvec2(0u, 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) - uvec2(0u, 0u))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size, 1u), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + _GLF_IDENTITY(uvec2(0u, 0u), (false ? _GLF_FUZZED(uvec2(subgroup_id, workgroup_id)) : uvec2(0u, 0u))))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(subgroup_id * subgroup_size, 1u)), max(~ (uvec2(subgroup_id * subgroup_size, 1u)), ~ (uvec2(subgroup_id * subgroup_size, 1u)))))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), ((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u)) | uvec2(0u, 0u))) << uvec2(0u, 0u))) - uvec2(0u, 0u))))))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size, 1u), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + _GLF_IDENTITY(uvec2(0u, 0u), (false ? _GLF_FUZZED(uvec2(subgroup_id, workgroup_id)) : uvec2(0u, 0u))))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(subgroup_id * subgroup_size, 1u)), max(~ (uvec2(subgroup_id * subgroup_size, 1u)), ~ (uvec2(subgroup_id * subgroup_size, 1u)))))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), ((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u)) | uvec2(0u, 0u))) << uvec2(0u, 0u))) - uvec2(0u, 0u)))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size, 1u), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + _GLF_IDENTITY(uvec2(0u, 0u), (false ? _GLF_FUZZED(uvec2(subgroup_id, workgroup_id)) : uvec2(0u, 0u))))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(subgroup_id * subgroup_size, 1u)), max(~ (uvec2(subgroup_id * subgroup_size, 1u)), ~ (uvec2(subgroup_id * subgroup_size, 1u)))))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), ((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u)) | uvec2(0u, 0u))) << uvec2(0u, 0u))) - uvec2(0u, 0u))))))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size, 1u), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + _GLF_IDENTITY(uvec2(0u, 0u), (false ? _GLF_FUZZED(uvec2(subgroup_id, workgroup_id)) : uvec2(0u, 0u))))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(subgroup_id * subgroup_size, 1u)), max(~ (uvec2(subgroup_id * subgroup_size, 1u)), ~ (uvec2(subgroup_id * subgroup_size, 1u)))))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), ((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u)) | uvec2(0u, 0u))) << uvec2(0u, 0u))) - uvec2(0u, 0u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size, 1u), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + _GLF_IDENTITY(uvec2(0u, 0u), (false ? _GLF_FUZZED(uvec2(subgroup_id, workgroup_id)) : uvec2(0u, 0u))))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(subgroup_id * subgroup_size, 1u)), max(~ (uvec2(subgroup_id * subgroup_size, 1u)), ~ (uvec2(subgroup_id * subgroup_size, 1u)))))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), ((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u)) | uvec2(0u, 0u))) << uvec2(0u, 0u))) - uvec2(0u, 0u))))))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size, 1u), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + _GLF_IDENTITY(uvec2(0u, 0u), (false ? _GLF_FUZZED(uvec2(subgroup_id, workgroup_id)) : uvec2(0u, 0u))))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(subgroup_id * subgroup_size, 1u)), max(~ (uvec2(subgroup_id * subgroup_size, 1u)), ~ (uvec2(subgroup_id * subgroup_size, 1u)))))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), ((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u)) | uvec2(0u, 0u))) << uvec2(0u, 0u))) - uvec2(0u, 0u)))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size, 1u), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + _GLF_IDENTITY(uvec2(0u, 0u), (false ? _GLF_FUZZED(uvec2(subgroup_id, workgroup_id)) : uvec2(0u, 0u))))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(subgroup_id * subgroup_size, 1u)), max(~ (uvec2(subgroup_id * subgroup_size, 1u)), ~ (uvec2(subgroup_id * subgroup_size, 1u)))))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), ((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u)) | uvec2(0u, 0u))) << uvec2(0u, 0u))) - uvec2(0u, 0u))))))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size, 1u), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + _GLF_IDENTITY(uvec2(0u, 0u), (false ? _GLF_FUZZED(uvec2(subgroup_id, workgroup_id)) : uvec2(0u, 0u))))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(subgroup_id * subgroup_size, 1u)), max(~ (uvec2(subgroup_id * subgroup_size, 1u)), ~ (uvec2(subgroup_id * subgroup_size, 1u)))))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), ((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u)) | uvec2(0u, 0u))) << uvec2(0u, 0u))) - uvec2(0u, 0u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size, 1u), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + _GLF_IDENTITY(uvec2(0u, 0u), (false ? _GLF_FUZZED(uvec2(subgroup_id, workgroup_id)) : uvec2(0u, 0u))))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(subgroup_id * subgroup_size, 1u)), max(~ (uvec2(subgroup_id * subgroup_size, 1u)), ~ (uvec2(subgroup_id * subgroup_size, 1u)))))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), ((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u)) | uvec2(0u, 0u))) << uvec2(0u, 0u))) - uvec2(0u, 0u))))))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size, 1u), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + _GLF_IDENTITY(uvec2(0u, 0u), (false ? _GLF_FUZZED(uvec2(subgroup_id, workgroup_id)) : uvec2(0u, 0u))))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(subgroup_id * subgroup_size, 1u)), max(~ (uvec2(subgroup_id * subgroup_size, 1u)), ~ (uvec2(subgroup_id * subgroup_size, 1u)))))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), ((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u)) | uvec2(0u, 0u))) << uvec2(0u, 0u))) - uvec2(0u, 0u)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size, 1u), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + _GLF_IDENTITY(uvec2(0u, 0u), (false ? _GLF_FUZZED(uvec2(subgroup_id, workgroup_id)) : uvec2(0u, 0u))))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(subgroup_id * subgroup_size, 1u)), max(~ (uvec2(subgroup_id * subgroup_size, 1u)), ~ (uvec2(subgroup_id * subgroup_size, 1u)))))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), ((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u)) | uvec2(0u, 0u))) << uvec2(0u, 0u))) - uvec2(0u, 0u))))))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size, 1u), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + _GLF_IDENTITY(uvec2(0u, 0u), (false ? _GLF_FUZZED(uvec2(subgroup_id, workgroup_id)) : uvec2(0u, 0u))))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(subgroup_id * subgroup_size, 1u)), max(~ (uvec2(subgroup_id * subgroup_size, 1u)), ~ (uvec2(subgroup_id * subgroup_size, 1u)))))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), ((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u)) | uvec2(0u, 0u))) << uvec2(0u, 0u))) - uvec2(0u, 0u)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size, 1u), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + _GLF_IDENTITY(uvec2(0u, 0u), (false ? _GLF_FUZZED(uvec2(subgroup_id, workgroup_id)) : uvec2(0u, 0u))))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(subgroup_id * subgroup_size, 1u)), max(~ (uvec2(subgroup_id * subgroup_size, 1u)), ~ (uvec2(subgroup_id * subgroup_size, 1u)))))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), ((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u)) | uvec2(0u, 0u))) << uvec2(0u, 0u))) - uvec2(0u, 0u))))))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size, 1u), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + _GLF_IDENTITY(uvec2(0u, 0u), (false ? _GLF_FUZZED(uvec2(subgroup_id, workgroup_id)) : uvec2(0u, 0u))))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(subgroup_id * subgroup_size, 1u)), max(~ (uvec2(subgroup_id * subgroup_size, 1u)), ~ (uvec2(subgroup_id * subgroup_size, 1u)))))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), ((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u)) | uvec2(0u, 0u))) << uvec2(0u, 0u))) - uvec2(0u, 0u))))))), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size, 1u), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + _GLF_IDENTITY(uvec2(0u, 0u), (false ? _GLF_FUZZED(uvec2(subgroup_id, workgroup_id)) : uvec2(0u, 0u))))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(subgroup_id * subgroup_size, 1u)), max(~ (uvec2(subgroup_id * subgroup_size, 1u)), ~ (uvec2(subgroup_id * subgroup_size, 1u)))))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), ((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u)) | uvec2(0u, 0u))) << uvec2(0u, 0u))) - uvec2(0u, 0u))))))), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size, 1u), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + _GLF_IDENTITY(uvec2(0u, 0u), (false ? _GLF_FUZZED(uvec2(subgroup_id, workgroup_id)) : uvec2(0u, 0u))))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(subgroup_id * subgroup_size, 1u)), max(~ (uvec2(subgroup_id * subgroup_size, 1u)), ~ (uvec2(subgroup_id * subgroup_size, 1u)))))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), ((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u)) | uvec2(0u, 0u))) << uvec2(0u, 0u))) - uvec2(0u, 0u))))))), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size, 1u), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + _GLF_IDENTITY(uvec2(0u, 0u), (false ? _GLF_FUZZED(uvec2(subgroup_id, workgroup_id)) : uvec2(0u, 0u))))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), ~ (_GLF_IDENTITY(~ (uvec2(subgroup_id * subgroup_size, 1u)), max(~ (uvec2(subgroup_id * subgroup_size, 1u)), ~ (uvec2(subgroup_id * subgroup_size, 1u)))))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), ((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u)) | uvec2(0u, 0u))) << uvec2(0u, 0u))) - uvec2(0u, 0u))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(subgroup_id * subgroup_size)), 0u | (_GLF_IDENTITY(uint(uint(subgroup_id * subgroup_size)), uint(uvec3(uint(uint(subgroup_id * subgroup_size)), 1u, 0u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size, 1u), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + _GLF_IDENTITY(uvec2(0u, 0u), (false ? _GLF_FUZZED(uvec2(subgroup_id, workgroup_id)) : uvec2(0u, 0u))))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 1u * (1u))) | (1u)), 1u))), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 0u, 1u)))) ^ 0u))), 1u), ~ (_GLF_IDENTITY(~ (uvec2(subgroup_id * subgroup_size, 1u)), max(~ (uvec2(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size, _GLF_IDENTITY(1u, 0u ^ (1u)))), ~ (uvec2(subgroup_id * subgroup_size, 1u)))))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + _GLF_IDENTITY(uvec2(0u, 0u), uvec2(1u, 1u) * (_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) | (uvec2(0u, 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), _GLF_IDENTITY((uvec2(subgroup_id * subgroup_size, 1u)), ~ (~ (_GLF_IDENTITY((uvec2(subgroup_id * subgroup_size, 1u)), ((uvec2(subgroup_id * subgroup_size, 1u))) | uvec2(0u, 0u))))) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (false ? _GLF_FUZZED(uvec2(99855u, 157404u)) : uvec2(subgroup_id * subgroup_size, 1u)))))) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u), ((_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) | (uvec2(subgroup_id * subgroup_size, 1u)))) + uvec2(0u, 0u)) | uvec2(0u, 0u))) << uvec2(0u, 0u))) - uvec2(0u, 0u)))))))))) | 0u), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) >> 0u))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1687.9180), _GLF_FUZZED(-330.708)), vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-38.53) : (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).x), float(_GLF_FUZZED((7620.5231 / -2.2))), bool(false))) : _GLF_FUZZED(0.2))) > injectionSwitch.y))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(injectionSwitch.y, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat3(500.065, 1.9, 9572.6191, -4.4, -6.1, 21.41, -18.83, -408.544, -267.730)) : mat3(injectionSwitch.y, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), (bool(bvec4(_GLF_DEAD(false), false, true, false))) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, false || ((false) && _GLF_IDENTITY(true, true && (true))))) || false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, false || ((false) && _GLF_IDENTITY(true, true && (true))))) || false))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size), 0u ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size), (true ? ~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size) : _GLF_FUZZED(subgroup_size))), min(~ (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), subgroup_id)) * subgroup_size), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size), 0u ^ (~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size))))), ~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size))))))) + ((subgroup_local_id + 1) % subgroup_size), (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) ^ 0u)), uint(3u))) ^ (workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, true, true))), false, true, true)))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) && true)), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) && true, bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) && true, false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false))))), true), bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(-542.356)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) / exp(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-83.08)), bool(false))), injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2.6)), bool(false))), injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, abs(exp(0.0)), 1.0, 1.0, 1.0, 0.0)), max(vec2(mat4x2(injectionSwitch, 0.0, abs(exp(0.0)), 1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, abs(exp(0.0)), 1.0, 1.0, 1.0, 0.0)), mix(vec2((vec2(mat4x2(injectionSwitch, 0.0, abs(exp(0.0)), 1.0, 1.0, 1.0, 0.0)))[0], _GLF_FUZZED(-35.17)), vec2(_GLF_FUZZED(-72.57), (vec2(mat4x2(injectionSwitch, 0.0, abs(exp(0.0)), 1.0, 1.0, 1.0, 0.0)))[1]), bvec2(false, true)))))).y))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))), _GLF_IDENTITY(false, false || (false))))))))), true)))))) || false))), false, _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))) || (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))), ! (! ((! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))))), false || (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))), ! (! ((! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))))))))))))) || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(-479.054))), mix(float(_GLF_FUZZED(-3.1)), float(injectionSwitch.y), bool(true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), float(mat3x4(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0), (mat4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), float(mat3x4(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0)) - mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, round(length(normalize(1.0))), round(length(normalize(1.0))), sqrt(0.0), 0.0)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! (false))))), bool(bvec4(! _GLF_IDENTITY(((false)), bool(bvec4(((false)), false, _GLF_IDENTITY(false, (false) || false), false))), true, true, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! (false))))), bool(bvec4(! _GLF_IDENTITY(((false)), bool(bvec4(((false)), false, _GLF_IDENTITY(false, (false) || false), false))), true, true, false)))), false || ((_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! (false))))), bool(bvec4(! _GLF_IDENTITY(((false)), bool(bvec4(((false)), false, _GLF_IDENTITY(false, (false) || false), false))), true, true, false))))))), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! (false))))), bool(bvec4(! _GLF_IDENTITY(((false)), bool(bvec4(((false)), false, _GLF_IDENTITY(false, (false) || false), false))), true, true, false)))), false || ((_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! (false))))), bool(bvec4(! _GLF_IDENTITY(((false)), bool(bvec4(((false)), false, _GLF_IDENTITY(false, (false) || false), false))), true, true, false))))))), false, false, true)))))), _GLF_IDENTITY((! (false)) || false, ((! (false)) || false) || false)))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-751.619, 38.36)))).y) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), (uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))) | (uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) >> 0)) - (0 << _GLF_IDENTITY(int(2), int(2)))), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), false || (bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)) || false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((+ 7.3))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))))).y))))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))), true)))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)))))
          return;
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), ! (! (_GLF_DEAD(false)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))))), ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(true, ! (! (true)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), (injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(! (! (false)), ! (! (! (! _GLF_IDENTITY((false), false || ((false))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(buf[virtual_gid], read, 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), 1 * _GLF_IDENTITY((4), 0 | ((4)))));
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), bool(bvec3((! ((false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))) || (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7.1))), injectionSwitch.x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, _GLF_IDENTITY(true, (true) || false), false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), ! (! (bool(_GLF_IDENTITY(false, (false) || false)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
}
