#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_84 {
 int _injected_loop_counter;
 int _f0;
} ;

struct _GLF_struct_81 {
 vec2 _f0;
} ;

struct _GLF_struct_80 {
 mat2 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_79 {
 bool _f0;
 uint _f1;
 ivec2 _f2;
 ivec4 _f3;
 mat2 _f4;
 vec2 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_82 {
 uvec3 _f0;
 mat2x3 _f1;
 _GLF_struct_79 _f2;
 _GLF_struct_80 _f3;
 _GLF_struct_81 _f4;
} ;

struct _GLF_struct_77 {
 mat2 _f0;
 bvec4 _f1;
 mat2x3 _f2;
 uint _f3;
 bvec2 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_78 {
 _GLF_struct_77 _f0;
} ;

struct _GLF_struct_76 {
 ivec3 _f0;
} ;

struct _GLF_struct_83 {
 int _injected_loop_counter;
 bvec2 _f0;
 _GLF_struct_76 _f1;
 mat3 _f2;
 _GLF_struct_78 _f3;
 _GLF_struct_82 _f4;
} ;

struct _GLF_struct_75 {
 mat3 _f0;
 uint workgroup_id;
} ;

struct _GLF_struct_72 {
 mat2 _f0;
 mat3x4 _f1;
 vec3 _f2;
 mat4x2 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_71 {
 bool _f0;
 vec4 _f1;
 mat2 _f2;
 uint _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_70 {
 ivec4 _f0;
 mat2x4 _f1;
 mat4 _f2;
 mat2 _f3;
 vec2 _f4;
 float _f5;
} ;

struct _GLF_struct_73 {
 uvec2 _f0;
 mat4 _f1;
 _GLF_struct_70 _f2;
 _GLF_struct_71 _f3;
 bvec3 _f4;
 _GLF_struct_72 _f5;
} ;

struct _GLF_struct_68 {
 bvec3 _f0;
 ivec2 _f1;
 mat4x3 _f2;
 ivec3 _f3;
 bvec4 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_67 {
 mat2x3 _f0;
 bvec3 _f1;
 uvec2 _f2;
 mat2 _f3;
 float _f4;
} ;

struct _GLF_struct_69 {
 _GLF_struct_67 _f0;
 _GLF_struct_68 _f1;
 mat2x4 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_65 {
 mat4 _f0;
 mat2 _f1;
 mat4 _f2;
 vec3 _f3;
 vec3 _f4;
 uvec3 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_64 {
 vec2 _f0;
 uint _f1;
 ivec2 _f2;
 vec3 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_63 {
 mat4x3 _f0;
 mat2x4 _f1;
 int _f2;
} ;

struct _GLF_struct_62 {
 mat4 _f0;
 mat2 _f1;
 float _f2;
 mat4x3 _f3;
 ivec4 _f4;
 vec2 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_66 {
 _GLF_struct_62 _f0;
 uvec3 _f1;
 _GLF_struct_63 _f2;
 mat3x4 _f3;
 _GLF_struct_64 _f4;
 _GLF_struct_65 _f5;
} ;

struct _GLF_struct_60 {
 mat3 _f0;
 uvec4 _f1;
 float _f2;
 bvec2 _f3;
 bool _f4;
 mat2 _f5;
} ;

struct _GLF_struct_61 {
 _GLF_struct_60 _f0;
} ;

struct _GLF_struct_74 {
 _GLF_struct_61 _f0;
 _GLF_struct_66 _f1;
 _GLF_struct_69 _f2;
 uvec3 _f3;
 bvec4 _GLF_SWITCH_1_24v;
 _GLF_struct_73 _f4;
} ;

struct _GLF_struct_59 {
 int _injected_loop_counter;
 ivec2 _f0;
} ;

struct _GLF_struct_56 {
 mat4x2 _f0;
 mat2x4 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_55 {
 uvec3 _f0;
 mat2x3 _f1;
 mat3x4 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_54 {
 bvec4 _f0;
 mat3x2 _f1;
 uint _f2;
 uvec4 _f3;
 float _f4;
} ;

struct _GLF_struct_53 {
 vec2 _f0;
 mat2x4 _f1;
 uint _f2;
 mat3x2 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_52 {
 mat3 _f0;
 mat4 _f1;
 uint _f2;
 uint _f3;
 mat4x2 _f4;
 bool _f5;
 mat2 _f6;
} ;

struct _GLF_struct_57 {
 _GLF_struct_52 _f0;
 _GLF_struct_53 _f1;
 _GLF_struct_54 _f2;
 _GLF_struct_55 _f3;
 _GLF_struct_56 _f4;
 ivec4 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_58 {
 int _injected_loop_counter;
 int _f0;
 uvec3 _f1;
 _GLF_struct_57 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_49 {
 mat3 _f0;
} ;

struct _GLF_struct_48 {
 vec3 _f0;
 uvec3 _f1;
 uvec2 _f2;
 uint _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_50 {
 ivec4 _f0;
 int _f1;
 _GLF_struct_48 _f2;
 _GLF_struct_49 _f3;
 int _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_46 {
 mat3x2 _f0;
 bool _f1;
 mat4 _f2;
 mat2x3 _f3;
 vec2 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_45 {
 uvec4 _f0;
 mat4x2 _f1;
 ivec2 _f2;
 bvec4 _f3;
 mat4 _f4;
 bvec3 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_44 {
 uvec4 _f0;
} ;

struct _GLF_struct_47 {
 _GLF_struct_44 _f0;
 mat4x3 _f1;
 _GLF_struct_45 _f2;
 _GLF_struct_46 _f3;
 uvec3 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_42 {
 bvec2 _f0;
 vec2 _f1;
 ivec3 _f2;
 ivec3 _f3;
 uvec3 _f4;
 bvec2 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_41 {
 ivec3 _f0;
 mat3 _f1;
 bool _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_40 {
 uint _f0;
 mat3 _f1;
 int _f2;
 uvec3 _f3;
 bvec2 _f4;
 bool _f5;
} ;

struct _GLF_struct_39 {
 mat3x2 _f0;
 bool _f1;
 float _f2;
 bvec4 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_38 {
 mat4x2 _f0;
 bool _f1;
 bvec4 _f2;
 ivec2 _f3;
 float _f4;
 uvec4 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_43 {
 _GLF_struct_38 _f0;
 _GLF_struct_39 _f1;
 mat4x2 _f2;
 _GLF_struct_40 _f3;
 _GLF_struct_41 _f4;
 _GLF_struct_42 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_51 {
 int _GLF_SWITCH_1_40v;
 mat4x3 _f0;
 mat3 _f1;
 _GLF_struct_43 _f2;
 mat3x2 _f3;
 mat2x3 _f4;
 _GLF_struct_47 _f5;
 _GLF_struct_50 _f6;
} ;

struct _GLF_struct_37 {
 bool _f0;
 mat3x4 _f1;
 ivec3 _f2;
 uint subgroup_size;
 mat4 _f3;
} ;

struct _GLF_struct_35 {
 mat3x2 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_33 {
 mat3x2 _f0;
 mat4x3 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_32 {
 ivec2 _f0;
 ivec4 _f1;
 vec3 _f2;
 ivec3 _f3;
 mat4x3 _f4;
 uvec4 _f5;
 int _f6;
} ;

struct _GLF_struct_34 {
 mat3x2 _f0;
 mat2 _f1;
 _GLF_struct_32 _f2;
 int _f3;
 mat2x3 _f4;
 _GLF_struct_33 _f5;
} ;

struct _GLF_struct_30 {
 mat3 _f0;
 vec3 _f1;
 mat3x4 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_31 {
 _GLF_struct_30 _f0;
} ;

struct _GLF_struct_36 {
 _GLF_struct_31 _f0;
 mat2x4 _f1;
 ivec3 _f2;
 _GLF_struct_34 _f3;
 bvec3 _f4;
 uint subgroup_id;
 _GLF_struct_35 _f5;
} ;

struct _GLF_struct_27 {
 vec4 _f0;
 mat2 _f1;
 int _f2;
 bvec3 _f3;
 bvec4 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_28 {
 bool _f0;
 ivec3 _f1;
 _GLF_struct_27 _f2;
 bool _GLF_SWITCH_0_63v;
 mat4x2 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_25 {
 mat4x3 _f0;
 vec4 _f1;
 mat4x2 _f2;
 mat3x2 _f3;
 mat2x3 _f4;
 bvec3 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_24 {
 mat3 _f0;
 ivec3 _f1;
 vec3 _f2;
 bvec3 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_23 {
 mat4x3 _f0;
} ;

struct _GLF_struct_22 {
 mat2x4 _f0;
 bvec3 _f1;
 float _f2;
 vec4 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_21 {
 vec3 _f0;
 mat4x3 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_26 {
 _GLF_struct_21 _f0;
 _GLF_struct_22 _f1;
 uvec4 _f2;
 _GLF_struct_23 _f3;
 _GLF_struct_24 _f4;
 ivec2 _f5;
 _GLF_struct_25 _f6;
} ;

struct _GLF_struct_29 {
 bvec4 _f0;
 vec4 _f1;
 _GLF_struct_26 _f2;
 _GLF_struct_28 _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_18 {
 ivec2 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_19 {
 uint _f0;
 _GLF_struct_18 _f1;
} ;

struct _GLF_struct_17 {
 mat2x3 _f0;
 ivec2 _f1;
 mat2x3 _f2;
 vec4 _f3;
 mat4 _f4;
 mat4 _f5;
 uvec4 _f6;
 ivec3 _GLF_SWITCH_0_0v;
} ;

struct _GLF_struct_15 {
 mat3x4 _f0;
 ivec2 _f1;
 int _f2;
 mat2x3 _f3;
 uint _f4;
} ;

struct _GLF_struct_14 {
 mat4x2 _f0;
 bool _f1;
} ;

struct _GLF_struct_16 {
 _GLF_struct_14 _f0;
 _GLF_struct_15 _f1;
 mat3x2 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_20 {
 _GLF_struct_16 _f0;
 _GLF_struct_17 _f1;
 vec3 _f2;
 _GLF_struct_19 _f3;
} ;

struct _GLF_struct_11 {
 bvec2 _f0;
} ;

struct _GLF_struct_10 {
 ivec2 _f0;
 bvec4 _f1;
 vec2 _f2;
 uvec4 _f3;
 uvec4 _f4;
 mat3x4 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_9 {
 ivec2 _f0;
 bvec4 _f1;
 mat4x3 _f2;
 uvec4 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_12 {
 mat4x3 _f0;
 mat4x3 _f1;
 vec3 _f2;
 _GLF_struct_9 _f3;
 mat2x3 _f4;
 _GLF_struct_10 _f5;
 _GLF_struct_11 _f6;
} ;

struct _GLF_struct_13 {
 vec2 _f0;
 uvec2 _GLF_SWITCH_0_39v;
 _GLF_struct_12 _f1;
} ;

struct _GLF_struct_6 {
 bool _f0;
 ivec3 _f1;
 mat3x2 _f2;
 int _f3;
 vec3 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_7 {
 mat3x2 _f0;
 mat4x2 _f1;
 _GLF_struct_6 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_4 {
 vec3 _f0;
 bvec4 _f1;
 uvec4 _f2;
 int _f3;
 bool _f4;
} ;

struct _GLF_struct_3 {
 ivec3 _f0;
} ;

struct _GLF_struct_5 {
 _GLF_struct_3 _f0;
 mat2x3 _f1;
 _GLF_struct_4 _f2;
} ;

struct _GLF_struct_1 {
 uvec3 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
 mat2x3 _f1;
 float _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 uvec2 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_8 {
 _GLF_struct_2 _f0;
 _GLF_struct_5 _f1;
 vec4 _f2;
 _GLF_struct_7 _f3;
 uint read;
 bvec3 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (-53587 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_36 _GLF_struct_replacement_36 = _GLF_struct_36(_GLF_struct_31(_GLF_struct_30(mat3(1.0), vec3(1.0), mat3x4(1.0), mat2x3(1.0))), mat2x4(1.0), ivec3(1), _GLF_struct_34(mat3x2(1.0), mat2(1.0), _GLF_struct_32(ivec2(1), ivec4(1), vec3(1.0), ivec3(1), mat4x3(1.0), uvec4(1u), 1), 1, mat2x3(1.0), _GLF_struct_33(mat3x2(1.0), mat4x3(1.0), mat2(1.0))), bvec3(true), gl_SubgroupID, _GLF_struct_35(mat3x2(1.0), ivec2(1)));
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   for(_GLF_struct_59 _GLF_struct_replacement_59 = _GLF_struct_59(0, ivec2(1)); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_59._injected_loop_counter != 1); _GLF_struct_replacement_59._injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       return;
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_37 _GLF_struct_replacement_37 = _GLF_struct_37(true, mat3x4(1.0), ivec3(1), gl_SubgroupSize, mat4(1.0));
 do
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   switch(_GLF_SWITCH((0 & -49831)))
    {
     case 80:
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       ;
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     case 0:
     if(_GLF_DEAD(false))
      barrier();
     case 55:
     case 78:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     case 89:
     case 28:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     case 87:
     case 3:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     case 5:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     break;
     if(_GLF_DEAD(false))
      barrier();
     case 91:
     while((mat3(-7.5, 29.01, 99.30, -4.6, 5.6, -21.93, 770.189, 870.437, -7.5) == mat3(7.7, 0.6, -94.77, 7.2, -61.38, 3.8, 579.458, -542.222, 8.1)))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))))
        {
         atanh(injectionSwitch);
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(false)
        {
         if(_GLF_DEAD(false))
          break;
         39011u;
         ivec4 _GLF_SWITCH_1_0v;
         if(_GLF_DEAD(false))
          barrier();
         while(false)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
             ;
            }
           ivec2(71775, -75272);
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             mat2(-2.2, 5.9, -271.495, -2.5);
            }
           else
            {
            }
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
            {
             uvec4((uvec2(96759u, 21431u) << uvec2(62236u, 119789u)), uvec4(40450u, 137191u, 57808u, 22093u).ba);
             if(_GLF_DEAD(false))
              barrier();
            }
           mat2x3 _GLF_SWITCH_1_1v;
           if(_GLF_DEAD(false))
            break;
           vec4 _GLF_SWITCH_1_2v, _GLF_SWITCH_1_3v, _GLF_SWITCH_1_4v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           ivec3 _GLF_SWITCH_1_5v;
           do
            {
             (mat4x2(7.8, -5.1, -9.6, -645.608, 83.73, -36.37, 789.467, 785.922) , uvec2(92847u, 188864u));
            }
           while(_GLF_WRAPPED_LOOP(false));
           mat2 _GLF_SWITCH_1_6v, _GLF_SWITCH_1_7v, _GLF_SWITCH_1_8v;
          }
         if(_GLF_DEAD(false))
          barrier();
         mat4 _GLF_SWITCH_1_9v;
         do
          {
           _GLF_SWITCH_1_9v;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if((vec3(60.67, 6.6, 2456.2034) == vec3(1.8, 3025.4947, -81.74)))
          {
           mat2x4(338.049, -90.65, -0.8, 1827.0569, -322.674, -24.71, 579.245, 4.1);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             continue;
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             mat4(1.9, 9.8, -397.661, 2542.9021, 17.11, 6.1, -898.657, -98.54, -54.04, -0.0, -0.7, -4.0, -4454.9958, -633.303, 7.1, 60.36);
            }
           else
            {
            }
           ivec4 _GLF_SWITCH_1_10v;
           _GLF_SWITCH_1_9v;
           ((mat3x2(-6.4, -24.80, 1.4, -391.031, 1.6, 954.066) + mat3x2(5966.4749, -4.9, 8120.9861, 7.9, 0.2, 530.744)) * mat3(76.47, -0.8, 5.3, -3317.2108, -7.6, 7.6, -3.0, 325.712, 932.006));
          }
         else
          {
           mat3 _GLF_SWITCH_1_11v;
           if(_GLF_DEAD(false))
            break;
           75661;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             ;
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           ;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           int _GLF_SWITCH_1_12v, _GLF_SWITCH_1_13v[13], _GLF_SWITCH_1_14v;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          barrier();
         mat3x4 _GLF_SWITCH_1_15v, _GLF_SWITCH_1_16v, _GLF_SWITCH_1_17v;
         bool _GLF_SWITCH_1_18v, _GLF_SWITCH_1_19v;
         uvec2 _GLF_SWITCH_1_20v, _GLF_SWITCH_1_21v, _GLF_SWITCH_1_22v;
         {
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               barrier();
             }
            else
             {
              switch(_GLF_SWITCH(0))
               {
                case 44:
                mat2 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v[59];
                case 99:
                ;
                case 0:
                case 61:
                case 12:
                case 69:
                case 26:
                case 68:
                return;
                break;
                default:
                1;
               }
             }
           }
          bool _GLF_SWITCH_1_23v;
          if(_GLF_DEAD(false))
           barrier();
          vec3(-36.59, -7.7, 377.251);
          _GLF_struct_74 _GLF_struct_replacement_74;
          mat2x3(-6.6, 32.66, -1428.0241, -5.8, 8.0, -12.14);
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          ivec3 _GLF_SWITCH_1_25v, _GLF_SWITCH_1_26v, _GLF_SWITCH_1_27v;
          mat4x2(79.12, 3.6, -8.8, -4.6, -254.073, -665.868, -44.77, -43.62);
         }
         if(_GLF_DEAD(false))
          barrier();
         while(true)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               mat2(-2.4, 7.9, 57.39, -6733.8807);
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           uvec2(11672u, 30679u);
           ;
           bvec4 _GLF_SWITCH_1_28v;
           ivec4 _GLF_SWITCH_1_29v, _GLF_SWITCH_1_30v;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             uvec4(26399u, 115106u, 94300u, 49692u);
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             continue;
            }
           mat4x3 _GLF_SWITCH_1_31v, _GLF_SWITCH_1_32v[91], _GLF_SWITCH_1_33v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         (_GLF_struct_replacement_37.subgroup_size - 174536u);
         -25398;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          barrier();
         mat2x3 _GLF_SWITCH_1_34v[55];
         while(_GLF_SWITCH_1_19v)
          {
           switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
            {
             case 47:
             mat4x3 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             case 0:
             case 75:
             if(_GLF_DEAD(false))
              barrier();
             mat3x4 _GLF_SWITCH_1_35v[10], _GLF_SWITCH_1_36v[75], _GLF_SWITCH_1_37v[56];
             case 12:
             case 20:
             case 40:
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 mat2x4(-343.592, -81.96, -8938.9615, 10.74, 8870.4996, -938.132, -5.7, -7.6);
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false))))
              barrier();
             case 23:
             case 31:
             (+ round(350.141));
             break;
             case 80:
             bvec2 _GLF_SWITCH_2_2v[94], _GLF_SWITCH_2_3v[92];
             case 76:
             equal(ivec2(8089, -89298), ivec2(49981, -65201));
             default:
             1;
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if(bvec4(true, false, true, true).t)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(false)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(4), int(4)))))
                {
                 case 0:
                 case 77:
                 case 26:
                 case 13:
                 case 47:
                 case 48:
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                 break;
                 default:
                 1;
                }
              }
             break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           vec2 _GLF_SWITCH_1_38v[79];
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             break;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           (75138 & clamp(17389, (vec3(7.8, 5.9, -4224.1648) , -34306), -15881));
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             int(125950u);
            }
           uvec2 _GLF_SWITCH_1_39v;
           7233.1230;
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           _GLF_struct_51 _GLF_struct_replacement_51;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             outerProduct(vec3(-0.4, -3.7, 1.1), vec4(16.70, 4.2, -278.638, 192.363));
            }
           else
            {
            }
           mat4 _GLF_SWITCH_1_41v[60], _GLF_SWITCH_1_42v, _GLF_SWITCH_1_43v[32];
          }
         greaterThan(uvec2(150524u, 14192u), uvec2(168580u, 22529u));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     case 12:
     mat2(284.621, -28.48, -695.353, 44.48);
     default:
     1;
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (((1 ^ 0) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), ~ (~ (int(4)))))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
  }
 if(_GLF_DEAD(false))
  {
   switch(_GLF_SWITCH(0))
    {
     case 80:
     while(true)
      {
       {
       }
       if(true)
        {
         {
          int _GLF_SWITCH_3_0v;
          int _GLF_SWITCH_3_1v;
          (2464 != 36184);
          ivec4(31647, 54605, -41844, -93701);
          bvec2 _GLF_SWITCH_3_2v, _GLF_SWITCH_3_3v;
          (ivec3(-11578, -28716, -19657) & 39204);
         }
        }
       else
        {
         ivec3(-35017, 54784, -17599);
        }
       while(true)
        {
         bvec3 _GLF_SWITCH_3_4v, _GLF_SWITCH_3_5v, _GLF_SWITCH_3_6v;
         mat4x2 _GLF_SWITCH_3_7v, _GLF_SWITCH_3_8v[7], _GLF_SWITCH_3_9v[43];
         {
         }
         for(mat4x3 _GLF_SWITCH_3_10v; (true != false); ivec2(-68165, -58891))
          {
           bool _GLF_SWITCH_3_11v, _GLF_SWITCH_3_12v, _GLF_SWITCH_3_13v[13];
           86860;
           ;
           lessThanEqual(ivec4(-30888, 30570, 48570, -9119), (-98763 * ivec4(-67805, 73546, 92651, 99927)));
           float _GLF_SWITCH_3_14v;
           bvec2 _GLF_SWITCH_3_15v[7], _GLF_SWITCH_3_16v, _GLF_SWITCH_3_17v;
           uvec2 _GLF_SWITCH_3_18v;
          }
        }
       for(       mat3(1.7, 0.3, -952.052, 7.4, 36.73, -4714.1303, 72.96, -3527.8973, 3415.7619);
 false; bvec3(true, true, true).zy)
        {
         if(false)
          {
           vec4 _GLF_SWITCH_3_19v[74], _GLF_SWITCH_3_20v[12], _GLF_SWITCH_3_21v;
           min(pow(_GLF_SWITCH_3_21v, vec4(8.8, -7322.4468, 2047.2767, 3135.1524)), inversesqrt(5.8));
           bvec3 _GLF_SWITCH_3_22v[83], _GLF_SWITCH_3_23v, _GLF_SWITCH_3_24v;
           float _GLF_SWITCH_3_25v[1], _GLF_SWITCH_3_26v;
          }
         else
          {
           uvec3(39504u, 155472u, 3959u)[1];
           ;
           refract(vec4(28.05, -0.1, 80.95, 9053.6614), vec4(-362.064, -7.9, 205.529, 1209.0120), abs(-9.6));
           vec3 _GLF_SWITCH_3_27v[95], _GLF_SWITCH_3_28v[25];
           mat3x2 _GLF_SWITCH_3_29v[3], _GLF_SWITCH_3_30v;
           (mat4x3(-5.3, 5.0, 98.39, -3.3, -395.330, 29.66, -7176.9610, -8.5, 6.7, -4.8, -9.4, 0.5) + mat4x3(28.85, 25.88, -14.13, 7766.5521, -1448.9157, 7.2, -62.16, 43.48, -4.6, -5.4, -628.096, -6.6));
           (uvec2(102083u, 119912u) & uvec2(70095u, 25976u));
           2980;
           false;
          }
         mat4x2 _GLF_SWITCH_3_31v, _GLF_SWITCH_3_32v[22], _GLF_SWITCH_3_33v;
         {
          uint(7.8);
          ivec4(-51247, -78509, 64425, -91737);
          bvec4 _GLF_SWITCH_3_34v;
          uvec2 _GLF_SWITCH_3_35v, _GLF_SWITCH_3_36v, _GLF_SWITCH_3_37v;
          mat2 _GLF_SWITCH_3_38v[91];
          mat2x4 _GLF_SWITCH_3_39v, _GLF_SWITCH_3_40v, _GLF_SWITCH_3_41v;
          ;
          (_GLF_SWITCH_3_36v == uvec2(27894u, 47802u));
          ivec4(28149, 67643, -28184, 98784);
         }
         if((max(vec2(-69.94, 967.125), -81.11) == vec2(-3.1, -0.6)))
          {
           vec3 _GLF_SWITCH_3_42v;
           bvec2 _GLF_SWITCH_3_43v;
           bvec4 _GLF_SWITCH_3_44v, _GLF_SWITCH_3_45v, _GLF_SWITCH_3_46v;
           (uvec2(127156u, 151428u) >> (uvec3(59407u, 192291u, 199845u) >> uvec3(31645u, 27346u, 145614u)).z);
           _GLF_SWITCH_3_45v;
           (isnan(-8.1) ? mat3x2(4.9, 8.6, -4.8, 3489.7656, -12.05, -3.3) : mat3x2(701.738, 332.056, -3.8, 2.8, -2967.4677, -979.055));
           ;
           mat3x4(mat3(7073.8632, -929.175, 524.421, 8.1, -3005.3184, -7049.6831, 516.051, 6333.9543, -4959.0671));
           mat2x3 _GLF_SWITCH_3_47v, _GLF_SWITCH_3_48v[90], _GLF_SWITCH_3_49v;
          }
         uvec2 _GLF_SWITCH_3_50v[14], _GLF_SWITCH_3_51v;
         bvec2 _GLF_SWITCH_3_52v[79], _GLF_SWITCH_3_53v[19], _GLF_SWITCH_3_54v;
         for(bvec4 _GLF_SWITCH_3_55v, _GLF_SWITCH_3_56v; (uvec4(133187u, 62876u, 103796u, 35421u) != (uvec4(105218u, 58346u, 16123u, 183468u) >> uvec4(181578u, 2462u, 108872u, 137156u))); ivec3(-53338, -26676, 92946))
          {
           (workgroup_size + (workgroup_size / clamp(uvec4(170967u, 129632u, 143212u, 114863u), num_workgroup, subgroup_local_id)));
           mat2x3 _GLF_SWITCH_3_57v, _GLF_SWITCH_3_58v[50], _GLF_SWITCH_3_59v;
           int _GLF_SWITCH_3_60v, _GLF_SWITCH_3_61v, _GLF_SWITCH_3_62v[52];
           int _GLF_SWITCH_3_63v[20], _GLF_SWITCH_3_64v[99], _GLF_SWITCH_3_65v[26];
           vec2 _GLF_SWITCH_3_66v[71];
           (uvec4(170545u, 115192u, 69148u, 55079u) | (subgroup_local_id ^ num_workgroup));
           _GLF_SWITCH_3_54v;
          }
         int _GLF_SWITCH_3_67v[48], _GLF_SWITCH_3_68v, _GLF_SWITCH_3_69v[40];
        }
       bvec2(true, true);
       uvec2 _GLF_SWITCH_3_70v;
       vec3 _GLF_SWITCH_3_71v, _GLF_SWITCH_3_72v;
       for(ivec3 _GLF_SWITCH_3_73v, _GLF_SWITCH_3_74v, _GLF_SWITCH_3_75v; false; bitfieldInsert((ivec3(36668, -92431, 22279) - _GLF_SWITCH_3_75v), clamp(ivec3(-34034, 16191, -28821), 3565, -48084), -78961, (+ 29901)))
        {
         greaterThan(tan(vec3(3.9, -505.422, 46.68)), vec3(-5328.5024, 70.88, -248.008));
         uvec3(64380u, 157969u, 111394u);
         if(true)
          {
           (mat2(-7390.8803, -0.2, -9.1, -9.3) + dot(vec4(81.75, 4.8, 434.184, 204.020), vec4(-1.7, 8.1, 49.42, 20.57)));
          }
         for(mat2x3 _GLF_SWITCH_3_76v[18]; false; bvec2(true, true))
          {
           (-98.23 / mat3x2(matrixCompMult(mat2(4.1, -9.8, 2.6, 8749.4666), mat2(-921.059, -1.7, 9.9, -8.0))));
           greaterThanEqual(_GLF_SWITCH_3_75v, ivec3(53356));
           uvec4 _GLF_SWITCH_3_77v, _GLF_SWITCH_3_78v, _GLF_SWITCH_3_79v[97];
           ((ivec2(-22997, -40735) - 26977));
           (717.358 + mat3x4(-68.38, 2.7, -6.3, -816.128, -90.11, 6.7, 9.3, 453.258, 3.6, -1001.4142, 48.80, -2951.5142));
           uvec4(166115u, 90261u, 169947u, 101578u);
           ivec3 _GLF_SWITCH_3_80v, _GLF_SWITCH_3_81v;
           mat4x3(2.8, -924.603, 624.900, -45.93, 30.32, 6.4, -447.383, 1158.9380, 73.34, 658.995, 269.776, -97.70);
           (mat3x4(-0.6, -1221.1877, -4644.6055, -52.76, -46.03, 966.819, 15.15, -757.599, 0.1, -67.59, -455.662, -18.57) / mat3x4(-8306.9002, -177.947, -97.78, 3574.9769, -613.056, 35.44, -76.63, -14.05, 54.07, -67.69, -735.928, 124.892));
          }
        }
       clamp(ivec4(31020, -10676, 62745, -86078), ivec4(57402, 73748, 15834, 55328), ivec4(-96640, -79455, 72118, 91589));
      }
     case 0:
     case 21:
     if(_GLF_DEAD(false))
      barrier();
     case 40:
     case 25:
     case 83:
     return;
     break;
     case 57:
     mat2x3(9.5, 2413.9275, -236.532, 5.8, 2.7, -521.399)[1];
     default:
     1;
    }
  }
 _GLF_struct_75 _GLF_struct_replacement_75 = _GLF_struct_75(mat3(1.0), gl_WorkGroupID.x);
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_75.workgroup_id;
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     switch(_GLF_SWITCH(0))
      {
       case 99:
       ivec3(-93298, 73367, -36928);
       case 0:
       case 26:
       if(_GLF_DEAD(false))
        barrier();
       case 73:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         barrier();
        }
       case 58:
       case 51:
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) ^ 0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 ^ (int(5)))))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       else
        {
        }
       break;
       default:
       1;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_36.subgroup_id * _GLF_struct_replacement_37.subgroup_size + subgroup_local_id;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       switch(_GLF_SWITCH(0))
        {
         case 0:
         case 98:
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         case 32:
         for(_GLF_struct_58 _GLF_struct_replacement_58 = _GLF_struct_58(1, 1, uvec3(1u), _GLF_struct_57(_GLF_struct_52(mat3(1.0), mat4(1.0), 1u, 1u, mat4x2(1.0), true, mat2(1.0)), _GLF_struct_53(vec2(1.0), mat2x4(1.0), 1u, mat3x2(1.0), bvec4(true)), _GLF_struct_54(bvec4(true), mat3x2(1.0), 1u, uvec4(1u), 1.0), _GLF_struct_55(uvec3(1u), mat2x3(1.0), mat3x4(1.0), mat3x4(1.0)), _GLF_struct_56(mat4x2(1.0), mat2x4(1.0), mat4(1.0)), ivec4(1), vec4(1.0)), vec2(1.0)); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_58._injected_loop_counter != ((0 | 0) >> _GLF_IDENTITY(int(2), int(2)))); _GLF_struct_replacement_58._injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             switch(_GLF_SWITCH(0))
              {
               case 43:
               ivec2 _GLF_SWITCH_3_0v;
               case 0:
               case 62:
               case 47:
               case 51:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               case 66:
               case 74:
               case 42:
               case 25:
               return;
               break;
               case 64:
               ;
               case 58:
               uvec2(99140u, 147393u);
               default:
               1;
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         break;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         default:
         1;
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_36.subgroup_id * _GLF_struct_replacement_37.subgroup_size + ((subgroup_local_id + 1) % _GLF_struct_replacement_37.subgroup_size);
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_2(_GLF_struct_0(bvec4(true), mat2x3(1.0), 1.0, bvec3(true)), _GLF_struct_1(uvec3(1u), vec4(1.0)), uvec2(1u), vec4(1.0)), _GLF_struct_5(_GLF_struct_3(ivec3(1)), mat2x3(1.0), _GLF_struct_4(vec3(1.0), bvec4(true), uvec4(1u), 1, true)), vec4(1.0), _GLF_struct_7(mat3x2(1.0), mat4x2(1.0), _GLF_struct_6(true, ivec3(1), mat3x2(1.0), 1, vec3(1.0), bvec2(true)), mat4x3(1.0)), atomicLoad(buf[virtual_gid], 4, 64, 0), bvec3(true));
 for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 do
  {
   switch(_GLF_SWITCH(0))
    {
     case 99:
     if((-2.8 != -6.3))
      {
       ;
       float _GLF_SWITCH_2_0v;
       ivec3(-70286, -26518, -6788);
       for(       (uvec4(82501u, 25802u, 121713u, 117090u) % uvec4(121729u, 146213u, 100997u, 114630u));
 (184229u < _GLF_struct_replacement_75.workgroup_id); mat3x2(124.216, -55.56, -59.72, 511.162, -0.3, 8.0))
        {
         false;
         matrixCompMult(mat2(-1.7, 4.2, -1.3, 8280.7845), inverse(mat2(8.0, 53.23, 5.6, -8966.2000)));
         uvec3(139948u, 162800u, 109517u);
         ;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         while((_GLF_SWITCH_2_0v < 8338.4581))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             (mat4x3(166.374, -0.0, -8.3, -1.7, 7.2, -444.568, 2.9, -394.565, -257.969, 611.328, 1.5, 8.5) * (mat4(621.053, 59.89, 6200.2021, 5.1, -7.9, -2.7, 3.6, 20.37, 6700.8698, 4.0, 9607.0639, 192.491, -96.61, 46.50, 94.02, -22.64) + mat4(-6.7, -8598.1476, 5.7, 41.61, -3198.4297, -8.3, -1.1, -83.11, 42.41, 32.49, -38.18, -7.0, -5.8, 27.84, -3.0, 1363.7824)));
            }
           max(vec4(26.94, -387.305, 7338.0276, 1.4), vec4(2.0, -64.19, -8.7, 6.2));
           (mat3x4(3.3, -4.1, 637.105, -1.3, -998.059, 4.0, 8.7, -5827.8636, -8402.6980, 2.7, -5.7, 86.45) + cos(370.841));
           mat3x2(951.369, -6.1, 33.03, -5.7, 2772.1208, 75.48);
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
             ;
            }
           else
            {
            }
          }
         {
         }
         (uvec2(96786u, 72379u) ^ uvec2(197499u, 18092u));
        }
      }
     case 0:
     atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
     case 27:
     if(_GLF_DEAD(false))
      barrier();
     break;
     default:
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       1;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(subgroup_local_id + 1 < _GLF_struct_replacement_37.subgroup_size)
    {
     atomicStore(checker[virtual_gid], _GLF_struct_replacement_8.read, 4, 64, 4);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       subgroupAll(false);
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     switch(_GLF_SWITCH(0))
      {
       case 95:
       if((mat4x2(107.087, -70.76, -0.2, 9.8, -8.6, -166.696, 2.6, -487.395) != mat4x2(-2794.7572, 49.97, 5.5, 2026.1980, -1.6, -1752.5519, -607.443, 53.84)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         while((bvec2(false, true) == bvec2(true, true)))
          {
           if(false)
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                return;
              }
             while(_GLF_WRAPPED_LOOP(false));
             _GLF_struct_20 _GLF_struct_replacement_20;
             if(_GLF_DEAD(false))
              continue;
             ivec2 _GLF_SWITCH_0_1v[95], _GLF_SWITCH_0_2v, _GLF_SWITCH_0_3v;
             mat3((mat4(-9149.1443, -267.979, -24.03, 1.7, 61.84, -233.301, -9.7, -96.65, -331.199, -578.018, -507.465, 2.3, -16.75, 1.7, -2479.0645, -542.192) - mat4(-92.97, 1574.0901, 2.3, 4.7, 81.52, -634.952, 772.509, -5.9, -1020.9544, -699.348, 9319.8924, -8.4, 9.1, 768.018, 2115.1015, 51.04)));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              barrier();
             uvec3 _GLF_SWITCH_0_4v;
             bool _GLF_SWITCH_0_5v, _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v;
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
              {
               switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                {
                 case 49:
                 mat3x4(-7125.4028, -8490.0247, 3246.7396, 8729.5219, -6.5, 415.208, -6666.1934, -663.780, 7.7, 702.556, 4.4, 2.3);
                 case 0:
                 case 91:
                 case 55:
                 case 16:
                 bvec3(true, true, false);
                 case 99:
                 case 72:
                 case 5:
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                 case 53:
                 (mat4(-7.9, 20.27, -8631.2729, 2.4, 705.678, -8.1, 1293.5999, 4.5, -19.24, 0.6, -6.9, -49.27, -9.9, 943.575, -5635.1853, 153.159) * (mat2x4(7.8, -98.29, -0.1, 6.8, 4.6, -8725.5831, -2.3, -208.775) * mat4x2(75.76, 51.79, -915.687, 735.621, 70.66, 438.102, 2917.5228, 516.117)));
                 case 60:
                 (ivec2(42755, -29590) * _GLF_SWITCH_0_3v);
                 default:
                 1;
                }
              }
             trunc(injectionSwitch);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              return;
             mat3x2((mat2(1276.5635, -8.1, -73.58, 4.5) - -3.2));
             ;
            }
           mat2x4 _GLF_SWITCH_0_8v;
          }
         if(false)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 42:
                   mat2((mat3x4(-511.472, 6.3, 1453.7364, 36.31, 7.7, -60.02, 5787.1854, -7751.9265, -43.68, 543.996, -9.2, -3.4) / -3.5));
                   case 0:
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     return;
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   return;
                   if(_GLF_DEAD(false))
                    barrier();
                   break;
                   default:
                   do
                    {
                     1;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           for(float _GLF_SWITCH_0_9v, _GLF_SWITCH_0_10v; false; ivec3(-29702, 8247, -17740))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(2), int(2)))))
                {
                 case 59:
                 uint _GLF_SWITCH_3_0v[51], _GLF_SWITCH_3_1v[61], _GLF_SWITCH_3_2v;
                 case 3:
                 vec2 _GLF_SWITCH_3_3v[45], _GLF_SWITCH_3_4v, _GLF_SWITCH_3_5v;
                 case 0:
                 case 18:
                 case 9:
                 case 36:
                 case 32:
                 ivec2(-16510, 43080);
                 break;
                 case 69:
                 ivec3(90817, 8474, -63278);
                 default:
                 1;
                }
              }
             else
              {
               switch(_GLF_SWITCH(0))
                {
                 case 61:
                 (ivec3(70714, -56363, 50936) ^ ivec3(-3400, -46483, -43810));
                 case 0:
                 case 65:
                 case 94:
                 case 75:
                 case 11:
                 case 24:
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                 default:
                 1;
                }
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
             bvec4(false, true, false, true).pq;
             if(_GLF_DEAD(false))
              barrier();
             vec4 _GLF_SWITCH_0_11v[66];
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               continue;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 | (int(0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (((1 | 0) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           min(uvec3(186588u, 133262u, 6976u), uvec3(101059u, 132414u, 106744u));
           if(true)
            {
             mat3x4 _GLF_SWITCH_0_12v[76], _GLF_SWITCH_0_13v, _GLF_SWITCH_0_14v;
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             do
              {
               greaterThan(((-30442 / -87813) ^ ivec4(-4542, 8099, -36272, -73205)), (ivec4(-95384, -86913, -7932, -58139) + 25694));
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                break;
               for(_GLF_struct_83 _GLF_struct_replacement_83 = _GLF_struct_83((((1 | 0) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1))), bvec2(true), _GLF_struct_76(ivec3(1)), mat3(1.0), _GLF_struct_78(_GLF_struct_77(mat2(1.0), bvec4(true), mat2x3(1.0), 1u, bvec2(true), mat4x2(1.0))), _GLF_struct_82(uvec3(1u), mat2x3(1.0), _GLF_struct_79(true, 1u, ivec2(1), ivec4(1), mat2(1.0), vec2(1.0), uvec3(1u)), _GLF_struct_80(mat2(1.0), mat4(1.0)), _GLF_struct_81(vec2(1.0)))); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_83._injected_loop_counter > 0); _GLF_struct_replacement_83._injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   bvec4(true, false, true, true);
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 clamp(uvec4(111107u, 7506u, 51069u, 104222u), packHalf2x16(injectionSwitch), workgroup_size);
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             do
              {
               mat4x3(-5.9, -1.8, 1579.3206, -9.7, -166.907, 43.12, -6.1, 7914.0447, -4.3, -5.6, -622.280, -58.19);
              }
             while(_GLF_WRAPPED_LOOP(false));
             mat2 _GLF_SWITCH_0_15v[54], _GLF_SWITCH_0_16v;
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
              {
               (num_workgroup % (uvec3(63880u, 7815u, 117356u) & uvec3(88163u, 9071u, 152070u)));
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(5), int(5)))))
              {
               case 67:
               uint _GLF_SWITCH_3_0v[39], _GLF_SWITCH_3_1v;
               case 0:
               case 1:
               case 27:
               do
                {
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               case 33:
               barrier();
               break;
               default:
               1;
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
                barrier();
              }
            }
           uvec2(196725u, 89413u);
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           mat4 _GLF_SWITCH_0_17v;
          }
         float _GLF_SWITCH_0_18v[16], _GLF_SWITCH_0_19v, _GLF_SWITCH_0_20v[1];
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         (uvec2(105940u, 12785u) & (virtual_gid & uvec2(147840u, 124596u)));
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             return;
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         {
         }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             ivec4(-25856, 25544, 63505, 7954);
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         uvec2(87821u, 101818u);
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         while((uvec3(161930u, 34433u, 32551u) != uvec3(57797u, 61273u, 134658u)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           switch(_GLF_SWITCH(0))
            {
             case 97:
             (5.0 < -2.6);
             case 0:
             case 20:
             case 65:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             case 77:
             case 96:
             case 2:
             case 44:
             case 78:
             case 30:
             case 92:
             if(_GLF_DEAD(false))
              barrier();
             bool _GLF_SWITCH_0_21v;
             break;
             default:
             1;
            }
          }
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           mat3(6.0, 762.525, -0.0, -8.6, 40.95, 1.4, 81.31, -4.3, -0.7);
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             do
              {
               mix(uvec3(105953u, 159957u, 11605u), uvec3(190195u, 171849u, 33749u), bvec3(false, true, true)).p;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             barrier();
            }
           if(_GLF_DEAD(false))
            continue;
           while(false)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                barrier();
               barrier();
              }
            }
          }
         while(false);
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if((ivec3(-87915, -96194, 5969) == ivec3(3857, -2561, -26315)))
            {
             812.360;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
                  {
                  }
                 else
                  {
                   return;
                  }
                }
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             for(uint _GLF_SWITCH_0_22v, _GLF_SWITCH_0_23v[46]; true; uvec4(107451u, 62031u, 184015u, 82033u)[0])
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  continue;
                }
               if(_GLF_DEAD(false))
                barrier();
               bvec3 _GLF_SWITCH_0_24v, _GLF_SWITCH_0_25v;
               int _GLF_SWITCH_0_26v;
               if(_GLF_DEAD(false))
                barrier();
               ivec4 _GLF_SWITCH_0_27v[59];
               true;
              }
             if(_GLF_DEAD(false))
              barrier();
             {
              if(_GLF_DEAD(false))
               return;
              bvec4 _GLF_SWITCH_0_28v[70], _GLF_SWITCH_0_29v, _GLF_SWITCH_0_30v;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_WRAPPED_IF_FALSE(false))
               {
                switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                 {
                  case 80:
                  vec4(-0.1, 1.2, injectionSwitch).xz;
                  case 0:
                  case 26:
                  case 95:
                  case 5:
                  case 81:
                  if(_GLF_DEAD(false))
                   barrier();
                  break;
                  case 4:
                  vec3(vec4(6.3, 6.8, -747.250, 2.8));
                  case 72:
                  float _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v;
                  default:
                  1;
                 }
               }
              else
               {
                switch(_GLF_SWITCH(0))
                 {
                  case 0:
                  case 31:
                  if(_GLF_DEAD(false))
                   barrier();
                  case 35:
                  case 63:
                  if(_GLF_DEAD(false))
                   barrier();
                  case 14:
                  case 13:
                  case 39:
                  uvec4(uvec2(37091u, 66315u), _GLF_struct_replacement_75.workgroup_id, _GLF_struct_replacement_36.subgroup_id);
                  break;
                  default:
                  1;
                 }
               }
              if(_GLF_DEAD(false))
               barrier();
              float _GLF_SWITCH_0_31v, _GLF_SWITCH_0_32v;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(false))
               return;
              if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
               {
                do
                 {
                  true;
                 }
                while(_GLF_WRAPPED_LOOP(false));
                if(_GLF_DEAD(false))
                 barrier();
               }
              else
               {
               }
              for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1))); _injected_loop_counter ++)
               {
                ;
               }
              _GLF_struct_replacement_75.workgroup_id;
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               {
                do
                 {
                  return;
                 }
                while(_GLF_WRAPPED_LOOP(false));
               }
              ivec2 _GLF_SWITCH_0_33v, _GLF_SWITCH_0_34v;
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                   }
                  else
                   {
                    return;
                   }
                 }
                if(_GLF_DEAD(false))
                 barrier();
                return;
               }
              if(_GLF_DEAD(false))
               barrier();
              vec3 _GLF_SWITCH_0_35v, _GLF_SWITCH_0_36v[65], _GLF_SWITCH_0_37v;
              mat4x3((mat2(5465.8472, 6800.0142, 6.5, -5829.4930) * mat4x2(354.612, 4.3, 4.1, -5.8, -3.7, 948.681, 2909.8398, 301.093)));
             }
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
                {
                }
               else
                {
                 uvec2(101274u, 56843u);
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             for(mat3x2 _GLF_SWITCH_0_38v; (uvec2(186286u, 143965u) != uvec2(29907u, 188407u)); outerProduct(vec2(-53.84, -4.5), injectionSwitch))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     return;
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               _GLF_struct_13 _GLF_struct_replacement_13;
              }
             {
              if(_GLF_DEAD(false))
               barrier();
              switch(_GLF_SWITCH(0))
               {
                case 81:
                if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                 }
                else
                 {
                  ;
                 }
                case 66:
                uvec2 _GLF_SWITCH_1_0v[55], _GLF_SWITCH_1_1v[38];
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    barrier();
                   }
                  else
                   {
                   }
                 }
                if(_GLF_DEAD(false))
                 barrier();
                case 0:
                case 84:
                case 40:
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 barrier();
                case 32:
                case 3:
                if(_GLF_DEAD(false))
                 return;
                case 88:
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                case 17:
                if(_GLF_DEAD(false))
                 barrier();
                lessThan(vec2(-83.37, 9486.7084), vec2(3.0, 78.43));
                case 61:
                if(_GLF_DEAD(false))
                 barrier();
                case 58:
                case 38:
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  switch(_GLF_SWITCH((0 & 62917)))
                   {
                    case 36:
                    vec2 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v[18];
                    case 0:
                    case 31:
                    if(_GLF_DEAD(false))
                     barrier();
                    case 72:
                    case 11:
                    if(_GLF_DEAD(false))
                     barrier();
                    case 86:
                    if(_GLF_DEAD(false))
                     return;
                    case 23:
                    barrier();
                    break;
                    case 12:
                    (ivec3(35236, -8004, 14083) / (48154 << -52296));
                    default:
                    1;
                   }
                 }
                break;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                default:
                1;
               }
             }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), (int(5)) / 1)) | 0)))); _injected_loop_counter --)
                {
                 return;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             ;
            }
          }
        }
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
        }
       case 79:
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
        }
       vec3(-8670.8418, 8.6, 7559.2901);
       if(_GLF_DEAD(false))
        barrier();
       case 0:
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
          {
           return;
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
            {
             for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             return;
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       case 77:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             switch(_GLF_SWITCH(0))
              {
               case 63:
               int _GLF_SWITCH_3_0v[66], _GLF_SWITCH_3_1v[61], _GLF_SWITCH_3_2v[60];
               case 0:
               case 99:
               case 68:
               case 75:
               case 84:
               case 12:
               case 76:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               break;
               case 34:
               bvec4 _GLF_SWITCH_3_3v, _GLF_SWITCH_3_4v;
               case 51:
               vec4 _GLF_SWITCH_3_5v, _GLF_SWITCH_3_6v[35];
               default:
               1;
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             switch(_GLF_SWITCH((1 ^ 1)))
              {
               case 77:
               vec4(7.5, -65.49, -9.0, -6223.4257);
               case 0:
               case 22:
               case 90:
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               break;
               case 98:
               ivec3(-96211, 16623, 8189);
               default:
               1;
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
           atomicStore(buf[virtual_gid], _GLF_struct_replacement_8.read, 4, 64, 4);
          }
         if(_GLF_DEAD(false))
          {
           switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-58150) : int(6)))))))
            {
             case 0:
             case 34:
             case 11:
             if(_GLF_DEAD(false))
              barrier();
             case 27:
             barrier();
             break;
             case 39:
             mat2x3(2.1, -40.02, 71.39, 2.3, 90.09, -893.303);
             default:
             1;
            }
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), int(ivec4(int(0), 0, 0, 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
            {
             switch(_GLF_SWITCH(0))
              {
               case 94:
               mat4x3 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v;
               case 82:
               ;
               case 0:
               case 6:
               case 81:
               return;
               break;
               case 42:
               ;
               case 17:
               bvec3(true, true, false);
               default:
               1;
              }
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         switch(_GLF_SWITCH(0))
          {
           case 87:
           bvec4(false, true, true, true);
           case 35:
           if(_GLF_DEAD(false))
            barrier();
           bvec4(false, true, true, true);
           case 0:
           case 85:
           case 13:
           case 9:
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            barrier();
           case 11:
           case 65:
           case 26:
           case 45:
           case 8:
           case 23:
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           break;
           default:
           1;
          }
        }
       case 23:
       subgroupAll(true);
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           switch(_GLF_SWITCH(0))
            {
             case 28:
             vec3 _GLF_SWITCH_3_0v[74], _GLF_SWITCH_3_1v[61], _GLF_SWITCH_3_2v;
             case 88:
             mat3x4 _GLF_SWITCH_3_3v, _GLF_SWITCH_3_4v[47];
             case 0:
             case 96:
             case 49:
             case 30:
             return;
             case 16:
             case 99:
             case 56:
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             break;
             default:
             1;
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       break;
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       case 49:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       true;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       case 68:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       {
        for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
         }
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         {
          do
           {
            if(_GLF_WRAPPED_IF_TRUE(true))
             {
              if(_GLF_DEAD(false))
               {
                switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(5), int(5)))))
                 {
                  case 69:
                  mat2 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v[10];
                  case 0:
                  case 99:
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    barrier();
                    if(_GLF_DEAD(false))
                     barrier();
                   }
                  else
                   {
                   }
                  break;
                  default:
                  1;
                 }
               }
             }
            else
             {
             }
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              break;
             }
            return;
           }
          while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
          if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, false, true)))))
           barrier();
         }
        mat4x2(566.276, -3.9, -7.5, -7496.8059, -7.0, -1.3, -11.87, -217.198);
        while(true)
         {
          if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
           barrier();
          if(_GLF_DEAD(false))
           {
            do
             {
              barrier();
             }
            while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
           }
         }
        if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         {
         }
        else
         {
          do
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               barrier();
              return;
             }
           }
          while(_GLF_WRAPPED_LOOP(false));
         }
        for(_GLF_struct_84 _GLF_struct_replacement_84 = _GLF_struct_84(0, 1); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_84._injected_loop_counter != 1); _GLF_struct_replacement_84._injected_loop_counter ++)
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            switch(_GLF_SWITCH(0))
             {
              case 66:
              ;
              case 0:
              if(_GLF_DEAD(false))
               barrier();
              case 84:
              barrier();
              break;
              case 8:
              ivec3 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v;
              default:
              1;
             }
           }
          mat2 _GLF_SWITCH_0_40v, _GLF_SWITCH_0_41v;
          if(_GLF_DEAD(false))
           {
            do
             {
              barrier();
             }
            while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
            if(_GLF_DEAD(false))
             barrier();
           }
          for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
           {
            if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
             barrier();
            vec3(-3.0, 77.85, 3466.8833);
            if(_GLF_DEAD(false))
             barrier();
           }
          do
           {
            while(false)
             {
              uvec4 _GLF_SWITCH_0_42v, _GLF_SWITCH_0_43v, _GLF_SWITCH_0_44v;
              mat2x3 _GLF_SWITCH_0_45v, _GLF_SWITCH_0_46v;
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_DEAD(false))
               {
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                else
                 {
                  if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                   }
                  else
                   {
                    switch(_GLF_SWITCH(0))
                     {
                      case 79:
                      bvec2(true, false);
                      case 0:
                      case 85:
                      case 95:
                      case 1:
                      case 37:
                      case 24:
                      case 12:
                      case 57:
                      barrier();
                      break;
                      default:
                      1;
                     }
                   }
                 }
               }
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               break;
              ((mat3(-8268.7413, 26.11, 2.7, 4.7, 34.41, -57.57, -23.31, -4.7, 4.9) * vec3(-3831.9102, -5244.3386, -3.2)) - vec3(112.532, 0.9, -3.2));
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  return;
                 }
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               continue;
              min(uvec2(168945u, 50240u), (uvec2(102362u, 199242u) ^ uvec2(167469u, 117274u))).tsss;
              if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
               return;
              do
               {
                if(_GLF_DEAD(false))
                 barrier();
               }
              while(_GLF_WRAPPED_LOOP(false));
              if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
               barrier();
              if(_GLF_DEAD(false))
               continue;
              bvec3(false, true, true);
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               return;
              mat2x4(mat3(mat4x3(-6.3, -8.3, 58.01, 1900.1328, 5687.7683, -2853.6468, -3203.2526, -412.706, -9.1, -0.9, 5.6, -73.12)));
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                return;
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               continue;
              if(_GLF_DEAD(false))
               barrier();
              subgroup_local_id;
             }
           }
          while(_GLF_WRAPPED_LOOP(false));
          ivec3 _GLF_SWITCH_0_47v[19], _GLF_SWITCH_0_48v, _GLF_SWITCH_0_49v;
         }
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
           {
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            return;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
           }
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_WRAPPED_IF_FALSE(false))
           {
           }
          else
           {
            return;
           }
          if(_GLF_DEAD(false))
           barrier();
         }
        uvec3 _GLF_SWITCH_0_50v, _GLF_SWITCH_0_51v[6];
        for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0, 0 | (0)) << _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
         {
          for(bvec4 _GLF_SWITCH_0_52v; all(bvec4(false, true, true, true)); _GLF_SWITCH_0_50v)
           {
            if(_GLF_DEAD(false))
             barrier();
            mat4 _GLF_SWITCH_0_53v[15], _GLF_SWITCH_0_54v, _GLF_SWITCH_0_55v;
            if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
             continue;
            if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
             {
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                barrier();
                if(_GLF_DEAD(false))
                 barrier();
               }
              else
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                   barrier();
                  barrier();
                 }
               }
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               continue;
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             break;
            vec4(-6.2, 9.2, 9.6, 9.0);
           }
         }
        bool _GLF_SWITCH_0_56v;
        for(        mat4(mat3(3.2, -6812.7911, -4758.0856, -6.0, -7.4, 7292.4375, -369.668, 7.8, 8.7));
 (true && false); mat2x3(7.2, -7582.4851, 52.93, -3.1, -2.1, 2.8))
         {
          if(_GLF_DEAD(false))
           barrier();
          for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
           {
            ;
           }
          ivec3(-98580, 82388, 37049);
          if(_GLF_DEAD(false))
           {
            do
             {
              return;
             }
            while(_GLF_WRAPPED_LOOP(false));
           }
          ;
          do
           {
            if(_GLF_DEAD(false))
             barrier();
           }
          while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          ivec4 _GLF_SWITCH_0_57v, _GLF_SWITCH_0_58v[61];
          for(          vec3(-926.498, 577.454, 2.2);
 false; mat2x3(6.5, 8.5, 50.21, 95.94, -3.4, 0.0))
           {
           }
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
           }
          else
           {
            switch(_GLF_SWITCH(_GLF_IDENTITY((0 & int(false)), max((0 & int(false)), (0 & int(false))))))
             {
              case 0:
              case 84:
              case 66:
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  barrier();
                 }
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  barrier();
                 }
               }
              case 47:
              case 85:
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(false))
               continue;
              break;
              case 80:
              for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
               {
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 return;
               }
              int _GLF_SWITCH_1_0v[39];
              default:
              if(_GLF_DEAD(false))
               return;
              1;
              if(_GLF_DEAD(false))
               barrier();
             }
            if(_GLF_DEAD(false))
             barrier();
           }
          if(false)
           {
            vec2 _GLF_SWITCH_0_59v[93], _GLF_SWITCH_0_60v[23];
            if(_GLF_DEAD(false))
             continue;
            float _GLF_SWITCH_0_61v, _GLF_SWITCH_0_62v;
           }
          else
           {
            _GLF_SWITCH_0_50v;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            bvec2(true, false);
            if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
             barrier();
            if(_GLF_DEAD(false))
             {
              for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
               {
                for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  return;
                 }
               }
             }
            if(_GLF_DEAD(false))
             barrier();
            do
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              do
               {
                clamp(uvec2(14363u, 72377u), virtual_gid, _GLF_struct_replacement_36.subgroup_id).x;
               }
              while(_GLF_WRAPPED_LOOP(false));
             }
            while(_GLF_WRAPPED_LOOP(false));
            atomicAdd(_GLF_struct_replacement_36.subgroup_id, _GLF_SWITCH_0_50v[1]);
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_WRAPPED_IF_TRUE(true))
             {
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                ;
               }
              else
               {
               }
             }
            else
             {
             }
            mat4(-102.616, 431.009, -4423.4465, 109.657, -70.24, 0.5, 810.658, 3324.8566, -393.550, 193.564, 738.981, -86.87, 8561.1534, -851.333, -14.28, -9.2);
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
             {
              ivec3(-33237, 53241, -34834).rgbr;
             }
            else
             {
              if(_GLF_DEAD(false))
               barrier();
             }
            _GLF_struct_29 _GLF_struct_replacement_29;
            if(_GLF_DEAD(false))
             return;
            if(_GLF_WRAPPED_IF_TRUE(true))
             {
              bvec2(true, true);
             }
            else
             {
             }
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             continue;
           }
          do
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              switch(_GLF_SWITCH(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(43913) : 0))))
               {
                case 94:
                mat2(3626.3066, 513.238, 8.0, -4.4);
                case 0:
                case 12:
                case 13:
                case 99:
                case 82:
                case 79:
                case 58:
                case 51:
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  switch(_GLF_SWITCH(_GLF_IDENTITY(0, max(0, 0))))
                   {
                    case 0:
                    case 38:
                    case 64:
                    case 61:
                    if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
                     {
                     }
                    else
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                      if(_GLF_DEAD(false))
                       barrier();
                     }
                    case 48:
                    case 29:
                    case 76:
                    case 14:
                    case 28:
                    do
                     {
                      if(_GLF_DEAD(false))
                       break;
                      barrier();
                     }
                    while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, true)))));
                    break;
                    case 27:
                    bvec2 _GLF_SWITCH_3_0v;
                    case 73:
                    ;
                    default:
                    1;
                   }
                 }
                else
                 {
                 }
                break;
                case 95:
                isinf(vec3(8.6, -37.89, -8.0));
                case 18:
                uvec3 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v[63];
                default:
                1;
               }
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
             continue;
           }
          while(_GLF_WRAPPED_LOOP(false));
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if((packSnorm4x8(vec4(43.31, 2.7, -18.30, 4.4)) < clamp(172948u, (virtual_gid - subgroup_local_id), packSnorm2x16(injectionSwitch))))
           {
            if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             break;
            if(_GLF_WRAPPED_IF_TRUE(true))
             {
              mat3x2(-0.0, 8.5, 7094.2655, 0.2, 795.836, 717.007);
             }
            else
             {
             }
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
               barrier();
              continue;
              if(_GLF_DEAD(false))
               barrier();
             }
            if(_GLF_DEAD(false))
             barrier();
            uvec3(135518u, 25960u, 98537u);
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            mat2 _GLF_SWITCH_0_64v;
            bvec4 _GLF_SWITCH_0_65v;
            ;
           }
          else
           {
           }
          if(_GLF_DEAD(false))
           barrier();
         }
        if(_GLF_DEAD(false))
         barrier();
        do
         {
          _GLF_SWITCH_0_50v.gg;
         }
        while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
         barrier();
        mat4x2 _GLF_SWITCH_0_66v[55];
        if(_GLF_WRAPPED_IF_FALSE(false))
         {
         }
        else
         {
          for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
           }
         }
       }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3)))))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       default:
       1;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
