#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), 0.0, 1.0, 1.0, 0.0)), min(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(abs(0.0), 0.0 + (abs(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))), 0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-864.059, (_GLF_IDENTITY(-864.059, max(-864.059, _GLF_IDENTITY(-864.059, (_GLF_IDENTITY(-864.059, mix(float(_GLF_FUZZED(-87.31)), float(-864.059), bool(true)))) - 0.0)))) * 1.0)), _GLF_IDENTITY((vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), injectionSwitch.y), abs(0.0), 0.0, 1.0, 1.0, 0.0))), mix(vec2(_GLF_IDENTITY(((vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), injectionSwitch.y), abs(0.0), 0.0, 1.0, 1.0, 0.0))))[0], (true ? ((vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), injectionSwitch.y), abs(0.0), 0.0, 1.0, 1.0, 0.0))))[0] : _GLF_FUZZED(atanh(-0.7)))), ((vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), injectionSwitch.y), abs(0.0), 0.0, 1.0, 1.0, 0.0))))[1]), vec2(_GLF_FUZZED(-95.65), _GLF_FUZZED(-0.2)), bvec2(false, false)))[1]), vec2((vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0, 1.0, 1.0, 0.0)))[0], _GLF_FUZZED(40.56)), bvec2(true, false)), clamp(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-864.059, (_GLF_IDENTITY(-864.059, max(-864.059, _GLF_IDENTITY(-864.059, (_GLF_IDENTITY(-864.059, mix(float(_GLF_FUZZED(-87.31)), float(-864.059), bool(true)))) - 0.0)))) * 1.0)), _GLF_IDENTITY((vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), injectionSwitch.y), abs(0.0), 0.0, 1.0, 1.0, 0.0))), mix(vec2(_GLF_IDENTITY(((vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), injectionSwitch.y), abs(0.0), 0.0, 1.0, 1.0, 0.0))))[0], (true ? ((vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), injectionSwitch.y), abs(0.0), 0.0, 1.0, 1.0, 0.0))))[0] : _GLF_FUZZED(atanh(-0.7)))), ((vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), injectionSwitch.y), abs(0.0), 0.0, 1.0, 1.0, 0.0))))[1]), vec2(_GLF_FUZZED(-95.65), _GLF_FUZZED(-0.2)), bvec2(false, false)))[1]), vec2((vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0, 1.0, 1.0, 0.0)))[0], _GLF_FUZZED(40.56)), bvec2(true, false)), (false ? _GLF_FUZZED(injectionSwitch) : mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-864.059, (_GLF_IDENTITY(-864.059, max(-864.059, _GLF_IDENTITY(-864.059, (_GLF_IDENTITY(-864.059, mix(float(_GLF_FUZZED(-87.31)), float(-864.059), bool(true)))) - 0.0)))) * 1.0)), _GLF_IDENTITY((vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), injectionSwitch.y), abs(0.0), 0.0, 1.0, 1.0, 0.0))), mix(vec2(_GLF_IDENTITY(((vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), injectionSwitch.y), abs(0.0), 0.0, 1.0, 1.0, 0.0))))[0], (true ? ((vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), injectionSwitch.y), abs(0.0), 0.0, 1.0, 1.0, 0.0))))[0] : _GLF_FUZZED(atanh(-0.7)))), ((vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), injectionSwitch.y), abs(0.0), 0.0, 1.0, 1.0, 0.0))))[1]), vec2(_GLF_FUZZED(-95.65), _GLF_FUZZED(-0.2)), bvec2(false, false)))[1]), vec2((vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0, 1.0, 1.0, 0.0)))[0], _GLF_FUZZED(40.56)), bvec2(true, false)))), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-864.059, (_GLF_IDENTITY(-864.059, max(-864.059, _GLF_IDENTITY(-864.059, (_GLF_IDENTITY(-864.059, mix(float(_GLF_FUZZED(-87.31)), float(-864.059), bool(true)))) - 0.0)))) * 1.0)), _GLF_IDENTITY((vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), injectionSwitch.y), abs(0.0), 0.0, 1.0, 1.0, 0.0))), mix(vec2(_GLF_IDENTITY(((vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), injectionSwitch.y), abs(0.0), 0.0, 1.0, 1.0, 0.0))))[0], (true ? ((vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), injectionSwitch.y), abs(0.0), 0.0, 1.0, 1.0, 0.0))))[0] : _GLF_FUZZED(atanh(-0.7)))), ((vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), injectionSwitch.y), abs(0.0), 0.0, 1.0, 1.0, 0.0))))[1]), vec2(_GLF_FUZZED(-95.65), _GLF_FUZZED(-0.2)), bvec2(false, false)))[1]), vec2((vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0, 1.0, 1.0, 0.0)))[0], _GLF_FUZZED(40.56)), bvec2(true, false)), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-864.059, (_GLF_IDENTITY(-864.059, max(-864.059, _GLF_IDENTITY(-864.059, (_GLF_IDENTITY(-864.059, mix(float(_GLF_FUZZED(-87.31)), float(-864.059), bool(true)))) - 0.0)))) * 1.0)), _GLF_IDENTITY((vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), injectionSwitch.y), abs(0.0), 0.0, 1.0, 1.0, 0.0))), mix(vec2(_GLF_IDENTITY(((vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), injectionSwitch.y), abs(0.0), 0.0, 1.0, 1.0, 0.0))))[0], (true ? ((vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), injectionSwitch.y), abs(0.0), 0.0, 1.0, 1.0, 0.0))))[0] : _GLF_FUZZED(atanh(-0.7)))), ((vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), injectionSwitch.y), abs(0.0), 0.0, 1.0, 1.0, 0.0))))[1]), vec2(_GLF_FUZZED(-95.65), _GLF_FUZZED(-0.2)), bvec2(false, false)))[1]), vec2((vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0, 1.0, 1.0, 0.0)))[0], _GLF_FUZZED(40.56)), bvec2(true, false))))), vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), length(tan(0.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(mat3x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0))))), _GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(54.32)), float(mat2x3(_GLF_IDENTITY(float(_GLF_FUZZED(54.32)), clamp(float(_GLF_FUZZED(54.32)), float(_GLF_FUZZED(54.32)), float(_GLF_FUZZED(54.32)))), 0.0, 1.0, 0.0, 1.0, 0.0))), bool(false))), 1.0)))), injectionSwitch.y), max(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(54.32)), float(mat2x3(_GLF_IDENTITY(float(_GLF_FUZZED(54.32)), clamp(float(_GLF_FUZZED(54.32)), float(_GLF_FUZZED(54.32)), float(_GLF_FUZZED(54.32)))), 0.0, 1.0, 0.0, 1.0, 0.0))), bool(false))), 1.0)))), injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(54.32)), float(mat2x3(_GLF_IDENTITY(float(_GLF_FUZZED(54.32)), clamp(float(_GLF_FUZZED(54.32)), float(_GLF_FUZZED(54.32)), float(_GLF_FUZZED(54.32)))), 0.0, 1.0, 0.0, 1.0, 0.0))), bool(false))), 1.0)))), injectionSwitch.y), (_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(54.32)), float(mat2x3(_GLF_IDENTITY(float(_GLF_FUZZED(54.32)), clamp(float(_GLF_FUZZED(54.32)), float(_GLF_FUZZED(54.32)), float(_GLF_FUZZED(54.32)))), 0.0, 1.0, 0.0, 1.0, 0.0))), bool(false))), 1.0)))), injectionSwitch.y)) * 1.0))), abs(0.0), 0.0, 1.0, 1.0, 0.0))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize.x, 0u, 0u), uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize.x, 0u, _GLF_IDENTITY(0u, (0u) | 0u))), (uvec3(uvec3(gl_WorkGroupSize.x, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))) / _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) << 0u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u)), (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u))) - 0u)) ^ 0u), 1u), uvec3(uvec4(uvec3(_GLF_IDENTITY(1u, (1u) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u))) ^ 0u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u))) ^ 0u)) << 0u), 1u), 1u)))))), max(uvec3(gl_WorkGroupSize.x, 0u, 0u), uvec3(gl_WorkGroupSize.x, 0u, 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize.x, 0u, 0u), uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize.x, 0u, _GLF_IDENTITY(0u, (0u) | 0u))), (uvec3(uvec3(gl_WorkGroupSize.x, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))) / _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) << 0u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u)), (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u))) - 0u)) ^ 0u), 1u), uvec3(uvec4(uvec3(_GLF_IDENTITY(1u, (1u) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u))) ^ 0u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u))) ^ 0u)) << 0u), 1u), 1u)))))), max(uvec3(gl_WorkGroupSize.x, 0u, 0u), uvec3(gl_WorkGroupSize.x, 0u, 0u))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize.x, 0u, 0u), uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize.x, 0u, _GLF_IDENTITY(0u, (0u) | 0u))), (uvec3(uvec3(gl_WorkGroupSize.x, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))) / _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) << 0u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u)), (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u))) - 0u)) ^ 0u), 1u), uvec3(uvec4(uvec3(_GLF_IDENTITY(1u, (1u) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u))) ^ 0u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u))) ^ 0u)) << 0u), 1u), 1u)))))), max(uvec3(gl_WorkGroupSize.x, 0u, 0u), uvec3(gl_WorkGroupSize.x, 0u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize.x, 0u, 0u), uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize.x, 0u, _GLF_IDENTITY(0u, (0u) | 0u))), (uvec3(uvec3(gl_WorkGroupSize.x, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))) / _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) << 0u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u)), (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u))) - 0u)) ^ 0u), 1u), uvec3(uvec4(uvec3(_GLF_IDENTITY(1u, (1u) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u))) ^ 0u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u))) ^ 0u)) << 0u), 1u), 1u)))))), max(uvec3(gl_WorkGroupSize.x, 0u, 0u), uvec3(gl_WorkGroupSize.x, 0u, 0u))))), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize.x, 0u, 0u), uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize.x, 0u, 0u)), (uvec3(uvec3(gl_WorkGroupSize.x, 0u, 0u))) / _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) - 0u), (1u) << 0u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : 1u), max((false ? _GLF_FUZZED(subgroup_id) : 1u), (false ? _GLF_FUZZED(subgroup_id) : 1u))))) ^ 0u), 1u), uvec3(_GLF_IDENTITY(uvec4(uvec3(_GLF_IDENTITY(1u, (1u) << 0u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : 1u), max((false ? _GLF_FUZZED(subgroup_id) : 1u), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : 1u, clamp(false ? _GLF_FUZZED(subgroup_id) : 1u, false ? _GLF_FUZZED(subgroup_id) : 1u, false ? _GLF_FUZZED(subgroup_id) : 1u))), min((false ? _GLF_FUZZED(subgroup_id) : 1u), (false ? _GLF_FUZZED(subgroup_id) : 1u))))))) ^ _GLF_IDENTITY(0u, min(0u, 0u))), 1u), 1u), (false ? _GLF_FUZZED(uvec4(24013u, 137515u, 132186u, 182012u)) : uvec4(uvec3(_GLF_IDENTITY(1u, (1u) << 0u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : 1u), max((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(1u, (1u) | (1u))))), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : 1u), min((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(uint(99855)) : subgroup_id))) : 1u), (false ? _GLF_FUZZED(subgroup_id) : 1u))))))) ^ 0u), 1u), 1u)))))))), max(_GLF_IDENTITY(uvec3(gl_WorkGroupSize.x, 0u, 0u), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(uvec3(gl_WorkGroupSize.x, 0u, 0u), (uvec3(gl_WorkGroupSize.x, 0u, 0u)) * uvec3(1u, 1u, 1u)))), uvec3(gl_WorkGroupSize.x, 0u, _GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), 1u)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4.4)), vec2(_GLF_FUZZED(-235.497), (injectionSwitch)[1]), bvec2(false, true))).y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3542.9691)), bool(false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || ((false) || false)))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x)), gl_WorkGroupID.x)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, 1u * (gl_WorkGroupID.x))) | (gl_WorkGroupID.x), ((_GLF_IDENTITY(gl_WorkGroupID.x, 1u * (gl_WorkGroupID.x))) | (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec2(_GLF_DEAD(false), false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(17630))), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(true, true && (true)), true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), _GLF_IDENTITY((true ? workgroup_id : _GLF_FUZZED(workgroup_id)), (true ? (true ? workgroup_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), _GLF_IDENTITY(clamp(_GLF_FUZZED(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))), _GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id)), _GLF_IDENTITY(max(clamp(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id)), clamp(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))), (max(clamp(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id)), clamp(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id)))) >> 0u)))) >> 0u)) : _GLF_FUZZED(_GLF_IDENTITY((subgroup_size ++), ((subgroup_size ++)) - 0u)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, true && (false)), true), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false)), true), false)))))))), _GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ! (! ((true))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(true)), ! (! ((bool(true))))), false || (! (bool(true))))))), true && (bool(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), false || (! (bool(true)))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), false || (! (bool(true))))))), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), false || (! (bool(true)))))))), ! (! (true && (bool(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), false || (! (bool(true)))))))))))))))), ! (! (bool(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(true)), false || (! (bool(true)))), ! (! (_GLF_IDENTITY(! (bool(true)), false || (! (bool(true)))))))))), true && (bool(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), false || (! _GLF_IDENTITY((bool(true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(true)), ! (! ((bool(true)))))), (bool(_GLF_IDENTITY((bool(true)), ! (! ((bool(true))))))) && true))))))))))))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-9.5)), vec2(_GLF_FUZZED(float(-86456)), ((injectionSwitch))[1]), bvec2(false, true)))[0], _GLF_IDENTITY(_GLF_FUZZED(656.255), (_GLF_IDENTITY(_GLF_FUZZED(656.255), max(_GLF_FUZZED(656.255), _GLF_FUZZED(656.255)))) * 1.0)), vec2(_GLF_FUZZED(1.7), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-4563.1874, -6283.1351)) : injectionSwitch)))).x < injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), injectionSwitch[1]), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), 0 ^ (~ (_GLF_IDENTITY(1, 0 | (1)))))))]), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), 0 ^ (~ (_GLF_IDENTITY(1, 0 | (1)))))))])) * mat2(1.0), sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), 0 ^ (~ (_GLF_IDENTITY(1, 0 | (1)))))))])) * mat2(1.0), ((vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), 0 ^ (~ (_GLF_IDENTITY(1, 0 | (1)))))))])) * mat2(1.0)) * mat2(1.0))))), mix(vec2(_GLF_FUZZED(9.8), _GLF_FUZZED(-799.579)), vec2(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), 0 ^ (~ (_GLF_IDENTITY(1, 0 | (1)))))))]))[0], min((vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), 0 ^ (~ (_GLF_IDENTITY(1, 0 | (1))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), 0 ^ (~ (_GLF_IDENTITY(1, 0 | (1))))), 1 * (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), 0 ^ (~ (_GLF_IDENTITY(1, 0 | (1))))))))))))]))[0], (vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), 0 ^ (~ (_GLF_IDENTITY(1, 0 | (1)))))))]))[0])), (vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), 0 ^ (~ (_GLF_IDENTITY(1, 0 | (1)))))))]))[1]), bvec2(true, true)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, min(1.0, 1.0))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- 1.3)), _GLF_FUZZED((false ? -2927.2692 : 87.25))), vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[0], (injectionSwitch)[1]), bvec2(true, true))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), false || ((injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && true)), bool(bvec2(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) && true)), true))))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) / 1))), (0) * 1), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) | (0)) : _GLF_FUZZED(-47935))), 0))))], injectionSwitch[1])).x, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-23.19)), bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), (_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-23.19)), bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))) / _GLF_ONE(1.0, injectionSwitch.y)), injectionSwitch[_GLF_IDENTITY(1, (1) / 1)])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))))) / 1.0))).x)))) < injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), true && (bool(bvec4(_GLF_DEAD(false), false, true, true))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))), _GLF_IDENTITY((false ? _GLF_FUZZED(7709u) : (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))))), max(_GLF_IDENTITY((false ? _GLF_FUZZED(7709u) : (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))))), (true ? (false ? _GLF_FUZZED(7709u) : (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))))) : _GLF_FUZZED(workgroup_id))), (false ? _GLF_FUZZED(7709u) : (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))))))), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) | (subgroup_id))))))))) / 1u))) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))), (_GLF_FUZZED(workgroup_id)) | _GLF_IDENTITY((_GLF_FUZZED(workgroup_id)), max((_GLF_FUZZED(workgroup_id)), (_GLF_FUZZED(workgroup_id)))))))))))) | (_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) || false))), true, true, false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && true), false))))), bool(bvec2(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (! ((injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) || false))), true, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))))))
      barrier();
     barrier();
    }
  }
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), (true ? max(4, 4) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-74442), 0 ^ (_GLF_IDENTITY(_GLF_FUZZED(-74442), (true ? _GLF_FUZZED(-74442) : _GLF_FUZZED(bitCount(-57272)))))), _GLF_IDENTITY(max(_GLF_FUZZED(-74442), _GLF_IDENTITY(_GLF_FUZZED(-74442), max(_GLF_FUZZED(-74442), _GLF_FUZZED(-74442)))), (max(_GLF_FUZZED(-74442), _GLF_IDENTITY(_GLF_FUZZED(-74442), max(_GLF_FUZZED(-74442), _GLF_FUZZED(-74442))))) >> 0))))))), 64, 0);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) * 1, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (4) * 1 : _GLF_FUZZED(88431)), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (4) * 1 : _GLF_FUZZED(88431))) >> (1 ^ 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) * 1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))) ? _GLF_IDENTITY((4) * _GLF_IDENTITY(1, (1) | (1)), ((4) * _GLF_IDENTITY(1, (1) | (1))) - 0) : _GLF_FUZZED(88431)))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY((4) * 1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))) ? _GLF_IDENTITY((4) * _GLF_IDENTITY(1, (1) | (1)), ((4) * _GLF_IDENTITY(1, (1) | (1))) - 0) : _GLF_FUZZED(_GLF_IDENTITY(88431, (88431) | (_GLF_IDENTITY(88431, (88431) ^ 0))))))) : _GLF_FUZZED(bitfieldReverse(40608))))) * ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, _GLF_IDENTITY(int(_GLF_IDENTITY(int(5), 0 + (int(5)))), (int(_GLF_IDENTITY(int(5), 0 + (int(5))))) - 0))), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), 0 ^ (_GLF_IDENTITY(4, (4) * 1))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0), vec2(1.0, 0.0))), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0), (mat4x2(injectionSwitch, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0), vec2(1.0, 0.0))), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0)) * mat4(1.0)))).x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))), mix(vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))))[0], _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))))), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))))))[1], (false ? _GLF_FUZZED(-93.26) : (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))))[1]))), vec2(_GLF_FUZZED((false ? -328.110 : (- 8.7))), _GLF_FUZZED(vec2(-528.458, -34.30).g)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-6.4, -754.263))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-6.4, -754.263)))) * vec2(1.0, 1.0))).y))), _GLF_IDENTITY(false, bool(bvec2(false, false))), false, true)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))) ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(-6.4, mix(float(_GLF_FUZZED(-925.044)), float(-6.4), bool(true))), -754.263)))).y))), _GLF_IDENTITY(false, bool(bvec2(false, false))), false, true)))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? injectionSwitch : _GLF_FUZZED(vec2(-6.4, -754.263)))).y))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))), false, true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? injectionSwitch : _GLF_FUZZED(vec2(-6.4, -754.263)))).y))), _GLF_IDENTITY(false, bool(bvec2(false, false))), false, true)), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? injectionSwitch : _GLF_FUZZED(vec2(-6.4, -754.263)))).y))), _GLF_IDENTITY(false, bool(bvec2(false, false))), false, true)), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))), ! (! (! (bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? injectionSwitch : _GLF_FUZZED(vec2(-6.4, -754.263)))).y))), _GLF_IDENTITY(false, bool(bvec2(false, false))), false, true)), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))))))))))), ! (! (bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? injectionSwitch : _GLF_FUZZED(vec2(-6.4, -754.263)))).y))), _GLF_IDENTITY(false, bool(bvec2(false, false))), false, true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || false)) && _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, (4) | (4)));
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false)))), true && (_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))))) && (false), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false)))), true && (_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))))) && (false))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true && (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true && (_GLF_IDENTITY(false, ! (! (false)))))), false)))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(false, (false) || false)))))), true && (false)), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(true && (! ((_GLF_IDENTITY(false, true && (false))))), true && (true && (! ((_GLF_IDENTITY(false, true && (false))))))))))), (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(true && (! ((_GLF_IDENTITY(false, true && (false))))), true && (true && (! ((_GLF_IDENTITY(false, true && (false))))))))))), ! (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))))), _GLF_IDENTITY(true && (! ((_GLF_IDENTITY(false, true && (false))))), true && (true && (! ((_GLF_IDENTITY(false, true && (false))))))))))))))) && true))), false, true, true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, (true) || false) && (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true && (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bool(_GLF_IDENTITY((false) && true, ! (! ((false) && true)))))))))), true && (_GLF_IDENTITY(false, ! (! (false)))))), false)))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))))), true && (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), true && (true && (false)))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))) || false))), _GLF_IDENTITY(true && (! ((_GLF_IDENTITY(false, true && (false))))), true && (true && (! (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bvec2((_GLF_IDENTITY(false, true && (false))), true))))))))))))), false, true, true)))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true))))))), true && (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true && (_GLF_IDENTITY(false, ! (! (false)))))), false)))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))))), true && (false)), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(true && (! ((_GLF_IDENTITY(false, true && (false))))), true && (true && (! ((_GLF_IDENTITY(false, true && (false)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bool(_GLF_IDENTITY(true && (false), bool(bvec2(true && (false), true)))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), true && (_GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec2(! (! (false)), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (! (false)), true), bvec2(bvec4(bvec2(! (! (false)), true), false, false))))))))))), true && (false))))), true && (true && (! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))))))) && true)))), false, true, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec2(true, true))))))))))) || false)) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false)))), true && (_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))))) && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)), true && _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ((true) || false) || false)) && (false))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ((true) || false) || false)) && (false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)))), true && (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true && (_GLF_IDENTITY(false, ! (! (false)))))), false)))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))))), true && (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bvec4((_GLF_IDENTITY(false, true && (false))), true, false, true)))), _GLF_IDENTITY(true && (! ((_GLF_IDENTITY(false, true && (false))))), true && (true && (! ((_GLF_IDENTITY(false, true && (false))))))))))))), false, true, true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true && (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true && (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true && (_GLF_IDENTITY(false, ! (! (false)))))) || _GLF_IDENTITY(false, bool(bvec3(false, false, true))))), false)))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))))), true && (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (false)))), true && (! ((_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true && (true && (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (true && (false))))))))))))))), false, true, true)))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, true))), (true) || false) && (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), ! (! (! (! (_GLF_IDENTITY(false, (false) && true)))))))))))), true && (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true && (_GLF_IDENTITY(false, ! (! (false)))))), false)))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))))) && true)), true && (false)), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(true && _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false))))))), false || ((! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false))))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)))))))) && (true && (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), false || (true && (false)))) && true)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, true && (false))), false, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, true && (false))), false, true), false))))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(dot(vec4(758.457, -6.9, 793.452, 5327.9671), vec4(-17.16, -568.186, -8.0, -244.102))))))))))))) && (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false))))))), true && (false))))), true && (true && (! ((_GLF_IDENTITY(false, true && (false))))))))))) && true)))), false, true, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))) || false), bool(bvec2(true, true))))))))))) || false)) && true)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))), false || (bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))))))) && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(true, false, true, false)), false), bvec2(bvec3(bvec2(bool(bvec4(true, false, true, false)), false), true)))))), (true) || false) && (false)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(_GLF_IDENTITY(bvec2((false) && true, false), bvec2(bvec4(bvec2((false) && true, false), true, true))))))))), true && (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true && (_GLF_IDENTITY(false, ! (! (false)))))), false)))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))))), _GLF_IDENTITY(true && (false), false || (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true && (false), false || (true && (false))))), true && (bool(bool(_GLF_IDENTITY(true && (false), false || (true && (false))))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))))), _GLF_IDENTITY(true && (! ((_GLF_IDENTITY(false, true && (false))))), true && (true && _GLF_IDENTITY((! ((_GLF_IDENTITY(false, true && (false))))), true && (_GLF_IDENTITY((! ((_GLF_IDENTITY(false, true && (false))))), bool(bool((! ((_GLF_IDENTITY(false, true && (false)))))))))))))))))), false, true, true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true && (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true && (_GLF_IDENTITY(false, ! (! (false)))))), false)))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))))), true && (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(true && (! ((_GLF_IDENTITY(false, true && (false))))), true && (true && (! ((_GLF_IDENTITY(false, true && (false))))))))))))), false, true, true))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)))), true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true && (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true && (_GLF_IDENTITY(false, ! (! (false)))))), false)))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))))), true && (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(true && (! ((_GLF_IDENTITY(false, true && (false))))), true && (true && (! ((_GLF_IDENTITY(false, true && (false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(((_GLF_IDENTITY(false, true && (false)))), (((_GLF_IDENTITY(false, true && (false))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true && (! ((_GLF_IDENTITY(false, true && (false))))), true && (true && (! ((_GLF_IDENTITY(false, true && (false))))))))))))))), false, true, true)))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true && (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(false, ! (! (false)))))), false)))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))))), true && (false)), ! (! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bool((_GLF_IDENTITY(false, true && (false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(true && (! ((_GLF_IDENTITY(false, true && (false))))), true && (true && (! ((_GLF_IDENTITY(false, true && (false)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true && (false))))), true && (true && (! ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))))))))))))) && true)))), false, true, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec2(true, true))))))))))) || false)) && true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), true, false)))) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     subgroupAll(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && _GLF_IDENTITY((false), ! (! ((false)))))) || false));
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.3), _GLF_FUZZED(8.2)), bvec2(false, false))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(float(true))), vec2(_GLF_FUZZED(5623.9370), (injectionSwitch)[1]), bvec2(false, true))).x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(float(true))), vec2(_GLF_FUZZED(5623.9370), (injectionSwitch)[1]), bvec2(false, true))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(float(true))), vec2(_GLF_FUZZED(5623.9370), (injectionSwitch)[1]), bvec2(false, true))).x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), (false || (true)) && true)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false)))))))) && _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))), false, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))), injectionSwitch, injectionSwitch)).y))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8554.9419)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))) > injectionSwitch.y))) && _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2599.1771)), vec2(_GLF_FUZZED(6.7), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2599.1771)), vec2(_GLF_FUZZED(6.7), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).x > injectionSwitch.y))), (bool(bool((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2599.1771)), vec2(_GLF_FUZZED(6.7), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).x > injectionSwitch.y)))) || false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), false, false))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-31.02)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-50.69) : injectionSwitch.x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     atomicStore(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)) | (virtual_gid))], read, _GLF_IDENTITY(4, int(ivec2(4, (1 | 1)))), 64, 4);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   subgroupAll(true);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y))), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false), bool(bool(true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), float(_GLF_IDENTITY(vec3((injectionSwitch.y), 1.0, 1.0), mat3(1.0) * (vec3((injectionSwitch.y), 1.0, 1.0))))) - _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, cos(0.0), 0.0))))))))
  barrier();
}
