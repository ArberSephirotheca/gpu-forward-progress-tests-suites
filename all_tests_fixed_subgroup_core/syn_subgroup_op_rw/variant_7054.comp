#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_14 {
 float _f0;
 uint read;
} ;

struct _GLF_struct_11 {
 int _f0;
 mat3x4 _f1;
 mat4x2 _f2;
 vec4 _f3;
 bvec2 _f4;
 mat2x4 _f5;
 bool _f6;
} ;

struct _GLF_struct_10 {
 bool _f0;
 uvec2 _f1;
 bool _f2;
 mat3 _f3;
 mat4x2 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_9 {
 bvec2 _f0;
 mat2x4 _f1;
 mat2x3 _f2;
 mat3 _f3;
 uint _f4;
} ;

struct _GLF_struct_8 {
 vec2 _f0;
 mat3x4 _f1;
 bvec4 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_12 {
 _GLF_struct_8 _f0;
 _GLF_struct_9 _f1;
 mat4x2 _f2;
 vec4 _f3;
 _GLF_struct_10 _f4;
 uint virtual_gid;
 _GLF_struct_11 _f5;
} ;

struct _GLF_struct_6 {
 int _f0;
 vec2 _f1;
 vec3 _f2;
 mat2 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_5 {
 float _f0;
 vec2 _f1;
 ivec4 _f2;
 uvec2 _f3;
 int _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_7 {
 bvec4 _f0;
 _GLF_struct_5 _f1;
 float _f2;
 _GLF_struct_6 _f3;
} ;

struct _GLF_struct_3 {
 int _f0;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
 bvec3 _f1;
 vec4 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_1 {
 mat4x2 _f0;
 uvec3 _f1;
 ivec3 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_0 {
 mat4x2 _f0;
 float _f1;
 mat2x3 _f2;
 mat2 _f3;
 uvec2 _f4;
 bvec2 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 mat4x2 _f1;
 _GLF_struct_1 _f2;
} ;

struct _GLF_struct_13 {
 _GLF_struct_2 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_7 _f2;
 vec2 _f3;
 _GLF_struct_12 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (true ? ~ (1) : _GLF_FUZZED(79351))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))), ! (! (! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))))))))
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
                      {
                      }
                     else
                      {
                       do
                        {
                         do
                          {
                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, (false ? _GLF_FUZZED(_injected_loop_counter) : 2)), 2))), _GLF_IDENTITY(int(2), _GLF_IDENTITY(min(_GLF_IDENTITY(int(2), (int(2)) - 0), int(_GLF_IDENTITY(2, (2) * 1))), (min(_GLF_IDENTITY(int(2), (int(2)) - 0), int(_GLF_IDENTITY(2, (2) * 1)))) >> 0)))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
                            {
                             for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                              {
                               do
                                {
                                 do
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                    {
                                    }
                                   else
                                    {
                                     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
                                      {
                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                        {
                                         if(_GLF_WRAPPED_IF_TRUE(true))
                                          {
                                           if(_GLF_DEAD(false))
                                            {
                                             if(_GLF_WRAPPED_IF_TRUE(true))
                                              {
                                               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                                {
                                                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
                                                  {
                                                  }
                                                 else
                                                  {
                                                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((32666 & 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(8), 0 + (int(8))), 1, 1), min(ivec3(_GLF_IDENTITY(int(8), 0 + (int(8))), 1, 1), ivec3(_GLF_IDENTITY(int(8), _GLF_IDENTITY(0 + (int(8)), clamp(0 + (int(8)), 0 + (int(8)), _GLF_IDENTITY(0 + (int(8)), (0 + (int(8))) | 0)))), 1, 1))))), int(8)))); _injected_loop_counter --)
                                                    {
                                                     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                                      {
                                                       do
                                                        {
                                                         do
                                                          {
                                                           if(_GLF_WRAPPED_IF_TRUE(true))
                                                            {
                                                             barrier();
                                                            }
                                                           else
                                                            {
                                                            }
                                                          }
                                                         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))), true, true, false)))), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), true, true, false)))))))));
                                                        }
                                                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                             else
                                              {
                                              }
                                            }
                                          }
                                         else
                                          {
                                          }
                                        }
                                       else
                                        {
                                        }
                                      }
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                              }
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false));
                      }
                    }
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
  }
 else
  {
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, clamp(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))) ^ uvec3(0u, 0u, 0u)).x, gl_WorkGroupID.x, gl_WorkGroupID.x));
 uint workgroup_base = workgroup_size * workgroup_id;
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(_GLF_struct_2(_GLF_struct_0(mat4x2(1.0), 1.0, mat2x3(1.0), mat2(1.0), uvec2(1u), _GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), false))), mat2x3(1.0)), mat4x2(1.0), _GLF_struct_1(mat4x2(1.0), uvec3(1u), _GLF_IDENTITY(ivec3(1), (ivec3(1)) - ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(int(0), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (int(0)))), (int(_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (int(0))), clamp(_GLF_IDENTITY(int(0), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (int(0))), _GLF_IDENTITY(int(0), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (int(0))), _GLF_IDENTITY(int(0), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (int(0))))))) << 0)), 0, 0)), mat4x2(1.0))), _GLF_struct_4(_GLF_struct_3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) >> _GLF_IDENTITY(0, (0) ^ 0))), bvec3(true), vec4(1.0), ivec4(1)), _GLF_struct_7(bvec4(true), _GLF_struct_5(1.0, vec2(_GLF_IDENTITY(1.0, float(float(1.0)))), ivec4(1), uvec2(1u), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (0 | 0) + (_GLF_IDENTITY(1, clamp(1, 1, 1))))) ^ 0), mat2x4(1.0)), 1.0, _GLF_struct_6(1, vec2(1.0), vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0))), mat2(1.0), vec2(1.0))), vec2(1.0), _GLF_struct_12(_GLF_struct_8(vec2(1.0), mat3x4(1.0), bvec4(true), bvec3(true)), _GLF_struct_9(bvec2(true), mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat2x3(1.0), mat3(1.0), 1u), mat4x2(1.0), vec4(1.0), _GLF_struct_10(true, _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))), true, mat3(1.0), mat4x2(1.0), vec4(1.0)), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))) + subgroup_local_id, _GLF_struct_11(1, mat3x4(1.0), mat4x2(1.0), vec4(1.0), bvec2(true), mat2x4(1.0), true)));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(2u), uint(2u))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) ^ ((0u << _GLF_IDENTITY(uint(2u), uint(2u))))) ^ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (workgroup_base + subgroup_id * subgroup_size) * 1u))))) + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))) | ((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))))) % subgroup_size), clamp(((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) % subgroup_size)));
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(1.0, atomicLoad(buf[_GLF_struct_replacement_13._f4.virtual_gid], _GLF_IDENTITY(4, ~ (~ (4))), 64, 0));
 for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), ~ (~ ((1 << _GLF_IDENTITY(int(1), int(1)))))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY((_injected_loop_counter --), ((_GLF_IDENTITY(_injected_loop_counter --, 0 | (_GLF_IDENTITY(_injected_loop_counter --, 0 | (_injected_loop_counter --)))))) >> 0) >> 0)) >> 0))
  {
   do
    {
     do
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 | 0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (4) | (0 ^ (0 >> _GLF_IDENTITY(int(1), int(1))))), 64, _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), _GLF_IDENTITY(((0 | 0) << _GLF_IDENTITY(int(8), int(8))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (0) - 0) | 0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0), (false ? _GLF_FUZZED(-9676) : _GLF_IDENTITY((0), ((0)) | 0))) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (0) - 0) | 0)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (0) - 0) | 0))))) << 0)) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))))), (((0 | 0) << _GLF_IDENTITY(int(8), int(8)))) >> 0), min(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) - 0))) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) - 0) | 0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) << 0)), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))))), (((0 | 0) << _GLF_IDENTITY(int(8), int(8)))) >> 0), (false ? _GLF_FUZZED(-67112) : _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (0) - 0) | 0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), min(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))))))), (true ? ((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (0) - 0) | 0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))))) : _GLF_FUZZED(_injected_loop_counter))), (((0 | 0) << _GLF_IDENTITY(int(8), int(8)))) >> 0))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (0) - 0) | 0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))), int(ivec2(clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))), 1)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), (((0 | 0) << _GLF_IDENTITY(int(8), int(8)))) >> 0), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, _GLF_IDENTITY((0), (true ? (0) : _GLF_FUZZED(39473))) - 0) | 0) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0, (0) - 0) | 0))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), int(ivec3(int(8), 0, 1)))), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), max(int(8), _GLF_IDENTITY(int(8), (int(8)) << 0)))), _GLF_IDENTITY(int(8), int(8))))), ((_GLF_IDENTITY((0 | 0), clamp(_GLF_IDENTITY((0 | 0), ((0 | 0)) + 0), (0 | 0), (0 | 0))) << _GLF_IDENTITY(int(8), int(8)))) >> 0)) | 0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (0) - 0) | 0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (0) - 0) | 0)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (0) - 0) | 0))))) << 0)) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))))), (((0 | 0) << _GLF_IDENTITY(int(8), int(8)))) >> 0), min(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) - 0))) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) - 0) | 0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))))), (((0 | 0) << _GLF_IDENTITY(int(8), int(8)))) >> 0), (false ? _GLF_FUZZED(-67112) : _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (0) - 0) | 0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))))), (true ? ((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (0) - 0) | 0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))))) : _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), 0 ^ (_GLF_FUZZED(_injected_loop_counter))))), (((0 | 0) << _GLF_IDENTITY(int(8), int(8)))) >> 0))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (0) - 0) | 0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))), int(ivec2(clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))), 1)))) ^ _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | (int(_GLF_ZERO(0.0, injectionSwitch.x))))))), (((0 | 0) << _GLF_IDENTITY(int(8), int(8)))) >> 0), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, clamp(_GLF_IDENTITY(0, (0) - 0) | 0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) - 0), _GLF_IDENTITY(0, (0) - 0) | 0))))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), max(int(8), _GLF_IDENTITY(int(8), (int(8)) << 0)))), _GLF_IDENTITY(int(8), int(8))))), ((_GLF_IDENTITY((0 | 0), clamp(_GLF_IDENTITY((0 | 0), ((0 | 0)) + 0), (0 | 0), (0 | 0))) << _GLF_IDENTITY(int(8), int(8)))) >> 0)) | 0))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (0) - 0) | 0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (0) - 0) | 0)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (0) - 0) | 0))))) << 0)) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))))), ((_GLF_IDENTITY((0 | 0) << _GLF_IDENTITY(int(8), int(8)), max((0 | 0) << _GLF_IDENTITY(int(8), int(8)), (0 | 0) << _GLF_IDENTITY(int(8), int(8)))))) >> 0), min(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) - _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, int(ivec3(0, 0, 1))))) : _GLF_FUZZED(_injected_loop_counter)))))) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) - 0) | 0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) | (_GLF_IDENTITY(8, 0 | (_GLF_IDENTITY(8, 0 | (8))))))), int(8)), _GLF_IDENTITY(int(8), int(8))))), (((0 | 0) << _GLF_IDENTITY(int(8), int(8)))) >> 0), (false ? _GLF_FUZZED(-67112) : _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (0) - 0) | 0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))))), (true ? ((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (0) - 0) | 0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))))) : _GLF_FUZZED(_injected_loop_counter))), (((0 | 0) << _GLF_IDENTITY(int(8), int(8)))) >> 0))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) - 0) | 0, 1, 1), min(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) - 0) | 0, 1, 1), (ivec3(_GLF_IDENTITY(0, (0) - 0) | 0, 1, 1)) / ivec3(1, 1, 1)), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) - 0) | 0, 1, 1), (true ? ivec3(_GLF_IDENTITY(0, (0) - 0) | 0, 1, 1) : _GLF_FUZZED(ivec3(95810, 13314, -73553))))))))) | (_GLF_IDENTITY(0, (0) - 0) | 0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))), int(ivec2(clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))), 1)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), ((_GLF_IDENTITY((0 | 0) << _GLF_IDENTITY(int(8), int(8)), ((0 | 0) << _GLF_IDENTITY(int(8), int(8))) | 0))) >> 0), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - _GLF_IDENTITY(0, (0) | (0))) | 0) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0, (0) - 0) | 0))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), max(int(8), _GLF_IDENTITY(int(8), (int(8)) << 0)))), _GLF_IDENTITY(int(8), int(8))))), ((_GLF_IDENTITY((0 | 0), clamp(_GLF_IDENTITY((0 | 0), ((0 | 0)) + 0), (0 | 0), (0 | 0))) << _GLF_IDENTITY(int(8), int(8)))) >> 0)) | 0)))))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (0) - 0) | 0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, 0 | ((0) - 0))) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (0) - 0) | 0)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (0) - 0) | 0))))) << 0)) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))))), (((0 | 0) << _GLF_IDENTITY(int(8), int(8)))) >> 0), min(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) - 0))) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) - 0) | 0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))))), _GLF_IDENTITY((((0 | 0) << _GLF_IDENTITY(int(8), int(8)))) >> 0, clamp((((0 | 0) << _GLF_IDENTITY(int(8), int(8)))) >> 0, (((0 | 0) << _GLF_IDENTITY(int(8), int(8)))) >> 0, _GLF_IDENTITY((((0 | 0) << _GLF_IDENTITY(int(8), int(8)))) >> 0, int(int((((0 | 0) << _GLF_IDENTITY(int(8), int(8)))) >> 0)))))), (false ? _GLF_FUZZED(-67112) : _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (0) - 0) | 0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))))), (true ? ((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (0) - 0) | 0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))))) : _GLF_FUZZED(_injected_loop_counter))), (((0 | 0) << _GLF_IDENTITY(int(8), int(8)))) >> 0))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - _GLF_IDENTITY(0, ~ (~ (0)))) | 0) | (_GLF_IDENTITY(0, (0) - 0) | 0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))), int(ivec2(clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))), 1)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), (((0 | 0) << _GLF_IDENTITY(int(8), int(8)))) >> 0), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(bitfieldReverse(-48065)) : 0))) - 0) | 0))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), max(int(8), _GLF_IDENTITY(int(8), (int(8)) << 0)))), _GLF_IDENTITY(int(8), int(8))))), ((_GLF_IDENTITY((0 | 0), clamp(_GLF_IDENTITY((0 | 0), ((0 | 0)) + 0), (0 | 0), (0 | 0))) << _GLF_IDENTITY(int(8), int(8)))) >> 0)) | 0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (0) - 0) | 0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, int(_GLF_IDENTITY(ivec2((0) - 0, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), (ivec2((0) - 0, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))) / ivec2(1, 1))))) | 0) | (_GLF_IDENTITY(0, (0) - 0) | 0)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, min(_GLF_IDENTITY(0, (0) - 0) | 0, _GLF_IDENTITY(0, (0) - 0) | 0)), (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (0) - 0) | 0))))) << 0)) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, (false ? _GLF_FUZZED(51090) : 8)))), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))))), (((0 | 0) << _GLF_IDENTITY(int(8), int(8)))) >> 0), min(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) - 0))) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) - 0) | 0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))))), (((0 | 0) << _GLF_IDENTITY(int(8), int(8)))) >> 0), (false ? _GLF_FUZZED(-67112) : _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (0) - 0) | 0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))))), (true ? ((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (0) - 0) | 0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) << 0)), int(8))))) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY((((0 | 0) << _GLF_IDENTITY(int(8), int(8)))) >> 0, _GLF_IDENTITY(int(int((((0 | 0) << _GLF_IDENTITY(int(8), int(8)))) >> 0)), (int(int((((0 | 0) << _GLF_IDENTITY(int(8), int(8)))) >> 0))) | 0))))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (0) - 0) | 0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))), int(ivec2(clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))), 1)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), (((0 | 0) << _GLF_IDENTITY(int(8), int(8)))) >> 0), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0, (0) - 0) | 0))), min(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0, (0) - 0) | 0))), (true ? (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0, (0) - 0) | 0))) : _GLF_FUZZED(_injected_loop_counter))), (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0, (0) - 0) | 0))))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), max(int(8), _GLF_IDENTITY(int(8), (int(8)) << 0)))), _GLF_IDENTITY(int(8), int(8))))), ((_GLF_IDENTITY((0 | 0), clamp(_GLF_IDENTITY((0 | 0), ((0 | 0)) + 0), (0 | 0), (0 | 0))) << _GLF_IDENTITY(int(8), int(8)))) >> 0)) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (0) - 0) | 0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (0) - 0) | 0)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (0) - 0) | 0))))) << 0)) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))))), (((0 | 0) << _GLF_IDENTITY(int(8), int(8)))) >> 0), min(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) - 0))) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) - 0) | 0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))))), (((0 | 0) << _GLF_IDENTITY(int(8), int(8)))) >> 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-67112), max(_GLF_IDENTITY(_GLF_FUZZED(-67112), (_GLF_FUZZED(-67112)) * 1), _GLF_FUZZED(-67112))) : _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | _GLF_IDENTITY(0, (0 ^ 0) ^ (0))) | (_GLF_IDENTITY(0, (0) - 0) | 0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))))), (true ? ((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (0) - 0) | 0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), ~ (~ (_GLF_IDENTITY(int(8), int(8))))), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))))) : _GLF_FUZZED(_injected_loop_counter))), (((0 | 0) << _GLF_IDENTITY(int(8), int(8)))) >> 0))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (0) - 0) | 0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))), int(ivec2(clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))), 1)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), (((0 | 0) << _GLF_IDENTITY(int(8), int(8)))) >> 0), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, 0 | (_GLF_IDENTITY(0, (0) - 0) | 0)), (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0, (0) - 0) | 0))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), max(int(8), _GLF_IDENTITY(int(8), (int(8)) << 0)))), _GLF_IDENTITY(int(8), int(8))))), ((_GLF_IDENTITY((0 | 0), clamp(_GLF_IDENTITY((0 | 0), ((0 | 0)) + 0), (0 | _GLF_IDENTITY(0, (0) << 0)), (0 | 0))) << _GLF_IDENTITY(int(8), int(8)))) >> 0)) | 0))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (0) - 0) | 0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (0) - 0) | 0)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (0) - 0) | 0))))) << 0)) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(_GLF_IDENTITY(8, ~ (~ (8)))), int(8))))), (((0 | 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), 0 | (int(8))), _GLF_IDENTITY(int(8), max(_GLF_IDENTITY(int(8), (int(8)) | 0), int(8)))))) >> 0), min(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) - 0))) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) - 0) | 0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))))), (((0 | 0) << _GLF_IDENTITY(int(8), int(8)))) >> 0), (false ? _GLF_FUZZED(-67112) : _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (0) - 0) | 0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))))), (true ? ((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (0) - 0) | 0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))))) : _GLF_FUZZED(_injected_loop_counter))), (((0 | 0) << _GLF_IDENTITY(int(8), int(8)))) >> 0))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(0, (0) - 0) | 0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))), int(ivec2(clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))), 1)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), (((0 | 0) << _GLF_IDENTITY(int(8), int(8)))) >> 0), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, (_GLF_IDENTITY(0, (0) - 0) | 0) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | 0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0, (0) - 0) | 0))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), max(int(8), _GLF_IDENTITY(int(8), (int(8)) << 0)))), _GLF_IDENTITY(int(8), int(8))))), ((_GLF_IDENTITY((_GLF_IDENTITY(0 | 0, (false ? _GLF_FUZZED(int(subgroup_size)) : _GLF_IDENTITY(0 | 0, (0 | 0) >> 0)))), clamp(_GLF_IDENTITY((0 | 0), ((0 | 0)) + 0), (0 | 0), (0 | 0))) << _GLF_IDENTITY(int(8), int(8)))) >> 0)) | 0))))))) >> 0)))) << 0) + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), (false ? _GLF_FUZZED(2149) : 4)))))), max((_GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(2149) : 4)))), _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(2149) : 4))))) + 0, min(_GLF_IDENTITY((~ (~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(2149) : 4))))) + 0, ~ (~ ((~ (~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(2149) : 4))))) + 0))), (~ (~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(2149) : 4))))) + 0))))), (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(2149) : 4)))))))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(2149) : 4)))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(_GLF_IDENTITY(2149, ((0 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(8), int(8))) | (2149))) : 4)))))), 0), (ivec2((_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(2149) : 4)))))), 0)) | (ivec2((_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(2149) : 4)))))), 0))), min(ivec2((_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(2149) : 4)))))), 0), _GLF_IDENTITY(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(2149) : 4)))))), max((_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(2149) : 4)))))), (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(2149) : 4)))))))), 0), (true ? ivec2((_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(2149) : 4)))))), 0) : _GLF_FUZZED(max(ivec2(76911, 53910), _injected_loop_counter)))))))), (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(atomicOr(_injected_loop_counter, _injected_loop_counter)) : 0)))) & _GLF_IDENTITY(int(7467u), ~ (~ _GLF_IDENTITY((int(7467u)), min((int(7467u)), (int(7467u))))))))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(_GLF_IDENTITY(2149, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (2149))) : 4)))))), int(ivec2((_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(2149) : 4)))))), 0))), (0 & int(7467u))), (false ? _GLF_FUZZED((ivec2(42388, -84028) * ivec2(-1129, 9696))) : ivec2(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(_GLF_IDENTITY(2149, int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), cos(0.0), 1.0, 1.0, 0.0), transpose(transpose(mat4x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 0.0)))))), injectionSwitch.x)) | (2149))) : 4)))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(_GLF_IDENTITY(2149, int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 0.0), transpose(transpose(mat4x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, cos(0.0), 1.0, 1.0, 0.0)))))), injectionSwitch.x)) | (2149))) : 4)))), ((~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(_GLF_IDENTITY(2149, int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 0.0), transpose(transpose(mat4x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 0.0)))))), injectionSwitch.x)) | (2149))) : 4))))) / 1)) >> 0))), int(ivec2((_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(2149) : 4)))))), 0))), (0 & int(7467u))))))) >> 0))));
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0 * (float(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), max(int(4), int(4)))) + (77438 & 0)))))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(1, min(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-9.3) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(295.581)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ int(_GLF_ONE(1.0, injectionSwitch.y)))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 do
                  {
                   if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))) || false))
                    {
                     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) | 0)) | 0)) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                      {
                       do
                        {
                         do
                          {
                           atomicStore(checker[_GLF_struct_replacement_13._f4.virtual_gid], _GLF_struct_replacement_14.read, _GLF_IDENTITY(4, 0 | (4)), 64, _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4), (_GLF_IDENTITY((4), max(_GLF_IDENTITY((4), max((4), (4))), (4)))) >> 0) | 0), (_GLF_IDENTITY(4, clamp(4, 4, 4))) / 1));
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                      {
                       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                        {
                         do
                          {
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               do
                                {
                                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
                                  {
                                   barrier();
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false)))))));
                              }
                             else
                              {
                              }
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                      }
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, 0 | (_injected_loop_counter ++))) >> 0))
                      {
                       do
                        {
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 0, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0 | (int(ivec4(1, 0, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))); _injected_loop_counter ++)
                          {
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                            }
                           else
                            {
                             do
                              {
                               do
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   do
                                    {
                                     subgroupAll(false);
                                    }
                                   while(_GLF_WRAPPED_LOOP(false));
                                  }
                                 else
                                  {
                                  }
                                }
                               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false));
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
                      }
                    }
                   else
                    {
                     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 0 + (_GLF_IDENTITY(int(6), ~ (_GLF_IDENTITY(~ (int(6)), (_GLF_IDENTITY(~ (int(6)), (~ (int(6))) >> 0)) / 1)))))))); _injected_loop_counter ++)
                      {
                       for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) * 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           do
                            {
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                              {
                               atomicStore(buf[_GLF_struct_replacement_13._f4.virtual_gid], _GLF_struct_replacement_14.read, 4, 64, 4);
                              }
                             else
                              {
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         else
                          {
                          }
                        }
                      }
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       subgroupAll(true);
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(1128.3551, 6.5)) : _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), 1.0, _GLF_IDENTITY(dot(vec4(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), 0.0, 1.0))), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch), vec2(_GLF_IDENTITY(vec3(max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch), _GLF_IDENTITY(abs(sqrt(0.0)), (abs(sqrt(0.0))) / 1.0)), (true ? _GLF_IDENTITY(vec3(max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch), abs(sqrt(0.0))), (vec3(max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch), abs(sqrt(0.0)))) - vec3(0.0, 0.0, 0.0)) : _GLF_FUZZED(vec3(-9.5, -3.6, -6315.9522))))))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0))).y), ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(1128.3551, 6.5)) : _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), 1.0, _GLF_IDENTITY(dot(vec4(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), 0.0, 1.0))), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch), vec2(_GLF_IDENTITY(vec3(max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch), _GLF_IDENTITY(abs(sqrt(0.0)), (abs(sqrt(0.0))) / 1.0)), (true ? _GLF_IDENTITY(vec3(max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch), abs(sqrt(0.0))), (vec3(max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch), abs(sqrt(0.0)))) - vec3(0.0, 0.0, 0.0)) : _GLF_FUZZED(vec3(-9.5, -3.6, -6315.9522))))))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0))).y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))));
                }
               else
                {
                }
              }
            }
           else
            {
            }
          }
        }
      }
     else
      {
      }
    }
  }
}
