#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID)).x, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID.x), min((gl_WorkGroupID.x), (gl_WorkGroupID.x))), uint(uvec4(~ (gl_WorkGroupID.x), 1u, 1u, (0u | 0u))))));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), ! (! ((false)))) || false) || ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) || false)) || ((injectionSwitch.x > injectionSwitch.y))) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(bool(bool(false)), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bool(false)), true, false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true), true, false)), bvec3(bvec4(bvec3(bvec3(bool(bool(false)), true, false)), false))), false)))))))), true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) || false)) || false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_local_id))) * subgroup_size, min(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), 0u | ((subgroup_id))), (0u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ (_GLF_IDENTITY((subgroup_id), 0u | ((subgroup_id))))) << 0u), 1u), uvec2(0u, 0u) + (uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), 1u))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))) : _GLF_FUZZED(subgroup_local_id), (true ? true ? subgroup_id : _GLF_FUZZED(subgroup_local_id) : _GLF_FUZZED(subgroup_local_id))))) * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(true ? subgroup_id : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) | (_GLF_FUZZED(subgroup_local_id))), (true ? subgroup_id : _GLF_FUZZED(subgroup_local_id)) - 0u))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)))), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size))))) - 0u))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), _GLF_IDENTITY(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, false)))))), false, true))), true, true)))), false || (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, true))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))), (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))), false || (! (bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))))) || false))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
        return;
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) + 0.0)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))), (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! (_GLF_IDENTITY(false, (false) && true)))))), false)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))))))))), false || (! (_GLF_IDENTITY(false, (false) && true)))))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! (_GLF_IDENTITY(false, (false) && true)))))), false))), ! (_GLF_IDENTITY(! (! (bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! (_GLF_IDENTITY(false, (false) && true)))))), false)))), ! (! (! (! (bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! (_GLF_IDENTITY(false, (false) && true)))))), false)))))))))))))) || (bool(bool(false))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! (_GLF_IDENTITY(false, (false) && true)))))), false)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))))))))), false || (! (_GLF_IDENTITY(false, (false) && true)))))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! (_GLF_IDENTITY(false, (false) && true)))))), false))), ! (_GLF_IDENTITY(! (! (bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! (_GLF_IDENTITY(false, (false) && true)))))), false)))), ! (! (! (! (bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! (_GLF_IDENTITY(false, (false) && true)))))), false)))))))))))))) || (bool(bool(false))))), (! (_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! (_GLF_IDENTITY(false, (false) && true)))))), false)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ((true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))))))))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) || false))))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false))))), false)))) && true)))))), false))), ! (_GLF_IDENTITY(! (! (bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! (_GLF_IDENTITY(false, (false) && true)))))), false)))), ! (! (! (! (bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! (_GLF_IDENTITY(false, (false) && true)))))), false)))))))))))))) || (bool(bool(false)))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)), max(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)), float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, exp(0.0), 0.0))) > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, exp(0.0), 0.0))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, exp(0.0), 0.0))) > injectionSwitch.y)))))))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(virtual_gid))), uint(uvec3(subgroup_local_id + 1, (139602u & 0u), 0u)))) % _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))), max((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(bitfieldReverse(subgroup_size))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(bitfieldReverse(subgroup_size))))), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(bitfieldReverse(subgroup_size)), (true ? subgroup_local_id : _GLF_FUZZED(bitfieldReverse(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)))) ^ 0u))))) >> 0u), (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(subgroup_size)), clamp(_GLF_FUZZED(bitfieldReverse(subgroup_size)), _GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(subgroup_size)), 0u ^ (_GLF_FUZZED(bitfieldReverse(subgroup_size)))), _GLF_FUZZED(bitfieldReverse(subgroup_size))))))), (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(bitfieldReverse(subgroup_size))))))) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u), (true ? subgroup_local_id : _GLF_FUZZED(bitfieldReverse(subgroup_size))))) | _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) * ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))) + 1, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), (true ? subgroup_local_id : _GLF_FUZZED(bitfieldReverse(subgroup_size))))) | _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) * ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), (true ? subgroup_local_id : _GLF_FUZZED(bitfieldReverse(subgroup_size))))) | _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) * ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))) + 1) - 0u)) << 0u)) % subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(139602u & 0u, clamp(139602u & 0u, 139602u & 0u, 139602u & 0u))), ((_GLF_IDENTITY(139602u & 0u, clamp(139602u & 0u, 139602u & 0u, 139602u & 0u)))) | ((_GLF_IDENTITY(139602u & 0u, clamp(139602u & 0u, 139602u & 0u, 139602u & 0u))))), _GLF_IDENTITY(0u, (0u) | (0u)))))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(bitfieldReverse(subgroup_size))))) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(bitfieldReverse(subgroup_size))))) | (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)))) + 1) << 0u)) % subgroup_size)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(subgroup_local_id + 1, (139602u & 0u), 0u)))) % subgroup_size, min((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(subgroup_local_id + 1, (139602u & 0u), 0u)))) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, uint(uvec3(subgroup_local_id + 1, (139602u & 0u), 0u)))) % subgroup_size)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(subgroup_local_id + 1, (139602u & 0u), 0u)))) % subgroup_size, min((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(subgroup_local_id + 1, (139602u & 0u), 0u)))) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, uint(uvec3(subgroup_local_id + 1, (139602u & 0u), 0u)))) % subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(subgroup_local_id + 1, (139602u & 0u), 0u)))) % subgroup_size, min((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(subgroup_local_id + 1, (139602u & 0u), 0u)))) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, uint(uvec3(subgroup_local_id + 1, (139602u & 0u), 0u)))) % subgroup_size)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(subgroup_local_id + 1, (139602u & 0u), 0u)))) % subgroup_size, min((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(subgroup_local_id + 1, (139602u & 0u), 0u)))) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, uint(uvec3(subgroup_local_id + 1, (139602u & 0u), 0u)))) % subgroup_size))) << 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(subgroup_local_id + 1, (139602u & 0u), 0u)))) % subgroup_size, min((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(subgroup_local_id + 1, (139602u & 0u), 0u)))) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, uint(uvec3(subgroup_local_id + 1, (139602u & 0u), 0u)))) % subgroup_size)))), max((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(bitfieldReverse(subgroup_size))))) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u, (1u) * 1u) * (subgroup_local_id))))) << 0u))) + 1, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(bitfieldReverse(subgroup_size))))) | _GLF_IDENTITY((subgroup_local_id), max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> 0u), 0u, (1u ^ 1u)), (uvec3(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> 0u), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u)), (1u ^ 1u))) | uvec3(0u, 0u, 0u)))), (subgroup_local_id)))) + 1) << 0u)) % subgroup_size)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)), uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)), 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uint(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) >> 0u, ((subgroup_local_id) >> 0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u, 0u, 1u)))))), uint(uvec3(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)), uint(uvec4(uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)), 0u, 0u, 1u)))), 1u, 0u)))) + 1, uint(uvec3(subgroup_local_id + 1, (139602u & 0u), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))))))) % subgroup_size, max((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))), (max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))) / 1u)) + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true))) ? _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) : _GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(subgroup_size)), clamp(_GLF_FUZZED(bitfieldReverse(subgroup_size)), _GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(subgroup_size)), _GLF_IDENTITY((_GLF_FUZZED(bitfieldReverse(subgroup_size))) >> 0u, ((_GLF_FUZZED(bitfieldReverse(subgroup_size))) >> 0u) | ((_GLF_FUZZED(bitfieldReverse(subgroup_size))) >> 0u))), _GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(subgroup_size)), _GLF_IDENTITY(min(_GLF_FUZZED(bitfieldReverse(subgroup_size)), _GLF_FUZZED(bitfieldReverse(subgroup_size))), clamp(min(_GLF_FUZZED(bitfieldReverse(subgroup_size)), _GLF_FUZZED(bitfieldReverse(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))), _GLF_IDENTITY(min(_GLF_FUZZED(bitfieldReverse(subgroup_size)), _GLF_FUZZED(bitfieldReverse(subgroup_size))), uint(uvec3(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(subgroup_size)), (_GLF_FUZZED(bitfieldReverse(subgroup_size))) + (1u ^ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), min(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u)))), min((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), min(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), min(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u)))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), min(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u)))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), min(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u))))) - 0u)) | ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), min(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u))))))))))), _GLF_FUZZED(bitfieldReverse(subgroup_size))), (min(_GLF_FUZZED(bitfieldReverse(subgroup_size)), _GLF_FUZZED(bitfieldReverse(subgroup_size)))) - 0u), 1u, 1u))), min(_GLF_FUZZED(bitfieldReverse(subgroup_size)), _GLF_FUZZED(bitfieldReverse(subgroup_size))))))))))) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), clamp(uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)))), (_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), clamp(uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size))))) | (_GLF_IDENTITY(uint(bitfieldReverse(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), clamp(uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)))))), 1u, 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), (uvec4(_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), clamp(uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)))), 1u, 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) | (uvec4(_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), clamp(uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)))), 1u, 1u, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), max(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))), (uvec4(_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), clamp(_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), (uint(bitfieldReverse(subgroup_size))) | (_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), clamp(uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)))))), uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)))), 1u, _GLF_IDENTITY(1u, 0u + (1u)), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | 0u)), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | 0u)), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | 0u)), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | 0u)), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, clamp(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, (2u) / 1u)) >> 0u), 2u, 2u)))), ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | 0u)), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) << 0u), 0u + (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | 0u)), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | 0u)), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) << 0u)))) | (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | 0u)), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | 0u)), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) << 0u))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) - 0u) << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | 0u)), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | 0u)), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) << 0u))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | 0u)), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | 0u)), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) << 0u))), 1u * (~ (~ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | 0u)), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | 0u)), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) << 0u)))))) ^ 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) - 0u) << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | 0u)), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | 0u)), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) << 0u))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | 0u)), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | 0u)), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) << 0u))), 1u * (~ (~ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | 0u)), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | 0u)), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) << 0u)))))) ^ 0u), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) - 0u) << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | 0u)), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | 0u)), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) << 0u))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | 0u)), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | 0u)), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) << 0u))), 1u * (~ (~ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | 0u)), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | 0u)), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) << 0u)))))) ^ 0u)))))))))))) ^ uvec4(0u, 0u, 0u, 0u))))), _GLF_IDENTITY(max(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), clamp(uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)))), 1u, _GLF_IDENTITY(1u, (1u) | (0u | 0u)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), (uvec4(_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), clamp(uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)))), 1u, 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))), uint(2u))))) ^ uvec4(0u, 0u, 0u, 0u)))), (_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), clamp(uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)))), 1u, 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(bitfieldReverse(subgroup_size), min(bitfieldReverse(subgroup_size), bitfieldReverse(subgroup_size)))), clamp(uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)))), 1u, 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) ^ uvec4(0u, 0u, 0u, 0u)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), clamp(uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)))), 1u, 1u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, 0u + (_GLF_IDENTITY(2u, (2u) << 0u))))), uint(uint((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))), (uvec4(_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), clamp(uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)))), 1u, 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) ^ uvec4(0u, 0u, 0u, 0u)))), ((~ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), clamp(uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)))), 1u, 1u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, 0u + (_GLF_IDENTITY(2u, (2u) << 0u))))), uint(uint((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))), (uvec4(_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), clamp(uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)))), 1u, 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) ^ uvec4(0u, 0u, 0u, 0u))))) / uvec4(1u, 1u, 1u, 1u)))))) | (_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), clamp(uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)))), (_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), clamp(uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size))))) | (_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), clamp(uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)))))), 1u, 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) * 1u)), uint(2u)))), (uvec4(_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), clamp(uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)))), 1u, 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) | (2u))))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) ^ uvec4(0u, 0u, 0u, 0u))))))), uint(_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), clamp(uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)))), 1u, 1u, (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u | ((1u << _GLF_IDENTITY(uint(2u), uint(2u))))), (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u | ((1u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) * 1u)))))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u | ((1u << _GLF_IDENTITY(uint(2u), uint(2u)))))) - 0u)) ^ 0u) >> _GLF_IDENTITY(uint(2u), uint(2u)))), (uvec4(_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), clamp(uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)))), 1u, 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), ~ (~ (_GLF_IDENTITY(uint(2u), uint(uvec2(uint(2u), 1u)))))), clamp(_GLF_IDENTITY(uint(2u), ~ (~ (_GLF_IDENTITY(uint(2u), uint(uvec2(uint(2u), 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), ~ (~ (_GLF_IDENTITY(uint(2u), uint(uvec2(uint(2u), 1u)))))), 1u * (_GLF_IDENTITY(uint(2u), ~ (~ (_GLF_IDENTITY(uint(2u), uint(uvec2(uint(2u), 1u)))))))), _GLF_IDENTITY(uint(2u), ~ (~ (_GLF_IDENTITY(uint(2u), uint(uvec2(uint(2u), 1u)))))))))))) ^ uvec4(0u, 0u, 0u, 0u)))))), ~ (~ (max(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), clamp(uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)))), 1u, _GLF_IDENTITY(1u, (1u) | (0u | 0u)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), (uvec4(_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), clamp(uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)))), 1u, 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) ^ uvec4(0u, 0u, 0u, 0u)))), (_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), clamp(uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), uint(bitfieldReverse(subgroup_size)))), 1u, 1u, ((_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) / 1u), 1u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 1u)))) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), ~ (~ (uvec4(_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), clamp(uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)))), 1u, 1u, ((_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) / 1u), 1u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 1u)))) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))), _GLF_IDENTITY((uvec4(_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), clamp(uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)))), 1u, 1u, ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u | (uint(2u))))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), min((uvec4(_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), clamp(uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)))), 1u, 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), (uvec4(_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), clamp(uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)))), 1u, 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) >> 0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ (_GLF_IDENTITY(uint(2u), uint(2u)))))))))) ^ uvec4(0u, 0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), clamp(uint(bitfieldReverse(subgroup_size)), uint(_GLF_IDENTITY(bitfieldReverse(subgroup_size), min(bitfieldReverse(subgroup_size), bitfieldReverse(subgroup_size)))), uint(bitfieldReverse(subgroup_size)))), 1u, 1u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, _GLF_IDENTITY(2u, min(2u, 2u)))))), uint(uint((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))), (uvec4(_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), clamp(uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)))), 1u, 1u, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), max(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), clamp(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))) ^ uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u, 0u)))))))) | (_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), clamp(uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)))), 1u, 1u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u), uint(2u))), clamp((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u), uint(2u))), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u), uint(2u))), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u), uint(2u))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), (uvec4(_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), clamp(uint(bitfieldReverse(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)))), 1u, 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) ^ uvec4(0u, 0u, 0u, 0u))))))), uint(_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), clamp(uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), uint(bitfieldReverse(subgroup_size)))), 1u, 1u, (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), min((1u << _GLF_IDENTITY(uint(2u), uint(2u))), (1u << _GLF_IDENTITY(uint(2u), uint(2u))))), 0u | ((1u << _GLF_IDENTITY(uint(2u), uint(2u))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), (uvec4(_GLF_IDENTITY(uint(bitfieldReverse(subgroup_size)), clamp(uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)), uint(bitfieldReverse(subgroup_size)))), 1u, 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), uint(uvec2(uint(2u), 1u)))))))))) ^ uvec4(0u, 0u, 0u, 0u))))))))))))))) | _GLF_IDENTITY((subgroup_local_id), max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) << 0u), 0u)) | ((subgroup_local_id))), min(_GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id))), (subgroup_local_id))), (subgroup_local_id)))) + 1) << 0u)) % subgroup_size)))), (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size)));
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY((4), ~ (_GLF_IDENTITY(~ ((4)), (_GLF_IDENTITY(_GLF_IDENTITY(~ ((4)), max(~ _GLF_IDENTITY(((4)), int(ivec2(_GLF_IDENTITY(((4)), (((4))) | 0), 0))), ~ _GLF_IDENTITY((_GLF_IDENTITY((4), (0 ^ 0) ^ ((4)))), ((_GLF_IDENTITY((4), (0 ^ 0) ^ ((4))))) | 0))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(~ ((4)), max(~ _GLF_IDENTITY(((_GLF_IDENTITY(4, int(ivec2(4, (0 >> _GLF_IDENTITY(int(0), int(0)))))))), int(ivec2(((4)), 0))), ~ _GLF_IDENTITY((_GLF_IDENTITY((4), (0 ^ 0) ^ ((4)))), ((_GLF_IDENTITY((4), (_GLF_IDENTITY(0 ^ 0, max(0 ^ 0, 0 ^ 0))) ^ ((4))))) | 0))))), (false ? _GLF_FUZZED(-38453) : int(int(_GLF_IDENTITY(~ ((4)), max(~ _GLF_IDENTITY(((4)), int(ivec2(((4)), 0))), _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((4), (0 ^ 0) ^ ((4)))), ((_GLF_IDENTITY((4), (0 ^ 0) ^ ((4))))) | 0), (~ _GLF_IDENTITY((_GLF_IDENTITY((4), (0 ^ 0) ^ ((4)))), ((_GLF_IDENTITY((4), (0 ^ 0) ^ ((4))))) | 0)) | 0))))))))) | _GLF_IDENTITY((~ ((4))), ~ (~ ((~ ((4))))))))) << (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, 0 | (7))), int(7)))), 64, _GLF_IDENTITY(0, clamp(0, 0, 0)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), (_GLF_IDENTITY(false, (false) || false)) && true)))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), min((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true, true && ((bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false))))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false)))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), ! (! (bool(bool(false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), max(uint(_GLF_IDENTITY(1, max(1, 1))), uint(1))), _GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((uint(1)), 1u), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-568.597), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((+ 9701.4400))), bvec2(true, false))).x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(68535u, 140047u)) : uvec2((uint(1)), 1u)))), uint(uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((uint(1)), 1u), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, exp(0.0)))) : _GLF_FUZZED(-399.516))) > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(68535u, 140047u)) : uvec2((uint(1)), 1u)))), (uint(_GLF_IDENTITY(uvec2((uint(1)), 1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(68535u, 140047u)) : uvec2((uint(1)), 1u))))) << 0u), 0u, 0u)))) | 0u))), 4, 64, _GLF_IDENTITY(4, (4) | 0));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(9.4, -4.7)) : vec2(1.0, 1.0)))).x < injectionSwitch.y)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), false)))))) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, true)))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sin(0.0)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sin(0.0)))))), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(true, (true) && true), true))))), false || (bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), mix(float(_GLF_FUZZED(1688.9190)), _GLF_IDENTITY(float(injectionSwitch.y), (_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? float(injectionSwitch.y) : _GLF_FUZZED(6.3))), _GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), _GLF_IDENTITY(false, false || (false))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), false || (bool(bvec4(false, true, false, false)))))))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))), injectionSwitch.x)) > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), (bool(bvec2(_GLF_DEAD(false), false))) && true))) && true), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false, true)), true, true))))), true && (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false, true)), true, true))))))))))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), false))))), true, false, true))))) || false)))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
            return;
           return;
          }
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3.2))))) > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3.2))))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(mat2x4(max(injectionSwitch, injectionSwitch), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, sqrt(0.0)), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, sqrt(0.0)), vec2(1.0, 0.0)), float(mat3x4(dot(vec2(1.0, sqrt(0.0)), vec2(1.0, 0.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(7.6, -7.6), max(vec2(7.6, -7.6), vec2(7.6, -7.6)))) : vec2(mat2x4(max(injectionSwitch, injectionSwitch), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, sqrt(0.0)), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, sqrt(0.0)), vec2(1.0, 0.0)), float(mat3x4(dot(vec2(1.0, sqrt(0.0)), vec2(1.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))))))).y))))), bool(bvec4(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3.2))))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(mat2x4(max(injectionSwitch, injectionSwitch), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(sqrt(0.0), (false ? _GLF_FUZZED(-53.96) : sqrt(0.0)))), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, sqrt(0.0)), vec2(1.0, 0.0)), float(mat3x4(dot(vec2(1.0, sqrt(0.0)), vec2(1.0, 0.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(7.6, -7.6), max(vec2(7.6, -7.6), vec2(7.6, -7.6)))) : vec2(mat2x4(max(injectionSwitch, injectionSwitch), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, sqrt(0.0)), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, sqrt(0.0)), vec2(1.0, 0.0)), float(mat3x4(dot(vec2(1.0, sqrt(0.0)), vec2(1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))))))).y))))), false, false, false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || _GLF_IDENTITY(false, (false) && true))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9.5)))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
    return;
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[virtual_gid], read, _GLF_IDENTITY(4, _GLF_IDENTITY((4), max(_GLF_IDENTITY((4), ((4)) * ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))), (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, clamp(4, 4, 4))))))) >> 0), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
    return;
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = (_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), 0 ^ (int(6))), int(6)), _GLF_IDENTITY(0, ~ (~ (0))) + (_GLF_IDENTITY(int(6), int(6)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), min(_GLF_IDENTITY(int(6), (int(6)) << 0), _GLF_IDENTITY(int(6), (int(6)) >> 0))), int(6)), _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), max((_GLF_IDENTITY(~ (0), (_GLF_IDENTITY(~ (0), _GLF_IDENTITY(min(~ (0), ~ (0)), ~ (_GLF_IDENTITY(~ (min(~ (0), ~ (0))), clamp(~ (min(~ (0), ~ (0))), ~ (min(~ (0), ~ (0))), ~ (min(~ (0), ~ (0))))))))) | (~ (0)))), _GLF_IDENTITY((~ (0)), ((~ (0))) | ((~ (0))))))) + (_GLF_IDENTITY(int(6), int(6))))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0, ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, ~ (~ (6))), 6)), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, ~ (~ _GLF_IDENTITY((6), (_GLF_IDENTITY((6), (true ? (6) : _GLF_FUZZED(72250)))) << 0))), 6)), max(_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, ~ (~ (6))), 6)), _GLF_IDENTITY(6, max(_GLF_IDENTITY(6, ~ (~ (6))), 6)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, ~ (~ (6))), 6)), max(_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, ~ (~ (6))), 6)), _GLF_IDENTITY(6, max(_GLF_IDENTITY(6, ~ (~ (6))), 6)))), _GLF_IDENTITY(_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, ~ (~ _GLF_IDENTITY((6), clamp((6), (6), (6))))), 6)), max(_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, ~ (~ (6))), 6)), _GLF_IDENTITY(6, max(_GLF_IDENTITY(6, ~ (~ (6))), 6)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, ~ (~ (6))), 6)), max(_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, ~ (~ (6))), 6)), _GLF_IDENTITY(6, max(_GLF_IDENTITY(6, ~ (~ (6))), 6)))), (_GLF_IDENTITY(_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, ~ (~ (6))), 6)), max(_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, ~ (~ (6))), 6)), _GLF_IDENTITY(6, max(_GLF_IDENTITY(6, ~ (~ (6))), 6))))) << 0))))))), 0 ^ (_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, ~ (~ (_GLF_IDENTITY(6, ~ (~ (6)))))), 6))))))) | 0) | ((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6)))), (false ? _GLF_FUZZED(-31906) : 0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))))))) | 0))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, true && (_injected_loop_counter < 1))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(0, ~ (~ (0))) ^ (_injected_loop_counter)) < 1)), false || ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)) < 1)))), ! (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))))); _injected_loop_counter ++)
    {
     subgroupAll(true);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         continue;
        }
       continue;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}
