#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_34 {
 ivec3 _f0;
 mat2x4 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_33 {
 mat3 _f0;
 vec4 _f1;
 mat3x2 _f2;
 mat3x2 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_32 {
 uvec4 _f0;
 mat2 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_35 {
 vec2 _f0;
 vec2 _f1;
 _GLF_struct_32 _f2;
 _GLF_struct_33 _f3;
 _GLF_struct_34 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_30 {
 ivec2 _f0;
 int _f1;
 mat2x3 _f2;
 bvec3 _f3;
 mat3x4 _f4;
 vec2 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_29 {
 ivec2 _f0;
 mat3 _f1;
 uvec4 _f2;
 vec2 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_28 {
 bvec2 _f0;
 bool _f1;
 mat3x4 _f2;
 bvec2 _f3;
 mat4 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_31 {
 _GLF_struct_28 _f0;
 _GLF_struct_29 _f1;
 uint _f2;
 uvec3 _f3;
 _GLF_struct_30 _f4;
} ;

struct _GLF_struct_26 {
 mat4 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_25 {
 uvec4 _f0;
 mat4x2 _f1;
 int _f2;
 vec4 _f3;
 uint _f4;
 mat2 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_24 {
 mat3x4 _f0;
 mat2x4 _f1;
 float _f2;
 mat3 _f3;
 uvec4 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_23 {
 vec2 _f0;
 bvec3 _f1;
 ivec4 _f2;
 mat2x3 _f3;
 mat2 _f4;
 mat2 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_27 {
 _GLF_struct_23 _f0;
 _GLF_struct_24 _f1;
 _GLF_struct_25 _f2;
 vec2 _f3;
 _GLF_struct_26 _f4;
} ;

struct _GLF_struct_36 {
 _GLF_struct_27 _f0;
 bvec3 _f1;
 uint subgroup_local_id;
 _GLF_struct_31 _f2;
 _GLF_struct_35 _f3;
} ;

struct _GLF_struct_20 {
 vec3 _f0;
} ;

struct _GLF_struct_19 {
 bool _f0;
 float _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_18 {
 mat4x3 _f0;
 mat3x4 _f1;
 mat3x4 _f2;
 vec2 _f3;
 float _f4;
 mat3 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_17 {
 vec3 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_21 {
 _GLF_struct_17 _f0;
 int _f1;
 _GLF_struct_18 _f2;
 vec4 _f3;
 _GLF_struct_19 _f4;
 _GLF_struct_20 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_16 {
 mat4x3 _f0;
} ;

struct _GLF_struct_14 {
 bvec2 _f0;
 vec2 _f1;
 uvec4 _f2;
 int _f3;
 ivec4 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_15 {
 _GLF_struct_14 _f0;
} ;

struct _GLF_struct_22 {
 mat2x4 _f0;
 mat4x3 _f1;
 bool _f2;
 _GLF_struct_15 _f3;
 _GLF_struct_16 _f4;
 _GLF_struct_21 _f5;
 uint workgroup_base;
} ;

struct _GLF_struct_11 {
 uvec4 _f0;
 float _f1;
 vec2 _f2;
 mat2x4 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_10 {
 uvec2 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_12 {
 _GLF_struct_10 _f0;
 _GLF_struct_11 _f1;
} ;

struct _GLF_struct_8 {
 ivec3 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_7 {
 vec3 _f0;
 bvec4 _f1;
 bvec3 _f2;
 mat2x4 _f3;
 int _f4;
} ;

struct _GLF_struct_9 {
 _GLF_struct_7 _f0;
 ivec4 _f1;
 _GLF_struct_8 _f2;
 ivec3 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_5 {
 vec4 _f0;
 mat4x3 _f1;
 int _f2;
 vec2 _f3;
} ;

struct _GLF_struct_4 {
 mat3x4 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_3 {
 ivec3 _f0;
 mat2x4 _f1;
 ivec4 _f2;
 uvec4 _f3;
 float _f4;
 uint _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_6 {
 float _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_5 _f3;
} ;

struct _GLF_struct_1 {
 uvec4 _f0;
 uvec4 _f1;
 mat4 _f2;
 uvec4 _f3;
 ivec3 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_0 {
 vec3 _f0;
 mat2 _f1;
 ivec3 _f2;
 ivec3 _f3;
 mat4 _f4;
 uint _f5;
 uint _f6;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_13 {
 _GLF_struct_2 _f0;
 _GLF_struct_6 _f1;
 uint read;
 int _f2;
 _GLF_struct_9 _f3;
 _GLF_struct_12 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))), _GLF_FUZZED(injectionSwitch))), _GLF_FUZZED(injectionSwitch))) : injectionSwitch)).x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))), _GLF_FUZZED(injectionSwitch))), _GLF_FUZZED(injectionSwitch))) : injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))), _GLF_FUZZED(injectionSwitch))), _GLF_FUZZED(injectionSwitch))) : injectionSwitch)).x > injectionSwitch.y)))))))), bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
    }
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec2(! (! (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (! (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(! (! (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true))), false, true)))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
    {
     barrier();
    }
   else
    {
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || (false))))), ! (! _GLF_IDENTITY(((! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))) || (_GLF_IDENTITY(((! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (injectionSwitch.x > injectionSwitch.y)) || (false)))))), ! (! ((_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), bool(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), false, true)))), ! (! ((! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), bool(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), false, true)))))))))))))))), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), ! (! ((! (_GLF_IDENTITY(false, false || (false)))))))), (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 0.0, 1.0, 1.0, exp(0.0), 1.0, 1.0, 1.0), mat4x2(mat4x3(mat4x2(injectionSwitch.x, 0.0, 1.0, 1.0, exp(0.0), 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(-406.341))) > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec3(8.1, -983.012, -220.473).r) : injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec3(8.1, -983.012, -220.473).r) : injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
   if(_GLF_DEAD(false))
    barrier();
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
   if(_GLF_DEAD(false))
    barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_36 _GLF_struct_replacement_36 = _GLF_struct_36(_GLF_struct_27(_GLF_struct_23(vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (false ? _GLF_FUZZED(631.306) : clamp(1.0, 1.0, 1.0))))), bvec3(true), ivec4(1), mat2x3(1.0), mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4081.0139)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mat2(1.0), ivec4(1)), _GLF_struct_24(mat3x4(1.0), mat2x4(1.0), 1.0, mat3(1.0), uvec4(_GLF_IDENTITY(1u, (1u) - 0u)), vec3(1.0)), _GLF_struct_25(uvec4(1u), mat4x2(1.0), 1, vec4(1.0), 1u, mat2(1.0), uvec2(1u)), vec2(1.0), _GLF_struct_26(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), (_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * mat4(1.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), (mat4(1.0)) / mat4(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.8))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), transpose(transpose(_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, sin(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))), ivec4(1))), _GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), false)))), gl_SubgroupInvocationID, _GLF_struct_31(_GLF_struct_28(bvec2(true), true, mat3x4(1.0), bvec2(true), mat4(1.0), ivec3(1)), _GLF_struct_29(ivec2(1), mat3(1.0), uvec4(1u), vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), mat4x3(_GLF_IDENTITY(1.0, 0.0 + (1.0)))), 1u, uvec3(1u), _GLF_struct_30(ivec2(1), 1, mat2x3(1.0), _GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false))), mat3x4(1.0), _GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY((_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(1.0)), (false ? _GLF_FUZZED(clamp(vec2(9.2, -5.3), 7061.0970, 3.8)) : mat2(1.0) * (vec2(1.0)))))) / vec2(1.0, 1.0), (_GLF_IDENTITY(_GLF_IDENTITY((vec2(1.0)) / vec2(1.0, 1.0), mix(vec2(((vec2(1.0)) / vec2(1.0, 1.0))[0], _GLF_FUZZED(-3014.2237)), vec2(_GLF_IDENTITY(_GLF_FUZZED(vec4(67.66, -544.153, 882.111, -9.1).a), min(_GLF_IDENTITY(_GLF_FUZZED(vec4(67.66, -544.153, 882.111, -9.1).a), 0.0 + (_GLF_FUZZED(vec4(67.66, -544.153, 882.111, -9.1).a))), _GLF_FUZZED(vec4(67.66, -544.153, 882.111, -9.1).a))), ((vec2(1.0)) / vec2(1.0, 1.0))[1]), bvec2(false, true))), min(_GLF_IDENTITY((vec2(1.0)) / vec2(1.0, 1.0), mix(vec2(((vec2(1.0)) / vec2(1.0, 1.0))[0], _GLF_FUZZED(-3014.2237)), vec2(_GLF_IDENTITY(_GLF_FUZZED(vec4(67.66, -544.153, 882.111, -9.1).a), min(_GLF_IDENTITY(_GLF_FUZZED(vec4(67.66, -544.153, 882.111, -9.1).a), 0.0 + (_GLF_FUZZED(vec4(67.66, -544.153, 882.111, -9.1).a))), _GLF_FUZZED(vec4(67.66, -544.153, 882.111, -9.1).a))), ((vec2(1.0)) / vec2(1.0, 1.0))[1]), bvec2(false, true))), _GLF_IDENTITY((vec2(1.0)) / vec2(1.0, 1.0), mix(vec2(((vec2(1.0)) / vec2(1.0, 1.0))[0], _GLF_FUZZED(-3014.2237)), vec2(_GLF_IDENTITY(_GLF_FUZZED(vec4(67.66, -544.153, 882.111, -9.1).a), min(_GLF_IDENTITY(_GLF_FUZZED(vec4(67.66, -544.153, 882.111, -9.1).a), 0.0 + (_GLF_FUZZED(vec4(67.66, -544.153, 882.111, -9.1).a))), _GLF_FUZZED(vec4(67.66, -544.153, 882.111, -9.1).a))), ((vec2(1.0)) / vec2(1.0, 1.0))[1]), bvec2(false, true)))))) - vec2(0.0, 0.0))), mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-90.60)), bool(false)))) + 0.0)))), _GLF_struct_35(vec2(1.0), vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_struct_32(uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(uvec2(17912u, 110782u).t, (true ? uvec2(17912u, 110782u).t : _GLF_FUZZED(subgroup_id)))) : 1u, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(uvec2(17912u, 110782u).t) : 1u, (false ? _GLF_FUZZED(uvec2(17912u, 110782u).t) : 1u) ^ 0u)) - 0u, ((_GLF_IDENTITY(false ? _GLF_FUZZED(uvec2(17912u, 110782u).t) : 1u, (false ? _GLF_FUZZED(uvec2(17912u, 110782u).t) : 1u) ^ 0u)) - 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(uvec2(17912u, 110782u).t) : 1u, (false ? _GLF_FUZZED(uvec2(17912u, 110782u).t) : 1u) ^ 0u)) - 0u, 0u + ((_GLF_IDENTITY(false ? _GLF_FUZZED(uvec2(17912u, 110782u).t) : 1u, (false ? _GLF_FUZZED(uvec2(17912u, 110782u).t) : 1u) ^ 0u)) - 0u))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(uvec2(17912u, 110782u).t, (true ? uvec2(17912u, 110782u).t : _GLF_FUZZED(subgroup_id)))) : 1u, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(uvec2(17912u, 110782u).t) : 1u, (false ? _GLF_FUZZED(uvec2(17912u, 110782u).t) : 1u) ^ 0u)) - 0u, ((_GLF_IDENTITY(false ? _GLF_FUZZED(uvec2(17912u, 110782u).t) : 1u, (false ? _GLF_FUZZED(uvec2(17912u, 110782u).t) : 1u) ^ 0u)) - 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(uvec2(17912u, 110782u).t) : 1u, (false ? _GLF_FUZZED(uvec2(17912u, 110782u).t) : 1u) ^ 0u)) - 0u, 0u + ((_GLF_IDENTITY(false ? _GLF_FUZZED(uvec2(17912u, 110782u).t) : 1u, (false ? _GLF_FUZZED(uvec2(17912u, 110782u).t) : 1u) ^ 0u)) - 0u)))))) ^ (0u & 29003u))))), mat2(1.0), uvec3(1u)), _GLF_struct_33(mat3(1.0), vec4(1.0), mat3x2(1.0), mat3x2(1.0), vec2(1.0)), _GLF_struct_34(ivec3(1), mat2x4(1.0), ivec4(1)), ivec3(1)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - (uvec3(32360u, 23302u, 176733u) & uvec3(0u, 0u, 0u))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, true))))))))))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 _GLF_struct_22 _GLF_struct_replacement_22 = _GLF_struct_22(mat2x4(1.0), mat4x3(1.0), true, _GLF_struct_15(_GLF_struct_14(bvec2(true), vec2(1.0), uvec4(1u), 1, ivec4(1), mat4(1.0))), _GLF_struct_16(mat4x3(1.0)), _GLF_struct_21(_GLF_struct_17(vec3(1.0), mat3x2(1.0)), 1, _GLF_struct_18(mat4x3(1.0), mat3x4(1.0), mat3x4(1.0), vec2(1.0), 1.0, mat3(1.0), uvec4(1u)), vec4(1.0), _GLF_struct_19(true, 1.0, uvec2(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | 0u), 1u)))))), _GLF_struct_20(_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(vec3(mat4x2(vec3(1.0), 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sin(0.0), 0.0)), (vec3(mat4x2(vec3(1.0), 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sin(0.0), 0.0))) + vec3(0.0, 0.0, 0.0)))), vec2(1.0)), workgroup_size * workgroup_id);
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_22.workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7.5)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(true)))), _GLF_IDENTITY(float(_GLF_FUZZED(-87.55)), max(float(_GLF_FUZZED(-87.55)), float(_GLF_FUZZED(-87.55)))), bool(false))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).x)) < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) ? _GLF_struct_replacement_22.workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))), _GLF_IDENTITY((subgroup_size) << 0u, 0u | ((subgroup_size) << 0u))) : _GLF_FUZZED(subgroup_id))) + _GLF_struct_replacement_36.subgroup_local_id, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) << 0u), clamp(uint(1u), uint(1u), uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) | (1u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) << 0u), clamp(uint(1u), uint(1u), uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) | (1u)))))), 0u | (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) << 0u), clamp(uint(1u), uint(1u), uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) | (1u)))))))), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) << 0u), clamp(uint(1u), uint(1u), uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) | (1u))))))))) ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_22.workgroup_base + subgroup_id * subgroup_size, min(_GLF_struct_replacement_22.workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)))) / 1u) * subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_22.workgroup_base + subgroup_id * subgroup_size, ~ (~ (_GLF_struct_replacement_22.workgroup_base + subgroup_id * subgroup_size))))), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)) ? _GLF_struct_replacement_22.workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u) : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_22.workgroup_base + subgroup_id * subgroup_size, min(_GLF_struct_replacement_22.workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_22.workgroup_base + subgroup_id * subgroup_size, ~ (~ (_GLF_struct_replacement_22.workgroup_base + subgroup_id * subgroup_size))))), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)) ? _GLF_struct_replacement_22.workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u) : _GLF_FUZZED(subgroup_id)))) >> 0u) + _GLF_struct_replacement_36.subgroup_local_id), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_22.workgroup_base + subgroup_id * subgroup_size, min(_GLF_struct_replacement_22.workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)))) / 1u) * subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_22.workgroup_base + subgroup_id * subgroup_size, ~ (~ (_GLF_struct_replacement_22.workgroup_base + subgroup_id * subgroup_size))))), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)) ? _GLF_struct_replacement_22.workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u) : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_22.workgroup_base + subgroup_id * subgroup_size, min(_GLF_struct_replacement_22.workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_22.workgroup_base + subgroup_id * subgroup_size, ~ (~ (_GLF_struct_replacement_22.workgroup_base + subgroup_id * subgroup_size))))), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)) ? _GLF_struct_replacement_22.workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u) : _GLF_FUZZED(subgroup_id)))) >> 0u) + _GLF_struct_replacement_36.subgroup_local_id))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_struct_replacement_22.workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u) + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_struct_replacement_36.subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY((_GLF_struct_replacement_36.subgroup_local_id + 1) % subgroup_size, ((_GLF_IDENTITY(_GLF_struct_replacement_36.subgroup_local_id, (_GLF_struct_replacement_36.subgroup_local_id) >> _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (0u) | (0u)) + _GLF_IDENTITY((_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(_GLF_IDENTITY((false ? uaddCarry(workgroup_id, workgroup_size, virtual_gid) : workgroup_id), (_GLF_IDENTITY((false ? uaddCarry(workgroup_id, workgroup_size, virtual_gid) : workgroup_id), (_GLF_IDENTITY((false ? uaddCarry(workgroup_id, workgroup_size, virtual_gid) : workgroup_id), 1u * ((false ? uaddCarry(workgroup_id, workgroup_size, virtual_gid) : workgroup_id)))) / _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, 0u ^ (1u))), (~ (_GLF_IDENTITY(1u, 0u ^ (1u)))) ^ 0u))))))) << 0u))))), ((_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(true ? 0u : _GLF_FUZZED(_GLF_IDENTITY((false ? uaddCarry(workgroup_id, workgroup_size, virtual_gid) : workgroup_id), (_GLF_IDENTITY((false ? uaddCarry(workgroup_id, workgroup_size, virtual_gid) : workgroup_id), (_GLF_IDENTITY((false ? uaddCarry(workgroup_id, workgroup_size, virtual_gid) : workgroup_id), 1u * ((false ? uaddCarry(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)) * 1u), workgroup_size, virtual_gid) : workgroup_id)))) / 1u)) << 0u)), (true ? true ? 0u : _GLF_FUZZED(_GLF_IDENTITY((false ? uaddCarry(workgroup_id, workgroup_size, virtual_gid) : workgroup_id), (_GLF_IDENTITY((false ? uaddCarry(workgroup_id, workgroup_size, virtual_gid) : workgroup_id), (_GLF_IDENTITY((false ? uaddCarry(workgroup_id, workgroup_size, virtual_gid) : workgroup_id), 1u * ((false ? uaddCarry(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)) * 1u), workgroup_size, virtual_gid) : workgroup_id)))) / 1u)) << 0u)) : _GLF_FUZZED((virtual_gid / uaddCarry(subgroup_id, virtual_gid, num_workgroup)))))), ~ (~ ((_GLF_IDENTITY(true ? 0u : _GLF_FUZZED(_GLF_IDENTITY((false ? uaddCarry(workgroup_id, workgroup_size, virtual_gid) : workgroup_id), (_GLF_IDENTITY((false ? uaddCarry(workgroup_id, workgroup_size, virtual_gid) : workgroup_id), (_GLF_IDENTITY((false ? uaddCarry(workgroup_id, workgroup_size, virtual_gid) : workgroup_id), 1u * ((false ? uaddCarry(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)) * 1u), workgroup_size, virtual_gid) : workgroup_id)))) / 1u)) << 0u)), (true ? true ? 0u : _GLF_FUZZED(_GLF_IDENTITY((false ? uaddCarry(workgroup_id, workgroup_size, virtual_gid) : workgroup_id), (_GLF_IDENTITY((false ? uaddCarry(workgroup_id, workgroup_size, virtual_gid) : workgroup_id), (_GLF_IDENTITY((false ? uaddCarry(workgroup_id, workgroup_size, virtual_gid) : workgroup_id), 1u * ((false ? uaddCarry(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)) * 1u), workgroup_size, virtual_gid) : workgroup_id)))) / 1u)) << 0u)) : _GLF_FUZZED((virtual_gid / uaddCarry(subgroup_id, virtual_gid, num_workgroup)))))))))))) << 0u))) + 1) % subgroup_size) - 0u), (_GLF_struct_replacement_36.subgroup_local_id + 1) % subgroup_size), (min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_36.subgroup_local_id, _GLF_IDENTITY((_GLF_struct_replacement_36.subgroup_local_id) * 1u, (_GLF_IDENTITY((_GLF_struct_replacement_36.subgroup_local_id) * 1u, 0u ^ ((_GLF_struct_replacement_36.subgroup_local_id) * 1u))) | _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(virtual_gid))))) + 1), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_36.subgroup_local_id, _GLF_IDENTITY((_GLF_struct_replacement_36.subgroup_local_id) * 1u, (_GLF_IDENTITY((_GLF_struct_replacement_36.subgroup_local_id) * 1u, 0u ^ ((_GLF_struct_replacement_36.subgroup_local_id) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))))) | _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(virtual_gid))))) + 1), (true ? (_GLF_IDENTITY(_GLF_struct_replacement_36.subgroup_local_id, _GLF_IDENTITY((_GLF_struct_replacement_36.subgroup_local_id) * 1u, (_GLF_IDENTITY((_GLF_struct_replacement_36.subgroup_local_id) * 1u, 0u ^ ((_GLF_struct_replacement_36.subgroup_local_id) * 1u))) | _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(virtual_gid))))) + 1) : _GLF_FUZZED((subgroup_size - virtual_gid))))) | 0u) % subgroup_size, ((_GLF_struct_replacement_36.subgroup_local_id + 1) % subgroup_size) - 0u), _GLF_IDENTITY((_GLF_struct_replacement_36.subgroup_local_id + 1), ((_GLF_struct_replacement_36.subgroup_local_id + 1)) << 0u) % subgroup_size)) + uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)), mix(vec2(_GLF_FUZZED(-7.6), _GLF_IDENTITY((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))), mix(vec2(((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))))[0], ((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))))[1]), vec2(_GLF_FUZZED(5644.7377), _GLF_FUZZED(83.87)), bvec2(false, false)))[1]), vec2((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)))[0], _GLF_FUZZED(-3831.6564)), bvec2(true, false)))))).x), clamp(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)), mix(vec2(_GLF_FUZZED(-7.6), _GLF_IDENTITY((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))), mix(vec2(((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))))[0], ((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))))[1]), vec2(_GLF_FUZZED(5644.7377), _GLF_FUZZED(83.87)), bvec2(false, false)))[1]), vec2((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)))[0], _GLF_FUZZED(-3831.6564)), bvec2(true, false)))))), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)), mix(vec2(_GLF_FUZZED(-7.6), _GLF_IDENTITY((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))), mix(vec2(((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))))[0], ((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))))[1]), vec2(_GLF_FUZZED(5644.7377), _GLF_FUZZED(83.87)), bvec2(false, false)))[1]), vec2((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)))[0], _GLF_FUZZED(-3831.6564)), bvec2(true, false)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)), mix(vec2(_GLF_FUZZED(-7.6), _GLF_IDENTITY((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))), mix(vec2(((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))))[0], ((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))))[1]), vec2(_GLF_FUZZED(5644.7377), _GLF_FUZZED(83.87)), bvec2(false, false)))[1]), vec2((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)))[0], _GLF_FUZZED(-3831.6564)), bvec2(true, false)))))), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)), mix(vec2(_GLF_FUZZED(-7.6), _GLF_IDENTITY((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))), mix(vec2(((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))))[0], ((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))))[1]), vec2(_GLF_FUZZED(5644.7377), _GLF_FUZZED(83.87)), bvec2(false, false)))[1]), vec2((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)))[0], _GLF_FUZZED(-3831.6564)), bvec2(true, false)))))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)), mix(vec2(_GLF_FUZZED(-7.6), _GLF_IDENTITY((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))), mix(vec2(((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))))[0], ((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))))[1]), vec2(_GLF_FUZZED(5644.7377), _GLF_FUZZED(83.87)), bvec2(false, false)))[1]), vec2((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)))[0], _GLF_FUZZED(-3831.6564)), bvec2(true, false)))))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)), mix(vec2(_GLF_FUZZED(-7.6), _GLF_IDENTITY((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))), mix(vec2(((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))))[0], ((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))))[1]), vec2(_GLF_FUZZED(5644.7377), _GLF_FUZZED(83.87)), bvec2(false, false)))[1]), vec2((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)))[0], _GLF_FUZZED(-3831.6564)), bvec2(true, false)))))))))).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)), mix(vec2(_GLF_FUZZED(-7.6), _GLF_IDENTITY((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))), mix(vec2(((vec2(vec4(injectionSwitch, sqrt(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7.2)))), 0.0))))[0], ((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))))[1]), vec2(_GLF_FUZZED(5644.7377), _GLF_FUZZED(83.87)), bvec2(false, false)))[1]), vec2((_GLF_IDENTITY(vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)), mix(vec2(_GLF_FUZZED(85.45), (vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)))[1]), vec2(_GLF_IDENTITY((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)))[0], ((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)))[0]) - 0.0), _GLF_FUZZED(7.8)), bvec2(true, false))))[0], _GLF_FUZZED(-3831.6564)), bvec2(true, false)))))).x), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)), mix(vec2(_GLF_FUZZED(-7.6), _GLF_IDENTITY((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))), mix(vec2(((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))))[0], ((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))))[1]), vec2(_GLF_FUZZED(5644.7377), _GLF_FUZZED(83.87)), bvec2(false, false)))[1]), vec2((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)))[0], _GLF_FUZZED(-3831.6564)), bvec2(true, false)))))), (false ? _GLF_FUZZED(vec2(546.470, -33.55)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sqrt(_GLF_IDENTITY(1.0, (1.0) / 1.0)), 0.0)), mix(vec2(_GLF_FUZZED(-7.6), _GLF_IDENTITY((vec2(vec4(injectionSwitch, sqrt(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) + 0.0)), 0.0))), mix(vec2(((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))))[0], ((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))))[1]), vec2(_GLF_FUZZED(5644.7377), _GLF_FUZZED(83.87)), bvec2(false, false)))[1]), vec2((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)))[0], _GLF_FUZZED(-3831.6564)), bvec2(true, false)))))))).x))))))), 0u | ((_GLF_IDENTITY((_GLF_struct_replacement_36.subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY((_GLF_struct_replacement_36.subgroup_local_id + 1) % subgroup_size, ((_GLF_IDENTITY(_GLF_struct_replacement_36.subgroup_local_id, (_GLF_struct_replacement_36.subgroup_local_id) >> _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (0u) | (0u)) + _GLF_IDENTITY((_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(_GLF_IDENTITY((false ? uaddCarry(workgroup_id, workgroup_size, virtual_gid) : workgroup_id), (_GLF_IDENTITY((false ? uaddCarry(workgroup_id, workgroup_size, virtual_gid) : workgroup_id), (_GLF_IDENTITY((false ? uaddCarry(workgroup_id, workgroup_size, virtual_gid) : workgroup_id), 1u * ((false ? uaddCarry(workgroup_id, workgroup_size, virtual_gid) : workgroup_id)))) / _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, 0u ^ (1u))), (~ (_GLF_IDENTITY(1u, 0u ^ (1u)))) ^ 0u))))))) << 0u))))), ((_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(true ? 0u : _GLF_FUZZED(_GLF_IDENTITY((false ? uaddCarry(workgroup_id, workgroup_size, virtual_gid) : workgroup_id), (_GLF_IDENTITY((false ? uaddCarry(workgroup_id, workgroup_size, virtual_gid) : workgroup_id), (_GLF_IDENTITY((false ? uaddCarry(workgroup_id, workgroup_size, virtual_gid) : workgroup_id), 1u * ((false ? uaddCarry(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)) * 1u), workgroup_size, virtual_gid) : workgroup_id)))) / 1u)) << 0u)), (true ? true ? 0u : _GLF_FUZZED(_GLF_IDENTITY((false ? uaddCarry(workgroup_id, workgroup_size, virtual_gid) : workgroup_id), (_GLF_IDENTITY((false ? uaddCarry(workgroup_id, workgroup_size, virtual_gid) : workgroup_id), (_GLF_IDENTITY((false ? uaddCarry(workgroup_id, workgroup_size, virtual_gid) : workgroup_id), 1u * ((false ? uaddCarry(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)) * 1u), workgroup_size, virtual_gid) : workgroup_id)))) / 1u)) << 0u)) : _GLF_FUZZED((virtual_gid / uaddCarry(subgroup_id, virtual_gid, num_workgroup)))))), ~ (~ ((_GLF_IDENTITY(true ? 0u : _GLF_FUZZED(_GLF_IDENTITY((false ? uaddCarry(workgroup_id, workgroup_size, virtual_gid) : workgroup_id), (_GLF_IDENTITY((false ? uaddCarry(workgroup_id, workgroup_size, virtual_gid) : workgroup_id), (_GLF_IDENTITY((false ? uaddCarry(workgroup_id, workgroup_size, virtual_gid) : workgroup_id), 1u * ((false ? uaddCarry(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)) * 1u), workgroup_size, virtual_gid) : workgroup_id)))) / 1u)) << 0u)), (true ? true ? 0u : _GLF_FUZZED(_GLF_IDENTITY((false ? uaddCarry(workgroup_id, workgroup_size, virtual_gid) : workgroup_id), (_GLF_IDENTITY((false ? uaddCarry(workgroup_id, workgroup_size, virtual_gid) : workgroup_id), (_GLF_IDENTITY((false ? uaddCarry(workgroup_id, workgroup_size, virtual_gid) : workgroup_id), 1u * ((false ? uaddCarry(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)) * 1u), workgroup_size, virtual_gid) : workgroup_id)))) / 1u)) << 0u)) : _GLF_FUZZED((virtual_gid / uaddCarry(subgroup_id, virtual_gid, num_workgroup)))))))))))) << 0u))) + 1) % subgroup_size) - 0u), (_GLF_struct_replacement_36.subgroup_local_id + 1) % subgroup_size), (min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_36.subgroup_local_id, _GLF_IDENTITY((_GLF_struct_replacement_36.subgroup_local_id) * 1u, (_GLF_IDENTITY((_GLF_struct_replacement_36.subgroup_local_id) * 1u, 0u ^ ((_GLF_struct_replacement_36.subgroup_local_id) * 1u))) | _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(virtual_gid))))) + 1), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_36.subgroup_local_id, _GLF_IDENTITY((_GLF_struct_replacement_36.subgroup_local_id) * 1u, (_GLF_IDENTITY((_GLF_struct_replacement_36.subgroup_local_id) * 1u, 0u ^ ((_GLF_struct_replacement_36.subgroup_local_id) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (1u))))) | _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(virtual_gid))))) + 1), (true ? (_GLF_IDENTITY(_GLF_struct_replacement_36.subgroup_local_id, _GLF_IDENTITY((_GLF_struct_replacement_36.subgroup_local_id) * 1u, (_GLF_IDENTITY((_GLF_struct_replacement_36.subgroup_local_id) * 1u, 0u ^ ((_GLF_struct_replacement_36.subgroup_local_id) * 1u))) | _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(virtual_gid))))) + 1) : _GLF_FUZZED((subgroup_size - virtual_gid))))) | 0u) % subgroup_size, ((_GLF_struct_replacement_36.subgroup_local_id + 1) % subgroup_size) - 0u), _GLF_IDENTITY((_GLF_struct_replacement_36.subgroup_local_id + 1), ((_GLF_struct_replacement_36.subgroup_local_id + 1)) << 0u) % subgroup_size)) + uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)), mix(vec2(_GLF_FUZZED(-7.6), _GLF_IDENTITY((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))), mix(vec2(((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))))[0], ((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))))[1]), vec2(_GLF_FUZZED(5644.7377), _GLF_FUZZED(83.87)), bvec2(false, false)))[1]), vec2((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)))[0], _GLF_FUZZED(-3831.6564)), bvec2(true, false)))))).x), clamp(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)), mix(vec2(_GLF_FUZZED(-7.6), _GLF_IDENTITY((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))), mix(vec2(((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))))[0], ((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))))[1]), vec2(_GLF_FUZZED(5644.7377), _GLF_FUZZED(83.87)), bvec2(false, false)))[1]), vec2((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)))[0], _GLF_FUZZED(-3831.6564)), bvec2(true, false)))))), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)), mix(vec2(_GLF_FUZZED(-7.6), _GLF_IDENTITY((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))), mix(vec2(((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))))[0], ((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))))[1]), vec2(_GLF_FUZZED(5644.7377), _GLF_FUZZED(83.87)), bvec2(false, false)))[1]), vec2((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)))[0], _GLF_FUZZED(-3831.6564)), bvec2(true, false)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)), mix(vec2(_GLF_FUZZED(-7.6), _GLF_IDENTITY((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))), mix(vec2(((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))))[0], ((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))))[1]), vec2(_GLF_FUZZED(5644.7377), _GLF_FUZZED(83.87)), bvec2(false, false)))[1]), vec2((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)))[0], _GLF_FUZZED(-3831.6564)), bvec2(true, false)))))), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)), mix(vec2(_GLF_FUZZED(-7.6), _GLF_IDENTITY((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))), mix(vec2(((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))))[0], ((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))))[1]), vec2(_GLF_FUZZED(5644.7377), _GLF_FUZZED(83.87)), bvec2(false, false)))[1]), vec2((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)))[0], _GLF_FUZZED(-3831.6564)), bvec2(true, false)))))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)), mix(vec2(_GLF_FUZZED(-7.6), _GLF_IDENTITY((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))), mix(vec2(((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))))[0], ((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))))[1]), vec2(_GLF_FUZZED(5644.7377), _GLF_FUZZED(83.87)), bvec2(false, false)))[1]), vec2((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)))[0], _GLF_FUZZED(-3831.6564)), bvec2(true, false)))))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)), mix(vec2(_GLF_FUZZED(-7.6), _GLF_IDENTITY((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))), mix(vec2(((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))))[0], ((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))))[1]), vec2(_GLF_FUZZED(5644.7377), _GLF_FUZZED(83.87)), bvec2(false, false)))[1]), vec2((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)))[0], _GLF_FUZZED(-3831.6564)), bvec2(true, false)))))))))).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)), mix(vec2(_GLF_FUZZED(-7.6), _GLF_IDENTITY((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))), mix(vec2(((vec2(vec4(injectionSwitch, sqrt(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7.2)))), 0.0))))[0], ((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))))[1]), vec2(_GLF_FUZZED(5644.7377), _GLF_FUZZED(83.87)), bvec2(false, false)))[1]), vec2((_GLF_IDENTITY(vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)), mix(vec2(_GLF_FUZZED(85.45), (vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)))[1]), vec2(_GLF_IDENTITY((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)))[0], ((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)))[0]) - 0.0), _GLF_FUZZED(7.8)), bvec2(true, false))))[0], _GLF_FUZZED(-3831.6564)), bvec2(true, false)))))).x), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)), mix(vec2(_GLF_FUZZED(-7.6), _GLF_IDENTITY((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))), mix(vec2(((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))))[0], ((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))))[1]), vec2(_GLF_FUZZED(5644.7377), _GLF_FUZZED(83.87)), bvec2(false, false)))[1]), vec2((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)))[0], _GLF_FUZZED(-3831.6564)), bvec2(true, false)))))), (false ? _GLF_FUZZED(vec2(546.470, -33.55)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sqrt(_GLF_IDENTITY(1.0, (1.0) / 1.0)), 0.0)), mix(vec2(_GLF_FUZZED(-7.6), _GLF_IDENTITY((vec2(vec4(injectionSwitch, sqrt(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) + 0.0)), 0.0))), mix(vec2(((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))))[0], ((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0))))[1]), vec2(_GLF_FUZZED(5644.7377), _GLF_FUZZED(83.87)), bvec2(false, false)))[1]), vec2((vec2(vec4(injectionSwitch, sqrt(1.0), 0.0)))[0], _GLF_FUZZED(-3831.6564)), bvec2(true, false)))))))).x)))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec3(-2.5, -9109.5830, 9.5).gg) : injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) || false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, true, true))))))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))))
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), _GLF_IDENTITY(false || (bool(bvec3(_GLF_DEAD(false), false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false || (bool(bvec3(_GLF_DEAD(false), false, false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true)), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true)), _GLF_IDENTITY(true, (true) && true), true)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true)), true, true))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true)), true, true))))), false))))))))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true))))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))) || false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), (! (! (_GLF_WRAPPED_IF_TRUE(true)))) && true))) || false))) || false)))))) || false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)))), float(_GLF_FUZZED(59.49)), bool(false))) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), 0.0 + (clamp(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)))), float(_GLF_FUZZED(59.49)), bool(false))) > injectionSwitch.y))))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = ((51660 / _GLF_IDENTITY(72736, _GLF_IDENTITY(int(int(72736)), ~ (~ (int(int(72736))))))) & _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(1), int(1))), int(ivec2((int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(1), int(1))), 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(_GLF_struct_2(_GLF_struct_0(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0))) - 0.0)), mat2(1.0), ivec3(1), ivec3(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) / 1))), mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 1u, 1u), _GLF_struct_1(_GLF_IDENTITY(uvec4(1u), ~ (~ (uvec4(1u)))), _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)), mat4(1.0), uvec4(1u), ivec3(1), uvec3(_GLF_IDENTITY(1u, (1u) | 0u))), uvec3(1u)), _GLF_struct_6(1.0, _GLF_struct_3(ivec3(1), mat2x4(1.0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) << 0)), (false ? _GLF_FUZZED(ivec4(83726, -47328, -70750, -26495)) : ivec4(_GLF_IDENTITY(1, (1) << 0)))), uvec4(1u), 1.0, 1u, uvec4(1u)), _GLF_struct_4(mat3x4(1.0), mat3x2(1.0)), _GLF_struct_5(vec4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0), _GLF_IDENTITY(1.0, 1.0 * (1.0))))), mat4x3(1.0), 1, vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(-1.7, mix(float(_GLF_FUZZED((- _GLF_IDENTITY(-5616.4641, (_GLF_IDENTITY(-5616.4641, clamp(-5616.4641, -5616.4641, -5616.4641))) / exp(0.0))))), float(-1.7), bool(true))))), _GLF_IDENTITY(float(1.0), min(_GLF_IDENTITY(float(1.0), min(_GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(-199.735)), float(float(1.0)), bool(true))), float(1.0))), _GLF_IDENTITY(float(1.0), (_GLF_IDENTITY(float(1.0), float(vec2(float(1.0), 1.0)))) - 0.0))), _GLF_IDENTITY(bool(true), ! (! (bool(true))))), (_GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(1.0), bool(true)), 0.0 + (mix(float(_GLF_FUZZED(-1.7)), float(1.0), bool(true)))), min(mix(float(_GLF_FUZZED(-1.7)), float(1.0), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(1.0), bool(true)), min(mix(float(_GLF_FUZZED(-1.7)), float(1.0), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(1.0), bool(true)), 1.0 * (mix(float(_GLF_FUZZED(-1.7)), float(1.0), bool(true))))))))) * 1.0), exp(0.0) * (mix(float(_GLF_FUZZED(-1.7)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)), float(_GLF_IDENTITY(vec2(float(mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)), 0.0), max(vec2(float(mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)), 0.0), vec2(float(mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)), 0.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)), float(_GLF_IDENTITY(vec2(float(mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)), 0.0), max(vec2(float(mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)), 0.0), vec2(float(mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)), 0.0)))))), mix(float(_GLF_FUZZED(-7.9)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)), float(_GLF_IDENTITY(vec2(float(mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)), 0.0), max(vec2(float(mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)), 0.0), vec2(float(mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)), 0.0))))))), bool(true)))) - _GLF_ZERO(0.0, injectionSwitch.x))), bool(true)))))))), atomicLoad(buf[virtual_gid], 4, 64, 0), 1, _GLF_struct_9(_GLF_struct_7(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(62.39)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))).y))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(62.39)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))).y))))), float(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(62.39)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))).y))))), 1.0, 0.0, 1.0))) : _GLF_FUZZED(6638.2133)))), bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true) && true, bool(bool((true) && true))), ((true) && true) && true))) || false)), bvec3(true), mat2x4(1.0), 1), ivec4(1), _GLF_struct_8(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true)) ? 1 : _GLF_FUZZED(_GLF_IDENTITY((-31929), ((_GLF_IDENTITY(-31929, ~ (~ (_GLF_IDENTITY(-31929, int(ivec4(-31929, 0, 1, 0)))))))) - 0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-831) : (_GLF_IDENTITY(true, true && (true)) ? 1 : _GLF_FUZZED(_GLF_IDENTITY((-31929), ((_GLF_IDENTITY(-31929, ~ (~ (_GLF_IDENTITY(-31929, int(ivec4(-31929, 0, 1, 0)))))))) - 0))))))), max(ivec3(1), ivec3(1))), bvec2(true)), ivec3(1), mat4(1.0)), _GLF_struct_12(_GLF_struct_10(_GLF_IDENTITY(uvec2(1u), (uvec2(0u, 0u) | uvec2(0u, 0u)) | (uvec2(1u))), _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(mat2(80.73, -3.2, 52.72, -9.1)) : mat2(1.0), (true ? false ? _GLF_FUZZED(mat2(80.73, -3.2, _GLF_IDENTITY(52.72, 1.0 * (52.72)), -9.1)) : mat2(1.0) : _GLF_FUZZED(mat2(-71.41, -5.4, 347.574, 1467.6932))))))), _GLF_struct_11(uvec4(1u), _GLF_IDENTITY(1.0, max(1.0, 1.0)), vec2(1.0), mat2x4(1.0), vec4(1.0))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-3.8))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(7933.4985)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])), injectionSwitch)).y)), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(-20.45)), float(_GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(-5.1)), bool(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(-5.1)), bool(false))))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(vec4(366.564, -0.7, -790.967, -96.43).w), (injectionSwitch)[1]), bvec2(false, true))).y, mix(float(_GLF_FUZZED(-330.940)), float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(vec4(366.564, -0.7, -790.967, -96.43).w), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(vec4(-0.2, 4.3, -34.13, -31.88).x)), float((injectionSwitch)[1]), bool(true)))), bvec2(false, true))).y), bool(true))), injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(mix(float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(-5.1)), bool(_GLF_IDENTITY(false, false || (false)))), (false ? _GLF_FUZZED(-9.7) : mix(float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(_GLF_IDENTITY(-5.1, mix(float(-5.1), float(_GLF_FUZZED(-8.7)), bool(false))))), bool(false)))))))) + 0.0)) / _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(abs(0.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(abs(0.0), 0.0, 1.0))))), bool(true))))))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
   if(_GLF_DEAD(false))
    barrier();
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_struct_replacement_36.subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, (0 ^ 0))))) | (1)) < subgroup_size)
    {
     atomicStore(checker[virtual_gid], _GLF_IDENTITY(_GLF_struct_replacement_13.read, (_GLF_struct_replacement_13.read) * 1u), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(4, (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(-3687), max(_GLF_FUZZED(-3687), _GLF_IDENTITY(_GLF_FUZZED(-3687), (_GLF_FUZZED(-3687)) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))))))), max((_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-3687)))), (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-3687)))))), max(~ (4), ~ (4))))), 64, 4);
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))).y)), (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))).y))) | (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))).y))))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             subgroupAll(false);
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))
              barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
              barrier();
             barrier();
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && true), true), true, true))))), false, true, false))), true && (true))) && true)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))), _GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))), false || (bool(bool((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true))))))), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))), false || (bool(bool((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true))))))), false || (false || (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))), false || (bool(bool((_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))) && true, false || ((_GLF_IDENTITY(true, true && (true))) && true)))))))))))))))) && (false))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), ! (! _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), false || ((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, false, false)), ! (! (bool(bvec4(! (false), false, false, false)))))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, false, false)), ! (! (bool(bvec4(! (false), false, false, false)))))))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, false, false)), ! (! (bool(bvec4(! (false), false, false, false)))))))), true))), false, true)))))))))))));
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-4.1))) < injectionSwitch.y)))), true))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, false))))), true && (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)) || false), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))))))), false, true, false)))))))))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-32472) : 0))))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-755.664, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), clamp(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))) + (-755.664)))), _GLF_IDENTITY(vec2(vec3(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-755.664, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), clamp(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))) + (-755.664)))), 0.0)), _GLF_IDENTITY(vec2(mat3x4(vec2(vec3(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-755.664, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), clamp(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))) + (-755.664)))), 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0)), clamp(vec2(mat3x4(vec2(vec3(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-755.664, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), clamp(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))) + (-755.664)))), 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0)), vec2(mat3x4(vec2(vec3(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-755.664, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), clamp(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))) + (-755.664)))), 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0)), vec2(mat3x4(vec2(vec3(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-755.664, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), clamp(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))) + (-755.664)))), 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0)))))), vec2(_GLF_FUZZED(_GLF_IDENTITY(804.906, (_GLF_IDENTITY(804.906, float(vec4(804.906, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0)))) - tan(0.0))), (injectionSwitch)[1]), bvec2(false, true))).y))));
         atomicStore(buf[virtual_gid], _GLF_struct_replacement_13.read, 4, _GLF_IDENTITY(64, (64) | 0), _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) << 0), 4)), 1 * (4)), _GLF_IDENTITY(min(_GLF_IDENTITY(4, 1 * (4)), _GLF_IDENTITY(4, 1 * (4))), (min(_GLF_IDENTITY(4, 1 * (4)), _GLF_IDENTITY(4, 1 * (4)))) ^ 0))))))));
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     subgroupAll(_GLF_IDENTITY(true, ! (! (true))));
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), ! (! (bool((false))))))) && true)))
        barrier();
       barrier();
      }
     for(int _injected_loop_counter = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) << int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))), injectionSwitch)).x > injectionSwitch.y))), true))), false, true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))) && true))), (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))) && true))))
        barrier();
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true)))) && true))
        {
         for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))))), bool(bool(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))))))))))); _injected_loop_counter --)
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) >> 0), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(4), (int(4)) >> 0))), (false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) >> (0 >> _GLF_IDENTITY(int(4), int(4)))) : int(int(_GLF_IDENTITY(int(4), (int(4)) >> 0)))))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 + (4))) | (4))))), int(ivec4(int(4), 1, 0, 0)))), clamp(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) + 0)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 0, 0)))), int(ivec3(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 0, 0)))), int(_GLF_ZERO(0.0, injectionSwitch.x)), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY((4) * 1, ((4) * 1) | 0))), _GLF_IDENTITY(int(ivec4(int(4), 1, 0, 0)), (int(ivec4(int(4), 1, 0, 0))) / 1)))) >> 0), (1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) | (4)) : _GLF_FUZZED(_injected_loop_counter)))), (int(4)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), ~ (~ (int(6)))))))))), int(ivec4(_GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY((true ? int(4) : _GLF_FUZZED(_injected_loop_counter)), max(_GLF_IDENTITY((true ? int(4) : _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0))))), (_GLF_IDENTITY((true ? int(4) : _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), max(_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), max(_GLF_FUZZED(_injected_loop_counter), _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), clamp(_GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter))))), _GLF_FUZZED(_injected_loop_counter)))), ((true ? int(4) : _GLF_FUZZED(_injected_loop_counter))) / 1)) | ((true ? int(4) : _GLF_FUZZED(_injected_loop_counter)))), (true ? int(4) : _GLF_FUZZED(_injected_loop_counter))))))), 1, 0, 0)))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 0, 0)))), _GLF_IDENTITY(int(ivec3((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(int(4), int(4))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 0, 0)))), 1, 1)), max(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(_GLF_IDENTITY(int(4), min(int(4), int(4))), 1, 0, 0)))), 1, 1), clamp(ivec3((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(_GLF_IDENTITY(int(4), min(int(4), int(4))), 1, 0, 0)))), 1, 1), ivec3((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(_GLF_IDENTITY(int(4), min(int(4), int(4))), 1, 0, 0)))), 1, 1), ivec3((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(_GLF_IDENTITY(int(4), min(int(4), int(4))), 1, 0, 0)))), 1, 1)))), 0 ^ (int(ivec3((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 0, 0)))), int(ivec3(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 0, 0)))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1, 1)))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 0, 0)))), ~ (~ ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 0, 0))))))), 1, 1)), clamp(int(ivec3((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) >> 0)), int(ivec4(int(4), 1, 0, 0)))), 1, 1)), int(ivec3((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(4))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(ivec4(int(4), 1, 0, 0), clamp(ivec4(int(4), 1, 0, 0), ivec4(int(4), 1, 0, 0), ivec4(int(4), 1, 0, 0)))))), 1, 1)), int(ivec3((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 0, 0)))), 1, 1))))))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) >> 0), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(4), (int(4)) >> 0))), (false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) >> (0 >> _GLF_IDENTITY(int(4), int(4)))) : int(int(_GLF_IDENTITY(int(4), (int(4)) >> 0)))))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 + (4))) | (4))))), int(ivec4(int(4), 1, 0, 0)))), clamp(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) + 0)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 0, 0)))), int(ivec3(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 0, 0)))), int(_GLF_ZERO(0.0, injectionSwitch.x)), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY((4) * 1, ((4) * 1) | 0))), _GLF_IDENTITY(int(ivec4(int(4), 1, 0, 0)), (int(ivec4(int(4), 1, 0, 0))) / 1)))) >> 0), (1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) | (4)) : _GLF_FUZZED(_injected_loop_counter)))), (int(4)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), ~ (~ (int(6)))))))))), int(ivec4(_GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY((true ? int(4) : _GLF_FUZZED(_injected_loop_counter)), max(_GLF_IDENTITY((true ? int(4) : _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0))))), (_GLF_IDENTITY((true ? int(4) : _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), max(_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), max(_GLF_FUZZED(_injected_loop_counter), _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), clamp(_GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter))))), _GLF_FUZZED(_injected_loop_counter)))), ((true ? int(4) : _GLF_FUZZED(_injected_loop_counter))) / 1)) | ((true ? int(4) : _GLF_FUZZED(_injected_loop_counter)))), (true ? int(4) : _GLF_FUZZED(_injected_loop_counter))))))), 1, 0, 0)))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 0, 0)))), _GLF_IDENTITY(int(ivec3((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(int(4), int(4))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 0, 0)))), 1, 1)), max(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(_GLF_IDENTITY(int(4), min(int(4), int(4))), 1, 0, 0)))), 1, 1), clamp(ivec3((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(_GLF_IDENTITY(int(4), min(int(4), int(4))), 1, 0, 0)))), 1, 1), ivec3((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(_GLF_IDENTITY(int(4), min(int(4), int(4))), 1, 0, 0)))), 1, 1), ivec3((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(_GLF_IDENTITY(int(4), min(int(4), int(4))), 1, 0, 0)))), 1, 1)))), 0 ^ (int(ivec3((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 0, 0)))), int(ivec3(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 0, 0)))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1, 1)))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 0, 0)))), ~ (~ ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 0, 0))))))), 1, 1)), clamp(int(ivec3((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) >> 0)), int(ivec4(int(4), 1, 0, 0)))), 1, 1)), int(ivec3((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(4))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(ivec4(int(4), 1, 0, 0), clamp(ivec4(int(4), 1, 0, 0), ivec4(int(4), 1, 0, 0), ivec4(int(4), 1, 0, 0)))))), 1, 1)), int(ivec3((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 0, 0)))), 1, 1))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) >> 0), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(4), (int(4)) >> 0))), (false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) >> (0 >> _GLF_IDENTITY(int(4), int(4)))) : int(int(_GLF_IDENTITY(int(4), (int(4)) >> 0)))))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 + (4))) | (4))))), int(ivec4(int(4), 1, 0, 0)))), clamp(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) + 0)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 0, 0)))), int(ivec3(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 0, 0)))), int(_GLF_ZERO(0.0, injectionSwitch.x)), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY((4) * 1, ((4) * 1) | 0))), _GLF_IDENTITY(int(ivec4(int(4), 1, 0, 0)), (int(ivec4(int(4), 1, 0, 0))) / 1)))) >> 0), (1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) | (4)) : _GLF_FUZZED(_injected_loop_counter)))), (int(4)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), ~ (~ (int(6)))))))))), int(ivec4(_GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY((true ? int(4) : _GLF_FUZZED(_injected_loop_counter)), max(_GLF_IDENTITY((true ? int(4) : _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0))))), (_GLF_IDENTITY((true ? int(4) : _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), max(_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), max(_GLF_FUZZED(_injected_loop_counter), _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), clamp(_GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter))))), _GLF_FUZZED(_injected_loop_counter)))), ((true ? int(4) : _GLF_FUZZED(_injected_loop_counter))) / 1)) | ((true ? int(4) : _GLF_FUZZED(_injected_loop_counter)))), (true ? int(4) : _GLF_FUZZED(_injected_loop_counter))))))), 1, 0, 0)))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 0, 0)))), _GLF_IDENTITY(int(ivec3((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(int(4), int(4))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 0, 0)))), 1, 1)), max(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(_GLF_IDENTITY(int(4), min(int(4), int(4))), 1, 0, 0)))), 1, 1), clamp(ivec3((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(_GLF_IDENTITY(int(4), min(int(4), int(4))), 1, 0, 0)))), 1, 1), ivec3((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(_GLF_IDENTITY(int(4), min(int(4), int(4))), 1, 0, 0)))), 1, 1), ivec3((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(_GLF_IDENTITY(int(4), min(int(4), int(4))), 1, 0, 0)))), 1, 1)))), 0 ^ (int(ivec3((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 0, 0)))), int(ivec3(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 0, 0)))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1, 1)))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 0, 0)))), ~ (~ ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 0, 0))))))), 1, 1)), clamp(int(ivec3((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) >> 0)), int(ivec4(int(4), 1, 0, 0)))), 1, 1)), int(ivec3((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(4))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(ivec4(int(4), 1, 0, 0), clamp(ivec4(int(4), 1, 0, 0), ivec4(int(4), 1, 0, 0), ivec4(int(4), 1, 0, 0)))))), 1, 1)), int(ivec3((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 0, 0)))), 1, 1))))))))), (true ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) >> 0), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(4), (int(4)) >> 0))), (false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) >> (0 >> _GLF_IDENTITY(int(4), int(4)))) : int(int(_GLF_IDENTITY(int(4), (int(4)) >> 0)))))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 + (4))) | (4))))), int(ivec4(int(4), 1, 0, 0)))), clamp(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) + 0)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 0, 0)))), int(ivec3(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 0, 0)))), int(_GLF_ZERO(0.0, injectionSwitch.x)), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY((4) * 1, ((4) * 1) | 0))), _GLF_IDENTITY(int(ivec4(int(4), 1, 0, 0)), (int(ivec4(int(4), 1, 0, 0))) / 1)))) >> 0), (1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) | (4)) : _GLF_FUZZED(_injected_loop_counter)))), (int(4)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), ~ (~ (int(6)))))))))), int(ivec4(_GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY((true ? int(4) : _GLF_FUZZED(_injected_loop_counter)), max(_GLF_IDENTITY((true ? int(4) : _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0))))), (_GLF_IDENTITY((true ? int(4) : _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), max(_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), max(_GLF_FUZZED(_injected_loop_counter), _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), clamp(_GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter))))), _GLF_FUZZED(_injected_loop_counter)))), ((true ? int(4) : _GLF_FUZZED(_injected_loop_counter))) / 1)) | ((true ? int(4) : _GLF_FUZZED(_injected_loop_counter)))), (true ? int(4) : _GLF_FUZZED(_injected_loop_counter))))))), 1, 0, 0)))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 0, 0)))), _GLF_IDENTITY(int(ivec3((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(int(4), int(4))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 0, 0)))), 1, 1)), max(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(_GLF_IDENTITY(int(4), min(int(4), int(4))), 1, 0, 0)))), 1, 1), clamp(ivec3((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(_GLF_IDENTITY(int(4), min(int(4), int(4))), 1, 0, 0)))), 1, 1), ivec3((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(_GLF_IDENTITY(int(4), min(int(4), int(4))), 1, 0, 0)))), 1, 1), ivec3((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(_GLF_IDENTITY(int(4), min(int(4), int(4))), 1, 0, 0)))), 1, 1)))), 0 ^ (int(ivec3((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 0, 0)))), int(ivec3(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 0, 0)))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1, 1)))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 0, 0)))), ~ (~ ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 0, 0))))))), 1, 1)), clamp(int(ivec3((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) >> 0)), int(ivec4(int(4), 1, 0, 0)))), 1, 1)), int(ivec3((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(4))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(ivec4(int(4), 1, 0, 0), clamp(ivec4(int(4), 1, 0, 0), ivec4(int(4), 1, 0, 0), ivec4(int(4), 1, 0, 0)))))), 1, 1)), int(ivec3((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 0, 0)))), 1, 1))))))))) : _GLF_FUZZED(_injected_loop_counter)))) | 0))))); _GLF_IDENTITY(_injected_loop_counter ++, 0 ^ (_injected_loop_counter ++)))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(atanh(-4.0)) : injectionSwitch[0])), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(30.08, -9470.0911)), _GLF_IDENTITY(vec2(1.0, 1.0) * (true ? injectionSwitch : _GLF_FUZZED(vec2(30.08, -9470.0911))), min(vec2(1.0, 1.0) * (true ? injectionSwitch : _GLF_FUZZED(vec2(30.08, -9470.0911))), vec2(1.0, 1.0) * (true ? injectionSwitch : _GLF_FUZZED(vec2(30.08, -9470.0911)))))))))).y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.3) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))))), _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))))))), true && (((_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))))), _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))))))), true && (((_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               barrier();
              }
             for(int _injected_loop_counter = (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), clamp(1 << _GLF_IDENTITY(int(0), int(0)), 1 << _GLF_IDENTITY(int(0), int(0)), 1 << _GLF_IDENTITY(int(0), int(0))))) >> _GLF_IDENTITY(int(0), int(0)), (true ? (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), clamp(1 << _GLF_IDENTITY(int(0), int(0)), 1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), int(0)), 1 << _GLF_IDENTITY(int(0), int(0))))) >> _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(_injected_loop_counter)))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)))))); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false)))))))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, determinant(mat3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), log(1.0), 0.0, determinant(mat2(1.0, 1.0, 0.0, abs(1.0))), 1.0, 0.0, sqrt(1.0)))) > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(length(vec2(-7834.4469, 124.556))) : injectionSwitch.y)), false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(6.4) : (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-4596.7224), _GLF_FUZZED(0.3)), bvec2(false, false))).x > injectionSwitch.y, false, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))) || false)), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))), true, false, true)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))), true, false, true)))))))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), false, true))))))) || false), _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), ! (_GLF_IDENTITY(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))), true && (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))))), true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))))))))))))))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, ((false) && true) || false))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))
                          barrier();
                         barrier();
                        }
                      }
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
                        barrier();
                      }
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = _GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) | ((1 ^ 1))); _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(1 * (_injected_loop_counter), (_GLF_IDENTITY(1 * (_injected_loop_counter), (1 * (_injected_loop_counter)) >> 0)) | (1 * (_injected_loop_counter))))) * 1) < _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), int(ivec4(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0, 0, 1)))) << 0)), true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(1 * (_injected_loop_counter), (_GLF_IDENTITY(1 * (_injected_loop_counter), (1 * (_injected_loop_counter)) >> 0)) | (1 * (_injected_loop_counter))))) * 1, min((_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(1 * (_injected_loop_counter), (_GLF_IDENTITY(1 * (_injected_loop_counter), (1 * (_injected_loop_counter)) >> 0)) | (1 * (_injected_loop_counter))))) * 1, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(1 * (_injected_loop_counter), (_GLF_IDENTITY(1 * (_injected_loop_counter), (1 * (_injected_loop_counter)) >> 0)) | (1 * (_injected_loop_counter))))) * 1))) < _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | int(_GLF_ZERO(0.0, injectionSwitch.x))))) >> _GLF_IDENTITY(int(6), int(6))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, clamp(6, 6, 6)), _GLF_IDENTITY(6, ~ (~ (6)))))), int(6))), int(ivec4((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)), ~ (_GLF_IDENTITY(~ ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), clamp(~ ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), ~ ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), ~ ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))))))) >> 0)), 0, 0, 1)))) << _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, 0 | (0)))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(1 * (_injected_loop_counter), (_GLF_IDENTITY(1 * (_injected_loop_counter), (1 * (_injected_loop_counter)) >> 0)) | (1 * (_injected_loop_counter))))) * 1) < _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), int(ivec4(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0, 0, 1)))) << 0)), true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(1 * (_injected_loop_counter), (_GLF_IDENTITY(1 * (_injected_loop_counter), (1 * (_injected_loop_counter)) >> 0)) | (1 * (_injected_loop_counter))))) * 1, min((_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(1 * (_injected_loop_counter), (_GLF_IDENTITY(1 * (_injected_loop_counter), (1 * (_injected_loop_counter)) >> 0)) | (1 * (_injected_loop_counter))))) * 1, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(1 * (_injected_loop_counter), (_GLF_IDENTITY(1 * (_injected_loop_counter), (1 * (_injected_loop_counter)) >> 0)) | (1 * (_injected_loop_counter))))) * 1))) < _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | int(_GLF_ZERO(0.0, injectionSwitch.x))))) >> _GLF_IDENTITY(int(6), int(6))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, clamp(6, 6, 6)), _GLF_IDENTITY(6, ~ (~ (6)))))), int(6))), int(ivec4((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)), ~ (_GLF_IDENTITY(~ ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), clamp(~ ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), ~ ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), ~ ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))))))) >> 0)), 0, 0, 1)))) << _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, 0 | (0)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(1 * (_injected_loop_counter), (_GLF_IDENTITY(1 * (_injected_loop_counter), (1 * (_injected_loop_counter)) >> 0)) | (1 * (_injected_loop_counter))))) * 1) < _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), int(ivec4(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0, 0, 1)))) << 0)), true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(1 * (_injected_loop_counter), (_GLF_IDENTITY(1 * (_injected_loop_counter), (1 * (_injected_loop_counter)) >> 0)) | (1 * (_injected_loop_counter))))) * 1, min((_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(1 * (_injected_loop_counter), (_GLF_IDENTITY(1 * (_injected_loop_counter), (1 * (_injected_loop_counter)) >> 0)) | (1 * (_injected_loop_counter))))) * 1, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(1 * (_injected_loop_counter), (_GLF_IDENTITY(1 * (_injected_loop_counter), (1 * (_injected_loop_counter)) >> 0)) | (1 * (_injected_loop_counter))))) * 1))) < _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | int(_GLF_ZERO(0.0, injectionSwitch.x))))) >> _GLF_IDENTITY(int(6), int(6))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, clamp(6, 6, 6)), _GLF_IDENTITY(6, ~ (~ (6)))))), int(6))), int(ivec4((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)), ~ (_GLF_IDENTITY(~ ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), clamp(~ ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), ~ ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), ~ ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))))))) >> 0)), 0, 0, 1)))) << _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, 0 | (0))))))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(1 * (_injected_loop_counter), (_GLF_IDENTITY(1 * (_injected_loop_counter), (1 * (_injected_loop_counter)) >> 0)) | (1 * (_injected_loop_counter))))) * 1) < _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), int(ivec4(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0, 0, 1)))) << 0)), true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(1 * (_injected_loop_counter), (_GLF_IDENTITY(1 * (_injected_loop_counter), (1 * (_injected_loop_counter)) >> 0)) | (1 * (_injected_loop_counter))))) * 1, min((_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(1 * (_injected_loop_counter), (_GLF_IDENTITY(1 * (_injected_loop_counter), (1 * (_injected_loop_counter)) >> 0)) | (1 * (_injected_loop_counter))))) * 1, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(1 * (_injected_loop_counter), (_GLF_IDENTITY(1 * (_injected_loop_counter), (1 * (_injected_loop_counter)) >> 0)) | (1 * (_injected_loop_counter))))) * 1))) < _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | int(_GLF_ZERO(0.0, injectionSwitch.x))))) >> _GLF_IDENTITY(int(6), int(6))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, clamp(6, 6, 6)), _GLF_IDENTITY(6, ~ (~ (6)))))), int(6))), int(ivec4((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)), ~ (_GLF_IDENTITY(~ ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), clamp(~ ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), ~ ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), ~ ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))))))) >> 0)), 0, 0, 1)))) << _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, 0 | (0))))))))))), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(1 * (_injected_loop_counter), (_GLF_IDENTITY(1 * (_injected_loop_counter), (1 * (_injected_loop_counter)) >> 0)) | (1 * (_injected_loop_counter))))) * 1) < _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), int(ivec4(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0, 0, 1)))) << 0)), true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(1 * (_injected_loop_counter), (_GLF_IDENTITY(1 * (_injected_loop_counter), (1 * (_injected_loop_counter)) >> 0)) | (1 * (_injected_loop_counter))))) * 1, min((_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(1 * (_injected_loop_counter), (_GLF_IDENTITY(1 * (_injected_loop_counter), (1 * (_injected_loop_counter)) >> 0)) | (1 * (_injected_loop_counter))))) * 1, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(1 * (_injected_loop_counter), (_GLF_IDENTITY(1 * (_injected_loop_counter), (1 * (_injected_loop_counter)) >> 0)) | (1 * (_injected_loop_counter))))) * 1))) < _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | int(_GLF_ZERO(0.0, injectionSwitch.x))))) >> _GLF_IDENTITY(int(6), int(6))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, clamp(6, 6, 6)), _GLF_IDENTITY(6, ~ (~ (6)))))), int(6))), int(ivec4((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)), ~ (_GLF_IDENTITY(~ ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), clamp(~ ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), ~ ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), ~ ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))))))) >> 0)), 0, 0, 1)))) << _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, 0 | (0)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(1 * (_injected_loop_counter), (_GLF_IDENTITY(1 * (_injected_loop_counter), (1 * (_injected_loop_counter)) >> 0)) | (1 * (_injected_loop_counter))))) * 1) < _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), int(ivec4(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0, 0, 1)))) << 0)), true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(1 * (_injected_loop_counter), (_GLF_IDENTITY(1 * (_injected_loop_counter), (1 * (_injected_loop_counter)) >> 0)) | (1 * (_injected_loop_counter))))) * 1, min((_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(1 * (_injected_loop_counter), (_GLF_IDENTITY(1 * (_injected_loop_counter), (1 * (_injected_loop_counter)) >> 0)) | (1 * (_injected_loop_counter))))) * 1, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(1 * (_injected_loop_counter), (_GLF_IDENTITY(1 * (_injected_loop_counter), (1 * (_injected_loop_counter)) >> 0)) | (1 * (_injected_loop_counter))))) * 1))) < _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | int(_GLF_ZERO(0.0, injectionSwitch.x))))) >> _GLF_IDENTITY(int(6), int(6))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, clamp(6, 6, 6)), _GLF_IDENTITY(6, ~ (~ (6)))))), int(6))), int(ivec4((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)), ~ (_GLF_IDENTITY(~ ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), clamp(~ ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), ~ ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), ~ ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))))))) >> 0)), 0, 0, 1)))) << _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, 0 | (0))))))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(1 * (_injected_loop_counter), (_GLF_IDENTITY(1 * (_injected_loop_counter), (1 * (_injected_loop_counter)) >> 0)) | (1 * (_injected_loop_counter))))) * 1) < _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), int(ivec4(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0, 0, 1)))) << 0)), true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(1 * (_injected_loop_counter), (_GLF_IDENTITY(1 * (_injected_loop_counter), (1 * (_injected_loop_counter)) >> 0)) | (1 * (_injected_loop_counter))))) * 1, min((_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(1 * (_injected_loop_counter), (_GLF_IDENTITY(1 * (_injected_loop_counter), (1 * (_injected_loop_counter)) >> 0)) | (1 * (_injected_loop_counter))))) * 1, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(1 * (_injected_loop_counter), (_GLF_IDENTITY(1 * (_injected_loop_counter), (1 * (_injected_loop_counter)) >> 0)) | (1 * (_injected_loop_counter))))) * 1))) < _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | int(_GLF_ZERO(0.0, injectionSwitch.x))))) >> _GLF_IDENTITY(int(6), int(6))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, clamp(6, 6, 6)), _GLF_IDENTITY(6, ~ (~ (6)))))), int(6))), int(ivec4((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)), ~ (_GLF_IDENTITY(~ ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), clamp(~ ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), ~ ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), ~ ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))))))) >> 0)), 0, 0, 1)))) << _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, 0 | (0))))))))))), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, log(1.0), 1.0, length(0.0), 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, length(0.0), 1.0, 0.0, 0.0))).x, injectionSwitch.x)) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
                {
                 do
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
                    barrier();
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
              }
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)), (_GLF_IDENTITY(false, (false) && true)) && true)))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             do
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))))))));
                 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
                  {
                   do
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                      {
                       do
                        {
                         barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))));
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), bool(bvec3(! (_GLF_IDENTITY(! (false), true && (! (false)))), false, true)))))))), bool(bvec4(false || (_GLF_IDENTITY(false, ! (! (false)))), true, true, true))))))
                barrier();
              }
            }
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), ! (! (_GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), false || (false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
}
