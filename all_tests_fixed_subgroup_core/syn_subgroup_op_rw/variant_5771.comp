#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_30 {
 ivec3 _f0;
 bvec3 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_31 {
 mat3 _f0;
 _GLF_struct_30 _f1;
 vec2 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_28 {
 mat4 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_27 {
 int _f0;
 bool _f1;
 float _f2;
 bool _f3;
 bvec2 _f4;
 float _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_26 {
 mat3x2 _f0;
} ;

struct _GLF_struct_25 {
 mat2x4 _f0;
 mat4 _f1;
 mat3x2 _f2;
 mat3x4 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_29 {
 _GLF_struct_25 _f0;
 _GLF_struct_26 _f1;
 _GLF_struct_27 _f2;
 _GLF_struct_28 _f3;
 ivec2 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_23 {
 ivec4 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_22 {
 bvec2 _f0;
} ;

struct _GLF_struct_24 {
 _GLF_struct_22 _f0;
 mat4x3 _f1;
 _GLF_struct_23 _f2;
 int _f3;
 int _f4;
} ;

struct _GLF_struct_20 {
 ivec3 _f0;
 mat2x4 _f1;
 vec2 _f2;
} ;

struct _GLF_struct_21 {
 _GLF_struct_20 _f0;
 mat2x4 _f1;
 uint _f2;
} ;

struct _GLF_struct_18 {
 mat4x2 _f0;
 bool _f1;
 mat4x3 _f2;
 mat2x3 _f3;
 bool _f4;
 int _f5;
 uint _f6;
} ;

struct _GLF_struct_17 {
 mat3x4 _f0;
 vec2 _f1;
 bool _f2;
 uvec2 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_16 {
 bvec4 _f0;
 bvec4 _f1;
 mat3x4 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_15 {
 vec3 _f0;
} ;

struct _GLF_struct_14 {
 float _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_19 {
 int _f0;
 _GLF_struct_14 _f1;
 _GLF_struct_15 _f2;
 _GLF_struct_16 _f3;
 _GLF_struct_17 _f4;
 _GLF_struct_18 _f5;
} ;

struct _GLF_struct_32 {
 uint workgroup_size;
 _GLF_struct_19 _f0;
 ivec3 _f1;
 _GLF_struct_21 _f2;
 _GLF_struct_24 _f3;
 _GLF_struct_29 _f4;
 _GLF_struct_31 _f5;
} ;

struct _GLF_struct_11 {
 mat3 _f0;
 int _f1;
 ivec4 _f2;
 bvec4 _f3;
 uvec3 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_10 {
 ivec2 _f0;
 uvec4 _f1;
 ivec4 _f2;
 float _f3;
} ;

struct _GLF_struct_12 {
 ivec4 _f0;
 vec2 _f1;
 _GLF_struct_10 _f2;
 _GLF_struct_11 _f3;
} ;

struct _GLF_struct_8 {
 bvec3 _f0;
} ;

struct _GLF_struct_7 {
 mat2 _f0;
 mat2x4 _f1;
 int _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_9 {
 _GLF_struct_7 _f0;
 mat3 _f1;
 _GLF_struct_8 _f2;
} ;

struct _GLF_struct_13 {
 _GLF_struct_9 _f0;
 uint workgroup_base;
 uvec2 _f1;
 _GLF_struct_12 _f2;
} ;

struct _GLF_struct_4 {
 mat2x3 _f0;
 mat3x2 _f1;
 mat2x3 _f2;
 mat2x4 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_3 {
 bool _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_5 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
} ;

struct _GLF_struct_1 {
 uvec4 _f0;
 mat2x3 _f1;
 vec2 _f2;
 mat3x4 _f3;
 uint subgroup_size;
} ;

struct _GLF_struct_2 {
 vec4 _f0;
 vec4 _f1;
 mat4x3 _f2;
 mat3x4 _f3;
 uvec3 _f4;
 _GLF_struct_1 _f5;
} ;

struct _GLF_struct_0 {
 mat4x3 _f0;
} ;

struct _GLF_struct_6 {
 vec2 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_5 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), ! (! (bool(bvec3(_GLF_DEAD(false), true, true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true)))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_IDENTITY(vec2(1.0), min(vec2(1.0), vec2(1.0))), _GLF_struct_0(mat4x3(1.0)), _GLF_struct_2(vec4(1.0), vec4(1.0), mat4x3(1.0), mat3x4(1.0), uvec3(1u), _GLF_struct_1(_GLF_IDENTITY(uvec4(1u), ~ (~ (uvec4(1u)))), mat2x3(1.0), vec2(1.0), mat3x4(1.0), gl_SubgroupSize)), _GLF_struct_5(_GLF_struct_3(true, ivec4(1)), _GLF_struct_4(mat2x3(1.0), mat3x2(1.0), mat2x3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(sqrt(751.180)) : 1.0))), mat2x4(1.0), ivec3(1))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u)), min(_GLF_IDENTITY((gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u)), (true ? (gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u)) : _GLF_FUZZED(subgroup_id))), (gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y)) || false)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, max(0.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y))), true, true, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y))), true, true, true))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).x)) > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, min(0.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, min(0.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y)) && true)), ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, min(0.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, min(0.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y)) && true))) && true), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-19.87)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-19.87)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(62.19)), bvec2(true, false))))).x) - 0.0), injectionSwitch.x)) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))).x, injectionSwitch.x)), (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y), true)))), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, mix(float(_GLF_FUZZED(5.3)), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(true))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))))))), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).x)) > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, min(0.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, min(0.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y)) && true)), ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, min(0.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, min(0.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y)) && true))) && true), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-19.87)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-19.87)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(62.19)), bvec2(true, false))))).x) - 0.0), injectionSwitch.x)) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))).x, injectionSwitch.x)), (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y), true)))), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, mix(float(_GLF_FUZZED(5.3)), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(true))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))))))), false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).x)) > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, min(0.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, min(0.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y)) && true)), ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, min(0.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, min(0.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y)) && true))) && true), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-19.87)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-19.87)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(62.19)), bvec2(true, false))))).x) - 0.0), injectionSwitch.x)) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))).x, injectionSwitch.x)), (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y), true)))), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, mix(float(_GLF_FUZZED(5.3)), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(true))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))))))), false))))) && true))))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-2757.1831, clamp(-2757.1831, -2757.1831, _GLF_IDENTITY(-2757.1831, min(-2757.1831, _GLF_IDENTITY(-2757.1831, mix(float(_GLF_FUZZED(681.722)), float(-2757.1831), bool(true))))))))), float(mat3x4(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-2757.1831, clamp(-2757.1831, -2757.1831, _GLF_IDENTITY(-2757.1831, min(-2757.1831, _GLF_IDENTITY(-2757.1831, mix(float(_GLF_FUZZED(681.722)), float(-2757.1831), bool(true))))))))), float(mat2x3(float(_GLF_FUZZED(_GLF_IDENTITY(-2757.1831, clamp(-2757.1831, -2757.1831, _GLF_IDENTITY(-2757.1831, min(-2757.1831, _GLF_IDENTITY(-2757.1831, mix(float(_GLF_FUZZED(681.722)), float(-2757.1831), bool(true))))))))), 1.0, 0.0, 0.0, 1.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 0.0, sin(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, abs(0.0), 1.0, 0.0))), bool(false))), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(51.43))), injectionSwitch.x)) > injectionSwitch.y)))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)) > injectionSwitch.y)) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true, (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false || (((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true) || false)), bool(bvec4(! _GLF_IDENTITY((((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true), ((((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true)) && true), true, true, true)))))), ! (! (! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true, ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.1)), float(injectionSwitch.y), bool(true))))) && true), bool(bvec4(! (((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true), true, true, true))))))))))))))), false), true)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), false)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(true && (false), (true && (false)) || false)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-15.60), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(475.528)), bvec2(true, false)), clamp(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-15.60), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(475.528)), bvec2(true, false)), min(mix(vec2(_GLF_FUZZED(-15.60), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(475.528)), bvec2(true, false)), mix(vec2(_GLF_FUZZED(-15.60), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(475.528)), bvec2(true, false)))), mix(vec2(_GLF_FUZZED(-15.60), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(475.528)), bvec2(true, false)), mix(vec2(_GLF_FUZZED(-15.60), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(475.528)), bvec2(true, false))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-15.60), _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), vec2(vec3((injectionSwitch), 1.0))), _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(min((injectionSwitch), (injectionSwitch)), min(min((injectionSwitch), (injectionSwitch)), _GLF_IDENTITY(min((injectionSwitch), (injectionSwitch)), max(min((injectionSwitch), (injectionSwitch)), min((injectionSwitch), (injectionSwitch))))))), (injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6815.0833, 166.692)) : injectionSwitch)))[0], _GLF_FUZZED(475.528)), bvec2(true, false))).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-15.60), _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), vec2(vec3((injectionSwitch), 1.0))), _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(min((injectionSwitch), (injectionSwitch)), min(min((injectionSwitch), (injectionSwitch)), _GLF_IDENTITY(min((injectionSwitch), (injectionSwitch)), max(min((injectionSwitch), (injectionSwitch)), min((injectionSwitch), (injectionSwitch))))))), (injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6815.0833, 166.692)) : injectionSwitch)))[0], _GLF_FUZZED(475.528)), bvec2(true, false))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-15.60), _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), vec2(vec3((injectionSwitch), 1.0))), _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(min((injectionSwitch), (injectionSwitch)), min(min((injectionSwitch), (injectionSwitch)), _GLF_IDENTITY(min((injectionSwitch), (injectionSwitch)), max(min((injectionSwitch), (injectionSwitch)), min((injectionSwitch), (injectionSwitch))))))), (injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6815.0833, 166.692)) : injectionSwitch)))[0], _GLF_FUZZED(475.528)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-15.60), _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), vec2(vec3((injectionSwitch), 1.0))), _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(min((injectionSwitch), (injectionSwitch)), min(min((injectionSwitch), (injectionSwitch)), _GLF_IDENTITY(min((injectionSwitch), (injectionSwitch)), max(min((injectionSwitch), (injectionSwitch)), min((injectionSwitch), (injectionSwitch))))))), (injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6815.0833, 166.692)) : injectionSwitch)))[0], _GLF_FUZZED(475.528)), bvec2(true, false))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-15.60), _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), vec2(vec3((injectionSwitch), 1.0))), _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(min((injectionSwitch), (injectionSwitch)), min(min((injectionSwitch), (injectionSwitch)), _GLF_IDENTITY(min((injectionSwitch), (injectionSwitch)), max(min((injectionSwitch), (injectionSwitch)), min((injectionSwitch), (injectionSwitch))))))), (injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6815.0833, 166.692)) : injectionSwitch)))[0], _GLF_FUZZED(475.528)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-15.60), _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), vec2(vec3((injectionSwitch), 1.0))), _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(min((injectionSwitch), (injectionSwitch)), min(min((injectionSwitch), (injectionSwitch)), _GLF_IDENTITY(min((injectionSwitch), (injectionSwitch)), max(min((injectionSwitch), (injectionSwitch)), min((injectionSwitch), (injectionSwitch))))))), (injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6815.0833, 166.692)) : injectionSwitch)))[0], _GLF_FUZZED(475.528)), bvec2(true, false))).x) * 1.0)))), float(_GLF_FUZZED(-4378.7877)), bool(false))) > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       return;
      }
     return;
    }
   barrier();
  }
 _GLF_struct_32 _GLF_struct_replacement_32 = _GLF_struct_32(gl_WorkGroupSize.x, _GLF_struct_19(1, _GLF_struct_14(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), uvec4(1u)), _GLF_struct_15(vec3(1.0)), _GLF_struct_16(bvec4(true), bvec4(true), mat3x4(1.0), vec4(1.0)), _GLF_struct_17(mat3x4(1.0), vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0)), 1.0 * (_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, 0.0, 0.0, 1.0)))))), true, uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))))), (0u | 0u) + (1u))), _GLF_IDENTITY(ivec2(1), max(_GLF_IDENTITY(ivec2(1), (false ? _GLF_FUZZED(ivec2(99134, -88274)) : _GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1)))))), ivec2(1)))), _GLF_struct_18(mat4x2(1.0), true, mat4x3(1.0), mat2x3(1.0), true, _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), 0 | (_GLF_IDENTITY(1, min(1, 1)))), 1u)), ivec3(1), _GLF_struct_21(_GLF_struct_20(ivec3(1), mat2x4(1.0), vec2(1.0)), mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0))), 1u), _GLF_struct_24(_GLF_struct_22(bvec2(true)), mat4x3(1.0), _GLF_struct_23(_GLF_IDENTITY(ivec4(1), ivec4(0, 0, 0, 0) ^ (ivec4(1))), uvec4(1u)), 1, 1), _GLF_struct_29(_GLF_struct_25(mat2x4(1.0), mat4(1.0), mat3x2(1.0), mat3x4(1.0), _GLF_IDENTITY(uvec2(1u), (uvec2(1u)) << uvec2(0u, _GLF_IDENTITY(0u, (0u) << 0u)))), _GLF_struct_26(mat3x2(1.0)), _GLF_struct_27(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(ivec4(-49304, 48063, 11349, -75363).r)))) | 0), true, 1.0, true, _GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec3(bvec2(bvec2(bvec2(true))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(false, false, false, false))) || false))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(true)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(bvec2(true)))), true), bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(bvec2(true)))), true))))))))), 1.0, bvec2(true)), _GLF_struct_28(mat4(1.0), mat4x2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1375.5431)), float(1.0), bool(true))))), ivec2(1), mat3(1.0)), _GLF_struct_31(_GLF_IDENTITY(mat3(1.0), mat3(mat4(_GLF_IDENTITY(mat3(1.0), _GLF_IDENTITY((_GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(6.4, -84.02, 386.654, 44.49, 4669.5054, -64.78, -0.2, -2520.6524, 8628.0595))))) * mat3(1.0), transpose(transpose(_GLF_IDENTITY((_GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(6.4, -84.02, 386.654, 44.49, 4669.5054, -64.78, -0.2, -2520.6524, 8628.0595))))) * mat3(1.0), ((_GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(6.4, -84.02, 386.654, 44.49, 4669.5054, -64.78, -0.2, -2520.6524, 8628.0595))))) * mat3(1.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))), _GLF_struct_30(ivec3(1), bvec3(true), mat4x3(1.0)), vec2(1.0), mat4x2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(_GLF_struct_9(_GLF_struct_7(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(transpose(transpose(mat2(1.0))), _GLF_IDENTITY(mat2(mat2(transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) - mat2(0.0, 0.0, 0.0, 0.0))))), mat2(_GLF_IDENTITY(mat2(mat2(mat2(transpose(transpose(mat2(1.0)))))), mat2(1.0) * (mat2(mat2(mat2(transpose(transpose(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat4(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(90.80, 664.575, _GLF_IDENTITY(-1.3, (-1.3) - 0.0), 3.2)) : mat2(1.0))))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2(mat4(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(90.80, 664.575, -1.3, 3.2)) : mat2(1.0))))), transpose(transpose(mat2(mat4(_GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) ? _GLF_FUZZED(mat2(90.80, 664.575, -1.3, 3.2)) : mat2(1.0))))))))), mat2(1.0) * (transpose(_GLF_IDENTITY(mat2(mat4(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(90.80, 664.575, -1.3, 3.2)), (_GLF_FUZZED(mat2(90.80, 664.575, -1.3, 3.2))) + mat2(0.0, 0.0, 0.0, 0.0)) : mat2(1.0))))), transpose(transpose(mat2(mat4(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(90.80, 664.575, -1.3, 3.2)) : mat2(1.0))))))))))))))))))))))))) * _GLF_IDENTITY((mat2(1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(6.5, -3.8, 9.1, -9.7)) : (mat2(1.0))))), mat2x4(1.0), 1, bvec4(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))), mat3(1.0), _GLF_struct_8(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), bvec3(bvec3(bvec3(true)))))), _GLF_IDENTITY(_GLF_struct_replacement_32.workgroup_size, max(_GLF_struct_replacement_32.workgroup_size, _GLF_struct_replacement_32.workgroup_size)) * workgroup_id, uvec2(_GLF_IDENTITY(1u, (1u) - _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(0u, 1u))), (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 1u), (false ? _GLF_FUZZED(uvec2(77481u, 112550u)) : _GLF_IDENTITY(uvec2(0u, 1u), min(_GLF_IDENTITY(uvec2(0u, 1u), (true ? _GLF_IDENTITY(uvec2(0u, 1u), uvec2(uvec3(uvec2(0u, 1u), (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))) : _GLF_FUZZED(uvec2(133540u, 79048u)))), _GLF_IDENTITY(uvec2(0u, 1u), _GLF_IDENTITY((uvec2(0u, 1u)) / uvec2(1u, 1u), max(_GLF_IDENTITY((uvec2(0u, 1u)) / uvec2(1u, 1u), ((uvec2(0u, 1u)) / uvec2(1u, 1u)) | uvec2(0u, 0u)), (uvec2(0u, 1u)) / uvec2(1u, 1u))))))))))) * 1u))), _GLF_struct_12(ivec4(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, (1) | (1))))), vec2(1.0), _GLF_struct_10(ivec2(1), _GLF_IDENTITY(uvec4(1u), clamp(uvec4(_GLF_IDENTITY(1u, 0u ^ (1u))), uvec4(1u), uvec4(_GLF_IDENTITY(1u, (1u) >> 0u)))), ivec4(1), 1.0), _GLF_struct_11(mat3(1.0), 1, ivec4(_GLF_IDENTITY(1, (1) | (1))), bvec4(true), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(24304u)))) >> 0u)), bvec3(true))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(true, true && (true)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size + subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size + subgroup_local_id, _GLF_IDENTITY(uint(uvec3(_GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size + subgroup_local_id, 0u, 0u)), (uint(uvec3(_GLF_struct_replacement_13.workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(uvec3(_GLF_FUZZED(subgroup_local_id), 0u, 0u)))) / 1u) : subgroup_id)))))) * _GLF_struct_replacement_6._f2._f5.subgroup_size + subgroup_local_id, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u | (_GLF_IDENTITY(0u, ~ (~ (0u))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), uint(uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 1u)))))))) | (uint(uvec3(_GLF_struct_replacement_13.workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)) - 0u) * _GLF_struct_replacement_6._f2._f5.subgroup_size + subgroup_local_id, 0u, 0u)))))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size + subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_6._f2._f5.subgroup_size, (_GLF_struct_replacement_6._f2._f5.subgroup_size) | (_GLF_struct_replacement_6._f2._f5.subgroup_size)) + subgroup_local_id, _GLF_IDENTITY(uint(uvec3(_GLF_struct_replacement_13.workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_struct_replacement_6._f2._f5.subgroup_size + subgroup_local_id, 0u, 0u)), (_GLF_IDENTITY(uint(uvec3(_GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size + subgroup_local_id, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), max(uint(uvec3(_GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size + subgroup_local_id, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), uint(uvec3(_GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size + subgroup_local_id, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))))) | (uint(uvec3(_GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size + subgroup_local_id, 0u, 0u)))))), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_6._f2._f5.subgroup_size, (_GLF_struct_replacement_6._f2._f5.subgroup_size) | (_GLF_struct_replacement_6._f2._f5.subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))) / 1u), _GLF_IDENTITY(uint(uvec3(_GLF_struct_replacement_13.workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) * _GLF_struct_replacement_6._f2._f5.subgroup_size + subgroup_local_id, 0u, 0u)), (uint(uvec3(_GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size + _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_id))), 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))) | (uint(uvec3(_GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size + subgroup_local_id, 0u, 0u)))))), ((_GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_6._f2._f5.subgroup_size, (_GLF_struct_replacement_6._f2._f5.subgroup_size) | (_GLF_struct_replacement_6._f2._f5.subgroup_size)) + subgroup_local_id, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_base, (_GLF_struct_replacement_13.workgroup_base) / (1u & 1u)) + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_struct_replacement_6._f2._f5.subgroup_size + subgroup_local_id, 0u, 0u)), (uint(uvec3(_GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size + subgroup_local_id, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), uint(uvec4(_GLF_IDENTITY(0u, ~ (~ (0u))), 1u, 1u, 0u)))))) | (uint(uvec3(_GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size + subgroup_local_id, 0u, 0u))))))) << 0u), (_GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_6._f2._f5.subgroup_size, (_GLF_struct_replacement_6._f2._f5.subgroup_size) | _GLF_IDENTITY((_GLF_struct_replacement_6._f2._f5.subgroup_size), (true ? (_GLF_struct_replacement_6._f2._f5.subgroup_size) : _GLF_FUZZED(bitfieldInsert(uvec3(37234u, 718u, 128363u)[2], 24446u, -61685, -37888))))) + subgroup_local_id, _GLF_IDENTITY(uint(uvec3(_GLF_struct_replacement_13.workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_struct_replacement_6._f2._f5.subgroup_size + _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), 0u, 0u)), (uint(uvec3(_GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size + subgroup_local_id, 0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) / 1u))))))) | (uint(uvec3(_GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size + subgroup_local_id, 0u, 0u)))))))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size + subgroup_local_id, max(_GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size + subgroup_local_id, uint(uvec4(_GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size + subgroup_local_id, 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u))), _GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size + subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size, clamp(_GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size, _GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size, _GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size)) + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size + subgroup_local_id, 0u, 0u)), (uint(uvec3(_GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size + subgroup_local_id, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))) | (uint(uvec3(_GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size + subgroup_local_id, 0u, 0u)))), 0u ^ (_GLF_IDENTITY(uint(uvec3(_GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size + subgroup_local_id, 0u, 0u)), (uint(uvec3(_GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size + subgroup_local_id, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))) | (uint(uvec3(_GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size + subgroup_local_id, 0u, 0u)))))))) ^ 0u), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size + subgroup_local_id, max(_GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size + subgroup_local_id, uint(uvec4(_GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size + subgroup_local_id, 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u))), _GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size + subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size, clamp(_GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size, _GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size, _GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size)) + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size + subgroup_local_id, 0u, 0u)), (uint(uvec3(_GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size + subgroup_local_id, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))) | (uint(uvec3(_GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size + subgroup_local_id, 0u, 0u)))), 0u ^ (_GLF_IDENTITY(uint(uvec3(_GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size + subgroup_local_id, 0u, 0u)), (uint(uvec3(_GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size + subgroup_local_id, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))) | (uint(uvec3(_GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size + subgroup_local_id, 0u, 0u)))))))) ^ 0u))))) - 0u)) | 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))), false || (true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_struct_replacement_13.workgroup_base + subgroup_id * _GLF_struct_replacement_6._f2._f5.subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), 0u), (uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), 0u)) >> uvec2(0u, 0u)))) + 1) % _GLF_struct_replacement_6._f2._f5.subgroup_size);
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-74485) : 1))))), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(19101))), int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 1, (0 | 0), 1))), 1, 0), (true ? ivec3(_GLF_IDENTITY(4, int(ivec4(4, 1, (0 | 0), 1))), 1, 0) : _GLF_FUZZED(bitfieldReverse(ivec3(-90524, -26501, -5331))))), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 1, (0 | 0), 1))), 1, 0), (true ? ivec3(_GLF_IDENTITY(4, int(ivec4(4, 1, (0 | 0), 1))), 1, 0) : _GLF_FUZZED(bitfieldReverse(ivec3(-90524, -26501, -5331)))))) + ivec3(0, 0, 0)), clamp(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 1, (0 | 0), 1))), 1, 0), (true ? ivec3(_GLF_IDENTITY(4, int(ivec4(4, 1, _GLF_IDENTITY((0 | 0), ((0 | 0)) >> 0), 1))), 1, 0) : _GLF_FUZZED(bitfieldReverse(ivec3(-90524, -26501, -5331))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, (4) >> 0), 1, (0 | 0), 1))), 1, 0), _GLF_IDENTITY((true ? ivec3(_GLF_IDENTITY(4, int(ivec4(4, 1, (0 | 0), 1))), 1, 0) : _GLF_FUZZED(bitfieldReverse(ivec3(-90524, -26501, -5331)))), max((true ? ivec3(_GLF_IDENTITY(4, int(ivec4(4, 1, (0 | 0), 1))), 1, 0) : _GLF_FUZZED(bitfieldReverse(ivec3(-90524, -26501, -5331)))), _GLF_IDENTITY((true ? ivec3(_GLF_IDENTITY(4, int(ivec4(4, 1, (0 | 0), 1))), 1, 0) : _GLF_FUZZED(bitfieldReverse(ivec3(-90524, -26501, -5331)))), (_GLF_IDENTITY((true ? ivec3(_GLF_IDENTITY(4, int(ivec4(4, 1, (0 | 0), 1))), 1, 0) : _GLF_FUZZED(bitfieldReverse(ivec3(-90524, -26501, -5331)))), max((true ? ivec3(_GLF_IDENTITY(4, int(ivec4(4, 1, (0 | 0), 1))), 1, 0) : _GLF_FUZZED(bitfieldReverse(ivec3(-90524, -26501, -5331)))), (true ? ivec3(_GLF_IDENTITY(4, int(ivec4(4, 1, (0 | 0), 1))), 1, 0) : _GLF_FUZZED(bitfieldReverse(ivec3(-90524, -26501, -5331))))))) / ivec3(1, 1, 1))))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 1, (0 | 0), 1)), 0 | (int(ivec4(4, 1, (0 | 0), 1))))), 1, 0), (true ? ivec3(_GLF_IDENTITY(4, int(ivec4(4, 1, (0 | 0), 1))), 1, 0) : _GLF_FUZZED(bitfieldReverse(ivec3(-90524, -26501, -5331))))), max(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 1, _GLF_IDENTITY((0 | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-69290)))) | (0))), min((0 | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-69290)))) | (0))), _GLF_IDENTITY((0 | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-69290)))) | (0))), min((0 | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-69290)))) | (0))), (0 | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-69290)))) | (0))))))), 1))), 1, 0), (true ? ivec3(_GLF_IDENTITY(4, int(ivec4(4, 1, (0 | 0), 1))), 1, 0) : _GLF_FUZZED(bitfieldReverse(ivec3(-90524, -26501, -5331))))), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 1, (_GLF_IDENTITY(0, 0 | (0)) | 0), 1))), 1, 0), (true ? ivec3(_GLF_IDENTITY(4, int(ivec4(4, 1, (0 | 0), 1))), 1, 0) : _GLF_FUZZED(bitfieldReverse(ivec3(-90524, -26501, -5331)))))))) / ivec3(1, 1, 1)), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 1, (0 | 0), 1))), 1, 0), (true ? ivec3(_GLF_IDENTITY(4, int(ivec4(4, 1, (0 | 0), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), clamp(~ (1), _GLF_IDENTITY(~ (1), (~ (1)) | (~ (1))), ~ (1)))))))), 1, 0) : _GLF_FUZZED(bitfieldReverse(ivec3(-90524, -26501, -5331))))))))), _GLF_IDENTITY((4) | (4), max((4) | (4), (4) | (4)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + 1 < _GLF_struct_replacement_6._f2._f5.subgroup_size)
  {
   atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(66604) : 64)), 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   subgroupAll(_GLF_IDENTITY(false, bool(bvec3(false, false, true))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-814.522), _GLF_FUZZED(8.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-814.522), _GLF_FUZZED(8.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), false)), (bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-814.522), _GLF_FUZZED(8.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), false))) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))], read, 4, 64, 4);
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((0.5 * -4.2))), bool(false))), 1.0), _GLF_IDENTITY(mat2(mat2(mat2(injectionSwitch.x, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.6) : 0.0)), 1.0, 1.0))), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(mat2(mat2(injectionSwitch.x, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.6) : 0.0)), 1.0, 1.0))), (mat2(mat2(mat2(injectionSwitch.x, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.6) : 0.0)), 1.0, 1.0)))) / mat2(1.0, 1.0, 1.0, 1.0)))))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 1.0, 1.0), mat2(mat2(mat2(injectionSwitch.x, 0.0, 1.0, 1.0))))), 1.0 * (float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 1.0, 1.0), mat2(_GLF_IDENTITY(mat2(mat2(injectionSwitch.x, 0.0, _GLF_IDENTITY(1.0, abs(0.0) + (1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(27.53)), float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-70.97)), bool(false)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(mat2(injectionSwitch.x, 0.0, 1.0, 1.0)), (mat2(mat2(injectionSwitch.x, 0.0, 1.0, 1.0))) / mat2(1.0, 1.0, 1.0, 1.0))))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 1.0, 1.0), mat2(mat2(mat2(injectionSwitch.x, 0.0, 1.0, 1.0))))), float(mat4x2(float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 1.0, 1.0), mat2(mat2(mat2(injectionSwitch.x, _GLF_IDENTITY(0.0, 1.0 * _GLF_IDENTITY((0.0), clamp((0.0), (0.0), (0.0)))), 1.0, 1.0)))), _GLF_IDENTITY(mat2(mat4x3(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 1.0, 1.0), mat2(mat2(mat2(injectionSwitch.x, _GLF_IDENTITY(0.0, 1.0 * _GLF_IDENTITY((0.0), clamp((0.0), (0.0), (0.0)))), 1.0, 1.0)))))), mat2(mat2(mat2(mat4x3(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 1.0, 1.0), mat2(mat2(mat2(injectionSwitch.x, _GLF_IDENTITY(0.0, 1.0 * _GLF_IDENTITY((0.0), clamp((0.0), (0.0), (0.0)))), 1.0, 1.0))))))))))), 1.0, 1.0, 0.0, 0.0, 1.0, cos(0.0), 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 1.0, 1.0), _GLF_IDENTITY(mat2(mat2(mat2(injectionSwitch.x, 0.0, 1.0, 1.0))), (mat2(mat2(mat2(injectionSwitch.x, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.7)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), 1.0)))) / mat2(1.0, 1.0, 1.0, 1.0)))), 0.0 + (float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 1.0, 1.0), mat2(mat2(mat2(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
}
