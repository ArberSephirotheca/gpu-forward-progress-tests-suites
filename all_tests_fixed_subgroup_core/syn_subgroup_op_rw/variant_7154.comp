#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))), (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false))), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false)))))))))))) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true, false, false)))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(448.355)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))) * vec2(1.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 1.0, 1.0, 1.0, 1.0))).y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat4(abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))))).y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) || false)) && true)))), true, true))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat4(abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))))).y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) || false)) && true)))), true, true))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat4(abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))))).y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) || false)) && true)))), true, true))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))).x, float(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))).x, 1.0, 0.0, 1.0, 0.0, 0.0))) > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat4(abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))))).y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) || false)) && true))), bool(bool(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat4(abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))))).y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) || false)) && true))))))), true, true)))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))))))) && true)) && true, bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat4(abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))))).y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) || false)) && true)))), true, true))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat4(abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))))).y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) || false)) && true)))), true, true))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat4(abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))))).y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) || false)) && true)))), true, true))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))).x, float(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))).x, 1.0, 0.0, 1.0, 0.0, 0.0))) > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat4(abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))))).y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) || false)) && true))), bool(bool(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat4(abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))))).y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) || false)) && true))))))), true, true)))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))))))) && true)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat4(abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))))).y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) || false)) && true)))), true, true))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat4(abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))))).y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) || false)) && true)))), true, true))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat4(abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))))).y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) || false)) && true)))), true, true))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))).x, float(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))).x, 1.0, 0.0, 1.0, 0.0, 0.0))) > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat4(abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))))).y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) || false)) && true))), bool(bool(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat4(abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))))).y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) || false)) && true))))))), true, true)))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))))))) && true)) && true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat4(abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))))).y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) || false)) && true)))), true, true))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat4(abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))))).y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) || false)) && true)))), true, true))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat4(abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))))).y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) || false)) && true)))), true, true))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))).x, float(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))).x, 1.0, 0.0, 1.0, 0.0, 0.0))) > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat4(abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))))).y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) || false)) && true))), bool(bool(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat4(abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))))).y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) || false)) && true))))))), true, true)))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))))))) && true)) && true, true, true)))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(-54.05)), vec2(_GLF_FUZZED(302.458), (vec2(0.0, 0.0))[1]), bvec2(false, true))), _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(13.90, -5.1)) : vec2(0.0, 0.0)))))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * cos(0.0))))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (false))) || (true)), (injectionSwitch.x < injectionSwitch.y)))), (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)) && true)))) || false))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))) || false)), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)))), (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (injectionSwitch.x > injectionSwitch.y))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))) || false)))), (bool(bool(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.4), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(94.31)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))) || false))))) && true)))) && true), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, log(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))).x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))) || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))), true, true, true))) || false)))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(sin(vec2(877.254, 8.5)))))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true, false)))))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, (2) + 0)))])).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))), false)))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), true, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec4(! (false), true, false, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(! (false), true, false, false)), false, true, true)), bool(bvec3(bool(bvec4(bool(bvec4(! (false), true, false, false)), false, true, true)), false, false)))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec3(workgroup_size, 1u, 0u), uvec3(_GLF_IDENTITY(uvec4(uvec3(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size))) | (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))))), 1u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec4(0u, 0u, 0u, 0u) | (uvec4(uvec3(workgroup_size, 1u, 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-3.5, 173.941)) : injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(float(0.0))), (0.0) - 0.0), 0.0)), 0.0, sqrt(1.0), 0.0, 1.0, 1.0)), (vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(0.7) : 0.0))), 0.0 + (_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(0.7) : 0.0))))), 0.0)), 0.0, sqrt(1.0), 0.0, 1.0, 1.0))) - vec2(0.0, 0.0)), _GLF_IDENTITY(max(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch))) / vec2(1.0, 1.0)), 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 1.0)), vec2(mat2x4(injectionSwitch, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 1.0))), max(max(vec2(mat2x4(injectionSwitch, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 1.0)), vec2(mat2x4(injectionSwitch, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 1.0))), max(vec2(mat2x4(injectionSwitch, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 1.0)), vec2(mat2x4(injectionSwitch, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 1.0))))))) * vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), true, true, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 0.0, sqrt(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-7234.5258) : 1.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))))), cos(0.0), 0.0, 1.0, 0.0, 1.0)), min(vec2(mat4(injectionSwitch, 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0)), max(vec2(mat4(injectionSwitch, 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, 0.0, 1.0)), vec2(mat4(injectionSwitch, 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, 0.0, 1.0))))))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), max(clamp(0.0, 0.0, 0.0), clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0, sqrt(1.0), 0.0, 1.0, 1.0)), (vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(1.0), _GLF_IDENTITY(0.0, (0.0) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.2)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)))), _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(-427.868)))))) - vec2(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), clamp(min(0.0, 0.0), _GLF_IDENTITY(min(0.0, 0.0), min(min(0.0, 0.0), min(0.0, 0.0))), min(0.0, 0.0)))), 0.0)))), max(vec2(mat2x4(injectionSwitch, 0.0, 0.0, sqrt(1.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0)) / 1.0), 1.0, 1.0)), vec2(mat2x4(injectionSwitch, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 1.0))))) * vec2(1.0, 1.0))).x > injectionSwitch.y)), true, true, false)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (! (true))), ! (! (! (! (! (true))))))))) && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5814.8038)), bool(false))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), mix(float(_GLF_FUZZED(injectionSwitch[0])), float(_GLF_FUZZED(8.9)), bool(false))) : injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), false)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), false)))), (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), false))))) || false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), true), true, true))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), true), true, true))), true, true)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (_GLF_IDENTITY(~ (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(1u, (1u) / 1u))), clamp(~ (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, max(1u, 1u)))), _GLF_IDENTITY((1u), ((1u)) / 1u) / 1u))), ~ (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(1u, (1u) / 1u))), ~ (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(1u, (1u) / 1u)))))))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))), uvec3(uvec3(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))))))), 0u | (uint(_GLF_IDENTITY(uvec3(subgroup_local_id, _GLF_IDENTITY(0u, (0u) - 0u), 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u))))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))), 0u, 1u), _GLF_IDENTITY(~ (~ (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(0u, 0u), uint(uvec3(max(0u, 0u), 1u, 0u)))), uint(uvec2(~ (_GLF_IDENTITY(max(0u, 0u), uint(uvec3(max(0u, 0u), 1u, 0u)))), 1u)))))), 1u))), min(~ (~ (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)), 1u))), ~ (~ (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)), 1u))))))), 0u | (uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, (0u) / 1u), 1u))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u))))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))), 0u, 1u), _GLF_IDENTITY(~ (~ (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(0u, 0u), uint(uvec3(max(0u, 0u), 1u, 0u)))), uint(uvec2(~ (_GLF_IDENTITY(max(0u, 0u), uint(uvec3(max(0u, 0u), 1u, 0u)))), 1u)))))), 1u))), min(~ (~ (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)), 1u))), ~ (~ (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)), 1u))))))), 0u | (uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, (0u) / 1u), 1u))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u))))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))), 0u, 1u), _GLF_IDENTITY(~ (~ (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(0u, 0u), uint(uvec3(max(0u, 0u), 1u, 0u)))), uint(uvec2(~ (_GLF_IDENTITY(max(0u, 0u), uint(uvec3(max(0u, 0u), 1u, 0u)))), 1u)))))), 1u))), min(~ (~ (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)), 1u))), ~ (~ (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)), 1u))))))), 0u | (uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, (0u) / 1u), 1u))))))))))), ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u))))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))), 0u, 1u), _GLF_IDENTITY(~ (~ (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(0u, 0u), uint(uvec3(max(0u, 0u), 1u, 0u)))), uint(uvec2(~ (_GLF_IDENTITY(max(0u, 0u), uint(uvec3(max(0u, 0u), 1u, 0u)))), 1u)))))), 1u))), min(~ (~ (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)), 1u))), ~ (~ (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)), 1u))))))), 0u | (uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, (0u) / 1u), 1u)))))))))))) | ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u))))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))), 0u, 1u), _GLF_IDENTITY(~ (~ (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(0u, 0u), uint(uvec3(max(0u, 0u), 1u, 0u)))), uint(uvec2(~ (_GLF_IDENTITY(max(0u, 0u), uint(uvec3(max(0u, 0u), 1u, 0u)))), 1u)))))), 1u))), min(~ (~ (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)), 1u))), ~ (~ (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)), 1u))))))), 0u | (uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, (0u) / 1u), 1u)))))))))))))) >> 0u)) / 1u) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u))))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u))))), _GLF_IDENTITY(0u | (uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))))), 0u ^ (0u | (uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u))))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u))))), 0u | (uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))))))))), 1u), uvec2(uvec2(uvec2(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u))))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ _GLF_IDENTITY((~ (uvec3(subgroup_local_id, 0u, 1u))), ~ (~ (_GLF_IDENTITY((~ (uvec3(subgroup_local_id, 0u, 1u))), min((~ (uvec3(subgroup_local_id, 0u, 1u))), (~ (uvec3(subgroup_local_id, 0u, 1u)))))))))), 0u | (uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))))))))), 1u))))), min(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u))))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u))))), 0u | (uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))))))))), 1u), uvec2(uvec2(uvec2(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u))))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u))))), 0u | (uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))))))))), 1u))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u))))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u))))), 0u | (uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))))))))), 1u), uvec2(uvec2(uvec2(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u))))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u))))), 0u | (uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))))))))), 1u)))))))))))) + 1) % subgroup_size), uint(uvec3(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) / 1u, max((subgroup_local_id) / 1u, (subgroup_local_id) / 1u))), 0u, 1u), ~ _GLF_IDENTITY((~ (uvec3(subgroup_local_id, 0u, 1u))), max((~ (uvec3(subgroup_local_id, 0u, 1u))), (~ (uvec3(subgroup_local_id, 0u, 1u)))))))))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(124613u, 8469u, 82236u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), (uvec3(subgroup_local_id, 0u, 1u)) | (uvec3(subgroup_local_id, 0u, 1u)))))))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(124613u, 8469u, 82236u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), (uvec3(subgroup_local_id, 0u, 1u)) | (uvec3(subgroup_local_id, 0u, 1u))))))))))))) ^ 0u)))) + _GLF_IDENTITY(1, _GLF_IDENTITY((0 | 0), (_GLF_IDENTITY((0 | 0), ((0 | 0)) | ((0 | 0)))) ^ (0 & -7584)) ^ (1))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) / 1u, max((subgroup_local_id) / 1u, (subgroup_local_id) / 1u))), 0u, 1u), ~ _GLF_IDENTITY((~ (uvec3(subgroup_local_id, 0u, 1u))), max((~ (uvec3(subgroup_local_id, 0u, 1u))), (~ (uvec3(subgroup_local_id, 0u, 1u)))))))))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(124613u, 8469u, 82236u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), (uvec3(subgroup_local_id, 0u, 1u)) | (uvec3(subgroup_local_id, 0u, 1u)))))))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(124613u, 8469u, 82236u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), (uvec3(subgroup_local_id, 0u, 1u)) | (uvec3(subgroup_local_id, 0u, 1u))))))))))))) ^ 0u)))) + _GLF_IDENTITY(1, _GLF_IDENTITY((0 | 0), (_GLF_IDENTITY((0 | 0), ((0 | 0)) | ((0 | 0)))) ^ (0 & -7584)) ^ (1))) / 1u)) >> 0u)), clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) / 1u, max((subgroup_local_id) / 1u, (subgroup_local_id) / 1u))), 0u, 1u), ~ _GLF_IDENTITY((~ (uvec3(subgroup_local_id, 0u, 1u))), max((~ (uvec3(subgroup_local_id, 0u, 1u))), (~ (uvec3(subgroup_local_id, 0u, 1u)))))))))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(124613u, 8469u, 82236u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), (uvec3(subgroup_local_id, 0u, 1u)) | (uvec3(subgroup_local_id, 0u, 1u)))))))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(124613u, 8469u, 82236u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), (uvec3(subgroup_local_id, 0u, 1u)) | (uvec3(subgroup_local_id, 0u, 1u))))))))))))) ^ 0u)))) + _GLF_IDENTITY(1, _GLF_IDENTITY((0 | 0), (_GLF_IDENTITY((0 | 0), ((0 | 0)) | ((0 | 0)))) ^ (0 & -7584)) ^ (1))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) / 1u, max((subgroup_local_id) / 1u, (subgroup_local_id) / 1u))), 0u, 1u), ~ _GLF_IDENTITY((~ (uvec3(subgroup_local_id, 0u, 1u))), max((~ (uvec3(subgroup_local_id, 0u, 1u))), (~ (uvec3(subgroup_local_id, 0u, 1u)))))))))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(124613u, 8469u, 82236u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), (uvec3(subgroup_local_id, 0u, 1u)) | (uvec3(subgroup_local_id, 0u, 1u)))))))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(124613u, 8469u, 82236u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), (uvec3(subgroup_local_id, 0u, 1u)) | (uvec3(subgroup_local_id, 0u, 1u))))))))))))) ^ 0u)))) + _GLF_IDENTITY(1, _GLF_IDENTITY((0 | 0), (_GLF_IDENTITY((0 | 0), ((0 | 0)) | ((0 | 0)))) ^ (0 & -7584)) ^ (1))) / 1u)) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) / 1u, max((subgroup_local_id) / 1u, (subgroup_local_id) / 1u))), 0u, 1u), ~ _GLF_IDENTITY((~ (uvec3(subgroup_local_id, 0u, 1u))), max((~ (uvec3(subgroup_local_id, 0u, 1u))), (~ (uvec3(subgroup_local_id, 0u, 1u)))))))))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(124613u, 8469u, 82236u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), (uvec3(subgroup_local_id, 0u, 1u)) | (uvec3(subgroup_local_id, 0u, 1u)))))))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(124613u, 8469u, 82236u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), (uvec3(subgroup_local_id, 0u, 1u)) | (uvec3(subgroup_local_id, 0u, 1u))))))))))))) ^ 0u)))) + _GLF_IDENTITY(1, _GLF_IDENTITY((0 | 0), (_GLF_IDENTITY((0 | 0), ((0 | 0)) | ((0 | 0)))) ^ (0 & -7584)) ^ (1))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) / 1u, max((subgroup_local_id) / 1u, (subgroup_local_id) / 1u))), 0u, 1u), ~ _GLF_IDENTITY((~ (uvec3(subgroup_local_id, 0u, 1u))), max((~ (uvec3(subgroup_local_id, 0u, 1u))), (~ (uvec3(subgroup_local_id, 0u, 1u)))))))))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(124613u, 8469u, 82236u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), (uvec3(subgroup_local_id, 0u, 1u)) | (uvec3(subgroup_local_id, 0u, 1u)))))))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(124613u, 8469u, 82236u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), (uvec3(subgroup_local_id, 0u, 1u)) | (uvec3(subgroup_local_id, 0u, 1u))))))))))))) ^ 0u)))) + _GLF_IDENTITY(1, _GLF_IDENTITY((0 | 0), (_GLF_IDENTITY((0 | 0), ((0 | 0)) | ((0 | 0)))) ^ (0 & -7584)) ^ (1))) / 1u)) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) / 1u, max((subgroup_local_id) / 1u, (subgroup_local_id) / 1u))), 0u, 1u), ~ _GLF_IDENTITY((~ (uvec3(subgroup_local_id, 0u, 1u))), max((~ (uvec3(subgroup_local_id, 0u, 1u))), (~ (uvec3(subgroup_local_id, 0u, 1u)))))))))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(124613u, 8469u, 82236u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), (uvec3(subgroup_local_id, 0u, 1u)) | (uvec3(subgroup_local_id, 0u, 1u)))))))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(124613u, 8469u, 82236u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), (uvec3(subgroup_local_id, 0u, 1u)) | (uvec3(subgroup_local_id, 0u, 1u))))))))))))) ^ 0u)))) + _GLF_IDENTITY(1, _GLF_IDENTITY((0 | 0), (_GLF_IDENTITY((0 | 0), ((0 | 0)) | ((0 | 0)))) ^ (0 & -7584)) ^ (1))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) / 1u, max((subgroup_local_id) / 1u, (subgroup_local_id) / 1u))), 0u, 1u), ~ _GLF_IDENTITY((~ (uvec3(subgroup_local_id, 0u, 1u))), max((~ (uvec3(subgroup_local_id, 0u, 1u))), (~ (uvec3(subgroup_local_id, 0u, 1u)))))))))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(124613u, 8469u, 82236u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), (uvec3(subgroup_local_id, 0u, 1u)) | (uvec3(subgroup_local_id, 0u, 1u)))))))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(124613u, 8469u, 82236u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (uvec3(subgroup_local_id, 0u, 1u)))), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 1u), (uvec3(subgroup_local_id, 0u, 1u)) | (uvec3(subgroup_local_id, 0u, 1u))))))))))))) ^ 0u)))) + _GLF_IDENTITY(1, _GLF_IDENTITY((0 | 0), (_GLF_IDENTITY((0 | 0), ((0 | 0)) | ((0 | 0)))) ^ (0 & -7584)) ^ (1))) / 1u)) >> 0u)))) % subgroup_size), 1u, 0u)));
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))], _GLF_IDENTITY(4, (4) >> 0), 64, _GLF_IDENTITY(0, min(0, 0)));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) + 0.0)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), false || ((false))), true)), ! (! (bool(bvec2(_GLF_IDENTITY((false), false || ((false))), true)))))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(clamp(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) << (1u ^ 1u), min((virtual_gid) << (1u ^ 1u), (virtual_gid) << (1u ^ 1u)))), virtual_gid, _GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))), max(clamp(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) << (1u ^ 1u), min((virtual_gid) << (1u ^ 1u), (virtual_gid) << (1u ^ 1u)))), virtual_gid, _GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))), clamp(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) << (1u ^ 1u), min((virtual_gid) << (1u ^ 1u), (virtual_gid) << (1u ^ 1u)))), virtual_gid, _GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))))))], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), (true ? dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(7.4)))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, sin(0.0))), clamp(vec2(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), (true ? dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(7.4)))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, sin(0.0))), vec2(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), (true ? dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(7.4)))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, sin(0.0))), vec2(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), (true ? dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(7.4)))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, sin(0.0)))))).y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED((vec2(4103.9907, _GLF_IDENTITY(-43.14, (-43.14) / 1.0)) - 2.6)))).y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.2)), float(injectionSwitch.y), bool(true)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec3(bool(bool(injectionSwitch.x > injectionSwitch.y)), true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, false, false)))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), true), true)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), true), true)))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y)), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-9.5) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-9.5) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))), true), true), bvec3(bvec3(bvec3(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-9.5) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-9.5) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))), true), true))))))))))))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), true), true)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), true), true)))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y)), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-9.5) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-9.5) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))), true), true), bvec3(bvec3(bvec3(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-9.5) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-9.5) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))), true), true))))))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0)), min(float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0)), float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0)))))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-547.194), _GLF_FUZZED(0.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) + vec2(0.0, 0.0)), max(injectionSwitch, injectionSwitch)).y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(log(6.0)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) - 0.0))))), true), true))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   atomicStore(buf[_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED((subgroup_size ++))))], read, _GLF_IDENTITY(4, (4) | 0), 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, log(1.0), 1.0, log(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), 1.0, 0.0, 0.0, 0.0)), vec2(_GLF_IDENTITY(mat2x4(vec2(mat3(injectionSwitch, log(1.0), 1.0, log(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), 1.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, abs(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0), (mat2x4(vec2(mat3(injectionSwitch, log(1.0), 1.0, log(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), 1.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, abs(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))).y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED((+ -0.9)))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(length(injectionSwitch))))))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.2, -374.517)))).x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false)))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))) - _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec4(-462.896, -20.89, -8759.4672, -9.2).wy) : vec2(0.0, 0.0))))) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1124.1118)), vec2(_GLF_IDENTITY(_GLF_FUZZED(float(true)), clamp(_GLF_FUZZED(float(true)), _GLF_FUZZED(float(true)), _GLF_FUZZED(float(true)))), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(false, true)))) * mat2(1.0))) - vec2(0.0, 0.0)).y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && true))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))) || false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))) || false, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), false || ((_GLF_DEAD(false)))) || false) && true)))))) || false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec4((false) || false, true, false, false)))) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) || false)))), true, false))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(643.057)), bool(false))) : _GLF_FUZZED(2.6))), true, _GLF_IDENTITY(true, (true) || false))), _GLF_IDENTITY((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), true && ((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))) && true))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.3) : injectionSwitch.y))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
}
