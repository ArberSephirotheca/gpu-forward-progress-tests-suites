#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uvec4 GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_sizevirtual_gid;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, 0 ^ (_injected_loop_counter ++)))
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
  }
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 uvec4 GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base;
 if(_GLF_DEAD(false))
  return;
 uvec2 GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec3(! (! (_GLF_DEAD(false))), false, _GLF_IDENTITY(false, false || (false))))))))))
  return;
 uint subgroup_id = gl_SubgroupID;
 do
  {
   do
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u ^ (subgroup_id), clamp(0u ^ (subgroup_id), _GLF_IDENTITY(0u ^ (subgroup_id), (0u ^ (subgroup_id)) + 0u), _GLF_IDENTITY(0u ^ (subgroup_id), (_GLF_IDENTITY(0u ^ (subgroup_id), 0u | (0u ^ (subgroup_id)))) >> 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))), max(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))) * 1u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), max(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))) : _GLF_FUZZED(packSnorm4x8(vec4(9231.5780, -9547.8731, 5693.7721, -5.8)))))), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u ^ (subgroup_id), clamp(0u ^ (subgroup_id), _GLF_IDENTITY(0u ^ (subgroup_id), (0u ^ (subgroup_id)) + 0u), _GLF_IDENTITY(0u ^ (subgroup_id), (_GLF_IDENTITY(0u ^ (subgroup_id), 0u | (0u ^ (subgroup_id)))) >> 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))), max(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))) * 1u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), max(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))) : _GLF_FUZZED(packSnorm4x8(vec4(9231.5780, -9547.8731, 5693.7721, -5.8)))))), 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u ^ (subgroup_id), clamp(0u ^ (subgroup_id), _GLF_IDENTITY(0u ^ (subgroup_id), (0u ^ (subgroup_id)) + 0u), _GLF_IDENTITY(0u ^ (subgroup_id), (_GLF_IDENTITY(0u ^ (subgroup_id), 0u | (0u ^ (subgroup_id)))) >> 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))), max(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))) * 1u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), max(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))) : _GLF_FUZZED(packSnorm4x8(vec4(9231.5780, -9547.8731, 5693.7721, -5.8)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u ^ (subgroup_id), clamp(0u ^ (subgroup_id), _GLF_IDENTITY(0u ^ (subgroup_id), (0u ^ (subgroup_id)) + 0u), _GLF_IDENTITY(0u ^ (subgroup_id), (_GLF_IDENTITY(0u ^ (subgroup_id), 0u | (0u ^ (subgroup_id)))) >> 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))), max(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))) * 1u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), max(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))) : _GLF_FUZZED(packSnorm4x8(vec4(9231.5780, -9547.8731, 5693.7721, -5.8)))))))))), 0u | (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))))))));
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_sizevirtual_gid.z = subgroup_size;
 do
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    break;
   if(_GLF_DEAD(false))
    break;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
      {
      }
     else
      {
       GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x = GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_sizevirtual_gid.z;
       if(_GLF_DEAD(false))
        break;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || false), ! (! (_GLF_IDENTITY(true, (true) || false)))))) && _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false || ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)) * (injectionSwitch)).y)), true && ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)) * (injectionSwitch)).y)))))))))))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      continue;
     return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4758.3080)), vec2(_GLF_FUZZED(-744.218), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false)), false), bvec3(bvec4(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false)), false), false))))))).x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4758.3080)), vec2(_GLF_FUZZED(-744.218), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false)), false), bvec3(bvec4(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false)), false), false))))))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4758.3080)), vec2(_GLF_FUZZED(-744.218), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false)), false), bvec3(bvec4(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false)), false), false))))))).x)) > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))), bool(bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    return;
   GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.x = num_workgroup;
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.x = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.x, 0u | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.x, (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.x) + 0u)));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        break;
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), clamp(min(1, 1), min(1, 1), min(1, 1))))], clamp(injectionSwitch[_GLF_IDENTITY(1, min(1, 1))], injectionSwitch[_GLF_IDENTITY(1, min(1, 1))], injectionSwitch[_GLF_IDENTITY(1, min(1, 1))])))).x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, max(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, _GLF_IDENTITY(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, clamp(false ? _GLF_FUZZED(_GLF_IDENTITY(-171.878, (false ? _GLF_FUZZED(-72.08) : _GLF_IDENTITY(-171.878, clamp(-171.878, -171.878, -171.878))))) : injectionSwitch.x, _GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(-171.878), (_GLF_IDENTITY(_GLF_FUZZED(-171.878), float(float(_GLF_FUZZED(-171.878))))) + 0.0) : injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(-171.878) : injectionSwitch.x) / 1.0, clamp((false ? _GLF_FUZZED(-171.878) : injectionSwitch.x) / 1.0, (false ? _GLF_FUZZED(-171.878) : injectionSwitch.x) / 1.0, (false ? _GLF_FUZZED(-171.878) : injectionSwitch.x) / 1.0))), false ? _GLF_FUZZED(-171.878) : injectionSwitch.x)))))), _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, abs(0.0)))))), injectionSwitch)), 1.0, 1.0, 1.0, exp(0.0)))).x), _GLF_IDENTITY((clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), clamp(min(1, 1), min(1, 1), min(1, 1))))])).x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, max(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, _GLF_IDENTITY(false ? _GLF_FUZZED(-171.878) : _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 1.0, tan(0.0), 0.0, 0.0), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 1.0, tan(0.0), 0.0, 0.0), mat2x3(mat3x4(mat2x3(injectionSwitch.x, 1.0, 1.0, tan(0.0), 0.0, 0.0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, _GLF_IDENTITY(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, (false ? _GLF_FUZZED(-171.878) : injectionSwitch.x) / 1.0), false ? _GLF_FUZZED(-171.878) : injectionSwitch.x), clamp(clamp(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, _GLF_IDENTITY(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, (false ? _GLF_FUZZED(-171.878) : injectionSwitch.x) / 1.0), false ? _GLF_FUZZED(-171.878) : injectionSwitch.x), clamp(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, _GLF_IDENTITY(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, (false ? _GLF_FUZZED(-171.878) : injectionSwitch.x) / 1.0), false ? _GLF_FUZZED(-171.878) : injectionSwitch.x), clamp(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, _GLF_IDENTITY(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, (false ? _GLF_FUZZED(-171.878) : injectionSwitch.x) / 1.0), false ? _GLF_FUZZED(-171.878) : injectionSwitch.x))), (false ? _GLF_FUZZED(-234.812) : clamp(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, mix(float(_GLF_IDENTITY(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, (false ? _GLF_FUZZED(-171.878) : injectionSwitch.x) - 0.0)), float(_GLF_FUZZED(0.2)), bool(false))), (false ? _GLF_FUZZED(-171.878) : injectionSwitch.x) / 1.0), false ? _GLF_FUZZED(-171.878) : injectionSwitch.x)))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, exp(0.0)))).x, (false ? _GLF_FUZZED(dot(injectionSwitch, injectionSwitch)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, exp(0.0)))).x, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, exp(0.0)))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, exp(0.0)))).x)))))), min((clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), clamp(min(1, 1), min(1, 1), min(1, 1))))])).x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, max(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, _GLF_IDENTITY(false ? _GLF_FUZZED(-171.878) : _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 1.0, tan(0.0), 0.0, 0.0), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 1.0, tan(0.0), 0.0, 0.0), mat2x3(mat3x4(mat2x3(injectionSwitch.x, 1.0, 1.0, tan(0.0), 0.0, 0.0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, _GLF_IDENTITY(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, (false ? _GLF_FUZZED(-171.878) : injectionSwitch.x) / 1.0), false ? _GLF_FUZZED(-171.878) : injectionSwitch.x), clamp(clamp(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, _GLF_IDENTITY(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, (false ? _GLF_FUZZED(-171.878) : injectionSwitch.x) / 1.0), false ? _GLF_FUZZED(-171.878) : injectionSwitch.x), clamp(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, _GLF_IDENTITY(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, (false ? _GLF_FUZZED(-171.878) : injectionSwitch.x) / 1.0), false ? _GLF_FUZZED(-171.878) : injectionSwitch.x), clamp(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, _GLF_IDENTITY(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, (false ? _GLF_FUZZED(-171.878) : injectionSwitch.x) / 1.0), false ? _GLF_FUZZED(-171.878) : injectionSwitch.x))), (false ? _GLF_FUZZED(-234.812) : clamp(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, mix(float(_GLF_IDENTITY(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, (false ? _GLF_FUZZED(-171.878) : injectionSwitch.x) - 0.0)), float(_GLF_FUZZED(0.2)), bool(false))), (false ? _GLF_FUZZED(-171.878) : injectionSwitch.x) / 1.0), false ? _GLF_FUZZED(-171.878) : injectionSwitch.x)))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, exp(0.0)))).x, (false ? _GLF_FUZZED(dot(injectionSwitch, injectionSwitch)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, exp(0.0)))).x, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, exp(0.0)))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, exp(0.0)))).x)))))), (clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), clamp(min(1, 1), min(1, 1), min(1, 1))))])).x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, max(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, _GLF_IDENTITY(false ? _GLF_FUZZED(-171.878) : _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 1.0, tan(0.0), 0.0, 0.0), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 1.0, tan(0.0), 0.0, 0.0), mat2x3(mat3x4(mat2x3(injectionSwitch.x, 1.0, 1.0, tan(0.0), 0.0, 0.0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, _GLF_IDENTITY(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, (false ? _GLF_FUZZED(-171.878) : injectionSwitch.x) / 1.0), false ? _GLF_FUZZED(-171.878) : injectionSwitch.x), clamp(clamp(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, _GLF_IDENTITY(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, (false ? _GLF_FUZZED(-171.878) : injectionSwitch.x) / 1.0), false ? _GLF_FUZZED(-171.878) : injectionSwitch.x), clamp(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, _GLF_IDENTITY(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, (false ? _GLF_FUZZED(-171.878) : injectionSwitch.x) / 1.0), false ? _GLF_FUZZED(-171.878) : injectionSwitch.x), clamp(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, _GLF_IDENTITY(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, (false ? _GLF_FUZZED(-171.878) : injectionSwitch.x) / 1.0), false ? _GLF_FUZZED(-171.878) : injectionSwitch.x))), (false ? _GLF_FUZZED(-234.812) : clamp(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, mix(float(_GLF_IDENTITY(false ? _GLF_FUZZED(-171.878) : injectionSwitch.x, (false ? _GLF_FUZZED(-171.878) : injectionSwitch.x) - 0.0)), float(_GLF_FUZZED(0.2)), bool(false))), (false ? _GLF_FUZZED(-171.878) : injectionSwitch.x) / 1.0), false ? _GLF_FUZZED(-171.878) : injectionSwitch.x)))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, exp(0.0)))).x, (false ? _GLF_FUZZED(dot(injectionSwitch, injectionSwitch)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, exp(0.0)))).x, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, exp(0.0)))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, exp(0.0)))).x)))))))) - 0.0)) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), float(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(40.47)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, round(_GLF_IDENTITY(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), 1.0 * (length(normalize(vec3(1.0, 1.0, 1.0))))), min(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), (normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), mix(vec3(_GLF_IDENTITY((vec3(1.0, 1.0, 1.0))[0], ((vec3(1.0, 1.0, 1.0))[0]) / 1.0), (vec3(1.0, 1.0, 1.0))[1], _GLF_FUZZED(vec4(514.135, -5623.8077, 9.8, -4402.5580).p)), vec3(_GLF_FUZZED(-5912.0886), _GLF_FUZZED(float(184601u)), (vec3(1.0, 1.0, 1.0))[2]), bvec3(false, false, true))))) / _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), vec3(vec3(vec3(1.0, 1.0, 1.0)))))), length(normalize(vec3(1.0, 1.0, 1.0)))))), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(sqrt(0.0), (false ? _GLF_FUZZED(-1728.1236) : sqrt(0.0))), _GLF_IDENTITY(_GLF_IDENTITY(sin(0.0), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false)))) && true))))) ? _GLF_FUZZED(-3067.1252) : _GLF_IDENTITY(sin(0.0), (sin(0.0)) / 1.0))), _GLF_ONE(1.0, injectionSwitch.y) * (sin(0.0)))), vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0), 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), dot(vec3(0.0, sqrt(0.0), sin(0.0)), vec3(1.0, 1.0, determinant(mat3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))))), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(1928.9111) : 1.0)), 0.0, 0.0, 0.0, 1.0))))), 1.0, 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(40.47)), float(1.0), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) < injectionSwitch.y))))), 0.0, round(_GLF_IDENTITY(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), 1.0 * (length(normalize(vec3(1.0, 1.0, 1.0))))), min(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), (normalize(vec3(1.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), 1.0))) / _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), vec3(vec3(vec3(1.0, 1.0, 1.0)))))), length(normalize(vec3(1.0, 1.0, 1.0)))))), _GLF_IDENTITY(dot(vec3(0.0, sqrt(0.0), _GLF_IDENTITY(_GLF_IDENTITY(sin(0.0), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) ? _GLF_FUZZED(-3067.1252) : _GLF_IDENTITY(_GLF_IDENTITY(sin(0.0), (sin(0.0)) / 1.0), mix(float(_GLF_FUZZED(979.411)), float(_GLF_IDENTITY(sin(0.0), (sin(0.0)) / 1.0)), bool(true))))), _GLF_ONE(1.0, injectionSwitch.y) * (sin(0.0)))), vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), dot(vec3(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-0.7))), sqrt(0.0), sin(0.0)), vec3(1.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), 1.0, 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(40.47)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, round(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), max(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), (true ? length(normalize(vec3(1.0, 1.0, 1.0))) : _GLF_FUZZED(9717.3912))), _GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), min(length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0))))))), 1.0 * (length(normalize(vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(min(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), (normalize(vec3(1.0, 1.0, 1.0))) / _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), vec3(vec3(vec3(1.0, 1.0, 1.0)))))), length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0 * (_GLF_IDENTITY(min(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), (normalize(vec3(1.0, 1.0, 1.0))) / _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), vec3(vec3(vec3(1.0, 1.0, 1.0)))))), length(normalize(vec3(1.0, 1.0, 1.0)))), (min(length(_GLF_IDENTITY(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) / vec3(1.0, 1.0, 1.0))), (normalize(vec3(1.0, 1.0, 1.0))) / _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), vec3(vec3(vec3(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(39.70) : 1.0)), 1.0)))))), length(normalize(vec3(1.0, 1.0, 1.0))))) / 1.0))))), _GLF_IDENTITY(dot(vec3(0.0, sqrt(0.0), _GLF_IDENTITY(_GLF_IDENTITY(sin(0.0), (_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true, true, false)))) || (false)) ? _GLF_FUZZED(-3067.1252) : _GLF_IDENTITY(sin(0.0), (sin(0.0)) / 1.0))), _GLF_ONE(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), injectionSwitch.y) * (sin(0.0)))), vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0)))), dot(vec3(0.0, sqrt(0.0), sin(0.0)), vec3(1.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-6052.7439))), 0.0, 0.0, 1.0)))), (true ? min(_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(40.47)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4427.9296)), float(1.0), bool(true)))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-9553.4765)), min((true ? injectionSwitch.x : _GLF_FUZZED(-9553.4765)), _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-9553.4765)), float(mat4x2((true ? injectionSwitch.x : _GLF_FUZZED(-9553.4765)), abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)))))) < injectionSwitch.y))))), 0.0, round(_GLF_IDENTITY(_GLF_IDENTITY(length(normalize(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.4))))), 1.0, 1.0))), 1.0 * (length(normalize(vec3(1.0, 1.0, 1.0))))), min(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY((normalize(vec3(1.0, 1.0, 1.0))) / _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), vec3(vec3(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), clamp(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), vec3(mat2(vec3(1.0, 1.0, 1.0), abs(1.0)))), vec3(1.0, 1.0, 1.0)))))), ((normalize(vec3(1.0, 1.0, 1.0))) / _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), vec3(vec3(vec3(1.0, 1.0, 1.0))))) - vec3(0.0, 0.0, 0.0)))), length(normalize(vec3(1.0, 1.0, 1.0)))))), _GLF_IDENTITY(dot(vec3(0.0, sqrt(0.0), _GLF_IDENTITY(_GLF_IDENTITY(sin(0.0), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) ? _GLF_FUZZED(-3067.1252) : _GLF_IDENTITY(sin(0.0), (sin(0.0)) / 1.0))), _GLF_ONE(1.0, injectionSwitch.y) * _GLF_IDENTITY((_GLF_IDENTITY(sin(0.0), (sin(0.0)) + determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), (_GLF_IDENTITY((sin(0.0)), clamp((sin(0.0)), (_GLF_IDENTITY(sin(0.0), float(vec4(sin(0.0), 1.0, 0.0, tan(0.0))))), (sin(0.0))))) + 0.0))), vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), dot(vec3(0.0, sqrt(0.0), sin(0.0)), vec3(1.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), 1.0, 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2093.3762)), bool(false))), injectionSwitch.y)), float(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(40.47)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, round(_GLF_IDENTITY(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), 1.0 * (length(normalize(vec3(1.0, 1.0, 1.0))))), min(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), (normalize(vec3(1.0, 1.0, 1.0))) / _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(vec3(vec3(1.0, 1.0, 1.0))), vec3(_GLF_IDENTITY(mat3x2(vec3(vec3(vec3(1.0, 1.0, 1.0))), 0.0, 0.0, log(1.0)), (mat3x2(vec3(vec3(vec3(1.0, 1.0, 1.0))), 0.0, 0.0, log(1.0))) * mat3(1.0))))))), length(normalize(vec3(1.0, 1.0, 1.0)))))), _GLF_IDENTITY(dot(vec3(0.0, sqrt(0.0), _GLF_IDENTITY(_GLF_IDENTITY(sin(0.0), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) ? _GLF_FUZZED(-3067.1252) : _GLF_IDENTITY(sin(0.0), (sin(0.0)) / 1.0))), _GLF_ONE(1.0, injectionSwitch.y) * (sin(0.0)))), vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (1.0) / 1.0), 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), dot(vec3(0.0, sqrt(0.0), sin(0.0)), vec3(1.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), 1.0, 1.0, 0.0, 0.0, 1.0)))) : _GLF_FUZZED(3.9))))))));
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))))))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))), false))))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      {
       do
        {
         if(_GLF_DEAD(false))
          break;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = _GLF_IDENTITY(1, ~ (~ (1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 return;
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, true)))))
                  break;
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   break;
                  }
                 if(_GLF_DEAD(false))
                  break;
                }
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
                  continue;
                 break;
                }
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              break;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   else
    {
    }
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(false, true, false, false)))))))
        return;
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), bool(bvec3(bool(bvec4(false, false, false, true)), true, false))))));
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))
          {
           return;
          }
         else
          {
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))));
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, max(1, 1))); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) != int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))).x, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))).x : _GLF_FUZZED(-89.26)))), (_GLF_ZERO(0.0, injectionSwitch.x)) - length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), min(vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(0.0, 0.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(0.0, 0.0, 0.0, 0.0)))) * vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(0.0, 0.0, 0.0, 0.0))), (true ? _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(vec4(2881.6921, -580.422, 2.8, -24.50)))), min(_GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, (0.0) + length(0.0)), 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(0.0, 0.0, 0.0, 0.0))))))))))), _GLF_IDENTITY((_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((injectionSwitch * 1.9)))).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - sin(log(1.0))), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0))), injectionSwitch.x)), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))).x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_FUZZED(-3.0)), float(min(injectionSwitch.x, injectionSwitch.x)), bool(true))))), mix(float(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_FUZZED(-3.0)), float(min(injectionSwitch.x, injectionSwitch.x)), bool(true)))))), float(_GLF_FUZZED(-1186.1560)), bool(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_FUZZED(-3.0)), float(min(injectionSwitch.x, injectionSwitch.x)), bool(true)))))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_FUZZED(-3.0)), float(min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-747.647) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)), bool(true))))))))) * _GLF_IDENTITY(dot(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0), vec4(0.0, 1.0, 0.0, 0.0)), clamp(dot(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0), vec4(0.0, 1.0, 0.0, 0.0)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), float(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))))), 1.0 * ((_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(injectionSwitch, injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-3.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(_GLF_FUZZED(-3.0)) : _GLF_FUZZED(sin(-4.5)))), float(min(injectionSwitch.x, injectionSwitch.x)), bool(true)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), float(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_FUZZED(-3.0)), float(min(injectionSwitch.x, injectionSwitch.x)), bool(true)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), float(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_FUZZED(-3.0)), float(min(injectionSwitch.x, injectionSwitch.x)), bool(true)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), float(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_FUZZED(-3.0)), float(min(injectionSwitch.x, injectionSwitch.x)), bool(true)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), float(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_FUZZED(-3.0)), float(min(injectionSwitch.x, injectionSwitch.x)), bool(true)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), float(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), mix(float(_GLF_FUZZED(8.9)), float(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_FUZZED(-3.0)), float(min(injectionSwitch.x, injectionSwitch.x)), bool(true)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), float(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_FUZZED(-3.0)), float(min(injectionSwitch.x, injectionSwitch.x)), bool(true)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), float(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_FUZZED(-3.0)), float(min(injectionSwitch.x, injectionSwitch.x)), bool(true)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), float(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_FUZZED(-3.0)), float(min(injectionSwitch.x, injectionSwitch.x)), bool(true)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), float(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))), bool(true)))))))))), (_GLF_IDENTITY((_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))))), clamp((_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mod(vec2(2.7, -7027.2163), injectionSwitch)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.6), _GLF_FUZZED(660.772)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))), true), true))))))), (injectionSwitch) + vec2(0.0, 0.0)))).x, min(injectionSwitch.x, injectionSwitch.x)))), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))))) / 1.0)) / 1.0) / exp(0.0)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 do
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))
        break;
      }
     else
      {
       return;
      }
    }
   GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y = workgroup_size;
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y)), false || (_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), ! (! (bool((injectionSwitch.x < injectionSwitch.y)))))))))), ! _GLF_IDENTITY((! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)) || false, ! (! (((injectionSwitch.x < injectionSwitch.y)) || false))))))))), ! (! (_GLF_IDENTITY((! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) || ((! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))))))))))))))))
    {
     do
      {
       _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y = _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, clamp(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size)).y, ~ (~ (GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y = _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y, 0u | (GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y, (GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y = _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y))) * 1u)))), 0u | (GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y))) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), ((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y = _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y, _GLF_IDENTITY(max(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y), 0u ^ (max(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y)))), 0u | (GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) - (0u ^ 0u)))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            continue;
           continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))))
          continue;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          return;
         break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))))
            break;
           break;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         continue;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))), false, true, false))))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0))
              {
               return;
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         return;
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), bool(bool(! (_GLF_IDENTITY(true, false || (true)))))), (! _GLF_IDENTITY((_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))), true && (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec4((true), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), false, false)), true && (bool(bvec4((true), false, false, false))))))))), bool(bvec4((_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, false, false)), true && (bool(bvec4((true), false, false, _GLF_IDENTITY(false, ! (! (false)))))))))))), false, false, true)))) && true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, (_injected_loop_counter != 0) && true))) && true); _injected_loop_counter --)
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), bool(bvec3(! (_GLF_IDENTITY(! (false), (! (false)) && true)), false, false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), bool(bvec3(! (_GLF_IDENTITY(! (false), (! (false)) && true)), false, false))), false, true), true)))))))), false, true, false)))))), (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))) && true))
      return;
    }
   else
    {
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), min(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
    {
     return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y * workgroup_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), (uint(uvec2(0u, 1u))) * 1u)) + (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y * workgroup_id, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)) * (GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y * workgroup_id)), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size, (GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size) / uvec2(1u, 1u)).y * workgroup_id) ^ 0u))), max(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y * workgroup_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(0u, 1u)), (uint(uvec2(0u, 1u))) * uint(_GLF_ONE(1.0, injectionSwitch.y))), (uint(uvec2(0u, 1u))) * 1u)) + (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << 0u), (false ? _GLF_FUZZED(subgroup_local_id) : 1u)) * (GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y * workgroup_id)), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size, (GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size) / uvec2(1u, 1u)).y * workgroup_id) ^ 0u))), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y * workgroup_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), (uint(uvec2(0u, 1u))) * 1u)) + (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y * workgroup_id, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)) * (GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y * workgroup_id)), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size, _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size) / uvec2(1u, 1u), uvec2(_GLF_IDENTITY(uvec2((GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size) / uvec2(1u, 1u)), (uvec2((GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size) / uvec2(1u, 1u))) - uvec2(0u, 0u))))).y * workgroup_id) ^ 0u)))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, int(int(2)))), _GLF_IDENTITY(int(_GLF_IDENTITY(2, ~ (~ (2)))), clamp(int(2), int(2), int(2)))))); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       do
        {
         GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.w = workgroup_base;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), (_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0))))))) + 0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)))))), 0.0, _GLF_ONE(1.0, injectionSwitch.y)))) > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), true)))))))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      continue;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.w + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, max(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base)).y * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x + subgroup_local_id, min(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.w + GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x + subgroup_local_id, GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.w + GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x + subgroup_local_id)), min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.w + GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x + subgroup_local_id, min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.w, 0u + (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.w)) + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y, max(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y, max(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y, GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y))) / 1u))) * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x + subgroup_local_id, GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.w + GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x + subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.w + GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x + subgroup_local_id, min(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.w + GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x + subgroup_local_id, GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.w + GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x + subgroup_local_id)), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.w + GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x + subgroup_local_id, min(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.w + GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x + subgroup_local_id, GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.w + GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x + subgroup_local_id))) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.w + GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x + subgroup_local_id, min(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.w + GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x + subgroup_local_id, GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.w + GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x + subgroup_local_id)), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.w + GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x + subgroup_local_id, min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.w + GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x + subgroup_local_id, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.w + GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x + subgroup_local_id, min(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.w + GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x + subgroup_local_id, GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.w + GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x + subgroup_local_id))) << 0u), GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.w + GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x + subgroup_local_id))) | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.w + GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x + subgroup_local_id, min(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.w + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y, (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y) << 0u) * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x + subgroup_local_id, GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.w + GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x + subgroup_local_id))))))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)), true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)), true, true), false)), false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      continue;
     do
      {
       for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, max(1, 1))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, max(1, 1)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, max(1, 1))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, max(1, 1)))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, max(1, 1)), ! (! (_injected_loop_counter < _GLF_IDENTITY(1, max(1, 1)))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, max(1, 1)))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (0 ^ 0) | (1)), 1))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), 1))))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, clamp(1, 1, 1)) : _GLF_FUZZED(_injected_loop_counter))), max(1, 1))), (_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0) : _GLF_FUZZED(_injected_loop_counter))), max(1, 1)))) || false), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, max(1, 1)))))))); _GLF_IDENTITY(_injected_loop_counter ++, (true ? _injected_loop_counter ++ : _GLF_FUZZED((- atomicCompSwap(_injected_loop_counter, -42293, 55147))))))
        {
         return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          break;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      continue;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     continue;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_sizevirtual_gid.w = virtual_gid;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (0 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bool(! (false))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), bool(_GLF_IDENTITY(bvec2(bool(bool(! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), true), bvec2(bvec3(bvec2(bool(bool(! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), true), true))))))), true, false)))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
      {
       return;
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-24.26)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x)))))); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) | (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 return;
                }
              }
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           break;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       return;
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true)), (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true))) && true)))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.z = GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_sizevirtual_gid.w;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat3x4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), sin(0.0), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, tan(0.0), 1.0), (mat3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat3x4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), sin(0.0), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, tan(0.0), 1.0)) / mat3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), bool(bvec3(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y)), 1, 1)), (false ? _GLF_FUZZED(75241) : _GLF_IDENTITY(int(ivec3(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y)), 1, 1)), max(int(ivec3(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y)), 1, 1)), int(ivec3(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y)), 1, 1)))))), (false ? _GLF_FUZZED(-43620) : int(ivec3(int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 1))))), true, false)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y))))
          {
           return;
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))) && true))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).y))));
  }
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.w + GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x) ^ 0u)) ^ 0u)) + 0u), max(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)) + ((subgroup_local_id + _GLF_IDENTITY(1, (1) | 0)) % GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base) + (uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u))).w + GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, max(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, max(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x))) | (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, max(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)))) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | 0)) % GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, ((subgroup_local_id + _GLF_IDENTITY(1, (1) | 0)) % GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x) | (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, (_GLF_IDENTITY((1) | 0, int(ivec2((1) | 0, 1)))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, _GLF_IDENTITY(0, clamp(0, 0, 0)), 1), clamp(ivec4(1, 0, _GLF_IDENTITY(0, clamp(0, 0, 0)), 1), ivec4(1, 0, _GLF_IDENTITY(0, clamp(0, 0, 0)), 1), ivec4(1, 0, _GLF_IDENTITY(0, clamp(0, 0, 0)), 1)))))) | 0, min(_GLF_IDENTITY((1) | 0, min((1) | 0, (1) | 0)), (1) | 0)))))) % GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, ((subgroup_local_id + _GLF_IDENTITY(1, (1) | 0)) % GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x) | (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | 0)) % _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size) | (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size)).x, 0u | ((subgroup_local_id + _GLF_IDENTITY(1, (1) | 0)) % GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x))))))), clamp(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, min(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, clamp(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base)))).w + GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size) * uvec2(1u, 1u)).x, max(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)) + ((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) / 1u))) + _GLF_IDENTITY(1, (1) | 0)) % GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base) | (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base))) >> uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u) * (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base), (_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u) * (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base), (_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u) * (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base), max(_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u) * (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base), uvec4(1u, 1u, 1u, 1u) * (uvec4(1u, 1u, 1u, 1u) * (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base))), uvec4(1u, 1u, 1u, 1u) * (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base)))) | uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u))))), (true ? _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base) | (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base))) >> _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u))), _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u) * (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base), (_GLF_IDENTITY(uvec4(1u, 1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u) * (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base), (uvec4(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) - uvec2(0u, 0u)))), 1u, 1u, 1u) * (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base)) | uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u))))) : _GLF_FUZZED(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base))).w + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y, (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y) | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y, ~ (~ (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y))))) * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size) ^ uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x)), 0u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)), 0u), _GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) - uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) ^ _GLF_IDENTITY(_GLF_IDENTITY((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, 1u))).x, min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size) | (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, clamp(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size)))).x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)), 0u)), max((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, 1u))).x, min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size) | (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, clamp(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size)))).x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)), 0u)), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, 1u))).x, min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size) | (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, clamp(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size)))).x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)), 0u)))), uvec2(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, uvec2(uvec3(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size) >> uvec2(0u, 0u)), 1u))).x, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))))), max(_GLF_IDENTITY(_GLF_IDENTITY((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, 1u))).x, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, 1u))).x, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, 1u))).x, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)))), 0u)), _GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) ^ uvec2(0u, 0u)) ^ ((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, 1u))).x, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)), 0u)))), min((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) - 0u)))))).x, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)), 0u)), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, 1u)), ~ (~ (uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, 1u))))), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, 1u)), ~ (~ (uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, 1u)))))))).x, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)), 0u)))), _GLF_IDENTITY((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, 1u))).x, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)), 0u)), ~ (~ _GLF_IDENTITY(((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, 1u))).x, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)), 0u))), uvec2(0u, 0u) | (((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, 1u))).x, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)), 0u))))))))), 1u, 1u), _GLF_IDENTITY((uvec4(_GLF_IDENTITY((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, 1u))).x, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)), 0u)), max(_GLF_IDENTITY((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, 1u))).x, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)), 0u)), min((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, 1u))).x, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)), 0u)), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, 1u))).x, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)), 0u)))), _GLF_IDENTITY((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, 1u))).x, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)), 0u)), ~ (~ ((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, 1u))).x, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)), 0u))))))), 1u, 1u)) << uvec4(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)), 0u, 0u, 0u), (_GLF_IDENTITY((uvec4(_GLF_IDENTITY((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, 1u))).x, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)), 0u)), max(_GLF_IDENTITY((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, 1u))).x, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)), 0u)), min((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, 1u))).x, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)), 0u)), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, 1u))).x, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)), 0u)))), _GLF_IDENTITY((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, 1u))).x, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)), 0u)), ~ (~ ((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, 1u))).x, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)), 0u))))))), 1u, 1u)) << uvec4(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)), 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | ((uvec4(_GLF_IDENTITY((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, 1u))).x, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)), 0u)), max(_GLF_IDENTITY((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, 1u))).x, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)), 0u)), min((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, 1u))).x, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)), 0u)), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, 1u))).x, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)), 0u)))), _GLF_IDENTITY((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, 1u))).x, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)), 0u)), ~ (~ ((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, uvec2(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, 1u))).x, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)), 0u))))))), 1u, 1u)) << uvec4(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)), 0u, 0u, 0u)))) << uvec4(0u, 0u, 0u, 0u))))))) - uvec2(0u, 0u)))), max(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x) ^ 0u), GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)) + ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (1) | 0)) % GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x), GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.w + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base) / uvec4(1u, 1u, 1u, 1u))) << uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size) - uvec2(0u, 0u))) - uvec2(0u, 0u)).x, max(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | 0)), ~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, (1) | 0))))) % GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)))) | _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base) | uvec4(0u, 0u, 0u, 0u), ((GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base) | uvec4(0u, 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u)))) | uvec4(0u, 0u, 0u, 0u)).w) | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base)).w)) + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base) / uvec4(1u, 1u, 1u, 1u)))).y * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, max(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED((uvec2(190012u, 154322u) ^ num_workgroup)) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size), uvec2(0u, 0u) | (_GLF_IDENTITY((false ? _GLF_FUZZED((uvec2(190012u, 154322u) ^ num_workgroup)) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size), uvec2(uvec2(_GLF_IDENTITY((false ? _GLF_FUZZED((uvec2(190012u, 154322u) ^ num_workgroup)) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size), clamp((false ? _GLF_FUZZED((uvec2(190012u, 154322u) ^ num_workgroup)) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size), (false ? _GLF_FUZZED((uvec2(190012u, 154322u) ^ num_workgroup)) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size), (false ? _GLF_FUZZED((uvec2(190012u, 154322u) ^ num_workgroup)) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size))))))))), max(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, (false ? _GLF_FUZZED((uvec2(190012u, 154322u) ^ num_workgroup)) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size)), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, (false ? _GLF_FUZZED((uvec2(190012u, 154322u) ^ num_workgroup)) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size)))), max(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED((uvec2(190012u, 154322u) ^ num_workgroup)) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED((uvec2(190012u, 154322u) ^ num_workgroup)) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size)), (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED((uvec2(190012u, 154322u) ^ num_workgroup)) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size)), uvec2(uvec3(~ ((false ? _GLF_FUZZED((uvec2(190012u, 154322u) ^ num_workgroup)) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size)), 0u)))) + uvec2(0u, 0u))))), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, (false ? _GLF_FUZZED((uvec2(190012u, 154322u) ^ num_workgroup)) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size)))).x, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED((uvec2(190012u, 154322u) ^ num_workgroup)) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size), uvec2(0u, 0u) | (_GLF_IDENTITY((false ? _GLF_FUZZED((uvec2(190012u, 154322u) ^ num_workgroup)) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size), uvec2(uvec2(_GLF_IDENTITY((false ? _GLF_FUZZED((uvec2(190012u, 154322u) ^ num_workgroup)) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size), clamp((false ? _GLF_FUZZED((uvec2(190012u, 154322u) ^ num_workgroup)) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size), (false ? _GLF_FUZZED((uvec2(190012u, 154322u) ^ num_workgroup)) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size), (false ? _GLF_FUZZED((uvec2(190012u, 154322u) ^ num_workgroup)) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size))))))))), max(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, (false ? _GLF_FUZZED((uvec2(190012u, 154322u) ^ num_workgroup)) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size)), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, (false ? _GLF_FUZZED((uvec2(190012u, 154322u) ^ num_workgroup)) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size)))), max(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED((uvec2(190012u, 154322u) ^ num_workgroup)) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED((uvec2(190012u, 154322u) ^ num_workgroup)) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size)), (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED((uvec2(190012u, 154322u) ^ num_workgroup)) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size)), uvec2(uvec3(~ ((false ? _GLF_FUZZED((uvec2(190012u, 154322u) ^ num_workgroup)) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size)), 0u)))) + uvec2(0u, 0u))))), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, (false ? _GLF_FUZZED((uvec2(190012u, 154322u) ^ num_workgroup)) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size)))).x)))) + ((subgroup_local_id + _GLF_IDENTITY(1, (1) | 0)) % _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)))), (true ? (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.w + GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.y * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, max(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, (false ? _GLF_FUZZED((uvec2(190012u, 154322u) ^ num_workgroup)) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size)).x)) + ((subgroup_local_id + _GLF_IDENTITY(1, (1) | 0)) % GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)) : _GLF_FUZZED(subgroup_size))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-745.324)), float(injectionSwitch.x), bool(true)))) * 1.0)) + 0.0) > injectionSwitch.y))))
      continue;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false) && (false))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, (_injected_loop_counter != 1) || false)); _injected_loop_counter ++)
          {
           return;
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_DEAD(false))
      break;
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))));
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_sizevirtual_gid.x = next_virtual_gid;
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, int(ivec3(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(-48578) : _injected_loop_counter)), _injected_loop_counter, _injected_loop_counter)), 1, 0)))) * 1), max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(443.611), _GLF_FUZZED(-676.049)), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).x)), (0 >> _GLF_IDENTITY(int(2), int(2))), 1))))) > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (bool(true)))))))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        continue;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (false ? _GLF_FUZZED(23635) : _injected_loop_counter --)))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(434.252, 451.084)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)))), false)))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(624.754)), vec2(_GLF_FUZZED((- -982.711)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x < injectionSwitch.y))))
              {
               return;
              }
             else
              {
              }
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), false))) && true))) || false))
            {
             if(_GLF_DEAD(false))
              return;
             do
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       return;
                      }
                     else
                      {
                      }
                    }
                   continue;
                  }
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
                    {
                     return;
                    }
                   else
                    {
                    }
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           break;
          }
         if(_GLF_DEAD(false))
          continue;
         return;
        }
      }
     if(_GLF_DEAD(false))
      continue;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), ! (! ((! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true))))))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))) && true)))
    {
     do
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))) && true), false, true))))))
              break;
             return;
            }
           continue;
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           return;
          }
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          continue;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base, ~ (~ (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base))).z], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_sizevirtual_gid.y = read;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          break;
        }
       else
        {
         return;
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-80.71)), float(injectionSwitch.y), bool(true))), bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(false, (false) || false) || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).x > injectionSwitch.y)))))))
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        break;
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        continue;
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))) && true), bool(bvec3(false, true, false)))));
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 atomicStore(buf[GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_sizevirtual_gid.x], uint(1), _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) / 1), 4)), 64, 4);
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))))
      {
       return;
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.9), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[0])), min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED((-6.9 + -0.1))), bvec2(true, false))))), mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) / abs(_GLF_IDENTITY(vec2(1.0, 1.0), sin(sqrt(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-537.128)), bool(false)))) / 1.0), 0.0))) + _GLF_IDENTITY((vec2(1.0, 1.0)), min((vec2(1.0, 1.0)), _GLF_IDENTITY((vec2(1.0, 1.0)), vec2(mat3x2((vec2(1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), (determinant(mat3(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, round(length(normalize(cos(vec4(0.0, 0.0, 0.0, 0.0))))), 0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, sqrt(sqrt(1.0))))), 0.0, 1.0, 0.0, 0.0, 0.0))) * 1.0)) - 0.0), 1.0)))))))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) / 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            return;
          }
         return;
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(_GLF_IDENTITY(true, ! (! (true)))))))))), (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))))) && true))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
      }
    }
   else
    {
    }
   if(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))) ^ 0u) - (0u | 0u)) + 1 < GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), false), false, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) || false)) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))) && true)))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     atomicStore(checker[GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.z], _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_sizevirtual_gid, uvec4(0u, 0u, 0u, 0u) + (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_sizevirtual_gid)).y, (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) : GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_sizevirtual_gid.y)), _GLF_IDENTITY(4, min(4, 4)), 64, _GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), 1 * (_GLF_IDENTITY(4, (4) | (4)))));
     subgroupAll(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))));
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
        {
        }
       else
        {
         do
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.z, (0u & 119476u) | (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_base.z))], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_sizevirtual_gid, clamp(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_sizevirtual_gid, GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_sizevirtual_gid, GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_11next_virtual_gidreadsubgroup_sizevirtual_gid)).y, 4, 64, _GLF_IDENTITY(4, int(ivec3(4, _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) / 1))), (0 << _GLF_IDENTITY(int(5), int(5))) + 0)), ~ (~ ((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) / 1))), (0 << _GLF_IDENTITY(int(5), int(5))) + 0))))), 0))));
     subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, 1.0, 1.0, abs(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), 0.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), (true ? float(mat4(injectionSwitch.x, 0.0, 1.0, 1.0, abs(determinant(mat3(1.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), abs(log(1.0))))), 0.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0, 1.0, 1.0, 1.0))), 0.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)) : _GLF_FUZZED(6325.1514)))) < injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec3((true), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true) && true, bool(bvec4((true) && true, false, false, true))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true) && true, bool(bvec4(_GLF_IDENTITY((true), ((true)) && true) && true, false, false, true))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((true) && true, bool(bvec4((true) && true, false, false, true))), false), false))), false)))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))) || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true) && true, bool(bvec4((true) && true, false, false, true))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true) && true, bool(bvec4(_GLF_IDENTITY((true) && true, _GLF_IDENTITY(bool(bvec2((true) && true, true)), true && (_GLF_IDENTITY(bool(bvec2((true) && true, true)), bool(bvec2(bool(bvec2((true) && true, true)), false)))))), false, false, true))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((true) && true, bool(bvec4((true) && true, false, false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, true)), false || (bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, true))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (true) && true), true, false)))))), false, true, false)))))), false), false))), false)))))))), (injectionSwitch.x < injectionSwitch.y)), true))) || false)), _GLF_IDENTITY((bool(_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec3((true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false))) || _GLF_IDENTITY(false, true && (false)), ! (! ((bool(_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec3((true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false))) || _GLF_IDENTITY(false, true && (false)))))))));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false))), true)))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false)), bool(bvec3(bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false)), false, false)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))), ((! (false))) || false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          break;
         do
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(cosh(-7810.6831)) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(346.146) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[1]), vec2(_GLF_FUZZED(-6.0), _GLF_FUZZED(9.7)), bvec2(false, false))), vec2(1.0, 0.0))) + (injectionSwitch.y)), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3))))))))), ((false ? _GLF_FUZZED(cosh(-7810.6831)) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(346.146) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[1]), vec2(_GLF_FUZZED(-6.0), _GLF_FUZZED(9.7)), bvec2(false, false))), vec2(1.0, 0.0))) + (injectionSwitch.y)), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3)))))))))) - 0.0))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(cosh(-7810.6831)) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(346.146) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.9), _GLF_FUZZED(28.69)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) : _GLF_FUZZED((978.353 / (vec4(-23.04, -5597.8429, -4.6, -361.527) * mat2x4(773.653, 9.2, 14.16, 5.6, -9.9, -8910.4444, 1.8, -977.202)))))).y)) : _GLF_FUZZED(trunc(-5.3))))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(cosh(-7810.6831)) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(346.146) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (true))))) ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3))))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-4.4)), float(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3)))))), bool(true)), clamp(mix(float(_GLF_FUZZED(-4.4)), float(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3)))))), bool(true)), mix(float(_GLF_FUZZED(-4.4)), float(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3)))))), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-4.4)), float(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3)))))), bool(true)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(mix(float(_GLF_FUZZED(-4.4)), float(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3)))))), bool(true))), (float(mix(float(_GLF_FUZZED(-4.4)), float(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3)))))), bool(true)))) - 0.0)), 1.0 * (float(_GLF_IDENTITY(float(mix(float(_GLF_FUZZED(-4.4)), float(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3)))))), bool(true))), (float(mix(float(_GLF_FUZZED(-4.4)), float(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3)))))), bool(true)))) - 0.0)))))))))))))), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(cosh(-7810.6831)) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(346.146) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - sin(0.0)) : _GLF_FUZZED(trunc(-5.3))))), mix(float(_GLF_FUZZED(-4.4)), float(max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3)))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(28.19)), bool(false)))) + 0.0), (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3)))))))), bool(true))))))))), true, true, false)))), ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(cosh(-7810.6831)) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(346.146) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3))))), mix(float(_GLF_FUZZED(-4.4)), float(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3)))))), bool(true)))))))), (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(cosh(_GLF_IDENTITY(-7810.6831, max(-7810.6831, -7810.6831)))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(346.146) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3))))), mix(float(_GLF_FUZZED(-4.4)), float(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3)))))), bool(true)))))), clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(346.146) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3))))), mix(float(_GLF_FUZZED(-4.4)), float(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3)))))), bool(true)))))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(346.146) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3))))), mix(float(_GLF_FUZZED(-4.4)), float(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3)))))), bool(true)))))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(346.146) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3))))), mix(float(_GLF_FUZZED(-4.4)), float(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3)))))), bool(true))))))))))) - 0.0)), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(cosh(-7810.6831)) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(346.146) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3))))), mix(float(_GLF_FUZZED(-4.4)), float(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3)))))), bool(true))))))))), true, true, false))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))), true, true, true)))))))))) || false))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(cosh(-7810.6831)) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(346.146) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[1]), vec2(_GLF_FUZZED(-6.0), _GLF_FUZZED(9.7)), bvec2(false, false))), vec2(1.0, 0.0))) + (injectionSwitch.y)), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3))))))))), ((false ? _GLF_FUZZED(cosh(-7810.6831)) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(346.146) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[1]), vec2(_GLF_FUZZED(-6.0), _GLF_FUZZED(9.7)), bvec2(false, false))), vec2(1.0, 0.0))) + (injectionSwitch.y)), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3)))))))))) - 0.0))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(cosh(-7810.6831)) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(346.146) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.9), _GLF_FUZZED(28.69)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) : _GLF_FUZZED((978.353 / (vec4(-23.04, -5597.8429, -4.6, -361.527) * mat2x4(773.653, 9.2, 14.16, 5.6, -9.9, -8910.4444, 1.8, -977.202)))))).y)) : _GLF_FUZZED(trunc(-5.3))))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(cosh(-7810.6831)) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(346.146) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (true))))) ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3))))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-4.4)), float(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3)))))), bool(true)), clamp(mix(float(_GLF_FUZZED(-4.4)), float(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3)))))), bool(true)), mix(float(_GLF_FUZZED(-4.4)), float(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3)))))), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-4.4)), float(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3)))))), bool(true)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(mix(float(_GLF_FUZZED(-4.4)), float(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3)))))), bool(true))), (float(mix(float(_GLF_FUZZED(-4.4)), float(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3)))))), bool(true)))) - 0.0)), 1.0 * (float(_GLF_IDENTITY(float(mix(float(_GLF_FUZZED(-4.4)), float(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3)))))), bool(true))), (float(mix(float(_GLF_FUZZED(-4.4)), float(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3)))))), bool(true)))) - 0.0)))))))))))))), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(cosh(-7810.6831)) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(346.146) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - sin(0.0)) : _GLF_FUZZED(trunc(-5.3))))), mix(float(_GLF_FUZZED(-4.4)), float(max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3)))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(28.19)), bool(false)))) + 0.0), (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3)))))))), bool(true))))))))), true, true, false)))), ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(cosh(-7810.6831)) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(346.146) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3))))), mix(float(_GLF_FUZZED(-4.4)), float(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3)))))), bool(true)))))))), (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(cosh(_GLF_IDENTITY(-7810.6831, max(-7810.6831, -7810.6831)))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(346.146) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3))))), mix(float(_GLF_FUZZED(-4.4)), float(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3)))))), bool(true)))))), clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(346.146) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3))))), mix(float(_GLF_FUZZED(-4.4)), float(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3)))))), bool(true)))))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(346.146) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3))))), mix(float(_GLF_FUZZED(-4.4)), float(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3)))))), bool(true)))))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(346.146) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3))))), mix(float(_GLF_FUZZED(-4.4)), float(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3)))))), bool(true))))))))))) - 0.0)), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(cosh(-7810.6831)) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(346.146) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3))))), mix(float(_GLF_FUZZED(-4.4)), float(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(trunc(-5.3)))))), bool(true))))))))), true, true, false))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))), true, true, true)))))))))) || false))), false, true, true))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))) && true)))
              {
               if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
                continue;
               break;
              }
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(cos(-53.58)) : injectionSwitch.y))))))
              {
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), bool(bvec3(! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), true, true))))); _injected_loop_counter ++)
                {
                 return;
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            break;
          }
         else
          {
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            continue;
           continue;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          continue;
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), _GLF_IDENTITY(true, (true) && true))), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true)), true))))))
          {
           return;
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && _GLF_IDENTITY((false), bool(bvec4((false), false, false, true))))))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (true) && true))), false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          break;
        }
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec3(false, false, false))))))
      break;
    }
  }
}
