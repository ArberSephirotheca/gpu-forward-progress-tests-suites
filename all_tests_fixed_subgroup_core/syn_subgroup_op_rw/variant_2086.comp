#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
      }
     else
      {
      }
    }
   return;
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 >> _GLF_IDENTITY(int(5), int(5))) | 0)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        break;
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (true && (false)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
            {
             for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 >> _GLF_IDENTITY(int(7), int(7))) | 0)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) | (_GLF_IDENTITY(int(7), int(7))))))) | 0)))); _injected_loop_counter --)
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((false ? 62.26 : -64.67))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, true)))))))) && true))
                return;
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   return;
                  }
                 else
                  {
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               if(_GLF_DEAD(false))
                break;
              }
            }
           else
            {
            }
          }
         else
          {
          }
        }
      }
    }
   while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(bool(bvec2(! (! (_GLF_IDENTITY(false, true && (false)))), true)), bool(bvec4(bool(bvec2(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))), ((_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false, true)))))), true && (_GLF_WRAPPED_LOOP(false))), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(bool(bvec2(! (! (_GLF_IDENTITY(false, true && (false)))), true)), bool(bvec4(bool(bvec2(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))), ((_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false, true)))))), true && (_GLF_WRAPPED_LOOP(false))), false, true))));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-97.60)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, true && (true))) || false)) || false))))))))) > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), _GLF_IDENTITY(float(mat4(float(injectionSwitch.y), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 0.0)), (float(mat4(float(injectionSwitch.y), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 0.0))) * 1.0)), float(_GLF_FUZZED(-523.472)), _GLF_IDENTITY(bool(false), (bool(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))))), (workgroup_size) / 1u), workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    continue;
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
         return;
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), _GLF_IDENTITY(uvec2(0u, 0u) | (uvec2(workgroup_base, _GLF_IDENTITY(0u, 0u ^ (0u)))), (uvec2(0u, _GLF_IDENTITY(0u, (0u) / 1u)) | (uvec2(workgroup_base, _GLF_IDENTITY(0u, 0u ^ (0u))))) ^ uvec2(0u, 0u))))), _GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)), uint(_GLF_IDENTITY(uvec4(uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))), clamp(uvec4(uint(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y), (true ? _GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), _GLF_IDENTITY(float(float(min(1.0, 1.0))), (false ? _GLF_FUZZED(3.8) : float(float(min(1.0, 1.0))))))), injectionSwitch.y) : _GLF_FUZZED(atan(145.033, -4.1))))), 0u, 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), uint(uvec2(_GLF_IDENTITY(uint(7u), uint(7u)), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), clamp(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(7u), uint(7u)))))))), uvec4(uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))), uvec4(uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))))), 0u)), _GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY(clamp(clamp(workgroup_base, workgroup_base, workgroup_base), clamp(workgroup_base, workgroup_base, workgroup_base), clamp(workgroup_base, workgroup_base, workgroup_base)), (false ? _GLF_FUZZED(workgroup_size) : clamp(clamp(workgroup_base, workgroup_base, workgroup_base), clamp(workgroup_base, workgroup_base, workgroup_base), clamp(workgroup_base, workgroup_base, workgroup_base)))), (false ? _GLF_FUZZED(floatBitsToUint(-999.838)) : _GLF_IDENTITY(clamp(clamp(workgroup_base, workgroup_base, workgroup_base), clamp(workgroup_base, workgroup_base, workgroup_base), clamp(workgroup_base, workgroup_base, workgroup_base)), (false ? _GLF_FUZZED(workgroup_size) : clamp(clamp(workgroup_base, workgroup_base, workgroup_base), clamp(workgroup_base, workgroup_base, workgroup_base), clamp(workgroup_base, workgroup_base, workgroup_base)))))))), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), 0u))), 0u + ((uint(uvec3(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), clamp(clamp(workgroup_base, workgroup_base, workgroup_base), clamp(workgroup_base, workgroup_base, workgroup_base), clamp(workgroup_base, workgroup_base, workgroup_base)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, (0u) | 0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), min(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, (0u) << 0u))), _GLF_IDENTITY(0u, (0u) << 0u))) : _GLF_FUZZED(num_workgroup))), 0u | _GLF_IDENTITY((0u), ((0u)) | ((0u)))))) + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 0u, (_GLF_IDENTITY(0u ^ 0u, ~ (~ (0u ^ 0u)))), 0u)), _GLF_IDENTITY((true ? uint(uvec4(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_id, 1u, _GLF_IDENTITY((0u ^ 1u), max((0u ^ 1u), _GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) | 0u)))), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_id, 1u, _GLF_IDENTITY((0u ^ 1u), max((0u ^ 1u), _GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) | 0u)))), max(uvec3(subgroup_id, 1u, _GLF_IDENTITY(_GLF_IDENTITY((0u ^ 1u), clamp((0u ^ 1u), _GLF_IDENTITY((0u ^ 1u), 0u + ((0u ^ 1u))), _GLF_IDENTITY((0u ^ 1u), 0u + ((0u ^ 1u))))), max((0u ^ 1u), _GLF_IDENTITY((0u ^ 1u), ((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(atomicXor(subgroup_local_id, workgroup_size)) : 0u)))) ^ 1u)) | 0u)))), _GLF_IDENTITY(uvec3(subgroup_id, 1u, _GLF_IDENTITY((0u ^ 1u), max((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(uvec2(71060u, 163749u).x) : _GLF_IDENTITY(0u, 0u | (0u)))) ^ 1u), _GLF_IDENTITY((0u ^ _GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u)))), ((0u ^ 1u)) | 0u)))), (uvec3(subgroup_id, 1u, _GLF_IDENTITY((0u ^ _GLF_IDENTITY(1u, (1u) - 0u)), max((0u ^ 1u), _GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) | 0u))))) << uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(subgroup_id, 1u, _GLF_IDENTITY((0u ^ 1u), max((0u ^ 1u), (0u ^ 1u))))), (true ? (uvec3(subgroup_id, 1u, _GLF_IDENTITY((0u ^ 1u), max((0u ^ 1u), (0u ^ 1u))))) : _GLF_FUZZED(uvec3(158076u, 59510u, 129433u)))) * uvec3(1u, 1u, 1u), (_GLF_IDENTITY((uvec3(subgroup_id, 1u, _GLF_IDENTITY((0u ^ 1u), max((0u ^ 1u), (0u ^ 1u))))), (true ? (uvec3(subgroup_id, 1u, _GLF_IDENTITY((0u ^ 1u), max((0u ^ 1u), (0u ^ 1u))))) : _GLF_FUZZED(uvec3(158076u, 59510u, 129433u)))) * uvec3(1u, 1u, 1u)) >> uvec3(0u, 0u, 0u))))) * subgroup_size, 0u, (_GLF_IDENTITY(0u, ~ (~ (0u))) ^ 0u), 0u)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))) + 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((true ? uint(uvec4(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_id, 1u, _GLF_IDENTITY((0u ^ 1u), max((0u ^ 1u), _GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) | 0u)))), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_id, 1u, _GLF_IDENTITY((0u ^ 1u), max((0u ^ 1u), _GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) | 0u)))), max(uvec3(subgroup_id, 1u, _GLF_IDENTITY(_GLF_IDENTITY((0u ^ 1u), clamp((0u ^ 1u), _GLF_IDENTITY((0u ^ 1u), 0u + ((0u ^ 1u))), _GLF_IDENTITY((0u ^ 1u), 0u + ((0u ^ 1u))))), max((0u ^ 1u), _GLF_IDENTITY((0u ^ 1u), ((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(atomicXor(subgroup_local_id, workgroup_size)) : 0u)))) ^ 1u)) | 0u)))), _GLF_IDENTITY(uvec3(subgroup_id, 1u, _GLF_IDENTITY((0u ^ 1u), max((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(uvec2(71060u, 163749u).x) : _GLF_IDENTITY(0u, 0u | (0u)))) ^ 1u), _GLF_IDENTITY((0u ^ _GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u)))), ((0u ^ 1u)) | 0u)))), (uvec3(subgroup_id, 1u, _GLF_IDENTITY((0u ^ _GLF_IDENTITY(1u, (1u) - 0u)), max((0u ^ 1u), _GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) | 0u))))) << uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(subgroup_id, 1u, _GLF_IDENTITY((0u ^ 1u), max((0u ^ 1u), (0u ^ 1u))))), (true ? (uvec3(subgroup_id, 1u, _GLF_IDENTITY((0u ^ 1u), max((0u ^ 1u), (0u ^ 1u))))) : _GLF_FUZZED(uvec3(158076u, 59510u, 129433u)))) * uvec3(1u, 1u, 1u), (_GLF_IDENTITY((uvec3(subgroup_id, 1u, _GLF_IDENTITY((0u ^ 1u), max((0u ^ 1u), (0u ^ 1u))))), (true ? (uvec3(subgroup_id, 1u, _GLF_IDENTITY((0u ^ 1u), max((0u ^ 1u), (0u ^ 1u))))) : _GLF_FUZZED(uvec3(158076u, 59510u, 129433u)))) * uvec3(1u, 1u, 1u)) >> uvec3(0u, 0u, 0u))))) * subgroup_size, 0u, (_GLF_IDENTITY(0u, ~ (~ (0u))) ^ 0u), 0u)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))) + 0u))), ~ (~ ((true ? uint(uvec4(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_id, 1u, _GLF_IDENTITY((0u ^ 1u), max((0u ^ 1u), _GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) | 0u)))), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_id, 1u, _GLF_IDENTITY((0u ^ 1u), max((0u ^ 1u), _GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) | 0u)))), max(uvec3(subgroup_id, 1u, _GLF_IDENTITY(_GLF_IDENTITY((0u ^ 1u), clamp((0u ^ 1u), _GLF_IDENTITY((0u ^ 1u), 0u + ((0u ^ 1u))), _GLF_IDENTITY((0u ^ 1u), 0u + ((0u ^ 1u))))), max((0u ^ 1u), _GLF_IDENTITY((0u ^ 1u), ((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(atomicXor(subgroup_local_id, workgroup_size)) : 0u)))) ^ 1u)) | 0u)))), _GLF_IDENTITY(uvec3(subgroup_id, 1u, _GLF_IDENTITY((0u ^ 1u), max((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(uvec2(71060u, 163749u).x) : _GLF_IDENTITY(0u, 0u | (0u)))) ^ 1u), _GLF_IDENTITY((0u ^ _GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u)))), ((0u ^ 1u)) | 0u)))), (uvec3(subgroup_id, 1u, _GLF_IDENTITY((0u ^ _GLF_IDENTITY(1u, (1u) - 0u)), max((0u ^ 1u), _GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) | 0u))))) << uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(subgroup_id, 1u, _GLF_IDENTITY((0u ^ 1u), max((0u ^ 1u), (0u ^ 1u))))), (true ? (uvec3(subgroup_id, 1u, _GLF_IDENTITY((0u ^ 1u), max((0u ^ 1u), (0u ^ 1u))))) : _GLF_FUZZED(uvec3(158076u, 59510u, 129433u)))) * uvec3(1u, 1u, 1u), (_GLF_IDENTITY((uvec3(subgroup_id, 1u, _GLF_IDENTITY((0u ^ 1u), max((0u ^ 1u), (0u ^ 1u))))), (true ? (uvec3(subgroup_id, 1u, _GLF_IDENTITY((0u ^ 1u), max((0u ^ 1u), (0u ^ 1u))))) : _GLF_FUZZED(uvec3(158076u, 59510u, 129433u)))) * uvec3(1u, 1u, 1u)) >> uvec3(0u, 0u, 0u))))) * subgroup_size, 0u, (_GLF_IDENTITY(0u, ~ (~ (0u))) ^ 0u), 0u)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))) + 0u))))))), ~ (~ (~ (_GLF_IDENTITY((true ? uint(uvec4(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_id, 1u, _GLF_IDENTITY((0u ^ 1u), max((0u ^ 1u), _GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) | 0u)))), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_id, 1u, _GLF_IDENTITY((0u ^ 1u), max((0u ^ 1u), _GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) | 0u)))), max(uvec3(subgroup_id, 1u, _GLF_IDENTITY(_GLF_IDENTITY((0u ^ 1u), clamp((0u ^ 1u), _GLF_IDENTITY((0u ^ 1u), 0u + ((0u ^ 1u))), _GLF_IDENTITY((0u ^ 1u), 0u + ((0u ^ 1u))))), max((0u ^ 1u), _GLF_IDENTITY((0u ^ 1u), ((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(atomicXor(subgroup_local_id, workgroup_size)) : 0u)))) ^ 1u)) | 0u)))), _GLF_IDENTITY(uvec3(subgroup_id, 1u, _GLF_IDENTITY((0u ^ 1u), max((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(uvec2(71060u, 163749u).x) : _GLF_IDENTITY(0u, 0u | (0u)))) ^ 1u), _GLF_IDENTITY((0u ^ _GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u)))), ((0u ^ 1u)) | 0u)))), (uvec3(subgroup_id, 1u, _GLF_IDENTITY((0u ^ _GLF_IDENTITY(1u, (1u) - 0u)), max((0u ^ 1u), _GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) | 0u))))) << uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(subgroup_id, 1u, _GLF_IDENTITY((0u ^ 1u), max((0u ^ 1u), (0u ^ 1u))))), (true ? (uvec3(subgroup_id, 1u, _GLF_IDENTITY((0u ^ 1u), max((0u ^ 1u), (0u ^ 1u))))) : _GLF_FUZZED(uvec3(158076u, 59510u, 129433u)))) * uvec3(1u, 1u, 1u), (_GLF_IDENTITY((uvec3(subgroup_id, 1u, _GLF_IDENTITY((0u ^ 1u), max((0u ^ 1u), (0u ^ 1u))))), (true ? (uvec3(subgroup_id, 1u, _GLF_IDENTITY((0u ^ 1u), max((0u ^ 1u), (0u ^ 1u))))) : _GLF_FUZZED(uvec3(158076u, 59510u, 129433u)))) * uvec3(1u, 1u, 1u)) >> uvec3(0u, 0u, 0u))))) * subgroup_size, 0u, (_GLF_IDENTITY(0u, ~ (~ (0u))) ^ 0u), 0u)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))) + 0u))), ~ (~ ((true ? uint(uvec4(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_id, 1u, _GLF_IDENTITY((0u ^ 1u), max((0u ^ 1u), _GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) | 0u)))), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_id, 1u, _GLF_IDENTITY((0u ^ 1u), max((0u ^ 1u), _GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) | 0u)))), max(uvec3(subgroup_id, 1u, _GLF_IDENTITY(_GLF_IDENTITY((0u ^ 1u), clamp((0u ^ 1u), _GLF_IDENTITY((0u ^ 1u), 0u + ((0u ^ 1u))), _GLF_IDENTITY((0u ^ 1u), 0u + ((0u ^ 1u))))), max((0u ^ 1u), _GLF_IDENTITY((0u ^ 1u), ((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(atomicXor(subgroup_local_id, workgroup_size)) : 0u)))) ^ 1u)) | 0u)))), _GLF_IDENTITY(uvec3(subgroup_id, 1u, _GLF_IDENTITY((0u ^ 1u), max((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(uvec2(71060u, 163749u).x) : _GLF_IDENTITY(0u, 0u | (0u)))) ^ 1u), _GLF_IDENTITY((0u ^ _GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u)))), ((0u ^ 1u)) | 0u)))), (uvec3(subgroup_id, 1u, _GLF_IDENTITY((0u ^ _GLF_IDENTITY(1u, (1u) - 0u)), max((0u ^ 1u), _GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) | 0u))))) << uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(subgroup_id, 1u, _GLF_IDENTITY((0u ^ 1u), max((0u ^ 1u), (0u ^ 1u))))), (true ? (uvec3(subgroup_id, 1u, _GLF_IDENTITY((0u ^ 1u), max((0u ^ 1u), (0u ^ 1u))))) : _GLF_FUZZED(uvec3(158076u, 59510u, 129433u)))) * uvec3(1u, 1u, 1u), (_GLF_IDENTITY((uvec3(subgroup_id, 1u, _GLF_IDENTITY((0u ^ 1u), max((0u ^ 1u), (0u ^ 1u))))), (true ? (uvec3(subgroup_id, 1u, _GLF_IDENTITY((0u ^ 1u), max((0u ^ 1u), (0u ^ 1u))))) : _GLF_FUZZED(uvec3(158076u, 59510u, 129433u)))) * uvec3(1u, 1u, 1u)) >> uvec3(0u, 0u, 0u))))) * subgroup_size, 0u, (_GLF_IDENTITY(0u, ~ (~ (0u))) ^ 0u), 0u)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))) + 0u)))))))))))))) + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u)) | _GLF_IDENTITY((workgroup_base), uint(_GLF_IDENTITY(uint((workgroup_base)), _GLF_IDENTITY(uint(uvec2(uint((workgroup_base)), 1u)), (true ? uint(uvec2(uint((workgroup_base)), 1u)) : _GLF_FUZZED(uvec2(93357u, 149740u)[0]))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(workgroup_base, _GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, (0u) - 0u), 1u, 0u, 1u)))), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))), uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))), (uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u))))) ^ 0u)), (clamp(uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), _GLF_IDENTITY(uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)), max(uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))))), uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))), (uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u))))) ^ 0u))) + 0u), (_GLF_IDENTITY(clamp(uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))), uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))), (uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u))))) ^ 0u)), (clamp(uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), _GLF_IDENTITY(uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)), max(uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))))), uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))), (uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u))))) ^ 0u))) + 0u)) | (_GLF_IDENTITY(clamp(uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))), uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))), (uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u))))) ^ 0u)), (clamp(uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), _GLF_IDENTITY(uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)), max(uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))))), uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))), (uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u))))) ^ 0u))) + 0u)))))))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(98.85), _GLF_FUZZED(-820.335)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).y)), 0u)), (uint(uvec3(workgroup_base, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.9), _GLF_FUZZED(38.67)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) * vec2(1.0, 1.0)).y)), 0u))) >> _GLF_IDENTITY(0u, 0u | (0u))), uint(uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) | ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) | _GLF_IDENTITY((0u | 0u), ((0u | 0u)) | ((0u | 0u))))), 0u))))), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), clamp(uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u), uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) << 0u) : _GLF_FUZZED(num_workgroup))), 0u) ^ (uvec3(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u))))) >> 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))), (uint(uvec3(workgroup_base, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), 0u))) >> _GLF_IDENTITY(0u, 0u | (0u))), (0u ^ 0u), 0u)))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u)) | _GLF_IDENTITY((workgroup_base), uint(_GLF_IDENTITY(uint((workgroup_base)), _GLF_IDENTITY(uint(uvec2(uint((workgroup_base)), 1u)), (true ? uint(uvec2(uint((workgroup_base)), 1u)) : _GLF_FUZZED(uvec2(93357u, 149740u)[0]))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(workgroup_base, _GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, (0u) - 0u), 1u, 0u, 1u)))), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))), uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))), (uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u))))) ^ 0u)), (clamp(uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), _GLF_IDENTITY(uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)), max(uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))))), uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))), (uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u))))) ^ 0u))) + 0u), (_GLF_IDENTITY(clamp(uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))), uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))), (uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u))))) ^ 0u)), (clamp(uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), _GLF_IDENTITY(uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)), max(uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))))), uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))), (uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u))))) ^ 0u))) + 0u)) | (_GLF_IDENTITY(clamp(uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))), uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))), (uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u))))) ^ 0u)), (clamp(uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), _GLF_IDENTITY(uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)), max(uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))))), uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))), (uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u))))) ^ 0u))) + 0u)))))))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(98.85), _GLF_FUZZED(-820.335)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).y)), 0u)), (uint(uvec3(workgroup_base, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.9), _GLF_FUZZED(38.67)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) * vec2(1.0, 1.0)).y)), 0u))) >> _GLF_IDENTITY(0u, 0u | (0u))), uint(uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) | ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) | _GLF_IDENTITY((0u | 0u), ((0u | 0u)) | ((0u | 0u))))), 0u))))), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), clamp(uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u), uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) << 0u) : _GLF_FUZZED(num_workgroup))), 0u) ^ (uvec3(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u))))) >> 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))), (uint(uvec3(workgroup_base, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), 0u))) >> _GLF_IDENTITY(0u, 0u | (0u))), (0u ^ 0u), 0u))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 0u, (0u ^ 0u), 0u)), (true ? uint(uvec4(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), (max(subgroup_size, subgroup_size)) | (_GLF_IDENTITY(max(subgroup_size, subgroup_size), (max(subgroup_size, subgroup_size)) / 1u)))), subgroup_size, subgroup_size)), _GLF_IDENTITY(0u, ~ (~ (0u))), (0u ^ 0u), _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * 1u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) * 1u)) >> 0u))))) : _GLF_FUZZED(subgroup_id)))) + _GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) : _GLF_FUZZED((subgroup_size --))))) - 0u);
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(172618u) : workgroup_base))) ^ 0u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(172618u) : workgroup_base))) ^ 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))) ? _GLF_FUZZED(172618u) : workgroup_base))) ^ 0u)), 0u + (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((false ? _GLF_FUZZED(172618u) : workgroup_base), ((false ? _GLF_FUZZED(172618u) : workgroup_base)) - 0u)), max(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(172618u) : workgroup_base)), _GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(172618u) : workgroup_base))))) ^ 0u)), clamp(~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((false ? _GLF_FUZZED(172618u) : workgroup_base), ((false ? _GLF_FUZZED(172618u) : workgroup_base)) - 0u)), max(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(172618u) : workgroup_base)), _GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(172618u) : workgroup_base))))) ^ 0u)), ~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((false ? _GLF_FUZZED(172618u) : workgroup_base), ((false ? _GLF_FUZZED(172618u) : workgroup_base)) - 0u)), max(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(172618u) : workgroup_base)), _GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(172618u) : workgroup_base))))) ^ 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((false ? _GLF_FUZZED(172618u) : workgroup_base), ((false ? _GLF_FUZZED(172618u) : workgroup_base)) - 0u)), max(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(172618u) : workgroup_base)), _GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(172618u) : workgroup_base))))) ^ 0u)), (true ? ~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((false ? _GLF_FUZZED(172618u) : workgroup_base), ((false ? _GLF_FUZZED(172618u) : workgroup_base)) - 0u)), max(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(172618u) : workgroup_base)), _GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(172618u) : workgroup_base))))) ^ 0u)) : _GLF_FUZZED(workgroup_base))))))))), workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, 0u))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), max((~ (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), ((~ (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))) >> 0u)))))))) + 0u), clamp(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, 0u))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), max((~ (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), ((~ (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))) >> 0u)))))))) + 0u), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, 0u))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), max((~ (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), ((~ (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))) >> 0u)))))))) + 0u), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, 0u))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), max((~ (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), ((~ (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))) >> 0u)))))))) + 0u))) + ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(1 * (1), min(1 * (1), 1 * (1)))), _GLF_IDENTITY(0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), clamp((_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)))), _GLF_IDENTITY(0 ^ (~ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0))), clamp(0 ^ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), ((1)) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0)), _GLF_IDENTITY((~ (_GLF_IDENTITY(1, 0 ^ (1)))), 0 ^ ((~ (_GLF_IDENTITY(1, 0 ^ (1)))))) ^ _GLF_IDENTITY(0, (0) | 0)))), _GLF_IDENTITY(0, (0) >> 0) ^ (~ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0))), 0 ^ (~ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), clamp((_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)))), _GLF_IDENTITY(0 ^ (~ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0))), clamp(0 ^ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), ((1)) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0)), _GLF_IDENTITY((~ (_GLF_IDENTITY(1, 0 ^ (1)))), 0 ^ ((~ (_GLF_IDENTITY(1, 0 ^ (1)))))) ^ _GLF_IDENTITY(0, (0) | 0)))), _GLF_IDENTITY(0, (0) >> 0) ^ (~ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0))), 0 ^ (~ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 0))), _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), clamp((_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)))), max(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), clamp((_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)))), _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), clamp((_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)))), (true ? ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), clamp((_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)))) : _GLF_FUZZED(bitfieldInsert(58565, -50641, -86298, -68694)))))), _GLF_IDENTITY(0 ^ (~ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0))), _GLF_IDENTITY(clamp(0 ^ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), ((1)) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0)), _GLF_IDENTITY((~ (_GLF_IDENTITY(1, 0 ^ (1)))), 0 ^ ((~ (_GLF_IDENTITY(1, 0 ^ (1)))))) ^ _GLF_IDENTITY(0, (0) | 0)))), _GLF_IDENTITY(0, (0) >> 0) ^ (~ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0))), 0 ^ (~ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)))), (clamp(0 ^ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), ((1)) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0)), _GLF_IDENTITY((~ (_GLF_IDENTITY(1, 0 ^ (1)))), 0 ^ ((~ (_GLF_IDENTITY(1, 0 ^ (1)))))) ^ _GLF_IDENTITY(0, (0) | 0)))), _GLF_IDENTITY(0, (0) >> 0) ^ (~ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0))), 0 ^ (~ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0))))) >> 0)))))))) / (1 ^ 0))), min(_GLF_IDENTITY(0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), clamp((_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)))), _GLF_IDENTITY(0 ^ (~ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0))), clamp(0 ^ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), ((1)) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0)), _GLF_IDENTITY((~ (_GLF_IDENTITY(1, 0 ^ (1)))), 0 ^ ((~ (_GLF_IDENTITY(1, 0 ^ (1)))))) ^ _GLF_IDENTITY(0, (0) | 0)))), _GLF_IDENTITY(0, (0) >> 0) ^ (~ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0))), 0 ^ (~ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)))))), (false ? _GLF_FUZZED(8648) : _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), clamp((_GLF_IDENTITY(~ (1), _GLF_IDENTITY((~ (1)) ^ 0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(94937) : _GLF_IDENTITY((~ (1)) ^ 0, (true ? _GLF_IDENTITY((~ (1)) ^ 0, ((~ (1)) ^ 0) | ((~ (1)) ^ 0)) : _GLF_FUZZED(-71591))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), (~ (1)) ^ 0), 1 * (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)))), (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)))), _GLF_IDENTITY(0 ^ (~ (_GLF_IDENTITY(~ (1), (~ (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, ~ (~ (1))))))) ^ _GLF_IDENTITY(0, (0) | 0)))), clamp(0 ^ _GLF_IDENTITY((~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), ((1)) - _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0), ((int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0)) | ((int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0)))), _GLF_IDENTITY((~ (_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((1), ((1)) / 1)))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * 1)) * 1) ^ ((~ (_GLF_IDENTITY(1, 0 ^ (1)))))) ^ _GLF_IDENTITY(0, (0) | 0)))), min((~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), ((1)) - _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0), ((int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0)) | ((int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0)))), _GLF_IDENTITY((~ (_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((1), ((1)) / 1)))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * 1)) * 1) ^ ((~ (_GLF_IDENTITY(1, 0 ^ (1)))))) ^ _GLF_IDENTITY(0, (0) | 0)))), (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), ((1)) - _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0), ((int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0)) | ((int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0)))), _GLF_IDENTITY((~ (_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((1), ((1)) / 1)))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * 1)) * 1) ^ ((~ (_GLF_IDENTITY(1, 0 ^ (1)))))) ^ _GLF_IDENTITY(0, (0) | 0)))))), _GLF_IDENTITY(0, (0) >> 0) ^ (~ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0))), 0 ^ (~ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)))))))))), max(_GLF_IDENTITY(0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), clamp((_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)))), clamp(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), clamp((_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), clamp((_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), clamp((_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)))))), _GLF_IDENTITY(0 ^ (~ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0))), clamp(0 ^ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), ((1)) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0)), _GLF_IDENTITY((~ (_GLF_IDENTITY(1, 0 ^ (1)))), 0 ^ ((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), min(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(1, 0 ^ (1)))))))) ^ _GLF_IDENTITY(0, (0) | 0)))), _GLF_IDENTITY(0, (0) >> 0) ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), (~ (1)) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), (~ (1)) ^ 0), (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)) | 0)) / 1))), 0 ^ (~ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)))))))), (true ? 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), _GLF_IDENTITY(clamp((_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0))), ~ (_GLF_IDENTITY(~ (clamp((_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)))), min(~ (clamp((_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)))), ~ (clamp((_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-67697))) ^ (~ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0))), clamp(0 ^ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((1), ((1)) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0)), _GLF_IDENTITY((~ (_GLF_IDENTITY(1, 0 ^ (1)))), 0 ^ ((~ (_GLF_IDENTITY(1, 0 ^ (1)))))) ^ _GLF_IDENTITY(0, (0) | 0))), ((_GLF_IDENTITY(~ _GLF_IDENTITY((1), ((1)) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0)), _GLF_IDENTITY((~ (_GLF_IDENTITY(1, 0 ^ (1)))), 0 ^ ((~ (_GLF_IDENTITY(1, 0 ^ (1)))))) ^ _GLF_IDENTITY(0, (0) | 0)))) * 1)), _GLF_IDENTITY(0, (0) >> 0) ^ (~ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0))), 0 ^ (~ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)))))))) : _GLF_FUZZED(-54758))), 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (1), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(~ (1), clamp(~ (1), _GLF_IDENTITY(~ (1), (~ (1)) ^ 0), ~ (1))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))), min(ivec3(_GLF_IDENTITY(~ (1), clamp(~ (1), _GLF_IDENTITY(~ (1), (~ (1)) ^ 0), ~ (1))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec3(_GLF_IDENTITY(~ (1), clamp(~ (1), _GLF_IDENTITY(~ (1), (~ (1)) ^ 0), ~ (1))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))))), (~ (1)) ^ 0)), clamp((_GLF_IDENTITY(_GLF_IDENTITY(~ (1), ~ (~ (~ (1)))), (~ (1)) ^ 0)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), (~ (1)) + 0), (~ (1)) ^ 0)), (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)))), _GLF_IDENTITY(0 ^ (~ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0))), clamp(0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), ((1)) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0)), _GLF_IDENTITY((~ (_GLF_IDENTITY(1, 0 ^ (1)))), 0 ^ ((~ (_GLF_IDENTITY(1, 0 ^ (1)))))) ^ _GLF_IDENTITY(0, (0) | 0))), 0 | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), ((1)) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0)), _GLF_IDENTITY((~ (_GLF_IDENTITY(1, 0 ^ (1)))), 0 ^ ((~ (_GLF_IDENTITY(1, 0 ^ (1)))))) ^ _GLF_IDENTITY(0, (0) | 0)))))), _GLF_IDENTITY(0, (0) >> 0) ^ (~ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0))), 0 ^ (~ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)))))))))), 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), (true ? (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)) : _GLF_FUZZED(-19034))), clamp((_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), (_GLF_IDENTITY(~ (1), (~ (1)) ^ _GLF_IDENTITY(0, (0 & -92785) ^ (0)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (1), _GLF_IDENTITY((~ (1)), int(ivec3(_GLF_IDENTITY((~ (1)), clamp((~ (1)), _GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), (~ (1)))), 1, 0))) ^ 0)), (true ? (_GLF_IDENTITY(~ (1), _GLF_IDENTITY((~ (1)), int(ivec3(_GLF_IDENTITY((~ (1)), clamp((~ (1)), _GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), (~ (1)))), 1, 0))) ^ 0)) : _GLF_FUZZED(15707))))), _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), clamp(~ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), ~ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)), ~ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0))))), clamp(0 ^ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), ((1)) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0)), _GLF_IDENTITY((~ (_GLF_IDENTITY(1, 0 ^ (1)))), 0 ^ ((~ (_GLF_IDENTITY(1, 0 ^ (1)))))) ^ _GLF_IDENTITY(0, (0) | 0)))), _GLF_IDENTITY(0, (0) >> 0) ^ (~ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0))), 0 ^ (~ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)))))))))))) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (injectionSwitch.x < injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))), true), bvec2(bvec4(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true), _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec2(true && (false), false)))), false))))))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, sqrt(1.0)), min(vec3(injectionSwitch, sqrt(1.0)), vec3(injectionSwitch, sqrt(1.0))))), clamp(vec2(_GLF_IDENTITY(vec3(injectionSwitch, sqrt(1.0)), min(vec3(injectionSwitch, sqrt(1.0)), vec3(injectionSwitch, sqrt(1.0))))), vec2(_GLF_IDENTITY(vec3(injectionSwitch, sqrt(1.0)), min(vec3(injectionSwitch, sqrt(1.0)), vec3(injectionSwitch, sqrt(1.0))))), vec2(_GLF_IDENTITY(vec3(injectionSwitch, sqrt(1.0)), min(vec3(injectionSwitch, sqrt(1.0)), vec3(injectionSwitch, sqrt(1.0)))))))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))) || false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), false)))))))))) || (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))), true && (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, 1.0)))))))), bool(_GLF_IDENTITY(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))))), (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec4(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), false))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 do
  {
   do
    {
     atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))], uint(1), 4, 64, _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-90109))))));
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2046.1834)), bool(false))))), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (true ? _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2046.1834)), bool(false))))), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2046.1834)), bool(false))))), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) / 1.0) : _GLF_FUZZED(-18.58)))))), false, true))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 1)); _injected_loop_counter ++)
        {
         return;
        }
      }
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | 0)) / 1))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), bool(bvec3(! (_GLF_WRAPPED_IF_FALSE(false)), true, false))))))
          {
          }
         else
          {
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (4761 & 0)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), true && (! (_GLF_WRAPPED_IF_TRUE(true)))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), true, false)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))), ! (! ((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-17.58) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false), (true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)) || _GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), true && (true && (true)))), (_GLF_IDENTITY(true, false || (true))) && true)))), true)))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          break;
         if(_GLF_DEAD(false))
          continue;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        break;
      }
     else
      {
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
         else
          {
          }
        }
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY((true ? 4 : _GLF_FUZZED(96970)), (false ? _GLF_FUZZED(-88438) : (true ? 4 : _GLF_FUZZED(96970))))));
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       subgroupAll(false);
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, (false) || false), true))), (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))))));
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false))))) && true))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     return;
    }
   for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((49467 % -30797) - _GLF_IDENTITY(43824, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(43824, 0), (ivec2(_GLF_IDENTITY(43824, (43824) - (0 >> _GLF_IDENTITY(int(7), int(7)))), 0)) >> ivec2(0, 0))), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(43824, 0), (ivec2(43824, 0)) >> ivec2(0, 0))), (int(_GLF_IDENTITY(ivec2(43824, 0), (ivec2(43824, 0)) >> ivec2(0, 0)))) << 0)) >> 0))), int(_GLF_IDENTITY(ivec2(((49467 % -30797) - _GLF_IDENTITY(43824, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(43824, 0), (_GLF_IDENTITY(ivec2(43824, 0), ivec2(1, 1) * (ivec2(43824, 0)))) >> _GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) << ivec2(0, 0)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(43824, 0), (ivec2(43824, 0)) >> ivec2(0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, (0 >> _GLF_IDENTITY(int(6), int(6))), int(_GLF_ONE(1.0, injectionSwitch.y)), 1)), ~ (_GLF_IDENTITY(~ (int(ivec4(0, (0 >> _GLF_IDENTITY(int(6), int(6))), int(_GLF_ONE(1.0, injectionSwitch.y)), 1))), (~ (int(ivec4(0, (0 >> _GLF_IDENTITY(int(6), int(6))), int(_GLF_ONE(1.0, injectionSwitch.y)), 1)))) >> 0))))))), (int(_GLF_IDENTITY(ivec2(43824, 0), (ivec2(43824, 0)) >> ivec2(0, 0)))) << 0)) >> 0))), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), (ivec2(((49467 % -30797) - _GLF_IDENTITY(43824, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(43824, 0), (ivec2(43824, 0)) >> ivec2(0, 0))), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(43824, 0), (ivec2(43824, 0)) >> ivec2(0, 0))), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(43824, 0), (ivec2(43824, 0)) >> ivec2(0, 0))), min(int(_GLF_IDENTITY(ivec2(43824, 0), (ivec2(43824, 0)) >> ivec2(0, 0))), int(_GLF_IDENTITY(ivec2(43824, 0), (ivec2(43824, 0)) >> ivec2(0, 0)))))) << 0)) >> 0))), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))) >> ivec2(0, 0)))), int(ivec2(_GLF_IDENTITY(((49467 % -30797) - 43824), 0 | (((49467 % -30797) - 43824))), 1))) & 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(((49467 % -30797) - 43824), max(((49467 % -30797) - 43824), ((49467 % -30797) - 43824))), int(ivec2(((49467 % -30797) - 43824), 1))) & 0), max(~ (_GLF_IDENTITY(((49467 % -30797) - 43824), int(_GLF_IDENTITY(ivec2(((49467 % -30797) - 43824), 1), _GLF_IDENTITY((ivec2(((49467 % -30797) - 43824), 1)) ^ (ivec2(0, 0) >> _GLF_IDENTITY(ivec2(3), ivec2(3))), ivec2(0, 0) | ((ivec2(((49467 % -30797) - 43824), 1)) ^ (ivec2(0, 0) >> _GLF_IDENTITY(ivec2(3), ivec2(3)))))))) & 0), ~ (_GLF_IDENTITY(((49467 % _GLF_IDENTITY(-30797, max(-30797, -30797))) - 43824), int(ivec2(((49467 % -30797) - 43824), 1))) & 0)))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, (_GLF_IDENTITY(_injected_loop_counter != 1, (_injected_loop_counter != 1) || false)) || false)); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) * 1)))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 1)); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, 0.0), max(vec4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))), 0.0, 0.0), vec4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, 0.0))))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0)))))) + _GLF_IDENTITY((injectionSwitch), vec2(vec3((injectionSwitch), cos(0.0))))).x > injectionSwitch.y)))))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                break;
              }
             else
              {
               do
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    return;
                   atomicStore(buf[virtual_gid], read, _GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, 0 ^ (1))), 64, 4);
                  }
                }
               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))) && true));
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       else
        {
        }
      }
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)))))))
        {
        }
       else
        {
         return;
        }
      }
    }
  }
}
