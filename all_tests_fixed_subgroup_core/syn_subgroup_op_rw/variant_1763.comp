#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 uvec2 _f0;
 uint workgroup_size;
 bvec3 _f1;
} ;

struct _GLF_struct_1 {
 uvec4 _f0;
 _GLF_struct_0 _f1;
 uvec3 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / 1.0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0))))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) / 1.0) / sqrt(1.0))))))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), ! (! (false)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false))), true, false)), bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false))), true, false)))))))))))), false || (bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false))), true, false)), bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false))), true, false))))))))))))))))), false || (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(570.682)), bool(false))) < injectionSwitch.y)), true), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false))))))))))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))) || false)))), false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false), true, true, false))))))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(75.46, float(mat2x3(75.46, 0.0, 1.0, 0.0, 0.0, 0.0))), -461.180)))).x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(_GLF_struct_1(uvec4(1u), _GLF_struct_0(uvec2(1u), gl_WorkGroupSize.x, bvec3(true)), uvec3(1u), vec4(1.0)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-591.130)), bool(false)))) / 1.0) > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (! ((injectionSwitch.x > injectionSwitch.y))), true, false, false))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x2(4.9, 4922.1588, -277.543, 3534.9706, 53.69, -4737.4451, 196.024, 1.3)) : mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x2(4.9, 4922.1588, -277.543, 3534.9706, 53.69, -4737.4451, 196.024, 1.3)) : mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0)))) + vec2(0.0, 0.0)))).y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x2(4.9, 4922.1588, -277.543, 3534.9706, 53.69, -4737.4451, 196.024, 1.3)) : mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, (true) && true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x2(4.9, 4922.1588, -277.543, 3534.9706, 53.69, -4737.4451, 196.024, 1.3)) : mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(4.9, max(_GLF_IDENTITY(4.9, 1.0 * (4.9)), 4.9)), 4922.1588, -277.543, 3534.9706, 53.69, -4737.4451, 196.024, 1.3)) : mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8403.9139)), bool(false))))) && true))))), true && (bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x2(4.9, 4922.1588, -277.543, 3534.9706, 53.69, -4737.4451, 196.024, 1.3)) : mat4x2(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x2(4.9, 4922.1588, -277.543, 3534.9706, 53.69, -4737.4451, 196.024, 1.3)) : mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y))))), _GLF_IDENTITY(false, (false) && true) || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ((injectionSwitch.x > injectionSwitch.y)) && true))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true, true, true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true, true, true))), true), false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true, true, true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true, true, true))), true), false)))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true, true, true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true, true, true))), true), false)))), true), true, true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true, true, true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true, true, true))), true), false)))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true, true, true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true, true, true))), true), false)))), true), true, true)))), true, false))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (true ? _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID)) : _GLF_FUZZED((uvec3(182520u, 155955u, 194224u) - uvec3(31783u, 164377u, 17216u))))), (true ? _GLF_IDENTITY(gl_WorkGroupID, (true ? _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID)) : _GLF_FUZZED((uvec3(182520u, 155955u, 194224u) - uvec3(31783u, 164377u, 17216u))))) : _GLF_FUZZED((uvec3(143726u, 181191u, 195047u) | uvec3(6682u, 155602u, 17194u))))), (gl_WorkGroupID) | (gl_WorkGroupID)).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, clamp(_GLF_struct_replacement_2._f0._f1.workgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, min(_GLF_struct_replacement_2._f0._f1.workgroup_size, _GLF_struct_replacement_2._f0._f1.workgroup_size)))), _GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, max(_GLF_struct_replacement_2._f0._f1.workgroup_size, _GLF_struct_replacement_2._f0._f1.workgroup_size)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, max(_GLF_struct_replacement_2._f0._f1.workgroup_size, _GLF_struct_replacement_2._f0._f1.workgroup_size))) | (_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, max(_GLF_struct_replacement_2._f0._f1.workgroup_size, _GLF_struct_replacement_2._f0._f1.workgroup_size)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u ^ (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))))), 0u, 0u)))))) / 1u, (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, clamp(_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, (_GLF_struct_replacement_2._f0._f1.workgroup_size) >> 0u)))), _GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, min(_GLF_struct_replacement_2._f0._f1.workgroup_size, _GLF_struct_replacement_2._f0._f1.workgroup_size)))), _GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, uint(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, max(_GLF_struct_replacement_2._f0._f1.workgroup_size, _GLF_struct_replacement_2._f0._f1.workgroup_size)), (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)) * 1.0)))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u, 0u)))))) / 1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, clamp(_GLF_struct_replacement_2._f0._f1.workgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, min(_GLF_struct_replacement_2._f0._f1.workgroup_size, _GLF_struct_replacement_2._f0._f1.workgroup_size)))), _GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, max(_GLF_struct_replacement_2._f0._f1.workgroup_size, _GLF_struct_replacement_2._f0._f1.workgroup_size)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, max(_GLF_struct_replacement_2._f0._f1.workgroup_size, _GLF_struct_replacement_2._f0._f1.workgroup_size))) | (_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, max(_GLF_struct_replacement_2._f0._f1.workgroup_size, _GLF_struct_replacement_2._f0._f1.workgroup_size)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u ^ (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))))), 0u, 0u)))))) / 1u, (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, clamp(_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, (_GLF_struct_replacement_2._f0._f1.workgroup_size) >> 0u)))), _GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, min(_GLF_struct_replacement_2._f0._f1.workgroup_size, _GLF_struct_replacement_2._f0._f1.workgroup_size)))), _GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, uint(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, max(_GLF_struct_replacement_2._f0._f1.workgroup_size, _GLF_struct_replacement_2._f0._f1.workgroup_size)), (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)) * 1.0)))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u, 0u)))))) / 1u))), ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, clamp(_GLF_struct_replacement_2._f0._f1.workgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, min(_GLF_struct_replacement_2._f0._f1.workgroup_size, _GLF_struct_replacement_2._f0._f1.workgroup_size)))), _GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, max(_GLF_struct_replacement_2._f0._f1.workgroup_size, _GLF_struct_replacement_2._f0._f1.workgroup_size)), (_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, max(_GLF_struct_replacement_2._f0._f1.workgroup_size, _GLF_struct_replacement_2._f0._f1.workgroup_size))) | (_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, max(_GLF_struct_replacement_2._f0._f1.workgroup_size, _GLF_struct_replacement_2._f0._f1.workgroup_size)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u ^ (_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(min(uint(2u), uint(2u)), min(_GLF_IDENTITY(min(uint(2u), uint(2u)), min(min(uint(2u), uint(2u)), min(uint(2u), uint(2u)))), min(uint(2u), uint(2u))))))))), 0u, 0u)))))) / 1u, (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, clamp(_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, (_GLF_struct_replacement_2._f0._f1.workgroup_size) >> 0u)), ((_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, (_GLF_struct_replacement_2._f0._f1.workgroup_size) >> 0u))) + 0u))), _GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, min(_GLF_struct_replacement_2._f0._f1.workgroup_size, _GLF_struct_replacement_2._f0._f1.workgroup_size)))), _GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, uint(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f1.workgroup_size, max(_GLF_struct_replacement_2._f0._f1.workgroup_size, _GLF_struct_replacement_2._f0._f1.workgroup_size)), (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)) * 1.0)))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u, 0u)))))) / 1u)))))))) * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(packSnorm2x16(injectionSwitch)) : workgroup_id))) | (workgroup_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.7)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(884.255, cos(0.0) * (884.255))), 0.0 + (_GLF_FUZZED(_GLF_IDENTITY(884.255, cos(0.0) * _GLF_IDENTITY((884.255), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY((884.255), (false ? _GLF_FUZZED(-1.1) : _GLF_IDENTITY((884.255), (true ? (884.255) : _GLF_FUZZED(-1.0))))), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0), mat4x2(mat4x3(mat4x2(_GLF_IDENTITY((884.255), (false ? _GLF_FUZZED(-1.1) : _GLF_IDENTITY((884.255), (true ? (884.255) : _GLF_FUZZED(-1.0))))), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0))))))))))))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.7)), bool(_GLF_IDENTITY(false, bool(bool(false)))))) : _GLF_IDENTITY(_GLF_FUZZED(884.255), min(_GLF_FUZZED(884.255), _GLF_IDENTITY(_GLF_FUZZED(884.255), max(_GLF_FUZZED(884.255), _GLF_FUZZED(884.255))))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.7)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(884.255, cos(0.0) * (884.255))), 0.0 + (_GLF_FUZZED(_GLF_IDENTITY(884.255, cos(0.0) * _GLF_IDENTITY((884.255), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY((884.255), (false ? _GLF_FUZZED(-1.1) : _GLF_IDENTITY((884.255), (true ? (884.255) : _GLF_FUZZED(-1.0))))), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0), mat4x2(mat4x3(mat4x2(_GLF_IDENTITY((884.255), (false ? _GLF_FUZZED(-1.1) : _GLF_IDENTITY((884.255), (true ? (884.255) : _GLF_FUZZED(-1.0))))), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0))))))))))))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.7)), bool(_GLF_IDENTITY(false, bool(bool(false)))))) : _GLF_IDENTITY(_GLF_FUZZED(884.255), min(_GLF_FUZZED(884.255), _GLF_IDENTITY(_GLF_FUZZED(884.255), max(_GLF_FUZZED(884.255), _GLF_FUZZED(884.255))))))))))), true, false)), (bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.7)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(884.255, cos(0.0) * (884.255))), 0.0 + (_GLF_FUZZED(_GLF_IDENTITY(884.255, cos(0.0) * _GLF_IDENTITY((884.255), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY((884.255), (false ? _GLF_FUZZED(-1.1) : _GLF_IDENTITY((884.255), (true ? (884.255) : _GLF_FUZZED(-1.0))))), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0), mat4x2(mat4x3(mat4x2(_GLF_IDENTITY((884.255), (false ? _GLF_FUZZED(-1.1) : _GLF_IDENTITY((884.255), (true ? (884.255) : _GLF_FUZZED(-1.0))))), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0))))))))))))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.7)), bool(_GLF_IDENTITY(false, bool(bool(false)))))) : _GLF_IDENTITY(_GLF_FUZZED(884.255), min(_GLF_FUZZED(884.255), _GLF_IDENTITY(_GLF_FUZZED(884.255), max(_GLF_FUZZED(884.255), _GLF_FUZZED(884.255))))))))))), true, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), (false ? _GLF_FUZZED(2.0) : injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (false ? _GLF_FUZZED(-617.354) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) && true))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.6)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat3x4(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0))))).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)), injectionSwitch.x))), bool(true))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.6)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat3x4(_GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]) / 1.0, (_GLF_IDENTITY((injectionSwitch[1]), ((injectionSwitch[1])) / 1.0) / 1.0) * round(length(normalize(vec2(1.0, 1.0)))))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), min(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(mat2(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (vec3(0.0, 0.0, 0.0)) - vec3(0.0, 0.0, 0.0)), 1.0))), vec3(0.0, 0.0, 0.0)))), 1.0))))).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)), injectionSwitch.x))), bool(true))) > injectionSwitch.y))) && true)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true, bool(bool((_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(cos(3004.7748)))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) ^ 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) ^ 0)) - (0 & _GLF_IDENTITY(_GLF_IDENTITY(-7415, min(_GLF_IDENTITY(-7415, max(-7415, _GLF_IDENTITY(-7415, (-7415) ^ 0))), -7415)), (-7415) * 1)))) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), max(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (1) - 0)))) | 0)) ^ 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) ^ 0)) - (0 & -7415))) % subgroup_size, uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), (false ? _GLF_FUZZED(-79212) : (_GLF_IDENTITY(1, (1) - 0)))) ^ 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), (false ? _GLF_FUZZED(-55586) : (1))) - 0)) ^ 0)) - (0 & -7415)), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) - 0, max((1) - 0, _GLF_IDENTITY((1) - 0, ~ (~ ((1) - 0))))))) ^ 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(1, (1) - 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), ~ (~ (_GLF_IDENTITY(1, (1) - 0))))))) ^ 0)) - (0 & -7415)), 0u | (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) ^ 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) ^ 0)) - (0 & -7415))))) | 0u)) % subgroup_size, 1u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), max(uvec4((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) ^ 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | (1))) - 0), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | (1))) - 0)))) ^ 0)) - (0 & -7415))) % subgroup_size, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, max(1u, 1u)) : _GLF_FUZZED(147691u))), 1u)), 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), uvec4(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) ^ 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) ^ 0)) - (0 & -7415))) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) ^ 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) ^ 0)) - (0 & -7415))) % subgroup_size) | ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) ^ 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) ^ 0)) - (0 & -7415))) % subgroup_size)), 1u, 1u, (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), _GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), uint(uint(uint(3u))))) | (uint(3u))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(workgroup_base) : uint(3u))))))))))))), _GLF_IDENTITY(uint(uint(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), max(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (1) - 0)))) | 0)) ^ 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) ^ 0)) - (0 & -7415))) % subgroup_size, uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)) ^ 0, int(ivec4((_GLF_IDENTITY(1, (1) - 0)) ^ 0, 1, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(-71044) : int(5))))))))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(-23065)))) - 0)) ^ 0)) - (0 & -7415)), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) ^ 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) ^ 0)) - (0 & -7415)), 0u | (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) ^ 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) ^ 0)) - (0 & -7415))))) | 0u)) % subgroup_size, 1u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), max(uvec4((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) ^ 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | (1))) - 0)) ^ 0)) - (0 & -7415))) % subgroup_size, 1u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), uvec4((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) ^ 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) / 1) - 0)) ^ 0)) - (0 & -7415))) % subgroup_size, 1u, 1u, (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(workgroup_base) : uint(3u))))))))))))))), ~ (~ (uint(uint(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), max(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (1) - 0)))) | 0)) ^ 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) ^ 0)) - (0 & -7415))) % subgroup_size, uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) ^ 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) ^ 0)) - (0 & -7415)), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) ^ 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) ^ _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (0) >> 0), 0), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY(0, (0) >> 0), 0)))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (0) >> 0), 0), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY(0, (0) >> 0), 0))))) << 0)))) - (0 & -7415)), 0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) ^ 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) ^ 0)) - (0 & -7415))))) | 0u)) % subgroup_size, 1u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(3u, _GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, min(3u, 3u))) ^ 0u), 3u)))))), max(uvec4((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (1) - 0)) ^ 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | (1))) - 0)) ^ 0)) - (0 & _GLF_IDENTITY(-7415, int(int(-7415)))))) % subgroup_size, 1u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), uvec4((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (0 | 0) + (_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) << 0) - 0)))) ^ 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) ^ 0)) - (_GLF_IDENTITY(0, 0 + (0)) & -7415))) % subgroup_size, 1u, 1u, (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(workgroup_base) : uint(3u))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(workgroup_base) : uint(3u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(127389u) : _GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(workgroup_base) : uint(3u))))), _GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(workgroup_base) : uint(3u)))))))))))))))))))))) + 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) && (false))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0, 0.0)), (vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0, 0.0))) + vec2(0.0, 0.0))).y, float(vec4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0, 0.0)), (vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0, 0.0))) + vec2(0.0, 0.0))).y, 1.0, cos(0.0), 1.0))))), true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-575.508) : injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-15.10))), bool(_GLF_IDENTITY(false, (false) || false)))))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))) * (injectionSwitch.x))) / 1.0), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-15.10))), bool(_GLF_IDENTITY(false, (false) || false)))))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), false, true, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), 1.0 * ((injectionSwitch.x))) / 1.0), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))).x), float(_GLF_FUZZED((-15.10))), bool(_GLF_IDENTITY(false, (false) || false)))))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), false, true, true)), (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-7.1, 9223.1014)) : injectionSwitch)).x) / 1.0), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-15.10))), bool(_GLF_IDENTITY(false, (false) || false)))))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true))) || false)) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(9997.7194) : injectionSwitch[1])))).x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, ! (! (false))), false, false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid])), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 ^ (64))) >> _GLF_IDENTITY(0, int(int(0)))), clamp(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, (64) - 0)))) >> _GLF_IDENTITY(0, int(int(0)))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(0 ^ (64), int(int(0 ^ (_GLF_IDENTITY(64, 1 * (64)))))))) >> _GLF_IDENTITY(0, int(int(0)))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 ^ (64))) >> _GLF_IDENTITY(0, int(int(0)))))), _GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) ^ 0))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) ^ 0))), 1), (ivec2(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) ^ 0))), 1)) / ivec2(1, 1)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true), true, true)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true), true, true))))), ! (! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true), true, true))))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[0]))) - abs(0.0)), injectionSwitch[1])), abs(vec2(0.0, 0.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[0], injectionSwitch[0]))) - abs(0.0)), injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9705.4104)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))[0], (_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0]))) - abs(0.0)), injectionSwitch[1]))) / vec2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 0.0, 1.0, determinant(mat2(0.0, 0.0, tan(0.0), 0.0)), 0.0, _GLF_IDENTITY(1.0, float(mat2(1.0, round(length(normalize(1.0))), 1.0, 1.0)))), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), injectionSwitch, injectionSwitch)).y, 0.0, 1.0, determinant(mat2(0.0, 0.0, tan(_GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false))))))), 0.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-590.623)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) - 0.0), cos(0.0), 0.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)), (float(mat3(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))) * 1.0), (_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(9.8) : float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))))))) * _GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)), (float(mat3(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, sqrt(1.0), 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, determinant(mat4(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 1.0)), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)), 0.0)), min(float(mat4x3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, determinant(mat4(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 1.0)), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)), 0.0)), float(mat4x3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, determinant(mat4(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 1.0)), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)), 0.0))))), 1.0, 0.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9.7) : _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))))), 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, sqrt(1.0), 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), min(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), 1.0, 1.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))) * 1.0)) * abs(1.0))))))))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) * (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 0.0, 1.0, determinant(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(12.85)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, tan(0.0), 0.0)), 0.0, 1.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(injectionSwitch.y, 0.0, 1.0, determinant(_GLF_IDENTITY(_GLF_IDENTITY(mat2(0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)), tan(_GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false))))), (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false)))))) / 1.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-446.709)), bool(false)))), float(_GLF_FUZZED(-510.093)), bool(false))))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false)))))))) - 0.0))), 0.0), (_GLF_IDENTITY(mat2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), (0.0) + log(1.0)), tan(_GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false))))), (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), clamp(float(1.0), _GLF_IDENTITY(float(1.0), (float(1.0)) - 0.0), float(1.0))), float(_GLF_FUZZED(-510.093)), bool(false)))))) / 1.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-3.4)), bool(false)))), float(_GLF_FUZZED(-510.093)), bool(false))))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false)))))))) - 0.0))), 0.0), (mat2(0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)), tan(_GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false)))), (true ? max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false)))) : _GLF_FUZZED(-472.007)))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false))))), (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(-510.093, (-510.093) + sin(tan(0.0))))), bool(false)))))) / 1.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false))))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, 0.0, abs(1.0), abs(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), sqrt(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, 0.0), (_GLF_IDENTITY(mat4x3(1.0, 0.0, abs(1.0), abs(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), sqrt(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, 0.0), transpose(transpose(mat4x3(1.0, 0.0, abs(1.0), abs(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), sqrt(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, 0.0))))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false)))))))) - 0.0))), 0.0)) + mat2(0.0, 0.0, 0.0, 0.0))) / mat2(1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(mat2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) + log(1.0), clamp((0.0) + log(1.0), _GLF_IDENTITY((0.0) + log(1.0), 0.0 + ((0.0) + log(1.0))), (0.0) + log(1.0)))), tan(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false))))), (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false)))))) / 1.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(-510.093), (true ? _GLF_FUZZED(-510.093) : _GLF_FUZZED(-755.623)))), bool(false))))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), (false ? _GLF_FUZZED(-195.352) : _GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))))), float(_GLF_FUZZED(-510.093)), bool(false)))))))) - 0.0)), max(_GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false))))), (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(-510.093, mix(float(_GLF_FUZZED(96.44)), float(-510.093), bool(true))))), bool(false)))))) / 1.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false)), min(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false)), clamp(mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false)), mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false)), mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false)))), mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false))))))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(-510.093)), max(float(_GLF_FUZZED(-510.093)), float(_GLF_FUZZED(-510.093)))), bool(false)))))))) - 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false))))), (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(-510.093), clamp(_GLF_IDENTITY(_GLF_FUZZED(-510.093), float(mat4x2(_GLF_FUZZED(-510.093), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))))), _GLF_IDENTITY(_GLF_FUZZED(-510.093), mix(float(_GLF_FUZZED(-510.093)), float(_GLF_FUZZED(-639.113)), bool(false))), _GLF_FUZZED(-510.093)))), bool(false)))))) / 1.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false))))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false)))))))) - 0.0)), clamp(_GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false))))), (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false)))))) / 1.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false))))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2710.2861))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false)))))))) - 0.0)), _GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false)), clamp(mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false)), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false)), (false ? _GLF_FUZZED(-2.2) : mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false)))), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false)), clamp(mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false)), mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false)), mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false))))))))), (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), float(mat3(float(1.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), float(_GLF_FUZZED(-510.093)), bool(false)))))) / 1.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false))))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false)))))))) - 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4((0.0), 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0)), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat2x4((0.0), 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0)), 1.0, 1.0, 1.0, 0.0))))), min(float(_GLF_IDENTITY(mat2x4((0.0), 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0)), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat2x4((0.0), 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0)), 1.0, 1.0, 1.0, 0.0))))), float(_GLF_IDENTITY(mat2x4((0.0), 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0)), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat2x4((0.0), 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0)), 1.0, 1.0, 1.0, 0.0)))))))) * _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false)), min(mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false)), mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false))))))), (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false)))))) / 1.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false))))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), _GLF_IDENTITY(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(false)))))))))) - 0.0))))))), 0.0), (_GLF_IDENTITY(mat2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(4106.5924))), _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), 0.0))), float(_GLF_FUZZED(574.412)), bool(false)))) + log(1.0)), tan(_GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) + _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false))))), (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(-510.093), max(_GLF_FUZZED(-510.093), _GLF_FUZZED(-510.093)))), bool(false)))))) / 1.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false))))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(-510.093)), max(float(_GLF_FUZZED(-510.093)), float(_GLF_FUZZED(-510.093)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))) && true)))))))))))) - 0.0))), 0.0), (mat2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(0.0, tan(0.0), 1.0), max(_GLF_IDENTITY(vec3(0.0, tan(0.0), 1.0), clamp(vec3(0.0, tan(0.0), 1.0), vec3(0.0, tan(0.0), 1.0), vec3(0.0, tan(0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), vec3(0.0, tan(0.0), 1.0)))), clamp(float(_GLF_IDENTITY(vec3(0.0, tan(0.0), 1.0), max(_GLF_IDENTITY(vec3(0.0, tan(0.0), 1.0), clamp(vec3(0.0, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 1.0), vec3(0.0, tan(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec2(-8.0, 8514.7307).y)), float(1.0), bool(true)))), vec3(0.0, tan(0.0), 1.0))), vec3(0.0, tan(0.0), 1.0)))), float(_GLF_IDENTITY(vec3(0.0, tan(0.0), 1.0), max(_GLF_IDENTITY(vec3(0.0, tan(0.0), 1.0), clamp(vec3(0.0, tan(0.0), 1.0), vec3(0.0, _GLF_IDENTITY(tan(0.0), min(tan(0.0), tan(0.0))), 1.0), vec3(0.0, tan(0.0), 1.0))), vec3(0.0, tan(0.0), 1.0)))), float(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(tan(0.0), clamp(_GLF_IDENTITY(tan(0.0), 1.0 * (tan(0.0))), tan(0.0), tan(0.0))), 1.0), max(_GLF_IDENTITY(vec3(0.0, tan(0.0), 1.0), clamp(vec3(0.0, tan(0.0), 1.0), vec3(0.0, tan(0.0), 1.0), vec3(0.0, tan(0.0), 1.0))), vec3(0.0, tan(0.0), 1.0)))))))) + log(1.0)), tan(_GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec4(1.0, determinant(mat4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-715.150)), float(0.0), bool(true))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), log(1.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0)), 1.0, 0.0))), mix(_GLF_IDENTITY(float(1.0), max(float(1.0), _GLF_IDENTITY(float(1.0), (float(1.0)) + 0.0))), float(_GLF_FUZZED(-510.093)), _GLF_IDENTITY(bool(false), true && (bool(false))))))), (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-298.048)), float(1.0), bool(true))), min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-298.048)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-298.048)), float(1.0), bool(true))))), mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false)))))) / _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.3) : 1.0))))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), bool(false))))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-510.093)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(false, true && (false)))))))))))) - 0.0))), 0.0)) + mat2(0.0, 0.0, 0.0, 0.0))) / mat2(1.0, 1.0, 1.0, 1.0))) - _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(0.0, 0.0, 0.0, 0.0))))), 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec4(-430.541, -1164.0430, -350.081, -5.8).p)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-640.170))))))))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))) || false)) && true))))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, (_GLF_IDENTITY((1) | 0, max((1) | 0, (1) | 0))) / 1))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) && true))))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), bool(bvec4(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), true, false, false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))[0], (injectionSwitch[_GLF_IDENTITY(0, max(0, 0))]) - 0.0), injectionSwitch[1])).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-5489.6639), (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-5489.6639), 0.0 + (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-5489.6639), max(true ? injectionSwitch.y : _GLF_FUZZED(-5489.6639), true ? injectionSwitch.y : _GLF_FUZZED(-5489.6639)))))) - 0.0)))), float(_GLF_FUZZED(68.04)), bool(false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).x > injectionSwitch.y))), true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(read, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(read, 0u, 0u), ~ (~ (uvec3(read, 0u, 0u)))), (uvec3(read, 0u, 0u)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(read, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(read, 0u, 0u), ~ (~ (uvec3(read, 0u, 0u)))), (uvec3(read, 0u, 0u)) << uvec3(0u, 0u, 0u))))) ^ 0u), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_FUZZED(-65.86)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), bool(true))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, sin(0.0), 1.0, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0), mat3(1.0) * (mat3(injectionSwitch, 0.0, sin(0.0), 1.0, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0))))).y))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2((_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-40.32)), bool(false))))))))), _GLF_IDENTITY(((! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (((! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(mod(2.4, -9.1)) : injectionSwitch.x)) < injectionSwitch.y))))))) || false)), false, true)), (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ((! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), false, true))) && true), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec4(1146.9878, 0.1, -1.9, -1488.8615).q)), float(1.0), bool(true))), 1.0)), injectionSwitch)), vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(0.0, 0.0, 1.0, 0.0), transpose(transpose(mat2(0.0, 0.0, 1.0, 0.0))))), (false ? _GLF_FUZZED(2368.7394) : float(_GLF_IDENTITY(mat2(0.0, 0.0, 1.0, 0.0), transpose(transpose(mat2(0.0, 0.0, 1.0, 0.0)))))))), 0.0, sqrt(0.0), 1.0, sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 1.0))).y)), false, true)), false || (bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec4(1146.9878, 0.1, -1.9, -1488.8615).q)), float(1.0), bool(true))), 1.0)), injectionSwitch)), vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(0.0, 0.0, 1.0, 0.0), transpose(transpose(mat2(0.0, 0.0, 1.0, 0.0))))), (false ? _GLF_FUZZED(2368.7394) : float(_GLF_IDENTITY(mat2(0.0, 0.0, 1.0, 0.0), transpose(transpose(mat2(0.0, 0.0, 1.0, 0.0)))))))), 0.0, sqrt(0.0), 1.0, sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 1.0))).y)), false, true)))), true, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-99.48) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   atomicStore(buf[virtual_gid], read, _GLF_IDENTITY(4, (4) | _GLF_IDENTITY((4), ((4)) ^ _GLF_IDENTITY(0, (1 & 1) * (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(97191) : 0)))))), _GLF_IDENTITY(64, _GLF_IDENTITY((64) >> 0, ((64) >> 0) >> _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) / 1) : _GLF_FUZZED(35757))))), 4);
   subgroupAll(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - abs(vec2(0.0, 0.0))).y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))) * mat2(1.0)).y, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(0.0, 0.0) + ((injectionSwitch)), vec2(0.0, 0.0) + (vec2(0.0, 0.0) + ((injectionSwitch))))) * mat2(1.0)).y, true), bvec2(bvec2(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), vec2(mat2(mat2(1.0) * ((injectionSwitch)), 1.0, tan(0.0))))), vec2(0.0, 0.0) + ((injectionSwitch))) * mat2(1.0)).y, true)))), false, true)))), (bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, true))) && true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, sin(0.0))), dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(mat4x3(vec3(0.0, 1.0, 0.0), 1.0, tan(0.0), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, sqrt(1.0), 1.0)), 1.0, sqrt(1.0), 1.0, 0.0, 1.0)), (true ? vec3(mat4x3(vec3(0.0, 1.0, 0.0), 1.0, tan(0.0), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-67.28)), float(0.0), bool(true))), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, sqrt(1.0), 1.0)), 1.0, sqrt(1.0), 1.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, _GLF_IDENTITY(dot(vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0)), dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0))), 1.0))), 1.0)) : _GLF_FUZZED(vec3(-994.957, -209.677, 9663.8591))))), vec3(0.0, 1.0, sin(0.0))))))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (false), bool(bool(true && (false)))), bool(bvec4(true && (false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9.4, _GLF_IDENTITY(-2.8, (_GLF_IDENTITY(-2.8, 0.0 + (-2.8))) / _GLF_IDENTITY(dot(vec4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))))) : injectionSwitch)), 0.0, 1.0, 1.0, 1.0))).y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, false, false)))) || false), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))) || false)) || false)))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) && true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true))))) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))), (false ? _GLF_FUZZED(-9.2) : float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), true && ((_GLF_IDENTITY(! (false), ! (! (! (false)))))))), true && ((_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), true && ((_GLF_IDENTITY(! (false), ! (! (! (false))))))))))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), _GLF_IDENTITY(min(_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), vec2(mat3x4((injectionSwitch) / vec2(1.0, 1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch) / vec2(1.0, 1.0)), vec2(mat4(min(_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), vec2(mat3x4((injectionSwitch) / vec2(1.0, 1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 1.0, 0.0))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-120.824, -6361.0744)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, injectionSwitch.y))) - mat2(0.0, 0.0, 0.0, 0.0))) + mat2(0.0, 0.0, 0.0, 0.0))) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch)) * _GLF_IDENTITY(mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(-2.6, -7300.4437, -2.6, 30.54)) : mat2(1.0)))), vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(_GLF_IDENTITY(mat2x3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 1.0, 0.0, abs(0.0), 1.0), (mat2x3(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4708.1972), _GLF_FUZZED(8.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)) * (injectionSwitch), 1.0, 0.0, abs(0.0), 1.0)) * mat2(1.0)))), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * mat2(1.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2.5)), _GLF_IDENTITY(bool(false), ! (! (bool(false))))))) / 1.0)), (false ? _GLF_FUZZED(asin(vec3(4.8, -8432.3141, 4.3))) : _GLF_IDENTITY(vec3(_GLF_IDENTITY(mat2(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, log(1.0), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), 0.0 + (dot(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0), vec2(1.0, 1.0)))), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))))), 0.0, 1.0, length(0.0), 0.0)), (true ? float(mat4x2(1.0, log(1.0), 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), clamp(vec4(1.0, 0.0, 0.0, 1.0), vec4(1.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), mat4(1.0) * (vec4(1.0, 0.0, 0.0, 1.0))))), vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(66.83) : _GLF_IDENTITY(1.0, (1.0) / sqrt(1.0)))), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7844.5473))), 0.0), vec2(1.0, 1.0)))))), 0.0, 1.0, length(0.0), 0.0)) : _GLF_FUZZED(225.925)))), injectionSwitch.y)) * (injectionSwitch), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * mat2(1.0)), 1.0), clamp(vec3(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), min(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))), (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), sin(0.0), 1.0, 1.0, 0.0, 0.0)))) * (injectionSwitch)) * mat2(1.0)), 1.0), vec3(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))))))), 1.0), vec3(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), _GLF_IDENTITY((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * mat2(1.0), _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * mat2(1.0), clamp((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * mat2(1.0), (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) * (injectionSwitch)) * mat2(1.0), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * mat2(1.0))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec2(0.0, 0.0), vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 1.0, 0.0, exp(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 1.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(vec2(mat4x2(_GLF_IDENTITY((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * mat2(1.0), clamp((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * mat2(1.0), (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0))))) * mat2(1.0))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.3)), bool(false))), 0.0), vec2(1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, abs(1.0), 1.0, 1.0), transpose(transpose(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, abs(1.0), 1.0, 1.0)))))).y))), dot(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y)), mix(vec2(_GLF_FUZZED(-3.0), _GLF_FUZZED(-7.5)), vec2((vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y)))[0], (vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y)))[1]), bvec2(true, true))), vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y)))))), 0.0, 1.0, 0.0, exp(0.0), 1.0))), (vec2(vec2(mat4x2(_GLF_IDENTITY((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * mat2(1.0), clamp((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * mat2(1.0), (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0))))) * mat2(1.0))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.3)), bool(false))), 0.0), vec2(1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, abs(1.0), 1.0, 1.0), transpose(transpose(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, abs(1.0), 1.0, 1.0)))))).y))), dot(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y)), mix(vec2(_GLF_FUZZED(-3.0), _GLF_FUZZED(-7.5)), vec2((vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y)))[0], (vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y)))[1]), bvec2(true, true))), vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y)))))), 0.0, 1.0, 0.0, exp(0.0), 1.0)))) * mat2(1.0))), vec2(0.0, 0.0) + (vec2(vec2(vec2(mat4x2(_GLF_IDENTITY((mat2(_GLF_ONE(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), injectionSwitch.y)) * (injectionSwitch)) * mat2(1.0), _GLF_IDENTITY(clamp((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * mat2(1.0), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * mat2(1.0), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * mat2(1.0)), clamp(clamp((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * mat2(1.0), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * mat2(1.0), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * mat2(1.0)), clamp((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * mat2(1.0), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * mat2(1.0), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * mat2(1.0)), clamp((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * mat2(1.0), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * mat2(1.0), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * mat2(1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y))), min(dot(vec2(0.0, 0.0), vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y))), float(vec3(dot(vec2(0.0, 0.0), vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 1.0))))), dot(vec2(0.0, 0.0), vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y)))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, exp(0.0), 1.0))))))))), 1.0)))))))), vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))).y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), true, true)))))))))
    barrier();
   barrier();
  }
}
