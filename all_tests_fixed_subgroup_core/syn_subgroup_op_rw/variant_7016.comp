#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))))), bool(bvec4(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))))), true, false, false)))), false || (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u), min(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u), (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u)) ^ (0u | 0u)))), gl_NumWorkGroups.x));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), true && (! (_GLF_IDENTITY(false, (false) && true)))))))) || false))))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2.5)), bool(false))) < injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0)))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)).y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, ~ (_GLF_IDENTITY(~ (workgroup_size), 0u + (~ (workgroup_size))))), _GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)))) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u))), (_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u)))) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | (_GLF_IDENTITY(0u, (0u) + 0u))))), 0u ^ (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(subgroup_id, 0u)), (_GLF_IDENTITY(uint(uvec2(subgroup_id, 0u)), min(uint(uvec2(subgroup_id, 0u)), uint(uvec2(subgroup_id, 0u))))) | (_GLF_IDENTITY(uint(uvec2(subgroup_id, 0u)), (uint(uvec2(subgroup_id, 0u))) >> 0u)))), (_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u)))) - 0u))))) * subgroup_size) | (subgroup_id * subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(clamp(workgroup_id, workgroup_base, 32310u))))))), max(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), ((~ (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))) | 0u))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)))), 1u * (subgroup_size))))) * 1u), uint(uint(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), ((~ (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))) * 1u))))) | 0u), (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), 1u * (subgroup_size))))))), subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u))), clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u))), uint(uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u))), 0u, 0u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u))), uint(uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u))), 0u, 0u, 1u)))) >> (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))))), _GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u))), clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u))), uint(uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u))), 0u, 0u, 1u))), _GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u)))))))) >> 0u) * subgroup_size) | (subgroup_id * subgroup_size))))) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)))), _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) - 0u), workgroup_base), (false ? _GLF_FUZZED(workgroup_size) : clamp(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))) ? _GLF_FUZZED(num_workgroup) : workgroup_base)), workgroup_base))) - 0u), workgroup_base)))) + subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)))), _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) - 0u), workgroup_base), (false ? _GLF_FUZZED(workgroup_size) : clamp(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))) ? _GLF_FUZZED(num_workgroup) : workgroup_base)), workgroup_base))) - 0u), workgroup_base)))) + subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)))), _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) - 0u), workgroup_base), (false ? _GLF_FUZZED(workgroup_size) : clamp(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))) ? _GLF_FUZZED(num_workgroup) : workgroup_base)), workgroup_base))) - 0u), workgroup_base)))) + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)))), _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) - 0u), workgroup_base), (false ? _GLF_FUZZED(workgroup_size) : clamp(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))) ? _GLF_FUZZED(num_workgroup) : workgroup_base)), workgroup_base))) - 0u), workgroup_base)))) + subgroup_id * subgroup_size)) + ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))) + 1) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (1u | 1u) * (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-68.80)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))))), 0.0, 1.0, 0.0, log(1.0), 0.0))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uint(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(num_workgroup))))))) * 1u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)))), _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) - 0u), _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)), (false ? _GLF_FUZZED(workgroup_size) : clamp(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (false)) && true))) ? _GLF_FUZZED(num_workgroup) : workgroup_base)), workgroup_base))) - 0u), workgroup_base)))) + _GLF_IDENTITY(subgroup_id, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))) + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (1u | 1u) * _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-68.80)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.2, -4.4)))))).x > injectionSwitch.y), false, false, false))))))), 0.0, 1.0, 0.0, log(1.0), 0.0))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uint(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), vec2(0.0, 0.0) + (vec2(vec4(injectionSwitch, 1.0, 1.0))))).y)) ? _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(num_workgroup))))))) * 1u)), ((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-68.80)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.2, -4.4)))))).x > injectionSwitch.y), false, false, false))))))), 0.0, 1.0, 0.0, log(1.0), 0.0))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uint(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), vec2(0.0, 0.0) + (vec2(vec4(injectionSwitch, 1.0, 1.0))))).y)) ? _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(num_workgroup))))))) * 1u))) * 1u)) >> _GLF_IDENTITY(uint(5u), uint(5u))))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) >> 0u)), min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)))), _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), 0u + (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) - 0u), workgroup_base), (false ? _GLF_FUZZED(workgroup_size) : clamp(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), max(_GLF_IDENTITY((workgroup_base), (false ? _GLF_FUZZED(workgroup_id) : (workgroup_base))), (workgroup_base))) | 0u), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))) ? _GLF_FUZZED(num_workgroup) : workgroup_base)), workgroup_base))) - 0u), workgroup_base)))) + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))) + 1) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (1u | 1u) * (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-68.80)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))))), 0.0, 1.0, 0.0, log(1.0), 0.0)))), clamp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-68.80)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))))), 0.0, 1.0, 0.0, log(1.0), 0.0)))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-68.80)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))))), 0.0, 1.0, 0.0, log(1.0), 0.0)))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-68.80)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))))), 0.0, 1.0, 0.0, log(1.0), 0.0))))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, false || (true)) ? injectionSwitch : _GLF_FUZZED(mat2(888.452, 33.82, 7.0, -9.6)[0]))).x)), uint(uint(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(21.23) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < _GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0))))) ? _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(num_workgroup))))))) * 1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) | 0u), uint(5u))))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) >> 0u)), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) << 0u), _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), clamp(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))))), workgroup_base)))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) - 0u, 0u ^ ((_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) - 0u))), workgroup_base), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : clamp(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_id)))) - 0u), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))), workgroup_base))) - 0u), workgroup_base)), uint(uvec4(_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : clamp(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_id)))) - 0u), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))), workgroup_base))) - 0u), workgroup_base)), max((false ? _GLF_FUZZED(workgroup_size) : clamp(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_id)))) - 0u), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))), workgroup_base))) - 0u), workgroup_base)), (false ? _GLF_FUZZED(workgroup_size) : clamp(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_id)))) - 0u), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))), workgroup_base))) - 0u), workgroup_base)))), 1u, 1u, 1u))))) + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))) + 1) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (1u | 1u) * (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-68.80)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))))), 0.0, 1.0, 0.0, log(1.0), 0.0))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uint(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), mix(vec3(_GLF_FUZZED(79.62), (vec3(injectionSwitch, 1.0))[1], _GLF_FUZZED(-15.41)), vec3((vec3(injectionSwitch, 1.0))[0], _GLF_FUZZED(vec2(1105.1521, 79.58).s), (vec3(injectionSwitch, 1.0))[2]), bvec3(true, false, true))))).x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / sqrt(1.0))))) : _GLF_FUZZED(num_workgroup))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uint(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), mix(vec3(_GLF_FUZZED(79.62), (vec3(injectionSwitch, 1.0))[1], _GLF_FUZZED(-15.41)), vec3((vec3(injectionSwitch, 1.0))[0], _GLF_FUZZED(vec2(1105.1521, 79.58).s), (vec3(injectionSwitch, 1.0))[2]), bvec3(true, false, true))))).x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / sqrt(1.0))))) : _GLF_FUZZED(num_workgroup))))))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uint(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), mix(vec3(_GLF_FUZZED(79.62), (vec3(injectionSwitch, 1.0))[1], _GLF_FUZZED(-15.41)), vec3((vec3(injectionSwitch, 1.0))[0], _GLF_FUZZED(vec2(1105.1521, 79.58).s), (vec3(injectionSwitch, 1.0))[2]), bvec3(true, false, true))))).x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / sqrt(1.0))))) : _GLF_FUZZED(num_workgroup))))))), ((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uint(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), mix(vec3(_GLF_FUZZED(79.62), (vec3(injectionSwitch, 1.0))[1], _GLF_FUZZED(-15.41)), vec3((vec3(injectionSwitch, 1.0))[0], _GLF_FUZZED(vec2(1105.1521, 79.58).s), (vec3(injectionSwitch, 1.0))[2]), bvec3(true, false, true))))).x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / sqrt(1.0))))) : _GLF_FUZZED(num_workgroup)))))))) << 0u)) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uint(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), mix(vec3(_GLF_FUZZED(79.62), (vec3(injectionSwitch, 1.0))[1], _GLF_FUZZED(-15.41)), vec3((vec3(injectionSwitch, 1.0))[0], _GLF_FUZZED(vec2(1105.1521, 79.58).s), (vec3(injectionSwitch, 1.0))[2]), bvec3(true, false, true))))).x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / sqrt(1.0))))) : _GLF_FUZZED(num_workgroup))))))), ((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uint(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), mix(vec3(_GLF_FUZZED(79.62), (vec3(injectionSwitch, 1.0))[1], _GLF_FUZZED(-15.41)), vec3((vec3(injectionSwitch, 1.0))[0], _GLF_FUZZED(vec2(1105.1521, 79.58).s), (vec3(injectionSwitch, 1.0))[2]), bvec3(true, false, true))))).x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / sqrt(1.0))))) : _GLF_FUZZED(num_workgroup)))))))) << 0u))) * 1u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) >> 0u))))) ^ _GLF_IDENTITY((0u | 0u), min((0u | 0u), (0u | 0u)))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)))), _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) - 0u), workgroup_base), (false ? _GLF_FUZZED(workgroup_size) : clamp(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), ! (! ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false, true)))))))))) && true))) ? _GLF_FUZZED(num_workgroup) : workgroup_base), min((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), ! (! ((! (false))))) && true))) ? _GLF_FUZZED(num_workgroup) : workgroup_base), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), ! (! (((false)))))))), ! (! ((! (false))))) && true))) ? _GLF_FUZZED(num_workgroup) : workgroup_base), 0u ^ ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), ! (! ((! (false))))) && true))) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))))))), workgroup_base))) - 0u), workgroup_base)))) + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))) + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (1u | 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-68.80)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))))), 0.0, 1.0, 0.0, log(1.0), 0.0)))), clamp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-68.80)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))))), 0.0, 1.0, 0.0, log(1.0), 0.0)))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-68.80)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))))), 0.0, 1.0, 0.0, log(1.0), 0.0)))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-68.80)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))))), 0.0, 1.0, 0.0, log(1.0), 0.0))))))), (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-68.80)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))))), 0.0, 1.0, 0.0, log(1.0), 0.0)))), clamp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-68.80)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))))), 0.0, 1.0, 0.0, log(1.0), 0.0)))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-68.80)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))))), 0.0, 1.0, 0.0, log(1.0), 0.0)))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-68.80)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))))), 0.0, 1.0, 0.0, log(1.0), 0.0)))))))) / 1u), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uint(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(num_workgroup))))))) * 1u))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((1u | 1u), max((1u | 1u), (1u | 1u))) * (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-68.80)), bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))))), 0.0, 1.0, 0.0, log(1.0), 0.0))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uint(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7.6))) < injectionSwitch.y)) ? _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(num_workgroup)), ~ (~ (_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7.6))) < injectionSwitch.y)) ? _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(num_workgroup)), ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7.6))) < injectionSwitch.y)) ? _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(num_workgroup))) ^ 0u))))))))) * 1u))), min(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (1u | 1u) * _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-49.40))))), _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-68.80)), bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))))), 0.0, 1.0, 0.0, log(1.0), 0.0))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uint(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(num_workgroup))))))) * 1u)), max((_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-49.40))))), _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-68.80)), bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))))), 0.0, 1.0, 0.0, log(1.0), 0.0))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uint(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(num_workgroup))))))) * 1u)), (_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-49.40))))), _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-68.80)), bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))))), 0.0, 1.0, 0.0, log(1.0), 0.0))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uint(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(num_workgroup))))))) * 1u))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (1u | 1u) * (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-68.80)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, bool(bvec3(false, true, true))), false, false))))))), 0.0, 1.0, 0.0, log(1.0), 0.0))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), min((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) : _GLF_FUZZED(num_workgroup))))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), min((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) : _GLF_FUZZED(num_workgroup))))), max(uint(uint(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), min((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) : _GLF_FUZZED(num_workgroup))))), uint(uint(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), min((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) : _GLF_FUZZED(num_workgroup))))))))))) * 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (1u | 1u) * (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-68.80)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))))), 0.0, 1.0, 0.0, log(1.0), 0.0))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uint(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(num_workgroup))))))) * 1u))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (1u | 1u) * (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-68.80)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))))), 0.0, 1.0, 0.0, log(1.0), 0.0))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uint(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(num_workgroup))))))) * 1u))))), (~ (~ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (1u | 1u) * (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4.9, 2.3)) : injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-68.80)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.1)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))))), 0.0, 1.0, 0.0, log(1.0), 0.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uint(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(num_workgroup)))))), (true ? _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)), uint(uint(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y)) ? _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))), ((uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | ((uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) : _GLF_FUZZED(num_workgroup)))))) : _GLF_FUZZED(163679u)))) * 1u)))))) - 0u)))) >> _GLF_IDENTITY(uint(5u), uint(5u))))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) >> 0u), uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))) + 1) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, ~ (~ (1u))))))) | 1u) * _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / determinant(mat3(1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-68.80)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y), false, false, false))))))), 0.0, 1.0, 0.0, log(1.0), 0.0))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uint(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-117.053) : 0.0)), injectionSwitch.x)))) : _GLF_FUZZED(num_workgroup))))))) * 1u)), ~ (~ ((_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / determinant(mat3(1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-68.80)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y), false, false, false))))))), 0.0, 1.0, 0.0, log(1.0), 0.0))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uint(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-117.053) : 0.0)), injectionSwitch.x)))) : _GLF_FUZZED(num_workgroup))))))) * 1u)))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u))))))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) >> 0u), 0u), uvec2(uvec3(uvec2((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))) + 1), ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))) + 1)) >> 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))) + 1), ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))) + 1)) >> 0u)) | 0u) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), (1u | 1u) * (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-68.80)), bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(mat3x2(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))).x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))))), 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), log(1.0), _GLF_IDENTITY(0.0, (0.0) - 0.0)))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uint(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) - 0.0), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 1.0))), injectionSwitch.x)), injectionSwitch.x)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), true, false, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(num_workgroup))))))) * 1u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), uint(uvec4(_GLF_IDENTITY(min(subgroup_size, subgroup_size), uint(_GLF_IDENTITY(uvec4(min(subgroup_size, subgroup_size), 0u, 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), min(uvec4(min(subgroup_size, subgroup_size), 0u, 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), uvec4(min(subgroup_size, subgroup_size), 0u, 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))))), (101144u & 0u), 1u, 0u))))) >> 0u), _GLF_IDENTITY(0u, (0u) / 1u)), 1u))))))) / 1u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true))), false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))), (false) || false)) && true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true))), false)))))))))))), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7369.5378)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y) || false, ((injectionSwitch.x > injectionSwitch.y) || false) || false)))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || ((! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : virtual_gid))], (buf[virtual_gid]) - 0u)) | (buf[virtual_gid])), 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))), _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_WRAPPED_IF_TRUE(true)), true), _GLF_IDENTITY(bvec2(bvec2(bvec2((_GLF_WRAPPED_IF_TRUE(true)), true))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), ((_GLF_WRAPPED_IF_TRUE(true))) || false), true))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), ((_GLF_WRAPPED_IF_TRUE(true))) || false), true))))))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2((_GLF_WRAPPED_IF_TRUE(true)), true)))), true, true)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), ((_GLF_WRAPPED_IF_TRUE(true))) || false), true))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), ((_GLF_WRAPPED_IF_TRUE(true))) || false), true))))))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2((_GLF_WRAPPED_IF_TRUE(true)), true)))), true, true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), ((_GLF_WRAPPED_IF_TRUE(true))) || false), true))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), ((_GLF_WRAPPED_IF_TRUE(true))) || false), true))))))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2((_GLF_WRAPPED_IF_TRUE(true)), true)))), true, true))))))))))))), (bool(_GLF_IDENTITY(bvec2((_GLF_WRAPPED_IF_TRUE(true)), true), _GLF_IDENTITY(bvec2(bvec2(bvec2((_GLF_WRAPPED_IF_TRUE(true)), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2((_GLF_WRAPPED_IF_TRUE(true)), true)))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2((_GLF_WRAPPED_IF_TRUE(true)), true)), bvec2(bvec4(bvec2(bvec2((_GLF_WRAPPED_IF_TRUE(true)), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), true, true)))))))) || false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)) || (true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((_GLF_WRAPPED_IF_TRUE(true)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2((_GLF_WRAPPED_IF_TRUE(true)), true), bvec2(bvec4(bvec2((_GLF_WRAPPED_IF_TRUE(true)), true), true, true))), false))), _GLF_IDENTITY(bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), true))), bvec2(bvec2(bvec2(bvec2(bvec2((_GLF_WRAPPED_IF_TRUE(true)), true))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2((_GLF_WRAPPED_IF_TRUE(true)), true), _GLF_IDENTITY(bvec2(bvec2(bvec2((_GLF_WRAPPED_IF_TRUE(true)), true))), bvec2(bvec2(bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))), true))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))).y)), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (_GLF_IDENTITY(! ((true) && true), bool(bool(! ((true) && true)))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), true && (bool(bvec4(true, true, false, false)))), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (true) || false), false)), ! (! (bool(bvec2(_GLF_IDENTITY(true, (true) || false), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))), true, false, false)), true && (bool(bvec4(true, true, false, false)))), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true))))))), (bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))))) && true))), false)))) && (_GLF_WRAPPED_IF_TRUE(true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))))), bool(bool(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))))))))))))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), int(ivec4(_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 0, 0, 1))), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), int(ivec4(_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 0, 0, 1)))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), int(ivec4(_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 0, 0, 1))))), (1) | 0), 1))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), mix(vec2(_GLF_FUZZED(9.9), _GLF_FUZZED(-969.359)), vec2((vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))))[0], (vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).y)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0, 1.0, 0.0)))))).y, float(vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0, 1.0, 0.0)))))).y, 1.0, 0.0)))))) || false, ((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0, 1.0, 0.0)))))).y, float(vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0, 1.0, 0.0)))))).y, 1.0, 0.0)))))) || false) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - tan(0.0)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, ~ (~ (4))), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true))))))
    barrier();
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[virtual_gid], _GLF_IDENTITY(read, (read) | (read)), _GLF_IDENTITY(4, (false ? _GLF_FUZZED((54500 / -86306)) : _GLF_IDENTITY(4, (4) >> 0))), 64, 4);
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true, true)), bool(bvec3(bool(bvec4(false, false, true, true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  barrier();
}
