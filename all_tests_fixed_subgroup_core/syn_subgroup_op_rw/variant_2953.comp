#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bool(! (_GLF_IDENTITY(false, (false) && true)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (_GLF_IDENTITY(bool(bvec3(false, false, true)), false || (bool(bvec3(false, false, true))))))))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-58.75, 4.4)))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-58.75, 4.4)))).y, (false ? _GLF_FUZZED(-33.06) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-58.75, 4.4)))).y)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-58.75, 4.4)))).y, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-58.75, 4.4)))).y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) || false) && (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), false, true))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec3(false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) || false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(-9.8)), bool(false))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(-9.8)), bool(false))), false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(-9.8)), bool(false))), ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(-9.8)), bool(false))))))) || false), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(-9.8)), bool(false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(-9.8)), bool(false))), ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(-9.8)), bool(false))))))) || false)) || false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))).y, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), (float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) - 0.0), float(_GLF_FUZZED(-9.8)), bool(false)))), ! (! ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(-9.8)), bool(false)))))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(float(_GLF_FUZZED(-9.8)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(float(_GLF_FUZZED(-9.8)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, sqrt(1.0)), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, sqrt(1.0)), vec3(1.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-202.376 + 256.911))), float(1.0), bool(true))), 1.0, 1.0), mat3x2(mat3x2(mat3x2(float(_GLF_FUZZED(-9.8)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, sqrt(1.0)), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, sqrt(1.0)), vec3(1.0, 1.0, 0.0))), 1.0, 1.0, 1.0))))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(1756.5725), float(mat3(_GLF_FUZZED(1756.5725), sqrt(0.0), sqrt(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0)))), float(float(_GLF_IDENTITY(mat3x2(float(_GLF_FUZZED(-9.8)), 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, sqrt(1.0)), clamp(_GLF_IDENTITY(vec3(0.0, 0.0, sqrt(1.0)), min(vec3(0.0, 0.0, sqrt(1.0)), vec3(0.0, 0.0, sqrt(1.0)))), vec3(0.0, 0.0, sqrt(1.0)), vec3(0.0, 0.0, sqrt(1.0)))), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, sqrt(1.0)), vec3(1.0, 1.0, 0.0))), 1.0, 1.0, 1.0), mat3x2(mat3x2(mat3x2(float(_GLF_FUZZED(-9.8)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, sqrt(1.0)), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, sqrt(1.0)), vec3(1.0, 1.0, 0.0))), 1.0, 1.0, 1.0)))))), bool(true)))), bool(false)))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(2.5) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(-9.8)), bool(false)))))), (_GLF_IDENTITY(! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(false ? _GLF_FUZZED(2.5) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, clamp(false ? _GLF_FUZZED(2.5) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(false ? _GLF_FUZZED(2.5) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, max(false ? _GLF_FUZZED(2.5) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(false ? _GLF_FUZZED(2.5) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, clamp(false ? _GLF_FUZZED(2.5) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false ? _GLF_FUZZED(2.5) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false ? _GLF_FUZZED(2.5) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), _GLF_IDENTITY(false ? _GLF_FUZZED(2.5) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(2.5) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) / 1.0))))), mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(-9.8)), bool(false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(false ? _GLF_FUZZED(2.5) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, clamp(false ? _GLF_FUZZED(2.5) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(false ? _GLF_FUZZED(2.5) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, max(false ? _GLF_FUZZED(2.5) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(false ? _GLF_FUZZED(2.5) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, clamp(false ? _GLF_FUZZED(2.5) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false ? _GLF_FUZZED(2.5) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false ? _GLF_FUZZED(2.5) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), _GLF_IDENTITY(false ? _GLF_FUZZED(2.5) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(2.5) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) / 1.0))))), mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(-9.8)), bool(false)))))))), bool(bvec3(! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(2.5) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), mix(float(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch)).y), float(_GLF_FUZZED(-9.8)), bool(false)))))), true, true)))) && true)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(-9.8)), bool(false)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, sqrt(0.0)))))).y, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), max(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), max(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), max(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), min(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))), mix(float(_GLF_FUZZED(-0.2)), float(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), bool(true))))), float(_GLF_FUZZED(-9.8)), bool(false)), float(mat4(mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(7.2), ((injectionSwitch) * mat2(1.0))[1]), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED((919.744 - 4.1))), bvec2(true, false)))), min(injectionSwitch, injectionSwitch)).y), max(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), mix(float(_GLF_FUZZED(-0.2)), float(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), bool(true))))), float(_GLF_FUZZED(-9.8)), bool(false)), 0.0, 1.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), max(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), max(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(26.05)), bool(false))), 0.0, 1.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))) + 0.0)), 1.0, 1.0))))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), max(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), mix(float(_GLF_FUZZED(-0.2)), float(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), bool(true))))), float(_GLF_FUZZED(-9.8)), bool(false)), float(mat4(mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (true ? min(injectionSwitch, injectionSwitch) : _GLF_FUZZED(vec2(9.2, 9.5))))).y), max(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), (true ? float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) : _GLF_FUZZED(min(vec3(7.9, -7435.4352, 5470.0752), 9.6)[0]))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-0.2, (-0.2) * _GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(19.19))), injectionSwitch.y)))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), max(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), 0.0 + (float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))) || false)))))), float(_GLF_FUZZED(-9.8)), bool(false)), 0.0, 1.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))) + 0.0)), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)))))) && true))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), float(_GLF_FUZZED(-9.8)), bool(false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(-9.8)), bool(false))))), _GLF_IDENTITY(bool(bvec2(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(-9.8)), bool(false))))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(-9.8)), bool(false))))), false))), ! (! (! (bool(bvec2(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(-9.8)), bool(false))))), false))))))))), bool(bool(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(-9.8)), bool(false))))))))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(-9.8)), bool(false)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)))), min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(float(_GLF_FUZZED(-9.8)), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-9.8), min(_GLF_FUZZED(-9.8), _GLF_FUZZED(-9.8)))), clamp(float(_GLF_IDENTITY(_GLF_FUZZED(-9.8), max(_GLF_FUZZED(-9.8), _GLF_FUZZED(-9.8)))), float(_GLF_FUZZED(-9.8)), float(_GLF_FUZZED(-9.8))))), float(_GLF_FUZZED(17.96)), bool(false))), bool(false))))), bool(bool(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(-9.8)), _GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) || false))))))))))))), false || (bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(-9.8)), bool(false)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(-9.8)), bool(false))))), bool(bool(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(-9.8)), bool(false)), 1.0 * (mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(-9.8)), bool(false))))))))))))), true && (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(-9.8)), bool(false)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(-9.8)), bool(false))))), bool(bool(! ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(-9.8)), _GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec2(bool(false), false), bvec2(bvec2(bvec2(bool(false), false))))))))))))))))))))))))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || (_GLF_IDENTITY(true, true && (true))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! ((false))))), (! (_GLF_IDENTITY((false), ! (! ((false)))))) && true))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))), true && (false))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) >> uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(133148u, 197291u, 83643u)) : gl_NumWorkGroups))) | uvec3(0u, 0u, 0u)), gl_NumWorkGroups))) >> uvec3(0u, 0u, 0u), min((_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(133148u, 197291u, 83643u)) : gl_NumWorkGroups))) | uvec3(0u, 0u, 0u)), gl_NumWorkGroups))) >> uvec3(0u, 0u, 0u), (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(133148u, 197291u, 83643u)) : gl_NumWorkGroups))) | uvec3(0u, 0u, 0u)), gl_NumWorkGroups))) >> uvec3(0u, 0u, 0u))))))[1], gl_NumWorkGroups[2])).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))), true && (true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), ! (! (! ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))), true && (bool(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), ! (! (! ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))))))))))))) || false), true)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! _GLF_IDENTITY((bool(bool(true))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(bool(bool(true)), ! (! (_GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true)))))))), false)), (bool(bvec2((bool(bool(true))), false))) || false))))) && (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false), true))))), true, false, false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (! (false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-13.37)), float(injectionSwitch[1]), bool(true))))).y))) && true), false)))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(920.061, 4542.3531)))).y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 0u, _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 1u))))))), 1u))))), 0u ^ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))) | ((_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)))), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), min(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))) | ((_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)))), 0u, 0u, 1u)) << uvec4(0u, 0u, 0u, 0u))), (0u << _GLF_IDENTITY(uint(7u), uint(7u))) ^ (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))) | ((_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)))), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) + _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) | (0u)))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))) | ((_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)))), 0u, 0u, 1u)) << uvec4(0u, 0u, 0u, 0u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 0u, _GLF_IDENTITY(1u, 0u ^ (1u))))), 1u))))))) + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, (1u & 1u), _GLF_IDENTITY(0u, (0u) * 1u))), clamp(uint(uvec3(subgroup_local_id, (1u & 1u), 0u)), uint(uvec3(subgroup_local_id, (1u & _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << 0u), (_GLF_IDENTITY(1u, (1u) << 0u)) - 0u)), _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))))))), uint(uvec3(subgroup_local_id, _GLF_IDENTITY((1u & _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) << uvec2(0u, 0u))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))), uint(uvec4(uint(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, 1u)), (false ? _GLF_FUZZED(workgroup_base) : uint(uvec2(1u, 1u)))))), 1u, 0u, 0u))))), uint(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))))))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) & 1u), (_GLF_IDENTITY((1u & 1u), (_GLF_IDENTITY((1u & 1u), clamp(_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (_GLF_IDENTITY((1u & 1u), min((1u & 1u), (1u & 1u))))), (1u & 1u), (1u & 1u)))) / 1u)) - 0u)) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) & 1u), (_GLF_IDENTITY((1u & 1u), (_GLF_IDENTITY((1u & 1u), clamp(_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (_GLF_IDENTITY((1u & 1u), min((1u & 1u), (1u & 1u))))), (1u & 1u), (1u & 1u)))) / 1u)) - 0u)), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) & 1u), (_GLF_IDENTITY((1u & 1u), (_GLF_IDENTITY((1u & 1u), clamp(_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (_GLF_IDENTITY((1u & 1u), min((1u & 1u), (1u & 1u))))), (1u & 1u), (1u & 1u)))) / 1u)) - 0u)), ~ (~ ((_GLF_IDENTITY((_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) & 1u), (_GLF_IDENTITY((1u & 1u), (_GLF_IDENTITY((1u & 1u), clamp(_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (_GLF_IDENTITY((1u & 1u), min((1u & 1u), (1u & 1u))))), (1u & 1u), (1u & 1u)))) / 1u)) - 0u)))))) | (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) & 1u), (_GLF_IDENTITY((1u & 1u), (_GLF_IDENTITY((1u & 1u), clamp(_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (_GLF_IDENTITY((1u & 1u), min((1u & 1u), (1u & 1u))))), (1u & 1u), (1u & 1u)))) / 1u)) - 0u)), ((_GLF_IDENTITY((_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) & 1u), (_GLF_IDENTITY((1u & 1u), (_GLF_IDENTITY((1u & 1u), clamp(_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | (_GLF_IDENTITY((1u & 1u), min((1u & 1u), (1u & 1u))))), (1u & 1u), (1u & 1u)))) / 1u)) - 0u))) / 1u))) >> 0u) >> 0u)), 0u))))), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), uint(uvec4(subgroup_size, 1u, 0u, 1u))), 1u))))) + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, (1u & _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) >> 0u)) | 0u, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(workgroup_id) : (_GLF_IDENTITY(1u, (1u) >> 0u)) | 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * 1u), (_GLF_IDENTITY(0u, (0u) * 1u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp(uint(uvec3(subgroup_local_id, (1u & _GLF_IDENTITY(1u, 0u | (1u))), 0u)), uint(uvec3(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((1u & 1u), 0u ^ ((1u & 1u))), clamp((1u & 1u), (1u & 1u), (1u & 1u))), 0u)), uint(uvec3(subgroup_local_id, (_GLF_IDENTITY(1u & 1u, (_GLF_IDENTITY(1u & 1u, 0u | (1u & 1u))) | (_GLF_IDENTITY(1u & 1u, (1u & 1u) << 0u)))), 0u))))), _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), uint(uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u, 0u, 1u))), 1u))))) + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, (1u & 1u), _GLF_IDENTITY(0u, (0u) * 1u))), clamp(uint(uvec3(subgroup_local_id, (1u & 1u), _GLF_IDENTITY(0u, 1u * (0u)))), uint(uvec3(subgroup_local_id, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u)) / 1u) & 1u), 0u)), uint(uvec3(subgroup_local_id, (1u & 1u), 0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 0u, 1u))), 1u))))) + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, (1u & 1u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size)))) * 1u))), clamp(uint(uvec3(subgroup_local_id, (1u & 1u), 0u)), uint(uvec3(subgroup_local_id, (1u & 1u), 0u)), uint(uvec3(subgroup_local_id, (1u & _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) + 0u), _GLF_IDENTITY(1u, max(1u, 1u))))), 0u))))), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 0u, 1u))), 1u))))) + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, (1u & 1u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size)))) * 1u))), clamp(uint(uvec3(subgroup_local_id, (1u & 1u), 0u)), uint(uvec3(subgroup_local_id, (1u & 1u), 0u)), uint(uvec3(subgroup_local_id, (1u & _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) + 0u), _GLF_IDENTITY(1u, max(1u, 1u))))), 0u)))))) / 1u), (false ? _GLF_FUZZED(subgroup_id) : workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 1u * (~ (0u))))), 1u))), 1u))))) + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, (_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, 0u | (1u)), 1u)) & 1u), _GLF_IDENTITY(0u, (0u) * _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))), clamp(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, (1u & 1u), 0u), min(_GLF_IDENTITY(uvec3(subgroup_local_id, (1u & 1u), 0u), (false ? _GLF_FUZZED(uvec3(102518u, 14000u, 161807u)) : _GLF_IDENTITY(uvec3(subgroup_local_id, (1u & _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, 0u | (1u))))), 0u), (uvec3(subgroup_local_id, (1u & 1u), 0u)) | (_GLF_IDENTITY(uvec3(subgroup_local_id, (1u & 1u), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u, 1u)), ~ (~ (uint(uvec3(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u, 1u))))))), (uvec3(subgroup_local_id, (1u & 1u), 0u)) - uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(uvec3(subgroup_local_id, (1u & 1u), 0u), uvec3(uvec3(uvec3(subgroup_local_id, (1u & 1u), 0u))))))), uint(uvec3(subgroup_local_id, (1u & 1u), 0u)), uint(uvec3(subgroup_local_id, (1u & _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, max(1u, 1u))))), 0u)))))))), ((workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u & 110301u)))), max(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u, 0u, 1u))), 1u))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), _GLF_IDENTITY(uint(uvec3(subgroup_local_id, (1u & 1u), _GLF_IDENTITY(0u, (0u) * 1u))), clamp(uint(uvec3(subgroup_local_id, (1u & 1u), _GLF_IDENTITY(0u, 1u * (0u)))), uint(uvec3(subgroup_local_id, (1u & 1u), 0u)), uint(uvec3(subgroup_local_id, (1u & 1u), 0u)))))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 0u, 1u))), 1u))))) + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, (1u & 1u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size)))) * 1u))), clamp(uint(uvec3(subgroup_local_id, (1u & 1u), 0u)), uint(uvec3(subgroup_local_id, (1u & 1u), 0u)), uint(uvec3(subgroup_local_id, (1u & _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) + 0u), _GLF_IDENTITY(1u, max(1u, 1u))))), 0u))))), (false ? _GLF_FUZZED(subgroup_id) : workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), 1u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 1u * (~ (0u))))), 1u))), 1u))))) + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, (1u & 1u), _GLF_IDENTITY(0u, (0u) * _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))), clamp(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, (1u & 1u), 0u), min(_GLF_IDENTITY(uvec3(subgroup_local_id, (1u & 1u), 0u), (false ? _GLF_FUZZED(uvec3(102518u, 14000u, 161807u)) : _GLF_IDENTITY(uvec3(subgroup_local_id, _GLF_IDENTITY((1u & 1u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((1u & 1u)), max(_GLF_IDENTITY(((1u & 1u)), (((1u & 1u))) | 0u), ((1u & 1u)))), (~ ((1u & 1u))) | (~ ((1u & 1u)))))), 0u), (uvec3(subgroup_local_id, (1u & 1u), 0u)) | (uvec3(subgroup_local_id, (1u & 1u), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((workgroup_id - subgroup_local_id))))))))), _GLF_IDENTITY(uvec3(subgroup_local_id, (1u & 1u), 0u), uvec3(uvec3(uvec3(subgroup_local_id, (1u & 1u), 0u))))))), uint(uvec3(subgroup_local_id, (1u & 1u), 0u)), uint(uvec3(subgroup_local_id, (1u & _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, max(1u, 1u))))), 0u))))))))) - _GLF_IDENTITY(0u, (0u) | (0u))))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 0u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_size)))))), 1u)), max(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY(1u, max(1u, 1u)), 0u, 1u))), (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 0u, 1u)))) ^ 0u), 1u)), uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 0u, 1u))), 1u))))))), 0u ^ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 0u, 1u))), 1u)), max(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 0u, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 0u, 1u)))) ^ 0u, ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_size, 1u, 0u, 1u)), (uint(uvec4(subgroup_size, 1u, 0u, 1u))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), 0u ^ (max(0u, 0u))))) * 1u)), 1u)), clamp(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 0u, 1u))), (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), ~ (~ (_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), max(uvec4(subgroup_size, 1u, 0u, 1u), _GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), (uvec4(subgroup_size, 1u, 0u, 1u)) >> uvec4(0u, 0u, 0u, 0u)))))))))) ^ 0u), 1u)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_size, 1u, 0u, 1u)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(uvec4(subgroup_size, 1u, 0u, 1u)), (uint(uvec4(subgroup_size, 1u, 0u, 1u))) | (uint(uvec4(subgroup_size, 1u, 0u, 1u))))))), (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 0u, 1u)))) ^ 0u), 1u)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 0u, 1u))), (_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) >> 0u, max((subgroup_size) >> 0u, (subgroup_size) >> 0u)))) | (subgroup_size))) >> 0u), 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(workgroup_base) : 0u)), 1u)))) ^ 0u), 1u)))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 0u, 1u))), 1u), uvec2(0u, 0u) + (uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 0u, 1u))), 1u))))))))), uint(uint(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 0u, 1u))), 1u)), max(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 0u, 1u))), (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 0u, 1u)))) ^ 0u), 1u)), uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, (0u) | 0u), 1u))), 1u)))))))))))) + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_local_id, (1u & 1u), _GLF_IDENTITY(0u, (0u) * 1u))), clamp(uint(uvec3(subgroup_local_id, (1u & 1u), 0u)), uint(uvec3(subgroup_local_id, (1u & 1u), 0u)), uint(uvec3(subgroup_local_id, (1u & 1u), 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_local_id, (1u & 1u), _GLF_IDENTITY(0u, (0u) * 1u))), clamp(uint(uvec3(subgroup_local_id, (1u & 1u), 0u)), uint(uvec3(subgroup_local_id, (1u & 1u), 0u)), uint(uvec3(subgroup_local_id, (1u & 1u), 0u)))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_local_id, (1u & 1u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) * 1u))), clamp(uint(uvec3(subgroup_local_id, (1u & 1u), 0u)), uint(uvec3(subgroup_local_id, (1u & 1u), 0u)), uint(uvec3(subgroup_local_id, (1u & 1u), 0u)))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(uvec3(subgroup_local_id, (1u & 1u), _GLF_IDENTITY(0u, (0u) * _GLF_IDENTITY(1u, 0u ^ (1u))))), clamp(uint(uvec3(subgroup_local_id, (1u & _GLF_IDENTITY(1u, (1u) - 0u)), 0u)), uint(uvec3(subgroup_local_id, (1u & _GLF_IDENTITY(1u, ~ (~ (1u)))), 0u)), uint(uvec3(subgroup_local_id, (1u & 1u), 0u)))))), 0u, 1u, 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_local_id, (1u & 1u), _GLF_IDENTITY(0u, (0u) * 1u))), clamp(uint(uvec3(subgroup_local_id, (1u & 1u), 0u)), uint(uvec3(subgroup_local_id, (1u & 1u), 0u)), uint(uvec3(subgroup_local_id, (1u & 1u), 0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, (1u & 1u), _GLF_IDENTITY(0u, (0u) * 1u)), (_GLF_IDENTITY(uvec3(subgroup_local_id, (1u & 1u), _GLF_IDENTITY(0u, (0u) * 1u)), (uvec3(subgroup_local_id, (1u & 1u), _GLF_IDENTITY(0u, (0u) * 1u))) >> uvec3(0u, 0u, 0u))) | (uvec3(subgroup_local_id, (1u & 1u), _GLF_IDENTITY(0u, (0u) * 1u))))), clamp(uint(uvec3(subgroup_local_id, (1u & 1u), 0u)), uint(uvec3(subgroup_local_id, (1u & 1u), 0u)), uint(uvec3(subgroup_local_id, (1u & 1u), 0u))))) >> 0u))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))), (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) | (_GLF_FUZZED(num_workgroup))) : workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 0u))), 0u | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, min(0u, 0u)) | (subgroup_size)))))) / 1u)))), min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))), (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) | (_GLF_FUZZED(num_workgroup))) : workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 0u))), 0u | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, min(0u, 0u)) | (subgroup_size)))))) / 1u)))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))), (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) | (_GLF_FUZZED(num_workgroup))) : workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 0u))), 0u | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, min(0u, 0u)) | (subgroup_size)))))) / 1u))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), (_GLF_IDENTITY(max(4, 4), (max(4, 4)) << 0)) | (_GLF_IDENTITY(max(4, 4), (max(4, 4)) - 0)))), 64, 0);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read, clamp(read, read, read)), (read) - _GLF_IDENTITY(0u, (0u) / 1u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(read, (read) - _GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY(read, (read) - _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), 0u ^ (_GLF_IDENTITY(0u, (0u) / 1u))))) << 0u), _GLF_IDENTITY(read, (read) - _GLF_IDENTITY(0u, (0u) / 1u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read, (read) - _GLF_IDENTITY(0u, (0u) / 1u)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(read, (read) - _GLF_IDENTITY(0u, (0u) / 1u)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(read, (read) | (read)), (read) - _GLF_IDENTITY(0u, (0u) / 1u)), 0u)), (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(read, (read) | (read)), (read) - _GLF_IDENTITY(0u, (0u) / 1u)), 0u))) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))), 1u, 1u, 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read, (read) - _GLF_IDENTITY(0u, (0u) / 1u)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(read, (read) - _GLF_IDENTITY(0u, (0u) / 1u)), uint(uvec2(_GLF_IDENTITY(read, (read) - _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (true ? _GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), ((0u)) | ((0u))), _GLF_IDENTITY((0u), ~ (~ ((0u)))))) : _GLF_FUZZED(virtual_gid))) / 1u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (0u))))), 1u, 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(read, (read) - _GLF_IDENTITY(0u, (0u) / 1u)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(read, (read) - _GLF_IDENTITY(0u, (0u) / 1u)), uint(uvec2(_GLF_IDENTITY(read, (_GLF_IDENTITY(read, _GLF_IDENTITY(max(read, read), (max(read, read)) / 1u))) - _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) / 1u, ((0u) / 1u) - 0u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, (1u) | 0u), ((0u) / 1u) - 0u))))), 0u))), _GLF_IDENTITY(1u, (0u ^ 0u) + (1u)), 1u, 1u)))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(read, (read) - _GLF_IDENTITY(0u, (0u) / 1u)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read, (read) - _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), min(_GLF_IDENTITY((0u), clamp((0u), (0u), _GLF_IDENTITY((0u), ((0u)) | ((0u))))), _GLF_IDENTITY((0u), clamp((0u), (0u), (0u))))) / 1u)), uint(uvec2(_GLF_IDENTITY(read, (read) - _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u | ((0u))) / 1u)), 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read, (read) - _GLF_IDENTITY(0u, (0u) / 1u)), uint(uvec2(_GLF_IDENTITY(read, (read) - _GLF_IDENTITY(0u, (0u) / 1u)), 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(read, (read) - _GLF_IDENTITY(0u, (0u) / 1u)), uint(uvec2(_GLF_IDENTITY(read, (read) - _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (0u) / 1u)), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(read, (read) - _GLF_IDENTITY(0u, (0u) / 1u)), uint(uvec2(_GLF_IDENTITY(read, (read) - _GLF_IDENTITY(0u, (0u) / 1u)), 0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(read, (read) - _GLF_IDENTITY(0u, (0u) / 1u)), uint(uvec2(_GLF_IDENTITY(read, _GLF_IDENTITY((read), (_GLF_IDENTITY((read), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((read), ((read)) >> 0u), 1u, 0u), (uvec3(_GLF_IDENTITY((read), ((read)) >> 0u), 1u, 0u)) + uvec3(0u, 0u, 0u))))) >> 0u) - _GLF_IDENTITY(0u, (0u) / 1u)), 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read, (read) - _GLF_IDENTITY(0u, (0u) / 1u)), uint(uvec2(_GLF_IDENTITY(read, (read) - _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u ^ ((0u))) / 1u)), 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read, (read) - _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), _GLF_IDENTITY(uint(uvec4((0u), 0u, 1u, 0u)), ~ (~ (uint(uvec4((0u), 0u, 1u, 0u)))))) / 1u)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read, (read) ^ (0u | 0u)), min(read, _GLF_IDENTITY(read, (read) - 0u))), (read) - _GLF_IDENTITY(0u, (0u) / 1u)))), uint(uvec2(_GLF_IDENTITY(read, (read) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 1u)))) / 1u)), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(read, (read) - _GLF_IDENTITY(0u, (0u) / 1u)), uint(uvec2(_GLF_IDENTITY(read, (read) - _GLF_IDENTITY(0u, (0u) / 1u)), 0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(read, (read) - _GLF_IDENTITY(0u, (0u) / 1u)), uint(uvec2(_GLF_IDENTITY(read, (read) - _GLF_IDENTITY(0u, (0u) / 1u)), 0u))))) >> 0u)), 1u, 1u, 1u))))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (! (! (! (_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY(! (! (! (! (_GLF_DEAD(false))))), ! (! (! (! (! (! (_GLF_DEAD(false))))))))))))), bool(bvec4(_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (! (! (! (_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY(! (! (! (! (_GLF_DEAD(false))))), ! (! (! (! (! (! (_GLF_DEAD(false))))))))))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false)))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))))), _GLF_IDENTITY(true, true && (true)) && (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0)).y))))))))), true, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, ! (! (_GLF_IDENTITY((_GLF_DEAD(false)) || false, (_GLF_IDENTITY((_GLF_DEAD(false)) || false, true && ((_GLF_DEAD(false)) || false))) && true))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, true))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false))))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec3((_GLF_IDENTITY(false, ! (! (false)))), false, true)))) && true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))), false || (! (injectionSwitch.x > injectionSwitch.y))))))))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y), false || (! (injectionSwitch.x > injectionSwitch.y))))))))), false || (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3096.4233)), bool(false))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 1.0))), clamp(_GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 1.0)))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3096.4233)), _GLF_IDENTITY(bool(false), (bool(false)) || false))) > injectionSwitch.y)))))))
    barrier();
   atomicStore(buf[virtual_gid], read, _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (4) >> 0), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
