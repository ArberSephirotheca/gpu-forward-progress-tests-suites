#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_7 {
 uvec3 _f0;
 float _f1;
} ;

struct _GLF_struct_6 {
 ivec4 _f0;
 bool _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_5 {
 uvec2 _f0;
 vec2 _f1;
 vec3 _f2;
 ivec4 _f3;
 uvec3 _f4;
 ivec3 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_4 {
 uvec4 _f0;
 uvec3 _f1;
 bvec3 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_8 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_6 _f2;
 uint next_virtual_gid;
 _GLF_struct_7 _f3;
} ;

struct _GLF_struct_2 {
 mat2 _f0;
 mat3 _f1;
 mat3 _f2;
 mat2x3 _f3;
 uvec2 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_1 {
 bvec4 _f0;
 bvec4 _f1;
 vec2 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_0 {
 mat3x2 _f0;
 bvec2 _f1;
 bvec3 _f2;
 int _f3;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 bvec3 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 float _f4;
} ;

struct _GLF_struct_9 {
 _GLF_struct_3 _f0;
 ivec3 _f1;
 ivec3 _f2;
 mat3 _f3;
 mat2x4 _f4;
 _GLF_struct_8 _f5;
 mat3x2 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, bool(bvec4((_GLF_DEAD(false)) || false, true, true, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))), true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.3)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y)))), (_GLF_DEAD(false)) && true))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-7274.1958, 848.543)) : injectionSwitch)).y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))).x > injectionSwitch.y)))) && true))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true)), (bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))), true, false, true))) || false), (bool(bvec4(false, true, false, true))) || false), (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)), (bool(bvec4(false, true, false, true))) || false)) || _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true))) || false), (bool(bvec4(false, true, false, true))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true))) || false), (bool(bvec4(false, true, false, true))) || false)) && true), (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)), (bool(bvec4(false, true, false, true))) || false)) || _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))))), (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true))) || false), (bool(bvec4(false, true, false, true))) || false), (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)), (bool(bvec4(false, true, false, true))) || false)) || _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, _GLF_IDENTITY(true, true && (true)))), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true))) || false), (bool(bvec4(false, true, false, true))) || false), (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)), (bool(bvec4(false, true, false, true))) || false)) || _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true))) || false), (bool(bvec4(false, true, false, true))) || false), (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)), (bool(bvec4(false, true, false, true))) || false)) || _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true))))))), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true))) || false), (bool(bvec4(false, true, false, true))) || false), (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)), (bool(bvec4(false, true, false, true))) || false)) || _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true))) || false), (bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true))) || false), (bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true))) || false)) || false), (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)), (bool(bvec4(false, true, false, true))) || false)) || _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true))) || false), (bool(bvec4(false, true, false, true))) || false), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)), (bool(bvec4(false, true, false, true))) || false)), ((_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)), (bool(bvec4(false, true, false, true))) || false))) || false) || _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), (injectionSwitch.x > injectionSwitch.y))))))))))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true))) || false), (bool(bvec4(false, true, false, true))) || false), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)), (bool(bvec4(false, true, false, true))) || false)) || _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)), (bool(bvec4(false, true, false, true))) || false)) || _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), true && ((_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)), (bool(bvec4(false, true, false, true))) || false)) || _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)), (bool(bvec4(false, true, false, true))) || false)) || _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), true && ((_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)), (bool(bvec4(false, true, false, true))) || false)) || _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)), (bool(bvec4(false, true, false, true))) || false)) || _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), true && ((_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)), (bool(bvec4(false, true, false, true))) || false)) || _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))))))), true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true)), (bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))))), true, false, true))) || false), (bool(bvec4(false, true, false, true))) || false), (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)), (bool(bvec4(false, true, false, true))) || false)) || _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true))) || false), (bool(bvec4(false, true, false, true))) || false), (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)), (bool(bvec4(false, true, false, true))) || false)) || _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true))) || false), (bool(bvec4(false, true, false, true))) || false), (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)), (_GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)), (bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))) && true))) || false), true)), _GLF_IDENTITY((bool(bvec4(false, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)), (bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))) && true))) || false), true))) || false, ((_GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)), (bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))) && true))) || false), true)), (bool(bvec4(false, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)), (bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))) && true))) || false), true))) || false)) || false) || false))) || _GLF_IDENTITY(false, false || (false)))) || _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)))))), true)))), true, _GLF_IDENTITY(true, bool(bvec2(true, false)))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(13.31), _GLF_FUZZED(673.936)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))) * exp(0.0)) < injectionSwitch.y)) && (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * exp(0.0), (_GLF_IDENTITY((injectionSwitch.x) * exp(0.0), clamp((injectionSwitch.x) * exp(0.0), _GLF_IDENTITY((injectionSwitch.x) * exp(0.0), min((injectionSwitch.x) * exp(0.0), (injectionSwitch.x) * exp(0.0))), (injectionSwitch.x) * exp(0.0)))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), mix(float(_GLF_FUZZED(1.4)), float(dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), bool(true)))))) < injectionSwitch.y)) && (false)), false), false))))).x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || false)))))))
              barrier();
             barrier();
            }
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(203.517)), vec2(_GLF_FUZZED(-4739.5956), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(838.067, 3.7)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(959.737)), vec2(_GLF_FUZZED(-7.0), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), max(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))) || false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))) && true) && _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false || (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(260.928)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))), (false || (! _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(260.928)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(260.928)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (! ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(260.928)), (float(_GLF_FUZZED(260.928))) / 1.0), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false || (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(260.928)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))), (false || (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(260.928)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(260.928)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (! ((! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(260.928)), (float(_GLF_FUZZED(260.928))) / 1.0), float(injectionSwitch.x), bool(true))), min(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(260.928)), (float(_GLF_FUZZED(260.928))) / 1.0), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(260.928)), (float(_GLF_FUZZED(260.928))) / 1.0), float(injectionSwitch.x), bool(true))), (false ? _GLF_FUZZED(-1.0) : _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(260.928)), (float(_GLF_FUZZED(260.928))) / 1.0), float(injectionSwitch.x), bool(true))))))) > injectionSwitch.y)))))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(260.928)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(260.928)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (! ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(260.928)), (float(_GLF_FUZZED(260.928))) / 1.0), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))))), bool(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(260.928)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(260.928)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(260.928)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), false, false)))), (bool(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(260.928)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(260.928)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), false, false))))) && true)))), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(260.928)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (! ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(260.928)), (float(_GLF_FUZZED(260.928))) / 1.0), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))))), false)))) && true))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.4), _GLF_FUZZED(-87.63)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y)))), _GLF_IDENTITY(false || (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(260.928), (true ? _GLF_IDENTITY(_GLF_FUZZED(260.928), mix(float(_GLF_FUZZED(8.4)), float(_GLF_FUZZED(260.928)), bool(true))) : _GLF_FUZZED(-81.26)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))), (false || (! _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(260.928)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(260.928)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (! ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(260.928)), (float(_GLF_FUZZED(260.928))) / 1.0), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), min(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))))))))))))))))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (_GLF_IDENTITY(! (! (true)), (! (! (true))) || false))))) || false))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))))), bool(bvec2(false, false)))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))) || false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-372.855) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec2(1.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0))), 1.0, 1.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, sin(0.0))), (vec2(mat4(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec2(1.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0))), 1.0, 1.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, sin(0.0)))) - tan(vec2(0.0, 0.0)))).x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false) && (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), false || ((false)))) || false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)).x));
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mod(vec2(7.7, -939.589), injectionSwitch)) : injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), injectionSwitch)), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0))).y)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | 0u, _GLF_IDENTITY(uint(uvec4((subgroup_id) | 0u, 0u, 0u, 1u)), (uint(uvec4((subgroup_id) | 0u, 0u, 0u, 1u))) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))), subgroup_id), max(clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 0u, ((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), 1u * (_GLF_IDENTITY(uint(7u), (uint(7u)) - 0u))))) >> _GLF_IDENTITY(uint(7u), uint(7u))))), (uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))), clamp(uvec3(subgroup_id, 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))), uvec3(subgroup_id, 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))), uvec3(subgroup_id, 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))))) / 1u)), subgroup_id, subgroup_id))) | 0u), subgroup_id), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), subgroup_id)))), uint(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) - 0u))))) * subgroup_size, uint(uint(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) << 0u), _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (_GLF_IDENTITY(uint(subgroup_id), (_GLF_IDENTITY(uint(subgroup_id), 0u ^ (uint(subgroup_id)))) | (uint(subgroup_id)))) - 0u)))), (clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) << 0u), _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (_GLF_IDENTITY(uint(subgroup_id), (_GLF_IDENTITY(uint(subgroup_id), 0u ^ (uint(subgroup_id)))) | _GLF_IDENTITY((uint(subgroup_id)), 1u * ((uint(subgroup_id)))))) - 0u))))) >> 0u)) * subgroup_size, 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) - 0u))))) * subgroup_size))))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3041.1359)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3041.1359)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3041.1359)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), false, true, true)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3041.1359)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), false, true, true))))))) || false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_3(_GLF_struct_0(mat3x2(1.0), bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), _GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true))), 1), bvec3(true), _GLF_struct_1(bvec4(true), bvec4(true), _GLF_IDENTITY(vec2(1.0), vec2(vec2(vec2(1.0)))), mat2x3(1.0)), _GLF_struct_2(mat2(1.0), mat3(1.0), mat3(1.0), mat2x3(1.0), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (_GLF_IDENTITY(uvec2(1u), (_GLF_IDENTITY(uvec2(1u), ~ (~ (uvec2(1u))))) | (uvec2(1u))))), vec3(1.0)), 1.0), ivec3(1), ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) | 0)), 1, 1))), mat3(1.0), mat2x4(1.0), _GLF_struct_8(_GLF_struct_4(uvec4(1u), uvec3(_GLF_IDENTITY(1u, 0u | (1u))), _GLF_IDENTITY(bvec3(true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true))), false))), mat4x3(1.0)), _GLF_struct_5(uvec2(1u), vec2(1.0), vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(1.0, 1.0, abs(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6477.7265)), float(0.0), bool(true)))) * 1.0), 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), float(_GLF_IDENTITY(mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0)), 0.0, 1.0, 0.0), (mat2(float(mat4x3(1.0, 1.0, abs(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / determinant(mat4(1.0, log(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))).y), 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0))))), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0)) - mat2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(58.95)), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0)), 1.0, abs(0.0), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, abs(0.0), 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, abs(0.0), 0.0)))), mat3x4(mat4(mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0)), 1.0, abs(0.0), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, abs(0.0), 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, abs(0.0), 0.0))))))))) * (0.0))), bool(true))), 0.0, 0.0)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), clamp(min(0.0, 0.0), min(0.0, 0.0), min(0.0, 0.0)))), 1.0, 1.0)), float(_GLF_IDENTITY(mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0), _GLF_IDENTITY((mat2(float(mat4x3(1.0, 1.0, _GLF_IDENTITY(abs(0.0), 1.0 * (_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0))))), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0, 1.0, 0.0)), (true ? (mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0)) : _GLF_FUZZED(mat2(-4180.7761, -1.3, -1645.6807, -6.3)))) - mat2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(58.95)), float(0.0), bool(true))), 0.0, 0.0)))) : _GLF_FUZZED(sqrt(7.7))), min(_GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), clamp(min(0.0, 0.0), min(0.0, 0.0), min(0.0, 0.0)))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), float(_GLF_IDENTITY(mat2(float(mat4x3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(length(vec3(12.58, _GLF_IDENTITY(-152.261, max(-152.261, -152.261)), -47.48))) : 1.0)), 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)), _GLF_IDENTITY((mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0))), 0.0)), (true ? (mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0)) : _GLF_FUZZED(mat2(-4180.7761, -1.3, _GLF_IDENTITY(-1645.6807, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(-1645.6807, (-1645.6807) / 1.0), 0.0, 1.0, 0.0, 0.0, 1.0)), (float(mat2x3(_GLF_IDENTITY(-1645.6807, (-1645.6807) / 1.0), 0.0, 1.0, 0.0, 0.0, 1.0))) - 0.0)), -6.3)))) - mat2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(58.95)), float(0.0), bool(true))), 0.0, 0.0)))) : _GLF_FUZZED(sqrt(7.7))), min((true ? _GLF_IDENTITY(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), clamp(min(0.0, 0.0), min(0.0, 0.0), min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))), min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), clamp(min(0.0, 0.0), min(0.0, 0.0), min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), clamp(min(0.0, 0.0), min(0.0, 0.0), min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(683.888)), float(1.0), bool(true))), 1.0)), float(_GLF_IDENTITY(mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0), (true ? _GLF_IDENTITY(mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0), (true ? mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0) : _GLF_FUZZED(mat2(9.9, 49.38, 975.033, -5.4)))) : _GLF_FUZZED(mat2(505.936, 8.6, -4.4, -5.0)))), transpose(transpose(_GLF_IDENTITY(mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0), (true ? _GLF_IDENTITY(mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.4) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(190.112)))))), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))), (true ? mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0) : _GLF_FUZZED(mat2(9.9, 49.38, 975.033, -5.4)))) : _GLF_FUZZED(mat2(505.936, 8.6, -4.4, -5.0)))))))) / mat2(1.0, 1.0, 1.0, 1.0))), (true ? (mat2(_GLF_IDENTITY(float(mat4x3(1.0, 1.0, abs(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), float(mat3x4(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))), 1.0, 0.0, 1.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(196.934))), 0.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)) : _GLF_FUZZED(mat2(-4180.7761, -1.3, -1645.6807, -6.3)))) - mat2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(58.95)), float(0.0), bool(true))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(58.95)), float(0.0), bool(true)))) * 1.0), 0.0, 0.0)))) : _GLF_FUZZED(sqrt(7.7))), (true ? _GLF_IDENTITY(float(mat4x3(1.0, 1.0, _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), _GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(abs(0.0), float(mat3(abs(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))) - 0.0), _GLF_IDENTITY(abs(0.0), max(abs(0.0), _GLF_IDENTITY(abs(0.0), (abs(0.0)) - 0.0))))), 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), _GLF_IDENTITY(0.0, float(vec3(0.0, _GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(log(-95.76)) : 1.0)), injectionSwitch.y), 0.0))))), tan(0.0), sin(0.0), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(min(0.0, 0.0), clamp(min(0.0, 0.0), min(0.0, 0.0), min(0.0, 0.0)))), 1.0, 1.0)), float(_GLF_IDENTITY(mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0)), 0.0, 1.0, 0.0), _GLF_IDENTITY((mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0)), (true ? (mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0)) : _GLF_FUZZED(mat2(-4180.7761, -1.3, -1645.6807, -6.3)))) - mat2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(58.95)), float(0.0), bool(true))), 0.0, 0.0)))) : _GLF_FUZZED(sqrt(_GLF_IDENTITY(7.7, clamp(7.7, 7.7, 7.7))))))), (_GLF_IDENTITY((true ? _GLF_IDENTITY(float(mat4x3(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), abs(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.4)), float(0.0), bool(true)))), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), clamp(min(0.0, 0.0), min(0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), min(0.0, 0.0)))), 1.0, 1.0)), float(_GLF_IDENTITY(mat2(float(mat4x3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(length(vec3(12.58, -152.261, -47.48))) : 1.0)), 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0), _GLF_IDENTITY((mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0))), 0.0)), _GLF_IDENTITY((true ? (mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0)) : _GLF_FUZZED(mat2(-4180.7761, -1.3, -1645.6807, -6.3))), _GLF_IDENTITY((_GLF_IDENTITY((true ? (mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0)) : _GLF_FUZZED(mat2(-4180.7761, -1.3, -1645.6807, -6.3))), (false ? _GLF_FUZZED((30.74 + mat2(824.140, -4.2, 94.76, -84.82))) : _GLF_IDENTITY((true ? _GLF_IDENTITY((mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0)))) : _GLF_FUZZED(mat2(-4180.7761, -1.3, -1645.6807, -6.3))), mat2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(0.0, 0.0, 1.0, 0.0), mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat2(0.0, 0.0, 1.0, 0.0))))), 0.0, 0.0, 0.0) + (_GLF_IDENTITY((true ? (mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0)) : _GLF_FUZZED(mat2(-4180.7761, -1.3, -1645.6807, -6.3))), _GLF_IDENTITY(transpose(transpose(_GLF_IDENTITY((true ? (mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0)) : _GLF_FUZZED(mat2(-4180.7761, -1.3, -1645.6807, -6.3))), mat2(mat4((true ? (mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0)) : _GLF_FUZZED(mat2(-4180.7761, -1.3, -1645.6807, -6.3)))))))), transpose(transpose(_GLF_IDENTITY(transpose(transpose(_GLF_IDENTITY((true ? (mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0)) : _GLF_FUZZED(mat2(-4180.7761, -1.3, -1645.6807, -6.3))), mat2(mat4((true ? (mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0)) : _GLF_FUZZED(mat2(-4180.7761, -1.3, -1645.6807, -6.3)))))))), mat2(1.0) * (transpose(transpose(_GLF_IDENTITY((true ? (mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0)) : _GLF_FUZZED(mat2(-4180.7761, -1.3, -1645.6807, -6.3))), mat2(mat4((true ? (mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0)) : _GLF_FUZZED(mat2(-4180.7761, -1.3, -1645.6807, -6.3))))))))))))))))))) / mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0), ((_GLF_IDENTITY((true ? (mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0)) : _GLF_FUZZED(mat2(-4180.7761, -1.3, -1645.6807, -6.3))), (false ? _GLF_FUZZED((30.74 + mat2(824.140, -4.2, 94.76, -84.82))) : _GLF_IDENTITY((true ? _GLF_IDENTITY((mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0)))) : _GLF_FUZZED(mat2(-4180.7761, -1.3, -1645.6807, -6.3))), mat2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(0.0, 0.0, 1.0, 0.0), mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat2(0.0, 0.0, 1.0, 0.0))))), 0.0, 0.0, 0.0) + (_GLF_IDENTITY((true ? (mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0)) : _GLF_FUZZED(mat2(-4180.7761, -1.3, -1645.6807, -6.3))), _GLF_IDENTITY(transpose(transpose(_GLF_IDENTITY((true ? (mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0)) : _GLF_FUZZED(mat2(-4180.7761, -1.3, -1645.6807, -6.3))), mat2(mat4((true ? (mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0)) : _GLF_FUZZED(mat2(-4180.7761, -1.3, -1645.6807, -6.3)))))))), transpose(transpose(_GLF_IDENTITY(transpose(transpose(_GLF_IDENTITY((true ? (mat2(float(mat4x3(1.0, 1.0, abs(0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0)) : _GLF_FUZZED(mat2(-4180.7761, -1.3, -1645.6807, -6.3))), mat2(mat4((true ? (mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0)) : _GLF_FUZZED(mat2(-4180.7761, -1.3, -1645.6807, -6.3)))))))), mat2(1.0) * (transpose(transpose(_GLF_IDENTITY((true ? (mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0)) : _GLF_FUZZED(mat2(-4180.7761, -1.3, -1645.6807, -6.3))), mat2(mat4((true ? (mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0)) : _GLF_IDENTITY(_GLF_FUZZED(mat2(-4180.7761, -1.3, -1645.6807, -6.3)), mat2(mat4(_GLF_FUZZED(mat2(-4180.7761, -1.3, -1645.6807, -6.3)))))))))))))))))))))) / mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0)) + mat2(0.0, 0.0, 0.0, 0.0)))) - mat2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(58.95)), float(0.0), bool(true))), 0.0, 0.0)))) : _GLF_FUZZED(sqrt(7.7))), min((true ? _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), clamp(_GLF_IDENTITY(min(0.0, 0.0), float(mat4(min(0.0, 0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, tan(0.0), 1.0, 1.0, 0.0, 1.0, 1.0))), min(0.0, 0.0), min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))), 1.0, 1.0)), (false ? _GLF_FUZZED(fract(-1349.8950)) : float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), clamp(_GLF_IDENTITY(min(0.0, 0.0), float(mat4(min(0.0, 0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, tan(0.0), 1.0, 1.0, 0.0, 1.0, 1.0))), min(0.0, 0.0), min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))), 1.0, 1.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0), (mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0))), (true ? (mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))) : _GLF_FUZZED(mat2(-4180.7761, -1.3, -1645.6807, -6.3)))) - mat2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(58.95)), _GLF_IDENTITY(float(mat3x4(float(_GLF_FUZZED(58.95)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(7177.9066) : float(mat3x4(float(_GLF_FUZZED(58.95)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(float(0.0), _GLF_IDENTITY(float(mat4(float(0.0), sqrt(0.0), 0.0, determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, length(0.0), 1.0), transpose(_GLF_IDENTITY(transpose(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, length(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0)), transpose(_GLF_IDENTITY(transpose(transpose(mat4(1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, length(0.0), 1.0))), (transpose(transpose(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, length(0.0), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), 1.0, determinant(mat4(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(6549.2438) : 0.0)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 0.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(-38.29)), bool(false)))), vec2(1.0, 0.0)), float(vec3(dot(vec2(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 0.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(-38.29)), bool(false)))), vec2(1.0, 0.0)), 0.0, 0.0))), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-8.1) : _GLF_IDENTITY(float(mat4(float(0.0), sqrt(0.0), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, length(0.0), 1.0)), 1.0, determinant(mat4(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), tan(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((true ? 863.231 : 8956.3284))), bool(false))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), (float(mat4(float(0.0), sqrt(0.0), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, exp(0.0) * (0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, length(0.0), 1.0)), 1.0, determinant(mat4(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))) - 0.0)))), bool(true))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(58.95)), float(0.0), bool(true)))) * 1.0), 0.0, 0.0)), (_GLF_IDENTITY(mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0), (mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0))), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) + 0.0))) / mat2(1.0, 1.0, 1.0, 1.0))), (true ? (mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (1.0) + length(0.0))), min(max(1.0, _GLF_IDENTITY(1.0, (1.0) + length(0.0))), _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (1.0) + length(0.0))), float(mat2(max(1.0, _GLF_IDENTITY(1.0, (1.0) + length(0.0))), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0)))))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0)))), 0.0)) : _GLF_FUZZED(mat2(-4180.7761, -1.3, -1645.6807, -6.3)))) - mat2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(58.95)), float(0.0), bool(true))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(58.95)), float(0.0), bool(true)))) * 1.0), 0.0, 0.0))) - mat2(0.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED(sqrt(7.7))), (true ? _GLF_IDENTITY(float(mat4x3(1.0, 1.0, abs(0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(5.7)), float(0.0), bool(true))), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), _GLF_IDENTITY(0.0, float(vec3(0.0, _GLF_ONE(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1478.1716) : 1.0)), _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(3831.3129, -275.541), clamp(vec2(3831.3129, -275.541), _GLF_IDENTITY(vec2(3831.3129, -275.541), (vec2(3831.3129, -275.541)) / vec2(1.0, 1.0)), vec2(3831.3129, -275.541)))))).y), 0.0))))), tan(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(624.550)), bool(false)))), sin(0.0), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(min(0.0, 0.0), clamp(min(0.0, 0.0), min(0.0, 0.0), min(0.0, 0.0)))), 1.0, 1.0)), float(_GLF_IDENTITY(mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0)), 0.0, 1.0, 0.0), _GLF_IDENTITY((mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0)), _GLF_IDENTITY((true ? (mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0)) : _GLF_FUZZED(_GLF_IDENTITY(mat2(-4180.7761, -1.3, -1645.6807, _GLF_IDENTITY(-6.3, (-6.3) / 1.0)), (mat2(-4180.7761, -1.3, -1645.6807, _GLF_IDENTITY(-6.3, (-6.3) / 1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), mat2(1.0) * ((true ? (mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0)) : _GLF_FUZZED(_GLF_IDENTITY(mat2(-4180.7761, -1.3, -1645.6807, _GLF_IDENTITY(-6.3, (-6.3) / 1.0)), (mat2(-4180.7761, -1.3, -1645.6807, _GLF_IDENTITY(-6.3, (-6.3) / 1.0))) / mat2(1.0, 1.0, 1.0, 1.0))))))) - mat2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(58.95)), float(0.0), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(58.95)), float(0.0), bool(true)), (mix(float(_GLF_FUZZED(58.95)), float(0.0), bool(true))) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))) / 1.0)), 0.0, 0.0)))) : _GLF_FUZZED(sqrt(7.7)))))) + 0.0), (true ? _GLF_IDENTITY(float(mat4x3(1.0, 1.0, abs(0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(vec2(4.3, -3975.8345).g), float(vec3(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(4.3, -3975.8345), (false ? _GLF_FUZZED(vec2(-363.905, -38.13)) : vec2(4.3, -3975.8345))).g), mix(float(_GLF_FUZZED(vec2(4.3, -3975.8345).g)), float(_GLF_FUZZED((0.4))), bool(false))), 1.0, 1.0)))), float(0.0), bool(true))), 0.0, 0.0, tan(0.0), sin(0.0), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), clamp(min(0.0, 0.0), min(0.0, 0.0), min(0.0, 0.0)))), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0), (mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY((mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, _GLF_IDENTITY(0.0, cos(0.0) * (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), min(_GLF_IDENTITY(max(1.0, 1.0), float(mat3x4(max(1.0, 1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), max(1.0, 1.0)))), clamp(1.0, 1.0, 1.0)), 0.0)), (true ? (mat2(float(mat4x3(1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 0.0, 1.0)))) * 1.0), 0.0)) : _GLF_FUZZED(mat2(-4180.7761, -1.3, -1645.6807, -6.3)))) - mat2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(58.95)), float(0.0), bool(true))), 0.0, 0.0)))) : _GLF_FUZZED(sqrt(7.7)))))))), ivec4(1), uvec3(1u), ivec3(1), ivec2(_GLF_IDENTITY(1, min(1, 1)))), _GLF_struct_6(ivec4(1), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), bvec4(true)), workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))), (false ? _GLF_FUZZED(subgroup_size) : (subgroup_local_id + 1))) % subgroup_size), _GLF_struct_7(uvec3(1u), 1.0)), mat3x2(1.0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, false)), bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, false))), bool(bvec2(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, false))), bool(bool(bool(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, false)))))), false))))), true, true, true)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), bool(bool(bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), true && (! (! (! (false)))))))), true)))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0), injectionSwitch.y), (max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0), injectionSwitch.y)) + 0.0))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(false)))))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) * abs(1.0)))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), min(injectionSwitch, injectionSwitch)).y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | 0u), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)), min((_GLF_IDENTITY(64, (64) >> _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, max(0, 0))))), min((_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, max(0, 0))))), (_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, max(0, 0))))))) << _GLF_IDENTITY(0, min(0, 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((64) >> 0, ((64) >> 0) | ((64) >> 0))), ~ (~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64) >> 0, ((64) >> _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(findMSB(workgroup_size))))) | ((64) >> 0))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)), min((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) | (64))) >> 0)), (_GLF_IDENTITY(64, (64) >> 0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((_GLF_IDENTITY(64, (64) >> 0)))), min((_GLF_IDENTITY(64, (64) >> _GLF_IDENTITY(0, ~ (~ (0))))), (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 64 : _GLF_FUZZED((-58380))))) >> 0)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) >> _GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1)))), (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) >> _GLF_IDENTITY(0, int(ivec4(0, _GLF_IDENTITY(1, 0 | (1)), 1, 1))))) / int(_GLF_ONE(1.0, injectionSwitch.y)))), min(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY((64) >> 0, clamp((64) >> 0, (64) >> 0, (64) >> 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)), (_GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)), ((_GLF_IDENTITY(64, (64) >> 0))) / 1)) | ((0 << _GLF_IDENTITY(int(6), int(6))) | 0))) << 0), (_GLF_IDENTITY(64, (64) >> 0))))), clamp((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) >> _GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1)))), (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) >> _GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))))) / int(_GLF_ONE(1.0, injectionSwitch.y)))), min(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY((64) >> 0, clamp(_GLF_IDENTITY((64), ((64)) >> 0) >> 0, (64) >> 0, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(64, (64) >> 0), 1, 1), clamp(ivec3(_GLF_IDENTITY(64, (64) >> 0), 1, 1), ivec3(_GLF_IDENTITY(64, (64) >> 0), 1, 1), ivec3(_GLF_IDENTITY(64, (64) >> 0), 1, 1)))))) | (64))) >> 0)))), ((_GLF_IDENTITY(64, (64) >> 0))) << 0), (_GLF_IDENTITY(64, (64) >> 0))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) >> _GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1)))), (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) >> _GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))))) / int(_GLF_ONE(1.0, injectionSwitch.y)))), min(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY((64) >> 0, clamp((64) >> 0, (64) >> 0, (64) >> 0)))), ((_GLF_IDENTITY(64, (64) >> 0))) << 0), (_GLF_IDENTITY(64, (64) >> 0))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, ~ (~ (64)))), ((_GLF_IDENTITY(64, ~ (~ (64))))) - 0) >> _GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1)))), (_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, ~ (~ (64)))) >> _GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))), min((_GLF_IDENTITY(64, ~ (~ (64)))) >> _GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))), (_GLF_IDENTITY(64, ~ (~ (64)))) >> _GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))))))) / int(_GLF_ONE(1.0, injectionSwitch.y)))), min(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY((64) >> 0, clamp((64) >> 0, (64) >> 0, (64) >> 0)))), ((_GLF_IDENTITY(64, (64) >> 0))) << 0), (_GLF_IDENTITY(64, (64) >> 0))))))) - 0), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)), min((_GLF_IDENTITY(64, (64) >> 0)), (_GLF_IDENTITY(64, (64) >> 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)), min((_GLF_IDENTITY(64, (64) >> 0)), (_GLF_IDENTITY(64, (64) >> 0))))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) | 0)))))), min((_GLF_IDENTITY(64, (64) >> 0)), (_GLF_IDENTITY(64, (64) >> 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), (64) >> 0)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), (64) >> 0)), 0 | ((_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY((64), 0 | (_GLF_IDENTITY((64), ((64)) | 0))) >> 0)))), 1, 0), (ivec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), (64) >> 0)), 0 | ((_GLF_IDENTITY(_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (64)), ~ (_GLF_IDENTITY(~ ((~ (64))), (~ ((~ (64)))) | (~ ((~ (64)))))))), (64) >> 0)))), 1, 0)) | ivec3(0, 0, 0)))), (_GLF_IDENTITY(64, (64) >> 0))))) - 0)) - 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)), min((_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (64) >> 0)), (_GLF_IDENTITY(64, (64) >> 0)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)), ((_GLF_IDENTITY(64, (64) >> 0))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(min((_GLF_IDENTITY(64, (64) >> 0)), (_GLF_IDENTITY(64, (64) >> 0))), (true ? min((_GLF_IDENTITY(64, (64) >> 0)), (_GLF_IDENTITY(64, (64) >> 0))) : _GLF_FUZZED(17448))))) - 0), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)), min((_GLF_IDENTITY(_GLF_IDENTITY(64, 0 | (64)), (64) >> 0)), (_GLF_IDENTITY(64, (64) >> 0)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)), min((_GLF_IDENTITY(64, (64) >> 0)), (_GLF_IDENTITY(64, _GLF_IDENTITY((64) >> 0, ((64) >> 0) + 0)))))) - 0, (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)), min((_GLF_IDENTITY(64, (64) >> 0)), (_GLF_IDENTITY(64, (64) >> 0))))) - 0, ((_GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)), min((_GLF_IDENTITY(64, (64) >> 0)), (_GLF_IDENTITY(64, (64) >> 0))))) - 0) << 0)) | ((_GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)), min((_GLF_IDENTITY(64, (64) >> 0)), (_GLF_IDENTITY(64, (64) >> 0))))) - 0))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)), min((_GLF_IDENTITY(64, (64) >> 0)), (_GLF_IDENTITY(64, (64) >> 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)), min((_GLF_IDENTITY(64, (64) >> 0)), (_GLF_IDENTITY(64, (64) >> 0))))) - 0)))), (max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)), min((_GLF_IDENTITY(64, (64) >> _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(21585))))), (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (64) >> 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> _GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), min((_GLF_IDENTITY(64, (64) >> 0)), _GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)), ((_GLF_IDENTITY(64, (64) >> 0))) | 0)))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)), min((_GLF_IDENTITY(64, (64) >> 0)), (_GLF_IDENTITY(64, (64) >> 0)))), int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)), min((_GLF_IDENTITY(64, (64) >> 0)), (_GLF_IDENTITY(64, (64) >> _GLF_IDENTITY(0, (0) >> 0))))), 1))), (_GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)), min((_GLF_IDENTITY(64, (64) >> 0)), (_GLF_IDENTITY(64, _GLF_IDENTITY((64) >> 0, ((64) >> 0) ^ 0)))))) - 0)) - _GLF_IDENTITY(0, int(int(0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)), min((_GLF_IDENTITY(64, (64) >> 0)), (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (64) >> 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)), min((_GLF_IDENTITY(64, (64) >> 0)), (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), max(int(0), int(0)))))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))))), (_GLF_IDENTITY(64, (64) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), max(int(0), int(0)))))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))) ^ 0))))) - 0), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)), min((_GLF_IDENTITY(64, (64) >> 0)), (_GLF_IDENTITY(64, (64) >> 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)), min((_GLF_IDENTITY(64, (64) >> 0)), (_GLF_IDENTITY(64, (64) >> 0))))) - 0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)), min((_GLF_IDENTITY(64, (64) >> 0)), _GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)), ~ (~ ((_GLF_IDENTITY(64, (64) >> 0))))))), (_GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)), min((_GLF_IDENTITY(64, (64) >> 0)), (_GLF_IDENTITY(64, (64) >> 0))))) - 0))))) | 0)))) ^ _GLF_IDENTITY(0, 0 | (0))), 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_struct_replacement_9._f5.next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, (1 | _GLF_IDENTITY(0, _GLF_IDENTITY((0), (_GLF_IDENTITY(true ? (0) : _GLF_FUZZED(-29630), (true ? true ? (0) : _GLF_FUZZED(-29630) : _GLF_FUZZED(6833))))) >> 0)), (0 >> _GLF_IDENTITY(int(8), int(8)))))), ~ (~ (1))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false))))) ? _GLF_FUZZED(-96487) : _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), ~ (~ (1)))))))), max(uint(1), uint(1))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, (false) || false))), bool(bool(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, (false) || false))), bool(bvec2(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), (bool(_GLF_IDENTITY(false, (false) || false))) && true)), true)))))))), true && (bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) || false)))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false), false, true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true, true)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec2(bool(bvec3(false, true, false)), true))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, length(vec2(0.0, 0.0)), 1.0, 0.0))))))) || false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, true))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) << 0u)))) << 0u) + 1 < subgroup_size)
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), true && (bool(bool((false)))))), ((false)) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), true)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false)), true && (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (false))))))) || false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))) : _GLF_FUZZED(vec2(-374.635, 58.14)))))))).y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))) + vec2(0.0, 0.0))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sinh(injectionSwitch)) : injectionSwitch)), 0.0, abs(0.0), 1.0, 0.0, 0.0, log(1.0), 1.0))).x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false)) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(sqrt(0.0), mix(float(sqrt(0.0)), float(_GLF_FUZZED(8674.3666)), bool(false))), 0.0, 1.0, 0.0))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, (false) && true));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(false || (false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, abs(1.0), 1.0))).y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), float(mat3x4(max(injectionSwitch.y, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 0.0, sqrt(tan(0.0)), 0.0, 0.0)), mix(float(float(mat3(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), float(mat3x4(max(injectionSwitch.y, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 0.0, sqrt(tan(0.0)), 0.0, 0.0))), float(_GLF_FUZZED(5521.3941)), bool(false)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(977.142, 8881.5485)) : injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (virtual_gid), min(_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(~ _GLF_IDENTITY((virtual_gid), (false ? _GLF_FUZZED(virtual_gid) : (virtual_gid))), clamp(_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) << 0u), ~ (virtual_gid), ~ (virtual_gid)))) | 0u)) << 0u), _GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))))), max(_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) + 0u), _GLF_IDENTITY(~ (~ (virtual_gid)), 0u | (_GLF_IDENTITY(~ (~ (virtual_gid)), min(~ (~ (virtual_gid)), ~ (~ (virtual_gid))))))))), virtual_gid)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(read)))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(read)))), (_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(read))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(read))))), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(read))))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(read))))), ~ (~ ((_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(read))))))))) - 0u)))), _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (true ? _GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), (uint(0u)) + 0u)) << ((0u >> _GLF_IDENTITY(uint(5u), uint(5u))) & 45430u)) : _GLF_FUZZED(read))))))) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(workgroup_base) : virtual_gid)), clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(~ (~ (virtual_gid)), max(_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) + 0u), ~ (~ (virtual_gid))))), virtual_gid)), max(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(~ (~ (virtual_gid)), max(_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) + 0u), ~ (~ (virtual_gid))))), virtual_gid)), _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(~ (~ (virtual_gid)), max(_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) + 0u), ~ (~ (virtual_gid))))), virtual_gid))))))], read, _GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(4, 0 | (4)))), _GLF_IDENTITY(64, max(64, 64)), 4);
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! _GLF_IDENTITY(((false) || false), ! (! (((false) || false)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))) && true)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))), true, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
