#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base;
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5975.7066, -47.21)) : injectionSwitch)).y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))));
     for(int _injected_loop_counter = (-45407 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)), false || (bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)))))))))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))) && true, ((_GLF_IDENTITY(false, bool(bool(false)))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w = subgroup_id;
  }
 else
  {
  }
uint subgroup_size = 16;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     do
      {
       _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.y = num_workgroup, 0u | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.y = num_workgroup, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.y = num_workgroup) >> 0u)));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))));
  }
 else
  {
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 1)))])).y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           else
            {
            }
          }
         else
          {
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)))))
          return;
         return;
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch[0], float(vec2(injectionSwitch[0], 1.0))), injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_FUZZED(7.5)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_FUZZED(-5.5)), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), bool(true)))), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x : _GLF_FUZZED(417.650))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) - 0.0), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-2.9) : injectionSwitch[1]))) + log(1.0)))).x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-3842) : 1))])).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)))))) > injectionSwitch.y))))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++))))
  {
   for(int _injected_loop_counter = (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(_GLF_IDENTITY(float(_GLF_ZERO(0.0, injectionSwitch.x)), min(float(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(float(_GLF_ZERO(0.0, injectionSwitch.x)), min(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_ZERO(0.0, injectionSwitch.x)))))), float(_GLF_FUZZED(-0.9)), bool(false)))) << _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) ^ 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), int(int(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))))) != ((1 & 1) | (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))), ((1 << _GLF_IDENTITY(int(5), int(5)))) | ((1 << _GLF_IDENTITY(int(5), int(5)))))) >> 0) >> _GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) ^ 0))) >> _GLF_IDENTITY(int(5), int(5))) ^ 0)) * 1)))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 break;
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   do
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        continue;
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        return;
                       return;
                      }
                     else
                      {
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))));
                  }
                 else
                  {
                  }
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
              }
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          continue;
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      continue;
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false, false)))))
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))));
            }
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
      }
     else
      {
      }
     return;
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, int(ivec3(_injected_loop_counter, 1, 0))))) > 0); _injected_loop_counter --)
        {
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
      }
     else
      {
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))), false || (false)))))))
    return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y = workgroup_base;
  }
 else
  {
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1, clamp(1, 1, 1)) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), min(0, 0))), int(0)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
            return;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
        }
       else
        {
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, sqrt(1.0) * (injectionSwitch.x)) < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           return;
          }
         else
          {
          }
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false)))
        return;
       if(_GLF_DEAD(false))
        continue;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 1)); _injected_loop_counter --)
        {
         return;
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     break;
    }
   if(_GLF_DEAD(false))
    continue;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      break;
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
  }
 else
  {
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base, _GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) << uvec2(0u, 0u)) | (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base)), (true ? _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base, _GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) << uvec2(0u, 0u)) | (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base)) : _GLF_FUZZED(max(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base, uvec2(49447u, 108925u))))), _GLF_IDENTITY(uvec2(1u, 1u) * (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base, (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base) / uvec2(1u, 1u))), min(uvec2(1u, 1u) * (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base, (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base) / uvec2(1u, _GLF_IDENTITY(1u, (1u) | (1u))))), uvec2(1u, 1u) * (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base, (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base) / uvec2(1u, 1u)))))).y + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id) | uvec4(0u, 0u, 0u, 0u)).w * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)) : _GLF_FUZZED(workgroup_base)))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), max(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), max(_GLF_IDENTITY((subgroup_size), min((subgroup_size), _GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(subgroup_id))))), _GLF_IDENTITY((subgroup_size), (true ? _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u) : _GLF_FUZZED(132751u))))) | (subgroup_size))), min(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) + subgroup_local_id;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec2(0.0, exp(0.0)), vec2(log(1.0), 1.0)), dot(vec2(0.0, exp(0.0)), vec2(log(1.0), 1.0)))), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0))))).x)), injectionSwitch.x))), min(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec2(0.0, exp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(28092))), bool(false))))), vec2(log(1.0), 1.0)), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(807.527) : 0.0)), exp(0.0)), vec2(log(1.0), 1.0)), mix(float(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(807.527) : 0.0)), exp(0.0)), vec2(log(1.0), 1.0)), min(dot(vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(807.527) : 0.0)), exp(0.0)), vec2(log(1.0), 1.0)), dot(vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(807.527) : 0.0)), exp(0.0)), vec2(log(1.0), 1.0))))), float(_GLF_FUZZED(-2.8)), bool(false))))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0))))).x)), injectionSwitch.x))), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec2(0.0, exp(0.0)), vec2(log(1.0), 1.0)), dot(vec2(0.0, exp(0.0)), vec2(log(1.0), 1.0)))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0))))).x)), injectionSwitch.x)))))) < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-537.135)), bool(false))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec2(0.0, exp(0.0)), vec2(log(1.0), 1.0)), dot(vec2(0.0, exp(0.0)), vec2(log(1.0), 1.0)))), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec2(0.0, exp(0.0)), vec2(log(1.0), 1.0)), dot(vec2(0.0, exp(0.0)), vec2(log(1.0), 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec2(0.0, exp(0.0)), vec2(log(1.0), 1.0)), dot(vec2(0.0, exp(0.0)), vec2(log(1.0), 1.0)))), (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec2(0.0, exp(0.0)), vec2(log(1.0), 1.0)), dot(vec2(0.0, exp(0.0)), vec2(log(1.0), 1.0)))) : _GLF_FUZZED(0.4))))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(_GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, float(mat3x2(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) * mat3(1.0))))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))), exp(0.0), 0.0, 0.0)))))))).x)), injectionSwitch.x)))) < injectionSwitch.y, true, true))))))), (bool(bool(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec2(0.0, exp(0.0)), vec2(log(1.0), 1.0)), dot(vec2(0.0, exp(0.0)), vec2(log(1.0), 1.0)))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x2(_GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), mat2(mat3(mat2(1.0))))))))))).x)), injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec2(0.0, exp(0.0)), vec2(log(1.0), 1.0)), dot(vec2(0.0, exp(0.0)), vec2(log(1.0), 1.0)))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0))))).x)), injectionSwitch.x))), float(_GLF_FUZZED(-49.67)), bool(false))))), max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec2(0.0, exp(0.0)), vec2(log(1.0), 1.0)), dot(vec2(0.0, exp(0.0)), vec2(log(1.0), 1.0)))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x2(_GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), mat2(mat3(mat2(1.0))))))))))).x)), injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec2(0.0, exp(0.0)), vec2(log(1.0), 1.0)), dot(vec2(0.0, exp(0.0)), vec2(log(1.0), 1.0)))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0))))).x)), injectionSwitch.x))), float(_GLF_FUZZED(-49.67)), bool(false))))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec2(0.0, exp(0.0)), vec2(log(1.0), 1.0)), dot(vec2(0.0, exp(0.0)), vec2(log(1.0), 1.0)))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x2(_GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), mat2(mat3(mat2(1.0))))))))))).x)), injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec2(0.0, exp(0.0)), vec2(log(1.0), 1.0)), dot(vec2(0.0, exp(0.0)), vec2(log(1.0), 1.0)))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0))))).x)), injectionSwitch.x))), float(_GLF_FUZZED(-49.67)), bool(false))))))) < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2.6)), bool(false))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec2(0.0, exp(0.0)), vec2(log(1.0), 1.0)), dot(vec2(0.0, exp(0.0)), vec2(log(1.0), 1.0)))), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x))) / _GLF_IDENTITY(dot(vec2(0.0, exp(0.0)), vec2(log(1.0), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9397.3434)), bool(false))), 1.0)))), dot(vec2(0.0, exp(0.0)), vec2(log(1.0), 1.0)))))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (true ? mat2(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y)) * (injectionSwitch) : _GLF_FUZZED(trunc(vec2(35.17, 76.85)))))), 1.0, 0.0, log(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0))))))), (vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) / 1.0), injectionSwitch.y)) * (injectionSwitch)), 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)))))))) - vec2(0.0, 0.0)))) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0))))).x)), injectionSwitch.x)))) < injectionSwitch.y, true, true)))))))) && true))))
        {
         GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x = virtual_gid;
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       return;
      }
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
  }
 uint next_virtual_gid = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) * 1)))) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) >> 0u)) % subgroup_size) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u | _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)) % subgroup_size), min(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (((subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED((false ? 12898 : -19381))))) % subgroup_size)) + 0u), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))) ? _GLF_FUZZED(81459u) : subgroup_local_id)) + 1) % subgroup_size))))), ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) * 1)))) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) >> 0u)) % subgroup_size) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u | _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)) % subgroup_size), min(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (((subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED((false ? 12898 : -19381))))) % subgroup_size)) + 0u), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))) ? _GLF_FUZZED(81459u) : subgroup_local_id)) + 1) % subgroup_size)))))) | ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) * 1)))) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) >> 0u)) % subgroup_size) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u | _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)) % subgroup_size), min(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (((subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED((false ? 12898 : -19381))))) % subgroup_size)) + 0u), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))) ? _GLF_FUZZED(81459u) : subgroup_local_id)) + 1) % subgroup_size)))))));
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.x = _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u);
 do
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.3)), vec2(_GLF_FUZZED(-5229.5772), (injectionSwitch)[1]), bvec2(false, true))).x, float(float(injectionSwitch.x))) > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_FUZZED(-3.4) : (injectionSwitch.x))) - 0.0), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_FUZZED(-3.4) : (injectionSwitch.x))) - 0.0)) * 1.0) > injectionSwitch.y)) || (false)), _GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (! (bool(bvec4(false, false, false, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(842.209), mix(float(_GLF_FUZZED(842.209)), float(_GLF_FUZZED((3502.8014 / -6.3))), bool(false)))), float(1.0), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) + vec2(0.0, 0.0))).x < injectionSwitch.y))))))).y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(842.209), mix(float(_GLF_FUZZED(842.209)), float(_GLF_FUZZED((3502.8014 / -6.3))), bool(false)))), float(1.0), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) + vec2(0.0, 0.0))).x < injectionSwitch.y))))))).y, true && (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(842.209), mix(float(_GLF_FUZZED(842.209)), float(_GLF_FUZZED((3502.8014 / -6.3))), bool(false)))), float(1.0), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) + vec2(0.0, 0.0))).x < injectionSwitch.y))))))).y))))), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(842.209, (842.209) / 1.0))), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))).y) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           return;
          }
        }
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
           return;
          }
        }
       else
        {
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           return;
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         return;
        }
      }
     for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
  }
 uint read = atomicLoad(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], _GLF_IDENTITY(4, min(4, 4)), 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(-45263))))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))))))
    {
     for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), int(int((1 << _GLF_IDENTITY(int(3), int(3)))))), clamp(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), int(int((1 << _GLF_IDENTITY(int(3), int(3)))))), _GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), (1 << _GLF_IDENTITY(int(3), int(3))) + 0)) ^ 0), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(ivec3(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), (1 << _GLF_IDENTITY(int(3), int(3))) + 0)) ^ 0), 1, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x))))))) | 0))), int(int((1 << _GLF_IDENTITY(int(3), int(3)))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), int(int((1 << _GLF_IDENTITY(int(3), int(3)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), max(_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) ^ 0))), _GLF_IDENTITY(int(3), int(3))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
            break;
           return;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
        break;
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.z = read;
       if(_GLF_DEAD(false))
        continue;
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           return;
          }
        }
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.x], uint(1), 4, 64, 4);
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), false || ((_GLF_IDENTITY(false, (false) || false)))) && true)))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), (true ? ~ (subgroup_local_id + 1) : _GLF_FUZZED(subgroup_local_id))))), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u))) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(false, true, true, false))) && true))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, _GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, false)))))
    {
     if(_GLF_DEAD(false))
      return;
     atomicStore(checker[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.z, 4, 64, 4);
    }
   else
    {
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       continue;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (_GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bool(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) && true))))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false))))), false))))))), true))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false)))))), true))))), false), bvec3(bvec4(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))))), true))))), false), true)))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2(false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false)))))), true))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false)))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))))))))))), false), bvec3(bvec4(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false)))))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))), true))))), false), true)))))), true, true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false)))))), true))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec2(bvec2(bvec2(false, false))))))), false)))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))))))), false), bvec3(bvec4(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) || false), false)))), false)))))), true))))), false), true)))))), true, true))), bvec2(bvec4(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false)))))), true))))), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false)))))), true))))), false), bvec3(bvec4(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false)))))), true))))), false), true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false)))))), true))))), false), bvec3(bvec4(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false)))))), true))))), false), true))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false)))))), true))))), false), bvec3(bvec4(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false)))))), true))))), false), true)))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false)))))), true))))), false), bvec3(bvec4(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false)))))), true))))), false), true)))))), false))))))))), true, true))), false, true)))))))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), false, false))))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false))))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), false))))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))))), false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) || false))))))))))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, false || (false))))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), false))))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, false)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))))))))))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, false)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))))))))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, false)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))))))))))), true)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), false))))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, false, true))), ! (! (! (bool(bvec4(false, true, false, true))))))))), false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(false, false)), true)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec2(false, false)), true)), true, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), false)))))), true)))))))), true)))))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), false)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(false, false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) && true)) && true))), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), false)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), false)))), true))), true, false))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(false, false)))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, sqrt(1.0), log(1.0), 0.0))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(false, false)))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, sqrt(1.0), log(1.0), 0.0))))))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(false, false)))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, sqrt(1.0), log(1.0), 0.0))))))))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(false, false)))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, sqrt(1.0), log(1.0), 0.0))))))))), false)))))))))), false)), true)))))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))))))))))))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))))))), bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(false, false)), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec2(false, false)), true, true))))))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))))))), _GLF_IDENTITY(bool(bvec2(bool(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(false, false)), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec2(false, false)), true, true))))))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(bool(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(false, false)), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec2(false, false)), true, true))))))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (true) || false), false)), ! (! (bool(bvec2(_GLF_IDENTITY(true, (true) || false), false)))))), false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))))))), bool(bvec4(bool(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))))))), true, false, true)))), (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))))))), false))))))))), bool(bvec4(bool(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false), false, true))))) && true))))))))))))))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))))))))))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))), true, true)))), false))))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(bvec4(bvec2(bvec4(bvec2(false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false, false)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), false, false)), false))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), false)))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, false)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(false, false)))), true, true))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), false))))))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(false, false)))), true, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))))), false))))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, false)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(false, false)))), true, true))))))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))), true, true)))), false))))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), false, false)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), false, false))))), false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), false, false)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), false, false)), false), bvec3(bvec4(bvec3(bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), false, false)), false), true))), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), false, false)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), false, false)), false), bvec3(bvec4(bvec3(bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), false, false)), false), true))), true))), true)), true)))))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), false, false)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), false, false))))), false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), false, false)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), false, false)), false), bvec3(bvec4(bvec3(bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), false, false)), false), true))), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), false, false)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), false, false)), false), bvec3(bvec4(bvec3(bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), false, false)), false), true))), true))), true)), true)))))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), false, false)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), false, false))))), false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), false, false)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), false, false)), false), bvec3(bvec4(bvec3(bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), false, false)), false), true))), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), false, false)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), false, false)), false), bvec3(bvec4(bvec3(bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), false, false)), false), true))), true))), true)), true)))))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)), false, false)))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), false))))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, false)))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))), true, true))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), false))))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec4(bvec3(bvec2(false, false), false), true)))))))), true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false)), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false)), false))))))))), false)))))))))))) || false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (_GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bool(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) && true))))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false)))))), true))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false)))))), true))))), false), bvec3(bvec4(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false)))))), true))))), false), true)))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false)), _GLF_IDENTITY(true, ! (! (true)))))))))), true))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false)))))), true))))), false), bvec3(bvec4(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false)))))), true))))), false), true)))))), true, true)), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false)))))), true))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false)))))), true))))), false), bvec3(bvec4(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false)))))), true))))), false), true)))))), true, true))), bvec2(bvec4(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false)))))), true))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false)))))), true))))), false), bvec3(bvec4(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false)))))), true))))), false), true)))))), true, true))), false, true))), bvec2(bvec4(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), true)))), bvec2(bvec2(bvec2(false, false)))), false)))))), true))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false)))))), true))))), false), bvec3(bvec4(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec3(bvec3(bvec2(false, false), true)))))))))))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false)))))), true))))), false), true)))))), true, true))), false, true)))))))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, (false) && true))))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false))))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), false))))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (bool(bvec4(false, false, true, false))) || false))), false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))))))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), (bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))) || false))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false)))))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, false || (false))))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, false || (false))))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), false), false))))))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, false)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))))))))))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, false)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), false, false)))))))))))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, false)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))))))))))), true)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), false))))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), bool(bvec4(bool(bvec4(false, true, false, true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(false, false)), true)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec2(false, false)), true)), true, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))), true)))))))), true)))))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), false)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(false, false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), false)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(false, false)))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))), false)), true)))))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))))))), bool(bvec4(bool(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(false, false)), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec2(false, false)), true, true))))))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (true) || false), false)), ! (! (bool(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false, true))))))))), false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))))))), bool(bvec4(bool(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))))))), true, false, true)))), (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), false))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))), true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))))))))), bool(bvec4(bool(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))))))))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false), false, true))))) && true))))))))))))))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))), true, true)))), false))))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))), true))))))), false, false)), false))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))), false)))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, false)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(false, false)))), true, true))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), false))))))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(false, false)))), true, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y)))))))))))))), false))))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(false, false))), true), bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(false, false))), true)))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))), true, true)))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(false, false))), true), bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(false, false))), true)))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))), true, true)))), false)))))))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), false, false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(false, false)), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec2(false, false)), true, true)), false))))), false, false)), false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), false, false)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), false, false)), false), bvec3(bvec4(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, false)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), false, false)))))), false, false)), false), true))), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), false, false)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), false, false)), false), bvec3(bvec4(bvec3(bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), false, false)), false), true))), true))), true)), true)))))))))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), false))))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, false)))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))), true, true))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), false))))))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(false, false)))), true, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), false))))))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(false, false)))), true, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), false))))))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(false, false)))), true, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false)), false, true))), true, true))))))))))))) || false)))))), false, true, true))))
      {
       do
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))
        {
        }
       else
        {
         do
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              break;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))), bool(bvec2(false, false))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), true, false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(bvec2(false, false), true, false)), true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(bvec2(false, false), true, false)), true)), bvec2(bvec3(bvec2(bvec3(bvec2(bvec4(bvec2(false, false), true, false)), true)), false))), false)))), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), true, false)), false))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), true, false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(bvec2(false, false), true, false)), true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(bvec2(false, false), true, false)), true)), bvec2(bvec3(bvec2(bvec3(bvec2(bvec4(bvec2(false, false), true, false)), true)), false))), false)))), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), true, false)), false)))))))))))));
          }
         while(_GLF_WRAPPED_LOOP(false));
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 & 1) ^ 0)); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     return;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec2(_GLF_IDENTITY(int(4), (int(4)) >> 0), (0 >> _GLF_IDENTITY(int(6), int(6)))))))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    return;
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-96.49), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-29.00)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (injectionSwitch)))).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y), false || (! (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), ! (! (! (_GLF_IDENTITY(true, true && (true))))))) && true))), (injectionSwitch.x < injectionSwitch.y))))
          {
           return;
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
            return;
          }
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9.0))), injectionSwitch.x))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
          {
           return;
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          {
          }
         else
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               do
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     return;
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
        }
       do
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
              {
               for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) * 1))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
                    break;
                   return;
                  }
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   return;
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
                  break;
                }
              }
             else
              {
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)), bool(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)), false, false))))) && true))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.1), _GLF_FUZZED(-57.44)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 return;
                }
              }
            }
          }
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (1) * 1), (_GLF_IDENTITY(68045, ~ (~ (68045))) & 0), 1), max(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (1) * 1), (_GLF_IDENTITY(68045, ~ (~ (68045))) & 0), 1), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (1) * 1), (_GLF_IDENTITY(68045, ~ (~ (68045))) & 0), 1)))), (int(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) * 1), (68045 & 0), 1))) | (int(ivec3(_GLF_IDENTITY(1, (1) * 1), (68045 & 0), 1)))))) | 0), _GLF_IDENTITY(1, (1) | (1))))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                continue;
               break;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)) || _GLF_IDENTITY(_GLF_IDENTITY((true), (_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), true && ((true)))) || false), false || _GLF_IDENTITY((_GLF_IDENTITY((true), _GLF_IDENTITY((_GLF_IDENTITY((true), true && ((true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((true), true && ((true)))), ((_GLF_IDENTITY((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))), true && ((true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)), ! (! ((_GLF_IDENTITY((true), _GLF_IDENTITY((_GLF_IDENTITY((true), true && ((true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((true), true && ((true)))), ((_GLF_IDENTITY((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))), true && ((true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)) || _GLF_IDENTITY(_GLF_IDENTITY((true), (_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), true && ((true)))) || false), false || _GLF_IDENTITY((_GLF_IDENTITY((true), _GLF_IDENTITY((_GLF_IDENTITY((true), true && ((true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((true), true && ((true)))), ((_GLF_IDENTITY((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))), true && ((true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)), ! (! ((_GLF_IDENTITY((true), _GLF_IDENTITY((_GLF_IDENTITY((true), true && ((true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((true), true && ((true)))), ((_GLF_IDENTITY((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))), true && ((true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))))))))))), (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((true), (_GLF_IDENTITY(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) && true), true && ((true)))) || false)))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bvec4(bool(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) || false))), false, _GLF_IDENTITY(false, false || (false)), true))))))
                  {
                   do
                    {
                     return;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                  }
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                continue;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        {
                         for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) & 96173); _GLF_WRAPPED_LOOP(_injected_loop_counter < (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y)) ^ 0)); _injected_loop_counter ++)
                          {
                           return;
                          }
                        }
                      }
                     else
                      {
                      }
                     continue;
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   break;
                  }
                 return;
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 break;
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                break;
              }
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               break;
              }
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), true)), false, true)), _GLF_IDENTITY((bool(bvec3(bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, true && (false)))), bool(bvec3(bool(! (_GLF_IDENTITY(false, true && (false)))), false, false))))))), true)), false, true))), ! (_GLF_IDENTITY(! ((bool(bvec3(bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))))), true)), false, true)))), ! (! (! ((bool(bvec3(bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), true)), false, true))))))))) || false)))))
              continue;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, true))), false, false))))) || false))
                {
                 do
                  {
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
            }
          }
        }
      }
     else
      {
      }
    }
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = ((0 | 0) << _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               return;
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            {
             do
              {
               for(int _injected_loop_counter = ((1 & 1) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 return;
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           return;
          }
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           return;
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           return;
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-19.16)), bool(false)))))))
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       return;
      }
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           subgroupAll(false);
          }
         else
          {
          }
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(max(_GLF_IDENTITY(_injected_loop_counter, (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))), int(4))) ^ (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)))), _injected_loop_counter), (0 | 0) | (_GLF_IDENTITY(max(_injected_loop_counter, _injected_loop_counter), _GLF_IDENTITY((max(_injected_loop_counter, _injected_loop_counter)) / 1, clamp(_GLF_IDENTITY((max(_injected_loop_counter, _injected_loop_counter)), 0 | ((max(_injected_loop_counter, _injected_loop_counter)))) / 1, (max(_injected_loop_counter, _injected_loop_counter)) / 1, _GLF_IDENTITY((max(_injected_loop_counter, _injected_loop_counter)) / 1, clamp(_GLF_IDENTITY(_GLF_IDENTITY((max(_injected_loop_counter, _injected_loop_counter)), (false ? _GLF_FUZZED(bitfieldExtract(_injected_loop_counter, -13271, _injected_loop_counter)) : (max(_injected_loop_counter, _injected_loop_counter)))) / 1, ~ (~ ((max(_injected_loop_counter, _injected_loop_counter)) / 1))), (max(_injected_loop_counter, _injected_loop_counter)) / 1, (max(_injected_loop_counter, _injected_loop_counter)) / 1)))))))), _injected_loop_counter, _injected_loop_counter)) < 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || false)) && true), ! (! (false))))))))), _GLF_IDENTITY(false, ! (! (false))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))), ((! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))) || false)), false), true, true)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, true)))), true))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_IDENTITY(false, true && (false))), true, false))), false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), false)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))), ((! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))) || false)), false), true, true)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, true)))), true))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_IDENTITY(false, true && (false))), true, false))), false)))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))))))))))))), false)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, true)), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))), ((! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))) || false)), false), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))), ((! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))) || false)), false), true, true)), false, true))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, true))))))), true))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_IDENTITY(false, true && (false))), true, false))), false))))))) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), false)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false, true, true))), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), bvec2(bvec2(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false)))), true, true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, true)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, true)))), true))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, false)))))), _GLF_IDENTITY(false, true && (false)))))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) >> 0)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), false), false, true))), false, true))), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec3(bvec2((false), false), false)))), (bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec3(bvec2((false), false), false))))) || false)), bool(bool((false))))) || false))))))))), false)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, true)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, true)), true, false)))), _GLF_IDENTITY(true, ! (! (true))), true)))), true))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, 0 | (1))), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(int(_injected_loop_counter)), clamp(int(int(_injected_loop_counter)), int(int(_injected_loop_counter)), int(int(_injected_loop_counter))))) < 1), false), true, false))), false)))))), true, false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))), true))), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), false)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))), ((! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))) || false)), false), true, true)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, true)))), true))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_IDENTITY(false, true && (false))), true, false))), false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), false)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY(bool(bvec4(_injected_loop_counter < 1, false, false, true)), true && (bool(bvec4(_injected_loop_counter < 1, false, false, true)))))), false), true, true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), ! (_GLF_IDENTITY(! ((_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))), (_GLF_IDENTITY(! ((_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))), bool(bool(! ((_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))))) && true)))), ((! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))) || false)), false), true, true)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, true)))), true))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_IDENTITY(false, true && (false))), true, false))), false)))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, ! (! (_injected_loop_counter < 1))))))), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), false), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), bvec2(bvec3(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), false)))))), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (false))))))))), false)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, true)), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))), ((! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))) || false)), false), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, 1, 0, 1))) < 1))), (_GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))), true && ((! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))))) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))))), false), true, true)), false, true))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, true)))), true))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) < 1), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_IDENTITY(false, true && (false))), true, false))), false))))))) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), false)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false, true, true))), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), bvec2(bvec2(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false)))), true, true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, true)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, true)))), true))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, ! (_GLF_IDENTITY(! (_injected_loop_counter < 1), (_GLF_IDENTITY(! (_injected_loop_counter < 1), bool(bvec3(! (_injected_loop_counter < 1), true, false)))) || false)))), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, false))), _GLF_IDENTITY(false, true && (false)))))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, (1) >> 0), (_injected_loop_counter < _GLF_IDENTITY(1, (1) >> 0)) && true)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), false), false, true))), false, true))), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec3(bvec2((false), false), false)))), (bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec3(bvec2((false), false), false))))) || false)), bool(bool((false))))) || false))))))))), false)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, true)), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, true)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, true)), true, false)))), _GLF_IDENTITY(true, ! (! (true))), true)))), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, true)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, true)), true, false)))), _GLF_IDENTITY(true, ! (! (true))), true)))), true))), false))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, 0 | (1))), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(int(_injected_loop_counter)), clamp(int(int(_injected_loop_counter)), int(int(_injected_loop_counter)), int(int(_injected_loop_counter))))) < 1), false), true, false))), false)))))), true, false)))))), false)), bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), false)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))), ((! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))) || false)), false), true, true)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(int(_injected_loop_counter), (_GLF_IDENTITY(int(_injected_loop_counter), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_injected_loop_counter)))) ^ 0))) < 1), false), true, true)))), true))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_IDENTITY(false, true && (false))), true, false))), false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), false)))), _GLF_IDENTITY(false, false || (false)) || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))), ((! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))) || false)), false), true, true)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, true)))), true))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(-42969) : _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0))) < 1), _GLF_IDENTITY(false, true && (false))), true, false))), false)))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), false)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, true)), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))), ((! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))) || false)), false), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))), ((! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), true && ((_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))))) || false)), false), true, true)), false, true))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, true)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, true)))), _GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_IDENTITY(false, true && (false))), true, false))), false))))))) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), false, false))), false))), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), false)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false, true, true))), false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), bvec2(bvec2(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false)))), true, true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), bvec2(bvec2(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false)))), true, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), bvec2(bvec2(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false)))), true, true)), true, false))), true, true))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1))), false), true, true)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, true)))), true))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, false))), _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bvec3(true && (false), true, true), bvec3(bvec4(bvec3(true && (false), true, true), true))))), false, true, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bvec3(true && (false), true, true), bvec3(bvec4(bvec3(true && (false), true, true), true))))), false, true, false))), bool(bool(! (bool(bvec4(_GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bvec3(true && (false), true, true), bvec3(bvec4(bvec3(true && (false), true, true), true))))), false, true, false)))))))))))))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) >> 0)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), false), false, true))), false, true))), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec3(bvec2((false), false), false)))), (bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec3(bvec2((false), false), false))))) || false)), bool(bool((false))))) || false))))))))), false)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)) < 1), false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, _GLF_IDENTITY(true, (true) && true))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true, true)), true, false)))), _GLF_IDENTITY(true, ! (! (true))), true)))), true))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (1) : _GLF_FUZZED(78040))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(int(_injected_loop_counter)), clamp(int(int(_injected_loop_counter)), int(int(_injected_loop_counter)), int(int(_injected_loop_counter))))) < 1), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(int(_injected_loop_counter)), clamp(int(int(_injected_loop_counter)), int(int(_injected_loop_counter)), int(int(_injected_loop_counter))))) < 1), false)), bvec2(bvec2(bvec2(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(int(_injected_loop_counter)), clamp(int(int(_injected_loop_counter)), int(int(_injected_loop_counter)), int(int(_injected_loop_counter))))) < 1), false)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(int(_injected_loop_counter)), clamp(int(int(_injected_loop_counter)), int(int(_injected_loop_counter)), int(int(_injected_loop_counter))))) < 1), false)), bvec2(bvec2(bvec2(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(int(_injected_loop_counter)), clamp(int(int(_injected_loop_counter)), int(int(_injected_loop_counter)), int(int(_injected_loop_counter))))) < 1), false)))))), true, false)))), true, false))), false)))))), true, false)))))), false))))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      continue;
    }
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       atomicStore(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.z, 4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, min(64, 64)))))) >> 0), 64)), clamp(64, 64, 64)), (_GLF_IDENTITY(_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, min(64, 64)))))) >> 0), 64)), clamp(64, 64, 64))) << 0), 4);
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       continue;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   subgroupAll(true);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     return;
    }
  }
}
