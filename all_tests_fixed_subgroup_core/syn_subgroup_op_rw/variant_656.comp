#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_1 {
 mat4x3 _f0;
 float _f1;
 mat4 _f2;
 int _f3;
 vec2 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_0 {
 uint subgroup_size;
 float _f0;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 int _f1;
 _GLF_struct_1 _f2;
 mat3x2 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_3 {
 bool _f0;
 _GLF_struct_2 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), true, _GLF_IDENTITY(false, true && (false)))))))), bool(bvec2(! (bool(bvec4(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - log(vec2(1.0, 1.0))).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - log(vec2(1.0, 1.0))).y)) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)))))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec4(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false, false))), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))), bool(bvec2(! (bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - log(vec2(1.0, 1.0)), (false ? _GLF_FUZZED(vec2(-86.23, 1.2)) : (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - log(vec2(1.0, 1.0))))).y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1.5))) < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), true)))))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), true && ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, clamp(1, 1, 1))])).x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))), bool(bvec2(_GLF_IDENTITY(! (bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - log(vec2(1.0, 1.0))).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (! (bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - log(vec2(1.0, 1.0))).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (! (! (bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - log(vec2(1.0, 1.0))).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), false))) && true))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(true, _GLF_struct_2(_GLF_struct_0(gl_SubgroupSize, 1.0), 1, _GLF_struct_1(mat4x3(1.0), 1.0, mat4(1.0), 1, vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0)))) / 1.0), 1.0, 1.0)), (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) - 0.0))) : _GLF_FUZZED(-4.7))), 1.0, _GLF_IDENTITY(1.0, (1.0) - abs(0.0)))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))))), _GLF_IDENTITY(ivec2(1), (ivec2(0, 0) | ivec2(0, 0)) | (ivec2(1)))), mat3x2(1.0), mat3x2(1.0)));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6089.2276)))) * 1.0) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), _GLF_IDENTITY((clamp(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY((clamp(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), gl_WorkGroupID, gl_WorkGroupID)), uvec3(0u, 0u, 0u) + ((clamp(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), gl_WorkGroupID, gl_WorkGroupID))))) - (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), _GLF_IDENTITY((clamp(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY((clamp(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), gl_WorkGroupID, gl_WorkGroupID)), uvec3(0u, 0u, 0u) + ((clamp(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), gl_WorkGroupID, gl_WorkGroupID))))) - (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), _GLF_IDENTITY((clamp(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY((clamp(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), gl_WorkGroupID, gl_WorkGroupID)), uvec3(0u, 0u, 0u) + ((clamp(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), gl_WorkGroupID, gl_WorkGroupID))))) - (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), _GLF_IDENTITY((clamp(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY((clamp(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), gl_WorkGroupID, gl_WorkGroupID)), uvec3(0u, 0u, 0u) + ((clamp(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), gl_WorkGroupID, gl_WorkGroupID))))) - (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), _GLF_IDENTITY((clamp(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY((clamp(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), gl_WorkGroupID, gl_WorkGroupID)), uvec3(0u, 0u, 0u) + ((clamp(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), gl_WorkGroupID, gl_WorkGroupID))))) - (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))), _GLF_IDENTITY((clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), ((clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) | (_GLF_IDENTITY((clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (true ? _GLF_IDENTITY((clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), gl_WorkGroupID)), ((clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), gl_WorkGroupID))) ^ uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(173099u, 199771u, 50606u)))))) << uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) ^ 0u)) / 1u), 0u, 0u)))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))), _GLF_IDENTITY((clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), ((clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) | (_GLF_IDENTITY((clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (true ? _GLF_IDENTITY((clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), gl_WorkGroupID)), ((clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), gl_WorkGroupID))) ^ uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(173099u, 199771u, 50606u)))))) << uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) ^ 0u)) / 1u), 0u, 0u)))), (uvec3(uvec3(_GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))), _GLF_IDENTITY((clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), ((clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) | (_GLF_IDENTITY((clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (true ? _GLF_IDENTITY((clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), gl_WorkGroupID)), ((clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), gl_WorkGroupID))) ^ uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(173099u, 199771u, 50606u)))))) << uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) ^ 0u)) / 1u), 0u, 0u))))) | (uvec3(uvec3(_GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))), _GLF_IDENTITY((clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), ((clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) | (_GLF_IDENTITY((clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (true ? _GLF_IDENTITY((clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), gl_WorkGroupID)), ((clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), gl_WorkGroupID))) ^ uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(173099u, 199771u, 50606u)))))) << uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) ^ 0u)) / 1u), 0u, 0u))))))))))) | uvec3(0u, 0u, 0u)).x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(93.09) : injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_3._f1._f0.subgroup_size, (_GLF_struct_replacement_3._f1._f0.subgroup_size) / 1u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, (1u | 1u), 1u)), (uint(uvec4(subgroup_id, 0u, _GLF_IDENTITY((1u | 1u), uint(uint((1u | 1u)))), 1u))) << 0u)) * _GLF_struct_replacement_3._f1._f0.subgroup_size) / 1u), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, (1u | 1u), 1u)), (uint(uvec4(subgroup_id, 0u, (1u | 1u), 1u))) << 0u)) * _GLF_struct_replacement_3._f1._f0.subgroup_size) / 1u)) | (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, (1u | 1u), 1u)), (true ? uint(uvec4(subgroup_id, 0u, (1u | 1u), 1u)) : _GLF_FUZZED(subgroup_local_id))), (uint(uvec4(subgroup_id, 0u, (1u | 1u), 1u))) << 0u)) * _GLF_struct_replacement_3._f1._f0.subgroup_size) / 1u))), (workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size) ^ 0u))) + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true, false, true))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false)))))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false))))))) || false)))))), true, false, true)))) || false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)) * _GLF_struct_replacement_3._f1._f0.subgroup_size, workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size)), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size, _GLF_IDENTITY(max(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)) * _GLF_struct_replacement_3._f1._f0.subgroup_size, workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size), (max(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)) * _GLF_struct_replacement_3._f1._f0.subgroup_size, workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) >> 0u)) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * _GLF_struct_replacement_3._f1._f0.subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)) * _GLF_struct_replacement_3._f1._f0.subgroup_size, workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))) / 1u) + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))) / 1u) + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size) | 0u))))), (uint(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size, ~ (~ (workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size)))))), max(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 0u, 0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), uvec4(1u, 1u, 1u, 1u) * (uvec4(subgroup_id, 0u, 0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))))), subgroup_id)), subgroup_id)) * _GLF_struct_replacement_3._f1._f0.subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) | 0u)), subgroup_id)) * _GLF_struct_replacement_3._f1._f0.subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)) * _GLF_struct_replacement_3._f1._f0.subgroup_size))) | 0u), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size, _GLF_IDENTITY(min(workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size, (workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size) >> 0u)), 0u ^ (min(workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size, (workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size) >> 0u)))))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size))))) | (uint(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), max(max(subgroup_id, subgroup_id), max(subgroup_id, subgroup_id))))) | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), subgroup_id)) * _GLF_struct_replacement_3._f1._f0.subgroup_size, workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size))) | (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) * 1u))) / 1u, 0u | (_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) * 1u))) / 1u))) + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size))))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))))))) * _GLF_struct_replacement_3._f1._f0.subgroup_size, _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size))) | (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(~ ((workgroup_base)), (true ? ~ ((workgroup_base)) : _GLF_FUZZED(virtual_gid)))))))), clamp((workgroup_base), (workgroup_base), (workgroup_base))) / 1u) + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size)), min(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) + 0u) + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)) + 0u) * _GLF_struct_replacement_3._f1._f0.subgroup_size, _GLF_IDENTITY(max(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))), subgroup_id)) * _GLF_struct_replacement_3._f1._f0.subgroup_size, workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size), max(_GLF_IDENTITY(max(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)) * _GLF_struct_replacement_3._f1._f0.subgroup_size, workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size), (max(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))) * _GLF_struct_replacement_3._f1._f0.subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size, max(workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size, workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size)))) | 0u), max(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(num_workgroup) : workgroup_base)), workgroup_base)) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) << (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) >> 0u)))), subgroup_id)) * _GLF_struct_replacement_3._f1._f0.subgroup_size, _GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base))))) + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size))))), min((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) + 0u) + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)) + 0u) * _GLF_struct_replacement_3._f1._f0.subgroup_size, _GLF_IDENTITY(max(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)) * _GLF_struct_replacement_3._f1._f0.subgroup_size, workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size), max(_GLF_IDENTITY(max(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), max(subgroup_id, subgroup_id)), subgroup_id)) * _GLF_IDENTITY(_GLF_struct_replacement_3._f1._f0.subgroup_size, clamp(_GLF_IDENTITY(_GLF_struct_replacement_3._f1._f0.subgroup_size, uint(uint(_GLF_struct_replacement_3._f1._f0.subgroup_size))), _GLF_struct_replacement_3._f1._f0.subgroup_size, _GLF_struct_replacement_3._f1._f0.subgroup_size)), workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size), (max(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)) * _GLF_struct_replacement_3._f1._f0.subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_3._f1._f0.subgroup_size, min(_GLF_struct_replacement_3._f1._f0.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_3._f1._f0.subgroup_size, (true ? _GLF_IDENTITY(_GLF_struct_replacement_3._f1._f0.subgroup_size, 0u + (_GLF_struct_replacement_3._f1._f0.subgroup_size)) : _GLF_FUZZED(num_workgroup))))), max(workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))) * _GLF_struct_replacement_3._f1._f0.subgroup_size, workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size)))) | 0u), max(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)) * _GLF_struct_replacement_3._f1._f0.subgroup_size, _GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base))))) + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) + 0u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) << 0u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)) + 0u) * _GLF_struct_replacement_3._f1._f0.subgroup_size, _GLF_IDENTITY(max(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)) * _GLF_struct_replacement_3._f1._f0.subgroup_size, workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size), max(_GLF_IDENTITY(max(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)) * _GLF_struct_replacement_3._f1._f0.subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size))), (max(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)) * _GLF_struct_replacement_3._f1._f0.subgroup_size, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) ^ 0u))))) * _GLF_struct_replacement_3._f1._f0.subgroup_size, max(workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id)) * _GLF_struct_replacement_3._f1._f0.subgroup_size)))) | 0u), max(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), subgroup_id)) * _GLF_struct_replacement_3._f1._f0.subgroup_size, _GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base))))) + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u))), (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size, (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size, 0u | (subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size))) - 0u))), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))) * _GLF_struct_replacement_3._f1._f0.subgroup_size, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)) + 0u) + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size))), max((_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id), min(clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)))) * _GLF_struct_replacement_3._f1._f0.subgroup_size, workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), ~ (~ (max(subgroup_id, subgroup_id))))), _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u))) * _GLF_struct_replacement_3._f1._f0.subgroup_size, workgroup_base + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * _GLF_struct_replacement_3._f1._f0.subgroup_size))))) | 0u) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3._f1._f0.subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3._f1._f0.subgroup_size, clamp(_GLF_struct_replacement_3._f1._f0.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_3._f1._f0.subgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_3._f1._f0.subgroup_size), max((_GLF_struct_replacement_3._f1._f0.subgroup_size), (_GLF_struct_replacement_3._f1._f0.subgroup_size))) << 0u), _GLF_struct_replacement_3._f1._f0.subgroup_size)), ~ _GLF_IDENTITY((~ (_GLF_struct_replacement_3._f1._f0.subgroup_size)), ((~ _GLF_IDENTITY((_GLF_struct_replacement_3._f1._f0.subgroup_size), (_GLF_IDENTITY((_GLF_struct_replacement_3._f1._f0.subgroup_size), ((_GLF_struct_replacement_3._f1._f0.subgroup_size)) | 0u)) * 1u))) ^ (((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(6u)), (uint(uint(6u))) | (_GLF_IDENTITY(uint(uint(6u)), max(uint(uint(6u)), uint(uint(6u))))))), max(uint(_GLF_IDENTITY(uint(uint(6u)), (uint(uint(6u))) | (_GLF_IDENTITY(uint(uint(6u)), max(uint(uint(6u)), uint(uint(6u))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(6u)), (uint(uint(6u))) | (_GLF_IDENTITY(uint(uint(6u)), max(uint(uint(6u)), uint(uint(6u))))))), ~ (~ (uint(_GLF_IDENTITY(uint(uint(6u)), (uint(uint(6u))) | (_GLF_IDENTITY(uint(uint(6u)), max(uint(uint(6u)), uint(uint(6u))))))))))))), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3._f1._f0.subgroup_size, (true ? _GLF_struct_replacement_3._f1._f0.subgroup_size : _GLF_FUZZED(41142u))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_3._f1._f0.subgroup_size))), (min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3._f1._f0.subgroup_size, clamp(_GLF_struct_replacement_3._f1._f0.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_3._f1._f0.subgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_3._f1._f0.subgroup_size), max((_GLF_struct_replacement_3._f1._f0.subgroup_size), (_GLF_struct_replacement_3._f1._f0.subgroup_size))) << 0u), _GLF_struct_replacement_3._f1._f0.subgroup_size)), ~ _GLF_IDENTITY((~ (_GLF_struct_replacement_3._f1._f0.subgroup_size)), ((~ _GLF_IDENTITY((_GLF_struct_replacement_3._f1._f0.subgroup_size), (_GLF_IDENTITY((_GLF_struct_replacement_3._f1._f0.subgroup_size), ((_GLF_struct_replacement_3._f1._f0.subgroup_size)) | 0u)) * 1u))) ^ (((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(6u)), (uint(uint(6u))) | (_GLF_IDENTITY(uint(uint(6u)), max(uint(uint(6u)), uint(uint(6u))))))), max(uint(_GLF_IDENTITY(uint(uint(6u)), (uint(uint(6u))) | (_GLF_IDENTITY(uint(uint(6u)), max(uint(uint(6u)), uint(uint(6u))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(6u)), (uint(uint(6u))) | (_GLF_IDENTITY(uint(uint(6u)), max(uint(uint(6u)), uint(uint(6u))))))), ~ (~ (uint(_GLF_IDENTITY(uint(uint(6u)), (uint(uint(6u))) | (_GLF_IDENTITY(uint(uint(6u)), max(uint(uint(6u)), uint(uint(6u))))))))))))), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3._f1._f0.subgroup_size, (true ? _GLF_struct_replacement_3._f1._f0.subgroup_size : _GLF_FUZZED(41142u))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_3._f1._f0.subgroup_size)))) >> 0u)), max(_GLF_IDENTITY(_GLF_struct_replacement_3._f1._f0.subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3._f1._f0.subgroup_size, _GLF_IDENTITY(clamp(_GLF_struct_replacement_3._f1._f0.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_3._f1._f0.subgroup_size, (_GLF_struct_replacement_3._f1._f0.subgroup_size) << 0u), _GLF_struct_replacement_3._f1._f0.subgroup_size), min(clamp(_GLF_struct_replacement_3._f1._f0.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_3._f1._f0.subgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_3._f1._f0.subgroup_size) << 0u, ((_GLF_struct_replacement_3._f1._f0.subgroup_size) << 0u) ^ 0u)), _GLF_IDENTITY(_GLF_struct_replacement_3._f1._f0.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_3._f1._f0.subgroup_size, min(_GLF_IDENTITY(_GLF_struct_replacement_3._f1._f0.subgroup_size, (false ? _GLF_FUZZED(virtual_gid) : _GLF_struct_replacement_3._f1._f0.subgroup_size)), _GLF_struct_replacement_3._f1._f0.subgroup_size))) >> ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), _GLF_IDENTITY(clamp(_GLF_struct_replacement_3._f1._f0.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_3._f1._f0.subgroup_size, (_GLF_struct_replacement_3._f1._f0.subgroup_size) << 0u), _GLF_struct_replacement_3._f1._f0.subgroup_size), 0u | _GLF_IDENTITY((clamp(_GLF_struct_replacement_3._f1._f0.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_3._f1._f0.subgroup_size, (_GLF_struct_replacement_3._f1._f0.subgroup_size) << 0u), _GLF_struct_replacement_3._f1._f0.subgroup_size)), ~ (~ ((clamp(_GLF_struct_replacement_3._f1._f0.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_3._f1._f0.subgroup_size, (_GLF_struct_replacement_3._f1._f0.subgroup_size) << 0u), _GLF_struct_replacement_3._f1._f0.subgroup_size))))))))), ~ _GLF_IDENTITY((~ (_GLF_struct_replacement_3._f1._f0.subgroup_size)), ((~ (_GLF_struct_replacement_3._f1._f0.subgroup_size))) ^ ((_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) >> 0u) << _GLF_IDENTITY(uint(6u), uint(6u))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(1u, (1u) >> 0u) << _GLF_IDENTITY(uint(6u), uint(6u)))), (~ ((_GLF_IDENTITY(1u, (1u) >> 0u) << _GLF_IDENTITY(uint(6u), uint(6u))))) - 0u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3._f1._f0.subgroup_size, (true ? _GLF_struct_replacement_3._f1._f0.subgroup_size : _GLF_FUZZED(41142u))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_3._f1._f0.subgroup_size)))), _GLF_IDENTITY(_GLF_struct_replacement_3._f1._f0.subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3._f1._f0.subgroup_size, clamp(_GLF_struct_replacement_3._f1._f0.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_3._f1._f0.subgroup_size, (_GLF_struct_replacement_3._f1._f0.subgroup_size) << 0u), _GLF_struct_replacement_3._f1._f0.subgroup_size)), ~ _GLF_IDENTITY((~ (_GLF_struct_replacement_3._f1._f0.subgroup_size)), ((_GLF_IDENTITY(~ (_GLF_struct_replacement_3._f1._f0.subgroup_size), ~ (~ (~ (_GLF_struct_replacement_3._f1._f0.subgroup_size)))))) ^ ((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)), clamp(_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) - (0u ^ 0u)), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)), max((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)), clamp((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)), (1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)), (1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))), (1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) << 0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) / 1u), uint(6u)), (1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))) ^ 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3._f1._f0.subgroup_size, (true ? _GLF_struct_replacement_3._f1._f0.subgroup_size : _GLF_FUZZED(41142u))), (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) | (_GLF_FUZZED(num_workgroup))) : _GLF_struct_replacement_3._f1._f0.subgroup_size))))))), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1))) % _GLF_IDENTITY(_GLF_struct_replacement_3._f1._f0.subgroup_size, min(_GLF_IDENTITY(_GLF_struct_replacement_3._f1._f0.subgroup_size, ~ (~ _GLF_IDENTITY((_GLF_struct_replacement_3._f1._f0.subgroup_size), max(_GLF_IDENTITY((_GLF_struct_replacement_3._f1._f0.subgroup_size), (_GLF_IDENTITY((_GLF_struct_replacement_3._f1._f0.subgroup_size), ~ (~ ((_GLF_struct_replacement_3._f1._f0.subgroup_size))))) / 1u), (_GLF_IDENTITY(_GLF_struct_replacement_3._f1._f0.subgroup_size, min(_GLF_struct_replacement_3._f1._f0.subgroup_size, _GLF_struct_replacement_3._f1._f0.subgroup_size))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3._f1._f0.subgroup_size, ~ (~ (_GLF_struct_replacement_3._f1._f0.subgroup_size))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_3._f1._f0.subgroup_size)))))) + 0u, _GLF_IDENTITY(((((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_3._f1._f0.subgroup_size, min(_GLF_IDENTITY(_GLF_struct_replacement_3._f1._f0.subgroup_size, ~ (~ (_GLF_struct_replacement_3._f1._f0.subgroup_size))), _GLF_IDENTITY(_GLF_struct_replacement_3._f1._f0.subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_3._f1._f0.subgroup_size)))))) + _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) / 1u))))) | 0u, (true ? ((((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_3._f1._f0.subgroup_size, min(_GLF_IDENTITY(_GLF_struct_replacement_3._f1._f0.subgroup_size, ~ (~ (_GLF_struct_replacement_3._f1._f0.subgroup_size))), _GLF_IDENTITY(_GLF_struct_replacement_3._f1._f0.subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_3._f1._f0.subgroup_size)))))) + _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), (0u) / 1u))))) | 0u : _GLF_FUZZED(virtual_gid)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(-694.959), _GLF_IDENTITY((injectionSwitch)[1], float(mat4x2((injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (1)))], 1.0, exp(0.0), 1.0, 0.0, 0.0, 1.0, 1.0)))), bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true) || false, false || ((true) || false))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(-694.959), _GLF_IDENTITY((injectionSwitch)[1], float(mat4x2((injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (1)))], 1.0, exp(0.0), 1.0, 0.0, 0.0, 1.0, 1.0)))), bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true) || false, false || ((true) || false))))))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(-694.959), _GLF_IDENTITY((injectionSwitch)[1], float(mat4x2((injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (1)))], 1.0, exp(0.0), 1.0, 0.0, 0.0, 1.0, 1.0)))), bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true) || false, false || ((true) || false)))))))))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(-694.959), _GLF_IDENTITY((injectionSwitch)[1], float(mat4x2((injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (1)))], 1.0, exp(0.0), 1.0, 0.0, 0.0, 1.0, 1.0)))), bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true) || false, false || ((true) || false))))))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(-694.959), _GLF_IDENTITY((injectionSwitch)[1], float(mat4x2((injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (1)))], 1.0, exp(0.0), 1.0, 0.0, 0.0, 1.0, 1.0)))), bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true) || false, false || ((true) || false))))))))))).y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(-694.959), _GLF_IDENTITY((injectionSwitch)[1], float(mat4x2((injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (1)))], 1.0, exp(0.0), 1.0, 0.0, 0.0, 1.0, 1.0)))), bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true) || false, false || ((true) || false))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(-694.959), _GLF_IDENTITY((injectionSwitch)[1], float(mat4x2((injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (1)))], 1.0, exp(0.0), 1.0, 0.0, 0.0, 1.0, 1.0)))), bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true) || false, false || ((true) || false))))))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(-694.959), _GLF_IDENTITY((injectionSwitch)[1], float(mat4x2((injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (1)))], 1.0, exp(0.0), 1.0, 0.0, 0.0, 1.0, 1.0)))), bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true) || false, false || ((true) || false)))))))))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(-694.959), _GLF_IDENTITY((injectionSwitch)[1], float(mat4x2((injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (1)))], 1.0, exp(0.0), 1.0, 0.0, 0.0, 1.0, 1.0)))), bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true) || false, false || ((true) || false))))))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(-694.959), _GLF_IDENTITY((injectionSwitch)[1], float(mat4x2((injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (1)))], 1.0, exp(0.0), 1.0, 0.0, 0.0, 1.0, 1.0)))), bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true) || false, false || ((true) || false))))))))))).y), false, true, true)), ! (! (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(-694.959), _GLF_IDENTITY((injectionSwitch)[1], float(mat4x2((injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (1)))], 1.0, exp(0.0), 1.0, 0.0, 0.0, 1.0, 1.0)))), bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true) || false, false || ((true) || false))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(-694.959), _GLF_IDENTITY((injectionSwitch)[1], float(mat4x2((injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (1)))], 1.0, exp(0.0), 1.0, 0.0, 0.0, 1.0, 1.0)))), bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true) || false, false || ((true) || false))))))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(-694.959), _GLF_IDENTITY((injectionSwitch)[1], float(mat4x2((injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (1)))], 1.0, exp(0.0), 1.0, 0.0, 0.0, 1.0, 1.0)))), bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true) || false, false || ((true) || false)))))))))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(-694.959), _GLF_IDENTITY((injectionSwitch)[1], float(mat4x2((injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (1)))], 1.0, exp(0.0), 1.0, 0.0, 0.0, 1.0, 1.0)))), bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true) || false, false || ((true) || false))))))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(-694.959), _GLF_IDENTITY((injectionSwitch)[1], float(mat4x2((injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (1)))], 1.0, exp(0.0), 1.0, 0.0, 0.0, 1.0, 1.0)))), bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true) || false, false || ((true) || false))))))))))).y), false, true, true)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))))), (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && (injectionSwitch.x > injectionSwitch.y), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)) || false))))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(mix(88.85, 42.72, true)))) > injectionSwitch.y, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((627.737 / log2(vec2(-1416.0267, 9.4)))))).y, true)))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true), true, true)))), false))))))))), ((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(mat2(1.0) * (injectionSwitch), 1.0, 0.0), min(vec4(mat2(1.0) * (injectionSwitch), 1.0, 0.0), vec4(mat2(1.0) * (injectionSwitch), 1.0, 0.0)))), (vec2(_GLF_IDENTITY(vec4(mat2(1.0) * (injectionSwitch), 1.0, 0.0), min(vec4(mat2(1.0) * (injectionSwitch), 1.0, 0.0), vec4(mat2(1.0) * (injectionSwitch), 1.0, 0.0))))) - vec2(0.0, 0.0)))).x > injectionSwitch.y, true), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(mat2(1.0) * (injectionSwitch), 1.0, 0.0), min(vec4(mat2(1.0) * (injectionSwitch), 1.0, 0.0), vec4(mat2(1.0) * (injectionSwitch), 1.0, 0.0)))), (vec2(_GLF_IDENTITY(vec4(mat2(1.0) * (injectionSwitch), 1.0, 0.0), min(vec4(mat2(1.0) * (injectionSwitch), 1.0, 0.0), vec4(mat2(1.0) * (injectionSwitch), 1.0, 0.0))))) - vec2(0.0, 0.0)))).x > injectionSwitch.y, true), true)))))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.4)), float(injectionSwitch.y), bool(true))), true)))), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false)))))))))) && true)))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-271.101)), bool(false))), injectionSwitch[1], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5933.8240)), bvec2(true, false))).y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))) && true, bool(bvec4((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - determinant(mat2(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false || _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-28.62)), bool(false)))) / _GLF_ONE(1.0, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-271.101)), bool(false))), injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-28.62)), bool(false)))) / _GLF_ONE(1.0, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-271.101)), bool(false))), injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))) || false))) && true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-46.67)), bool(false))))))), false))))), false || (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(6.6, 687.712))))).y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y, true)))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), true && (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))))))))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true)))))), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(6.6, 687.712))))).y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y, true), true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0)))))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(_GLF_IDENTITY(vec2(6.6, 687.712), _GLF_IDENTITY((vec2(6.6, 687.712)) * mat2(1.0), (false ? _GLF_FUZZED((injectionSwitch - vec2(-10.70, 2.8))) : (vec2(6.6, 687.712)) * mat2(1.0)))))))).y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(_GLF_IDENTITY(vec2(6.6, 687.712), _GLF_IDENTITY((vec2(6.6, 687.712)) * mat2(1.0), (false ? _GLF_FUZZED((injectionSwitch - vec2(-10.70, 2.8))) : (vec2(6.6, 687.712)) * mat2(1.0)))))))).y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false))), bool(_GLF_IDENTITY(bool(! (bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(_GLF_IDENTITY(vec2(6.6, 687.712), _GLF_IDENTITY((vec2(6.6, 687.712)) * mat2(1.0), (false ? _GLF_FUZZED((injectionSwitch - vec2(-10.70, 2.8))) : (vec2(6.6, 687.712)) * mat2(1.0)))))))).y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false)))), bool(bvec3(bool(! (bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(_GLF_IDENTITY(vec2(6.6, 687.712), _GLF_IDENTITY((vec2(6.6, 687.712)) * mat2(1.0), (false ? _GLF_FUZZED((injectionSwitch - vec2(-10.70, 2.8))) : (vec2(6.6, 687.712)) * mat2(1.0)))))))).y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false)))), true, false)))))))))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-992.487) : _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))) - 0.0), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)))], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5)))), (ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5))))) >> ivec2(0, 0))), min(int(_GLF_IDENTITY(ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5)))), (ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5))))) >> ivec2(0, 0))), int(_GLF_IDENTITY(ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5)))), (ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5))))) >> ivec2(0, 0))))))], (_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5)))), (ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5))))) >> ivec2(0, 0))), min(int(_GLF_IDENTITY(ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5)))), (ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5))))) >> ivec2(0, 0))), int(_GLF_IDENTITY(ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5)))), (ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5))))) >> ivec2(0, 0))))))], min(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5)))), (ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5))))) >> ivec2(0, 0))), min(int(_GLF_IDENTITY(ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5)))), (ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5))))) >> ivec2(0, 0))), int(_GLF_IDENTITY(ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5)))), (ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5))))) >> ivec2(0, 0))))))], injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5)))), (ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5))))) >> ivec2(0, 0))), min(int(_GLF_IDENTITY(ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5)))), (ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5))))) >> ivec2(0, 0))), int(_GLF_IDENTITY(ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5)))), (ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5))))) >> ivec2(0, 0))))))]))) / 1.0))))), injectionSwitch[1])))), mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-271.101)), bool(false))), injectionSwitch[1], injectionSwitch[1]))), (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-992.487) : _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))) - 0.0), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)))], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5)))), (ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5))))) >> ivec2(0, 0))), min(int(_GLF_IDENTITY(ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5)))), (ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5))))) >> ivec2(0, 0))), int(_GLF_IDENTITY(ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5)))), (ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5))))) >> ivec2(0, 0))))))], (_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5)))), (ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5))))) >> ivec2(0, 0))), min(int(_GLF_IDENTITY(ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5)))), (ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5))))) >> ivec2(0, 0))), int(_GLF_IDENTITY(ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5)))), (ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5))))) >> ivec2(0, 0))))))], min(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5)))), (ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5))))) >> ivec2(0, 0))), min(int(_GLF_IDENTITY(ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5)))), (ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5))))) >> ivec2(0, 0))), int(_GLF_IDENTITY(ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5)))), (ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5))))) >> ivec2(0, 0))))))], injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5)))), (ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5))))) >> ivec2(0, 0))), min(int(_GLF_IDENTITY(ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5)))), (ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5))))) >> ivec2(0, 0))), int(_GLF_IDENTITY(ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5)))), (ivec2(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5))))) >> ivec2(0, 0))))))]))) / 1.0))))), injectionSwitch[1])))), mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-271.101)), bool(false))), injectionSwitch[1], injectionSwitch[1])))) * vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))) && true))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, true, true)), true && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, true)), true && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))))))), true)))))), bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)).y) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true)))))))))), false))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) - 0.0), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-6720.5585)), float(injectionSwitch[0]), bool(true))), _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-271.101)), bool(false))), injectionSwitch[1], injectionSwitch[1])))).x, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-6720.5585)), float(injectionSwitch[0]), bool(true))), _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-271.101)), bool(false))), injectionSwitch[1], injectionSwitch[1])))).x) - 0.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-6720.5585)), float(injectionSwitch[0]), bool(true))), _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-271.101)), bool(false))), injectionSwitch[1], injectionSwitch[1])))).x, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-6720.5585)), float(injectionSwitch[0]), bool(true))), _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-271.101)), bool(false))), injectionSwitch[1], injectionSwitch[1])))).x) - 0.0), mix(float(_GLF_FUZZED(float(-54151))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-6720.5585)), float(injectionSwitch[0]), bool(true))), _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-271.101)), bool(false))), injectionSwitch[1], injectionSwitch[1])))).x, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-6720.5585)), float(injectionSwitch[0]), bool(true))), _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-271.101)), bool(false))), injectionSwitch[1], injectionSwitch[1])))).x) - 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(_GLF_FUZZED((vec2(565.454, 806.853).t / 8935.8935))), bool(false))) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_IDENTITY(true, false || (true))))))))) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 1.0))))) > injectionSwitch.y, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true))), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true), true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true), true), false)), true, false))))))), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false)))) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true), true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true), true), false)), true, false))))))), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false)))) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true), true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true), true), false)), true, false))))))), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false)))) && true))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true), true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true), true), false)), true, false))))))), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false)))) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true), true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true), true), false)), true, false))))))), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false)))) && true))))), true, false)))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false)))) && true))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_IDENTITY(_GLF_FUZZED(-271.101), min(_GLF_IDENTITY(_GLF_FUZZED(-271.101), max(_GLF_FUZZED(_GLF_IDENTITY(-271.101, float(vec3(-271.101, 0.0, 1.0)))), _GLF_FUZZED(-271.101))), _GLF_IDENTITY(_GLF_FUZZED(-271.101), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-271.101)), float(_GLF_FUZZED(2802.7049)), bool(false)), (mix(float(_GLF_FUZZED(-271.101)), float(_GLF_FUZZED(2802.7049)), bool(false))) + 0.0))))), bool(false))), injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bool(bvec4(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true)))), true)), bvec2(bvec2(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true)))), true)))))), true, true)))), false, false, false)))))))) && true)), _GLF_IDENTITY(true && (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), false, false, false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), bool(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))) && true), true))), false)))), bool(bvec4((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, true)))), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false)))), false, true, false)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, cos(0.0), 0.0, 1.0)))[1]), float(_GLF_FUZZED(-271.101)), bool(false))), injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, cos(0.0), 0.0, 1.0)))[1]), float(_GLF_FUZZED(-271.101)), bool(false)), float(mat3x2(mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, cos(0.0), 0.0, 1.0)))[1]), float(_GLF_FUZZED(-271.101)), bool(false)), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0)))), injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, cos(0.0), 0.0, 1.0)))[1]), float(_GLF_FUZZED(-271.101)), bool(false))), injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, cos(0.0), 0.0, 1.0)))[1]), float(_GLF_FUZZED(-271.101)), bool(false))), injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, cos(0.0), 0.0, 1.0)))[1]), float(_GLF_FUZZED(-271.101)), bool(false))), injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, cos(0.0), 0.0, 1.0)))[1]), float(_GLF_FUZZED(-271.101)), bool(false))), injectionSwitch[1], injectionSwitch[1])))))).x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))) && true))), (_GLF_IDENTITY(true && (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), false, false, false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), bool(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))) && true), true))), false)))), bool(bvec4((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, true)))), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false)))), false, true, false)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, cos(0.0), 0.0, 1.0)))[1]), float(_GLF_FUZZED(-271.101)), bool(false))), injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, cos(0.0), 0.0, 1.0)))[1]), float(_GLF_FUZZED(-271.101)), bool(false)), float(mat3x2(mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, cos(0.0), 0.0, 1.0)))[1]), float(_GLF_FUZZED(-271.101)), bool(false)), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0)))), injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, cos(0.0), 0.0, 1.0)))[1]), float(_GLF_FUZZED(-271.101)), bool(false))), injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, cos(0.0), 0.0, 1.0)))[1]), float(_GLF_FUZZED(-271.101)), bool(false))), injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, cos(0.0), 0.0, 1.0)))[1]), float(_GLF_FUZZED(-271.101)), bool(false))), injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, cos(0.0), 0.0, 1.0)))[1]), float(_GLF_FUZZED(-271.101)), bool(false))), injectionSwitch[1], injectionSwitch[1])))))).x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))) && true))), _GLF_IDENTITY(bool(bvec3(true && (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), false, false, false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), bool(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))) && true), true))), false)))), bool(bvec4((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, true)))), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false)))), false, true, false)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, cos(0.0), 0.0, 1.0)))[1]), float(_GLF_FUZZED(-271.101)), bool(false))), injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, cos(0.0), 0.0, 1.0)))[1]), float(_GLF_FUZZED(-271.101)), bool(false)), float(mat3x2(mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, cos(0.0), 0.0, 1.0)))[1]), float(_GLF_FUZZED(-271.101)), bool(false)), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0)))), injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, cos(0.0), 0.0, 1.0)))[1]), float(_GLF_FUZZED(-271.101)), bool(false))), injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, cos(0.0), 0.0, 1.0)))[1]), float(_GLF_FUZZED(-271.101)), bool(false))), injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, cos(0.0), 0.0, 1.0)))[1]), float(_GLF_FUZZED(-271.101)), bool(false))), injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, cos(0.0), 0.0, 1.0)))[1]), float(_GLF_FUZZED(-271.101)), bool(false))), injectionSwitch[1], injectionSwitch[1])))))).x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))) && true))), true, false)), ! (! (bool(bvec3(true && (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), false, false, false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), bool(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))) && true), true))), false)))), bool(bvec4((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, true)))), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false)))), false, true, false)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, cos(0.0), 0.0, 1.0)))[1]), float(_GLF_FUZZED(-271.101)), bool(false))), injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, cos(0.0), 0.0, 1.0)))[1]), float(_GLF_FUZZED(-271.101)), bool(false)), float(mat3x2(mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, cos(0.0), 0.0, 1.0)))[1]), float(_GLF_FUZZED(-271.101)), bool(false)), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0)))), injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, cos(0.0), 0.0, 1.0)))[1]), float(_GLF_FUZZED(-271.101)), bool(false))), injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, cos(0.0), 0.0, 1.0)))[1]), float(_GLF_FUZZED(-271.101)), bool(false))), injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, cos(0.0), 0.0, 1.0)))[1]), float(_GLF_FUZZED(-271.101)), bool(false))), injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, cos(0.0), 0.0, 1.0)))[1]), float(_GLF_FUZZED(-271.101)), bool(false))), injectionSwitch[1], injectionSwitch[1])))))).x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))) && true))), true, false))))))) && true)))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(atanh(vec2(7.2, 49.29))))).x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), true)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), true))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(atanh(vec2(7.2, 49.29))))).x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(true, (true) && true))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, abs(1.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, sqrt(1.0), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, sqrt(1.0), 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0))) > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), true))))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))), ! (! ((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))))))))), bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), false, true, true)))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false)))) && true)))))), bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))))))), false, true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false)))) && true)))))), bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))))))), false, true)))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false)))) && true)))))), bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))))))), false, true)))))), false)))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec2((! (false)), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2((! (false)), true)), bvec2(bvec3(bvec2(bvec2((! (false)), true)), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2((! (false)), true)), bvec2(bvec3(bvec2(bvec2((! (false)), true)), false)))))))))))))))), false, true)))))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))), false, true)))))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), false, true)))))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), false, false))), false, true))))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), false, true)))))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))))), ((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))))) || false)))), false, true))))))))))), false))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) | (next_virtual_gid), (_GLF_IDENTITY((next_virtual_gid) | (next_virtual_gid), clamp((next_virtual_gid) | (next_virtual_gid), _GLF_IDENTITY((next_virtual_gid) | (next_virtual_gid), ((next_virtual_gid) | (next_virtual_gid)) | 0u), (next_virtual_gid) | (next_virtual_gid)))) / 1u))], uint(_GLF_IDENTITY(1, (1) << 0)), _GLF_IDENTITY(4, (4) << 0), _GLF_IDENTITY(64, _GLF_IDENTITY((64), ((64)) / 1) | 0), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, _GLF_IDENTITY(true, (true) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, false || (false)) || (! (false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), false || (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))), false, false)), (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) || false))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
  }
 if(subgroup_local_id + 1 < _GLF_struct_replacement_3._f1._f0.subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))));
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), false, false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(39.00)), bool(false))), injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(39.00)), clamp(float(_GLF_FUZZED(39.00)), float(_GLF_FUZZED(39.00)), _GLF_IDENTITY(float(_GLF_FUZZED(39.00)), (true ? _GLF_IDENTITY(float(_GLF_FUZZED(39.00)), max(float(_GLF_FUZZED(39.00)), float(_GLF_FUZZED(39.00)))) : _GLF_FUZZED(cosh(365.545)))))), bool(false))), injectionSwitch.y)))))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0, 0.0))))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0, 0.0))))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)), true))))))
      return;
     return;
    }
  }
}
