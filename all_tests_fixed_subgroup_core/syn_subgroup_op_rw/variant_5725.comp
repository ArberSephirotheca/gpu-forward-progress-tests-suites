#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x, (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(5.6), min(true ? injectionSwitch.x : _GLF_FUZZED(5.6), true ? injectionSwitch.x : _GLF_FUZZED(5.6))))))) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(_GLF_IDENTITY(bool(bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(bool(bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(bool(bool(bool(_GLF_DEAD(false)))), true, false)), bool(bvec2(bool(bvec3(bool(bool(bool(_GLF_DEAD(false)))), true, false)), false))))) || false))))) || false))
      return;
    }
   else
    {
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & -11334)); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            continue;
           return;
          }
        }
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(false))
        break;
       return;
      }
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y)))))
  return;
 uvec4 GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 do
  {
   for(int _injected_loop_counter = _GLF_IDENTITY((1 | 1), ~ (~ (_GLF_IDENTITY((1 | 1), min((1 | 1), (1 | 1)))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((_GLF_IDENTITY((0 | 0), min((0 | 0), _GLF_IDENTITY((0 | 0), _GLF_IDENTITY(int(int((0 | 0))), clamp(int(int((0 | 0))), int(int((0 | 0))), int(int((0 | 0)))))))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(5, 5, 5))), (int(5)) - 0))), (((0 | 0) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(5, 5, 5))), (int(5)) - 0)))) | (_GLF_IDENTITY(((0 | 0) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(5, 5, 5))), (int(5)) - 0))), (((0 | 0) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(5, 5, 5))), (int(5)) - 0)))) | 0)))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 | (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter) << 0, clamp((_injected_loop_counter) << 0, (_injected_loop_counter) << 0, (_injected_loop_counter) << 0))))) != _GLF_IDENTITY(((0 | 0) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(5, 5, 5))), (int(5)) - 0))), (((0 | 0) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(5, 5, 5))), (int(5)) - 0)))) | (_GLF_IDENTITY(((0 | 0) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(5, 5, 5))), (int(5)) - 0))), (((0 | 0) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(5, 5, 5))), (int(5)) - 0)))) | 0))))) || false); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        continue;
       break;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) << 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), ~ (~ (int(0))))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      continue;
     break;
    }
   do
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             return;
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       do
        {
         for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))), ((1 << _GLF_IDENTITY(int(7), int(7)))) + 0) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), max(int(7), _GLF_IDENTITY(int(7), int(int(int(7)))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), max(int(7), int(7))), max(int(7), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), (_GLF_IDENTITY(int(7), int(int(int(7))))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), (_GLF_IDENTITY(int(7), int(int(int(7))))) - 0)) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))))) | 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           do
            {
             GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x = _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 0u, 0u)))) | (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))));
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            break;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), bool(bvec4(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         return;
        }
      }
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & (true ? (true ? -55361 : -63516) : (-72529 ^ 14762)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        break;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) < 1); _injected_loop_counter ++)
        {
         return;
        }
       do
        {
         do
          {
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          break;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       do
        {
         return;
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     else
      {
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 | (int(5)))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       continue;
       if(_GLF_DEAD(false))
        return;
      }
     do
      {
       return;
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y = _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : workgroup_size))) + 0u);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      break;
     for(int _injected_loop_counter = ((_GLF_IDENTITY(1, clamp(1, 1, 1)) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))) >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, min(3, 3))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          break;
         continue;
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(vec2(-1.0, 7018.4370)) : _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) - vec2(0.0, 0.0)))))), max((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), injectionSwitch)).x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(2569.9199) : _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 1.0, log(1.0), sin(0.0), 1.0, sqrt(1.0), 0.0, 1.0))))))), injectionSwitch)).x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(mat2(mat4x2(mat2(_GLF_ONE(1.0, injectionSwitch.y)))), (mat2(mat4x2(mat2(_GLF_ONE(1.0, injectionSwitch.y))))) - mat2(0.0, 0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(mat2(6.5, 461.317, -950.954, _GLF_IDENTITY(13.67, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 13.67 : _GLF_FUZZED(asinh(-3.3)))))) : mat2(_GLF_ONE(1.0, injectionSwitch.y)))), clamp((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat2(6.5, 461.317, -950.954, 13.67)) : mat2(_GLF_ONE(1.0, injectionSwitch.y)))), (injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat2(6.5, 461.317, -950.954, 13.67)) : mat2(_GLF_ONE(1.0, injectionSwitch.y)))), (injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat2(6.5, 461.317, -950.954, 13.67)) : mat2(_GLF_ONE(1.0, injectionSwitch.y)))))), vec2(mat2((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0))), 1.0, 0.0)), (true ? _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), sin(vec2(0.0, 0.0)) + _GLF_IDENTITY(((injectionSwitch)), mat2(1.0) * (((injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(mat2((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0))), 1.0, 0.0)), (vec2(vec4(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(mat2((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0))), 1.0, 0.0))) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch))))))), injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) || false, bool(bvec4(_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat2(6.5, 461.317, -950.954, _GLF_IDENTITY(13.67, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 13.67 : _GLF_FUZZED(asinh(-3.3)))))) : mat2(_GLF_ONE(1.0, injectionSwitch.y)))), clamp((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat2(6.5, 461.317, -950.954, 13.67)) : mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)))))), (injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat2(6.5, 461.317, -950.954, 13.67)) : mat2(_GLF_ONE(1.0, injectionSwitch.y)))), (injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat2(6.5, 461.317, -950.954, 13.67)) : mat2(_GLF_ONE(1.0, injectionSwitch.y)))))), vec2(mat2((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0))), 1.0, 0.0)), (true ? _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch))), sin(vec2(0.0, 0.0)) + ((injectionSwitch))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(mat2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0))), 1.0, 0.0)), (vec2(vec4(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(mat2((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0))), 1.0, 0.0))) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch))))))), injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), ! (! (_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat2(6.5, 461.317, -950.954, _GLF_IDENTITY(13.67, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 13.67 : _GLF_FUZZED(asinh(-3.3)))))) : mat2(_GLF_ONE(1.0, injectionSwitch.y)))), clamp((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat2(6.5, 461.317, -950.954, 13.67)) : mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)))))), (injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat2(6.5, 461.317, -950.954, 13.67)) : mat2(_GLF_ONE(1.0, injectionSwitch.y)))), (injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat2(6.5, 461.317, -950.954, 13.67)) : mat2(_GLF_ONE(1.0, injectionSwitch.y)))))), vec2(mat2((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0))), 1.0, 0.0)), (true ? _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch))), sin(vec2(0.0, 0.0)) + ((injectionSwitch))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(mat2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0))), 1.0, 0.0)), (vec2(vec4(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(mat2((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0))), 1.0, 0.0))) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch))))))), injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), bool(bool((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat2(6.5, 461.317, -950.954, _GLF_IDENTITY(13.67, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 13.67 : _GLF_FUZZED(asinh(-3.3)))))) : mat2(_GLF_ONE(1.0, injectionSwitch.y)))), clamp((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat2(6.5, 461.317, -950.954, 13.67)) : mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)))))), (injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat2(6.5, 461.317, -950.954, 13.67)) : mat2(_GLF_ONE(1.0, injectionSwitch.y)))), (injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat2(6.5, 461.317, -950.954, 13.67)) : mat2(_GLF_ONE(1.0, injectionSwitch.y)))))), vec2(mat2((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0))), 1.0, 0.0)), (true ? _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch))), sin(vec2(0.0, 0.0)) + ((injectionSwitch))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(mat2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0))), 1.0, 0.0)), (vec2(vec4(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(mat2((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0))), 1.0, 0.0))) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch))))))), injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))) || false, false, false, false))))))))
        {
         do
          {
           for(int _injected_loop_counter = (_GLF_IDENTITY(0 ^ 1, int(int(0 ^ 1)))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, 1 * (0))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, 1 * (0)))))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ((true) && true) && true)), false, false), false))))), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), false || (bool(true))))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), bool(bool(bool(true))))))), (bool(_GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))))) || false))) && true), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) && true), false, false), false)))))) || _GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true))))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ((true) && true) && true)), false, false), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true, false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(false || (bool(true)), false || (_GLF_IDENTITY(false || (bool(true)), ! (! (_GLF_IDENTITY(false || (bool(true)), false || (false || (bool(true)))))))))))), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), bool(bool(bool(true))))))))) && true), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) || false)) || false), false, false), false))))), true && (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(false || (bool(true)), false || (_GLF_IDENTITY(false || (bool(true)), ! (! (_GLF_IDENTITY(false || (bool(true)), false || (false || (bool(true)))))))))))), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), bool(bool(bool(true))))))))) && true), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) || false)) || false), false, false), false)))))))) || _GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true))))), (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y))))
                    break;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                  }
                 else
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
                    break;
                   do
                    {
                     return;
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   break;
                  }
                }
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 continue;
                }
              }
             if(_GLF_DEAD(false))
              break;
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))));
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bvec4(bool(bool(true)), true, false, true))))))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            break;
           for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               return;
              }
            }
           if(_GLF_DEAD(false))
            break;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          continue;
         continue;
        }
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))));
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.w = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      return;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     return;
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              continue;
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                continue;
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  return;
                 continue;
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                    {
                     return;
                    }
                   if(_GLF_DEAD(false))
                    continue;
                  }
                }
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                return;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  return;
                }
              }
             do
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                return;
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             return;
            }
          }
         if(_GLF_DEAD(false))
          continue;
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    continue;
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               if(_GLF_DEAD(false))
                continue;
               for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), true, true)))))); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     return;
                    }
                   else
                    {
                    }
                  }
                 return;
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              continue;
            }
           if(_GLF_DEAD(false))
            break;
          }
         else
          {
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        break;
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) - 0); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) / cos(0.0))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)))))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5.3)), bvec2(true, false))).y))))), true, true)), bool(bool(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))))
                {
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 break;
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               return;
              }
             if(_GLF_DEAD(false))
              break;
            }
           else
            {
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(false))
              return;
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               if(_GLF_DEAD(false))
                break;
               continue;
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(170.290)), bool(false))) > injectionSwitch.y))))
            return;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.6)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))));
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               return;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   do
    {
     if(_GLF_DEAD(false))
      break;
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size) - _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(1u, 1u, 1u, 1u) * (uvec4(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u))), ((GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size) - _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(5u), _GLF_IDENTITY(uvec4(5u), (uvec4(5u)) - (uvec4(0u, 0u, 0u, 0u) & (uvec4(51389u, 55939u, 116818u, 12712u) & 155439u))))) + _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), min((uvec4(0u, 0u, 0u, 0u)), (uvec4(0u, 0u, 0u, 0u)))))) * uvec4(1u, 1u, 1u, 1u)))) * uvec4(1u, 1u, 1u, 1u)).w * workgroup_id, min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size) - _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(1u, 1u, 1u, 1u) * (uvec4(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u))), ((GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size) - _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(5u), _GLF_IDENTITY(uvec4(5u), (uvec4(5u)) - (uvec4(0u, 0u, 0u, 0u) & (uvec4(51389u, 55939u, 116818u, 12712u) & 155439u))))) + _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), min((uvec4(0u, 0u, 0u, 0u)), (uvec4(0u, 0u, 0u, 0u)))))) * uvec4(1u, 1u, 1u, 1u)))) * uvec4(1u, 1u, 1u, 1u)).w * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size) - _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(1u, 1u, 1u, 1u) * (uvec4(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u))), ((GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size) - _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(5u), _GLF_IDENTITY(uvec4(5u), (uvec4(5u)) - (uvec4(0u, 0u, 0u, 0u) & (uvec4(51389u, 55939u, 116818u, 12712u) & 155439u))))) + _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), min((uvec4(0u, 0u, 0u, 0u)), (uvec4(0u, 0u, 0u, 0u)))))) * uvec4(1u, 1u, 1u, 1u)))) * uvec4(1u, 1u, 1u, 1u)).w * workgroup_id, max(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size) - _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(1u, 1u, 1u, 1u) * (uvec4(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u))), ((GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size) - _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(5u), _GLF_IDENTITY(uvec4(5u), (uvec4(5u)) - (uvec4(0u, 0u, 0u, 0u) & (_GLF_IDENTITY(uvec4(51389u, 55939u, 116818u, 12712u) & 155439u, (uvec4(51389u, 55939u, 116818u, 12712u) & 155439u) >> uvec4(0u, 0u, 0u, 0u))))))) + _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), min((uvec4(0u, 0u, 0u, 0u)), (uvec4(0u, 0u, 0u, 0u)))))) * uvec4(1u, 1u, 1u, 1u)))) * uvec4(1u, 1u, 1u, 1u)).w * workgroup_id, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size) - _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(1u, 1u, 1u, 1u) * (uvec4(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u))), ((GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size) - _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(0u, max(0u, 0u)))) << _GLF_IDENTITY(uvec4(5u), _GLF_IDENTITY(uvec4(5u), (uvec4(5u)) - (uvec4(0u, 0u, 0u, 0u) & (uvec4(51389u, 55939u, 116818u, 12712u) & 155439u))))) + _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), min((uvec4(0u, 0u, 0u, 0u)), (uvec4(0u, 0u, 0u, 0u)))))) * uvec4(1u, 1u, 1u, 1u)))) * uvec4(1u, 1u, 1u, 1u)).w * workgroup_id))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 0)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) != ((0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : 3))))) & -86689)); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x = workgroup_base, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x = workgroup_base, 0u ^ (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x = workgroup_base, (true ? GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x = workgroup_base : _GLF_FUZZED(num_workgroup))))))));
        }
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 0 ^ (int(4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       return;
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).y)), true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! _GLF_IDENTITY((! (! (bool(bvec4(false, true, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (true) && true))))), (injectionSwitch.x < injectionSwitch.y)), true))))), _GLF_IDENTITY(bool(bool((! (! (bool(bvec4(false, true, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (true) && true))))), (injectionSwitch.x < injectionSwitch.y)), true))))))), (bool(bool((! (! (bool(bvec4(false, true, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (true) && true))))), (injectionSwitch.x < injectionSwitch.y)), true)))))))) && true)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(692.620)), vec2(_GLF_FUZZED(4.7), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) | 0)], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).x, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(692.620)), vec2(_GLF_FUZZED(4.7), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))[0], _GLF_FUZZED(692.620)), vec2(_GLF_FUZZED(4.7), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).x) - 0.0))) > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           return;
          }
         if(_GLF_DEAD(false))
          break;
        }
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 0)); _injected_loop_counter ++)
      {
       return;
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           return;
          }
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.z = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         break;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         continue;
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & 61004)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = ((1 ^ 1) << _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 ^ (int(1))))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
      }
     do
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          break;
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          break;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false)), (bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             return;
            }
          }
        }
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))));
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)); _injected_loop_counter ++)
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
         if(_GLF_DEAD(false))
          break;
        }
       return;
      }
    }
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size, uvec4(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size[0], GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size[1], GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size[2], GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size[3])).z + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size, min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size, uvec4(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size[0], GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size[1], GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size[2], GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size[3])), GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size)).x, (subgroup_id * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size, min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size, uvec4(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size[0], GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size[1], GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size[2], GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size[3])), GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size)).x) | 0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(uint(-8.3)), (_GLF_IDENTITY(true, true && (true)) ? _GLF_FUZZED(uint(-8.3)) : _GLF_FUZZED((workgroup_base >> subgroup_local_id)))) : _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size, uvec4(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size[0], GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size[1], GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size[2], GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size[3])).z + subgroup_id * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size, uvec4(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size[0], GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size[1], GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size[2], GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size[3])), GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size), max(min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size, uvec4(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size[0], GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size[1], GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size[2], GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size[3])), GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size), min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size, uvec4(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size[0], GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size[1], GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size[2], GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size[3])), GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size)))).x)) + subgroup_local_id;
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.y = virtual_gid;
  }
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.z + subgroup_id * GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x, uint(uvec3(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.z + subgroup_id * GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.z + subgroup_id * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), min(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), min(_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), min((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), clamp((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))), clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), clamp((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), clamp((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), clamp((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))))))))), ((_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), min(_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), min((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), clamp((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))), clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), clamp((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), clamp((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), clamp((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0)))))))))) * mat2(1.0)), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * ((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))))).x < injectionSwitch.y)) ? _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x, (false ? _GLF_FUZZED(subgroup_id) : GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)) : _GLF_FUZZED(workgroup_size))), ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.z + subgroup_id * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), min(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), min(_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), min((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), clamp((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))), clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), clamp((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), clamp((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), clamp((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))))))))), ((_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), min(_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), min((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), clamp((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))), clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), clamp((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), clamp((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), clamp((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0)))))))))) * mat2(1.0)), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * ((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))))).x < injectionSwitch.y)) ? _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x, (false ? _GLF_FUZZED(subgroup_id) : GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)) : _GLF_FUZZED(workgroup_size)))), (_GLF_IDENTITY(~ (GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.z + subgroup_id * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), min(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), min(_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), min((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), clamp((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))), clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), clamp((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), clamp((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), clamp((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))))))))), ((_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), min(_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), min((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), clamp((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))), clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), clamp((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), clamp((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), clamp((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0)))))))))) * mat2(1.0)), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * ((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))))).x < injectionSwitch.y)) ? _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x, (false ? _GLF_FUZZED(subgroup_id) : GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)) : _GLF_FUZZED(workgroup_size)))), (~ (GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.z + subgroup_id * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), min(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), min(_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), min((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), clamp((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))), clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), clamp((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), clamp((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), clamp((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))))))))), ((_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), min(_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), min((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), clamp((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))), clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), clamp((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), clamp((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0))), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), clamp((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0)))))))))) * mat2(1.0)), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * ((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))))).x < injectionSwitch.y)) ? _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x, (false ? _GLF_FUZZED(subgroup_id) : GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)) : _GLF_FUZZED(workgroup_size))))) >> 0u)) | 0u)))) << 0u), (0u ^ 1u), 0u))) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x, ~ (~ ((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x, 0u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), uvec4(0u, 0u, 0u, 0u) + (uvec4((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x, 0u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u))))))), min(uint(_GLF_IDENTITY(uvec4((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x, 0u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), uvec4(0u, 0u, 0u, 0u) + (uvec4((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x, 0u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u))))))), uint(_GLF_IDENTITY(uvec4((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x, 0u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), uvec4(0u, 0u, 0u, 0u) + (uvec4((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x, 0u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)), ~ (~ ((((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x), min(((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x), ((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)))), max(~ (((_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u), _GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(144381u) : subgroup_local_id + 1)), subgroup_local_id + 1))) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)), ~ (((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x))))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)), min(_GLF_IDENTITY(~ (((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)), (~ (((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x))) | (~ (((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)))), ~ (((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)))), (~ ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x, 0u | ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(74408))), (true ? _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(74408))) : _GLF_FUZZED(85284))))))) | (_GLF_IDENTITY(1, (1) | (1))))) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x))))) / 1u)))) - _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), max((_GLF_IDENTITY(~ (((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)), (_GLF_IDENTITY(~ (((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x), max(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (true ? _GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), (subgroup_local_id + 1))) : _GLF_FUZZED(workgroup_id))) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x), (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x, 0u + (GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x))), ~ (~ (((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x))))) ^ 0u), ((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)))), (~ (((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x))) | (~ (((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x))))) ^ 0u), max(_GLF_IDENTITY(~ (((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), (_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), ~ (~ (uvec2(subgroup_local_id, 1u))))) / uvec2(1u, 1u))), _GLF_IDENTITY(max(uint(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), (_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), ~ (~ (uvec2(subgroup_local_id, 1u))))) / uvec2(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) | (1u)))), 1u))), uint(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), (_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), ~ (~ (uvec2(subgroup_local_id, 1u))))) / uvec2(1u, 1u)))), 0u | (max(uint(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), (_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), ~ (~ (uvec2(subgroup_local_id, 1u))))) / uvec2(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) | (1u)))), 1u))), uint(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), (_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), ~ (~ (uvec2(subgroup_local_id, 1u))))) / uvec2(1u, 1u)))))))) + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)), clamp(~ ((_GLF_IDENTITY((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x, ~ (~ ((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x))))), ~ (((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)), ~ (((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)))), ~ (((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x), (((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)) | (((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)))), (~ (((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x))) / 1u)))) - _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), clamp(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) >> 0u))), 0u, 0u)))), (_GLF_IDENTITY(~ (((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) >> 0)), (max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) >> 0))) | (_GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) >> 0)), (max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) - 0)))))) >> 0))) ^ 0))))) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) + 0), 1, 1))) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)), (_GLF_IDENTITY(~ (((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)), max(~ (((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)), ~ (((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x))))) | (_GLF_IDENTITY(~ _GLF_IDENTITY((((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : (((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)))), (~ (((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x))) / 1u)))) - _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), ((_GLF_IDENTITY(~ (((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) + 0), 1, 1))) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)), (_GLF_IDENTITY(~ (((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)), max(~ (((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)), ~ (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id)), subgroup_local_id))) >> 0u) + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x))))) | (_GLF_IDENTITY(~ _GLF_IDENTITY((((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : (((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)))), (~ (((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x))) / 1u)))) - _GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))), clamp(0u, 0u, 0u))) + 0u), ((_GLF_IDENTITY(~ (((subgroup_local_id + 1) % _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x, (GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)), max(~ (((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)), ~ (((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)))), (_GLF_IDENTITY(~ (((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)), max(~ (((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)), ~ (((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x))))) - 0u)) | (_GLF_IDENTITY(~ ((_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u))) + 1)) | ((subgroup_local_id + 1))) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)), (~ (((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x))) / 1u)))) - _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) * 1u))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) || false))))
    {
     do
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, false))))))))
            {
             do
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
                {
                 return;
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
            continue;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))))));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      return;
     do
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
      }
     else
      {
      }
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.y], _GLF_IDENTITY(4, (4) ^ 0), 64, 0);
 do
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, true)), true && (bool(bvec4(_GLF_DEAD(false), false, false, true))))) || false)))
      return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1 < GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          continue;
         atomicStore(checker[_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size) : GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size) : GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size, min(_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size) : GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size, _GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size) : GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size)), _GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size) : GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size)))).y], read, _GLF_IDENTITY(4, (4) / 1), 64, 4);
         if(_GLF_DEAD(false))
          break;
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, ! (! (_GLF_IDENTITY(_injected_loop_counter != 0, (_injected_loop_counter != 0) && true))))); _injected_loop_counter --)
          {
           subgroupAll(false);
           if(_GLF_DEAD(false))
            break;
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false)))), true && (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec4(bvec2(false, false), false, false)))), true && (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false))))))))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false)))), true && (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false))))))))), true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false)))), true && (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false))))))))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false)))), true && (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false))))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))))), true), true))))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            continue;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         do
          {
           do
            {
             do
              {
               atomicStore(buf[GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.y], read, 4, 64, 4);
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (_GLF_IDENTITY(true, false || (true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), true && (bool(_GLF_IDENTITY(bool(false), false || (bool(false))))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || (_GLF_IDENTITY(true, false || (true)))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 return;
                }
               if(_GLF_DEAD(false))
                break;
               break;
              }
             do
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
                {
                 return;
                }
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
                {
                 if(_GLF_DEAD(false))
                  break;
                 continue;
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
         do
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) + 0)); _injected_loop_counter ++)
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   subgroupAll(true);
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    continue;
                  }
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             return;
             if(_GLF_DEAD(false))
              break;
            }
          }
        }
      }
     do
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
}
