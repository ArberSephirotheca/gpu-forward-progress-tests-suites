#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))[0], (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))[0], mix(float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))[0]), float(_GLF_FUZZED(-2.1)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), ! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), ! (! (! (bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))))))))))) + 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))[1]), vec2(_GLF_FUZZED(1.8), _GLF_FUZZED((+ -4.7))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5.3), _GLF_FUZZED(vec4(-364.879, 2858.2479, 6021.5537, -73.79).x)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (true ? injectionSwitch : _GLF_FUZZED(vec2(-50.29, -379.499))))) * mat2(1.0)))).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(64.83), _GLF_FUZZED(6.3)), vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)))).y)), true), false)))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), clamp(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) << 0u))), uint(uvec2(workgroup_size * workgroup_id, 0u)))) | (0u << _GLF_IDENTITY(uint(6u), uint(6u))))) - 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((false), false || ((false)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9759.4553), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(77.17)), bvec2(true, false))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), injectionSwitch)).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) | 0u, ~ (~ (_GLF_IDENTITY((workgroup_base) | 0u, ((workgroup_base) | 0u) / 1u)))), max(_GLF_IDENTITY((workgroup_base) | 0u, ~ (~ (_GLF_IDENTITY((workgroup_base) | 0u, ((workgroup_base) | 0u) / 1u)))), _GLF_IDENTITY((workgroup_base) | 0u, ~ (~ (_GLF_IDENTITY((workgroup_base) | 0u, ((workgroup_base) | 0u) / 1u))))))) + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) - 0u), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))) ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, (0u) << 0u), 1u))) : _GLF_FUZZED(virtual_gid)))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), true && (_GLF_IDENTITY(! (true), (! (true)) && true))))) ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, (0u) << 0u), 1u), min(uvec4(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, (0u) << 0u), 1u), uvec4(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, (0u) << 0u), 1u))))) : _GLF_FUZZED(virtual_gid)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))) ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, (0u) << 0u), 1u))) : _GLF_FUZZED(virtual_gid))))), 0u | (~ ((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))) ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, (0u) << 0u), 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, (0u) << 0u), 1u))))) : _GLF_FUZZED(virtual_gid)), ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))) ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, (0u) << 0u), 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, (0u) << 0u), 1u))))) : _GLF_FUZZED(virtual_gid))) << (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))) ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) << 0u)), 0u + (~ (_GLF_IDENTITY(0u, (0u) << 0u)))))), 1u))) : _GLF_FUZZED(virtual_gid)))))), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(virtual_gid)))), clamp(0u ^ (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))), min(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))), _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u)))))) / 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))), min(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))), _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u)))))) / 1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(virtual_gid)))), 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(virtual_gid)))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(virtual_gid), ~ (_GLF_IDENTITY(~ (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(virtual_gid)), clamp(~ (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(virtual_gid)), ~ (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(virtual_gid)), ~ (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(virtual_gid))))))))), clamp(0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(virtual_gid), ~ (_GLF_IDENTITY(~ (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(virtual_gid)), clamp(~ (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(virtual_gid)), ~ (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(virtual_gid)), ~ (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(virtual_gid))))))))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(virtual_gid), ~ (_GLF_IDENTITY(~ (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(virtual_gid)), clamp(~ (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(virtual_gid)), ~ (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(virtual_gid)), ~ (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(virtual_gid))))))))), _GLF_IDENTITY(uint(uvec2(0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(virtual_gid), ~ (_GLF_IDENTITY(~ (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(virtual_gid)), clamp(~ (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(virtual_gid)), ~ (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(virtual_gid)), ~ (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(virtual_gid))))))))), 1u)), 0u | (uint(uvec2(0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(virtual_gid), ~ (_GLF_IDENTITY(~ (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(virtual_gid)), clamp(~ (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(virtual_gid)), ~ (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(virtual_gid)), ~ (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(virtual_gid))))))))), 1u))))), 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(virtual_gid), ~ (_GLF_IDENTITY(~ (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(virtual_gid)), clamp(~ (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(virtual_gid)), ~ (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(virtual_gid)), ~ (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 1u))) : _GLF_FUZZED(virtual_gid)))))))))))))) * 1u)) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size), _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 1u)), (uint(uvec3(subgroup_local_id + 1, 0u, 1u))) | (_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 1u)), (uint(uvec3(subgroup_local_id + 1, 0u, 1u))) >> 0u))), (_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 1u)), (uint(uvec3(subgroup_local_id + 1, 0u, 1u))) | (_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 1u)), (uint(uvec3(subgroup_local_id + 1, 0u, 1u))) >> 0u)))) | (_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 1u)), (uint(uvec3(subgroup_local_id + 1, 0u, 1u))) | (_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 1u)), (uint(uvec3(subgroup_local_id + 1, 0u, 1u))) >> 0u)))))), min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) | 0u)))) % subgroup_size, 0u ^ ((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) + 1, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1))) % subgroup_size))), (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), max(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u)))), (_GLF_IDENTITY(0u, _GLF_IDENTITY((false ? _GLF_FUZZED((virtual_gid << workgroup_id)) : 0u), _GLF_IDENTITY((_GLF_IDENTITY((false ? _GLF_FUZZED((virtual_gid << workgroup_id)) : 0u), ((false ? _GLF_FUZZED((virtual_gid << workgroup_id)) : 0u)) / 1u)) >> _GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY((_GLF_IDENTITY((false ? _GLF_FUZZED((virtual_gid << workgroup_id)) : 0u), ((false ? _GLF_FUZZED((virtual_gid << workgroup_id)) : 0u)) / 1u)) >> _GLF_IDENTITY(0u, (0u) | (0u)), ~ (~ ((_GLF_IDENTITY((false ? _GLF_FUZZED((virtual_gid << workgroup_id)) : 0u), ((false ? _GLF_FUZZED((virtual_gid << workgroup_id)) : 0u)) / 1u)) >> _GLF_IDENTITY(0u, (0u) | (0u)))))) | 0u))) << _GLF_IDENTITY(uint(4u), uint(4u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), clamp(uint(uvec2((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(min(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)), subgroup_local_id + 1), (_GLF_IDENTITY(min(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)), subgroup_local_id + 1), max(min(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)), subgroup_local_id + 1), min(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)), subgroup_local_id + 1)))) - 0u))) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size) | ((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) + 1))) % subgroup_size))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u | (_GLF_IDENTITY(uint(4u), (true ? _GLF_IDENTITY(uint(4u), (uint(4u)) | 0u) : _GLF_FUZZED((++ workgroup_size))))))), (172410u & 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ (_GLF_IDENTITY(uint(4u), uint(4u))))))))), uint(uvec2((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(packUnorm4x8(vec4(-77.18, -7293.3407, -6234.8011, -4199.3730))) : subgroup_local_id)) + 1, subgroup_local_id + 1))), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) ^ ((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(packUnorm4x8(vec4(-77.18, -7293.3407, -6234.8011, -4199.3730))) : subgroup_local_id)) + 1, subgroup_local_id + 1))))) % subgroup_size), (0u << _GLF_IDENTITY(uint(4u), uint(4u))))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, int(ivec4(1, 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) | (0)), 0))))))))) % subgroup_size), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(min(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0))))))), ~ (~ (min(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u), subgroup_local_id + _GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0)))))))))))) % subgroup_size), uint(uint(((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0))))))))) % subgroup_size))))) << 0u), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), ~ (~ (_GLF_IDENTITY(uint(4u), uint(4u)))))))), _GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) >> 0u), subgroup_local_id)) + 1, min(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0))))))))) % subgroup_size), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, int(int(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0)))) | 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0)))) | 0, clamp((_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0)))) | 0, (_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0)))) | 0, (_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0)))) | 0))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0)))) | 0, clamp((_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0)))) | 0, (_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0)))) | 0, (_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0)))) | 0)))) ^ 0)))))))))) % subgroup_size), uint(uint(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), min(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0))))))))) % subgroup_size))))) << 0u), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), ~ (~ (_GLF_IDENTITY(uint(4u), uint(4u)))))) >> 0u)) | (_GLF_IDENTITY(uint(4u), uint(4u)))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) >> 0u), subgroup_local_id)) + 1, min(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0))))))))) % subgroup_size), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, int(int(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0)))) | 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0)))) | 0, clamp((_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0)))) | 0, (_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0)))) | 0, (_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0)))) | 0))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0)))) | 0, clamp((_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0)))) | 0, (_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0)))) | 0, (_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0)))) | 0)))) ^ 0)))))))))) % subgroup_size), uint(uint(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), min(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0))))))))) % subgroup_size))))) << 0u), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), ~ (~ (_GLF_IDENTITY(uint(4u), uint(4u)))))) >> 0u)) | (_GLF_IDENTITY(uint(4u), uint(4u)))))))), ((uint(uvec2(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) >> 0u), subgroup_local_id)) + 1, min(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0))))))))) % subgroup_size), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, int(int(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0)))) | 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0)))) | 0, clamp((_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0)))) | 0, (_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0)))) | 0, (_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0)))) | 0))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0)))) | 0, clamp((_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0)))) | 0, (_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0)))) | 0, (_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0)))) | 0)))) ^ 0)))))))))) % subgroup_size), uint(uint(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), min(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0))))))))) % subgroup_size))))) << 0u), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), ~ (~ (_GLF_IDENTITY(uint(4u), uint(4u)))))) >> 0u)) | (_GLF_IDENTITY(uint(4u), uint(4u))))))))) - 0u))) >> 0u))));
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 0u ^ (buf[virtual_gid])), _GLF_IDENTITY(4, max(4, 4)), 64, 0);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 ^ (_GLF_IDENTITY((4), 0 + (_GLF_IDENTITY((4), max((_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, clamp(4, 4, 4))))), (4))))))) / _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (true ? _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) - 0)) : _GLF_FUZZED(ivec3(-67532, 4704, 79010).p)))), (((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, max(1, 1)))))) << 0)));
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false))) && true))))
    barrier();
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), 0 ^ _GLF_IDENTITY((4), _GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) | 0)) | 0, max(_GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) | 0)) | 0, (_GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) | 0)) | 0, int(ivec3((_GLF_IDENTITY((4), ((4)) | 0)) | 0, 1, 1)))) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY((4), ~ (~ ((4)))), ((4)) | 0)) | 0)))), (4) - 0), 4)), max(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) - 0), 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) - 0), 4)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) - 0)) << 0)), 0 ^ ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) - 0)) << 0)))) - 0), 4))), (~ (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) - 0), 4)))) ^ 0), (~ (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) - _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * 1)) | (1 ^ 1))))), 4)))) ^ 0)))))) | _GLF_IDENTITY((4), int(_GLF_IDENTITY(ivec4((4), 0, 1, ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) | (int(5))))) >> _GLF_IDENTITY(int(5), int(5)))), ~ (~ (ivec4((4), 0, 1, ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) | (int(5))))) >> _GLF_IDENTITY(int(5), int(5)))))))))), 64, 4);
   subgroupAll(_GLF_IDENTITY(false, true && (false)));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[virtual_gid], _GLF_IDENTITY(read, (read) * 1u), 4, 64, 4);
   subgroupAll(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, true, false), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(true, true, false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(false, bool(bool(false))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(false, bool(bool(false))))), bvec3(bvec3(bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(false, bool(bool(false))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true, true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(true, true, false), false)), false))), false))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, true, false)), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), false)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((false ? 23.38 : -4.9)))), 0.0, 0.0)))), (injectionSwitch) * mat2(1.0)))).y)))))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), true)))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false || (bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), false || (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (! (true)))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), false, true))))), false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), ! (! (! (true))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), ! (! (! (true))))), (! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) && true)) && true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), true)), (bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), true))) || false)))))), false, true)), false || (bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), false))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, true, false)), bvec3(bvec3(bvec3(bvec3(true, true, false)))))), true)))), false))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false || (bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((! (true)), ((! (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false, true)), false || (bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), true)))), false))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! _GLF_IDENTITY((! (! (true))), ! (! ((! (! (true))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false || (bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), false))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, true, false)), bvec3(bvec3(bvec3(bvec3(true, true, false)))))), true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((! (true)), ! (! ((! (true))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false || (bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((! (true)), ! (! ((! (true))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false || (bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), true))))))), false))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false || (bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((! (true)), ((! (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false, true)), false || (bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), true)))), false))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! _GLF_IDENTITY((! (! (true))), ! (! ((! (! (true))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false || (bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), false))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, true, false)), bvec3(bvec3(bvec3(bvec3(true, true, false)))))), true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((! (true)), ! (! ((! (true))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false || (bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((! (true)), ! (! ((! (true))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false || (bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), true))))))), false))))))))), false))))))), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, true, false)), bvec3(bvec4(bvec3(bvec3(true, true, false)), true)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (_GLF_IDENTITY(! ((! (true))), ! (! (! ((! (true))))))))), false, false))), true, false), true))))));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
