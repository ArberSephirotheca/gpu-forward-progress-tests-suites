#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_15 {
 uint _f0;
 float _f1;
} ;

struct _GLF_struct_14 {
 bvec3 _f0;
 bvec3 _f1;
 mat2x4 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_13 {
 bvec3 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_16 {
 _GLF_struct_13 _f0;
 _GLF_struct_14 _f1;
 _GLF_struct_15 _f2;
 uint subgroup_size;
 mat2x4 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_17 {
 _GLF_struct_16 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_10 {
 uint subgroup_local_id;
 mat4x2 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_9 {
 mat2x3 _f0;
 float _f1;
 vec2 _f2;
 ivec3 _f3;
 mat2x4 _f4;
 mat4 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_11 {
 _GLF_struct_9 _f0;
 vec2 _f1;
 mat2x4 _f2;
 bvec4 _f3;
 _GLF_struct_10 _f4;
} ;

struct _GLF_struct_12 {
 uint _f0;
 mat3x4 _f1;
 int _f2;
 _GLF_struct_11 _f3;
} ;

struct _GLF_struct_7 {
 uint _f0;
} ;

struct _GLF_struct_5 {
 vec4 _f0;
 uvec3 _f1;
 ivec3 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_4 {
 bool _f0;
 ivec4 _f1;
 uint subgroup_id;
 int _f2;
 bool _f3;
} ;

struct _GLF_struct_6 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
} ;

struct _GLF_struct_2 {
 bvec3 _f0;
 ivec4 _f1;
 uvec2 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_1 {
 vec2 _f0;
 ivec4 _f1;
 bool _f2;
 vec3 _f3;
 ivec4 _f4;
 int _f5;
} ;

struct _GLF_struct_0 {
 ivec4 _f0;
 float _f1;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 mat4 _f2;
 _GLF_struct_2 _f3;
} ;

struct _GLF_struct_8 {
 _GLF_struct_3 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_7 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_3(_GLF_struct_0(ivec4(1), 1.0), _GLF_struct_1(vec2(1.0), _GLF_IDENTITY(ivec4(1), _GLF_IDENTITY(clamp(_GLF_IDENTITY(ivec4(1), max(_GLF_IDENTITY(ivec4(1), (ivec4(1)) / ivec4(1, 1, 1, 1)), ivec4(1))), _GLF_IDENTITY(ivec4(1), clamp(ivec4(1), ivec4(1), ivec4(1))), _GLF_IDENTITY(ivec4(1), clamp(ivec4(1), ivec4(1), ivec4(1)))), ~ (~ (clamp(_GLF_IDENTITY(ivec4(1), max(_GLF_IDENTITY(ivec4(1), (ivec4(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(1, 0 + (1)))))) / ivec4(1, 1, 1, 1)), ivec4(1))), _GLF_IDENTITY(ivec4(1), clamp(ivec4(1), ivec4(1), ivec4(1))), _GLF_IDENTITY(ivec4(1), clamp(ivec4(1), ivec4(1), ivec4(1)))))))), true, vec3(1.0), ivec4(1), 1), mat4(1.0), _GLF_struct_2(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), _GLF_IDENTITY((bool(bvec3(true, true, false))) && true, false || ((_GLF_IDENTITY(bool(bvec3(true, true, false)), (bool(bvec3(true, true, false))) || false)) && true)))))), false))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), _GLF_IDENTITY((bool(bvec3(true, true, false))) && true, false || ((_GLF_IDENTITY(bool(bvec3(true, true, false)), (bool(bvec3(true, true, false))) || false)) && true)))))), false)))))))), true)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true))), bvec3(bvec3(bvec3(true)))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), false)))))), true))), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), true))))), false))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true))), bvec3(bvec3(bvec3(true)))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, false || (true)))))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), true))))), false))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true))), bvec3(bvec3(bvec3(true)))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), true))))), false)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true))), bvec3(bvec3(bvec3(true)))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), true))))), false)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true))), bvec3(bvec3(bvec3(true)))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), true))))), false)))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true))), bvec3(bvec3(bvec3(true)))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), true))))), false)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true))), bvec3(bvec3(bvec3(true)))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), true))))), false)))), true)))), true)))))), true)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true))), bvec3(bvec3(bvec3(true)))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), true))))), false))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), bvec3(bvec3(bvec3(true)))), true))), true))))), false))))), true)), true)), true))))))), ivec4(1), uvec2(1u), mat4x3(1.0))), _GLF_struct_6(_GLF_struct_4(true, ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))), (0 >> _GLF_IDENTITY(int(1), int(1))) ^ (_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))), (false ? _GLF_FUZZED(-31296) : _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))), clamp((_GLF_IDENTITY(1, max(1, 1))), (_GLF_IDENTITY(1, max(1, 1))), (_GLF_IDENTITY(1, max(1, 1))))))))) | (0 | 0))), gl_SubgroupID, _GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((1), clamp((1), (1), (1)))), true), _GLF_struct_5(vec4(1.0), uvec3(1u), ivec3(1), mat2x3(1.0))), _GLF_struct_7(1u));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(53.35), _GLF_FUZZED(-6303.5496)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) - vec2(0.0, 0.0)), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), determinant(mat2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0)), 1.0, 0.0, abs(1.0))), _GLF_IDENTITY(0.0, (0.0) - 0.0)))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(3.0, (true ? 3.0 : _GLF_FUZZED(7.2))), -1.2)))).y)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(_GLF_struct_16(_GLF_struct_13(bvec3(true), bvec3(true)), _GLF_struct_14(bvec3(_GLF_IDENTITY(true, true && (true))), bvec3(true), mat2x4(1.0), mat4x2(1.0)), _GLF_struct_15(1u, 1.0), gl_SubgroupSize, mat2x4(1.0), bvec2(true)), uvec4(1u));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-19.16)), bool(false))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5777.9497, -48.88)) : injectionSwitch)).y), _GLF_IDENTITY(float(mat3x4(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-19.16)), bool(false))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5777.9497, -48.88)) : injectionSwitch)).y), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))), 0.0, 0.0)), clamp(_GLF_IDENTITY(float(mat3x4(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-19.16)), bool(false))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5777.9497, -48.88)) : injectionSwitch)).y), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))), 0.0, 0.0)), float(vec3(float(mat3x4(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-19.16)), bool(false))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5777.9497, -48.88)) : injectionSwitch)).y), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))), 0.0, 0.0)), 0.0, 0.0))), float(mat3x4(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-19.16)), bool(false))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5777.9497, -48.88)) : injectionSwitch)).y), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))), 0.0, 0.0)), float(mat3x4(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-19.16)), bool(false))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5777.9497, -48.88)) : injectionSwitch)).y), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))), 0.0, 0.0))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), false || (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))), true && (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))))))), (_GLF_DEAD(false)) || false)))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) || false)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), false || (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), false || (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))), ((_GLF_DEAD(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true) || false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))), (_GLF_DEAD(false)) || false))), false || (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))), (_GLF_DEAD(false)) || false))), bool(_GLF_IDENTITY(bvec3((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))), (_GLF_DEAD(false)) || false))), false, false), bvec3(bvec3(bvec3((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))), (_GLF_DEAD(false)) || false))), false, false)))))))), false || (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true, false, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(1u, mat3x4(1.0), 1, _GLF_struct_11(_GLF_struct_9(mat2x3(1.0), 1.0, vec2(1.0), ivec3(_GLF_IDENTITY(1, ~ (~ (1)))), mat2x4(1.0), mat4(1.0), uvec4(1u)), vec2(1.0), mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((35.54 / 9450.0144))), bool(_GLF_IDENTITY(false, false || (false))))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY((35.54 / 9450.0144), (true ? _GLF_IDENTITY((35.54 / 9450.0144), min((35.54 / 9450.0144), (35.54 / 9450.0144))) : _GLF_FUZZED(-8.7))))), bool(false)))) + length(vec2(0.0, 0.0)))), bvec4(true), _GLF_struct_10(gl_SubgroupInvocationID, mat4x2(1.0), _GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0))))));
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-435.442) : injectionSwitch.y))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(ivec2(-64413, 69630).t))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), bool(true))) < injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (true && (injectionSwitch.x > injectionSwitch.y)) || false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), false, false)), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) * (1 & ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))], injectionSwitch[1])).x > injectionSwitch.y), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y, (false ? _GLF_FUZZED(acos(-3.4)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y))), true, true)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), false))))))), ! (! (_GLF_IDENTITY(true && _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-71.28), _GLF_FUZZED(-43.81)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), clamp(_GLF_IDENTITY((1.0), ((1.0)) - tan(0.0)), (1.0), (1.0))) + 0.0)) > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))), ! (_GLF_IDENTITY(! (true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-23.65)), float(injectionSwitch.y), bool(true)))), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-22.43, 529.217)) : injectionSwitch)).y), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(_GLF_IDENTITY(bool(! (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (bool(! (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && true)))))))))))) || false), true, true, false))), true))))))), true && (! (true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), false))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), true, true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), true)))))), false))))), true)))), true)))))))))))))))), false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-255.169))), exp(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), (vec4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-255.169))), exp(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))) * mat4(1.0)))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(dot(vec3(-0.3, -2858.0882, -4.4), vec3(-7.6, _GLF_IDENTITY(-2434.1736, (-2434.1736) * sqrt(1.0)), -0.4))) : 0.0)), 0.0), (false ? _GLF_FUZZED(mat3(-7815.3841, -4.9, _GLF_IDENTITY(-920.658, clamp(_GLF_IDENTITY(-920.658, min(-920.658, -920.658)), -920.658, _GLF_IDENTITY(-920.658, max(-920.658, -920.658)))), -2448.4127, -0.3, 2644.4296, -8129.4354, 73.23, -23.76)) : mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(-633.309)), vec2(_GLF_FUZZED(-3.2), (vec2(0.0, 0.0))[1]), bvec2(_GLF_IDENTITY(false, ! (! (false))), true))))), 0.0))))))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (bool(_GLF_IDENTITY(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) + 0.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.8), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-44.90)), float((injectionSwitch)[0]), bool(true))), _GLF_FUZZED(-9.2)), bvec2(true, false))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))) + 0.0) : _GLF_FUZZED(-2442.2479))) > injectionSwitch.y))) && _GLF_IDENTITY(true, (true) && true)))), true, true)))))))), false, false), false)), false)))))), bool(bvec4((bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y), true, true)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), false))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y), true, true)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), false))))))), false, false, true)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y), true, true)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), false))))))), false, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y), true, true)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), false))))))), false, false, true)))))))), ! (! (_GLF_IDENTITY(true && _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) + 0.0)) > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))), ! (_GLF_IDENTITY(! (true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-23.65)), float(injectionSwitch.y), bool(true)))), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-22.43, 529.217)) : injectionSwitch)).y), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), true, true, false))), true))))))), true && (! (true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0)).x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), false))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), false))))), true)))), true)))))))))))))))), false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.9), _GLF_FUZZED(-6.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(dot(vec3(-0.3, -2858.0882, -4.4), _GLF_IDENTITY(vec3(-7.6, -2434.1736, -0.4), min(vec3(-7.6, -2434.1736, -0.4), _GLF_IDENTITY(vec3(-7.6, -2434.1736, -0.4), (vec3(-7.6, -2434.1736, -0.4)) + vec3(0.0, 0.0, 0.0)))))) : 0.0, (false ? _GLF_FUZZED(dot(vec3(-0.3, -2858.0882, -4.4), _GLF_IDENTITY(vec3(-7.6, -2434.1736, -0.4), min(vec3(-7.6, -2434.1736, -0.4), _GLF_IDENTITY(vec3(-7.6, -2434.1736, -0.4), (vec3(-7.6, -2434.1736, -0.4)) + vec3(0.0, 0.0, 0.0)))))) : 0.0) - log(1.0)))), 0.0), (false ? _GLF_FUZZED(mat3(-7815.3841, -4.9, _GLF_IDENTITY(-920.658, clamp(-920.658, -920.658, _GLF_IDENTITY(-920.658, max(-920.658, -920.658)))), -2448.4127, -0.3, 2644.4296, -8129.4354, 73.23, -23.76)) : mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(-633.309)), vec2(_GLF_FUZZED(-3.2), (vec2(0.0, 0.0))[1]), bvec2(false, true))))), 0.0))))))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) + 0.0) > injectionSwitch.y))) && _GLF_IDENTITY(true, (true) && true)))), true, true)))))))), false, false), false)), false)))))), false, true, true))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, cos(0.0), 1.0, cos(0.0), 1.0, 1.0)), max(float(mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), 0.0, 0.0, 1.0, cos(0.0), 1.0, cos(0.0), 1.0, 1.0)), _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(751.041)), bool(false))) - 0.0), cos(0.0), 1.0, cos(0.0), 1.0, 1.0)), (false ? _GLF_FUZZED(-5.5) : float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, cos(0.0), 1.0, cos(0.0), 1.0, 1.0))))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, cos(0.0), 1.0, cos(0.0), 1.0, 1.0)), max(_GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, cos(0.0), 1.0, cos(0.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, cos(0.0), 1.0, cos(0.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0)))))), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x, 0.0, 0.0, 1.0, _GLF_IDENTITY(cos(0.0), max(_GLF_IDENTITY(cos(0.0), max(_GLF_IDENTITY(cos(0.0), (cos(0.0)) * 1.0), cos(0.0))), _GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))))), 1.0, cos(0.0), 1.0, 1.0)), (false ? _GLF_FUZZED(-5.5) : float(_GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, cos(0.0), 1.0, cos(0.0), 1.0, 1.0), transpose(transpose(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, cos(0.0), 1.0, cos(0.0), 1.0, 1.0)))))))))) > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)))) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), false || (_GLF_IDENTITY(false || (false), (false || _GLF_IDENTITY((false), ! (! ((false))))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_8._f1._f0.subgroup_id * _GLF_struct_replacement_17._f0.subgroup_size, _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_8._f1._f0.subgroup_id * _GLF_struct_replacement_17._f0.subgroup_size, 1u)), clamp(uint(uvec2(_GLF_struct_replacement_8._f1._f0.subgroup_id * _GLF_struct_replacement_17._f0.subgroup_size, 1u)), uint(uvec2(_GLF_struct_replacement_8._f1._f0.subgroup_id * _GLF_struct_replacement_17._f0.subgroup_size, 1u)), uint(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_8._f1._f0.subgroup_id * _GLF_struct_replacement_17._f0.subgroup_size, 1u), (uvec2(_GLF_struct_replacement_8._f1._f0.subgroup_id * _GLF_struct_replacement_17._f0.subgroup_size, 1u)) + uvec2(0u, 0u)))))), uint(_GLF_IDENTITY(uvec4(workgroup_base + _GLF_struct_replacement_8._f1._f0.subgroup_id * _GLF_struct_replacement_17._f0.subgroup_size, 1u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u), uvec4(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u, 0u) | _GLF_IDENTITY((uvec4(workgroup_base + _GLF_struct_replacement_8._f1._f0.subgroup_id * _GLF_struct_replacement_17._f0.subgroup_size, 1u, ((1u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(atomicExchange(workgroup_id, workgroup_size)))), _GLF_IDENTITY(0u, uint(uint(0u))), 0u)), (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(atomicExchange(workgroup_id, workgroup_size)))), _GLF_IDENTITY(0u, uint(uint(0u))), 0u))) + 0u)))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u)), (_GLF_IDENTITY((uvec4(workgroup_base + _GLF_struct_replacement_8._f1._f0.subgroup_id * _GLF_struct_replacement_17._f0.subgroup_size, 1u, ((1u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(atomicExchange(workgroup_id, workgroup_size)))), _GLF_IDENTITY(0u, uint(uint(0u))), 0u)), (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(atomicExchange(workgroup_id, workgroup_size)))), _GLF_IDENTITY(0u, uint(uint(0u))), 0u))) + 0u)))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u)), ((uvec4(workgroup_base + _GLF_struct_replacement_8._f1._f0.subgroup_id * _GLF_struct_replacement_17._f0.subgroup_size, 1u, ((1u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(atomicExchange(workgroup_id, workgroup_size)))), _GLF_IDENTITY(0u, uint(uint(0u))), 0u)), (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(atomicExchange(workgroup_id, workgroup_size)))), _GLF_IDENTITY(0u, uint(uint(0u))), 0u))) + 0u)))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u))) ^ uvec4(0u, 0u, 0u, 0u))) + uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) + _GLF_struct_replacement_12._f3._f4.subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), ! (! (bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(false, ! (! (false))), false)))))), true && ((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), ! (! (bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(false, ! (! (false))), false))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_8._f1._f0.subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_17._f0.subgroup_size, min(_GLF_struct_replacement_17._f0.subgroup_size, _GLF_struct_replacement_17._f0.subgroup_size)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_17._f0.subgroup_size, min(_GLF_struct_replacement_17._f0.subgroup_size, _GLF_struct_replacement_17._f0.subgroup_size)))), min(uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_17._f0.subgroup_size, min(_GLF_struct_replacement_17._f0.subgroup_size, _GLF_struct_replacement_17._f0.subgroup_size)))), uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_17._f0.subgroup_size, min(_GLF_struct_replacement_17._f0.subgroup_size, _GLF_struct_replacement_17._f0.subgroup_size))))))) + (_GLF_IDENTITY((_GLF_struct_replacement_12._f3._f4.subgroup_local_id + 1), ((_GLF_struct_replacement_12._f3._f4.subgroup_local_id + 1)) | ((_GLF_struct_replacement_12._f3._f4.subgroup_local_id + 1))) % _GLF_struct_replacement_17._f0.subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, min(0, 0))))) ^ (4), ((0 >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, min(0, 0))))) ^ (4)) | ((0 >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, min(0, 0))))) ^ (4)))), _GLF_IDENTITY(64, int(ivec4(64, (-10032 & 0), 0, _GLF_IDENTITY(0, _GLF_IDENTITY((0) << _GLF_IDENTITY(0, clamp(0, 0, 0)), min(_GLF_IDENTITY((0) << 0, ((0) << 0) >> 0), _GLF_IDENTITY((0) << 0, int(ivec2((0) << _GLF_IDENTITY(0, 0 + (0)), 0))))))))), 0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_struct_replacement_12._f3._f4.subgroup_local_id + 1 < _GLF_struct_replacement_17._f0.subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) || false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         return;
        }
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-61.12)), vec2(_GLF_FUZZED(-488.752), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), true)), bvec2(bvec3(bvec2(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), true)), false))))), false, true)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), true)), bvec2(bvec3(bvec2(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), true)), false))))), false, true)), true)))))).x > injectionSwitch.y)), true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), max(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)))), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))))) || false), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, false, true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, false, true))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, false, true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, false, true))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))))
    barrier();
   atomicStore(buf[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
}
