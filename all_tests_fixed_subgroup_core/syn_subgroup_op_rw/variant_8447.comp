#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false || (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(98.69), _GLF_FUZZED(35.92)), bvec2(false, false))).x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false, false))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false))), true, false)))) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bool(bool(false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), false || ((! (_GLF_DEAD(false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(false), true))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_DEAD(false), true))), false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false, (false) || false), true))))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), (! _GLF_IDENTITY((false), ((false)) || false)) && true), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), (! (false)) && true), false, false, true)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), (! _GLF_IDENTITY((false), ((false)) || false)) && true), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), (! (false)) && true), false, false, true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), ! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))) && true)))) || false)), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))), true, true, true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))), true && ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))), (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))) || false)))), bool(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))), true && ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))), (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))), true && ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))), (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))) || false)))), bool(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))), true && ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))), (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, (false) || false))) && true)))))), true && ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))) || false)))), bool(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, bool(bvec4(_GLF_IDENTITY((! (false)) && true, ((! (false)) && true) || false), false, true, false))))))))), true && ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, ((! (false)) && true) && true)))))), (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false)) && true)) || false)))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)))) && true))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) && true)))))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, cos(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))) > _GLF_IDENTITY(injectionSwitch.y, determinant(mat2(1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0)) * (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-7.3, 715.490)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ((_GLF_IDENTITY(true, true && (true)))) && true), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), bool(bvec3(! (_GLF_IDENTITY(true, true && (true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)) && true)))))), (! (bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), bool(bvec4(! (_GLF_IDENTITY(true, true && (true))), false, true, false))), (! (_GLF_IDENTITY(true, true && (true)))) || _GLF_IDENTITY(false, ! (! (false))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), ! (! (bool(bvec3(true, true, true))))))))))))) && true), ! (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_DEAD(false), false, true)))), _GLF_IDENTITY(bool(bvec3(! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false)), (bool(bvec3(! _GLF_IDENTITY((! (bool(bvec3(_GLF_DEAD(false), false, true)))), ! (! ((! (bool(bvec3(_GLF_DEAD(false), false, true))))))), true, false))) && true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((true ? (2.9 - 0.6) : -27.64)), _GLF_FUZZED(-28.26)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, injectionSwitch.x)) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), false || (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))))), false, true, true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false)))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bool(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, false))))) && true))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(-6.6, -72.20)) : mat2(1.0) * (injectionSwitch)))), injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5.7)), vec2(_GLF_FUZZED(5.0), (injectionSwitch)[1]), bvec2(false, true))).y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5.7)), vec2(_GLF_FUZZED(5.0), (injectionSwitch)[1]), bvec2(false, true))).y, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5.7)), vec2(_GLF_FUZZED(5.0), (injectionSwitch)[1]), bvec2(false, true))).y, 0.0, _GLF_IDENTITY(abs(1.0), (abs(1.0)) + 0.0), 1.0, 0.0, 1.0), mat3x2(mat3x2(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5.7)), vec2(_GLF_FUZZED(5.0), (injectionSwitch)[1]), bvec2(false, true))).y, 0.0, abs(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.5) : 1.0))), 1.0, 0.0, 1.0))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5.7)), vec2(_GLF_FUZZED(5.0), _GLF_IDENTITY((injectionSwitch), vec2(mat4(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), abs(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))[1]), bvec2(_GLF_IDENTITY(false, (false) || false), true))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5.7)), vec2(_GLF_FUZZED(5.0), _GLF_IDENTITY((injectionSwitch), vec2(mat4(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, abs(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec4(3158.1884, -778.489, -513.971, 4.0).y)), bool(false))), 0.0, 0.0, 1.0, 0.0)))[1]), bvec2(_GLF_IDENTITY(false, (false) || false), true))).y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-5.7, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -5.7 : _GLF_FUZZED(1746.1160))))), vec2(_GLF_FUZZED(5.0), (injectionSwitch)[1]), bvec2(false, true))).y)) && true))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             return;
            }
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED((mat2(6040.4127, 7611.1965, 48.64, -3.7) * vec2(-156.614, 9.6))))).x > injectionSwitch.y))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))), mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(2.9, clamp(2.9, 2.9, _GLF_IDENTITY(2.9, float(mat4x2(2.9, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5.9)), vec2(_GLF_FUZZED(342.412), _GLF_IDENTITY((injectionSwitch)[1], 0.0 + _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))) * vec2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.8)), float(1.0), bool(true))))), 1.0))[_GLF_IDENTITY(1, max(1, 1))]), ((_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))) * vec2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.8)), float(1.0), bool(true))))), 1.0))[_GLF_IDENTITY(1, max(1, 1))])) / 1.0))), bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec3(bool(true), true, false)), ! (! _GLF_IDENTITY((bool(bvec3(bool(true), true, false))), true && ((bool(bvec3(bool(true), true, false))))))))), (bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec3(bool(true), true, false)), ! (! (bool(_GLF_IDENTITY(bvec3(bool(true), true, false), bvec3(bvec4(bvec3(bool(true), true, false), true)))))))))) && true))))))[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) / 1)], _GLF_FUZZED(1.6)), bvec2(true, false))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.9), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(vec3(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(_GLF_IDENTITY(985.782, mix(float(_GLF_FUZZED((true ? -4.1 : -9220.8410))), float(985.782), bool(true))))), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-42.30, 0.0 + (_GLF_IDENTITY(-42.30, mix(float(_GLF_FUZZED(-214.316)), float(-42.30), bool(true))))), clamp(-42.30, _GLF_IDENTITY(-42.30, clamp(-42.30, -42.30, -42.30)), -42.30))), ((injectionSwitch))[1]), bvec2(false, true))), 0.0)))[1], (false ? _GLF_FUZZED(_GLF_IDENTITY(5812.3289, (true ? _GLF_IDENTITY(5812.3289, clamp(5812.3289, 5812.3289, 5812.3289)) : _GLF_FUZZED(-74.73)))) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(vec3(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(985.782)), vec2(_GLF_FUZZED(-42.30), ((injectionSwitch))[1]), bvec2(false, true))), 0.0))), (_GLF_IDENTITY((injectionSwitch), vec2(vec3(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(((injectionSwitch)), mix(vec2(_GLF_FUZZED(119.608), _GLF_FUZZED(-2.9)), vec2((((injectionSwitch)))[0], (((injectionSwitch)))[1]), bvec2(true, true)))[0], _GLF_FUZZED(985.782)), vec2(_GLF_FUZZED(-42.30), _GLF_IDENTITY(((injectionSwitch))[1], clamp(((injectionSwitch))[1], ((injectionSwitch))[1], ((injectionSwitch))[1]))), bvec2(false, true))), 0.0)))) + vec2(0.0, 0.0))[1]))), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, determinant(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-798.514)), float(1.0), bool(true))), 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 1.0), (true ? vec2(0.0, 1.0) : _GLF_FUZZED(injectionSwitch)))), mix(float(float(_GLF_IDENTITY(vec2(0.0, 1.0), (true ? vec2(0.0, 1.0) : _GLF_FUZZED(injectionSwitch))))), float(_GLF_FUZZED(-4083.1248)), bool(false)))), 0.0, 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4(987.934, -9.2, -45.71, -2328.7465, -1.8, 3.5, 9.2, 2.1, -10.55, 5605.3745, 9.1, 72.82, 8.4, 56.54, _GLF_IDENTITY(4040.9309, mix(float(_GLF_IDENTITY(4040.9309, (4040.9309) - 0.0)), float(_GLF_FUZZED((6423.6650))), bool(false))), -77.32)) : mat4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5.9)), vec2(_GLF_IDENTITY(_GLF_FUZZED(342.412), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(342.412, float(mat3x2(_GLF_IDENTITY(342.412, (342.412) + _GLF_IDENTITY(0.0, 0.0 + (0.0))), cos(0.0), 0.0, log(1.0), 1.0, sqrt(0.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_FUZZED(_GLF_IDENTITY(342.412, float(mat3x2(_GLF_IDENTITY(342.412, (342.412) + _GLF_IDENTITY(0.0, 0.0 + (0.0))), cos(0.0), 0.0, log(1.0), 1.0, sqrt(0.0))))), 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, 0.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0)))), (mat3(_GLF_FUZZED(_GLF_IDENTITY(342.412, float(mat3x2(_GLF_IDENTITY(342.412, (342.412) + _GLF_IDENTITY(0.0, 0.0 + (0.0))), cos(0.0), 0.0, log(1.0), 1.0, sqrt(0.0))))), 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, 0.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (float(_GLF_IDENTITY(mat3(_GLF_FUZZED(_GLF_IDENTITY(342.412, float(mat3x2(_GLF_IDENTITY(342.412, (342.412) + _GLF_IDENTITY(0.0, 0.0 + (0.0))), cos(0.0), 0.0, log(1.0), 1.0, sqrt(0.0))))), 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, 0.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0)))), (mat3(_GLF_FUZZED(_GLF_IDENTITY(342.412, float(mat3x2(_GLF_IDENTITY(342.412, (342.412) + _GLF_IDENTITY(0.0, 0.0 + (0.0))), cos(0.0), 0.0, log(1.0), 1.0, sqrt(0.0))))), 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, 0.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) / 1.0))) - log(1.0)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], mix(_GLF_IDENTITY(float(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1]))), vec2(_GLF_FUZZED(-9.3), _GLF_FUZZED(-956.185)), bvec2(false, false)))[1]), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.1) : _GLF_IDENTITY(float(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1]))), vec2(_GLF_FUZZED(-9.3), _GLF_FUZZED(-956.185)), bvec2(false, false)))[1]), clamp(float(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1]))), vec2(_GLF_FUZZED(-9.3), _GLF_FUZZED(-956.185)), bvec2(false, false)))[1]), float(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1]))), vec2(_GLF_FUZZED(-9.3), _GLF_FUZZED(-956.185)), bvec2(false, false)))[1]), float(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1]))), vec2(_GLF_FUZZED(-9.3), _GLF_FUZZED(-956.185)), bvec2(false, false)))[1]))))), float(_GLF_FUZZED(-2.1)), bool(false))))), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(5.8))) + ((injectionSwitch)[1]))), bvec2(_GLF_IDENTITY(false, false || (false)), true))))[_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))), ((_GLF_IDENTITY(0, (0) | (0)))) | (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))), min((_GLF_IDENTITY(0, (0) | (0))), (_GLF_IDENTITY(0, (0) | (0))))))) / 1)], _GLF_FUZZED(1.6)), bvec2(true, false))).y)))))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) / 1u, max(_GLF_IDENTITY((workgroup_size) / 1u, min((workgroup_size) / 1u, (workgroup_size) / 1u)), (workgroup_size) / 1u))) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, sqrt(1.0), 0.0)), min(float(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, sqrt(1.0), 0.0)), float(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, sqrt(1.0), 0.0))))) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << _GLF_IDENTITY(0u, _GLF_IDENTITY(max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, (true) || false))), false || (bool(! (_GLF_IDENTITY(true, (true) || false)))))), bool(bvec2(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, (true) || false))), false || (bool(! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), false || ((true))) || false)))))), false))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)), ! (! ((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)))))), _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) || false) || (bool(! (_GLF_IDENTITY(true, (true) || false)))), (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) || false, bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) || false, bool(bool((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) || false))))))) || (bool(! (_GLF_IDENTITY(true, (true) || false))))) || false))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, (true) || false)))))), false || (bool(! (_GLF_IDENTITY(true, (true) || false)))))), false)), (bool(bvec2(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, (true) || false)))))), false || (bool(! (_GLF_IDENTITY(true, (true) || false)))))), false))) || false)))))))) ? 0u : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(0u, (0u) | (0u))), clamp(max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) || false, ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) || false) || false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, (true) || false))), false || (bool(! (_GLF_IDENTITY(true, (true) || false)))))), bool(bvec2(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, (true) || false))), false || (bool(! (_GLF_IDENTITY(true, (true) || false)))))), false))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)), ! (! ((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)))))), _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) || false) || (bool(! (_GLF_IDENTITY(true, (true) || false)))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))) && true)) || false) || (bool(! (_GLF_IDENTITY(true, (true) || false))))) || false))), bool(bvec2(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, (true) || false))), false || (bool(! (_GLF_IDENTITY(true, (true) || false)))))), false))))))))) ? 0u : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u)), (0u) | (0u))), max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, (true) || false))), false || (bool(! (_GLF_IDENTITY(true, (true) || false)))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, (true) || false))), ! (_GLF_IDENTITY(! (bool(! (_GLF_IDENTITY(true, (true) || false)))), true && (! (bool(! (_GLF_IDENTITY(true, (true) || false)))))))), false || (_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, (true) || false))), (bool(! (_GLF_IDENTITY(true, (true) || false)))) && true)))), false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)), ! (! ((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) || false) || (bool(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))), (true) || false)))))), ! (! (bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)), ! (! ((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) || false) || (bool(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))), (true) || false))))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, (true) || false))), false || (_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, (true) || false))), ! (_GLF_IDENTITY(! (bool(! (_GLF_IDENTITY(true, (true) || false)))), (! (bool(! (_GLF_IDENTITY(true, (true) || false))))) && true)))))), false))))), bool(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)), ! (! ((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) || false) || (bool(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))), (true) || false)))))), ! (! (bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)), ! (! ((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) || false) || (bool(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))), (true) || false))))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, (true) || false))), false || (_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, (true) || false))), ! (_GLF_IDENTITY(! (bool(! (_GLF_IDENTITY(true, (true) || false)))), (! (bool(! (_GLF_IDENTITY(true, (true) || false))))) && true)))))), false))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)), ! (! ((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) || false) || (bool(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))), (true) || false)))))), ! (! (bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)), ! (! ((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) || false) || (bool(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))), (true) || false))))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, (true) || false))), false || (_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, (true) || false))), ! (_GLF_IDENTITY(! (bool(! (_GLF_IDENTITY(true, (true) || false)))), (! (bool(! (_GLF_IDENTITY(true, (true) || false))))) && true)))))), false)))))))), false))))))) ? 0u : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(0u, (0u) | (0u))), max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (_GLF_IDENTITY(true, (true) && true))))))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (! ((true))))))) || false))), false || (bool(! (_GLF_IDENTITY(true, (true) || false)))))), bool(bvec2(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, (true) || false))), false || (bool(! (_GLF_IDENTITY(true, (true) || false)))))), false))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)), ! (! ((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) || false) || (bool(! (_GLF_IDENTITY(true, (true) || false)))))), bool(bvec2(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, (true) || false))), false || (bool(! (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))))))), false))))))))) ? _GLF_IDENTITY(0u, max(0u, 0u)) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(0u, (0u) | (0u))))))), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bvec3(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true && (true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false || (bool(bvec4(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bvec3(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true && (true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false, false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1))), (_GLF_IDENTITY((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1))), 0 ^ ((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1)))))) << 0) | (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1)))), 1, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(ivec3(0, 1, (0 | 0)))), 0))))))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (1), min(0 ^ (1), _GLF_IDENTITY(0 ^ (1), (0 ^ (1)) << 0)))), 1)), 1, _GLF_IDENTITY(0, _GLF_IDENTITY(max(_GLF_IDENTITY(0, int(ivec3(0, 1, (0 | 0)))), 0), (max(_GLF_IDENTITY(0, int(ivec3(0, 1, (0 | 0)))), 0)) ^ 0))))), min(_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (1), min(0 ^ (1), _GLF_IDENTITY(0 ^ (1), (0 ^ (1)) << 0)))), 1)), 1, _GLF_IDENTITY(0, _GLF_IDENTITY(max(_GLF_IDENTITY(0, int(ivec3(0, 1, (0 | 0)))), 0), (max(_GLF_IDENTITY(0, int(ivec3(0, 1, (0 | 0)))), 0)) ^ 0))))), _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (1), min(0 ^ (1), _GLF_IDENTITY(0 ^ (1), (0 ^ (1)) << 0)))), 1)), 1, _GLF_IDENTITY(0, _GLF_IDENTITY(max(_GLF_IDENTITY(0, int(ivec3(0, 1, (0 | 0)))), 0), (max(_GLF_IDENTITY(0, int(ivec3(0, 1, (0 | 0)))), 0)) ^ 0)))))))), ~ (~ ((1) | (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), 0 ^ (1)), 1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1)), ~ (~ (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1))))), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1))))) ^ ((0 | 0) | 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1)), 1, 0, 1)), (true ? int(ivec4(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1)), 1, 0, 1)) : _GLF_FUZZED(-68919))))) << 0), 1, _GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, int(ivec3(0, 1, 0))), (0 >> _GLF_IDENTITY(int(1), int(1))), 0, (0 ^ 1)), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, int(ivec3(0, 1, 0))), (0 >> _GLF_IDENTITY(int(1), int(1))), 0, (0 ^ 1)), (ivec4(_GLF_IDENTITY(0, int(ivec3(0, 1, 0))), (0 >> _GLF_IDENTITY(int(1), int(1))), 0, (0 ^ 1))) - ivec4(0, 0, 0, 0))) >> ivec4(0, 0, 0, 0))), (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, int(ivec3(0, 1, 0))), (0 >> _GLF_IDENTITY(int(1), int(1))), 0, (0 ^ 1)), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, int(ivec3(0, 1, 0))), (0 >> _GLF_IDENTITY(int(1), int(1))), 0, (0 ^ 1)), (ivec4(_GLF_IDENTITY(0, int(ivec3(0, 1, 0))), (0 >> _GLF_IDENTITY(int(1), int(1))), 0, (0 ^ 1))) - ivec4(0, 0, 0, 0))) >> ivec4(0, 0, 0, 0)))) | 0)), _GLF_IDENTITY(1, (1) | 0), (0 | 0)))), 0)), (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(ivec3(0, _GLF_IDENTITY(1, (1) | 0), (0 | 0)))), 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(ivec3(0, _GLF_IDENTITY(1, (1) | 0), (0 | 0)))), 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(ivec3(0, _GLF_IDENTITY(1, (1) | 0), (0 | 0)))), 0)), ~ (~ (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(ivec3(0, _GLF_IDENTITY(1, (1) | 0), (0 | 0)))), 0)))))) + 0)))), (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), 0 ^ (1)), 1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1)), ~ (~ (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1))))), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1))))) ^ ((0 | 0) | 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1)), 1, 0, 1)), (true ? int(ivec4(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1)), 1, 0, 1)) : _GLF_FUZZED(-68919))))) << 0), 1, _GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, int(ivec3(0, 1, 0))), (0 >> _GLF_IDENTITY(int(1), int(1))), 0, (0 ^ 1)), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, int(ivec3(0, 1, 0))), (0 >> _GLF_IDENTITY(int(1), int(1))), 0, (0 ^ 1)), (ivec4(_GLF_IDENTITY(0, int(ivec3(0, 1, 0))), (0 >> _GLF_IDENTITY(int(1), int(1))), 0, (0 ^ 1))) - ivec4(0, 0, 0, 0))) >> ivec4(0, 0, 0, 0))), (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, int(ivec3(0, 1, 0))), (0 >> _GLF_IDENTITY(int(1), int(1))), 0, (0 ^ 1)), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, int(ivec3(0, 1, 0))), (0 >> _GLF_IDENTITY(int(1), int(1))), 0, (0 ^ 1)), (ivec4(_GLF_IDENTITY(0, int(ivec3(0, 1, 0))), (0 >> _GLF_IDENTITY(int(1), int(1))), 0, (0 ^ 1))) - ivec4(0, 0, 0, 0))) >> ivec4(0, 0, 0, 0)))) | 0)), _GLF_IDENTITY(1, (1) | 0), (0 | 0)))), 0)), (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(ivec3(0, _GLF_IDENTITY(1, (1) | 0), (0 | 0)))), 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(ivec3(0, _GLF_IDENTITY(1, (1) | 0), (0 | 0)))), 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(ivec3(0, _GLF_IDENTITY(1, (1) | 0), (0 | 0)))), 0)), ~ (~ (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(ivec3(0, _GLF_IDENTITY(1, (1) | 0), (0 | 0)))), 0)))))) + 0))))) << ivec3(0, 0, 0)))))))))) + 0), min(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (1) | (_GLF_IDENTITY(1, int(ivec3(1, 1, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ ((1)), int(_GLF_IDENTITY(int(~ ((1))), max(int(~ ((1))), int(~ ((1))))))))) | 0)))))), (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), int(ivec3(1, _GLF_IDENTITY(1, (1) | 0), 0)))))))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), (! (false)) || false)), true && ((_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), (! (false)) || false)))))) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)))) > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x, mix(float(_GLF_FUZZED(vec2(2.2, 7424.8383).x)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), bool(true))), injectionSwitch.x)))) > injectionSwitch.y)) && true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(11563u))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)))) > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(vec2(2.2, 7424.8383).x)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), bool(true))), injectionSwitch.x)))) > injectionSwitch.y)) && true, ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(vec2(2.2, 7424.8383).x)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), bool(true))), injectionSwitch.x)))) > injectionSwitch.y)) && true, ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(vec2(2.2, 7424.8383).x)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), bool(true))), injectionSwitch.x)))) > injectionSwitch.y)) && true), ! (! (! (((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, tan(0.0), 1.0))), min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(vec2(2.2, 7424.8383).x)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), bool(true))), injectionSwitch.x)))) > injectionSwitch.y)) && true)))))))))))))), ! (! (bool(bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(11563u))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)))) > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(vec2(2.2, 7424.8383).x)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), bool(true))), injectionSwitch.x)))) > injectionSwitch.y)) && true, ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(vec2(2.2, 7424.8383).x)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), bool(true))), injectionSwitch.x)))) > injectionSwitch.y)) && true, ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(vec2(2.2, 7424.8383).x)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), bool(true))), injectionSwitch.x)))) > injectionSwitch.y)) && true), ! (! (! (((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, tan(0.0), 1.0))), min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(vec2(2.2, 7424.8383).x)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), bool(true))), injectionSwitch.x)))) > injectionSwitch.y)) && true))))))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)) && (bool(bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)))))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[1])).x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x, mix(float(_GLF_FUZZED(vec2(2.2, 7424.8383).x)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), bool(true))), injectionSwitch.x)))) > injectionSwitch.y)) && true)))))))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-40.93)))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true, false))))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(read, clamp(read, read, _GLF_IDENTITY(read, clamp(read, _GLF_IDENTITY(read, 0u | (read)), _GLF_IDENTITY(read, (read) / 1u))))), clamp(_GLF_IDENTITY(read, clamp(read, read, read)), _GLF_IDENTITY(read, clamp(read, read, read)), _GLF_IDENTITY(read, clamp(read, read, read)))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec3(false || (false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))) && true)) || (false), false, true), false))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))))))))
            barrier();
           return;
          }
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-500.639)), bool(false))))), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 0.0))), injectionSwitch)).y), ((injectionSwitch.x > injectionSwitch.y)) || false)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))) && true))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.0, -6760.8908)))), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 0.0))), injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(3.3) : 1.0, round(length(normalize(1.0))) * (false ? _GLF_FUZZED(3.3) : 1.0)))))), 0.0, 0.0, 0.0, log(1.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x), sqrt(0.0))), _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), abs(1.0), 0.0))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), (_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), 0.0))) - 0.0), 0.0, determinant(mat4(0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(3.3) : 1.0, min(false ? _GLF_FUZZED(3.3) : 1.0, _GLF_IDENTITY(false ? _GLF_FUZZED(3.3) : 1.0, clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(3.3) : 1.0, 1.0 * (false ? _GLF_FUZZED(3.3) : 1.0)), false ? _GLF_FUZZED(3.3) : 1.0, false ? _GLF_FUZZED(3.3) : 1.0)))))))), 0.0, 0.0, 0.0, log(1.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), (clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))) - vec2(0.0, 0.0))).x), sqrt(0.0))), _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), abs(1.0), 0.0))).x > injectionSwitch.y))), true && _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.3) : 1.0)))), 0.0, 0.0, 0.0, log(1.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x), sqrt(0.0))), _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), abs(1.0), 0.0))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0, determinant(mat4(0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) - 0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.3) : 1.0)))), 0.0, 0.0, 0.0, log(1.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))))).x), sqrt(0.0))), _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), abs(1.0), 0.0))).x > injectionSwitch.y)))), (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.3) : 1.0)))), 0.0, 0.0, 0.0, log(1.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x), sqrt(0.0))), _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), abs(1.0), 0.0))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0, determinant(mat4(0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) - 0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.3) : 1.0)))), 0.0, 0.0, 0.0, log(1.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))))).x), sqrt(0.0))), _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), abs(1.0), 0.0))).x > injectionSwitch.y))))) && true)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), vec2(vec3(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), 0.0)))).x, injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(mat3(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), vec2(vec3(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), 0.0)))).x, injectionSwitch.x, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, 1.0, 0.0)), clamp(float(mat3(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), vec2(vec3(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), 0.0)))).x, injectionSwitch.x, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat3(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), vec2(vec3(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), 0.0)))).x, injectionSwitch.x, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, 1.0, 0.0)), (float(mat3(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), vec2(vec3(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), 0.0)))).x, injectionSwitch.x, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, 1.0, 0.0))) - 0.0), float(mat3(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), vec2(vec3(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), 0.0)))).x, injectionSwitch.x, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, 1.0, 0.0)))))), float(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), 1.0, tan(0.0), _GLF_IDENTITY(round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * round(length(normalize(1.0)))))))), mix(float(round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * round(length(normalize(1.0))))))))), float(_GLF_FUZZED(-50.66)), bool(false))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(5.8, (5.8) / 1.0)))), 0.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), float(_GLF_FUZZED(841.925)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), float(_GLF_FUZZED(841.925)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), determinant(mat4(1.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, exp(0.0), sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0, sin(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)), _GLF_IDENTITY(float(mat2x4(float(mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), float(_GLF_FUZZED(841.925)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), determinant(mat4(1.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, exp(0.0), sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0, sin(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)), sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 1.0 * (float(mat2x4(float(mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), float(_GLF_FUZZED(841.925)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), determinant(mat4(1.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, exp(0.0), sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0, sin(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)), sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-9.3)), _GLF_FUZZED(-21.80)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), clamp(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), clamp(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((injectionSwitch)[0], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], (injectionSwitch)[1]))), bvec2(true, true))).x), (clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(-9.3, clamp(-9.3, _GLF_IDENTITY(-9.3, 0.0 + (-9.3)), -9.3))), clamp((-9.3), _GLF_IDENTITY((-9.3), mix(float(_GLF_FUZZED(-1784.3682)), float((-9.3)), bool(true))), (-9.3)))), _GLF_FUZZED(-21.80)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x)) - sin(tan(0.0)))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-624.203))), _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)))))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), vec2(vec3(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), 0.0)))).x, injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(mat3(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), vec2(vec3(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), 0.0)))).x, injectionSwitch.x, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, 1.0, 0.0)), clamp(float(mat3(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), vec2(vec3(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), 0.0)))).x, injectionSwitch.x, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat3(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), vec2(vec3(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), 0.0)))).x, injectionSwitch.x, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, 1.0, 0.0)), (float(mat3(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), vec2(vec3(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), 0.0)))).x, injectionSwitch.x, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, 1.0, 0.0))) - 0.0), float(mat3(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), vec2(vec3(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), 0.0)))).x, injectionSwitch.x, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, 1.0, 0.0)))))), float(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), 1.0, tan(0.0), _GLF_IDENTITY(round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * round(length(normalize(1.0)))))))), mix(float(round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * round(length(normalize(1.0))))))))), float(_GLF_FUZZED(-50.66)), bool(false))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(5.8, (5.8) / 1.0)))), 0.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), float(_GLF_FUZZED(841.925)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), float(_GLF_FUZZED(841.925)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), determinant(mat4(1.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, exp(0.0), sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0, sin(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)), _GLF_IDENTITY(float(mat2x4(float(mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), float(_GLF_FUZZED(841.925)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), determinant(mat4(1.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, exp(0.0), sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0, sin(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)), sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 1.0 * (float(mat2x4(float(mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), float(_GLF_FUZZED(841.925)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), determinant(mat4(1.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, exp(0.0), sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0, sin(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)), sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-9.3)), _GLF_FUZZED(-21.80)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), clamp(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), clamp(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((injectionSwitch)[0], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], (injectionSwitch)[1]))), bvec2(true, true))).x), (clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(-9.3, clamp(-9.3, _GLF_IDENTITY(-9.3, 0.0 + (-9.3)), -9.3))), clamp((-9.3), _GLF_IDENTITY((-9.3), mix(float(_GLF_FUZZED(-1784.3682)), float((-9.3)), bool(true))), (-9.3)))), _GLF_FUZZED(-21.80)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x)) - sin(tan(0.0)))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-624.203))), _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)))))) > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - sin(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (injectionSwitch) * _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, float(vec2(_GLF_IDENTITY((1.0) / 1.0, clamp((1.0) / 1.0, (1.0) / 1.0, (1.0) / 1.0)), 0.0))))), vec2(vec3(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), 0.0))), clamp(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, float(vec2(_GLF_IDENTITY((1.0) / 1.0, clamp((1.0) / 1.0, (1.0) / 1.0, (1.0) / 1.0)), 0.0))))), vec2(vec3(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, float(vec2(_GLF_IDENTITY((1.0) / 1.0, clamp((1.0) / 1.0, (1.0) / 1.0, (1.0) / 1.0)), 0.0))))), vec2(vec3(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), 0.0))), vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, float(vec2(_GLF_IDENTITY((1.0) / 1.0, clamp((1.0) / 1.0, (1.0) / 1.0, (1.0) / 1.0)), 0.0))))), vec2(vec3(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), 0.0))), 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, float(vec2(_GLF_IDENTITY((1.0) / 1.0, clamp((1.0) / 1.0, (1.0) / 1.0, (1.0) / 1.0)), 0.0))))), vec2(vec3(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), 0.0)))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(8027.9456, -982.896))))).x, injectionSwitch.x)), float(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x))))), mix(float(_GLF_FUZZED(94.01)), float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x))))), float(mat4((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x))))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))) * 1.0)), bool(true)))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0)))) + vec2(0.0, 0.0)).x)), 1.0, tan(0.0), round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * round(length(normalize(1.0)))))))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.7)), float(1.0), bool(true))), 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(5.8), mix(float(_GLF_FUZZED(7.0)), float(_GLF_IDENTITY(_GLF_FUZZED(5.8), min(_GLF_FUZZED(5.8), _GLF_FUZZED(5.8)))), bool(true)))), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, cos(0.0), cos(0.0)))))) ? 1.0 : _GLF_FUZZED(5.8)), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))) ? 1.0 : _GLF_FUZZED(5.8)), max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.8) : 1.0)) : _GLF_FUZZED(5.8)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(5.8)))), mix(float((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(5.8))), float(_GLF_FUZZED(-7732.3556)), bool(false))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5574.4914)), bool(false))), 1.0, 0.0, exp(0.0), sqrt(0.0), sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(3988.9996)), float(float(mat3x4(_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-90.87) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-8.1) : injectionSwitch.y)))))) ? 1.0 : _GLF_FUZZED(5.8)), 0.0 + (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) ? 1.0 : _GLF_FUZZED(5.8)), mix(_GLF_IDENTITY(float((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(5.8))), mix(float(_GLF_FUZZED(-7.0)), float(_GLF_IDENTITY(float((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(5.8))), mix(float(_GLF_FUZZED(187.853)), float(float((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(5.8)))), bool(true)))), bool(true))), float(_GLF_FUZZED(-7732.3556)), bool(false))))), 1.0, 1.0, 0.0, exp(0.0), sqrt(0.0), sqrt(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0))), bool(true))))), 0.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), (false ? _GLF_FUZZED(3611.7737) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), tan(determinant(mat2(0.0, 0.0, 0.0, 0.0))), determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, abs(1.0))))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), tan(determinant(mat2(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (true ? determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(65.34))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, abs(1.0))))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), tan(determinant(mat2(0.0, 0.0, 0.0, 0.0))), determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, abs(1.0))))))), float(_GLF_FUZZED(841.925)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ 8.9)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.1)), bvec2(true, false))).x) + 0.0), float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))))), tan(determinant(mat2(0.0, 0.0, 0.0, 0.0))), determinant(mat3(1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, abs(1.0))))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), tan(determinant(mat2(0.0, 0.0, 0.0, 0.0))), determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 1.0)), 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, abs(1.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), tan(determinant(mat2(0.0, 0.0, 0.0, 0.0))), determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 1.0)), 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, abs(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), tan(determinant(mat2(0.0, 0.0, 0.0, 0.0))), determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 1.0)), 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, abs(1.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), tan(determinant(mat2(0.0, 0.0, 0.0, 0.0))), determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 1.0)), 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, abs(1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), tan(determinant(mat2(0.0, 0.0, 0.0, 0.0))), determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 1.0)), 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, abs(1.0))))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), tan(determinant(mat2(0.0, 0.0, 0.0, 0.0))), determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 1.0)), 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, abs(1.0))))))))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), tan(determinant(mat2(0.0, 0.0, 0.0, 0.0))), determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, sqrt(0.0), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, sqrt(0.0), 1.0, abs(1.0))))))), float(_GLF_FUZZED(_GLF_IDENTITY(841.925, 1.0 * (_GLF_IDENTITY(841.925, float(mat3(841.925, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) + 0.0)))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-9.3)), _GLF_FUZZED(-21.80)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, true && (true))))).x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, exp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))), _GLF_IDENTITY(dot(vec4(determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (vec4(0.0, 0.0, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0))) + vec4(0.0, 0.0, 0.0, 0.0)))), 1.0, 1.0, 0.0, 0.0, 0.0, tan(0.0)), mat3(mat3x4(mat3(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(21.77)), float(exp(0.0)), bool(true))), _GLF_IDENTITY(dot(vec4(determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 0.0, tan(0.0))))))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), 1.0 * (clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))))) > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, true && (true)))) && (_GLF_DEAD(false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[virtual_gid], read, 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(int(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-58406))))))) + 0), max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(int(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-58406))))))) + 0), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(int(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-58406))))))) + 0))));
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) - log(vec2(1.0, 1.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
}
