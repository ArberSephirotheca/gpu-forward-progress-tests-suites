#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_20 {
 mat3 _f0;
 bvec2 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_19 {
 float _f0;
 int _f1;
 ivec2 _f2;
 uvec3 _f3;
 int _f4;
} ;

struct _GLF_struct_18 {
 bvec3 _f0;
 ivec4 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_17 {
 ivec2 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_21 {
 _GLF_struct_17 _f0;
 _GLF_struct_18 _f1;
 _GLF_struct_19 _f2;
 uint subgroup_size;
 _GLF_struct_20 _f3;
} ;

struct _GLF_struct_22 {
 mat3x2 _f0;
 _GLF_struct_21 _f1;
 vec2 _f2;
 uvec3 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_14 {
 mat4x3 _f0;
 bvec3 _f1;
 bvec2 _f2;
 ivec3 _f3;
 bvec3 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_15 {
 mat3x4 _f0;
 mat2 _f1;
 _GLF_struct_14 _f2;
} ;

struct _GLF_struct_12 {
 mat2x4 _f0;
 mat2x3 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_11 {
 uint _f0;
 ivec4 _f1;
 mat3x2 _f2;
 uint _f3;
 uvec4 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_10 {
 ivec2 _f0;
 uint workgroup_id;
 mat3 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_9 {
 mat3x2 _f0;
 mat3 _f1;
 mat2 _f2;
 mat3x4 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_8 {
 uvec3 _f0;
 bool _f1;
} ;

struct _GLF_struct_13 {
 _GLF_struct_8 _f0;
 _GLF_struct_9 _f1;
 mat4x3 _f2;
 _GLF_struct_10 _f3;
 _GLF_struct_11 _f4;
 _GLF_struct_12 _f5;
} ;

struct _GLF_struct_6 {
 vec3 _f0;
 mat3x4 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_7 {
 ivec2 _f0;
 _GLF_struct_6 _f1;
 mat4x2 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_4 {
 mat4 _f0;
 mat4 _f1;
 uvec2 _f2;
 uvec3 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_3 {
 uint _f0;
} ;

struct _GLF_struct_2 {
 mat3x4 _f0;
 mat3x2 _f1;
 mat3 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_5 {
 _GLF_struct_2 _f0;
 bvec3 _f1;
 mat4x2 _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_4 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_0 {
 mat3x4 _f0;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
 mat2x3 _f1;
 int _f2;
 _GLF_struct_0 _f3;
} ;

struct _GLF_struct_16 {
 _GLF_struct_1 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_13 _f3;
 _GLF_struct_15 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 1.0, 1.0)), min(_GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 1.0, 1.0)), (false ? _GLF_FUZZED(-6.8) : float(vec4(injectionSwitch.x, 0.0, 1.0, 1.0)))), float(vec4(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(68.33))), 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))))))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(vec3(0.0, 0.0, 0.0)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y)), true)), bool(bool(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 0.0)), mix(vec2((vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 0.0)))[0], _GLF_FUZZED(-76.35)), vec2(_GLF_FUZZED((0.3 + 6.0)), (vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 0.0)))[1]), bvec2(false, true)))).x > injectionSwitch.y)), true))))))) || false)))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4.1, 599.477)) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(vec3(0.0, 0.2, 2.6).tp))).x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(log(1.0), clamp(log(1.0), log(1.0), log(1.0))), 1.0, 0.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))))).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0))).x > injectionSwitch.y)), true)), bool(_GLF_IDENTITY(bool(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0)), (vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(-5604.0062))))), true))), ! (! (_GLF_IDENTITY(bool(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0)), (vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(-5604.0062))))), true))), (bool(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0)), (vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(-5604.0062))))), true)))) || false)))))))) || false))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), bool(bvec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(cosh(vec2(-47.71, -7.9))) : injectionSwitch)).y)), true))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, log(1.0), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y)), true)), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 0.0)), mix(vec2((vec2(mat3(injectionSwitch, 1.0, log(1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - length(vec2(0.0, 0.0))), 0.0, 1.0, 0.0, 0.0)))[0], _GLF_FUZZED(-76.35)), vec2(_GLF_FUZZED((0.3 + 6.0)), (vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 0.0)))[1]), bvec2(false, true)))).x > injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 0.0)), mix(vec2((vec2(mat3(injectionSwitch, 1.0, log(1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - length(vec2(0.0, 0.0))), 0.0, 1.0, 0.0, 0.0)))[0], _GLF_FUZZED(-76.35)), vec2(_GLF_FUZZED((0.3 + 6.0)), (vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 0.0)))[1]), bvec2(false, true)))).x > injectionSwitch.y)), true)), bvec2(bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 0.0)), mix(vec2((vec2(mat3(injectionSwitch, 1.0, log(1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - length(vec2(0.0, 0.0))), 0.0, 1.0, 0.0, 0.0)))[0], _GLF_FUZZED(-76.35)), vec2(_GLF_FUZZED((0.3 + 6.0)), (vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 0.0)))[1]), bvec2(false, true)))).x > injectionSwitch.y)), true))))))))))))) || false)))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4.1, 599.477)) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(vec3(0.0, 0.2, 2.6).tp))).x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(log(1.0), clamp(log(1.0), log(1.0), log(1.0))), 1.0, 0.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))))).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0))).x > injectionSwitch.y)), true)), bool(_GLF_IDENTITY(bool(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0)), (vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(-5604.0062))))), true))), ! (! (_GLF_IDENTITY(bool(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0)), (vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(-5604.0062))))), true))), (bool(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0)), (vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(-5604.0062))))), true)))) || false)))))))) || false))), true && (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(log(1.0), clamp(log(1.0), log(1.0), log(1.0))), 1.0, 0.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(log(1.0), clamp(log(1.0), log(1.0), log(1.0))), 1.0, 0.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))))).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - 0.0))), 1.0, 0.0, 0.0))).x > injectionSwitch.y)), true)), bool(_GLF_IDENTITY(bool(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0)), (vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(-5604.0062))))), true))), ! (! (_GLF_IDENTITY(bool(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, log(1.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9493.7780))), clamp(_GLF_IDENTITY(1.0, (1.0) + log(1.0)), 1.0, 1.0)), 0.0, 0.0)), (vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(-5604.0062))))), true))), (bool(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0)), (vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(-5604.0062))), true && (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, log(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0), (mat3(injectionSwitch, 1.0, log(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.8)), bool(false))) : _GLF_FUZZED(5.4)))))) - vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(-5604.0062))))))), true)))) || false)))))))) || false))))))) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, false, false, true)), false || (bool(bvec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, false, false, true))))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0)))) / vec2(1.0, 1.0)).y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(209.993)), vec2(_GLF_FUZZED(-9099.6385), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-50.37) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-50.37) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true, false))), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true, false))), false))), false), false))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_22 _GLF_struct_replacement_22 = _GLF_struct_22(mat3x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 0.0)) : _GLF_FUZZED(1.3))))), _GLF_struct_21(_GLF_struct_17(_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (0) - ((0 | 0) << _GLF_IDENTITY(int(4), int(4)))), 0), max(ivec2(_GLF_IDENTITY(0, (0) - ((0 | 0) << _GLF_IDENTITY(int(4), int(4)))), 0), ivec2(_GLF_IDENTITY(0, (0) - ((0 | 0) << _GLF_IDENTITY(int(4), int(4)))), 0))) ^ (ivec2(1))), _GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), _GLF_struct_18(bvec3(true), ivec4(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(69668))) : _GLF_FUZZED(70683)))), mat3x2(1.0)), _GLF_struct_19(1.0, 1, ivec2(1), _GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u)))), 1), gl_SubgroupSize, _GLF_struct_20(mat3(1.0), bvec2(true), mat4x2(_GLF_IDENTITY(1.0, 0.0 + (1.0))))), vec2(1.0), uvec3(1u), ivec3(1));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(_GLF_IDENTITY(6.2, max(6.2, 6.2)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4905.5463), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7912.2305)), bvec2(true, false)))) / vec2(1.0, 1.0))) * mat2(1.0)).y)), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0)))), injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0)))), injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0)))), injectionSwitch.y)))))))))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false) && true)) && true)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), bool(bvec3(_GLF_DEAD(false), false, true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(_GLF_struct_1(uvec2(1u), mat2x3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true) ? _GLF_FUZZED(182.824) : 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(sign(-4.4)) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))))), 1, _GLF_struct_0(mat3x4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(65.47)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(65.47)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(65.47)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), float(mat3(min(1.0, 1.0), sqrt(1.0), 0.0, 1.0, determinant(mat2(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0))))))))), _GLF_struct_5(_GLF_struct_2(mat3x4(1.0), mat3x2(1.0), mat3(1.0), vec3(1.0)), bvec3(true), mat4x2(1.0), _GLF_struct_3(1u), _GLF_struct_4(mat4(1.0), mat4(1.0), _GLF_IDENTITY(uvec2(1u), min(uvec2(1u), uvec2(1u))), uvec3(1u), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), (ivec3(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), 1)))) / 1), 1)))) ^ _GLF_IDENTITY(ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(ivec3(582, -3791, -38424)) : ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), (ivec3(1)) + ivec3(0, 0, 0)), (ivec3(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 1))), clamp(_GLF_IDENTITY(1, int(ivec2(1, 1))), _GLF_IDENTITY(1, int(ivec2(1, 1))), _GLF_IDENTITY(1, int(ivec2(1, 1)))))) / 1), 1)))) ^ ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), injectionSwitch.x))), max(_GLF_IDENTITY(ivec3(1), _GLF_IDENTITY((ivec3(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 1)))) / 1), 1)))) ^ ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), clamp((ivec3(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 1)))) / 1), 1)))) ^ ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (ivec3(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 1)))) / 1), 1)))) ^ ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (ivec3(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 1)))) / 1), 1)))) ^ ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(ivec3(1), (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, _GLF_IDENTITY(1, ~ (~ (1))))))) / 1), 1)))) ^ ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) / ivec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), bvec4(true)), _GLF_struct_7(ivec2(1), _GLF_struct_6(_GLF_IDENTITY(vec3(1.0), clamp(vec3(1.0), vec3(1.0), vec3(1.0))), mat3x4(1.0), mat4x2(1.0)), mat4x2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), vec3(1.0)), _GLF_struct_13(_GLF_struct_8(uvec3(1u), true), _GLF_struct_9(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((+ _GLF_IDENTITY(4.4, clamp(4.4, 4.4, _GLF_IDENTITY(4.4, abs(0.0) + (4.4))))))), bool(false))), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED((+ _GLF_IDENTITY(4.4, clamp(4.4, 4.4, _GLF_IDENTITY(4.4, abs(0.0) + (4.4))))))), bool(false)), max(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED((+ _GLF_IDENTITY(4.4, clamp(4.4, 4.4, _GLF_IDENTITY(4.4, abs(0.0) + (4.4))))))), bool(false)), 0.0 + (mix(float(1.0), float(_GLF_FUZZED((+ _GLF_IDENTITY(4.4, clamp(4.4, 4.4, _GLF_IDENTITY(4.4, abs(0.0) + (4.4))))))), bool(false)))), mix(float(1.0), float(_GLF_FUZZED((+ _GLF_IDENTITY(4.4, clamp(4.4, 4.4, _GLF_IDENTITY(4.4, abs(0.0) + (4.4))))))), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(1.0), float(_GLF_FUZZED((+ _GLF_IDENTITY(4.4, clamp(4.4, 4.4, _GLF_IDENTITY(4.4, abs(0.0) + (4.4))))))), bool(false))), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-649.110)), bool(false))) : _GLF_FUZZED(faceforward(-708.622, 6921.7533, -6877.2458))))), float(_GLF_IDENTITY(_GLF_FUZZED((+ _GLF_IDENTITY(4.4, clamp(4.4, 4.4, _GLF_IDENTITY(4.4, abs(0.0) + (4.4)))))), (true ? _GLF_FUZZED((_GLF_IDENTITY(+ _GLF_IDENTITY(4.4, clamp(4.4, 4.4, _GLF_IDENTITY(4.4, abs(0.0) + (4.4)))), (true ? + _GLF_IDENTITY(4.4, clamp(4.4, 4.4, _GLF_IDENTITY(4.4, abs(0.0) + (4.4)))) : _GLF_FUZZED(refract(5362.4634, -3750.4143, -6118.3682)))))) : _GLF_FUZZED(7.0)))), bool(false)))))), mat3(1.0), mat2(1.0), mat3x4(1.0), mat2x3(1.0)), mat4x3(1.0), _GLF_struct_10(ivec2(1), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) / _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u | (((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))))), uint(uvec2(uint(uvec3(1u, 0u, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) | (_GLF_IDENTITY(6u, max(6u, 6u))))), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), (1u ^ 1u)))))), (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x))) | (gl_WorkGroupID.x))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x))) | (gl_WorkGroupID.x))), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x))) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)).x))) : _GLF_FUZZED(num_workgroup)))) - (0u | 0u)))), ((_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x))) | (gl_WorkGroupID.x))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x))) | (gl_WorkGroupID.x))), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x))) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)).x))) : _GLF_FUZZED(num_workgroup)))) - (0u | 0u))))) | ((_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x))) | (gl_WorkGroupID.x))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x))) | (gl_WorkGroupID.x))), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x))) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)).x))) : _GLF_FUZZED(num_workgroup)))) - (0u | 0u)))))) << 0u)) / 1u), mat3(1.0), mat3x4(1.0)), _GLF_struct_11(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) - _GLF_IDENTITY(0u, max(0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) | 0u))), (1u) - 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)), subgroup_id))) : 1u))) - 0u), max(_GLF_IDENTITY(1u, (1u) - 0u), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), uint(uvec2((1u), 1u))) - 0u))))), ivec4(1), mat3x2(1.0), 1u, _GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, min(0u, 0u)) ^ (1u)), (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, min(0u, 0u)) ^ (1u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), min(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) + 0u))))), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false) ? _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> (101879u & 0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * 1u) ^ (1u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) * 1u) ^ (1u), 1u, 1u), (uvec3(_GLF_IDENTITY(0u, (0u) * 1u) ^ (1u), 1u, 1u)) >> uvec3(0u, 0u, 0u)))), max(_GLF_IDENTITY(0u, (0u) * 1u) ^ (1u), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * 1u), (_GLF_IDENTITY(0u, (0u) * 1u)) * 1u) ^ (1u)))) : _GLF_FUZZED(num_workgroup)))), uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u ^ (uint(uint(1u)))))) ^ 0u)), max(0u ^ (1u), 0u ^ _GLF_IDENTITY((1u), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY((1u), ~ (~ ((1u)))))))), uint(uvec4(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u ^ (uint(uint(1u)))))) ^ 0u)), max(0u ^ (1u), 0u ^ _GLF_IDENTITY((1u), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY((1u), ~ (~ ((1u)))))))), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), uvec3(1u)), _GLF_struct_12(mat2x4(1.0), mat2x3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(98.02) : _GLF_IDENTITY(1.0, (1.0) / abs(1.0))))), _GLF_IDENTITY(uvec2(1u), min(_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))), _GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | (uvec2(1u))))))), _GLF_struct_15(mat3x4(1.0), mat2(1.0), _GLF_struct_14(mat4x3(1.0), bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), ((true)) || false)))) || false)))), bvec2(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), ivec3(1), _GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), true))), true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), true))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), true))), true)))), true))))))), mat4x3(1.0))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) || _GLF_IDENTITY(false, (false) && true))), false, true))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), true && (false)), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))), bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))), false)))) && true, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false)), false, true)), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))), false, true))))))), bool(bool(! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))))))), bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false)), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))), false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bool(bool(! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))))))), bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))), false))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bool(bool(! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))))))), bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))), false)))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bool(bool(! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))))))), bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))), false))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bool(bool(! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))))))), bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))), false)))))) || false), bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bool(bool(! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))))))), bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))), false))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bool(bool(! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))))))), bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))), false)))))) || false), true, false, true)))) || false))) && true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (bool(true)) || false)), false || (bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))))) && (false)), false, true))))), bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, bool(bool(false))), true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true), true, false))))), false, true))))), false)))) && true, true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec2(true && (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true))))), bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))), false)))) && true, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false)), false, true)), ! _GLF_IDENTITY((! (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (false)), false, _GLF_IDENTITY(true, true && (true)))))), bool(bvec3(_GLF_IDENTITY((! (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (false)), false, _GLF_IDENTITY(true, true && (true)))))), ((! (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (false)), false, _GLF_IDENTITY(true, true && (true))))))) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, _GLF_IDENTITY(true, (true) && true))), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), false, true))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, _GLF_IDENTITY(true, (true) && true))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true), false))))))), false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false)), true && (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false)))))))))))) && true))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bool(bool(! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, (false) || false), true)))))))), bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, (false) && true), true))), (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))) && true)))))), false)))) && true)))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (! (bool(bvec4(true, true, false, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (! (bool(bvec4(true, true, false, false))))), bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (! (bool(bvec4(true, true, false, false))))), false, false, false)))) && true)), (injectionSwitch.x < injectionSwitch.y)), true, true)))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) || _GLF_IDENTITY(false, (false) && true))), false, true))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), true && (false)), false, true)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))), bool(bvec3(! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))), true, true)))))))), bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))), false)))) && true, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false)), false, true)), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! _GLF_IDENTITY((! (true && (false))), false || ((! (true && (false))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), ! (! (_GLF_IDENTITY(true && (false), ! (! (true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))))))))), false, true))))))), bool(bool(! (! (bool(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)))))))), bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY((true && (false)), ! (! ((true && (false))))) || false)), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))), false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))), ! (! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))))), bool(bool(! (! (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (true && (false)))), false, true)))))))), bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))), false))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bool(bool(! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))))))), bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))), false)))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bool(bool(_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bool(bvec4(! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))), false)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))), false)), (bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))), false))) || false)))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bool(bool(! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), true)), false))))))), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))), false)))))) || false), bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))))), bool(bool(! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))))))), bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))), false))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bool(bool(! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))))))), bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))), false)))))) || false), true, false, true)))) || false))) && true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec4((false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (bool(true)) || false)), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), (bool(bvec4(true, true, false, false))) && true))), (bool(true)) || false))))) && (false)), false, true))))), bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), bool(bvec4((false), false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))), _GLF_IDENTITY(false, bool(bool(false))), true)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true), true, false))))), false, true))), true && (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true), true, false))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))) && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true), true, false)))))))), false, true))))))), false)))) && true, true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec2(true && (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true))))), bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))), false)))) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec2(true && (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true))))), bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))), false)))) && true, true && ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), ! _GLF_IDENTITY((! (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec2(true && (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true)))), false || ((! (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec2(true && (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))), false))), (! (bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))), false)))) && true))))) && true)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), bool(bool(_GLF_IDENTITY(true && (false), ! (! (true && (false))))))))))), false, true)), ! _GLF_IDENTITY((! (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))) && (false)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), _GLF_IDENTITY(true, true && (true)))))), bool(bvec3(_GLF_IDENTITY((! (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (false)), false, _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), true && (_GLF_IDENTITY(true && (true), true && (true && (true)))))))))), ((! (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (false)), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_IDENTITY(true, true && (true))))))) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true))), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))) && true))), false, true))))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true))), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))) && true))), false, true))))), false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true))), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))) && true))), false, true))))), false), false)), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, _GLF_IDENTITY(true, (true) && true))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), false || (! (false)))))))), (false) && true))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, true)))))))))), false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))) > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false)), true && (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false)))))))))))) && true))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), ! (_GLF_IDENTITY(! (! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))), ! (! (! (! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))))))))), bool(bool(! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, (false) || false), true)))))))), bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) && (false)), _GLF_IDENTITY(false, (false) && true), true)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) && (false)), _GLF_IDENTITY(false, (false) && true), true)), false || (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) && (false)), _GLF_IDENTITY(false, (false) && true), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))) && true)))))), false)))) && true)))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (! (bool(bvec4(true, true, false, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (! (bool(bvec4(true, true, false, false))))), bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (! (bool(bvec4(true, true, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || (! (_GLF_IDENTITY(false, true && (false)))))))))))), false, false, false)))) && true)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), (float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))) / 1.0)))), true, true)))), (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
          return;
         barrier();
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_16._f3._f3.workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(min(subgroup_id, subgroup_id), _GLF_IDENTITY((_GLF_IDENTITY(min(subgroup_id, subgroup_id), (min(subgroup_id, subgroup_id)) | (min(subgroup_id, subgroup_id)))) | (min(subgroup_id, subgroup_id)), (_GLF_IDENTITY((_GLF_IDENTITY(min(subgroup_id, subgroup_id), (min(subgroup_id, subgroup_id)) | (min(subgroup_id, subgroup_id)))) | (min(subgroup_id, subgroup_id)), max((_GLF_IDENTITY(min(subgroup_id, subgroup_id), (min(subgroup_id, subgroup_id)) | (min(subgroup_id, subgroup_id)))) | (min(subgroup_id, subgroup_id)), (_GLF_IDENTITY(min(subgroup_id, subgroup_id), (min(subgroup_id, subgroup_id)) | (min(subgroup_id, subgroup_id)))) | (min(subgroup_id, subgroup_id))))) | ((_GLF_IDENTITY(min(subgroup_id, subgroup_id), (min(subgroup_id, subgroup_id)) | (min(subgroup_id, subgroup_id)))) | (min(subgroup_id, subgroup_id))))), (_GLF_IDENTITY(_GLF_IDENTITY(min(subgroup_id, subgroup_id), _GLF_IDENTITY((_GLF_IDENTITY(min(subgroup_id, subgroup_id), (min(subgroup_id, subgroup_id)) | (min(subgroup_id, subgroup_id)))) | (min(subgroup_id, subgroup_id)), (_GLF_IDENTITY((_GLF_IDENTITY(min(subgroup_id, subgroup_id), (min(subgroup_id, subgroup_id)) | (min(subgroup_id, subgroup_id)))) | (min(subgroup_id, subgroup_id)), max((_GLF_IDENTITY(min(subgroup_id, subgroup_id), (min(subgroup_id, subgroup_id)) | (min(subgroup_id, subgroup_id)))) | (min(subgroup_id, subgroup_id)), (_GLF_IDENTITY(min(subgroup_id, subgroup_id), (min(subgroup_id, subgroup_id)) | (min(subgroup_id, subgroup_id)))) | (min(subgroup_id, subgroup_id))))) | ((_GLF_IDENTITY(min(subgroup_id, subgroup_id), (min(subgroup_id, subgroup_id)) | (min(subgroup_id, subgroup_id)))) | (min(subgroup_id, subgroup_id))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(min(subgroup_id, subgroup_id), _GLF_IDENTITY((_GLF_IDENTITY(min(subgroup_id, subgroup_id), (min(subgroup_id, subgroup_id)) | (min(subgroup_id, subgroup_id)))) | (min(subgroup_id, subgroup_id)), (_GLF_IDENTITY((_GLF_IDENTITY(min(subgroup_id, subgroup_id), (min(subgroup_id, subgroup_id)) | (min(subgroup_id, subgroup_id)))) | (min(subgroup_id, subgroup_id)), max((_GLF_IDENTITY(min(subgroup_id, subgroup_id), (min(subgroup_id, subgroup_id)) | (min(subgroup_id, subgroup_id)))) | (min(subgroup_id, subgroup_id)), (_GLF_IDENTITY(min(subgroup_id, subgroup_id), (min(subgroup_id, subgroup_id)) | (min(subgroup_id, subgroup_id)))) | (min(subgroup_id, subgroup_id))))) | ((_GLF_IDENTITY(min(subgroup_id, subgroup_id), (min(subgroup_id, subgroup_id)) | (min(subgroup_id, subgroup_id)))) | (min(subgroup_id, subgroup_id))))), 0u, 1u, 1u), (uvec4(_GLF_IDENTITY(min(subgroup_id, subgroup_id), _GLF_IDENTITY((_GLF_IDENTITY(min(subgroup_id, subgroup_id), (min(subgroup_id, subgroup_id)) | (min(subgroup_id, subgroup_id)))) | (min(subgroup_id, subgroup_id)), (_GLF_IDENTITY((_GLF_IDENTITY(min(subgroup_id, subgroup_id), (min(subgroup_id, subgroup_id)) | (min(subgroup_id, subgroup_id)))) | (min(subgroup_id, subgroup_id)), max((_GLF_IDENTITY(min(subgroup_id, subgroup_id), (min(subgroup_id, subgroup_id)) | (min(subgroup_id, subgroup_id)))) | (min(subgroup_id, subgroup_id)), (_GLF_IDENTITY(min(subgroup_id, subgroup_id), (min(subgroup_id, subgroup_id)) | (min(subgroup_id, subgroup_id)))) | (min(subgroup_id, subgroup_id))))) | ((_GLF_IDENTITY(min(subgroup_id, subgroup_id), (min(subgroup_id, subgroup_id)) | (min(subgroup_id, subgroup_id)))) | (min(subgroup_id, subgroup_id))))), 0u, 1u, 1u)) | (uvec4(_GLF_IDENTITY(min(subgroup_id, subgroup_id), _GLF_IDENTITY((_GLF_IDENTITY(min(subgroup_id, subgroup_id), (min(subgroup_id, subgroup_id)) | (min(subgroup_id, subgroup_id)))) | (min(subgroup_id, subgroup_id)), (_GLF_IDENTITY((_GLF_IDENTITY(min(subgroup_id, subgroup_id), (min(subgroup_id, subgroup_id)) | (min(subgroup_id, subgroup_id)))) | (min(subgroup_id, subgroup_id)), max((_GLF_IDENTITY(min(subgroup_id, subgroup_id), (min(subgroup_id, subgroup_id)) | (min(subgroup_id, subgroup_id)))) | (min(subgroup_id, subgroup_id)), (_GLF_IDENTITY(min(subgroup_id, subgroup_id), (min(subgroup_id, subgroup_id)) | (min(subgroup_id, subgroup_id)))) | (min(subgroup_id, subgroup_id))))) | ((_GLF_IDENTITY(min(subgroup_id, subgroup_id), (min(subgroup_id, subgroup_id)) | (min(subgroup_id, subgroup_id)))) | (min(subgroup_id, subgroup_id))))), 0u, 1u, 1u)))))) | (0u | (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))) * _GLF_struct_replacement_22._f1.subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(atomicCompSwap(num_workgroup, subgroup_local_id, subgroup_id)) : _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))) * _GLF_struct_replacement_22._f1.subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) | (1))) % _GLF_struct_replacement_22._f1.subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, min((4) - 0, (4) - 0))), 64, 0);
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))), ((_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))) && true)))))))))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) + _GLF_IDENTITY(1, (1) | (1)) < _GLF_struct_replacement_22._f1.subgroup_size)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), uvec3(0u, _GLF_IDENTITY(0u, (0u) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uvec3(uint(8u), 0u, 0u)))))), 0u) ^ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), max(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), 0u | ((virtual_gid))) / 1u), uint(uvec2(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), 1u))))), 1u, 0u)))))], _GLF_IDENTITY(read, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(read, ~ (~ (_GLF_IDENTITY(read, (read) | _GLF_IDENTITY(0u, (0u) << 0u))))), 0u ^ (read)))), 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, false, true))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(914.079)), vec2(_GLF_FUZZED(float(bvec2(true, false).y)), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)).y, mix(float(_GLF_FUZZED(2.2)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (true ? _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), vec2(1.0, 1.0) * ((injectionSwitch) / vec2(1.0, 1.0))) : _GLF_FUZZED(injectionSwitch)))).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y) + 0.0))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || false))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || false)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) && true))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), true, false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false))))))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, false, true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, false || (false))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || false)))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))))))))
            return;
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-6942.3527) : _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))))).y, false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, log(1.0)))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   atomicStore(buf[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
  }
}
